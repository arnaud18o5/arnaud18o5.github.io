{"ast":null,"code":"var _jsxFileName = \"/Users/arnaudavocatgros/Documents/GitHub/AR_VR_Map_WebSite/src/ItemViewer.js\";\n// copier coller code iss tracker\nimport * as THREE from \"../node_modules/three/build/three.js\";\nimport { GLTFLoader } from '../node_modules/three/examples/jsm/loaders/GLTFLoader.js';\nimport { RoughnessMipmapper } from '../node_modules/three/examples/jsm/utils/RoughnessMipmapper.js';\nimport Stats from './Stats';\nimport React, { Component } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { OrbitControls } from \"../node_modules/three/examples/jsm/controls/OrbitControls\";\nimport { Object3D } from \"three\";\nimport { useEffect, useRef, useState } from \"react\";\nexport default function ItemViewer(props) {\n  const mountRef = useRef(null);\n  const [pos, setPos] = useState(false);\n  useEffect(() => {\n    let pointclouds;\n    const scene = new THREE.Scene();\n    scene.background = new THREE.Color(0xffffff);\n    scene.add(new THREE.AxesHelper(5));\n    const raycaster = new THREE.Raycaster();\n    const mouse = new THREE.Vector2();\n    let x = 0;\n    let y = 0;\n    let z = 0;\n    const camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000);\n    camera.position.z = 20;\n    const renderer = new THREE.WebGLRenderer();\n    renderer.setSize(window.innerWidth * 0.3, window.innerHeight * 0.3);\n    mountRef.current.appendChild(renderer.domElement);\n    const controls = new OrbitControls(camera, renderer.domElement);\n    controls.enableDamping = true;\n    const loader = new GLTFLoader();\n    loader.load(\"https://lauriaristorage.blob.core.windows.net/\" + props.link, function (gltf) {\n      gltf.scene.name = \"gltf\";\n      var box = new THREE.Box3().setFromObject(gltf.scene);\n      scene.add(gltf.scene);\n    }, xhr => {\n      console.log(xhr.loaded / xhr.total * 100 + '% loaded');\n    }, error => {\n      console.log(error);\n    });\n    const mgeo = new THREE.SphereGeometry(1, 1);\n    const mmat = new THREE.MeshStandardMaterial({\n      color: 0xFFFFFF\n    });\n    const moon = new THREE.Mesh(mgeo, mmat);\n    moon.name = \"intersection\";\n    const pointLight = new THREE.PointLight(0xFFFFFF);\n    pointLight.position.set(0, 0, 0);\n    const ambientLight = new THREE.AmbientLight(0xFFFFFF);\n    ambientLight.intensity = 3;\n    scene.add(ambientLight);\n    window.addEventListener('resize', onWindowResize, false);\n\n    function onWindowResize() {\n      camera.aspect = window.innerWidth / window.innerHeight;\n      camera.updateProjectionMatrix();\n      renderer.setSize(window.innerWidth * 0.3, window.innerHeight * 0.3);\n      render();\n    }\n\n    window.addEventListener('pointermove', onMouseMove);\n\n    function onMouseMove(event) {\n      let posDiv = mountRef.current.getBoundingClientRect();\n\n      if (event.clientX > posDiv.x && event.clientX < posDiv.x + posDiv.width && event.clientY > posDiv.y && event.clientY < posDiv.y + posDiv.height) {\n        mouse.x = (event.clientX - posDiv.x) / posDiv.width * 2 - 1;\n        mouse.y = -((event.clientY - posDiv.y) / posDiv.height) * 2 + 1;\n      }\n    }\n\n    const stats = Stats();\n    document.body.appendChild(stats.dom);\n\n    function animate() {\n      requestAnimationFrame(animate);\n      controls.update();\n      render();\n      stats.update();\n    }\n\n    function render() {\n      raycaster.setFromCamera(mouse, camera); // calculate objects intersecting the picking ray\n\n      const point = new Object3D();\n      const intersects = raycaster.intersectObjects(scene.children);\n\n      for (let i = 0; i < intersects.length; i++) {\n        // You can do anything you want here, this is just an example to make the hovered object transparent\n        //console.log(intersects[i].object.parent.name); \n        const newMaterial = intersects[i].object.material.clone();\n        newMaterial.transparent = false;\n        newMaterial.opacity = 0.5;\n        intersects[i].object.material = newMaterial;\n\n        if (i === 2) {\n          x = intersects[2].point.x;\n          y = intersects[2].point.y;\n          z = intersects[2].point.z;\n        }\n      }\n\n      window.addEventListener(\"click\", onClick, false);\n\n      function onClick(event) {\n        let posDiv = mountRef.current.getBoundingClientRect();\n\n        if (event.clientX > posDiv.x && event.clientX < posDiv.x + posDiv.width && event.clientY > posDiv.y && event.clientY < posDiv.y + posDiv.height) {\n          let position = moon.position;\n          props.click(position.x, position.y, position.z);\n        }\n      }\n\n      moon.position.set(x, y, z);\n      scene.add(moon);\n      renderer.render(scene, camera);\n    }\n\n    window.addEventListener('resize', onWindowResize, false);\n\n    function onWindowResize() {\n      camera.aspect = window.innerWidth / window.innerHeight;\n      camera.updateProjectionMatrix();\n      renderer.setSize(window.innerWidth, window.innerHeight);\n      render();\n    }\n\n    animate();\n    return () => mountRef.current.removeChild(renderer.domElement);\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    ref: mountRef,\n    style: {\n      cursor: \"none\"\n    },\n    id: \"3d\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 9\n    }\n  });\n} //580","map":{"version":3,"sources":["/Users/arnaudavocatgros/Documents/GitHub/AR_VR_Map_WebSite/src/ItemViewer.js"],"names":["THREE","GLTFLoader","RoughnessMipmapper","Stats","React","Component","ReactDOM","OrbitControls","Object3D","useEffect","useRef","useState","ItemViewer","props","mountRef","pos","setPos","pointclouds","scene","Scene","background","Color","add","AxesHelper","raycaster","Raycaster","mouse","Vector2","x","y","z","camera","PerspectiveCamera","window","innerWidth","innerHeight","position","renderer","WebGLRenderer","setSize","current","appendChild","domElement","controls","enableDamping","loader","load","link","gltf","name","box","Box3","setFromObject","xhr","console","log","loaded","total","error","mgeo","SphereGeometry","mmat","MeshStandardMaterial","color","moon","Mesh","pointLight","PointLight","set","ambientLight","AmbientLight","intensity","addEventListener","onWindowResize","aspect","updateProjectionMatrix","render","onMouseMove","event","posDiv","getBoundingClientRect","clientX","width","clientY","height","stats","document","body","dom","animate","requestAnimationFrame","update","setFromCamera","point","intersects","intersectObjects","children","i","length","newMaterial","object","material","clone","transparent","opacity","onClick","click","removeChild","cursor"],"mappings":"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","sourcesContent":["// copier coller code iss tracker\nimport * as THREE from \"../node_modules/three/build/three.js\";\nimport {GLTFLoader} from '../node_modules/three/examples/jsm/loaders/GLTFLoader.js'\n\nimport { RoughnessMipmapper } from '../node_modules/three/examples/jsm/utils/RoughnessMipmapper.js';\nimport Stats from './Stats';\n\nimport React, { Component } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport {OrbitControls} from \"../node_modules/three/examples/jsm/controls/OrbitControls\"\nimport { Object3D } from \"three\";\nimport { useEffect, useRef, useState } from \"react\";\n\n\nexport default function ItemViewer(props){\n    const mountRef = useRef(null);\n    const [pos, setPos] = useState(false);\n\n    useEffect(() => {\n    let pointclouds;\nconst scene = new THREE.Scene()\nscene.background = new THREE.Color( 0xffffff );\nscene.add(new THREE.AxesHelper(5))\nconst raycaster = new THREE.Raycaster();\nconst mouse = new THREE.Vector2();\nlet x = 0\nlet y = 0;\nlet z = 0;\n\nconst camera = new THREE.PerspectiveCamera(\n    75,\n    (window.innerWidth) / (window.innerHeight),\n    0.1,\n    1000\n)\ncamera.position.z = 20\nconst renderer = new THREE.WebGLRenderer()\nrenderer.setSize(window.innerWidth *0.3, window.innerHeight * 0.3)\nmountRef.current.appendChild( renderer.domElement );\nconst controls = new OrbitControls(camera, renderer.domElement)\ncontrols.enableDamping = true\n\n    \nconst loader = new GLTFLoader()\nloader.load(\n    \"https://lauriaristorage.blob.core.windows.net/\" + props.link,\n    function (gltf) {\n        gltf.scene.name = \"gltf\"\n        var box = new THREE.Box3().setFromObject(gltf.scene);\n        scene.add(gltf.scene)\n    },\n    (xhr) => {\n        console.log((xhr.loaded / xhr.total) * 100 + '% loaded')\n    },\n    (error) => {\n        console.log(error)\n    }\n)\nconst mgeo = new THREE.SphereGeometry(1,1);\n  const mmat = new THREE.MeshStandardMaterial({color: 0xFFFFFF});\n  const moon = new THREE.Mesh(mgeo,mmat);\n  moon.name = \"intersection\";\nconst pointLight = new THREE.PointLight(0xFFFFFF);\n    pointLight.position.set(0,0,0);\n    const ambientLight = new THREE.AmbientLight(0xFFFFFF);\n    ambientLight.intensity = 3;\n    scene.add( ambientLight)\nwindow.addEventListener('resize', onWindowResize, false)\nfunction onWindowResize() {\n    camera.aspect = window.innerWidth  / (window.innerHeight)\n    camera.updateProjectionMatrix()\n    renderer.setSize(window.innerWidth *0.3, window.innerHeight*0.3)\n    render()\n}\nwindow.addEventListener('pointermove', onMouseMove);\n\nfunction onMouseMove(event){\n    let posDiv = mountRef.current.getBoundingClientRect();\n    if(event.clientX > posDiv.x && event.clientX < posDiv.x + posDiv.width && event.clientY > posDiv.y && event.clientY < posDiv.y + posDiv.height){\n        mouse.x = ( (event.clientX - posDiv.x) / posDiv.width ) * 2 - 1;\n        mouse.y = - (( event.clientY - posDiv.y) / posDiv.height ) * 2 + 1;\n    }\n  \n}\nconst stats = Stats()\ndocument.body.appendChild(stats.dom)\n\nfunction animate() {\n    requestAnimationFrame(animate)\n\n    controls.update()\n\n    render()\n\n    stats.update()\n}\n\nfunction render() {\n  raycaster.setFromCamera( mouse, camera);\n\n\t// calculate objects intersecting the picking ray\n\n\n  const point = new Object3D();\n  const intersects = raycaster.intersectObjects( scene.children );\n  for (let i = 0; i < intersects.length; i++) {\n    // You can do anything you want here, this is just an example to make the hovered object transparent\n    //console.log(intersects[i].object.parent.name); \n    const newMaterial = intersects[i].object.material.clone();\n    newMaterial.transparent = false;\n    newMaterial.opacity = 0.5;\n    intersects[i].object.material = newMaterial;\n    if(i === 2){\n      x = intersects[2].point.x;\n      y = intersects[2].point.y;\n      z = intersects[2].point.z;\n    }\n     \n\n   \n    \n  }\n\n  window.addEventListener(\"click\", onClick, false);\n\n  function onClick(event){\n        let posDiv = mountRef.current.getBoundingClientRect();\n        if(event.clientX > posDiv.x && event.clientX < posDiv.x + posDiv.width && event.clientY > posDiv.y && event.clientY < posDiv.y + posDiv.height){\n          let position = moon.position;\n          props.click(position.x, position.y, position.z);\n        }\n    \n  }\n  \n  \nmoon.position.set(x,y,z);\n  scene.add(moon);\n    renderer.render(scene, camera)\n}\n\nwindow.addEventListener('resize', onWindowResize, false)\nfunction onWindowResize() {\n    camera.aspect = window.innerWidth / window.innerHeight\n    camera.updateProjectionMatrix()\n    renderer.setSize(window.innerWidth, window.innerHeight)\n    render()\n}\n\n\nanimate()\n\nreturn () => mountRef.current.removeChild( renderer.domElement);\n    }, [])\n    \n    \n\n    return (\n        <div ref={mountRef} style={{cursor: \"none\"}}id=\"3d\">\n        </div>\n    )\n  \n}\n\n//580"]},"metadata":{},"sourceType":"module"}