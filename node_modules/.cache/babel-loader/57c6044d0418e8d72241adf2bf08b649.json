{"ast":null,"code":"var _jsxFileName = \"/Users/arnaudavocatgros/Documents/GitHub/AR_VR_Map_WebSite/src/ItemViewer.js\";\n// copier coller code iss tracker\nimport * as THREE from \"../node_modules/three/build/three.js\";\nimport { GLTFLoader } from '../node_modules/three/examples/jsm/loaders/GLTFLoader.js';\nimport { RoughnessMipmapper } from '../node_modules/three/examples/jsm/utils/RoughnessMipmapper.js';\nimport Stats from './Stats';\nimport React, { Component } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { OrbitControls } from \"../node_modules/three/examples/jsm/controls/OrbitControls\";\nimport { Object3D } from \"three\";\nimport { useEffect, useRef } from \"react\";\nexport default function ItemViewer(props) {\n  const mountRef = useRef(null);\n  useEffect(() => {\n    let pointclouds;\n    const scene = new THREE.Scene();\n    scene.add(new THREE.AxesHelper(5));\n    const raycaster = new THREE.Raycaster();\n    const mouse = new THREE.Vector2();\n    let x = 0;\n    let y = 0;\n    let z = 0;\n    const camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000);\n    camera.position.z = 2;\n    const renderer = new THREE.WebGLRenderer();\n    renderer.setSize(window.innerWidth, window.innerHeight);\n    mountRef.current.appendChild(renderer.domElement);\n    const controls = new OrbitControls(camera, renderer.domElement);\n    controls.enableDamping = true;\n    const loader = new GLTFLoader();\n    loader.load(\"https://lauriaristorage.blob.core.windows.net/\" + props.link, function (gltf) {\n      gltf.scene.name = \"gltf\";\n      var box = new THREE.Box3().setFromObject(gltf.scene);\n      console.log(box.min, box.max);\n      scene.add(gltf.scene);\n    }, xhr => {\n      console.log(xhr.loaded / xhr.total * 100 + '% loaded');\n    }, error => {\n      console.log(error);\n    });\n    const mgeo = new THREE.SphereGeometry(1, 1);\n    const mmat = new THREE.MeshStandardMaterial({\n      color: 0xFFFFFF\n    });\n    const moon = new THREE.Mesh(mgeo, mmat);\n    moon.name = \"intersection\";\n    const pointLight = new THREE.PointLight(0xFFFFFF);\n    pointLight.position.set(0, 0, 0);\n    const ambientLight = new THREE.AmbientLight(0xFFFFFF);\n    scene.add(ambientLight);\n    window.addEventListener('resize', onWindowResize, false);\n\n    function onWindowResize() {\n      camera.aspect = window.innerWidth / window.innerHeight;\n      camera.updateProjectionMatrix();\n      renderer.setSize(window.innerWidth, window.innerHeight);\n      render();\n    }\n\n    window.addEventListener('pointermove', onMouseMove);\n\n    function onMouseMove(event) {\n      mouse.x = event.clientX / window.innerWidth * 2 - 1;\n      mouse.y = -(event.clientY / window.innerHeight) * 2 + 1;\n    }\n\n    const stats = Stats();\n    document.body.appendChild(stats.dom);\n\n    function animate() {\n      requestAnimationFrame(animate);\n      controls.update();\n      render();\n      stats.update();\n    }\n\n    function render() {\n      raycaster.setFromCamera(mouse, camera); // calculate objects intersecting the picking ray\n\n      const point = new Object3D();\n      const intersects = raycaster.intersectObjects(scene.children);\n\n      for (let i = 0; i < intersects.length; i++) {\n        // You can do anything you want here, this is just an example to make the hovered object transparent\n        //console.log(intersects[i].object.parent.name); \n        const newMaterial = intersects[i].object.material.clone();\n        newMaterial.transparent = false;\n        newMaterial.opacity = 0.5;\n        intersects[i].object.material = newMaterial;\n\n        if (i === 2) {\n          x = intersects[2].point.x;\n          y = intersects[2].point.y;\n          z = intersects[2].point.z;\n        }\n      }\n\n      window.addEventListener(\"click\", onClick);\n\n      function onClick(event) {\n        console.log(moon.position);\n      }\n\n      moon.position.set(x, y, z);\n      scene.add(moon);\n      renderer.render(scene, camera);\n    }\n\n    console.log(scene);\n    animate();\n    return () => mountRef.current.removeChild(renderer.domElement);\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    ref: mountRef,\n    style: {\n      width: \"30%\",\n      height: \"100%\"\n    },\n    id: \"3d\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 9\n    }\n  });\n}","map":{"version":3,"sources":["/Users/arnaudavocatgros/Documents/GitHub/AR_VR_Map_WebSite/src/ItemViewer.js"],"names":["THREE","GLTFLoader","RoughnessMipmapper","Stats","React","Component","ReactDOM","OrbitControls","Object3D","useEffect","useRef","ItemViewer","props","mountRef","pointclouds","scene","Scene","add","AxesHelper","raycaster","Raycaster","mouse","Vector2","x","y","z","camera","PerspectiveCamera","window","innerWidth","innerHeight","position","renderer","WebGLRenderer","setSize","current","appendChild","domElement","controls","enableDamping","loader","load","link","gltf","name","box","Box3","setFromObject","console","log","min","max","xhr","loaded","total","error","mgeo","SphereGeometry","mmat","MeshStandardMaterial","color","moon","Mesh","pointLight","PointLight","set","ambientLight","AmbientLight","addEventListener","onWindowResize","aspect","updateProjectionMatrix","render","onMouseMove","event","clientX","clientY","stats","document","body","dom","animate","requestAnimationFrame","update","setFromCamera","point","intersects","intersectObjects","children","i","length","newMaterial","object","material","clone","transparent","opacity","onClick","removeChild","width","height"],"mappings":"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","sourcesContent":["// copier coller code iss tracker\nimport * as THREE from \"../node_modules/three/build/three.js\";\nimport {GLTFLoader} from '../node_modules/three/examples/jsm/loaders/GLTFLoader.js'\n\nimport { RoughnessMipmapper } from '../node_modules/three/examples/jsm/utils/RoughnessMipmapper.js';\nimport Stats from './Stats';\n\nimport React, { Component } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport {OrbitControls} from \"../node_modules/three/examples/jsm/controls/OrbitControls\"\nimport { Object3D } from \"three\";\nimport { useEffect, useRef } from \"react\";\nexport default function ItemViewer(props){\n    const mountRef = useRef(null);\n\n    useEffect(() => {\n    let pointclouds;\nconst scene = new THREE.Scene()\nscene.add(new THREE.AxesHelper(5))\nconst raycaster = new THREE.Raycaster();\nconst mouse = new THREE.Vector2();\nlet x = 0\nlet y = 0;\nlet z = 0;\n\nconst camera = new THREE.PerspectiveCamera(\n    75,\n    window.innerWidth / window.innerHeight,\n    0.1,\n    1000\n)\ncamera.position.z = 2\nconst renderer = new THREE.WebGLRenderer()\nrenderer.setSize(window.innerWidth, window.innerHeight)\nmountRef.current.appendChild( renderer.domElement );\n\nconst controls = new OrbitControls(camera, renderer.domElement)\ncontrols.enableDamping = true\n\n    \nconst loader = new GLTFLoader()\nloader.load(\n    \"https://lauriaristorage.blob.core.windows.net/\" + props.link,\n    function (gltf) {\n        gltf.scene.name = \"gltf\"\n        var box = new THREE.Box3().setFromObject(gltf.scene);\n        console.log(box.min, box.max);\n        scene.add(gltf.scene)\n    },\n    (xhr) => {\n        console.log((xhr.loaded / xhr.total) * 100 + '% loaded')\n    },\n    (error) => {\n        console.log(error)\n    }\n)\nconst mgeo = new THREE.SphereGeometry(1,1);\n  const mmat = new THREE.MeshStandardMaterial({color: 0xFFFFFF});\n  const moon = new THREE.Mesh(mgeo,mmat);\n  moon.name = \"intersection\";\nconst pointLight = new THREE.PointLight(0xFFFFFF);\n    pointLight.position.set(0,0,0);\n    const ambientLight = new THREE.AmbientLight(0xFFFFFF);\n    scene.add( ambientLight)\nwindow.addEventListener('resize', onWindowResize, false)\nfunction onWindowResize() {\n    camera.aspect = window.innerWidth / window.innerHeight\n    camera.updateProjectionMatrix()\n    renderer.setSize(window.innerWidth, window.innerHeight)\n    render()\n}\nwindow.addEventListener('pointermove', onMouseMove);\n\nfunction onMouseMove(event){\n  mouse.x = ( event.clientX / window.innerWidth ) * 2 - 1;\n\tmouse.y = - ( event.clientY / window.innerHeight ) * 2 + 1;\n}\nconst stats = Stats()\ndocument.body.appendChild(stats.dom)\n\nfunction animate() {\n    requestAnimationFrame(animate)\n\n    controls.update()\n\n    render()\n\n    stats.update()\n}\n\nfunction render() {\n  raycaster.setFromCamera( mouse, camera );\n\n\t// calculate objects intersecting the picking ray\n\n\n  const point = new Object3D();\n  const intersects = raycaster.intersectObjects( scene.children );\n  for (let i = 0; i < intersects.length; i++) {\n    // You can do anything you want here, this is just an example to make the hovered object transparent\n    //console.log(intersects[i].object.parent.name); \n    const newMaterial = intersects[i].object.material.clone();\n    newMaterial.transparent = false;\n    newMaterial.opacity = 0.5;\n    intersects[i].object.material = newMaterial;\n    if(i === 2){\n      x = intersects[2].point.x;\n      y = intersects[2].point.y;\n      z = intersects[2].point.z;\n    }\n     \n\n   \n    \n  }\n\n  window.addEventListener(\"click\", onClick);\n\n  function onClick(event){\n    console.log(moon.position);\n  }\n  \n  \nmoon.position.set(x,y,z);\n  scene.add(moon);\n    renderer.render(scene, camera)\n}\n\n\n\nconsole.log(scene);\nanimate()\nreturn () => mountRef.current.removeChild( renderer.domElement);\n    }, [])\n    \n    \n\n    return (\n        <div ref={mountRef} style={{width:\"30%\", height: \"100%\"}} id=\"3d\">\n        </div>\n    )\n  \n}"]},"metadata":{},"sourceType":"module"}