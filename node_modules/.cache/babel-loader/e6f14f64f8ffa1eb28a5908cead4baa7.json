{"ast":null,"code":"var _asyncToGenerator = require(\"/Users/arnaudavocatgros/Documents/GitHub/arnaud18o5.github.io/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/asyncToGenerator\");\n\nvar _createForOfIteratorHelper = require(\"/Users/arnaudavocatgros/Documents/GitHub/arnaud18o5.github.io/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createForOfIteratorHelper\");\n\nvar _defineProperty = require(\"/Users/arnaudavocatgros/Documents/GitHub/arnaud18o5.github.io/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/defineProperty\");\n\nvar _slicedToArray = require(\"/Users/arnaudavocatgros/Documents/GitHub/arnaud18o5.github.io/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/slicedToArray\");\n\nvar _possibleConstructorReturn = require(\"/Users/arnaudavocatgros/Documents/GitHub/arnaud18o5.github.io/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/possibleConstructorReturn\");\n\nvar _get = require(\"/Users/arnaudavocatgros/Documents/GitHub/arnaud18o5.github.io/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/get\");\n\nvar _getPrototypeOf = require(\"/Users/arnaudavocatgros/Documents/GitHub/arnaud18o5.github.io/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/getPrototypeOf\");\n\nvar _objectSpread = require(\"/Users/arnaudavocatgros/Documents/GitHub/arnaud18o5.github.io/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/objectSpread2\");\n\nvar _assertThisInitialized = require(\"/Users/arnaudavocatgros/Documents/GitHub/arnaud18o5.github.io/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/assertThisInitialized\");\n\nvar _inherits = require(\"/Users/arnaudavocatgros/Documents/GitHub/arnaud18o5.github.io/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/inherits\");\n\nvar _createSuper = require(\"/Users/arnaudavocatgros/Documents/GitHub/arnaud18o5.github.io/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createSuper\");\n\nvar _regeneratorRuntime = require(\"/Users/arnaudavocatgros/Documents/GitHub/arnaud18o5.github.io/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\");\n\nvar _classCallCheck = require(\"/Users/arnaudavocatgros/Documents/GitHub/arnaud18o5.github.io/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/Users/arnaudavocatgros/Documents/GitHub/arnaud18o5.github.io/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\n/**\n * @license\n * Copyright 2010-2021 Three.js Authors\n * SPDX-License-Identifier: MIT\n */\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) : typeof define === 'function' && define.amd ? define(['exports'], factory) : (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory(global.THREE = {}));\n})(this, function (exports) {\n  'use strict';\n\n  var _ENCODINGS;\n\n  var REVISION = '134';\n  var MOUSE = {\n    LEFT: 0,\n    MIDDLE: 1,\n    RIGHT: 2,\n    ROTATE: 0,\n    DOLLY: 1,\n    PAN: 2\n  };\n  var TOUCH = {\n    ROTATE: 0,\n    PAN: 1,\n    DOLLY_PAN: 2,\n    DOLLY_ROTATE: 3\n  };\n  var CullFaceNone = 0;\n  var CullFaceBack = 1;\n  var CullFaceFront = 2;\n  var CullFaceFrontBack = 3;\n  var BasicShadowMap = 0;\n  var PCFShadowMap = 1;\n  var PCFSoftShadowMap = 2;\n  var VSMShadowMap = 3;\n  var FrontSide = 0;\n  var BackSide = 1;\n  var DoubleSide = 2;\n  var FlatShading = 1;\n  var SmoothShading = 2;\n  var NoBlending = 0;\n  var NormalBlending = 1;\n  var AdditiveBlending = 2;\n  var SubtractiveBlending = 3;\n  var MultiplyBlending = 4;\n  var CustomBlending = 5;\n  var AddEquation = 100;\n  var SubtractEquation = 101;\n  var ReverseSubtractEquation = 102;\n  var MinEquation = 103;\n  var MaxEquation = 104;\n  var ZeroFactor = 200;\n  var OneFactor = 201;\n  var SrcColorFactor = 202;\n  var OneMinusSrcColorFactor = 203;\n  var SrcAlphaFactor = 204;\n  var OneMinusSrcAlphaFactor = 205;\n  var DstAlphaFactor = 206;\n  var OneMinusDstAlphaFactor = 207;\n  var DstColorFactor = 208;\n  var OneMinusDstColorFactor = 209;\n  var SrcAlphaSaturateFactor = 210;\n  var NeverDepth = 0;\n  var AlwaysDepth = 1;\n  var LessDepth = 2;\n  var LessEqualDepth = 3;\n  var EqualDepth = 4;\n  var GreaterEqualDepth = 5;\n  var GreaterDepth = 6;\n  var NotEqualDepth = 7;\n  var MultiplyOperation = 0;\n  var MixOperation = 1;\n  var AddOperation = 2;\n  var NoToneMapping = 0;\n  var LinearToneMapping = 1;\n  var ReinhardToneMapping = 2;\n  var CineonToneMapping = 3;\n  var ACESFilmicToneMapping = 4;\n  var CustomToneMapping = 5;\n  var UVMapping = 300;\n  var CubeReflectionMapping = 301;\n  var CubeRefractionMapping = 302;\n  var EquirectangularReflectionMapping = 303;\n  var EquirectangularRefractionMapping = 304;\n  var CubeUVReflectionMapping = 306;\n  var CubeUVRefractionMapping = 307;\n  var RepeatWrapping = 1000;\n  var ClampToEdgeWrapping = 1001;\n  var MirroredRepeatWrapping = 1002;\n  var NearestFilter = 1003;\n  var NearestMipmapNearestFilter = 1004;\n  var NearestMipMapNearestFilter = 1004;\n  var NearestMipmapLinearFilter = 1005;\n  var NearestMipMapLinearFilter = 1005;\n  var LinearFilter = 1006;\n  var LinearMipmapNearestFilter = 1007;\n  var LinearMipMapNearestFilter = 1007;\n  var LinearMipmapLinearFilter = 1008;\n  var LinearMipMapLinearFilter = 1008;\n  var UnsignedByteType = 1009;\n  var ByteType = 1010;\n  var ShortType = 1011;\n  var UnsignedShortType = 1012;\n  var IntType = 1013;\n  var UnsignedIntType = 1014;\n  var FloatType = 1015;\n  var HalfFloatType = 1016;\n  var UnsignedShort4444Type = 1017;\n  var UnsignedShort5551Type = 1018;\n  var UnsignedShort565Type = 1019;\n  var UnsignedInt248Type = 1020;\n  var AlphaFormat = 1021;\n  var RGBFormat = 1022;\n  var RGBAFormat = 1023;\n  var LuminanceFormat = 1024;\n  var LuminanceAlphaFormat = 1025;\n  var RGBEFormat = RGBAFormat;\n  var DepthFormat = 1026;\n  var DepthStencilFormat = 1027;\n  var RedFormat = 1028;\n  var RedIntegerFormat = 1029;\n  var RGFormat = 1030;\n  var RGIntegerFormat = 1031;\n  var RGBIntegerFormat = 1032;\n  var RGBAIntegerFormat = 1033;\n  var RGB_S3TC_DXT1_Format = 33776;\n  var RGBA_S3TC_DXT1_Format = 33777;\n  var RGBA_S3TC_DXT3_Format = 33778;\n  var RGBA_S3TC_DXT5_Format = 33779;\n  var RGB_PVRTC_4BPPV1_Format = 35840;\n  var RGB_PVRTC_2BPPV1_Format = 35841;\n  var RGBA_PVRTC_4BPPV1_Format = 35842;\n  var RGBA_PVRTC_2BPPV1_Format = 35843;\n  var RGB_ETC1_Format = 36196;\n  var RGB_ETC2_Format = 37492;\n  var RGBA_ETC2_EAC_Format = 37496;\n  var RGBA_ASTC_4x4_Format = 37808;\n  var RGBA_ASTC_5x4_Format = 37809;\n  var RGBA_ASTC_5x5_Format = 37810;\n  var RGBA_ASTC_6x5_Format = 37811;\n  var RGBA_ASTC_6x6_Format = 37812;\n  var RGBA_ASTC_8x5_Format = 37813;\n  var RGBA_ASTC_8x6_Format = 37814;\n  var RGBA_ASTC_8x8_Format = 37815;\n  var RGBA_ASTC_10x5_Format = 37816;\n  var RGBA_ASTC_10x6_Format = 37817;\n  var RGBA_ASTC_10x8_Format = 37818;\n  var RGBA_ASTC_10x10_Format = 37819;\n  var RGBA_ASTC_12x10_Format = 37820;\n  var RGBA_ASTC_12x12_Format = 37821;\n  var RGBA_BPTC_Format = 36492;\n  var SRGB8_ALPHA8_ASTC_4x4_Format = 37840;\n  var SRGB8_ALPHA8_ASTC_5x4_Format = 37841;\n  var SRGB8_ALPHA8_ASTC_5x5_Format = 37842;\n  var SRGB8_ALPHA8_ASTC_6x5_Format = 37843;\n  var SRGB8_ALPHA8_ASTC_6x6_Format = 37844;\n  var SRGB8_ALPHA8_ASTC_8x5_Format = 37845;\n  var SRGB8_ALPHA8_ASTC_8x6_Format = 37846;\n  var SRGB8_ALPHA8_ASTC_8x8_Format = 37847;\n  var SRGB8_ALPHA8_ASTC_10x5_Format = 37848;\n  var SRGB8_ALPHA8_ASTC_10x6_Format = 37849;\n  var SRGB8_ALPHA8_ASTC_10x8_Format = 37850;\n  var SRGB8_ALPHA8_ASTC_10x10_Format = 37851;\n  var SRGB8_ALPHA8_ASTC_12x10_Format = 37852;\n  var SRGB8_ALPHA8_ASTC_12x12_Format = 37853;\n  var LoopOnce = 2200;\n  var LoopRepeat = 2201;\n  var LoopPingPong = 2202;\n  var InterpolateDiscrete = 2300;\n  var InterpolateLinear = 2301;\n  var InterpolateSmooth = 2302;\n  var ZeroCurvatureEnding = 2400;\n  var ZeroSlopeEnding = 2401;\n  var WrapAroundEnding = 2402;\n  var NormalAnimationBlendMode = 2500;\n  var AdditiveAnimationBlendMode = 2501;\n  var TrianglesDrawMode = 0;\n  var TriangleStripDrawMode = 1;\n  var TriangleFanDrawMode = 2;\n  var LinearEncoding = 3000;\n  var sRGBEncoding = 3001;\n  var GammaEncoding = 3007;\n  var RGBEEncoding = 3002;\n  var LogLuvEncoding = 3003;\n  var RGBM7Encoding = 3004;\n  var RGBM16Encoding = 3005;\n  var RGBDEncoding = 3006;\n  var BasicDepthPacking = 3200;\n  var RGBADepthPacking = 3201;\n  var TangentSpaceNormalMap = 0;\n  var ObjectSpaceNormalMap = 1;\n  var ZeroStencilOp = 0;\n  var KeepStencilOp = 7680;\n  var ReplaceStencilOp = 7681;\n  var IncrementStencilOp = 7682;\n  var DecrementStencilOp = 7683;\n  var IncrementWrapStencilOp = 34055;\n  var DecrementWrapStencilOp = 34056;\n  var InvertStencilOp = 5386;\n  var NeverStencilFunc = 512;\n  var LessStencilFunc = 513;\n  var EqualStencilFunc = 514;\n  var LessEqualStencilFunc = 515;\n  var GreaterStencilFunc = 516;\n  var NotEqualStencilFunc = 517;\n  var GreaterEqualStencilFunc = 518;\n  var AlwaysStencilFunc = 519;\n  var StaticDrawUsage = 35044;\n  var DynamicDrawUsage = 35048;\n  var StreamDrawUsage = 35040;\n  var StaticReadUsage = 35045;\n  var DynamicReadUsage = 35049;\n  var StreamReadUsage = 35041;\n  var StaticCopyUsage = 35046;\n  var DynamicCopyUsage = 35050;\n  var StreamCopyUsage = 35042;\n  var GLSL1 = '100';\n  var GLSL3 = '300 es';\n  /**\n   * https://github.com/mrdoob/eventdispatcher.js/\n   */\n\n  var EventDispatcher = /*#__PURE__*/function () {\n    function EventDispatcher() {\n      _classCallCheck(this, EventDispatcher);\n    }\n\n    _createClass(EventDispatcher, [{\n      key: \"addEventListener\",\n      value: function addEventListener(type, listener) {\n        if (this._listeners === undefined) this._listeners = {};\n        var listeners = this._listeners;\n\n        if (listeners[type] === undefined) {\n          listeners[type] = [];\n        }\n\n        if (listeners[type].indexOf(listener) === -1) {\n          listeners[type].push(listener);\n        }\n      }\n    }, {\n      key: \"hasEventListener\",\n      value: function hasEventListener(type, listener) {\n        if (this._listeners === undefined) return false;\n        var listeners = this._listeners;\n        return listeners[type] !== undefined && listeners[type].indexOf(listener) !== -1;\n      }\n    }, {\n      key: \"removeEventListener\",\n      value: function removeEventListener(type, listener) {\n        if (this._listeners === undefined) return;\n        var listeners = this._listeners;\n        var listenerArray = listeners[type];\n\n        if (listenerArray !== undefined) {\n          var index = listenerArray.indexOf(listener);\n\n          if (index !== -1) {\n            listenerArray.splice(index, 1);\n          }\n        }\n      }\n    }, {\n      key: \"dispatchEvent\",\n      value: function dispatchEvent(event) {\n        if (this._listeners === undefined) return;\n        var listeners = this._listeners;\n        var listenerArray = listeners[event.type];\n\n        if (listenerArray !== undefined) {\n          event.target = this; // Make a copy, in case listeners are removed while iterating.\n\n          var array = listenerArray.slice(0);\n\n          for (var i = 0, l = array.length; i < l; i++) {\n            array[i].call(this, event);\n          }\n\n          event.target = null;\n        }\n      }\n    }]);\n\n    return EventDispatcher;\n  }();\n\n  var _seed = 1234567;\n  var DEG2RAD = Math.PI / 180;\n  var RAD2DEG = 180 / Math.PI; //\n\n  var _lut = [];\n\n  for (var i = 0; i < 256; i++) {\n    _lut[i] = (i < 16 ? '0' : '') + i.toString(16);\n  }\n\n  var hasRandomUUID = typeof crypto !== 'undefined' && 'randomUUID' in crypto;\n\n  function generateUUID() {\n    if (hasRandomUUID) {\n      return crypto.randomUUID().toUpperCase();\n    } // TODO Remove this code when crypto.randomUUID() is available everywhere\n    // http://stackoverflow.com/questions/105034/how-to-create-a-guid-uuid-in-javascript/21963136#21963136\n\n\n    var d0 = Math.random() * 0xffffffff | 0;\n    var d1 = Math.random() * 0xffffffff | 0;\n    var d2 = Math.random() * 0xffffffff | 0;\n    var d3 = Math.random() * 0xffffffff | 0;\n    var uuid = _lut[d0 & 0xff] + _lut[d0 >> 8 & 0xff] + _lut[d0 >> 16 & 0xff] + _lut[d0 >> 24 & 0xff] + '-' + _lut[d1 & 0xff] + _lut[d1 >> 8 & 0xff] + '-' + _lut[d1 >> 16 & 0x0f | 0x40] + _lut[d1 >> 24 & 0xff] + '-' + _lut[d2 & 0x3f | 0x80] + _lut[d2 >> 8 & 0xff] + '-' + _lut[d2 >> 16 & 0xff] + _lut[d2 >> 24 & 0xff] + _lut[d3 & 0xff] + _lut[d3 >> 8 & 0xff] + _lut[d3 >> 16 & 0xff] + _lut[d3 >> 24 & 0xff]; // .toUpperCase() here flattens concatenated strings to save heap memory space.\n\n    return uuid.toUpperCase();\n  }\n\n  function clamp(value, min, max) {\n    return Math.max(min, Math.min(max, value));\n  } // compute euclidian modulo of m % n\n  // https://en.wikipedia.org/wiki/Modulo_operation\n\n\n  function euclideanModulo(n, m) {\n    return (n % m + m) % m;\n  } // Linear mapping from range <a1, a2> to range <b1, b2>\n\n\n  function mapLinear(x, a1, a2, b1, b2) {\n    return b1 + (x - a1) * (b2 - b1) / (a2 - a1);\n  } // https://www.gamedev.net/tutorials/programming/general-and-gameplay-programming/inverse-lerp-a-super-useful-yet-often-overlooked-function-r5230/\n\n\n  function inverseLerp(x, y, value) {\n    if (x !== y) {\n      return (value - x) / (y - x);\n    } else {\n      return 0;\n    }\n  } // https://en.wikipedia.org/wiki/Linear_interpolation\n\n\n  function lerp(x, y, t) {\n    return (1 - t) * x + t * y;\n  } // http://www.rorydriscoll.com/2016/03/07/frame-rate-independent-damping-using-lerp/\n\n\n  function damp(x, y, lambda, dt) {\n    return lerp(x, y, 1 - Math.exp(-lambda * dt));\n  } // https://www.desmos.com/calculator/vcsjnyz7x4\n\n\n  function pingpong(x) {\n    var length = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n    return length - Math.abs(euclideanModulo(x, length * 2) - length);\n  } // http://en.wikipedia.org/wiki/Smoothstep\n\n\n  function smoothstep(x, min, max) {\n    if (x <= min) return 0;\n    if (x >= max) return 1;\n    x = (x - min) / (max - min);\n    return x * x * (3 - 2 * x);\n  }\n\n  function smootherstep(x, min, max) {\n    if (x <= min) return 0;\n    if (x >= max) return 1;\n    x = (x - min) / (max - min);\n    return x * x * x * (x * (x * 6 - 15) + 10);\n  } // Random integer from <low, high> interval\n\n\n  function randInt(low, high) {\n    return low + Math.floor(Math.random() * (high - low + 1));\n  } // Random float from <low, high> interval\n\n\n  function randFloat(low, high) {\n    return low + Math.random() * (high - low);\n  } // Random float from <-range/2, range/2> interval\n\n\n  function randFloatSpread(range) {\n    return range * (0.5 - Math.random());\n  } // Deterministic pseudo-random float in the interval [ 0, 1 ]\n\n\n  function seededRandom(s) {\n    if (s !== undefined) _seed = s % 2147483647; // Park-Miller algorithm\n\n    _seed = _seed * 16807 % 2147483647;\n    return (_seed - 1) / 2147483646;\n  }\n\n  function degToRad(degrees) {\n    return degrees * DEG2RAD;\n  }\n\n  function radToDeg(radians) {\n    return radians * RAD2DEG;\n  }\n\n  function isPowerOfTwo(value) {\n    return (value & value - 1) === 0 && value !== 0;\n  }\n\n  function ceilPowerOfTwo(value) {\n    return Math.pow(2, Math.ceil(Math.log(value) / Math.LN2));\n  }\n\n  function floorPowerOfTwo(value) {\n    return Math.pow(2, Math.floor(Math.log(value) / Math.LN2));\n  }\n\n  function setQuaternionFromProperEuler(q, a, b, c, order) {\n    // Intrinsic Proper Euler Angles - see https://en.wikipedia.org/wiki/Euler_angles\n    // rotations are applied to the axes in the order specified by 'order'\n    // rotation by angle 'a' is applied first, then by angle 'b', then by angle 'c'\n    // angles are in radians\n    var cos = Math.cos;\n    var sin = Math.sin;\n    var c2 = cos(b / 2);\n    var s2 = sin(b / 2);\n    var c13 = cos((a + c) / 2);\n    var s13 = sin((a + c) / 2);\n    var c1_3 = cos((a - c) / 2);\n    var s1_3 = sin((a - c) / 2);\n    var c3_1 = cos((c - a) / 2);\n    var s3_1 = sin((c - a) / 2);\n\n    switch (order) {\n      case 'XYX':\n        q.set(c2 * s13, s2 * c1_3, s2 * s1_3, c2 * c13);\n        break;\n\n      case 'YZY':\n        q.set(s2 * s1_3, c2 * s13, s2 * c1_3, c2 * c13);\n        break;\n\n      case 'ZXZ':\n        q.set(s2 * c1_3, s2 * s1_3, c2 * s13, c2 * c13);\n        break;\n\n      case 'XZX':\n        q.set(c2 * s13, s2 * s3_1, s2 * c3_1, c2 * c13);\n        break;\n\n      case 'YXY':\n        q.set(s2 * c3_1, c2 * s13, s2 * s3_1, c2 * c13);\n        break;\n\n      case 'ZYZ':\n        q.set(s2 * s3_1, s2 * c3_1, c2 * s13, c2 * c13);\n        break;\n\n      default:\n        console.warn('THREE.MathUtils: .setQuaternionFromProperEuler() encountered an unknown order: ' + order);\n    }\n  }\n\n  var MathUtils = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    DEG2RAD: DEG2RAD,\n    RAD2DEG: RAD2DEG,\n    generateUUID: generateUUID,\n    clamp: clamp,\n    euclideanModulo: euclideanModulo,\n    mapLinear: mapLinear,\n    inverseLerp: inverseLerp,\n    lerp: lerp,\n    damp: damp,\n    pingpong: pingpong,\n    smoothstep: smoothstep,\n    smootherstep: smootherstep,\n    randInt: randInt,\n    randFloat: randFloat,\n    randFloatSpread: randFloatSpread,\n    seededRandom: seededRandom,\n    degToRad: degToRad,\n    radToDeg: radToDeg,\n    isPowerOfTwo: isPowerOfTwo,\n    ceilPowerOfTwo: ceilPowerOfTwo,\n    floorPowerOfTwo: floorPowerOfTwo,\n    setQuaternionFromProperEuler: setQuaternionFromProperEuler\n  });\n\n  var Vector2 = /*#__PURE__*/function (_Symbol$iterator) {\n    function Vector2() {\n      var x = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n      var y = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n\n      _classCallCheck(this, Vector2);\n\n      this.x = x;\n      this.y = y;\n    }\n\n    _createClass(Vector2, [{\n      key: \"width\",\n      get: function get() {\n        return this.x;\n      },\n      set: function set(value) {\n        this.x = value;\n      }\n    }, {\n      key: \"height\",\n      get: function get() {\n        return this.y;\n      },\n      set: function set(value) {\n        this.y = value;\n      }\n    }, {\n      key: \"set\",\n      value: function set(x, y) {\n        this.x = x;\n        this.y = y;\n        return this;\n      }\n    }, {\n      key: \"setScalar\",\n      value: function setScalar(scalar) {\n        this.x = scalar;\n        this.y = scalar;\n        return this;\n      }\n    }, {\n      key: \"setX\",\n      value: function setX(x) {\n        this.x = x;\n        return this;\n      }\n    }, {\n      key: \"setY\",\n      value: function setY(y) {\n        this.y = y;\n        return this;\n      }\n    }, {\n      key: \"setComponent\",\n      value: function setComponent(index, value) {\n        switch (index) {\n          case 0:\n            this.x = value;\n            break;\n\n          case 1:\n            this.y = value;\n            break;\n\n          default:\n            throw new Error('index is out of range: ' + index);\n        }\n\n        return this;\n      }\n    }, {\n      key: \"getComponent\",\n      value: function getComponent(index) {\n        switch (index) {\n          case 0:\n            return this.x;\n\n          case 1:\n            return this.y;\n\n          default:\n            throw new Error('index is out of range: ' + index);\n        }\n      }\n    }, {\n      key: \"clone\",\n      value: function clone() {\n        return new this.constructor(this.x, this.y);\n      }\n    }, {\n      key: \"copy\",\n      value: function copy(v) {\n        this.x = v.x;\n        this.y = v.y;\n        return this;\n      }\n    }, {\n      key: \"add\",\n      value: function add(v, w) {\n        if (w !== undefined) {\n          console.warn('THREE.Vector2: .add() now only accepts one argument. Use .addVectors( a, b ) instead.');\n          return this.addVectors(v, w);\n        }\n\n        this.x += v.x;\n        this.y += v.y;\n        return this;\n      }\n    }, {\n      key: \"addScalar\",\n      value: function addScalar(s) {\n        this.x += s;\n        this.y += s;\n        return this;\n      }\n    }, {\n      key: \"addVectors\",\n      value: function addVectors(a, b) {\n        this.x = a.x + b.x;\n        this.y = a.y + b.y;\n        return this;\n      }\n    }, {\n      key: \"addScaledVector\",\n      value: function addScaledVector(v, s) {\n        this.x += v.x * s;\n        this.y += v.y * s;\n        return this;\n      }\n    }, {\n      key: \"sub\",\n      value: function sub(v, w) {\n        if (w !== undefined) {\n          console.warn('THREE.Vector2: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.');\n          return this.subVectors(v, w);\n        }\n\n        this.x -= v.x;\n        this.y -= v.y;\n        return this;\n      }\n    }, {\n      key: \"subScalar\",\n      value: function subScalar(s) {\n        this.x -= s;\n        this.y -= s;\n        return this;\n      }\n    }, {\n      key: \"subVectors\",\n      value: function subVectors(a, b) {\n        this.x = a.x - b.x;\n        this.y = a.y - b.y;\n        return this;\n      }\n    }, {\n      key: \"multiply\",\n      value: function multiply(v) {\n        this.x *= v.x;\n        this.y *= v.y;\n        return this;\n      }\n    }, {\n      key: \"multiplyScalar\",\n      value: function multiplyScalar(scalar) {\n        this.x *= scalar;\n        this.y *= scalar;\n        return this;\n      }\n    }, {\n      key: \"divide\",\n      value: function divide(v) {\n        this.x /= v.x;\n        this.y /= v.y;\n        return this;\n      }\n    }, {\n      key: \"divideScalar\",\n      value: function divideScalar(scalar) {\n        return this.multiplyScalar(1 / scalar);\n      }\n    }, {\n      key: \"applyMatrix3\",\n      value: function applyMatrix3(m) {\n        var x = this.x,\n            y = this.y;\n        var e = m.elements;\n        this.x = e[0] * x + e[3] * y + e[6];\n        this.y = e[1] * x + e[4] * y + e[7];\n        return this;\n      }\n    }, {\n      key: \"min\",\n      value: function min(v) {\n        this.x = Math.min(this.x, v.x);\n        this.y = Math.min(this.y, v.y);\n        return this;\n      }\n    }, {\n      key: \"max\",\n      value: function max(v) {\n        this.x = Math.max(this.x, v.x);\n        this.y = Math.max(this.y, v.y);\n        return this;\n      }\n    }, {\n      key: \"clamp\",\n      value: function clamp(min, max) {\n        // assumes min < max, componentwise\n        this.x = Math.max(min.x, Math.min(max.x, this.x));\n        this.y = Math.max(min.y, Math.min(max.y, this.y));\n        return this;\n      }\n    }, {\n      key: \"clampScalar\",\n      value: function clampScalar(minVal, maxVal) {\n        this.x = Math.max(minVal, Math.min(maxVal, this.x));\n        this.y = Math.max(minVal, Math.min(maxVal, this.y));\n        return this;\n      }\n    }, {\n      key: \"clampLength\",\n      value: function clampLength(min, max) {\n        var length = this.length();\n        return this.divideScalar(length || 1).multiplyScalar(Math.max(min, Math.min(max, length)));\n      }\n    }, {\n      key: \"floor\",\n      value: function floor() {\n        this.x = Math.floor(this.x);\n        this.y = Math.floor(this.y);\n        return this;\n      }\n    }, {\n      key: \"ceil\",\n      value: function ceil() {\n        this.x = Math.ceil(this.x);\n        this.y = Math.ceil(this.y);\n        return this;\n      }\n    }, {\n      key: \"round\",\n      value: function round() {\n        this.x = Math.round(this.x);\n        this.y = Math.round(this.y);\n        return this;\n      }\n    }, {\n      key: \"roundToZero\",\n      value: function roundToZero() {\n        this.x = this.x < 0 ? Math.ceil(this.x) : Math.floor(this.x);\n        this.y = this.y < 0 ? Math.ceil(this.y) : Math.floor(this.y);\n        return this;\n      }\n    }, {\n      key: \"negate\",\n      value: function negate() {\n        this.x = -this.x;\n        this.y = -this.y;\n        return this;\n      }\n    }, {\n      key: \"dot\",\n      value: function dot(v) {\n        return this.x * v.x + this.y * v.y;\n      }\n    }, {\n      key: \"cross\",\n      value: function cross(v) {\n        return this.x * v.y - this.y * v.x;\n      }\n    }, {\n      key: \"lengthSq\",\n      value: function lengthSq() {\n        return this.x * this.x + this.y * this.y;\n      }\n    }, {\n      key: \"length\",\n      value: function length() {\n        return Math.sqrt(this.x * this.x + this.y * this.y);\n      }\n    }, {\n      key: \"manhattanLength\",\n      value: function manhattanLength() {\n        return Math.abs(this.x) + Math.abs(this.y);\n      }\n    }, {\n      key: \"normalize\",\n      value: function normalize() {\n        return this.divideScalar(this.length() || 1);\n      }\n    }, {\n      key: \"angle\",\n      value: function angle() {\n        // computes the angle in radians with respect to the positive x-axis\n        var angle = Math.atan2(-this.y, -this.x) + Math.PI;\n        return angle;\n      }\n    }, {\n      key: \"distanceTo\",\n      value: function distanceTo(v) {\n        return Math.sqrt(this.distanceToSquared(v));\n      }\n    }, {\n      key: \"distanceToSquared\",\n      value: function distanceToSquared(v) {\n        var dx = this.x - v.x,\n            dy = this.y - v.y;\n        return dx * dx + dy * dy;\n      }\n    }, {\n      key: \"manhattanDistanceTo\",\n      value: function manhattanDistanceTo(v) {\n        return Math.abs(this.x - v.x) + Math.abs(this.y - v.y);\n      }\n    }, {\n      key: \"setLength\",\n      value: function setLength(length) {\n        return this.normalize().multiplyScalar(length);\n      }\n    }, {\n      key: \"lerp\",\n      value: function lerp(v, alpha) {\n        this.x += (v.x - this.x) * alpha;\n        this.y += (v.y - this.y) * alpha;\n        return this;\n      }\n    }, {\n      key: \"lerpVectors\",\n      value: function lerpVectors(v1, v2, alpha) {\n        this.x = v1.x + (v2.x - v1.x) * alpha;\n        this.y = v1.y + (v2.y - v1.y) * alpha;\n        return this;\n      }\n    }, {\n      key: \"equals\",\n      value: function equals(v) {\n        return v.x === this.x && v.y === this.y;\n      }\n    }, {\n      key: \"fromArray\",\n      value: function fromArray(array) {\n        var offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n        this.x = array[offset];\n        this.y = array[offset + 1];\n        return this;\n      }\n    }, {\n      key: \"toArray\",\n      value: function toArray() {\n        var array = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n        var offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n        array[offset] = this.x;\n        array[offset + 1] = this.y;\n        return array;\n      }\n    }, {\n      key: \"fromBufferAttribute\",\n      value: function fromBufferAttribute(attribute, index, offset) {\n        if (offset !== undefined) {\n          console.warn('THREE.Vector2: offset has been removed from .fromBufferAttribute().');\n        }\n\n        this.x = attribute.getX(index);\n        this.y = attribute.getY(index);\n        return this;\n      }\n    }, {\n      key: \"rotateAround\",\n      value: function rotateAround(center, angle) {\n        var c = Math.cos(angle),\n            s = Math.sin(angle);\n        var x = this.x - center.x;\n        var y = this.y - center.y;\n        this.x = x * c - y * s + center.x;\n        this.y = x * s + y * c + center.y;\n        return this;\n      }\n    }, {\n      key: \"random\",\n      value: function random() {\n        this.x = Math.random();\n        this.y = Math.random();\n        return this;\n      }\n    }, {\n      key: _Symbol$iterator,\n      value: /*#__PURE__*/_regeneratorRuntime.mark(function value() {\n        return _regeneratorRuntime.wrap(function value$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return this.x;\n\n              case 2:\n                _context2.next = 4;\n                return this.y;\n\n              case 4:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, value, this);\n      })\n    }]);\n\n    return Vector2;\n  }(Symbol.iterator);\n\n  Vector2.prototype.isVector2 = true;\n\n  var Matrix3 = /*#__PURE__*/function () {\n    function Matrix3() {\n      _classCallCheck(this, Matrix3);\n\n      this.elements = [1, 0, 0, 0, 1, 0, 0, 0, 1];\n\n      if (arguments.length > 0) {\n        console.error('THREE.Matrix3: the constructor no longer reads arguments. use .set() instead.');\n      }\n    }\n\n    _createClass(Matrix3, [{\n      key: \"set\",\n      value: function set(n11, n12, n13, n21, n22, n23, n31, n32, n33) {\n        var te = this.elements;\n        te[0] = n11;\n        te[1] = n21;\n        te[2] = n31;\n        te[3] = n12;\n        te[4] = n22;\n        te[5] = n32;\n        te[6] = n13;\n        te[7] = n23;\n        te[8] = n33;\n        return this;\n      }\n    }, {\n      key: \"identity\",\n      value: function identity() {\n        this.set(1, 0, 0, 0, 1, 0, 0, 0, 1);\n        return this;\n      }\n    }, {\n      key: \"copy\",\n      value: function copy(m) {\n        var te = this.elements;\n        var me = m.elements;\n        te[0] = me[0];\n        te[1] = me[1];\n        te[2] = me[2];\n        te[3] = me[3];\n        te[4] = me[4];\n        te[5] = me[5];\n        te[6] = me[6];\n        te[7] = me[7];\n        te[8] = me[8];\n        return this;\n      }\n    }, {\n      key: \"extractBasis\",\n      value: function extractBasis(xAxis, yAxis, zAxis) {\n        xAxis.setFromMatrix3Column(this, 0);\n        yAxis.setFromMatrix3Column(this, 1);\n        zAxis.setFromMatrix3Column(this, 2);\n        return this;\n      }\n    }, {\n      key: \"setFromMatrix4\",\n      value: function setFromMatrix4(m) {\n        var me = m.elements;\n        this.set(me[0], me[4], me[8], me[1], me[5], me[9], me[2], me[6], me[10]);\n        return this;\n      }\n    }, {\n      key: \"multiply\",\n      value: function multiply(m) {\n        return this.multiplyMatrices(this, m);\n      }\n    }, {\n      key: \"premultiply\",\n      value: function premultiply(m) {\n        return this.multiplyMatrices(m, this);\n      }\n    }, {\n      key: \"multiplyMatrices\",\n      value: function multiplyMatrices(a, b) {\n        var ae = a.elements;\n        var be = b.elements;\n        var te = this.elements;\n        var a11 = ae[0],\n            a12 = ae[3],\n            a13 = ae[6];\n        var a21 = ae[1],\n            a22 = ae[4],\n            a23 = ae[7];\n        var a31 = ae[2],\n            a32 = ae[5],\n            a33 = ae[8];\n        var b11 = be[0],\n            b12 = be[3],\n            b13 = be[6];\n        var b21 = be[1],\n            b22 = be[4],\n            b23 = be[7];\n        var b31 = be[2],\n            b32 = be[5],\n            b33 = be[8];\n        te[0] = a11 * b11 + a12 * b21 + a13 * b31;\n        te[3] = a11 * b12 + a12 * b22 + a13 * b32;\n        te[6] = a11 * b13 + a12 * b23 + a13 * b33;\n        te[1] = a21 * b11 + a22 * b21 + a23 * b31;\n        te[4] = a21 * b12 + a22 * b22 + a23 * b32;\n        te[7] = a21 * b13 + a22 * b23 + a23 * b33;\n        te[2] = a31 * b11 + a32 * b21 + a33 * b31;\n        te[5] = a31 * b12 + a32 * b22 + a33 * b32;\n        te[8] = a31 * b13 + a32 * b23 + a33 * b33;\n        return this;\n      }\n    }, {\n      key: \"multiplyScalar\",\n      value: function multiplyScalar(s) {\n        var te = this.elements;\n        te[0] *= s;\n        te[3] *= s;\n        te[6] *= s;\n        te[1] *= s;\n        te[4] *= s;\n        te[7] *= s;\n        te[2] *= s;\n        te[5] *= s;\n        te[8] *= s;\n        return this;\n      }\n    }, {\n      key: \"determinant\",\n      value: function determinant() {\n        var te = this.elements;\n        var a = te[0],\n            b = te[1],\n            c = te[2],\n            d = te[3],\n            e = te[4],\n            f = te[5],\n            g = te[6],\n            h = te[7],\n            i = te[8];\n        return a * e * i - a * f * h - b * d * i + b * f * g + c * d * h - c * e * g;\n      }\n    }, {\n      key: \"invert\",\n      value: function invert() {\n        var te = this.elements,\n            n11 = te[0],\n            n21 = te[1],\n            n31 = te[2],\n            n12 = te[3],\n            n22 = te[4],\n            n32 = te[5],\n            n13 = te[6],\n            n23 = te[7],\n            n33 = te[8],\n            t11 = n33 * n22 - n32 * n23,\n            t12 = n32 * n13 - n33 * n12,\n            t13 = n23 * n12 - n22 * n13,\n            det = n11 * t11 + n21 * t12 + n31 * t13;\n        if (det === 0) return this.set(0, 0, 0, 0, 0, 0, 0, 0, 0);\n        var detInv = 1 / det;\n        te[0] = t11 * detInv;\n        te[1] = (n31 * n23 - n33 * n21) * detInv;\n        te[2] = (n32 * n21 - n31 * n22) * detInv;\n        te[3] = t12 * detInv;\n        te[4] = (n33 * n11 - n31 * n13) * detInv;\n        te[5] = (n31 * n12 - n32 * n11) * detInv;\n        te[6] = t13 * detInv;\n        te[7] = (n21 * n13 - n23 * n11) * detInv;\n        te[8] = (n22 * n11 - n21 * n12) * detInv;\n        return this;\n      }\n    }, {\n      key: \"transpose\",\n      value: function transpose() {\n        var tmp;\n        var m = this.elements;\n        tmp = m[1];\n        m[1] = m[3];\n        m[3] = tmp;\n        tmp = m[2];\n        m[2] = m[6];\n        m[6] = tmp;\n        tmp = m[5];\n        m[5] = m[7];\n        m[7] = tmp;\n        return this;\n      }\n    }, {\n      key: \"getNormalMatrix\",\n      value: function getNormalMatrix(matrix4) {\n        return this.setFromMatrix4(matrix4).invert().transpose();\n      }\n    }, {\n      key: \"transposeIntoArray\",\n      value: function transposeIntoArray(r) {\n        var m = this.elements;\n        r[0] = m[0];\n        r[1] = m[3];\n        r[2] = m[6];\n        r[3] = m[1];\n        r[4] = m[4];\n        r[5] = m[7];\n        r[6] = m[2];\n        r[7] = m[5];\n        r[8] = m[8];\n        return this;\n      }\n    }, {\n      key: \"setUvTransform\",\n      value: function setUvTransform(tx, ty, sx, sy, rotation, cx, cy) {\n        var c = Math.cos(rotation);\n        var s = Math.sin(rotation);\n        this.set(sx * c, sx * s, -sx * (c * cx + s * cy) + cx + tx, -sy * s, sy * c, -sy * (-s * cx + c * cy) + cy + ty, 0, 0, 1);\n        return this;\n      }\n    }, {\n      key: \"scale\",\n      value: function scale(sx, sy) {\n        var te = this.elements;\n        te[0] *= sx;\n        te[3] *= sx;\n        te[6] *= sx;\n        te[1] *= sy;\n        te[4] *= sy;\n        te[7] *= sy;\n        return this;\n      }\n    }, {\n      key: \"rotate\",\n      value: function rotate(theta) {\n        var c = Math.cos(theta);\n        var s = Math.sin(theta);\n        var te = this.elements;\n        var a11 = te[0],\n            a12 = te[3],\n            a13 = te[6];\n        var a21 = te[1],\n            a22 = te[4],\n            a23 = te[7];\n        te[0] = c * a11 + s * a21;\n        te[3] = c * a12 + s * a22;\n        te[6] = c * a13 + s * a23;\n        te[1] = -s * a11 + c * a21;\n        te[4] = -s * a12 + c * a22;\n        te[7] = -s * a13 + c * a23;\n        return this;\n      }\n    }, {\n      key: \"translate\",\n      value: function translate(tx, ty) {\n        var te = this.elements;\n        te[0] += tx * te[2];\n        te[3] += tx * te[5];\n        te[6] += tx * te[8];\n        te[1] += ty * te[2];\n        te[4] += ty * te[5];\n        te[7] += ty * te[8];\n        return this;\n      }\n    }, {\n      key: \"equals\",\n      value: function equals(matrix) {\n        var te = this.elements;\n        var me = matrix.elements;\n\n        for (var _i = 0; _i < 9; _i++) {\n          if (te[_i] !== me[_i]) return false;\n        }\n\n        return true;\n      }\n    }, {\n      key: \"fromArray\",\n      value: function fromArray(array) {\n        var offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n\n        for (var _i2 = 0; _i2 < 9; _i2++) {\n          this.elements[_i2] = array[_i2 + offset];\n        }\n\n        return this;\n      }\n    }, {\n      key: \"toArray\",\n      value: function toArray() {\n        var array = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n        var offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n        var te = this.elements;\n        array[offset] = te[0];\n        array[offset + 1] = te[1];\n        array[offset + 2] = te[2];\n        array[offset + 3] = te[3];\n        array[offset + 4] = te[4];\n        array[offset + 5] = te[5];\n        array[offset + 6] = te[6];\n        array[offset + 7] = te[7];\n        array[offset + 8] = te[8];\n        return array;\n      }\n    }, {\n      key: \"clone\",\n      value: function clone() {\n        return new this.constructor().fromArray(this.elements);\n      }\n    }]);\n\n    return Matrix3;\n  }();\n\n  Matrix3.prototype.isMatrix3 = true;\n\n  function arrayMax(array) {\n    if (array.length === 0) return -Infinity;\n    var max = array[0];\n\n    for (var _i3 = 1, l = array.length; _i3 < l; ++_i3) {\n      if (array[_i3] > max) max = array[_i3];\n    }\n\n    return max;\n  }\n\n  var TYPED_ARRAYS = {\n    Int8Array: Int8Array,\n    Uint8Array: Uint8Array,\n    Uint8ClampedArray: Uint8ClampedArray,\n    Int16Array: Int16Array,\n    Uint16Array: Uint16Array,\n    Int32Array: Int32Array,\n    Uint32Array: Uint32Array,\n    Float32Array: Float32Array,\n    Float64Array: Float64Array\n  };\n\n  function getTypedArray(type, buffer) {\n    return new TYPED_ARRAYS[type](buffer);\n  }\n\n  function createElementNS(name) {\n    return document.createElementNS('http://www.w3.org/1999/xhtml', name);\n  }\n  /**\n  \t* cyrb53 hash for string from: https://stackoverflow.com/a/52171480\n  \t*\n  \t* Public Domain, @bryc - https://stackoverflow.com/users/815680/bryc\n  \t*\n  \t* It is roughly similar to the well-known MurmurHash/xxHash algorithms. It uses a combination\n  \t* of multiplication and Xorshift to generate the hash, but not as thorough. As a result it's\n  \t* faster than either would be in JavaScript and significantly simpler to implement. Keep in\n  \t* mind this is not a secure algorithm, if privacy/security is a concern, this is not for you.\n  \t*\n  \t* @param {string} str\n  \t* @param {number} seed, default 0\n  \t* @returns number\n  \t*/\n\n\n  function hashString(str) {\n    var seed = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n    var h1 = 0xdeadbeef ^ seed,\n        h2 = 0x41c6ce57 ^ seed;\n\n    for (var _i4 = 0, ch; _i4 < str.length; _i4++) {\n      ch = str.charCodeAt(_i4);\n      h1 = Math.imul(h1 ^ ch, 2654435761);\n      h2 = Math.imul(h2 ^ ch, 1597334677);\n    }\n\n    h1 = Math.imul(h1 ^ h1 >>> 16, 2246822507) ^ Math.imul(h2 ^ h2 >>> 13, 3266489909);\n    h2 = Math.imul(h2 ^ h2 >>> 16, 2246822507) ^ Math.imul(h1 ^ h1 >>> 13, 3266489909);\n    return 4294967296 * (2097151 & h2) + (h1 >>> 0);\n  }\n\n  var _canvas;\n\n  var ImageUtils = /*#__PURE__*/function () {\n    function ImageUtils() {\n      _classCallCheck(this, ImageUtils);\n    }\n\n    _createClass(ImageUtils, null, [{\n      key: \"getDataURL\",\n      value: function getDataURL(image) {\n        if (/^data:/i.test(image.src)) {\n          return image.src;\n        }\n\n        if (typeof HTMLCanvasElement == 'undefined') {\n          return image.src;\n        }\n\n        var canvas;\n\n        if (image instanceof HTMLCanvasElement) {\n          canvas = image;\n        } else {\n          if (_canvas === undefined) _canvas = createElementNS('canvas');\n          _canvas.width = image.width;\n          _canvas.height = image.height;\n\n          var context = _canvas.getContext('2d');\n\n          if (image instanceof ImageData) {\n            context.putImageData(image, 0, 0);\n          } else {\n            context.drawImage(image, 0, 0, image.width, image.height);\n          }\n\n          canvas = _canvas;\n        }\n\n        if (canvas.width > 2048 || canvas.height > 2048) {\n          console.warn('THREE.ImageUtils.getDataURL: Image converted to jpg for performance reasons', image);\n          return canvas.toDataURL('image/jpeg', 0.6);\n        } else {\n          return canvas.toDataURL('image/png');\n        }\n      }\n    }]);\n\n    return ImageUtils;\n  }();\n\n  var textureId = 0;\n\n  var Texture = /*#__PURE__*/function (_EventDispatcher) {\n    _inherits(Texture, _EventDispatcher);\n\n    var _super = _createSuper(Texture);\n\n    function Texture() {\n      var _this2;\n\n      var image = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : Texture.DEFAULT_IMAGE;\n      var mapping = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : Texture.DEFAULT_MAPPING;\n      var wrapS = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : ClampToEdgeWrapping;\n      var wrapT = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : ClampToEdgeWrapping;\n      var magFilter = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : LinearFilter;\n      var minFilter = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : LinearMipmapLinearFilter;\n      var format = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : RGBAFormat;\n      var type = arguments.length > 7 && arguments[7] !== undefined ? arguments[7] : UnsignedByteType;\n      var anisotropy = arguments.length > 8 && arguments[8] !== undefined ? arguments[8] : 1;\n      var encoding = arguments.length > 9 && arguments[9] !== undefined ? arguments[9] : LinearEncoding;\n\n      _classCallCheck(this, Texture);\n\n      _this2 = _super.call(this);\n      Object.defineProperty(_assertThisInitialized(_this2), 'id', {\n        value: textureId++\n      });\n      _this2.uuid = generateUUID();\n      _this2.name = '';\n      _this2.image = image;\n      _this2.mipmaps = [];\n      _this2.mapping = mapping;\n      _this2.wrapS = wrapS;\n      _this2.wrapT = wrapT;\n      _this2.magFilter = magFilter;\n      _this2.minFilter = minFilter;\n      _this2.anisotropy = anisotropy;\n      _this2.format = format;\n      _this2.internalFormat = null;\n      _this2.type = type;\n      _this2.offset = new Vector2(0, 0);\n      _this2.repeat = new Vector2(1, 1);\n      _this2.center = new Vector2(0, 0);\n      _this2.rotation = 0;\n      _this2.matrixAutoUpdate = true;\n      _this2.matrix = new Matrix3();\n      _this2.generateMipmaps = true;\n      _this2.premultiplyAlpha = false;\n      _this2.flipY = true;\n      _this2.unpackAlignment = 4; // valid values: 1, 2, 4, 8 (see http://www.khronos.org/opengles/sdk/docs/man/xhtml/glPixelStorei.xml)\n      // Values of encoding !== THREE.LinearEncoding only supported on map, envMap and emissiveMap.\n      //\n      // Also changing the encoding after already used by a Material will not automatically make the Material\n      // update. You need to explicitly call Material.needsUpdate to trigger it to recompile.\n\n      _this2.encoding = encoding;\n      _this2.userData = {};\n      _this2.version = 0;\n      _this2.onUpdate = null;\n      _this2.isRenderTargetTexture = false;\n      return _this2;\n    }\n\n    _createClass(Texture, [{\n      key: \"updateMatrix\",\n      value: function updateMatrix() {\n        this.matrix.setUvTransform(this.offset.x, this.offset.y, this.repeat.x, this.repeat.y, this.rotation, this.center.x, this.center.y);\n      }\n    }, {\n      key: \"clone\",\n      value: function clone() {\n        return new this.constructor().copy(this);\n      }\n    }, {\n      key: \"copy\",\n      value: function copy(source) {\n        this.name = source.name;\n        this.image = source.image;\n        this.mipmaps = source.mipmaps.slice(0);\n        this.mapping = source.mapping;\n        this.wrapS = source.wrapS;\n        this.wrapT = source.wrapT;\n        this.magFilter = source.magFilter;\n        this.minFilter = source.minFilter;\n        this.anisotropy = source.anisotropy;\n        this.format = source.format;\n        this.internalFormat = source.internalFormat;\n        this.type = source.type;\n        this.offset.copy(source.offset);\n        this.repeat.copy(source.repeat);\n        this.center.copy(source.center);\n        this.rotation = source.rotation;\n        this.matrixAutoUpdate = source.matrixAutoUpdate;\n        this.matrix.copy(source.matrix);\n        this.generateMipmaps = source.generateMipmaps;\n        this.premultiplyAlpha = source.premultiplyAlpha;\n        this.flipY = source.flipY;\n        this.unpackAlignment = source.unpackAlignment;\n        this.encoding = source.encoding;\n        this.userData = JSON.parse(JSON.stringify(source.userData));\n        return this;\n      }\n    }, {\n      key: \"toJSON\",\n      value: function toJSON(meta) {\n        var isRootObject = meta === undefined || typeof meta === 'string';\n\n        if (!isRootObject && meta.textures[this.uuid] !== undefined) {\n          return meta.textures[this.uuid];\n        }\n\n        var output = {\n          metadata: {\n            version: 4.5,\n            type: 'Texture',\n            generator: 'Texture.toJSON'\n          },\n          uuid: this.uuid,\n          name: this.name,\n          mapping: this.mapping,\n          repeat: [this.repeat.x, this.repeat.y],\n          offset: [this.offset.x, this.offset.y],\n          center: [this.center.x, this.center.y],\n          rotation: this.rotation,\n          wrap: [this.wrapS, this.wrapT],\n          format: this.format,\n          type: this.type,\n          encoding: this.encoding,\n          minFilter: this.minFilter,\n          magFilter: this.magFilter,\n          anisotropy: this.anisotropy,\n          flipY: this.flipY,\n          premultiplyAlpha: this.premultiplyAlpha,\n          unpackAlignment: this.unpackAlignment\n        };\n\n        if (this.image !== undefined) {\n          // TODO: Move to THREE.Image\n          var image = this.image;\n\n          if (image.uuid === undefined) {\n            image.uuid = generateUUID(); // UGH\n          }\n\n          if (!isRootObject && meta.images[image.uuid] === undefined) {\n            var url;\n\n            if (Array.isArray(image)) {\n              // process array of images e.g. CubeTexture\n              url = [];\n\n              for (var _i5 = 0, l = image.length; _i5 < l; _i5++) {\n                // check cube texture with data textures\n                if (image[_i5].isDataTexture) {\n                  url.push(serializeImage(image[_i5].image));\n                } else {\n                  url.push(serializeImage(image[_i5]));\n                }\n              }\n            } else {\n              // process single image\n              url = serializeImage(image);\n            }\n\n            meta.images[image.uuid] = {\n              uuid: image.uuid,\n              url: url\n            };\n          }\n\n          output.image = image.uuid;\n        }\n\n        if (JSON.stringify(this.userData) !== '{}') output.userData = this.userData;\n\n        if (!isRootObject) {\n          meta.textures[this.uuid] = output;\n        }\n\n        return output;\n      }\n    }, {\n      key: \"dispose\",\n      value: function dispose() {\n        this.dispatchEvent({\n          type: 'dispose'\n        });\n      }\n    }, {\n      key: \"transformUv\",\n      value: function transformUv(uv) {\n        if (this.mapping !== UVMapping) return uv;\n        uv.applyMatrix3(this.matrix);\n\n        if (uv.x < 0 || uv.x > 1) {\n          switch (this.wrapS) {\n            case RepeatWrapping:\n              uv.x = uv.x - Math.floor(uv.x);\n              break;\n\n            case ClampToEdgeWrapping:\n              uv.x = uv.x < 0 ? 0 : 1;\n              break;\n\n            case MirroredRepeatWrapping:\n              if (Math.abs(Math.floor(uv.x) % 2) === 1) {\n                uv.x = Math.ceil(uv.x) - uv.x;\n              } else {\n                uv.x = uv.x - Math.floor(uv.x);\n              }\n\n              break;\n          }\n        }\n\n        if (uv.y < 0 || uv.y > 1) {\n          switch (this.wrapT) {\n            case RepeatWrapping:\n              uv.y = uv.y - Math.floor(uv.y);\n              break;\n\n            case ClampToEdgeWrapping:\n              uv.y = uv.y < 0 ? 0 : 1;\n              break;\n\n            case MirroredRepeatWrapping:\n              if (Math.abs(Math.floor(uv.y) % 2) === 1) {\n                uv.y = Math.ceil(uv.y) - uv.y;\n              } else {\n                uv.y = uv.y - Math.floor(uv.y);\n              }\n\n              break;\n          }\n        }\n\n        if (this.flipY) {\n          uv.y = 1 - uv.y;\n        }\n\n        return uv;\n      }\n    }, {\n      key: \"needsUpdate\",\n      set: function set(value) {\n        if (value === true) this.version++;\n      }\n    }]);\n\n    return Texture;\n  }(EventDispatcher);\n\n  Texture.DEFAULT_IMAGE = undefined;\n  Texture.DEFAULT_MAPPING = UVMapping;\n  Texture.prototype.isTexture = true;\n\n  function serializeImage(image) {\n    if (typeof HTMLImageElement !== 'undefined' && image instanceof HTMLImageElement || typeof HTMLCanvasElement !== 'undefined' && image instanceof HTMLCanvasElement || typeof ImageBitmap !== 'undefined' && image instanceof ImageBitmap) {\n      // default images\n      return ImageUtils.getDataURL(image);\n    } else {\n      if (image.data) {\n        // images of DataTexture\n        return {\n          data: Array.prototype.slice.call(image.data),\n          width: image.width,\n          height: image.height,\n          type: image.data.constructor.name\n        };\n      } else {\n        console.warn('THREE.Texture: Unable to serialize Texture.');\n        return {};\n      }\n    }\n  }\n\n  var Vector4 = /*#__PURE__*/function (_Symbol$iterator2) {\n    function Vector4() {\n      var x = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n      var y = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n      var z = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n      var w = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 1;\n\n      _classCallCheck(this, Vector4);\n\n      this.x = x;\n      this.y = y;\n      this.z = z;\n      this.w = w;\n    }\n\n    _createClass(Vector4, [{\n      key: \"width\",\n      get: function get() {\n        return this.z;\n      },\n      set: function set(value) {\n        this.z = value;\n      }\n    }, {\n      key: \"height\",\n      get: function get() {\n        return this.w;\n      },\n      set: function set(value) {\n        this.w = value;\n      }\n    }, {\n      key: \"set\",\n      value: function set(x, y, z, w) {\n        this.x = x;\n        this.y = y;\n        this.z = z;\n        this.w = w;\n        return this;\n      }\n    }, {\n      key: \"setScalar\",\n      value: function setScalar(scalar) {\n        this.x = scalar;\n        this.y = scalar;\n        this.z = scalar;\n        this.w = scalar;\n        return this;\n      }\n    }, {\n      key: \"setX\",\n      value: function setX(x) {\n        this.x = x;\n        return this;\n      }\n    }, {\n      key: \"setY\",\n      value: function setY(y) {\n        this.y = y;\n        return this;\n      }\n    }, {\n      key: \"setZ\",\n      value: function setZ(z) {\n        this.z = z;\n        return this;\n      }\n    }, {\n      key: \"setW\",\n      value: function setW(w) {\n        this.w = w;\n        return this;\n      }\n    }, {\n      key: \"setComponent\",\n      value: function setComponent(index, value) {\n        switch (index) {\n          case 0:\n            this.x = value;\n            break;\n\n          case 1:\n            this.y = value;\n            break;\n\n          case 2:\n            this.z = value;\n            break;\n\n          case 3:\n            this.w = value;\n            break;\n\n          default:\n            throw new Error('index is out of range: ' + index);\n        }\n\n        return this;\n      }\n    }, {\n      key: \"getComponent\",\n      value: function getComponent(index) {\n        switch (index) {\n          case 0:\n            return this.x;\n\n          case 1:\n            return this.y;\n\n          case 2:\n            return this.z;\n\n          case 3:\n            return this.w;\n\n          default:\n            throw new Error('index is out of range: ' + index);\n        }\n      }\n    }, {\n      key: \"clone\",\n      value: function clone() {\n        return new this.constructor(this.x, this.y, this.z, this.w);\n      }\n    }, {\n      key: \"copy\",\n      value: function copy(v) {\n        this.x = v.x;\n        this.y = v.y;\n        this.z = v.z;\n        this.w = v.w !== undefined ? v.w : 1;\n        return this;\n      }\n    }, {\n      key: \"add\",\n      value: function add(v, w) {\n        if (w !== undefined) {\n          console.warn('THREE.Vector4: .add() now only accepts one argument. Use .addVectors( a, b ) instead.');\n          return this.addVectors(v, w);\n        }\n\n        this.x += v.x;\n        this.y += v.y;\n        this.z += v.z;\n        this.w += v.w;\n        return this;\n      }\n    }, {\n      key: \"addScalar\",\n      value: function addScalar(s) {\n        this.x += s;\n        this.y += s;\n        this.z += s;\n        this.w += s;\n        return this;\n      }\n    }, {\n      key: \"addVectors\",\n      value: function addVectors(a, b) {\n        this.x = a.x + b.x;\n        this.y = a.y + b.y;\n        this.z = a.z + b.z;\n        this.w = a.w + b.w;\n        return this;\n      }\n    }, {\n      key: \"addScaledVector\",\n      value: function addScaledVector(v, s) {\n        this.x += v.x * s;\n        this.y += v.y * s;\n        this.z += v.z * s;\n        this.w += v.w * s;\n        return this;\n      }\n    }, {\n      key: \"sub\",\n      value: function sub(v, w) {\n        if (w !== undefined) {\n          console.warn('THREE.Vector4: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.');\n          return this.subVectors(v, w);\n        }\n\n        this.x -= v.x;\n        this.y -= v.y;\n        this.z -= v.z;\n        this.w -= v.w;\n        return this;\n      }\n    }, {\n      key: \"subScalar\",\n      value: function subScalar(s) {\n        this.x -= s;\n        this.y -= s;\n        this.z -= s;\n        this.w -= s;\n        return this;\n      }\n    }, {\n      key: \"subVectors\",\n      value: function subVectors(a, b) {\n        this.x = a.x - b.x;\n        this.y = a.y - b.y;\n        this.z = a.z - b.z;\n        this.w = a.w - b.w;\n        return this;\n      }\n    }, {\n      key: \"multiply\",\n      value: function multiply(v) {\n        this.x *= v.x;\n        this.y *= v.y;\n        this.z *= v.z;\n        this.w *= v.w;\n        return this;\n      }\n    }, {\n      key: \"multiplyScalar\",\n      value: function multiplyScalar(scalar) {\n        this.x *= scalar;\n        this.y *= scalar;\n        this.z *= scalar;\n        this.w *= scalar;\n        return this;\n      }\n    }, {\n      key: \"applyMatrix4\",\n      value: function applyMatrix4(m) {\n        var x = this.x,\n            y = this.y,\n            z = this.z,\n            w = this.w;\n        var e = m.elements;\n        this.x = e[0] * x + e[4] * y + e[8] * z + e[12] * w;\n        this.y = e[1] * x + e[5] * y + e[9] * z + e[13] * w;\n        this.z = e[2] * x + e[6] * y + e[10] * z + e[14] * w;\n        this.w = e[3] * x + e[7] * y + e[11] * z + e[15] * w;\n        return this;\n      }\n    }, {\n      key: \"divideScalar\",\n      value: function divideScalar(scalar) {\n        return this.multiplyScalar(1 / scalar);\n      }\n    }, {\n      key: \"setAxisAngleFromQuaternion\",\n      value: function setAxisAngleFromQuaternion(q) {\n        // http://www.euclideanspace.com/maths/geometry/rotations/conversions/quaternionToAngle/index.htm\n        // q is assumed to be normalized\n        this.w = 2 * Math.acos(q.w);\n        var s = Math.sqrt(1 - q.w * q.w);\n\n        if (s < 0.0001) {\n          this.x = 1;\n          this.y = 0;\n          this.z = 0;\n        } else {\n          this.x = q.x / s;\n          this.y = q.y / s;\n          this.z = q.z / s;\n        }\n\n        return this;\n      }\n    }, {\n      key: \"setAxisAngleFromRotationMatrix\",\n      value: function setAxisAngleFromRotationMatrix(m) {\n        // http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToAngle/index.htm\n        // assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n        var angle, x, y, z; // variables for result\n\n        var epsilon = 0.01,\n            // margin to allow for rounding errors\n        epsilon2 = 0.1,\n            // margin to distinguish between 0 and 180 degrees\n        te = m.elements,\n            m11 = te[0],\n            m12 = te[4],\n            m13 = te[8],\n            m21 = te[1],\n            m22 = te[5],\n            m23 = te[9],\n            m31 = te[2],\n            m32 = te[6],\n            m33 = te[10];\n\n        if (Math.abs(m12 - m21) < epsilon && Math.abs(m13 - m31) < epsilon && Math.abs(m23 - m32) < epsilon) {\n          // singularity found\n          // first check for identity matrix which must have +1 for all terms\n          // in leading diagonal and zero in other terms\n          if (Math.abs(m12 + m21) < epsilon2 && Math.abs(m13 + m31) < epsilon2 && Math.abs(m23 + m32) < epsilon2 && Math.abs(m11 + m22 + m33 - 3) < epsilon2) {\n            // this singularity is identity matrix so angle = 0\n            this.set(1, 0, 0, 0);\n            return this; // zero angle, arbitrary axis\n          } // otherwise this singularity is angle = 180\n\n\n          angle = Math.PI;\n          var xx = (m11 + 1) / 2;\n          var yy = (m22 + 1) / 2;\n          var zz = (m33 + 1) / 2;\n          var xy = (m12 + m21) / 4;\n          var xz = (m13 + m31) / 4;\n          var yz = (m23 + m32) / 4;\n\n          if (xx > yy && xx > zz) {\n            // m11 is the largest diagonal term\n            if (xx < epsilon) {\n              x = 0;\n              y = 0.707106781;\n              z = 0.707106781;\n            } else {\n              x = Math.sqrt(xx);\n              y = xy / x;\n              z = xz / x;\n            }\n          } else if (yy > zz) {\n            // m22 is the largest diagonal term\n            if (yy < epsilon) {\n              x = 0.707106781;\n              y = 0;\n              z = 0.707106781;\n            } else {\n              y = Math.sqrt(yy);\n              x = xy / y;\n              z = yz / y;\n            }\n          } else {\n            // m33 is the largest diagonal term so base result on this\n            if (zz < epsilon) {\n              x = 0.707106781;\n              y = 0.707106781;\n              z = 0;\n            } else {\n              z = Math.sqrt(zz);\n              x = xz / z;\n              y = yz / z;\n            }\n          }\n\n          this.set(x, y, z, angle);\n          return this; // return 180 deg rotation\n        } // as we have reached here there are no singularities so we can handle normally\n\n\n        var s = Math.sqrt((m32 - m23) * (m32 - m23) + (m13 - m31) * (m13 - m31) + (m21 - m12) * (m21 - m12)); // used to normalize\n\n        if (Math.abs(s) < 0.001) s = 1; // prevent divide by zero, should not happen if matrix is orthogonal and should be\n        // caught by singularity test above, but I've left it in just in case\n\n        this.x = (m32 - m23) / s;\n        this.y = (m13 - m31) / s;\n        this.z = (m21 - m12) / s;\n        this.w = Math.acos((m11 + m22 + m33 - 1) / 2);\n        return this;\n      }\n    }, {\n      key: \"min\",\n      value: function min(v) {\n        this.x = Math.min(this.x, v.x);\n        this.y = Math.min(this.y, v.y);\n        this.z = Math.min(this.z, v.z);\n        this.w = Math.min(this.w, v.w);\n        return this;\n      }\n    }, {\n      key: \"max\",\n      value: function max(v) {\n        this.x = Math.max(this.x, v.x);\n        this.y = Math.max(this.y, v.y);\n        this.z = Math.max(this.z, v.z);\n        this.w = Math.max(this.w, v.w);\n        return this;\n      }\n    }, {\n      key: \"clamp\",\n      value: function clamp(min, max) {\n        // assumes min < max, componentwise\n        this.x = Math.max(min.x, Math.min(max.x, this.x));\n        this.y = Math.max(min.y, Math.min(max.y, this.y));\n        this.z = Math.max(min.z, Math.min(max.z, this.z));\n        this.w = Math.max(min.w, Math.min(max.w, this.w));\n        return this;\n      }\n    }, {\n      key: \"clampScalar\",\n      value: function clampScalar(minVal, maxVal) {\n        this.x = Math.max(minVal, Math.min(maxVal, this.x));\n        this.y = Math.max(minVal, Math.min(maxVal, this.y));\n        this.z = Math.max(minVal, Math.min(maxVal, this.z));\n        this.w = Math.max(minVal, Math.min(maxVal, this.w));\n        return this;\n      }\n    }, {\n      key: \"clampLength\",\n      value: function clampLength(min, max) {\n        var length = this.length();\n        return this.divideScalar(length || 1).multiplyScalar(Math.max(min, Math.min(max, length)));\n      }\n    }, {\n      key: \"floor\",\n      value: function floor() {\n        this.x = Math.floor(this.x);\n        this.y = Math.floor(this.y);\n        this.z = Math.floor(this.z);\n        this.w = Math.floor(this.w);\n        return this;\n      }\n    }, {\n      key: \"ceil\",\n      value: function ceil() {\n        this.x = Math.ceil(this.x);\n        this.y = Math.ceil(this.y);\n        this.z = Math.ceil(this.z);\n        this.w = Math.ceil(this.w);\n        return this;\n      }\n    }, {\n      key: \"round\",\n      value: function round() {\n        this.x = Math.round(this.x);\n        this.y = Math.round(this.y);\n        this.z = Math.round(this.z);\n        this.w = Math.round(this.w);\n        return this;\n      }\n    }, {\n      key: \"roundToZero\",\n      value: function roundToZero() {\n        this.x = this.x < 0 ? Math.ceil(this.x) : Math.floor(this.x);\n        this.y = this.y < 0 ? Math.ceil(this.y) : Math.floor(this.y);\n        this.z = this.z < 0 ? Math.ceil(this.z) : Math.floor(this.z);\n        this.w = this.w < 0 ? Math.ceil(this.w) : Math.floor(this.w);\n        return this;\n      }\n    }, {\n      key: \"negate\",\n      value: function negate() {\n        this.x = -this.x;\n        this.y = -this.y;\n        this.z = -this.z;\n        this.w = -this.w;\n        return this;\n      }\n    }, {\n      key: \"dot\",\n      value: function dot(v) {\n        return this.x * v.x + this.y * v.y + this.z * v.z + this.w * v.w;\n      }\n    }, {\n      key: \"lengthSq\",\n      value: function lengthSq() {\n        return this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w;\n      }\n    }, {\n      key: \"length\",\n      value: function length() {\n        return Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w);\n      }\n    }, {\n      key: \"manhattanLength\",\n      value: function manhattanLength() {\n        return Math.abs(this.x) + Math.abs(this.y) + Math.abs(this.z) + Math.abs(this.w);\n      }\n    }, {\n      key: \"normalize\",\n      value: function normalize() {\n        return this.divideScalar(this.length() || 1);\n      }\n    }, {\n      key: \"setLength\",\n      value: function setLength(length) {\n        return this.normalize().multiplyScalar(length);\n      }\n    }, {\n      key: \"lerp\",\n      value: function lerp(v, alpha) {\n        this.x += (v.x - this.x) * alpha;\n        this.y += (v.y - this.y) * alpha;\n        this.z += (v.z - this.z) * alpha;\n        this.w += (v.w - this.w) * alpha;\n        return this;\n      }\n    }, {\n      key: \"lerpVectors\",\n      value: function lerpVectors(v1, v2, alpha) {\n        this.x = v1.x + (v2.x - v1.x) * alpha;\n        this.y = v1.y + (v2.y - v1.y) * alpha;\n        this.z = v1.z + (v2.z - v1.z) * alpha;\n        this.w = v1.w + (v2.w - v1.w) * alpha;\n        return this;\n      }\n    }, {\n      key: \"equals\",\n      value: function equals(v) {\n        return v.x === this.x && v.y === this.y && v.z === this.z && v.w === this.w;\n      }\n    }, {\n      key: \"fromArray\",\n      value: function fromArray(array) {\n        var offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n        this.x = array[offset];\n        this.y = array[offset + 1];\n        this.z = array[offset + 2];\n        this.w = array[offset + 3];\n        return this;\n      }\n    }, {\n      key: \"toArray\",\n      value: function toArray() {\n        var array = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n        var offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n        array[offset] = this.x;\n        array[offset + 1] = this.y;\n        array[offset + 2] = this.z;\n        array[offset + 3] = this.w;\n        return array;\n      }\n    }, {\n      key: \"fromBufferAttribute\",\n      value: function fromBufferAttribute(attribute, index, offset) {\n        if (offset !== undefined) {\n          console.warn('THREE.Vector4: offset has been removed from .fromBufferAttribute().');\n        }\n\n        this.x = attribute.getX(index);\n        this.y = attribute.getY(index);\n        this.z = attribute.getZ(index);\n        this.w = attribute.getW(index);\n        return this;\n      }\n    }, {\n      key: \"random\",\n      value: function random() {\n        this.x = Math.random();\n        this.y = Math.random();\n        this.z = Math.random();\n        this.w = Math.random();\n        return this;\n      }\n    }, {\n      key: _Symbol$iterator2,\n      value: /*#__PURE__*/_regeneratorRuntime.mark(function value() {\n        return _regeneratorRuntime.wrap(function value$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.next = 2;\n                return this.x;\n\n              case 2:\n                _context3.next = 4;\n                return this.y;\n\n              case 4:\n                _context3.next = 6;\n                return this.z;\n\n              case 6:\n                _context3.next = 8;\n                return this.w;\n\n              case 8:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, value, this);\n      })\n    }]);\n\n    return Vector4;\n  }(Symbol.iterator);\n\n  Vector4.prototype.isVector4 = true;\n  /*\n   In options, we can specify:\n   * Texture parameters for an auto-generated target texture\n   * depthBuffer/stencilBuffer: Booleans to indicate if we should generate these buffers\n  */\n\n  var WebGLRenderTarget = /*#__PURE__*/function (_EventDispatcher2) {\n    _inherits(WebGLRenderTarget, _EventDispatcher2);\n\n    var _super2 = _createSuper(WebGLRenderTarget);\n\n    function WebGLRenderTarget(width, height) {\n      var _this3;\n\n      var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n      _classCallCheck(this, WebGLRenderTarget);\n\n      _this3 = _super2.call(this);\n      _this3.width = width;\n      _this3.height = height;\n      _this3.depth = 1;\n      _this3.scissor = new Vector4(0, 0, width, height);\n      _this3.scissorTest = false;\n      _this3.viewport = new Vector4(0, 0, width, height);\n      _this3.texture = new Texture(undefined, options.mapping, options.wrapS, options.wrapT, options.magFilter, options.minFilter, options.format, options.type, options.anisotropy, options.encoding);\n      _this3.texture.isRenderTargetTexture = true;\n      _this3.texture.image = {\n        width: width,\n        height: height,\n        depth: 1\n      };\n      _this3.texture.generateMipmaps = options.generateMipmaps !== undefined ? options.generateMipmaps : false;\n      _this3.texture.internalFormat = options.internalFormat !== undefined ? options.internalFormat : null;\n      _this3.texture.minFilter = options.minFilter !== undefined ? options.minFilter : LinearFilter;\n      _this3.depthBuffer = options.depthBuffer !== undefined ? options.depthBuffer : true;\n      _this3.stencilBuffer = options.stencilBuffer !== undefined ? options.stencilBuffer : false;\n      _this3.depthTexture = options.depthTexture !== undefined ? options.depthTexture : null;\n      return _this3;\n    }\n\n    _createClass(WebGLRenderTarget, [{\n      key: \"setTexture\",\n      value: function setTexture(texture) {\n        texture.image = {\n          width: this.width,\n          height: this.height,\n          depth: this.depth\n        };\n        this.texture = texture;\n      }\n    }, {\n      key: \"setSize\",\n      value: function setSize(width, height) {\n        var depth = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n\n        if (this.width !== width || this.height !== height || this.depth !== depth) {\n          this.width = width;\n          this.height = height;\n          this.depth = depth;\n          this.texture.image.width = width;\n          this.texture.image.height = height;\n          this.texture.image.depth = depth;\n          this.dispose();\n        }\n\n        this.viewport.set(0, 0, width, height);\n        this.scissor.set(0, 0, width, height);\n      }\n    }, {\n      key: \"clone\",\n      value: function clone() {\n        return new this.constructor().copy(this);\n      }\n    }, {\n      key: \"copy\",\n      value: function copy(source) {\n        this.width = source.width;\n        this.height = source.height;\n        this.depth = source.depth;\n        this.viewport.copy(source.viewport);\n        this.texture = source.texture.clone();\n        this.texture.image = _objectSpread({}, this.texture.image); // See #20328.\n\n        this.depthBuffer = source.depthBuffer;\n        this.stencilBuffer = source.stencilBuffer;\n        this.depthTexture = source.depthTexture;\n        return this;\n      }\n    }, {\n      key: \"dispose\",\n      value: function dispose() {\n        this.dispatchEvent({\n          type: 'dispose'\n        });\n      }\n    }]);\n\n    return WebGLRenderTarget;\n  }(EventDispatcher);\n\n  WebGLRenderTarget.prototype.isWebGLRenderTarget = true;\n\n  var WebGLMultipleRenderTargets = /*#__PURE__*/function (_WebGLRenderTarget) {\n    _inherits(WebGLMultipleRenderTargets, _WebGLRenderTarget);\n\n    var _super3 = _createSuper(WebGLMultipleRenderTargets);\n\n    function WebGLMultipleRenderTargets(width, height, count) {\n      var _this4;\n\n      _classCallCheck(this, WebGLMultipleRenderTargets);\n\n      _this4 = _super3.call(this, width, height);\n      var texture = _this4.texture;\n      _this4.texture = [];\n\n      for (var _i6 = 0; _i6 < count; _i6++) {\n        _this4.texture[_i6] = texture.clone();\n      }\n\n      return _this4;\n    }\n\n    _createClass(WebGLMultipleRenderTargets, [{\n      key: \"setSize\",\n      value: function setSize(width, height) {\n        var depth = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n\n        if (this.width !== width || this.height !== height || this.depth !== depth) {\n          this.width = width;\n          this.height = height;\n          this.depth = depth;\n\n          for (var _i7 = 0, il = this.texture.length; _i7 < il; _i7++) {\n            this.texture[_i7].image.width = width;\n            this.texture[_i7].image.height = height;\n            this.texture[_i7].image.depth = depth;\n          }\n\n          this.dispose();\n        }\n\n        this.viewport.set(0, 0, width, height);\n        this.scissor.set(0, 0, width, height);\n        return this;\n      }\n    }, {\n      key: \"copy\",\n      value: function copy(source) {\n        this.dispose();\n        this.width = source.width;\n        this.height = source.height;\n        this.depth = source.depth;\n        this.viewport.set(0, 0, this.width, this.height);\n        this.scissor.set(0, 0, this.width, this.height);\n        this.depthBuffer = source.depthBuffer;\n        this.stencilBuffer = source.stencilBuffer;\n        this.depthTexture = source.depthTexture;\n        this.texture.length = 0;\n\n        for (var _i8 = 0, il = source.texture.length; _i8 < il; _i8++) {\n          this.texture[_i8] = source.texture[_i8].clone();\n        }\n\n        return this;\n      }\n    }]);\n\n    return WebGLMultipleRenderTargets;\n  }(WebGLRenderTarget);\n\n  WebGLMultipleRenderTargets.prototype.isWebGLMultipleRenderTargets = true;\n\n  var WebGLMultisampleRenderTarget = /*#__PURE__*/function (_WebGLRenderTarget2) {\n    _inherits(WebGLMultisampleRenderTarget, _WebGLRenderTarget2);\n\n    var _super4 = _createSuper(WebGLMultisampleRenderTarget);\n\n    function WebGLMultisampleRenderTarget(width, height, options) {\n      var _this5;\n\n      _classCallCheck(this, WebGLMultisampleRenderTarget);\n\n      _this5 = _super4.call(this, width, height, options);\n      _this5.samples = 4;\n      return _this5;\n    }\n\n    _createClass(WebGLMultisampleRenderTarget, [{\n      key: \"copy\",\n      value: function copy(source) {\n        _get(_getPrototypeOf(WebGLMultisampleRenderTarget.prototype), \"copy\", this).call(this, source);\n\n        this.samples = source.samples;\n        return this;\n      }\n    }]);\n\n    return WebGLMultisampleRenderTarget;\n  }(WebGLRenderTarget);\n\n  WebGLMultisampleRenderTarget.prototype.isWebGLMultisampleRenderTarget = true;\n\n  var Quaternion = /*#__PURE__*/function () {\n    function Quaternion() {\n      var x = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n      var y = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n      var z = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n      var w = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 1;\n\n      _classCallCheck(this, Quaternion);\n\n      this._x = x;\n      this._y = y;\n      this._z = z;\n      this._w = w;\n    }\n\n    _createClass(Quaternion, [{\n      key: \"x\",\n      get: function get() {\n        return this._x;\n      },\n      set: function set(value) {\n        this._x = value;\n\n        this._onChangeCallback();\n      }\n    }, {\n      key: \"y\",\n      get: function get() {\n        return this._y;\n      },\n      set: function set(value) {\n        this._y = value;\n\n        this._onChangeCallback();\n      }\n    }, {\n      key: \"z\",\n      get: function get() {\n        return this._z;\n      },\n      set: function set(value) {\n        this._z = value;\n\n        this._onChangeCallback();\n      }\n    }, {\n      key: \"w\",\n      get: function get() {\n        return this._w;\n      },\n      set: function set(value) {\n        this._w = value;\n\n        this._onChangeCallback();\n      }\n    }, {\n      key: \"set\",\n      value: function set(x, y, z, w) {\n        this._x = x;\n        this._y = y;\n        this._z = z;\n        this._w = w;\n\n        this._onChangeCallback();\n\n        return this;\n      }\n    }, {\n      key: \"clone\",\n      value: function clone() {\n        return new this.constructor(this._x, this._y, this._z, this._w);\n      }\n    }, {\n      key: \"copy\",\n      value: function copy(quaternion) {\n        this._x = quaternion.x;\n        this._y = quaternion.y;\n        this._z = quaternion.z;\n        this._w = quaternion.w;\n\n        this._onChangeCallback();\n\n        return this;\n      }\n    }, {\n      key: \"setFromEuler\",\n      value: function setFromEuler(euler, update) {\n        if (!(euler && euler.isEuler)) {\n          throw new Error('THREE.Quaternion: .setFromEuler() now expects an Euler rotation rather than a Vector3 and order.');\n        }\n\n        var x = euler._x,\n            y = euler._y,\n            z = euler._z,\n            order = euler._order; // http://www.mathworks.com/matlabcentral/fileexchange/\n        // \t20696-function-to-convert-between-dcm-euler-angles-quaternions-and-euler-vectors/\n        //\tcontent/SpinCalc.m\n\n        var cos = Math.cos;\n        var sin = Math.sin;\n        var c1 = cos(x / 2);\n        var c2 = cos(y / 2);\n        var c3 = cos(z / 2);\n        var s1 = sin(x / 2);\n        var s2 = sin(y / 2);\n        var s3 = sin(z / 2);\n\n        switch (order) {\n          case 'XYZ':\n            this._x = s1 * c2 * c3 + c1 * s2 * s3;\n            this._y = c1 * s2 * c3 - s1 * c2 * s3;\n            this._z = c1 * c2 * s3 + s1 * s2 * c3;\n            this._w = c1 * c2 * c3 - s1 * s2 * s3;\n            break;\n\n          case 'YXZ':\n            this._x = s1 * c2 * c3 + c1 * s2 * s3;\n            this._y = c1 * s2 * c3 - s1 * c2 * s3;\n            this._z = c1 * c2 * s3 - s1 * s2 * c3;\n            this._w = c1 * c2 * c3 + s1 * s2 * s3;\n            break;\n\n          case 'ZXY':\n            this._x = s1 * c2 * c3 - c1 * s2 * s3;\n            this._y = c1 * s2 * c3 + s1 * c2 * s3;\n            this._z = c1 * c2 * s3 + s1 * s2 * c3;\n            this._w = c1 * c2 * c3 - s1 * s2 * s3;\n            break;\n\n          case 'ZYX':\n            this._x = s1 * c2 * c3 - c1 * s2 * s3;\n            this._y = c1 * s2 * c3 + s1 * c2 * s3;\n            this._z = c1 * c2 * s3 - s1 * s2 * c3;\n            this._w = c1 * c2 * c3 + s1 * s2 * s3;\n            break;\n\n          case 'YZX':\n            this._x = s1 * c2 * c3 + c1 * s2 * s3;\n            this._y = c1 * s2 * c3 + s1 * c2 * s3;\n            this._z = c1 * c2 * s3 - s1 * s2 * c3;\n            this._w = c1 * c2 * c3 - s1 * s2 * s3;\n            break;\n\n          case 'XZY':\n            this._x = s1 * c2 * c3 - c1 * s2 * s3;\n            this._y = c1 * s2 * c3 - s1 * c2 * s3;\n            this._z = c1 * c2 * s3 + s1 * s2 * c3;\n            this._w = c1 * c2 * c3 + s1 * s2 * s3;\n            break;\n\n          default:\n            console.warn('THREE.Quaternion: .setFromEuler() encountered an unknown order: ' + order);\n        }\n\n        if (update !== false) this._onChangeCallback();\n        return this;\n      }\n    }, {\n      key: \"setFromAxisAngle\",\n      value: function setFromAxisAngle(axis, angle) {\n        // http://www.euclideanspace.com/maths/geometry/rotations/conversions/angleToQuaternion/index.htm\n        // assumes axis is normalized\n        var halfAngle = angle / 2,\n            s = Math.sin(halfAngle);\n        this._x = axis.x * s;\n        this._y = axis.y * s;\n        this._z = axis.z * s;\n        this._w = Math.cos(halfAngle);\n\n        this._onChangeCallback();\n\n        return this;\n      }\n    }, {\n      key: \"setFromRotationMatrix\",\n      value: function setFromRotationMatrix(m) {\n        // http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToQuaternion/index.htm\n        // assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n        var te = m.elements,\n            m11 = te[0],\n            m12 = te[4],\n            m13 = te[8],\n            m21 = te[1],\n            m22 = te[5],\n            m23 = te[9],\n            m31 = te[2],\n            m32 = te[6],\n            m33 = te[10],\n            trace = m11 + m22 + m33;\n\n        if (trace > 0) {\n          var s = 0.5 / Math.sqrt(trace + 1.0);\n          this._w = 0.25 / s;\n          this._x = (m32 - m23) * s;\n          this._y = (m13 - m31) * s;\n          this._z = (m21 - m12) * s;\n        } else if (m11 > m22 && m11 > m33) {\n          var _s = 2.0 * Math.sqrt(1.0 + m11 - m22 - m33);\n\n          this._w = (m32 - m23) / _s;\n          this._x = 0.25 * _s;\n          this._y = (m12 + m21) / _s;\n          this._z = (m13 + m31) / _s;\n        } else if (m22 > m33) {\n          var _s2 = 2.0 * Math.sqrt(1.0 + m22 - m11 - m33);\n\n          this._w = (m13 - m31) / _s2;\n          this._x = (m12 + m21) / _s2;\n          this._y = 0.25 * _s2;\n          this._z = (m23 + m32) / _s2;\n        } else {\n          var _s3 = 2.0 * Math.sqrt(1.0 + m33 - m11 - m22);\n\n          this._w = (m21 - m12) / _s3;\n          this._x = (m13 + m31) / _s3;\n          this._y = (m23 + m32) / _s3;\n          this._z = 0.25 * _s3;\n        }\n\n        this._onChangeCallback();\n\n        return this;\n      }\n    }, {\n      key: \"setFromUnitVectors\",\n      value: function setFromUnitVectors(vFrom, vTo) {\n        // assumes direction vectors vFrom and vTo are normalized\n        var r = vFrom.dot(vTo) + 1;\n\n        if (r < Number.EPSILON) {\n          // vFrom and vTo point in opposite directions\n          r = 0;\n\n          if (Math.abs(vFrom.x) > Math.abs(vFrom.z)) {\n            this._x = -vFrom.y;\n            this._y = vFrom.x;\n            this._z = 0;\n            this._w = r;\n          } else {\n            this._x = 0;\n            this._y = -vFrom.z;\n            this._z = vFrom.y;\n            this._w = r;\n          }\n        } else {\n          // crossVectors( vFrom, vTo ); // inlined to avoid cyclic dependency on Vector3\n          this._x = vFrom.y * vTo.z - vFrom.z * vTo.y;\n          this._y = vFrom.z * vTo.x - vFrom.x * vTo.z;\n          this._z = vFrom.x * vTo.y - vFrom.y * vTo.x;\n          this._w = r;\n        }\n\n        return this.normalize();\n      }\n    }, {\n      key: \"angleTo\",\n      value: function angleTo(q) {\n        return 2 * Math.acos(Math.abs(clamp(this.dot(q), -1, 1)));\n      }\n    }, {\n      key: \"rotateTowards\",\n      value: function rotateTowards(q, step) {\n        var angle = this.angleTo(q);\n        if (angle === 0) return this;\n        var t = Math.min(1, step / angle);\n        this.slerp(q, t);\n        return this;\n      }\n    }, {\n      key: \"identity\",\n      value: function identity() {\n        return this.set(0, 0, 0, 1);\n      }\n    }, {\n      key: \"invert\",\n      value: function invert() {\n        // quaternion is assumed to have unit length\n        return this.conjugate();\n      }\n    }, {\n      key: \"conjugate\",\n      value: function conjugate() {\n        this._x *= -1;\n        this._y *= -1;\n        this._z *= -1;\n\n        this._onChangeCallback();\n\n        return this;\n      }\n    }, {\n      key: \"dot\",\n      value: function dot(v) {\n        return this._x * v._x + this._y * v._y + this._z * v._z + this._w * v._w;\n      }\n    }, {\n      key: \"lengthSq\",\n      value: function lengthSq() {\n        return this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w;\n      }\n    }, {\n      key: \"length\",\n      value: function length() {\n        return Math.sqrt(this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w);\n      }\n    }, {\n      key: \"normalize\",\n      value: function normalize() {\n        var l = this.length();\n\n        if (l === 0) {\n          this._x = 0;\n          this._y = 0;\n          this._z = 0;\n          this._w = 1;\n        } else {\n          l = 1 / l;\n          this._x = this._x * l;\n          this._y = this._y * l;\n          this._z = this._z * l;\n          this._w = this._w * l;\n        }\n\n        this._onChangeCallback();\n\n        return this;\n      }\n    }, {\n      key: \"multiply\",\n      value: function multiply(q, p) {\n        if (p !== undefined) {\n          console.warn('THREE.Quaternion: .multiply() now only accepts one argument. Use .multiplyQuaternions( a, b ) instead.');\n          return this.multiplyQuaternions(q, p);\n        }\n\n        return this.multiplyQuaternions(this, q);\n      }\n    }, {\n      key: \"premultiply\",\n      value: function premultiply(q) {\n        return this.multiplyQuaternions(q, this);\n      }\n    }, {\n      key: \"multiplyQuaternions\",\n      value: function multiplyQuaternions(a, b) {\n        // from http://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/code/index.htm\n        var qax = a._x,\n            qay = a._y,\n            qaz = a._z,\n            qaw = a._w;\n        var qbx = b._x,\n            qby = b._y,\n            qbz = b._z,\n            qbw = b._w;\n        this._x = qax * qbw + qaw * qbx + qay * qbz - qaz * qby;\n        this._y = qay * qbw + qaw * qby + qaz * qbx - qax * qbz;\n        this._z = qaz * qbw + qaw * qbz + qax * qby - qay * qbx;\n        this._w = qaw * qbw - qax * qbx - qay * qby - qaz * qbz;\n\n        this._onChangeCallback();\n\n        return this;\n      }\n    }, {\n      key: \"slerp\",\n      value: function slerp(qb, t) {\n        if (t === 0) return this;\n        if (t === 1) return this.copy(qb);\n        var x = this._x,\n            y = this._y,\n            z = this._z,\n            w = this._w; // http://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/slerp/\n\n        var cosHalfTheta = w * qb._w + x * qb._x + y * qb._y + z * qb._z;\n\n        if (cosHalfTheta < 0) {\n          this._w = -qb._w;\n          this._x = -qb._x;\n          this._y = -qb._y;\n          this._z = -qb._z;\n          cosHalfTheta = -cosHalfTheta;\n        } else {\n          this.copy(qb);\n        }\n\n        if (cosHalfTheta >= 1.0) {\n          this._w = w;\n          this._x = x;\n          this._y = y;\n          this._z = z;\n          return this;\n        }\n\n        var sqrSinHalfTheta = 1.0 - cosHalfTheta * cosHalfTheta;\n\n        if (sqrSinHalfTheta <= Number.EPSILON) {\n          var s = 1 - t;\n          this._w = s * w + t * this._w;\n          this._x = s * x + t * this._x;\n          this._y = s * y + t * this._y;\n          this._z = s * z + t * this._z;\n          this.normalize();\n\n          this._onChangeCallback();\n\n          return this;\n        }\n\n        var sinHalfTheta = Math.sqrt(sqrSinHalfTheta);\n        var halfTheta = Math.atan2(sinHalfTheta, cosHalfTheta);\n        var ratioA = Math.sin((1 - t) * halfTheta) / sinHalfTheta,\n            ratioB = Math.sin(t * halfTheta) / sinHalfTheta;\n        this._w = w * ratioA + this._w * ratioB;\n        this._x = x * ratioA + this._x * ratioB;\n        this._y = y * ratioA + this._y * ratioB;\n        this._z = z * ratioA + this._z * ratioB;\n\n        this._onChangeCallback();\n\n        return this;\n      }\n    }, {\n      key: \"slerpQuaternions\",\n      value: function slerpQuaternions(qa, qb, t) {\n        this.copy(qa).slerp(qb, t);\n      }\n    }, {\n      key: \"random\",\n      value: function random() {\n        // Derived from http://planning.cs.uiuc.edu/node198.html\n        // Note, this source uses w, x, y, z ordering,\n        // so we swap the order below.\n        var u1 = Math.random();\n        var sqrt1u1 = Math.sqrt(1 - u1);\n        var sqrtu1 = Math.sqrt(u1);\n        var u2 = 2 * Math.PI * Math.random();\n        var u3 = 2 * Math.PI * Math.random();\n        return this.set(sqrt1u1 * Math.cos(u2), sqrtu1 * Math.sin(u3), sqrtu1 * Math.cos(u3), sqrt1u1 * Math.sin(u2));\n      }\n    }, {\n      key: \"equals\",\n      value: function equals(quaternion) {\n        return quaternion._x === this._x && quaternion._y === this._y && quaternion._z === this._z && quaternion._w === this._w;\n      }\n    }, {\n      key: \"fromArray\",\n      value: function fromArray(array) {\n        var offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n        this._x = array[offset];\n        this._y = array[offset + 1];\n        this._z = array[offset + 2];\n        this._w = array[offset + 3];\n\n        this._onChangeCallback();\n\n        return this;\n      }\n    }, {\n      key: \"toArray\",\n      value: function toArray() {\n        var array = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n        var offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n        array[offset] = this._x;\n        array[offset + 1] = this._y;\n        array[offset + 2] = this._z;\n        array[offset + 3] = this._w;\n        return array;\n      }\n    }, {\n      key: \"fromBufferAttribute\",\n      value: function fromBufferAttribute(attribute, index) {\n        this._x = attribute.getX(index);\n        this._y = attribute.getY(index);\n        this._z = attribute.getZ(index);\n        this._w = attribute.getW(index);\n        return this;\n      }\n    }, {\n      key: \"_onChange\",\n      value: function _onChange(callback) {\n        this._onChangeCallback = callback;\n        return this;\n      }\n    }, {\n      key: \"_onChangeCallback\",\n      value: function _onChangeCallback() {}\n    }], [{\n      key: \"slerp\",\n      value: function slerp(qa, qb, qm, t) {\n        console.warn('THREE.Quaternion: Static .slerp() has been deprecated. Use qm.slerpQuaternions( qa, qb, t ) instead.');\n        return qm.slerpQuaternions(qa, qb, t);\n      }\n    }, {\n      key: \"slerpFlat\",\n      value: function slerpFlat(dst, dstOffset, src0, srcOffset0, src1, srcOffset1, t) {\n        // fuzz-free, array-based Quaternion SLERP operation\n        var x0 = src0[srcOffset0 + 0],\n            y0 = src0[srcOffset0 + 1],\n            z0 = src0[srcOffset0 + 2],\n            w0 = src0[srcOffset0 + 3];\n        var x1 = src1[srcOffset1 + 0],\n            y1 = src1[srcOffset1 + 1],\n            z1 = src1[srcOffset1 + 2],\n            w1 = src1[srcOffset1 + 3];\n\n        if (t === 0) {\n          dst[dstOffset + 0] = x0;\n          dst[dstOffset + 1] = y0;\n          dst[dstOffset + 2] = z0;\n          dst[dstOffset + 3] = w0;\n          return;\n        }\n\n        if (t === 1) {\n          dst[dstOffset + 0] = x1;\n          dst[dstOffset + 1] = y1;\n          dst[dstOffset + 2] = z1;\n          dst[dstOffset + 3] = w1;\n          return;\n        }\n\n        if (w0 !== w1 || x0 !== x1 || y0 !== y1 || z0 !== z1) {\n          var s = 1 - t;\n          var cos = x0 * x1 + y0 * y1 + z0 * z1 + w0 * w1,\n              dir = cos >= 0 ? 1 : -1,\n              sqrSin = 1 - cos * cos; // Skip the Slerp for tiny steps to avoid numeric problems:\n\n          if (sqrSin > Number.EPSILON) {\n            var sin = Math.sqrt(sqrSin),\n                len = Math.atan2(sin, cos * dir);\n            s = Math.sin(s * len) / sin;\n            t = Math.sin(t * len) / sin;\n          }\n\n          var tDir = t * dir;\n          x0 = x0 * s + x1 * tDir;\n          y0 = y0 * s + y1 * tDir;\n          z0 = z0 * s + z1 * tDir;\n          w0 = w0 * s + w1 * tDir; // Normalize in case we just did a lerp:\n\n          if (s === 1 - t) {\n            var f = 1 / Math.sqrt(x0 * x0 + y0 * y0 + z0 * z0 + w0 * w0);\n            x0 *= f;\n            y0 *= f;\n            z0 *= f;\n            w0 *= f;\n          }\n        }\n\n        dst[dstOffset] = x0;\n        dst[dstOffset + 1] = y0;\n        dst[dstOffset + 2] = z0;\n        dst[dstOffset + 3] = w0;\n      }\n    }, {\n      key: \"multiplyQuaternionsFlat\",\n      value: function multiplyQuaternionsFlat(dst, dstOffset, src0, srcOffset0, src1, srcOffset1) {\n        var x0 = src0[srcOffset0];\n        var y0 = src0[srcOffset0 + 1];\n        var z0 = src0[srcOffset0 + 2];\n        var w0 = src0[srcOffset0 + 3];\n        var x1 = src1[srcOffset1];\n        var y1 = src1[srcOffset1 + 1];\n        var z1 = src1[srcOffset1 + 2];\n        var w1 = src1[srcOffset1 + 3];\n        dst[dstOffset] = x0 * w1 + w0 * x1 + y0 * z1 - z0 * y1;\n        dst[dstOffset + 1] = y0 * w1 + w0 * y1 + z0 * x1 - x0 * z1;\n        dst[dstOffset + 2] = z0 * w1 + w0 * z1 + x0 * y1 - y0 * x1;\n        dst[dstOffset + 3] = w0 * w1 - x0 * x1 - y0 * y1 - z0 * z1;\n        return dst;\n      }\n    }]);\n\n    return Quaternion;\n  }();\n\n  Quaternion.prototype.isQuaternion = true;\n\n  var Vector3 = /*#__PURE__*/function (_Symbol$iterator3) {\n    function Vector3() {\n      var x = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n      var y = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n      var z = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n\n      _classCallCheck(this, Vector3);\n\n      this.x = x;\n      this.y = y;\n      this.z = z;\n    }\n\n    _createClass(Vector3, [{\n      key: \"set\",\n      value: function set(x, y, z) {\n        if (z === undefined) z = this.z; // sprite.scale.set(x,y)\n\n        this.x = x;\n        this.y = y;\n        this.z = z;\n        return this;\n      }\n    }, {\n      key: \"setScalar\",\n      value: function setScalar(scalar) {\n        this.x = scalar;\n        this.y = scalar;\n        this.z = scalar;\n        return this;\n      }\n    }, {\n      key: \"setX\",\n      value: function setX(x) {\n        this.x = x;\n        return this;\n      }\n    }, {\n      key: \"setY\",\n      value: function setY(y) {\n        this.y = y;\n        return this;\n      }\n    }, {\n      key: \"setZ\",\n      value: function setZ(z) {\n        this.z = z;\n        return this;\n      }\n    }, {\n      key: \"setComponent\",\n      value: function setComponent(index, value) {\n        switch (index) {\n          case 0:\n            this.x = value;\n            break;\n\n          case 1:\n            this.y = value;\n            break;\n\n          case 2:\n            this.z = value;\n            break;\n\n          default:\n            throw new Error('index is out of range: ' + index);\n        }\n\n        return this;\n      }\n    }, {\n      key: \"getComponent\",\n      value: function getComponent(index) {\n        switch (index) {\n          case 0:\n            return this.x;\n\n          case 1:\n            return this.y;\n\n          case 2:\n            return this.z;\n\n          default:\n            throw new Error('index is out of range: ' + index);\n        }\n      }\n    }, {\n      key: \"clone\",\n      value: function clone() {\n        return new this.constructor(this.x, this.y, this.z);\n      }\n    }, {\n      key: \"copy\",\n      value: function copy(v) {\n        this.x = v.x;\n        this.y = v.y;\n        this.z = v.z;\n        return this;\n      }\n    }, {\n      key: \"add\",\n      value: function add(v, w) {\n        if (w !== undefined) {\n          console.warn('THREE.Vector3: .add() now only accepts one argument. Use .addVectors( a, b ) instead.');\n          return this.addVectors(v, w);\n        }\n\n        this.x += v.x;\n        this.y += v.y;\n        this.z += v.z;\n        return this;\n      }\n    }, {\n      key: \"addScalar\",\n      value: function addScalar(s) {\n        this.x += s;\n        this.y += s;\n        this.z += s;\n        return this;\n      }\n    }, {\n      key: \"addVectors\",\n      value: function addVectors(a, b) {\n        this.x = a.x + b.x;\n        this.y = a.y + b.y;\n        this.z = a.z + b.z;\n        return this;\n      }\n    }, {\n      key: \"addScaledVector\",\n      value: function addScaledVector(v, s) {\n        this.x += v.x * s;\n        this.y += v.y * s;\n        this.z += v.z * s;\n        return this;\n      }\n    }, {\n      key: \"sub\",\n      value: function sub(v, w) {\n        if (w !== undefined) {\n          console.warn('THREE.Vector3: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.');\n          return this.subVectors(v, w);\n        }\n\n        this.x -= v.x;\n        this.y -= v.y;\n        this.z -= v.z;\n        return this;\n      }\n    }, {\n      key: \"subScalar\",\n      value: function subScalar(s) {\n        this.x -= s;\n        this.y -= s;\n        this.z -= s;\n        return this;\n      }\n    }, {\n      key: \"subVectors\",\n      value: function subVectors(a, b) {\n        this.x = a.x - b.x;\n        this.y = a.y - b.y;\n        this.z = a.z - b.z;\n        return this;\n      }\n    }, {\n      key: \"multiply\",\n      value: function multiply(v, w) {\n        if (w !== undefined) {\n          console.warn('THREE.Vector3: .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead.');\n          return this.multiplyVectors(v, w);\n        }\n\n        this.x *= v.x;\n        this.y *= v.y;\n        this.z *= v.z;\n        return this;\n      }\n    }, {\n      key: \"multiplyScalar\",\n      value: function multiplyScalar(scalar) {\n        this.x *= scalar;\n        this.y *= scalar;\n        this.z *= scalar;\n        return this;\n      }\n    }, {\n      key: \"multiplyVectors\",\n      value: function multiplyVectors(a, b) {\n        this.x = a.x * b.x;\n        this.y = a.y * b.y;\n        this.z = a.z * b.z;\n        return this;\n      }\n    }, {\n      key: \"applyEuler\",\n      value: function applyEuler(euler) {\n        if (!(euler && euler.isEuler)) {\n          console.error('THREE.Vector3: .applyEuler() now expects an Euler rotation rather than a Vector3 and order.');\n        }\n\n        return this.applyQuaternion(_quaternion$4.setFromEuler(euler));\n      }\n    }, {\n      key: \"applyAxisAngle\",\n      value: function applyAxisAngle(axis, angle) {\n        return this.applyQuaternion(_quaternion$4.setFromAxisAngle(axis, angle));\n      }\n    }, {\n      key: \"applyMatrix3\",\n      value: function applyMatrix3(m) {\n        var x = this.x,\n            y = this.y,\n            z = this.z;\n        var e = m.elements;\n        this.x = e[0] * x + e[3] * y + e[6] * z;\n        this.y = e[1] * x + e[4] * y + e[7] * z;\n        this.z = e[2] * x + e[5] * y + e[8] * z;\n        return this;\n      }\n    }, {\n      key: \"applyNormalMatrix\",\n      value: function applyNormalMatrix(m) {\n        return this.applyMatrix3(m).normalize();\n      }\n    }, {\n      key: \"applyMatrix4\",\n      value: function applyMatrix4(m) {\n        var x = this.x,\n            y = this.y,\n            z = this.z;\n        var e = m.elements;\n        var w = 1 / (e[3] * x + e[7] * y + e[11] * z + e[15]);\n        this.x = (e[0] * x + e[4] * y + e[8] * z + e[12]) * w;\n        this.y = (e[1] * x + e[5] * y + e[9] * z + e[13]) * w;\n        this.z = (e[2] * x + e[6] * y + e[10] * z + e[14]) * w;\n        return this;\n      }\n    }, {\n      key: \"applyQuaternion\",\n      value: function applyQuaternion(q) {\n        var x = this.x,\n            y = this.y,\n            z = this.z;\n        var qx = q.x,\n            qy = q.y,\n            qz = q.z,\n            qw = q.w; // calculate quat * vector\n\n        var ix = qw * x + qy * z - qz * y;\n        var iy = qw * y + qz * x - qx * z;\n        var iz = qw * z + qx * y - qy * x;\n        var iw = -qx * x - qy * y - qz * z; // calculate result * inverse quat\n\n        this.x = ix * qw + iw * -qx + iy * -qz - iz * -qy;\n        this.y = iy * qw + iw * -qy + iz * -qx - ix * -qz;\n        this.z = iz * qw + iw * -qz + ix * -qy - iy * -qx;\n        return this;\n      }\n    }, {\n      key: \"project\",\n      value: function project(camera) {\n        return this.applyMatrix4(camera.matrixWorldInverse).applyMatrix4(camera.projectionMatrix);\n      }\n    }, {\n      key: \"unproject\",\n      value: function unproject(camera) {\n        return this.applyMatrix4(camera.projectionMatrixInverse).applyMatrix4(camera.matrixWorld);\n      }\n    }, {\n      key: \"transformDirection\",\n      value: function transformDirection(m) {\n        // input: THREE.Matrix4 affine matrix\n        // vector interpreted as a direction\n        var x = this.x,\n            y = this.y,\n            z = this.z;\n        var e = m.elements;\n        this.x = e[0] * x + e[4] * y + e[8] * z;\n        this.y = e[1] * x + e[5] * y + e[9] * z;\n        this.z = e[2] * x + e[6] * y + e[10] * z;\n        return this.normalize();\n      }\n    }, {\n      key: \"divide\",\n      value: function divide(v) {\n        this.x /= v.x;\n        this.y /= v.y;\n        this.z /= v.z;\n        return this;\n      }\n    }, {\n      key: \"divideScalar\",\n      value: function divideScalar(scalar) {\n        return this.multiplyScalar(1 / scalar);\n      }\n    }, {\n      key: \"min\",\n      value: function min(v) {\n        this.x = Math.min(this.x, v.x);\n        this.y = Math.min(this.y, v.y);\n        this.z = Math.min(this.z, v.z);\n        return this;\n      }\n    }, {\n      key: \"max\",\n      value: function max(v) {\n        this.x = Math.max(this.x, v.x);\n        this.y = Math.max(this.y, v.y);\n        this.z = Math.max(this.z, v.z);\n        return this;\n      }\n    }, {\n      key: \"clamp\",\n      value: function clamp(min, max) {\n        // assumes min < max, componentwise\n        this.x = Math.max(min.x, Math.min(max.x, this.x));\n        this.y = Math.max(min.y, Math.min(max.y, this.y));\n        this.z = Math.max(min.z, Math.min(max.z, this.z));\n        return this;\n      }\n    }, {\n      key: \"clampScalar\",\n      value: function clampScalar(minVal, maxVal) {\n        this.x = Math.max(minVal, Math.min(maxVal, this.x));\n        this.y = Math.max(minVal, Math.min(maxVal, this.y));\n        this.z = Math.max(minVal, Math.min(maxVal, this.z));\n        return this;\n      }\n    }, {\n      key: \"clampLength\",\n      value: function clampLength(min, max) {\n        var length = this.length();\n        return this.divideScalar(length || 1).multiplyScalar(Math.max(min, Math.min(max, length)));\n      }\n    }, {\n      key: \"floor\",\n      value: function floor() {\n        this.x = Math.floor(this.x);\n        this.y = Math.floor(this.y);\n        this.z = Math.floor(this.z);\n        return this;\n      }\n    }, {\n      key: \"ceil\",\n      value: function ceil() {\n        this.x = Math.ceil(this.x);\n        this.y = Math.ceil(this.y);\n        this.z = Math.ceil(this.z);\n        return this;\n      }\n    }, {\n      key: \"round\",\n      value: function round() {\n        this.x = Math.round(this.x);\n        this.y = Math.round(this.y);\n        this.z = Math.round(this.z);\n        return this;\n      }\n    }, {\n      key: \"roundToZero\",\n      value: function roundToZero() {\n        this.x = this.x < 0 ? Math.ceil(this.x) : Math.floor(this.x);\n        this.y = this.y < 0 ? Math.ceil(this.y) : Math.floor(this.y);\n        this.z = this.z < 0 ? Math.ceil(this.z) : Math.floor(this.z);\n        return this;\n      }\n    }, {\n      key: \"negate\",\n      value: function negate() {\n        this.x = -this.x;\n        this.y = -this.y;\n        this.z = -this.z;\n        return this;\n      }\n    }, {\n      key: \"dot\",\n      value: function dot(v) {\n        return this.x * v.x + this.y * v.y + this.z * v.z;\n      } // TODO lengthSquared?\n\n    }, {\n      key: \"lengthSq\",\n      value: function lengthSq() {\n        return this.x * this.x + this.y * this.y + this.z * this.z;\n      }\n    }, {\n      key: \"length\",\n      value: function length() {\n        return Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z);\n      }\n    }, {\n      key: \"manhattanLength\",\n      value: function manhattanLength() {\n        return Math.abs(this.x) + Math.abs(this.y) + Math.abs(this.z);\n      }\n    }, {\n      key: \"normalize\",\n      value: function normalize() {\n        return this.divideScalar(this.length() || 1);\n      }\n    }, {\n      key: \"setLength\",\n      value: function setLength(length) {\n        return this.normalize().multiplyScalar(length);\n      }\n    }, {\n      key: \"lerp\",\n      value: function lerp(v, alpha) {\n        this.x += (v.x - this.x) * alpha;\n        this.y += (v.y - this.y) * alpha;\n        this.z += (v.z - this.z) * alpha;\n        return this;\n      }\n    }, {\n      key: \"lerpVectors\",\n      value: function lerpVectors(v1, v2, alpha) {\n        this.x = v1.x + (v2.x - v1.x) * alpha;\n        this.y = v1.y + (v2.y - v1.y) * alpha;\n        this.z = v1.z + (v2.z - v1.z) * alpha;\n        return this;\n      }\n    }, {\n      key: \"cross\",\n      value: function cross(v, w) {\n        if (w !== undefined) {\n          console.warn('THREE.Vector3: .cross() now only accepts one argument. Use .crossVectors( a, b ) instead.');\n          return this.crossVectors(v, w);\n        }\n\n        return this.crossVectors(this, v);\n      }\n    }, {\n      key: \"crossVectors\",\n      value: function crossVectors(a, b) {\n        var ax = a.x,\n            ay = a.y,\n            az = a.z;\n        var bx = b.x,\n            by = b.y,\n            bz = b.z;\n        this.x = ay * bz - az * by;\n        this.y = az * bx - ax * bz;\n        this.z = ax * by - ay * bx;\n        return this;\n      }\n    }, {\n      key: \"projectOnVector\",\n      value: function projectOnVector(v) {\n        var denominator = v.lengthSq();\n        if (denominator === 0) return this.set(0, 0, 0);\n        var scalar = v.dot(this) / denominator;\n        return this.copy(v).multiplyScalar(scalar);\n      }\n    }, {\n      key: \"projectOnPlane\",\n      value: function projectOnPlane(planeNormal) {\n        _vector$c.copy(this).projectOnVector(planeNormal);\n\n        return this.sub(_vector$c);\n      }\n    }, {\n      key: \"reflect\",\n      value: function reflect(normal) {\n        // reflect incident vector off plane orthogonal to normal\n        // normal is assumed to have unit length\n        return this.sub(_vector$c.copy(normal).multiplyScalar(2 * this.dot(normal)));\n      }\n    }, {\n      key: \"angleTo\",\n      value: function angleTo(v) {\n        var denominator = Math.sqrt(this.lengthSq() * v.lengthSq());\n        if (denominator === 0) return Math.PI / 2;\n        var theta = this.dot(v) / denominator; // clamp, to handle numerical problems\n\n        return Math.acos(clamp(theta, -1, 1));\n      }\n    }, {\n      key: \"distanceTo\",\n      value: function distanceTo(v) {\n        return Math.sqrt(this.distanceToSquared(v));\n      }\n    }, {\n      key: \"distanceToSquared\",\n      value: function distanceToSquared(v) {\n        var dx = this.x - v.x,\n            dy = this.y - v.y,\n            dz = this.z - v.z;\n        return dx * dx + dy * dy + dz * dz;\n      }\n    }, {\n      key: \"manhattanDistanceTo\",\n      value: function manhattanDistanceTo(v) {\n        return Math.abs(this.x - v.x) + Math.abs(this.y - v.y) + Math.abs(this.z - v.z);\n      }\n    }, {\n      key: \"setFromSpherical\",\n      value: function setFromSpherical(s) {\n        return this.setFromSphericalCoords(s.radius, s.phi, s.theta);\n      }\n    }, {\n      key: \"setFromSphericalCoords\",\n      value: function setFromSphericalCoords(radius, phi, theta) {\n        var sinPhiRadius = Math.sin(phi) * radius;\n        this.x = sinPhiRadius * Math.sin(theta);\n        this.y = Math.cos(phi) * radius;\n        this.z = sinPhiRadius * Math.cos(theta);\n        return this;\n      }\n    }, {\n      key: \"setFromCylindrical\",\n      value: function setFromCylindrical(c) {\n        return this.setFromCylindricalCoords(c.radius, c.theta, c.y);\n      }\n    }, {\n      key: \"setFromCylindricalCoords\",\n      value: function setFromCylindricalCoords(radius, theta, y) {\n        this.x = radius * Math.sin(theta);\n        this.y = y;\n        this.z = radius * Math.cos(theta);\n        return this;\n      }\n    }, {\n      key: \"setFromMatrixPosition\",\n      value: function setFromMatrixPosition(m) {\n        var e = m.elements;\n        this.x = e[12];\n        this.y = e[13];\n        this.z = e[14];\n        return this;\n      }\n    }, {\n      key: \"setFromMatrixScale\",\n      value: function setFromMatrixScale(m) {\n        var sx = this.setFromMatrixColumn(m, 0).length();\n        var sy = this.setFromMatrixColumn(m, 1).length();\n        var sz = this.setFromMatrixColumn(m, 2).length();\n        this.x = sx;\n        this.y = sy;\n        this.z = sz;\n        return this;\n      }\n    }, {\n      key: \"setFromMatrixColumn\",\n      value: function setFromMatrixColumn(m, index) {\n        return this.fromArray(m.elements, index * 4);\n      }\n    }, {\n      key: \"setFromMatrix3Column\",\n      value: function setFromMatrix3Column(m, index) {\n        return this.fromArray(m.elements, index * 3);\n      }\n    }, {\n      key: \"equals\",\n      value: function equals(v) {\n        return v.x === this.x && v.y === this.y && v.z === this.z;\n      }\n    }, {\n      key: \"fromArray\",\n      value: function fromArray(array) {\n        var offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n        this.x = array[offset];\n        this.y = array[offset + 1];\n        this.z = array[offset + 2];\n        return this;\n      }\n    }, {\n      key: \"toArray\",\n      value: function toArray() {\n        var array = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n        var offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n        array[offset] = this.x;\n        array[offset + 1] = this.y;\n        array[offset + 2] = this.z;\n        return array;\n      }\n    }, {\n      key: \"fromBufferAttribute\",\n      value: function fromBufferAttribute(attribute, index, offset) {\n        if (offset !== undefined) {\n          console.warn('THREE.Vector3: offset has been removed from .fromBufferAttribute().');\n        }\n\n        this.x = attribute.getX(index);\n        this.y = attribute.getY(index);\n        this.z = attribute.getZ(index);\n        return this;\n      }\n    }, {\n      key: \"random\",\n      value: function random() {\n        this.x = Math.random();\n        this.y = Math.random();\n        this.z = Math.random();\n        return this;\n      }\n    }, {\n      key: \"randomDirection\",\n      value: function randomDirection() {\n        // Derived from https://mathworld.wolfram.com/SpherePointPicking.html\n        var u = (Math.random() - 0.5) * 2;\n        var t = Math.random() * Math.PI * 2;\n        var f = Math.sqrt(1 - Math.pow(u, 2));\n        this.x = f * Math.cos(t);\n        this.y = f * Math.sin(t);\n        this.z = u;\n        return this;\n      }\n    }, {\n      key: _Symbol$iterator3,\n      value: /*#__PURE__*/_regeneratorRuntime.mark(function value() {\n        return _regeneratorRuntime.wrap(function value$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                _context4.next = 2;\n                return this.x;\n\n              case 2:\n                _context4.next = 4;\n                return this.y;\n\n              case 4:\n                _context4.next = 6;\n                return this.z;\n\n              case 6:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, value, this);\n      })\n    }]);\n\n    return Vector3;\n  }(Symbol.iterator);\n\n  Vector3.prototype.isVector3 = true;\n\n  var _vector$c = /*@__PURE__*/new Vector3();\n\n  var _quaternion$4 = /*@__PURE__*/new Quaternion();\n\n  var Box3 = /*#__PURE__*/function () {\n    function Box3() {\n      var min = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : new Vector3(+Infinity, +Infinity, +Infinity);\n      var max = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : new Vector3(-Infinity, -Infinity, -Infinity);\n\n      _classCallCheck(this, Box3);\n\n      this.min = min;\n      this.max = max;\n    }\n\n    _createClass(Box3, [{\n      key: \"set\",\n      value: function set(min, max) {\n        this.min.copy(min);\n        this.max.copy(max);\n        return this;\n      }\n    }, {\n      key: \"setFromArray\",\n      value: function setFromArray(array) {\n        var minX = +Infinity;\n        var minY = +Infinity;\n        var minZ = +Infinity;\n        var maxX = -Infinity;\n        var maxY = -Infinity;\n        var maxZ = -Infinity;\n\n        for (var _i9 = 0, l = array.length; _i9 < l; _i9 += 3) {\n          var x = array[_i9];\n          var y = array[_i9 + 1];\n          var z = array[_i9 + 2];\n          if (x < minX) minX = x;\n          if (y < minY) minY = y;\n          if (z < minZ) minZ = z;\n          if (x > maxX) maxX = x;\n          if (y > maxY) maxY = y;\n          if (z > maxZ) maxZ = z;\n        }\n\n        this.min.set(minX, minY, minZ);\n        this.max.set(maxX, maxY, maxZ);\n        return this;\n      }\n    }, {\n      key: \"setFromBufferAttribute\",\n      value: function setFromBufferAttribute(attribute) {\n        var minX = +Infinity;\n        var minY = +Infinity;\n        var minZ = +Infinity;\n        var maxX = -Infinity;\n        var maxY = -Infinity;\n        var maxZ = -Infinity;\n\n        for (var _i10 = 0, l = attribute.count; _i10 < l; _i10++) {\n          var x = attribute.getX(_i10);\n          var y = attribute.getY(_i10);\n          var z = attribute.getZ(_i10);\n          if (x < minX) minX = x;\n          if (y < minY) minY = y;\n          if (z < minZ) minZ = z;\n          if (x > maxX) maxX = x;\n          if (y > maxY) maxY = y;\n          if (z > maxZ) maxZ = z;\n        }\n\n        this.min.set(minX, minY, minZ);\n        this.max.set(maxX, maxY, maxZ);\n        return this;\n      }\n    }, {\n      key: \"setFromPoints\",\n      value: function setFromPoints(points) {\n        this.makeEmpty();\n\n        for (var _i11 = 0, il = points.length; _i11 < il; _i11++) {\n          this.expandByPoint(points[_i11]);\n        }\n\n        return this;\n      }\n    }, {\n      key: \"setFromCenterAndSize\",\n      value: function setFromCenterAndSize(center, size) {\n        var halfSize = _vector$b.copy(size).multiplyScalar(0.5);\n\n        this.min.copy(center).sub(halfSize);\n        this.max.copy(center).add(halfSize);\n        return this;\n      }\n    }, {\n      key: \"setFromObject\",\n      value: function setFromObject(object) {\n        this.makeEmpty();\n        return this.expandByObject(object);\n      }\n    }, {\n      key: \"clone\",\n      value: function clone() {\n        return new this.constructor().copy(this);\n      }\n    }, {\n      key: \"copy\",\n      value: function copy(box) {\n        this.min.copy(box.min);\n        this.max.copy(box.max);\n        return this;\n      }\n    }, {\n      key: \"makeEmpty\",\n      value: function makeEmpty() {\n        this.min.x = this.min.y = this.min.z = +Infinity;\n        this.max.x = this.max.y = this.max.z = -Infinity;\n        return this;\n      }\n    }, {\n      key: \"isEmpty\",\n      value: function isEmpty() {\n        // this is a more robust check for empty than ( volume <= 0 ) because volume can get positive with two negative axes\n        return this.max.x < this.min.x || this.max.y < this.min.y || this.max.z < this.min.z;\n      }\n    }, {\n      key: \"getCenter\",\n      value: function getCenter(target) {\n        return this.isEmpty() ? target.set(0, 0, 0) : target.addVectors(this.min, this.max).multiplyScalar(0.5);\n      }\n    }, {\n      key: \"getSize\",\n      value: function getSize(target) {\n        return this.isEmpty() ? target.set(0, 0, 0) : target.subVectors(this.max, this.min);\n      }\n    }, {\n      key: \"expandByPoint\",\n      value: function expandByPoint(point) {\n        this.min.min(point);\n        this.max.max(point);\n        return this;\n      }\n    }, {\n      key: \"expandByVector\",\n      value: function expandByVector(vector) {\n        this.min.sub(vector);\n        this.max.add(vector);\n        return this;\n      }\n    }, {\n      key: \"expandByScalar\",\n      value: function expandByScalar(scalar) {\n        this.min.addScalar(-scalar);\n        this.max.addScalar(scalar);\n        return this;\n      }\n    }, {\n      key: \"expandByObject\",\n      value: function expandByObject(object) {\n        // Computes the world-axis-aligned bounding box of an object (including its children),\n        // accounting for both the object's, and children's, world transforms\n        object.updateWorldMatrix(false, false);\n        var geometry = object.geometry;\n\n        if (geometry !== undefined) {\n          if (geometry.boundingBox === null) {\n            geometry.computeBoundingBox();\n          }\n\n          _box$3.copy(geometry.boundingBox);\n\n          _box$3.applyMatrix4(object.matrixWorld);\n\n          this.union(_box$3);\n        }\n\n        var children = object.children;\n\n        for (var _i12 = 0, l = children.length; _i12 < l; _i12++) {\n          this.expandByObject(children[_i12]);\n        }\n\n        return this;\n      }\n    }, {\n      key: \"containsPoint\",\n      value: function containsPoint(point) {\n        return point.x < this.min.x || point.x > this.max.x || point.y < this.min.y || point.y > this.max.y || point.z < this.min.z || point.z > this.max.z ? false : true;\n      }\n    }, {\n      key: \"containsBox\",\n      value: function containsBox(box) {\n        return this.min.x <= box.min.x && box.max.x <= this.max.x && this.min.y <= box.min.y && box.max.y <= this.max.y && this.min.z <= box.min.z && box.max.z <= this.max.z;\n      }\n    }, {\n      key: \"getParameter\",\n      value: function getParameter(point, target) {\n        // This can potentially have a divide by zero if the box\n        // has a size dimension of 0.\n        return target.set((point.x - this.min.x) / (this.max.x - this.min.x), (point.y - this.min.y) / (this.max.y - this.min.y), (point.z - this.min.z) / (this.max.z - this.min.z));\n      }\n    }, {\n      key: \"intersectsBox\",\n      value: function intersectsBox(box) {\n        // using 6 splitting planes to rule out intersections.\n        return box.max.x < this.min.x || box.min.x > this.max.x || box.max.y < this.min.y || box.min.y > this.max.y || box.max.z < this.min.z || box.min.z > this.max.z ? false : true;\n      }\n    }, {\n      key: \"intersectsSphere\",\n      value: function intersectsSphere(sphere) {\n        // Find the point on the AABB closest to the sphere center.\n        this.clampPoint(sphere.center, _vector$b); // If that point is inside the sphere, the AABB and sphere intersect.\n\n        return _vector$b.distanceToSquared(sphere.center) <= sphere.radius * sphere.radius;\n      }\n    }, {\n      key: \"intersectsPlane\",\n      value: function intersectsPlane(plane) {\n        // We compute the minimum and maximum dot product values. If those values\n        // are on the same side (back or front) of the plane, then there is no intersection.\n        var min, max;\n\n        if (plane.normal.x > 0) {\n          min = plane.normal.x * this.min.x;\n          max = plane.normal.x * this.max.x;\n        } else {\n          min = plane.normal.x * this.max.x;\n          max = plane.normal.x * this.min.x;\n        }\n\n        if (plane.normal.y > 0) {\n          min += plane.normal.y * this.min.y;\n          max += plane.normal.y * this.max.y;\n        } else {\n          min += plane.normal.y * this.max.y;\n          max += plane.normal.y * this.min.y;\n        }\n\n        if (plane.normal.z > 0) {\n          min += plane.normal.z * this.min.z;\n          max += plane.normal.z * this.max.z;\n        } else {\n          min += plane.normal.z * this.max.z;\n          max += plane.normal.z * this.min.z;\n        }\n\n        return min <= -plane.constant && max >= -plane.constant;\n      }\n    }, {\n      key: \"intersectsTriangle\",\n      value: function intersectsTriangle(triangle) {\n        if (this.isEmpty()) {\n          return false;\n        } // compute box center and extents\n\n\n        this.getCenter(_center);\n\n        _extents.subVectors(this.max, _center); // translate triangle to aabb origin\n\n\n        _v0$2.subVectors(triangle.a, _center);\n\n        _v1$7.subVectors(triangle.b, _center);\n\n        _v2$3.subVectors(triangle.c, _center); // compute edge vectors for triangle\n\n\n        _f0.subVectors(_v1$7, _v0$2);\n\n        _f1.subVectors(_v2$3, _v1$7);\n\n        _f2.subVectors(_v0$2, _v2$3); // test against axes that are given by cross product combinations of the edges of the triangle and the edges of the aabb\n        // make an axis testing of each of the 3 sides of the aabb against each of the 3 sides of the triangle = 9 axis of separation\n        // axis_ij = u_i x f_j (u0, u1, u2 = face normals of aabb = x,y,z axes vectors since aabb is axis aligned)\n\n\n        var axes = [0, -_f0.z, _f0.y, 0, -_f1.z, _f1.y, 0, -_f2.z, _f2.y, _f0.z, 0, -_f0.x, _f1.z, 0, -_f1.x, _f2.z, 0, -_f2.x, -_f0.y, _f0.x, 0, -_f1.y, _f1.x, 0, -_f2.y, _f2.x, 0];\n\n        if (!satForAxes(axes, _v0$2, _v1$7, _v2$3, _extents)) {\n          return false;\n        } // test 3 face normals from the aabb\n\n\n        axes = [1, 0, 0, 0, 1, 0, 0, 0, 1];\n\n        if (!satForAxes(axes, _v0$2, _v1$7, _v2$3, _extents)) {\n          return false;\n        } // finally testing the face normal of the triangle\n        // use already existing triangle edge vectors here\n\n\n        _triangleNormal.crossVectors(_f0, _f1);\n\n        axes = [_triangleNormal.x, _triangleNormal.y, _triangleNormal.z];\n        return satForAxes(axes, _v0$2, _v1$7, _v2$3, _extents);\n      }\n    }, {\n      key: \"clampPoint\",\n      value: function clampPoint(point, target) {\n        return target.copy(point).clamp(this.min, this.max);\n      }\n    }, {\n      key: \"distanceToPoint\",\n      value: function distanceToPoint(point) {\n        var clampedPoint = _vector$b.copy(point).clamp(this.min, this.max);\n\n        return clampedPoint.sub(point).length();\n      }\n    }, {\n      key: \"getBoundingSphere\",\n      value: function getBoundingSphere(target) {\n        this.getCenter(target.center);\n        target.radius = this.getSize(_vector$b).length() * 0.5;\n        return target;\n      }\n    }, {\n      key: \"intersect\",\n      value: function intersect(box) {\n        this.min.max(box.min);\n        this.max.min(box.max); // ensure that if there is no overlap, the result is fully empty, not slightly empty with non-inf/+inf values that will cause subsequence intersects to erroneously return valid values.\n\n        if (this.isEmpty()) this.makeEmpty();\n        return this;\n      }\n    }, {\n      key: \"union\",\n      value: function union(box) {\n        this.min.min(box.min);\n        this.max.max(box.max);\n        return this;\n      }\n    }, {\n      key: \"applyMatrix4\",\n      value: function applyMatrix4(matrix) {\n        // transform of empty box is an empty box.\n        if (this.isEmpty()) return this; // NOTE: I am using a binary pattern to specify all 2^3 combinations below\n\n        _points[0].set(this.min.x, this.min.y, this.min.z).applyMatrix4(matrix); // 000\n\n\n        _points[1].set(this.min.x, this.min.y, this.max.z).applyMatrix4(matrix); // 001\n\n\n        _points[2].set(this.min.x, this.max.y, this.min.z).applyMatrix4(matrix); // 010\n\n\n        _points[3].set(this.min.x, this.max.y, this.max.z).applyMatrix4(matrix); // 011\n\n\n        _points[4].set(this.max.x, this.min.y, this.min.z).applyMatrix4(matrix); // 100\n\n\n        _points[5].set(this.max.x, this.min.y, this.max.z).applyMatrix4(matrix); // 101\n\n\n        _points[6].set(this.max.x, this.max.y, this.min.z).applyMatrix4(matrix); // 110\n\n\n        _points[7].set(this.max.x, this.max.y, this.max.z).applyMatrix4(matrix); // 111\n\n\n        this.setFromPoints(_points);\n        return this;\n      }\n    }, {\n      key: \"translate\",\n      value: function translate(offset) {\n        this.min.add(offset);\n        this.max.add(offset);\n        return this;\n      }\n    }, {\n      key: \"equals\",\n      value: function equals(box) {\n        return box.min.equals(this.min) && box.max.equals(this.max);\n      }\n    }]);\n\n    return Box3;\n  }();\n\n  Box3.prototype.isBox3 = true;\n  var _points = [/*@__PURE__*/new Vector3(), /*@__PURE__*/new Vector3(), /*@__PURE__*/new Vector3(), /*@__PURE__*/new Vector3(), /*@__PURE__*/new Vector3(), /*@__PURE__*/new Vector3(), /*@__PURE__*/new Vector3(), /*@__PURE__*/new Vector3()];\n\n  var _vector$b = /*@__PURE__*/new Vector3();\n\n  var _box$3 = /*@__PURE__*/new Box3(); // triangle centered vertices\n\n\n  var _v0$2 = /*@__PURE__*/new Vector3();\n\n  var _v1$7 = /*@__PURE__*/new Vector3();\n\n  var _v2$3 = /*@__PURE__*/new Vector3(); // triangle edge vectors\n\n\n  var _f0 = /*@__PURE__*/new Vector3();\n\n  var _f1 = /*@__PURE__*/new Vector3();\n\n  var _f2 = /*@__PURE__*/new Vector3();\n\n  var _center = /*@__PURE__*/new Vector3();\n\n  var _extents = /*@__PURE__*/new Vector3();\n\n  var _triangleNormal = /*@__PURE__*/new Vector3();\n\n  var _testAxis = /*@__PURE__*/new Vector3();\n\n  function satForAxes(axes, v0, v1, v2, extents) {\n    for (var _i13 = 0, j = axes.length - 3; _i13 <= j; _i13 += 3) {\n      _testAxis.fromArray(axes, _i13); // project the aabb onto the seperating axis\n\n\n      var r = extents.x * Math.abs(_testAxis.x) + extents.y * Math.abs(_testAxis.y) + extents.z * Math.abs(_testAxis.z); // project all 3 vertices of the triangle onto the seperating axis\n\n      var p0 = v0.dot(_testAxis);\n      var p1 = v1.dot(_testAxis);\n      var p2 = v2.dot(_testAxis); // actual test, basically see if either of the most extreme of the triangle points intersects r\n\n      if (Math.max(-Math.max(p0, p1, p2), Math.min(p0, p1, p2)) > r) {\n        // points of the projected triangle are outside the projected half-length of the aabb\n        // the axis is seperating and we can exit\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  var _box$2 = /*@__PURE__*/new Box3();\n\n  var _v1$6 = /*@__PURE__*/new Vector3();\n\n  var _toFarthestPoint = /*@__PURE__*/new Vector3();\n\n  var _toPoint = /*@__PURE__*/new Vector3();\n\n  var Sphere = /*#__PURE__*/function () {\n    function Sphere() {\n      var center = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : new Vector3();\n      var radius = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : -1;\n\n      _classCallCheck(this, Sphere);\n\n      this.center = center;\n      this.radius = radius;\n    }\n\n    _createClass(Sphere, [{\n      key: \"set\",\n      value: function set(center, radius) {\n        this.center.copy(center);\n        this.radius = radius;\n        return this;\n      }\n    }, {\n      key: \"setFromPoints\",\n      value: function setFromPoints(points, optionalCenter) {\n        var center = this.center;\n\n        if (optionalCenter !== undefined) {\n          center.copy(optionalCenter);\n        } else {\n          _box$2.setFromPoints(points).getCenter(center);\n        }\n\n        var maxRadiusSq = 0;\n\n        for (var _i14 = 0, il = points.length; _i14 < il; _i14++) {\n          maxRadiusSq = Math.max(maxRadiusSq, center.distanceToSquared(points[_i14]));\n        }\n\n        this.radius = Math.sqrt(maxRadiusSq);\n        return this;\n      }\n    }, {\n      key: \"copy\",\n      value: function copy(sphere) {\n        this.center.copy(sphere.center);\n        this.radius = sphere.radius;\n        return this;\n      }\n    }, {\n      key: \"isEmpty\",\n      value: function isEmpty() {\n        return this.radius < 0;\n      }\n    }, {\n      key: \"makeEmpty\",\n      value: function makeEmpty() {\n        this.center.set(0, 0, 0);\n        this.radius = -1;\n        return this;\n      }\n    }, {\n      key: \"containsPoint\",\n      value: function containsPoint(point) {\n        return point.distanceToSquared(this.center) <= this.radius * this.radius;\n      }\n    }, {\n      key: \"distanceToPoint\",\n      value: function distanceToPoint(point) {\n        return point.distanceTo(this.center) - this.radius;\n      }\n    }, {\n      key: \"intersectsSphere\",\n      value: function intersectsSphere(sphere) {\n        var radiusSum = this.radius + sphere.radius;\n        return sphere.center.distanceToSquared(this.center) <= radiusSum * radiusSum;\n      }\n    }, {\n      key: \"intersectsBox\",\n      value: function intersectsBox(box) {\n        return box.intersectsSphere(this);\n      }\n    }, {\n      key: \"intersectsPlane\",\n      value: function intersectsPlane(plane) {\n        return Math.abs(plane.distanceToPoint(this.center)) <= this.radius;\n      }\n    }, {\n      key: \"clampPoint\",\n      value: function clampPoint(point, target) {\n        var deltaLengthSq = this.center.distanceToSquared(point);\n        target.copy(point);\n\n        if (deltaLengthSq > this.radius * this.radius) {\n          target.sub(this.center).normalize();\n          target.multiplyScalar(this.radius).add(this.center);\n        }\n\n        return target;\n      }\n    }, {\n      key: \"getBoundingBox\",\n      value: function getBoundingBox(target) {\n        if (this.isEmpty()) {\n          // Empty sphere produces empty bounding box\n          target.makeEmpty();\n          return target;\n        }\n\n        target.set(this.center, this.center);\n        target.expandByScalar(this.radius);\n        return target;\n      }\n    }, {\n      key: \"applyMatrix4\",\n      value: function applyMatrix4(matrix) {\n        this.center.applyMatrix4(matrix);\n        this.radius = this.radius * matrix.getMaxScaleOnAxis();\n        return this;\n      }\n    }, {\n      key: \"translate\",\n      value: function translate(offset) {\n        this.center.add(offset);\n        return this;\n      }\n    }, {\n      key: \"expandByPoint\",\n      value: function expandByPoint(point) {\n        // from https://github.com/juj/MathGeoLib/blob/2940b99b99cfe575dd45103ef20f4019dee15b54/src/Geometry/Sphere.cpp#L649-L671\n        _toPoint.subVectors(point, this.center);\n\n        var lengthSq = _toPoint.lengthSq();\n\n        if (lengthSq > this.radius * this.radius) {\n          var length = Math.sqrt(lengthSq);\n          var missingRadiusHalf = (length - this.radius) * 0.5; // Nudge this sphere towards the target point. Add half the missing distance to radius,\n          // and the other half to position. This gives a tighter enclosure, instead of if\n          // the whole missing distance were just added to radius.\n\n          this.center.add(_toPoint.multiplyScalar(missingRadiusHalf / length));\n          this.radius += missingRadiusHalf;\n        }\n\n        return this;\n      }\n    }, {\n      key: \"union\",\n      value: function union(sphere) {\n        // from https://github.com/juj/MathGeoLib/blob/2940b99b99cfe575dd45103ef20f4019dee15b54/src/Geometry/Sphere.cpp#L759-L769\n        // To enclose another sphere into this sphere, we only need to enclose two points:\n        // 1) Enclose the farthest point on the other sphere into this sphere.\n        // 2) Enclose the opposite point of the farthest point into this sphere.\n        _toFarthestPoint.subVectors(sphere.center, this.center).normalize().multiplyScalar(sphere.radius);\n\n        this.expandByPoint(_v1$6.copy(sphere.center).add(_toFarthestPoint));\n        this.expandByPoint(_v1$6.copy(sphere.center).sub(_toFarthestPoint));\n        return this;\n      }\n    }, {\n      key: \"equals\",\n      value: function equals(sphere) {\n        return sphere.center.equals(this.center) && sphere.radius === this.radius;\n      }\n    }, {\n      key: \"clone\",\n      value: function clone() {\n        return new this.constructor().copy(this);\n      }\n    }]);\n\n    return Sphere;\n  }();\n\n  var _vector$a = /*@__PURE__*/new Vector3();\n\n  var _segCenter = /*@__PURE__*/new Vector3();\n\n  var _segDir = /*@__PURE__*/new Vector3();\n\n  var _diff = /*@__PURE__*/new Vector3();\n\n  var _edge1 = /*@__PURE__*/new Vector3();\n\n  var _edge2 = /*@__PURE__*/new Vector3();\n\n  var _normal$1 = /*@__PURE__*/new Vector3();\n\n  var Ray = /*#__PURE__*/function () {\n    function Ray() {\n      var origin = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : new Vector3();\n      var direction = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : new Vector3(0, 0, -1);\n\n      _classCallCheck(this, Ray);\n\n      this.origin = origin;\n      this.direction = direction;\n    }\n\n    _createClass(Ray, [{\n      key: \"set\",\n      value: function set(origin, direction) {\n        this.origin.copy(origin);\n        this.direction.copy(direction);\n        return this;\n      }\n    }, {\n      key: \"copy\",\n      value: function copy(ray) {\n        this.origin.copy(ray.origin);\n        this.direction.copy(ray.direction);\n        return this;\n      }\n    }, {\n      key: \"at\",\n      value: function at(t, target) {\n        return target.copy(this.direction).multiplyScalar(t).add(this.origin);\n      }\n    }, {\n      key: \"lookAt\",\n      value: function lookAt(v) {\n        this.direction.copy(v).sub(this.origin).normalize();\n        return this;\n      }\n    }, {\n      key: \"recast\",\n      value: function recast(t) {\n        this.origin.copy(this.at(t, _vector$a));\n        return this;\n      }\n    }, {\n      key: \"closestPointToPoint\",\n      value: function closestPointToPoint(point, target) {\n        target.subVectors(point, this.origin);\n        var directionDistance = target.dot(this.direction);\n\n        if (directionDistance < 0) {\n          return target.copy(this.origin);\n        }\n\n        return target.copy(this.direction).multiplyScalar(directionDistance).add(this.origin);\n      }\n    }, {\n      key: \"distanceToPoint\",\n      value: function distanceToPoint(point) {\n        return Math.sqrt(this.distanceSqToPoint(point));\n      }\n    }, {\n      key: \"distanceSqToPoint\",\n      value: function distanceSqToPoint(point) {\n        var directionDistance = _vector$a.subVectors(point, this.origin).dot(this.direction); // point behind the ray\n\n\n        if (directionDistance < 0) {\n          return this.origin.distanceToSquared(point);\n        }\n\n        _vector$a.copy(this.direction).multiplyScalar(directionDistance).add(this.origin);\n\n        return _vector$a.distanceToSquared(point);\n      }\n    }, {\n      key: \"distanceSqToSegment\",\n      value: function distanceSqToSegment(v0, v1, optionalPointOnRay, optionalPointOnSegment) {\n        // from http://www.geometrictools.com/GTEngine/Include/Mathematics/GteDistRaySegment.h\n        // It returns the min distance between the ray and the segment\n        // defined by v0 and v1\n        // It can also set two optional targets :\n        // - The closest point on the ray\n        // - The closest point on the segment\n        _segCenter.copy(v0).add(v1).multiplyScalar(0.5);\n\n        _segDir.copy(v1).sub(v0).normalize();\n\n        _diff.copy(this.origin).sub(_segCenter);\n\n        var segExtent = v0.distanceTo(v1) * 0.5;\n        var a01 = -this.direction.dot(_segDir);\n\n        var b0 = _diff.dot(this.direction);\n\n        var b1 = -_diff.dot(_segDir);\n\n        var c = _diff.lengthSq();\n\n        var det = Math.abs(1 - a01 * a01);\n        var s0, s1, sqrDist, extDet;\n\n        if (det > 0) {\n          // The ray and segment are not parallel.\n          s0 = a01 * b1 - b0;\n          s1 = a01 * b0 - b1;\n          extDet = segExtent * det;\n\n          if (s0 >= 0) {\n            if (s1 >= -extDet) {\n              if (s1 <= extDet) {\n                // region 0\n                // Minimum at interior points of ray and segment.\n                var invDet = 1 / det;\n                s0 *= invDet;\n                s1 *= invDet;\n                sqrDist = s0 * (s0 + a01 * s1 + 2 * b0) + s1 * (a01 * s0 + s1 + 2 * b1) + c;\n              } else {\n                // region 1\n                s1 = segExtent;\n                s0 = Math.max(0, -(a01 * s1 + b0));\n                sqrDist = -s0 * s0 + s1 * (s1 + 2 * b1) + c;\n              }\n            } else {\n              // region 5\n              s1 = -segExtent;\n              s0 = Math.max(0, -(a01 * s1 + b0));\n              sqrDist = -s0 * s0 + s1 * (s1 + 2 * b1) + c;\n            }\n          } else {\n            if (s1 <= -extDet) {\n              // region 4\n              s0 = Math.max(0, -(-a01 * segExtent + b0));\n              s1 = s0 > 0 ? -segExtent : Math.min(Math.max(-segExtent, -b1), segExtent);\n              sqrDist = -s0 * s0 + s1 * (s1 + 2 * b1) + c;\n            } else if (s1 <= extDet) {\n              // region 3\n              s0 = 0;\n              s1 = Math.min(Math.max(-segExtent, -b1), segExtent);\n              sqrDist = s1 * (s1 + 2 * b1) + c;\n            } else {\n              // region 2\n              s0 = Math.max(0, -(a01 * segExtent + b0));\n              s1 = s0 > 0 ? segExtent : Math.min(Math.max(-segExtent, -b1), segExtent);\n              sqrDist = -s0 * s0 + s1 * (s1 + 2 * b1) + c;\n            }\n          }\n        } else {\n          // Ray and segment are parallel.\n          s1 = a01 > 0 ? -segExtent : segExtent;\n          s0 = Math.max(0, -(a01 * s1 + b0));\n          sqrDist = -s0 * s0 + s1 * (s1 + 2 * b1) + c;\n        }\n\n        if (optionalPointOnRay) {\n          optionalPointOnRay.copy(this.direction).multiplyScalar(s0).add(this.origin);\n        }\n\n        if (optionalPointOnSegment) {\n          optionalPointOnSegment.copy(_segDir).multiplyScalar(s1).add(_segCenter);\n        }\n\n        return sqrDist;\n      }\n    }, {\n      key: \"intersectSphere\",\n      value: function intersectSphere(sphere, target) {\n        _vector$a.subVectors(sphere.center, this.origin);\n\n        var tca = _vector$a.dot(this.direction);\n\n        var d2 = _vector$a.dot(_vector$a) - tca * tca;\n        var radius2 = sphere.radius * sphere.radius;\n        if (d2 > radius2) return null;\n        var thc = Math.sqrt(radius2 - d2); // t0 = first intersect point - entrance on front of sphere\n\n        var t0 = tca - thc; // t1 = second intersect point - exit point on back of sphere\n\n        var t1 = tca + thc; // test to see if both t0 and t1 are behind the ray - if so, return null\n\n        if (t0 < 0 && t1 < 0) return null; // test to see if t0 is behind the ray:\n        // if it is, the ray is inside the sphere, so return the second exit point scaled by t1,\n        // in order to always return an intersect point that is in front of the ray.\n\n        if (t0 < 0) return this.at(t1, target); // else t0 is in front of the ray, so return the first collision point scaled by t0\n\n        return this.at(t0, target);\n      }\n    }, {\n      key: \"intersectsSphere\",\n      value: function intersectsSphere(sphere) {\n        return this.distanceSqToPoint(sphere.center) <= sphere.radius * sphere.radius;\n      }\n    }, {\n      key: \"distanceToPlane\",\n      value: function distanceToPlane(plane) {\n        var denominator = plane.normal.dot(this.direction);\n\n        if (denominator === 0) {\n          // line is coplanar, return origin\n          if (plane.distanceToPoint(this.origin) === 0) {\n            return 0;\n          } // Null is preferable to undefined since undefined means.... it is undefined\n\n\n          return null;\n        }\n\n        var t = -(this.origin.dot(plane.normal) + plane.constant) / denominator; // Return if the ray never intersects the plane\n\n        return t >= 0 ? t : null;\n      }\n    }, {\n      key: \"intersectPlane\",\n      value: function intersectPlane(plane, target) {\n        var t = this.distanceToPlane(plane);\n\n        if (t === null) {\n          return null;\n        }\n\n        return this.at(t, target);\n      }\n    }, {\n      key: \"intersectsPlane\",\n      value: function intersectsPlane(plane) {\n        // check if the ray lies on the plane first\n        var distToPoint = plane.distanceToPoint(this.origin);\n\n        if (distToPoint === 0) {\n          return true;\n        }\n\n        var denominator = plane.normal.dot(this.direction);\n\n        if (denominator * distToPoint < 0) {\n          return true;\n        } // ray origin is behind the plane (and is pointing behind it)\n\n\n        return false;\n      }\n    }, {\n      key: \"intersectBox\",\n      value: function intersectBox(box, target) {\n        var tmin, tmax, tymin, tymax, tzmin, tzmax;\n        var invdirx = 1 / this.direction.x,\n            invdiry = 1 / this.direction.y,\n            invdirz = 1 / this.direction.z;\n        var origin = this.origin;\n\n        if (invdirx >= 0) {\n          tmin = (box.min.x - origin.x) * invdirx;\n          tmax = (box.max.x - origin.x) * invdirx;\n        } else {\n          tmin = (box.max.x - origin.x) * invdirx;\n          tmax = (box.min.x - origin.x) * invdirx;\n        }\n\n        if (invdiry >= 0) {\n          tymin = (box.min.y - origin.y) * invdiry;\n          tymax = (box.max.y - origin.y) * invdiry;\n        } else {\n          tymin = (box.max.y - origin.y) * invdiry;\n          tymax = (box.min.y - origin.y) * invdiry;\n        }\n\n        if (tmin > tymax || tymin > tmax) return null; // These lines also handle the case where tmin or tmax is NaN\n        // (result of 0 * Infinity). x !== x returns true if x is NaN\n\n        if (tymin > tmin || tmin !== tmin) tmin = tymin;\n        if (tymax < tmax || tmax !== tmax) tmax = tymax;\n\n        if (invdirz >= 0) {\n          tzmin = (box.min.z - origin.z) * invdirz;\n          tzmax = (box.max.z - origin.z) * invdirz;\n        } else {\n          tzmin = (box.max.z - origin.z) * invdirz;\n          tzmax = (box.min.z - origin.z) * invdirz;\n        }\n\n        if (tmin > tzmax || tzmin > tmax) return null;\n        if (tzmin > tmin || tmin !== tmin) tmin = tzmin;\n        if (tzmax < tmax || tmax !== tmax) tmax = tzmax; //return point closest to the ray (positive side)\n\n        if (tmax < 0) return null;\n        return this.at(tmin >= 0 ? tmin : tmax, target);\n      }\n    }, {\n      key: \"intersectsBox\",\n      value: function intersectsBox(box) {\n        return this.intersectBox(box, _vector$a) !== null;\n      }\n    }, {\n      key: \"intersectTriangle\",\n      value: function intersectTriangle(a, b, c, backfaceCulling, target) {\n        // Compute the offset origin, edges, and normal.\n        // from http://www.geometrictools.com/GTEngine/Include/Mathematics/GteIntrRay3Triangle3.h\n        _edge1.subVectors(b, a);\n\n        _edge2.subVectors(c, a);\n\n        _normal$1.crossVectors(_edge1, _edge2); // Solve Q + t*D = b1*E1 + b2*E2 (Q = kDiff, D = ray direction,\n        // E1 = kEdge1, E2 = kEdge2, N = Cross(E1,E2)) by\n        //\t |Dot(D,N)|*b1 = sign(Dot(D,N))*Dot(D,Cross(Q,E2))\n        //\t |Dot(D,N)|*b2 = sign(Dot(D,N))*Dot(D,Cross(E1,Q))\n        //\t |Dot(D,N)|*t = -sign(Dot(D,N))*Dot(Q,N)\n\n\n        var DdN = this.direction.dot(_normal$1);\n        var sign;\n\n        if (DdN > 0) {\n          if (backfaceCulling) return null;\n          sign = 1;\n        } else if (DdN < 0) {\n          sign = -1;\n          DdN = -DdN;\n        } else {\n          return null;\n        }\n\n        _diff.subVectors(this.origin, a);\n\n        var DdQxE2 = sign * this.direction.dot(_edge2.crossVectors(_diff, _edge2)); // b1 < 0, no intersection\n\n        if (DdQxE2 < 0) {\n          return null;\n        }\n\n        var DdE1xQ = sign * this.direction.dot(_edge1.cross(_diff)); // b2 < 0, no intersection\n\n        if (DdE1xQ < 0) {\n          return null;\n        } // b1+b2 > 1, no intersection\n\n\n        if (DdQxE2 + DdE1xQ > DdN) {\n          return null;\n        } // Line intersects triangle, check if ray does.\n\n\n        var QdN = -sign * _diff.dot(_normal$1); // t < 0, no intersection\n\n\n        if (QdN < 0) {\n          return null;\n        } // Ray intersects triangle.\n\n\n        return this.at(QdN / DdN, target);\n      }\n    }, {\n      key: \"applyMatrix4\",\n      value: function applyMatrix4(matrix4) {\n        this.origin.applyMatrix4(matrix4);\n        this.direction.transformDirection(matrix4);\n        return this;\n      }\n    }, {\n      key: \"equals\",\n      value: function equals(ray) {\n        return ray.origin.equals(this.origin) && ray.direction.equals(this.direction);\n      }\n    }, {\n      key: \"clone\",\n      value: function clone() {\n        return new this.constructor().copy(this);\n      }\n    }]);\n\n    return Ray;\n  }();\n\n  var Matrix4 = /*#__PURE__*/function () {\n    function Matrix4() {\n      _classCallCheck(this, Matrix4);\n\n      this.elements = [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1];\n\n      if (arguments.length > 0) {\n        console.error('THREE.Matrix4: the constructor no longer reads arguments. use .set() instead.');\n      }\n    }\n\n    _createClass(Matrix4, [{\n      key: \"set\",\n      value: function set(n11, n12, n13, n14, n21, n22, n23, n24, n31, n32, n33, n34, n41, n42, n43, n44) {\n        var te = this.elements;\n        te[0] = n11;\n        te[4] = n12;\n        te[8] = n13;\n        te[12] = n14;\n        te[1] = n21;\n        te[5] = n22;\n        te[9] = n23;\n        te[13] = n24;\n        te[2] = n31;\n        te[6] = n32;\n        te[10] = n33;\n        te[14] = n34;\n        te[3] = n41;\n        te[7] = n42;\n        te[11] = n43;\n        te[15] = n44;\n        return this;\n      }\n    }, {\n      key: \"identity\",\n      value: function identity() {\n        this.set(1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1);\n        return this;\n      }\n    }, {\n      key: \"clone\",\n      value: function clone() {\n        return new Matrix4().fromArray(this.elements);\n      }\n    }, {\n      key: \"copy\",\n      value: function copy(m) {\n        var te = this.elements;\n        var me = m.elements;\n        te[0] = me[0];\n        te[1] = me[1];\n        te[2] = me[2];\n        te[3] = me[3];\n        te[4] = me[4];\n        te[5] = me[5];\n        te[6] = me[6];\n        te[7] = me[7];\n        te[8] = me[8];\n        te[9] = me[9];\n        te[10] = me[10];\n        te[11] = me[11];\n        te[12] = me[12];\n        te[13] = me[13];\n        te[14] = me[14];\n        te[15] = me[15];\n        return this;\n      }\n    }, {\n      key: \"copyPosition\",\n      value: function copyPosition(m) {\n        var te = this.elements,\n            me = m.elements;\n        te[12] = me[12];\n        te[13] = me[13];\n        te[14] = me[14];\n        return this;\n      }\n    }, {\n      key: \"setFromMatrix3\",\n      value: function setFromMatrix3(m) {\n        var me = m.elements;\n        this.set(me[0], me[3], me[6], 0, me[1], me[4], me[7], 0, me[2], me[5], me[8], 0, 0, 0, 0, 1);\n        return this;\n      }\n    }, {\n      key: \"extractBasis\",\n      value: function extractBasis(xAxis, yAxis, zAxis) {\n        xAxis.setFromMatrixColumn(this, 0);\n        yAxis.setFromMatrixColumn(this, 1);\n        zAxis.setFromMatrixColumn(this, 2);\n        return this;\n      }\n    }, {\n      key: \"makeBasis\",\n      value: function makeBasis(xAxis, yAxis, zAxis) {\n        this.set(xAxis.x, yAxis.x, zAxis.x, 0, xAxis.y, yAxis.y, zAxis.y, 0, xAxis.z, yAxis.z, zAxis.z, 0, 0, 0, 0, 1);\n        return this;\n      }\n    }, {\n      key: \"extractRotation\",\n      value: function extractRotation(m) {\n        // this method does not support reflection matrices\n        var te = this.elements;\n        var me = m.elements;\n\n        var scaleX = 1 / _v1$5.setFromMatrixColumn(m, 0).length();\n\n        var scaleY = 1 / _v1$5.setFromMatrixColumn(m, 1).length();\n\n        var scaleZ = 1 / _v1$5.setFromMatrixColumn(m, 2).length();\n\n        te[0] = me[0] * scaleX;\n        te[1] = me[1] * scaleX;\n        te[2] = me[2] * scaleX;\n        te[3] = 0;\n        te[4] = me[4] * scaleY;\n        te[5] = me[5] * scaleY;\n        te[6] = me[6] * scaleY;\n        te[7] = 0;\n        te[8] = me[8] * scaleZ;\n        te[9] = me[9] * scaleZ;\n        te[10] = me[10] * scaleZ;\n        te[11] = 0;\n        te[12] = 0;\n        te[13] = 0;\n        te[14] = 0;\n        te[15] = 1;\n        return this;\n      }\n    }, {\n      key: \"makeRotationFromEuler\",\n      value: function makeRotationFromEuler(euler) {\n        if (!(euler && euler.isEuler)) {\n          console.error('THREE.Matrix4: .makeRotationFromEuler() now expects a Euler rotation rather than a Vector3 and order.');\n        }\n\n        var te = this.elements;\n        var x = euler.x,\n            y = euler.y,\n            z = euler.z;\n        var a = Math.cos(x),\n            b = Math.sin(x);\n        var c = Math.cos(y),\n            d = Math.sin(y);\n        var e = Math.cos(z),\n            f = Math.sin(z);\n\n        if (euler.order === 'XYZ') {\n          var ae = a * e,\n              af = a * f,\n              be = b * e,\n              bf = b * f;\n          te[0] = c * e;\n          te[4] = -c * f;\n          te[8] = d;\n          te[1] = af + be * d;\n          te[5] = ae - bf * d;\n          te[9] = -b * c;\n          te[2] = bf - ae * d;\n          te[6] = be + af * d;\n          te[10] = a * c;\n        } else if (euler.order === 'YXZ') {\n          var ce = c * e,\n              cf = c * f,\n              de = d * e,\n              df = d * f;\n          te[0] = ce + df * b;\n          te[4] = de * b - cf;\n          te[8] = a * d;\n          te[1] = a * f;\n          te[5] = a * e;\n          te[9] = -b;\n          te[2] = cf * b - de;\n          te[6] = df + ce * b;\n          te[10] = a * c;\n        } else if (euler.order === 'ZXY') {\n          var _ce = c * e,\n              _cf = c * f,\n              _de = d * e,\n              _df = d * f;\n\n          te[0] = _ce - _df * b;\n          te[4] = -a * f;\n          te[8] = _de + _cf * b;\n          te[1] = _cf + _de * b;\n          te[5] = a * e;\n          te[9] = _df - _ce * b;\n          te[2] = -a * d;\n          te[6] = b;\n          te[10] = a * c;\n        } else if (euler.order === 'ZYX') {\n          var _ae = a * e,\n              _af = a * f,\n              _be = b * e,\n              _bf = b * f;\n\n          te[0] = c * e;\n          te[4] = _be * d - _af;\n          te[8] = _ae * d + _bf;\n          te[1] = c * f;\n          te[5] = _bf * d + _ae;\n          te[9] = _af * d - _be;\n          te[2] = -d;\n          te[6] = b * c;\n          te[10] = a * c;\n        } else if (euler.order === 'YZX') {\n          var ac = a * c,\n              ad = a * d,\n              bc = b * c,\n              bd = b * d;\n          te[0] = c * e;\n          te[4] = bd - ac * f;\n          te[8] = bc * f + ad;\n          te[1] = f;\n          te[5] = a * e;\n          te[9] = -b * e;\n          te[2] = -d * e;\n          te[6] = ad * f + bc;\n          te[10] = ac - bd * f;\n        } else if (euler.order === 'XZY') {\n          var _ac = a * c,\n              _ad = a * d,\n              _bc = b * c,\n              _bd = b * d;\n\n          te[0] = c * e;\n          te[4] = -f;\n          te[8] = d * e;\n          te[1] = _ac * f + _bd;\n          te[5] = a * e;\n          te[9] = _ad * f - _bc;\n          te[2] = _bc * f - _ad;\n          te[6] = b * e;\n          te[10] = _bd * f + _ac;\n        } // bottom row\n\n\n        te[3] = 0;\n        te[7] = 0;\n        te[11] = 0; // last column\n\n        te[12] = 0;\n        te[13] = 0;\n        te[14] = 0;\n        te[15] = 1;\n        return this;\n      }\n    }, {\n      key: \"makeRotationFromQuaternion\",\n      value: function makeRotationFromQuaternion(q) {\n        return this.compose(_zero, q, _one);\n      }\n    }, {\n      key: \"lookAt\",\n      value: function lookAt(eye, target, up) {\n        var te = this.elements;\n\n        _z.subVectors(eye, target);\n\n        if (_z.lengthSq() === 0) {\n          // eye and target are in the same position\n          _z.z = 1;\n        }\n\n        _z.normalize();\n\n        _x.crossVectors(up, _z);\n\n        if (_x.lengthSq() === 0) {\n          // up and z are parallel\n          if (Math.abs(up.z) === 1) {\n            _z.x += 0.0001;\n          } else {\n            _z.z += 0.0001;\n          }\n\n          _z.normalize();\n\n          _x.crossVectors(up, _z);\n        }\n\n        _x.normalize();\n\n        _y.crossVectors(_z, _x);\n\n        te[0] = _x.x;\n        te[4] = _y.x;\n        te[8] = _z.x;\n        te[1] = _x.y;\n        te[5] = _y.y;\n        te[9] = _z.y;\n        te[2] = _x.z;\n        te[6] = _y.z;\n        te[10] = _z.z;\n        return this;\n      }\n    }, {\n      key: \"multiply\",\n      value: function multiply(m, n) {\n        if (n !== undefined) {\n          console.warn('THREE.Matrix4: .multiply() now only accepts one argument. Use .multiplyMatrices( a, b ) instead.');\n          return this.multiplyMatrices(m, n);\n        }\n\n        return this.multiplyMatrices(this, m);\n      }\n    }, {\n      key: \"premultiply\",\n      value: function premultiply(m) {\n        return this.multiplyMatrices(m, this);\n      }\n    }, {\n      key: \"multiplyMatrices\",\n      value: function multiplyMatrices(a, b) {\n        var ae = a.elements;\n        var be = b.elements;\n        var te = this.elements;\n        var a11 = ae[0],\n            a12 = ae[4],\n            a13 = ae[8],\n            a14 = ae[12];\n        var a21 = ae[1],\n            a22 = ae[5],\n            a23 = ae[9],\n            a24 = ae[13];\n        var a31 = ae[2],\n            a32 = ae[6],\n            a33 = ae[10],\n            a34 = ae[14];\n        var a41 = ae[3],\n            a42 = ae[7],\n            a43 = ae[11],\n            a44 = ae[15];\n        var b11 = be[0],\n            b12 = be[4],\n            b13 = be[8],\n            b14 = be[12];\n        var b21 = be[1],\n            b22 = be[5],\n            b23 = be[9],\n            b24 = be[13];\n        var b31 = be[2],\n            b32 = be[6],\n            b33 = be[10],\n            b34 = be[14];\n        var b41 = be[3],\n            b42 = be[7],\n            b43 = be[11],\n            b44 = be[15];\n        te[0] = a11 * b11 + a12 * b21 + a13 * b31 + a14 * b41;\n        te[4] = a11 * b12 + a12 * b22 + a13 * b32 + a14 * b42;\n        te[8] = a11 * b13 + a12 * b23 + a13 * b33 + a14 * b43;\n        te[12] = a11 * b14 + a12 * b24 + a13 * b34 + a14 * b44;\n        te[1] = a21 * b11 + a22 * b21 + a23 * b31 + a24 * b41;\n        te[5] = a21 * b12 + a22 * b22 + a23 * b32 + a24 * b42;\n        te[9] = a21 * b13 + a22 * b23 + a23 * b33 + a24 * b43;\n        te[13] = a21 * b14 + a22 * b24 + a23 * b34 + a24 * b44;\n        te[2] = a31 * b11 + a32 * b21 + a33 * b31 + a34 * b41;\n        te[6] = a31 * b12 + a32 * b22 + a33 * b32 + a34 * b42;\n        te[10] = a31 * b13 + a32 * b23 + a33 * b33 + a34 * b43;\n        te[14] = a31 * b14 + a32 * b24 + a33 * b34 + a34 * b44;\n        te[3] = a41 * b11 + a42 * b21 + a43 * b31 + a44 * b41;\n        te[7] = a41 * b12 + a42 * b22 + a43 * b32 + a44 * b42;\n        te[11] = a41 * b13 + a42 * b23 + a43 * b33 + a44 * b43;\n        te[15] = a41 * b14 + a42 * b24 + a43 * b34 + a44 * b44;\n        return this;\n      }\n    }, {\n      key: \"multiplyScalar\",\n      value: function multiplyScalar(s) {\n        var te = this.elements;\n        te[0] *= s;\n        te[4] *= s;\n        te[8] *= s;\n        te[12] *= s;\n        te[1] *= s;\n        te[5] *= s;\n        te[9] *= s;\n        te[13] *= s;\n        te[2] *= s;\n        te[6] *= s;\n        te[10] *= s;\n        te[14] *= s;\n        te[3] *= s;\n        te[7] *= s;\n        te[11] *= s;\n        te[15] *= s;\n        return this;\n      }\n    }, {\n      key: \"determinant\",\n      value: function determinant() {\n        var te = this.elements;\n        var n11 = te[0],\n            n12 = te[4],\n            n13 = te[8],\n            n14 = te[12];\n        var n21 = te[1],\n            n22 = te[5],\n            n23 = te[9],\n            n24 = te[13];\n        var n31 = te[2],\n            n32 = te[6],\n            n33 = te[10],\n            n34 = te[14];\n        var n41 = te[3],\n            n42 = te[7],\n            n43 = te[11],\n            n44 = te[15]; //TODO: make this more efficient\n        //( based on http://www.euclideanspace.com/maths/algebra/matrix/functions/inverse/fourD/index.htm )\n\n        return n41 * (+n14 * n23 * n32 - n13 * n24 * n32 - n14 * n22 * n33 + n12 * n24 * n33 + n13 * n22 * n34 - n12 * n23 * n34) + n42 * (+n11 * n23 * n34 - n11 * n24 * n33 + n14 * n21 * n33 - n13 * n21 * n34 + n13 * n24 * n31 - n14 * n23 * n31) + n43 * (+n11 * n24 * n32 - n11 * n22 * n34 - n14 * n21 * n32 + n12 * n21 * n34 + n14 * n22 * n31 - n12 * n24 * n31) + n44 * (-n13 * n22 * n31 - n11 * n23 * n32 + n11 * n22 * n33 + n13 * n21 * n32 - n12 * n21 * n33 + n12 * n23 * n31);\n      }\n    }, {\n      key: \"transpose\",\n      value: function transpose() {\n        var te = this.elements;\n        var tmp;\n        tmp = te[1];\n        te[1] = te[4];\n        te[4] = tmp;\n        tmp = te[2];\n        te[2] = te[8];\n        te[8] = tmp;\n        tmp = te[6];\n        te[6] = te[9];\n        te[9] = tmp;\n        tmp = te[3];\n        te[3] = te[12];\n        te[12] = tmp;\n        tmp = te[7];\n        te[7] = te[13];\n        te[13] = tmp;\n        tmp = te[11];\n        te[11] = te[14];\n        te[14] = tmp;\n        return this;\n      }\n    }, {\n      key: \"setPosition\",\n      value: function setPosition(x, y, z) {\n        var te = this.elements;\n\n        if (x.isVector3) {\n          te[12] = x.x;\n          te[13] = x.y;\n          te[14] = x.z;\n        } else {\n          te[12] = x;\n          te[13] = y;\n          te[14] = z;\n        }\n\n        return this;\n      }\n    }, {\n      key: \"invert\",\n      value: function invert() {\n        // based on http://www.euclideanspace.com/maths/algebra/matrix/functions/inverse/fourD/index.htm\n        var te = this.elements,\n            n11 = te[0],\n            n21 = te[1],\n            n31 = te[2],\n            n41 = te[3],\n            n12 = te[4],\n            n22 = te[5],\n            n32 = te[6],\n            n42 = te[7],\n            n13 = te[8],\n            n23 = te[9],\n            n33 = te[10],\n            n43 = te[11],\n            n14 = te[12],\n            n24 = te[13],\n            n34 = te[14],\n            n44 = te[15],\n            t11 = n23 * n34 * n42 - n24 * n33 * n42 + n24 * n32 * n43 - n22 * n34 * n43 - n23 * n32 * n44 + n22 * n33 * n44,\n            t12 = n14 * n33 * n42 - n13 * n34 * n42 - n14 * n32 * n43 + n12 * n34 * n43 + n13 * n32 * n44 - n12 * n33 * n44,\n            t13 = n13 * n24 * n42 - n14 * n23 * n42 + n14 * n22 * n43 - n12 * n24 * n43 - n13 * n22 * n44 + n12 * n23 * n44,\n            t14 = n14 * n23 * n32 - n13 * n24 * n32 - n14 * n22 * n33 + n12 * n24 * n33 + n13 * n22 * n34 - n12 * n23 * n34;\n        var det = n11 * t11 + n21 * t12 + n31 * t13 + n41 * t14;\n        if (det === 0) return this.set(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);\n        var detInv = 1 / det;\n        te[0] = t11 * detInv;\n        te[1] = (n24 * n33 * n41 - n23 * n34 * n41 - n24 * n31 * n43 + n21 * n34 * n43 + n23 * n31 * n44 - n21 * n33 * n44) * detInv;\n        te[2] = (n22 * n34 * n41 - n24 * n32 * n41 + n24 * n31 * n42 - n21 * n34 * n42 - n22 * n31 * n44 + n21 * n32 * n44) * detInv;\n        te[3] = (n23 * n32 * n41 - n22 * n33 * n41 - n23 * n31 * n42 + n21 * n33 * n42 + n22 * n31 * n43 - n21 * n32 * n43) * detInv;\n        te[4] = t12 * detInv;\n        te[5] = (n13 * n34 * n41 - n14 * n33 * n41 + n14 * n31 * n43 - n11 * n34 * n43 - n13 * n31 * n44 + n11 * n33 * n44) * detInv;\n        te[6] = (n14 * n32 * n41 - n12 * n34 * n41 - n14 * n31 * n42 + n11 * n34 * n42 + n12 * n31 * n44 - n11 * n32 * n44) * detInv;\n        te[7] = (n12 * n33 * n41 - n13 * n32 * n41 + n13 * n31 * n42 - n11 * n33 * n42 - n12 * n31 * n43 + n11 * n32 * n43) * detInv;\n        te[8] = t13 * detInv;\n        te[9] = (n14 * n23 * n41 - n13 * n24 * n41 - n14 * n21 * n43 + n11 * n24 * n43 + n13 * n21 * n44 - n11 * n23 * n44) * detInv;\n        te[10] = (n12 * n24 * n41 - n14 * n22 * n41 + n14 * n21 * n42 - n11 * n24 * n42 - n12 * n21 * n44 + n11 * n22 * n44) * detInv;\n        te[11] = (n13 * n22 * n41 - n12 * n23 * n41 - n13 * n21 * n42 + n11 * n23 * n42 + n12 * n21 * n43 - n11 * n22 * n43) * detInv;\n        te[12] = t14 * detInv;\n        te[13] = (n13 * n24 * n31 - n14 * n23 * n31 + n14 * n21 * n33 - n11 * n24 * n33 - n13 * n21 * n34 + n11 * n23 * n34) * detInv;\n        te[14] = (n14 * n22 * n31 - n12 * n24 * n31 - n14 * n21 * n32 + n11 * n24 * n32 + n12 * n21 * n34 - n11 * n22 * n34) * detInv;\n        te[15] = (n12 * n23 * n31 - n13 * n22 * n31 + n13 * n21 * n32 - n11 * n23 * n32 - n12 * n21 * n33 + n11 * n22 * n33) * detInv;\n        return this;\n      }\n    }, {\n      key: \"scale\",\n      value: function scale(v) {\n        var te = this.elements;\n        var x = v.x,\n            y = v.y,\n            z = v.z;\n        te[0] *= x;\n        te[4] *= y;\n        te[8] *= z;\n        te[1] *= x;\n        te[5] *= y;\n        te[9] *= z;\n        te[2] *= x;\n        te[6] *= y;\n        te[10] *= z;\n        te[3] *= x;\n        te[7] *= y;\n        te[11] *= z;\n        return this;\n      }\n    }, {\n      key: \"getMaxScaleOnAxis\",\n      value: function getMaxScaleOnAxis() {\n        var te = this.elements;\n        var scaleXSq = te[0] * te[0] + te[1] * te[1] + te[2] * te[2];\n        var scaleYSq = te[4] * te[4] + te[5] * te[5] + te[6] * te[6];\n        var scaleZSq = te[8] * te[8] + te[9] * te[9] + te[10] * te[10];\n        return Math.sqrt(Math.max(scaleXSq, scaleYSq, scaleZSq));\n      }\n    }, {\n      key: \"makeTranslation\",\n      value: function makeTranslation(x, y, z) {\n        this.set(1, 0, 0, x, 0, 1, 0, y, 0, 0, 1, z, 0, 0, 0, 1);\n        return this;\n      }\n    }, {\n      key: \"makeRotationX\",\n      value: function makeRotationX(theta) {\n        var c = Math.cos(theta),\n            s = Math.sin(theta);\n        this.set(1, 0, 0, 0, 0, c, -s, 0, 0, s, c, 0, 0, 0, 0, 1);\n        return this;\n      }\n    }, {\n      key: \"makeRotationY\",\n      value: function makeRotationY(theta) {\n        var c = Math.cos(theta),\n            s = Math.sin(theta);\n        this.set(c, 0, s, 0, 0, 1, 0, 0, -s, 0, c, 0, 0, 0, 0, 1);\n        return this;\n      }\n    }, {\n      key: \"makeRotationZ\",\n      value: function makeRotationZ(theta) {\n        var c = Math.cos(theta),\n            s = Math.sin(theta);\n        this.set(c, -s, 0, 0, s, c, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1);\n        return this;\n      }\n    }, {\n      key: \"makeRotationAxis\",\n      value: function makeRotationAxis(axis, angle) {\n        // Based on http://www.gamedev.net/reference/articles/article1199.asp\n        var c = Math.cos(angle);\n        var s = Math.sin(angle);\n        var t = 1 - c;\n        var x = axis.x,\n            y = axis.y,\n            z = axis.z;\n        var tx = t * x,\n            ty = t * y;\n        this.set(tx * x + c, tx * y - s * z, tx * z + s * y, 0, tx * y + s * z, ty * y + c, ty * z - s * x, 0, tx * z - s * y, ty * z + s * x, t * z * z + c, 0, 0, 0, 0, 1);\n        return this;\n      }\n    }, {\n      key: \"makeScale\",\n      value: function makeScale(x, y, z) {\n        this.set(x, 0, 0, 0, 0, y, 0, 0, 0, 0, z, 0, 0, 0, 0, 1);\n        return this;\n      }\n    }, {\n      key: \"makeShear\",\n      value: function makeShear(xy, xz, yx, yz, zx, zy) {\n        this.set(1, yx, zx, 0, xy, 1, zy, 0, xz, yz, 1, 0, 0, 0, 0, 1);\n        return this;\n      }\n    }, {\n      key: \"compose\",\n      value: function compose(position, quaternion, scale) {\n        var te = this.elements;\n        var x = quaternion._x,\n            y = quaternion._y,\n            z = quaternion._z,\n            w = quaternion._w;\n        var x2 = x + x,\n            y2 = y + y,\n            z2 = z + z;\n        var xx = x * x2,\n            xy = x * y2,\n            xz = x * z2;\n        var yy = y * y2,\n            yz = y * z2,\n            zz = z * z2;\n        var wx = w * x2,\n            wy = w * y2,\n            wz = w * z2;\n        var sx = scale.x,\n            sy = scale.y,\n            sz = scale.z;\n        te[0] = (1 - (yy + zz)) * sx;\n        te[1] = (xy + wz) * sx;\n        te[2] = (xz - wy) * sx;\n        te[3] = 0;\n        te[4] = (xy - wz) * sy;\n        te[5] = (1 - (xx + zz)) * sy;\n        te[6] = (yz + wx) * sy;\n        te[7] = 0;\n        te[8] = (xz + wy) * sz;\n        te[9] = (yz - wx) * sz;\n        te[10] = (1 - (xx + yy)) * sz;\n        te[11] = 0;\n        te[12] = position.x;\n        te[13] = position.y;\n        te[14] = position.z;\n        te[15] = 1;\n        return this;\n      }\n    }, {\n      key: \"decompose\",\n      value: function decompose(position, quaternion, scale) {\n        var te = this.elements;\n\n        var sx = _v1$5.set(te[0], te[1], te[2]).length();\n\n        var sy = _v1$5.set(te[4], te[5], te[6]).length();\n\n        var sz = _v1$5.set(te[8], te[9], te[10]).length(); // if determine is negative, we need to invert one scale\n\n\n        var det = this.determinant();\n        if (det < 0) sx = -sx;\n        position.x = te[12];\n        position.y = te[13];\n        position.z = te[14]; // scale the rotation part\n\n        _m1$2.copy(this);\n\n        var invSX = 1 / sx;\n        var invSY = 1 / sy;\n        var invSZ = 1 / sz;\n        _m1$2.elements[0] *= invSX;\n        _m1$2.elements[1] *= invSX;\n        _m1$2.elements[2] *= invSX;\n        _m1$2.elements[4] *= invSY;\n        _m1$2.elements[5] *= invSY;\n        _m1$2.elements[6] *= invSY;\n        _m1$2.elements[8] *= invSZ;\n        _m1$2.elements[9] *= invSZ;\n        _m1$2.elements[10] *= invSZ;\n        quaternion.setFromRotationMatrix(_m1$2);\n        scale.x = sx;\n        scale.y = sy;\n        scale.z = sz;\n        return this;\n      }\n    }, {\n      key: \"makePerspective\",\n      value: function makePerspective(left, right, top, bottom, near, far) {\n        if (far === undefined) {\n          console.warn('THREE.Matrix4: .makePerspective() has been redefined and has a new signature. Please check the docs.');\n        }\n\n        var te = this.elements;\n        var x = 2 * near / (right - left);\n        var y = 2 * near / (top - bottom);\n        var a = (right + left) / (right - left);\n        var b = (top + bottom) / (top - bottom);\n        var c = -(far + near) / (far - near);\n        var d = -2 * far * near / (far - near);\n        te[0] = x;\n        te[4] = 0;\n        te[8] = a;\n        te[12] = 0;\n        te[1] = 0;\n        te[5] = y;\n        te[9] = b;\n        te[13] = 0;\n        te[2] = 0;\n        te[6] = 0;\n        te[10] = c;\n        te[14] = d;\n        te[3] = 0;\n        te[7] = 0;\n        te[11] = -1;\n        te[15] = 0;\n        return this;\n      }\n    }, {\n      key: \"makeOrthographic\",\n      value: function makeOrthographic(left, right, top, bottom, near, far) {\n        var te = this.elements;\n        var w = 1.0 / (right - left);\n        var h = 1.0 / (top - bottom);\n        var p = 1.0 / (far - near);\n        var x = (right + left) * w;\n        var y = (top + bottom) * h;\n        var z = (far + near) * p;\n        te[0] = 2 * w;\n        te[4] = 0;\n        te[8] = 0;\n        te[12] = -x;\n        te[1] = 0;\n        te[5] = 2 * h;\n        te[9] = 0;\n        te[13] = -y;\n        te[2] = 0;\n        te[6] = 0;\n        te[10] = -2 * p;\n        te[14] = -z;\n        te[3] = 0;\n        te[7] = 0;\n        te[11] = 0;\n        te[15] = 1;\n        return this;\n      }\n    }, {\n      key: \"equals\",\n      value: function equals(matrix) {\n        var te = this.elements;\n        var me = matrix.elements;\n\n        for (var _i15 = 0; _i15 < 16; _i15++) {\n          if (te[_i15] !== me[_i15]) return false;\n        }\n\n        return true;\n      }\n    }, {\n      key: \"fromArray\",\n      value: function fromArray(array) {\n        var offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n\n        for (var _i16 = 0; _i16 < 16; _i16++) {\n          this.elements[_i16] = array[_i16 + offset];\n        }\n\n        return this;\n      }\n    }, {\n      key: \"toArray\",\n      value: function toArray() {\n        var array = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n        var offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n        var te = this.elements;\n        array[offset] = te[0];\n        array[offset + 1] = te[1];\n        array[offset + 2] = te[2];\n        array[offset + 3] = te[3];\n        array[offset + 4] = te[4];\n        array[offset + 5] = te[5];\n        array[offset + 6] = te[6];\n        array[offset + 7] = te[7];\n        array[offset + 8] = te[8];\n        array[offset + 9] = te[9];\n        array[offset + 10] = te[10];\n        array[offset + 11] = te[11];\n        array[offset + 12] = te[12];\n        array[offset + 13] = te[13];\n        array[offset + 14] = te[14];\n        array[offset + 15] = te[15];\n        return array;\n      }\n    }]);\n\n    return Matrix4;\n  }();\n\n  Matrix4.prototype.isMatrix4 = true;\n\n  var _v1$5 = /*@__PURE__*/new Vector3();\n\n  var _m1$2 = /*@__PURE__*/new Matrix4();\n\n  var _zero = /*@__PURE__*/new Vector3(0, 0, 0);\n\n  var _one = /*@__PURE__*/new Vector3(1, 1, 1);\n\n  var _x = /*@__PURE__*/new Vector3();\n\n  var _y = /*@__PURE__*/new Vector3();\n\n  var _z = /*@__PURE__*/new Vector3();\n\n  var _matrix$1 = /*@__PURE__*/new Matrix4();\n\n  var _quaternion$3 = /*@__PURE__*/new Quaternion();\n\n  var Euler = /*#__PURE__*/function () {\n    function Euler() {\n      var x = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n      var y = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n      var z = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n      var order = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : Euler.DefaultOrder;\n\n      _classCallCheck(this, Euler);\n\n      this._x = x;\n      this._y = y;\n      this._z = z;\n      this._order = order;\n    }\n\n    _createClass(Euler, [{\n      key: \"x\",\n      get: function get() {\n        return this._x;\n      },\n      set: function set(value) {\n        this._x = value;\n\n        this._onChangeCallback();\n      }\n    }, {\n      key: \"y\",\n      get: function get() {\n        return this._y;\n      },\n      set: function set(value) {\n        this._y = value;\n\n        this._onChangeCallback();\n      }\n    }, {\n      key: \"z\",\n      get: function get() {\n        return this._z;\n      },\n      set: function set(value) {\n        this._z = value;\n\n        this._onChangeCallback();\n      }\n    }, {\n      key: \"order\",\n      get: function get() {\n        return this._order;\n      },\n      set: function set(value) {\n        this._order = value;\n\n        this._onChangeCallback();\n      }\n    }, {\n      key: \"set\",\n      value: function set(x, y, z) {\n        var order = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : this._order;\n        this._x = x;\n        this._y = y;\n        this._z = z;\n        this._order = order;\n\n        this._onChangeCallback();\n\n        return this;\n      }\n    }, {\n      key: \"clone\",\n      value: function clone() {\n        return new this.constructor(this._x, this._y, this._z, this._order);\n      }\n    }, {\n      key: \"copy\",\n      value: function copy(euler) {\n        this._x = euler._x;\n        this._y = euler._y;\n        this._z = euler._z;\n        this._order = euler._order;\n\n        this._onChangeCallback();\n\n        return this;\n      }\n    }, {\n      key: \"setFromRotationMatrix\",\n      value: function setFromRotationMatrix(m) {\n        var order = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this._order;\n        var update = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n        // assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n        var te = m.elements;\n        var m11 = te[0],\n            m12 = te[4],\n            m13 = te[8];\n        var m21 = te[1],\n            m22 = te[5],\n            m23 = te[9];\n        var m31 = te[2],\n            m32 = te[6],\n            m33 = te[10];\n\n        switch (order) {\n          case 'XYZ':\n            this._y = Math.asin(clamp(m13, -1, 1));\n\n            if (Math.abs(m13) < 0.9999999) {\n              this._x = Math.atan2(-m23, m33);\n              this._z = Math.atan2(-m12, m11);\n            } else {\n              this._x = Math.atan2(m32, m22);\n              this._z = 0;\n            }\n\n            break;\n\n          case 'YXZ':\n            this._x = Math.asin(-clamp(m23, -1, 1));\n\n            if (Math.abs(m23) < 0.9999999) {\n              this._y = Math.atan2(m13, m33);\n              this._z = Math.atan2(m21, m22);\n            } else {\n              this._y = Math.atan2(-m31, m11);\n              this._z = 0;\n            }\n\n            break;\n\n          case 'ZXY':\n            this._x = Math.asin(clamp(m32, -1, 1));\n\n            if (Math.abs(m32) < 0.9999999) {\n              this._y = Math.atan2(-m31, m33);\n              this._z = Math.atan2(-m12, m22);\n            } else {\n              this._y = 0;\n              this._z = Math.atan2(m21, m11);\n            }\n\n            break;\n\n          case 'ZYX':\n            this._y = Math.asin(-clamp(m31, -1, 1));\n\n            if (Math.abs(m31) < 0.9999999) {\n              this._x = Math.atan2(m32, m33);\n              this._z = Math.atan2(m21, m11);\n            } else {\n              this._x = 0;\n              this._z = Math.atan2(-m12, m22);\n            }\n\n            break;\n\n          case 'YZX':\n            this._z = Math.asin(clamp(m21, -1, 1));\n\n            if (Math.abs(m21) < 0.9999999) {\n              this._x = Math.atan2(-m23, m22);\n              this._y = Math.atan2(-m31, m11);\n            } else {\n              this._x = 0;\n              this._y = Math.atan2(m13, m33);\n            }\n\n            break;\n\n          case 'XZY':\n            this._z = Math.asin(-clamp(m12, -1, 1));\n\n            if (Math.abs(m12) < 0.9999999) {\n              this._x = Math.atan2(m32, m22);\n              this._y = Math.atan2(m13, m11);\n            } else {\n              this._x = Math.atan2(-m23, m33);\n              this._y = 0;\n            }\n\n            break;\n\n          default:\n            console.warn('THREE.Euler: .setFromRotationMatrix() encountered an unknown order: ' + order);\n        }\n\n        this._order = order;\n        if (update === true) this._onChangeCallback();\n        return this;\n      }\n    }, {\n      key: \"setFromQuaternion\",\n      value: function setFromQuaternion(q, order, update) {\n        _matrix$1.makeRotationFromQuaternion(q);\n\n        return this.setFromRotationMatrix(_matrix$1, order, update);\n      }\n    }, {\n      key: \"setFromVector3\",\n      value: function setFromVector3(v) {\n        var order = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this._order;\n        return this.set(v.x, v.y, v.z, order);\n      }\n    }, {\n      key: \"reorder\",\n      value: function reorder(newOrder) {\n        // WARNING: this discards revolution information -bhouston\n        _quaternion$3.setFromEuler(this);\n\n        return this.setFromQuaternion(_quaternion$3, newOrder);\n      }\n    }, {\n      key: \"equals\",\n      value: function equals(euler) {\n        return euler._x === this._x && euler._y === this._y && euler._z === this._z && euler._order === this._order;\n      }\n    }, {\n      key: \"fromArray\",\n      value: function fromArray(array) {\n        this._x = array[0];\n        this._y = array[1];\n        this._z = array[2];\n        if (array[3] !== undefined) this._order = array[3];\n\n        this._onChangeCallback();\n\n        return this;\n      }\n    }, {\n      key: \"toArray\",\n      value: function toArray() {\n        var array = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n        var offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n        array[offset] = this._x;\n        array[offset + 1] = this._y;\n        array[offset + 2] = this._z;\n        array[offset + 3] = this._order;\n        return array;\n      }\n    }, {\n      key: \"toVector3\",\n      value: function toVector3(optionalResult) {\n        if (optionalResult) {\n          return optionalResult.set(this._x, this._y, this._z);\n        } else {\n          return new Vector3(this._x, this._y, this._z);\n        }\n      }\n    }, {\n      key: \"_onChange\",\n      value: function _onChange(callback) {\n        this._onChangeCallback = callback;\n        return this;\n      }\n    }, {\n      key: \"_onChangeCallback\",\n      value: function _onChangeCallback() {}\n    }]);\n\n    return Euler;\n  }();\n\n  Euler.prototype.isEuler = true;\n  Euler.DefaultOrder = 'XYZ';\n  Euler.RotationOrders = ['XYZ', 'YZX', 'ZXY', 'XZY', 'YXZ', 'ZYX'];\n\n  var Layers = /*#__PURE__*/function () {\n    function Layers() {\n      _classCallCheck(this, Layers);\n\n      this.mask = 1 | 0;\n    }\n\n    _createClass(Layers, [{\n      key: \"set\",\n      value: function set(channel) {\n        this.mask = 1 << channel | 0;\n      }\n    }, {\n      key: \"enable\",\n      value: function enable(channel) {\n        this.mask |= 1 << channel | 0;\n      }\n    }, {\n      key: \"enableAll\",\n      value: function enableAll() {\n        this.mask = 0xffffffff | 0;\n      }\n    }, {\n      key: \"toggle\",\n      value: function toggle(channel) {\n        this.mask ^= 1 << channel | 0;\n      }\n    }, {\n      key: \"disable\",\n      value: function disable(channel) {\n        this.mask &= ~(1 << channel | 0);\n      }\n    }, {\n      key: \"disableAll\",\n      value: function disableAll() {\n        this.mask = 0;\n      }\n    }, {\n      key: \"test\",\n      value: function test(layers) {\n        return (this.mask & layers.mask) !== 0;\n      }\n    }]);\n\n    return Layers;\n  }();\n\n  var _object3DId = 0;\n\n  var _v1$4 = /*@__PURE__*/new Vector3();\n\n  var _q1 = /*@__PURE__*/new Quaternion();\n\n  var _m1$1 = /*@__PURE__*/new Matrix4();\n\n  var _target = /*@__PURE__*/new Vector3();\n\n  var _position$3 = /*@__PURE__*/new Vector3();\n\n  var _scale$2 = /*@__PURE__*/new Vector3();\n\n  var _quaternion$2 = /*@__PURE__*/new Quaternion();\n\n  var _xAxis = /*@__PURE__*/new Vector3(1, 0, 0);\n\n  var _yAxis = /*@__PURE__*/new Vector3(0, 1, 0);\n\n  var _zAxis = /*@__PURE__*/new Vector3(0, 0, 1);\n\n  var _addedEvent = {\n    type: 'added'\n  };\n  var _removedEvent = {\n    type: 'removed'\n  };\n\n  var Object3D = /*#__PURE__*/function (_EventDispatcher3) {\n    _inherits(Object3D, _EventDispatcher3);\n\n    var _super5 = _createSuper(Object3D);\n\n    function Object3D() {\n      var _this6;\n\n      _classCallCheck(this, Object3D);\n\n      _this6 = _super5.call(this);\n      Object.defineProperty(_assertThisInitialized(_this6), 'id', {\n        value: _object3DId++\n      });\n      _this6.uuid = generateUUID();\n      _this6.name = '';\n      _this6.type = 'Object3D';\n      _this6.parent = null;\n      _this6.children = [];\n      _this6.up = Object3D.DefaultUp.clone();\n      var position = new Vector3();\n      var rotation = new Euler();\n      var quaternion = new Quaternion();\n      var scale = new Vector3(1, 1, 1);\n\n      function onRotationChange() {\n        quaternion.setFromEuler(rotation, false);\n      }\n\n      function onQuaternionChange() {\n        rotation.setFromQuaternion(quaternion, undefined, false);\n      }\n\n      rotation._onChange(onRotationChange);\n\n      quaternion._onChange(onQuaternionChange);\n\n      Object.defineProperties(_assertThisInitialized(_this6), {\n        position: {\n          configurable: true,\n          enumerable: true,\n          value: position\n        },\n        rotation: {\n          configurable: true,\n          enumerable: true,\n          value: rotation\n        },\n        quaternion: {\n          configurable: true,\n          enumerable: true,\n          value: quaternion\n        },\n        scale: {\n          configurable: true,\n          enumerable: true,\n          value: scale\n        },\n        modelViewMatrix: {\n          value: new Matrix4()\n        },\n        normalMatrix: {\n          value: new Matrix3()\n        }\n      });\n      _this6.matrix = new Matrix4();\n      _this6.matrixWorld = new Matrix4();\n      _this6.matrixAutoUpdate = Object3D.DefaultMatrixAutoUpdate;\n      _this6.matrixWorldNeedsUpdate = false;\n      _this6.layers = new Layers();\n      _this6.visible = true;\n      _this6.castShadow = false;\n      _this6.receiveShadow = false;\n      _this6.frustumCulled = true;\n      _this6.renderOrder = 0;\n      _this6.animations = [];\n      _this6.userData = {};\n      return _this6;\n    }\n\n    _createClass(Object3D, [{\n      key: \"onBeforeRender\",\n      value: function onBeforeRender() {}\n    }, {\n      key: \"onAfterRender\",\n      value: function onAfterRender() {}\n    }, {\n      key: \"applyMatrix4\",\n      value: function applyMatrix4(matrix) {\n        if (this.matrixAutoUpdate) this.updateMatrix();\n        this.matrix.premultiply(matrix);\n        this.matrix.decompose(this.position, this.quaternion, this.scale);\n      }\n    }, {\n      key: \"applyQuaternion\",\n      value: function applyQuaternion(q) {\n        this.quaternion.premultiply(q);\n        return this;\n      }\n    }, {\n      key: \"setRotationFromAxisAngle\",\n      value: function setRotationFromAxisAngle(axis, angle) {\n        // assumes axis is normalized\n        this.quaternion.setFromAxisAngle(axis, angle);\n      }\n    }, {\n      key: \"setRotationFromEuler\",\n      value: function setRotationFromEuler(euler) {\n        this.quaternion.setFromEuler(euler, true);\n      }\n    }, {\n      key: \"setRotationFromMatrix\",\n      value: function setRotationFromMatrix(m) {\n        // assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n        this.quaternion.setFromRotationMatrix(m);\n      }\n    }, {\n      key: \"setRotationFromQuaternion\",\n      value: function setRotationFromQuaternion(q) {\n        // assumes q is normalized\n        this.quaternion.copy(q);\n      }\n    }, {\n      key: \"rotateOnAxis\",\n      value: function rotateOnAxis(axis, angle) {\n        // rotate object on axis in object space\n        // axis is assumed to be normalized\n        _q1.setFromAxisAngle(axis, angle);\n\n        this.quaternion.multiply(_q1);\n        return this;\n      }\n    }, {\n      key: \"rotateOnWorldAxis\",\n      value: function rotateOnWorldAxis(axis, angle) {\n        // rotate object on axis in world space\n        // axis is assumed to be normalized\n        // method assumes no rotated parent\n        _q1.setFromAxisAngle(axis, angle);\n\n        this.quaternion.premultiply(_q1);\n        return this;\n      }\n    }, {\n      key: \"rotateX\",\n      value: function rotateX(angle) {\n        return this.rotateOnAxis(_xAxis, angle);\n      }\n    }, {\n      key: \"rotateY\",\n      value: function rotateY(angle) {\n        return this.rotateOnAxis(_yAxis, angle);\n      }\n    }, {\n      key: \"rotateZ\",\n      value: function rotateZ(angle) {\n        return this.rotateOnAxis(_zAxis, angle);\n      }\n    }, {\n      key: \"translateOnAxis\",\n      value: function translateOnAxis(axis, distance) {\n        // translate object by distance along axis in object space\n        // axis is assumed to be normalized\n        _v1$4.copy(axis).applyQuaternion(this.quaternion);\n\n        this.position.add(_v1$4.multiplyScalar(distance));\n        return this;\n      }\n    }, {\n      key: \"translateX\",\n      value: function translateX(distance) {\n        return this.translateOnAxis(_xAxis, distance);\n      }\n    }, {\n      key: \"translateY\",\n      value: function translateY(distance) {\n        return this.translateOnAxis(_yAxis, distance);\n      }\n    }, {\n      key: \"translateZ\",\n      value: function translateZ(distance) {\n        return this.translateOnAxis(_zAxis, distance);\n      }\n    }, {\n      key: \"localToWorld\",\n      value: function localToWorld(vector) {\n        return vector.applyMatrix4(this.matrixWorld);\n      }\n    }, {\n      key: \"worldToLocal\",\n      value: function worldToLocal(vector) {\n        return vector.applyMatrix4(_m1$1.copy(this.matrixWorld).invert());\n      }\n    }, {\n      key: \"lookAt\",\n      value: function lookAt(x, y, z) {\n        // This method does not support objects having non-uniformly-scaled parent(s)\n        if (x.isVector3) {\n          _target.copy(x);\n        } else {\n          _target.set(x, y, z);\n        }\n\n        var parent = this.parent;\n        this.updateWorldMatrix(true, false);\n\n        _position$3.setFromMatrixPosition(this.matrixWorld);\n\n        if (this.isCamera || this.isLight) {\n          _m1$1.lookAt(_position$3, _target, this.up);\n        } else {\n          _m1$1.lookAt(_target, _position$3, this.up);\n        }\n\n        this.quaternion.setFromRotationMatrix(_m1$1);\n\n        if (parent) {\n          _m1$1.extractRotation(parent.matrixWorld);\n\n          _q1.setFromRotationMatrix(_m1$1);\n\n          this.quaternion.premultiply(_q1.invert());\n        }\n      }\n    }, {\n      key: \"add\",\n      value: function add(object) {\n        if (arguments.length > 1) {\n          for (var _i17 = 0; _i17 < arguments.length; _i17++) {\n            this.add(arguments[_i17]);\n          }\n\n          return this;\n        }\n\n        if (object === this) {\n          console.error('THREE.Object3D.add: object can\\'t be added as a child of itself.', object);\n          return this;\n        }\n\n        if (object && object.isObject3D) {\n          if (object.parent !== null) {\n            object.parent.remove(object);\n          }\n\n          object.parent = this;\n          this.children.push(object);\n          object.dispatchEvent(_addedEvent);\n        } else {\n          console.error('THREE.Object3D.add: object not an instance of THREE.Object3D.', object);\n        }\n\n        return this;\n      }\n    }, {\n      key: \"remove\",\n      value: function remove(object) {\n        if (arguments.length > 1) {\n          for (var _i18 = 0; _i18 < arguments.length; _i18++) {\n            this.remove(arguments[_i18]);\n          }\n\n          return this;\n        }\n\n        var index = this.children.indexOf(object);\n\n        if (index !== -1) {\n          object.parent = null;\n          this.children.splice(index, 1);\n          object.dispatchEvent(_removedEvent);\n        }\n\n        return this;\n      }\n    }, {\n      key: \"removeFromParent\",\n      value: function removeFromParent() {\n        var parent = this.parent;\n\n        if (parent !== null) {\n          parent.remove(this);\n        }\n\n        return this;\n      }\n    }, {\n      key: \"clear\",\n      value: function clear() {\n        for (var _i19 = 0; _i19 < this.children.length; _i19++) {\n          var object = this.children[_i19];\n          object.parent = null;\n          object.dispatchEvent(_removedEvent);\n        }\n\n        this.children.length = 0;\n        return this;\n      }\n    }, {\n      key: \"attach\",\n      value: function attach(object) {\n        // adds object as a child of this, while maintaining the object's world transform\n        this.updateWorldMatrix(true, false);\n\n        _m1$1.copy(this.matrixWorld).invert();\n\n        if (object.parent !== null) {\n          object.parent.updateWorldMatrix(true, false);\n\n          _m1$1.multiply(object.parent.matrixWorld);\n        }\n\n        object.applyMatrix4(_m1$1);\n        this.add(object);\n        object.updateWorldMatrix(false, true);\n        return this;\n      }\n    }, {\n      key: \"getObjectById\",\n      value: function getObjectById(id) {\n        return this.getObjectByProperty('id', id);\n      }\n    }, {\n      key: \"getObjectByName\",\n      value: function getObjectByName(name) {\n        return this.getObjectByProperty('name', name);\n      }\n    }, {\n      key: \"getObjectByProperty\",\n      value: function getObjectByProperty(name, value) {\n        if (this[name] === value) return this;\n\n        for (var _i20 = 0, l = this.children.length; _i20 < l; _i20++) {\n          var child = this.children[_i20];\n          var object = child.getObjectByProperty(name, value);\n\n          if (object !== undefined) {\n            return object;\n          }\n        }\n\n        return undefined;\n      }\n    }, {\n      key: \"getWorldPosition\",\n      value: function getWorldPosition(target) {\n        this.updateWorldMatrix(true, false);\n        return target.setFromMatrixPosition(this.matrixWorld);\n      }\n    }, {\n      key: \"getWorldQuaternion\",\n      value: function getWorldQuaternion(target) {\n        this.updateWorldMatrix(true, false);\n        this.matrixWorld.decompose(_position$3, target, _scale$2);\n        return target;\n      }\n    }, {\n      key: \"getWorldScale\",\n      value: function getWorldScale(target) {\n        this.updateWorldMatrix(true, false);\n        this.matrixWorld.decompose(_position$3, _quaternion$2, target);\n        return target;\n      }\n    }, {\n      key: \"getWorldDirection\",\n      value: function getWorldDirection(target) {\n        this.updateWorldMatrix(true, false);\n        var e = this.matrixWorld.elements;\n        return target.set(e[8], e[9], e[10]).normalize();\n      }\n    }, {\n      key: \"raycast\",\n      value: function raycast() {}\n    }, {\n      key: \"traverse\",\n      value: function traverse(callback) {\n        callback(this);\n        var children = this.children;\n\n        for (var _i21 = 0, l = children.length; _i21 < l; _i21++) {\n          children[_i21].traverse(callback);\n        }\n      }\n    }, {\n      key: \"traverseVisible\",\n      value: function traverseVisible(callback) {\n        if (this.visible === false) return;\n        callback(this);\n        var children = this.children;\n\n        for (var _i22 = 0, l = children.length; _i22 < l; _i22++) {\n          children[_i22].traverseVisible(callback);\n        }\n      }\n    }, {\n      key: \"traverseAncestors\",\n      value: function traverseAncestors(callback) {\n        var parent = this.parent;\n\n        if (parent !== null) {\n          callback(parent);\n          parent.traverseAncestors(callback);\n        }\n      }\n    }, {\n      key: \"updateMatrix\",\n      value: function updateMatrix() {\n        this.matrix.compose(this.position, this.quaternion, this.scale);\n        this.matrixWorldNeedsUpdate = true;\n      }\n    }, {\n      key: \"updateMatrixWorld\",\n      value: function updateMatrixWorld(force) {\n        if (this.matrixAutoUpdate) this.updateMatrix();\n\n        if (this.matrixWorldNeedsUpdate || force) {\n          if (this.parent === null) {\n            this.matrixWorld.copy(this.matrix);\n          } else {\n            this.matrixWorld.multiplyMatrices(this.parent.matrixWorld, this.matrix);\n          }\n\n          this.matrixWorldNeedsUpdate = false;\n          force = true;\n        } // update children\n\n\n        var children = this.children;\n\n        for (var _i23 = 0, l = children.length; _i23 < l; _i23++) {\n          children[_i23].updateMatrixWorld(force);\n        }\n      }\n    }, {\n      key: \"updateWorldMatrix\",\n      value: function updateWorldMatrix(updateParents, updateChildren) {\n        var parent = this.parent;\n\n        if (updateParents === true && parent !== null) {\n          parent.updateWorldMatrix(true, false);\n        }\n\n        if (this.matrixAutoUpdate) this.updateMatrix();\n\n        if (this.parent === null) {\n          this.matrixWorld.copy(this.matrix);\n        } else {\n          this.matrixWorld.multiplyMatrices(this.parent.matrixWorld, this.matrix);\n        } // update children\n\n\n        if (updateChildren === true) {\n          var children = this.children;\n\n          for (var _i24 = 0, l = children.length; _i24 < l; _i24++) {\n            children[_i24].updateWorldMatrix(false, true);\n          }\n        }\n      }\n    }, {\n      key: \"toJSON\",\n      value: function toJSON(meta) {\n        // meta is a string when called from JSON.stringify\n        var isRootObject = meta === undefined || typeof meta === 'string';\n        var output = {}; // meta is a hash used to collect geometries, materials.\n        // not providing it implies that this is the root object\n        // being serialized.\n\n        if (isRootObject) {\n          // initialize meta obj\n          meta = {\n            geometries: {},\n            materials: {},\n            textures: {},\n            images: {},\n            shapes: {},\n            skeletons: {},\n            animations: {}\n          };\n          output.metadata = {\n            version: 4.5,\n            type: 'Object',\n            generator: 'Object3D.toJSON'\n          };\n        } // standard Object3D serialization\n\n\n        var object = {};\n        object.uuid = this.uuid;\n        object.type = this.type;\n        if (this.name !== '') object.name = this.name;\n        if (this.castShadow === true) object.castShadow = true;\n        if (this.receiveShadow === true) object.receiveShadow = true;\n        if (this.visible === false) object.visible = false;\n        if (this.frustumCulled === false) object.frustumCulled = false;\n        if (this.renderOrder !== 0) object.renderOrder = this.renderOrder;\n        if (JSON.stringify(this.userData) !== '{}') object.userData = this.userData;\n        object.layers = this.layers.mask;\n        object.matrix = this.matrix.toArray();\n        if (this.matrixAutoUpdate === false) object.matrixAutoUpdate = false; // object specific properties\n\n        if (this.isInstancedMesh) {\n          object.type = 'InstancedMesh';\n          object.count = this.count;\n          object.instanceMatrix = this.instanceMatrix.toJSON();\n          if (this.instanceColor !== null) object.instanceColor = this.instanceColor.toJSON();\n        } //\n\n\n        function serialize(library, element) {\n          if (library[element.uuid] === undefined) {\n            library[element.uuid] = element.toJSON(meta);\n          }\n\n          return element.uuid;\n        }\n\n        if (this.isScene) {\n          if (this.background) {\n            if (this.background.isColor) {\n              object.background = this.background.toJSON();\n            } else if (this.background.isTexture) {\n              object.background = this.background.toJSON(meta).uuid;\n            }\n          }\n\n          if (this.environment && this.environment.isTexture) {\n            object.environment = this.environment.toJSON(meta).uuid;\n          }\n        } else if (this.isMesh || this.isLine || this.isPoints) {\n          object.geometry = serialize(meta.geometries, this.geometry);\n          var parameters = this.geometry.parameters;\n\n          if (parameters !== undefined && parameters.shapes !== undefined) {\n            var shapes = parameters.shapes;\n\n            if (Array.isArray(shapes)) {\n              for (var _i25 = 0, l = shapes.length; _i25 < l; _i25++) {\n                var shape = shapes[_i25];\n                serialize(meta.shapes, shape);\n              }\n            } else {\n              serialize(meta.shapes, shapes);\n            }\n          }\n        }\n\n        if (this.isSkinnedMesh) {\n          object.bindMode = this.bindMode;\n          object.bindMatrix = this.bindMatrix.toArray();\n\n          if (this.skeleton !== undefined) {\n            serialize(meta.skeletons, this.skeleton);\n            object.skeleton = this.skeleton.uuid;\n          }\n        }\n\n        if (this.material !== undefined) {\n          if (Array.isArray(this.material)) {\n            var uuids = [];\n\n            for (var _i26 = 0, _l = this.material.length; _i26 < _l; _i26++) {\n              uuids.push(serialize(meta.materials, this.material[_i26]));\n            }\n\n            object.material = uuids;\n          } else {\n            object.material = serialize(meta.materials, this.material);\n          }\n        } //\n\n\n        if (this.children.length > 0) {\n          object.children = [];\n\n          for (var _i27 = 0; _i27 < this.children.length; _i27++) {\n            object.children.push(this.children[_i27].toJSON(meta).object);\n          }\n        } //\n\n\n        if (this.animations.length > 0) {\n          object.animations = [];\n\n          for (var _i28 = 0; _i28 < this.animations.length; _i28++) {\n            var animation = this.animations[_i28];\n            object.animations.push(serialize(meta.animations, animation));\n          }\n        }\n\n        if (isRootObject) {\n          var geometries = extractFromCache(meta.geometries);\n          var materials = extractFromCache(meta.materials);\n          var textures = extractFromCache(meta.textures);\n          var images = extractFromCache(meta.images);\n\n          var _shapes = extractFromCache(meta.shapes);\n\n          var skeletons = extractFromCache(meta.skeletons);\n          var animations = extractFromCache(meta.animations);\n          if (geometries.length > 0) output.geometries = geometries;\n          if (materials.length > 0) output.materials = materials;\n          if (textures.length > 0) output.textures = textures;\n          if (images.length > 0) output.images = images;\n          if (_shapes.length > 0) output.shapes = _shapes;\n          if (skeletons.length > 0) output.skeletons = skeletons;\n          if (animations.length > 0) output.animations = animations;\n        }\n\n        output.object = object;\n        return output; // extract data from the cache hash\n        // remove metadata on each item\n        // and return as array\n\n        function extractFromCache(cache) {\n          var values = [];\n\n          for (var key in cache) {\n            var data = cache[key];\n            delete data.metadata;\n            values.push(data);\n          }\n\n          return values;\n        }\n      }\n    }, {\n      key: \"clone\",\n      value: function clone(recursive) {\n        return new this.constructor().copy(this, recursive);\n      }\n    }, {\n      key: \"copy\",\n      value: function copy(source) {\n        var recursive = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n        this.name = source.name;\n        this.up.copy(source.up);\n        this.position.copy(source.position);\n        this.rotation.order = source.rotation.order;\n        this.quaternion.copy(source.quaternion);\n        this.scale.copy(source.scale);\n        this.matrix.copy(source.matrix);\n        this.matrixWorld.copy(source.matrixWorld);\n        this.matrixAutoUpdate = source.matrixAutoUpdate;\n        this.matrixWorldNeedsUpdate = source.matrixWorldNeedsUpdate;\n        this.layers.mask = source.layers.mask;\n        this.visible = source.visible;\n        this.castShadow = source.castShadow;\n        this.receiveShadow = source.receiveShadow;\n        this.frustumCulled = source.frustumCulled;\n        this.renderOrder = source.renderOrder;\n        this.userData = JSON.parse(JSON.stringify(source.userData));\n\n        if (recursive === true) {\n          for (var _i29 = 0; _i29 < source.children.length; _i29++) {\n            var child = source.children[_i29];\n            this.add(child.clone());\n          }\n        }\n\n        return this;\n      }\n    }]);\n\n    return Object3D;\n  }(EventDispatcher);\n\n  Object3D.DefaultUp = new Vector3(0, 1, 0);\n  Object3D.DefaultMatrixAutoUpdate = true;\n  Object3D.prototype.isObject3D = true;\n\n  var _v0$1 = /*@__PURE__*/new Vector3();\n\n  var _v1$3 = /*@__PURE__*/new Vector3();\n\n  var _v2$2 = /*@__PURE__*/new Vector3();\n\n  var _v3$1 = /*@__PURE__*/new Vector3();\n\n  var _vab = /*@__PURE__*/new Vector3();\n\n  var _vac = /*@__PURE__*/new Vector3();\n\n  var _vbc = /*@__PURE__*/new Vector3();\n\n  var _vap = /*@__PURE__*/new Vector3();\n\n  var _vbp = /*@__PURE__*/new Vector3();\n\n  var _vcp = /*@__PURE__*/new Vector3();\n\n  var Triangle = /*#__PURE__*/function () {\n    function Triangle() {\n      var a = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : new Vector3();\n      var b = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : new Vector3();\n      var c = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : new Vector3();\n\n      _classCallCheck(this, Triangle);\n\n      this.a = a;\n      this.b = b;\n      this.c = c;\n    }\n\n    _createClass(Triangle, [{\n      key: \"set\",\n      value: function set(a, b, c) {\n        this.a.copy(a);\n        this.b.copy(b);\n        this.c.copy(c);\n        return this;\n      }\n    }, {\n      key: \"setFromPointsAndIndices\",\n      value: function setFromPointsAndIndices(points, i0, i1, i2) {\n        this.a.copy(points[i0]);\n        this.b.copy(points[i1]);\n        this.c.copy(points[i2]);\n        return this;\n      }\n    }, {\n      key: \"setFromAttributeAndIndices\",\n      value: function setFromAttributeAndIndices(attribute, i0, i1, i2) {\n        this.a.fromBufferAttribute(attribute, i0);\n        this.b.fromBufferAttribute(attribute, i1);\n        this.c.fromBufferAttribute(attribute, i2);\n        return this;\n      }\n    }, {\n      key: \"clone\",\n      value: function clone() {\n        return new this.constructor().copy(this);\n      }\n    }, {\n      key: \"copy\",\n      value: function copy(triangle) {\n        this.a.copy(triangle.a);\n        this.b.copy(triangle.b);\n        this.c.copy(triangle.c);\n        return this;\n      }\n    }, {\n      key: \"getArea\",\n      value: function getArea() {\n        _v0$1.subVectors(this.c, this.b);\n\n        _v1$3.subVectors(this.a, this.b);\n\n        return _v0$1.cross(_v1$3).length() * 0.5;\n      }\n    }, {\n      key: \"getMidpoint\",\n      value: function getMidpoint(target) {\n        return target.addVectors(this.a, this.b).add(this.c).multiplyScalar(1 / 3);\n      }\n    }, {\n      key: \"getNormal\",\n      value: function getNormal(target) {\n        return Triangle.getNormal(this.a, this.b, this.c, target);\n      }\n    }, {\n      key: \"getPlane\",\n      value: function getPlane(target) {\n        return target.setFromCoplanarPoints(this.a, this.b, this.c);\n      }\n    }, {\n      key: \"getBarycoord\",\n      value: function getBarycoord(point, target) {\n        return Triangle.getBarycoord(point, this.a, this.b, this.c, target);\n      }\n    }, {\n      key: \"getUV\",\n      value: function getUV(point, uv1, uv2, uv3, target) {\n        return Triangle.getUV(point, this.a, this.b, this.c, uv1, uv2, uv3, target);\n      }\n    }, {\n      key: \"containsPoint\",\n      value: function containsPoint(point) {\n        return Triangle.containsPoint(point, this.a, this.b, this.c);\n      }\n    }, {\n      key: \"isFrontFacing\",\n      value: function isFrontFacing(direction) {\n        return Triangle.isFrontFacing(this.a, this.b, this.c, direction);\n      }\n    }, {\n      key: \"intersectsBox\",\n      value: function intersectsBox(box) {\n        return box.intersectsTriangle(this);\n      }\n    }, {\n      key: \"closestPointToPoint\",\n      value: function closestPointToPoint(p, target) {\n        var a = this.a,\n            b = this.b,\n            c = this.c;\n        var v, w; // algorithm thanks to Real-Time Collision Detection by Christer Ericson,\n        // published by Morgan Kaufmann Publishers, (c) 2005 Elsevier Inc.,\n        // under the accompanying license; see chapter 5.1.5 for detailed explanation.\n        // basically, we're distinguishing which of the voronoi regions of the triangle\n        // the point lies in with the minimum amount of redundant computation.\n\n        _vab.subVectors(b, a);\n\n        _vac.subVectors(c, a);\n\n        _vap.subVectors(p, a);\n\n        var d1 = _vab.dot(_vap);\n\n        var d2 = _vac.dot(_vap);\n\n        if (d1 <= 0 && d2 <= 0) {\n          // vertex region of A; barycentric coords (1, 0, 0)\n          return target.copy(a);\n        }\n\n        _vbp.subVectors(p, b);\n\n        var d3 = _vab.dot(_vbp);\n\n        var d4 = _vac.dot(_vbp);\n\n        if (d3 >= 0 && d4 <= d3) {\n          // vertex region of B; barycentric coords (0, 1, 0)\n          return target.copy(b);\n        }\n\n        var vc = d1 * d4 - d3 * d2;\n\n        if (vc <= 0 && d1 >= 0 && d3 <= 0) {\n          v = d1 / (d1 - d3); // edge region of AB; barycentric coords (1-v, v, 0)\n\n          return target.copy(a).addScaledVector(_vab, v);\n        }\n\n        _vcp.subVectors(p, c);\n\n        var d5 = _vab.dot(_vcp);\n\n        var d6 = _vac.dot(_vcp);\n\n        if (d6 >= 0 && d5 <= d6) {\n          // vertex region of C; barycentric coords (0, 0, 1)\n          return target.copy(c);\n        }\n\n        var vb = d5 * d2 - d1 * d6;\n\n        if (vb <= 0 && d2 >= 0 && d6 <= 0) {\n          w = d2 / (d2 - d6); // edge region of AC; barycentric coords (1-w, 0, w)\n\n          return target.copy(a).addScaledVector(_vac, w);\n        }\n\n        var va = d3 * d6 - d5 * d4;\n\n        if (va <= 0 && d4 - d3 >= 0 && d5 - d6 >= 0) {\n          _vbc.subVectors(c, b);\n\n          w = (d4 - d3) / (d4 - d3 + (d5 - d6)); // edge region of BC; barycentric coords (0, 1-w, w)\n\n          return target.copy(b).addScaledVector(_vbc, w); // edge region of BC\n        } // face region\n\n\n        var denom = 1 / (va + vb + vc); // u = va * denom\n\n        v = vb * denom;\n        w = vc * denom;\n        return target.copy(a).addScaledVector(_vab, v).addScaledVector(_vac, w);\n      }\n    }, {\n      key: \"equals\",\n      value: function equals(triangle) {\n        return triangle.a.equals(this.a) && triangle.b.equals(this.b) && triangle.c.equals(this.c);\n      }\n    }], [{\n      key: \"getNormal\",\n      value: function getNormal(a, b, c, target) {\n        target.subVectors(c, b);\n\n        _v0$1.subVectors(a, b);\n\n        target.cross(_v0$1);\n        var targetLengthSq = target.lengthSq();\n\n        if (targetLengthSq > 0) {\n          return target.multiplyScalar(1 / Math.sqrt(targetLengthSq));\n        }\n\n        return target.set(0, 0, 0);\n      } // static/instance method to calculate barycentric coordinates\n      // based on: http://www.blackpawn.com/texts/pointinpoly/default.html\n\n    }, {\n      key: \"getBarycoord\",\n      value: function getBarycoord(point, a, b, c, target) {\n        _v0$1.subVectors(c, a);\n\n        _v1$3.subVectors(b, a);\n\n        _v2$2.subVectors(point, a);\n\n        var dot00 = _v0$1.dot(_v0$1);\n\n        var dot01 = _v0$1.dot(_v1$3);\n\n        var dot02 = _v0$1.dot(_v2$2);\n\n        var dot11 = _v1$3.dot(_v1$3);\n\n        var dot12 = _v1$3.dot(_v2$2);\n\n        var denom = dot00 * dot11 - dot01 * dot01; // collinear or singular triangle\n\n        if (denom === 0) {\n          // arbitrary location outside of triangle?\n          // not sure if this is the best idea, maybe should be returning undefined\n          return target.set(-2, -1, -1);\n        }\n\n        var invDenom = 1 / denom;\n        var u = (dot11 * dot02 - dot01 * dot12) * invDenom;\n        var v = (dot00 * dot12 - dot01 * dot02) * invDenom; // barycentric coordinates must always sum to 1\n\n        return target.set(1 - u - v, v, u);\n      }\n    }, {\n      key: \"containsPoint\",\n      value: function containsPoint(point, a, b, c) {\n        this.getBarycoord(point, a, b, c, _v3$1);\n        return _v3$1.x >= 0 && _v3$1.y >= 0 && _v3$1.x + _v3$1.y <= 1;\n      }\n    }, {\n      key: \"getUV\",\n      value: function getUV(point, p1, p2, p3, uv1, uv2, uv3, target) {\n        this.getBarycoord(point, p1, p2, p3, _v3$1);\n        target.set(0, 0);\n        target.addScaledVector(uv1, _v3$1.x);\n        target.addScaledVector(uv2, _v3$1.y);\n        target.addScaledVector(uv3, _v3$1.z);\n        return target;\n      }\n    }, {\n      key: \"isFrontFacing\",\n      value: function isFrontFacing(a, b, c, direction) {\n        _v0$1.subVectors(c, b);\n\n        _v1$3.subVectors(a, b); // strictly front facing\n\n\n        return _v0$1.cross(_v1$3).dot(direction) < 0 ? true : false;\n      }\n    }]);\n\n    return Triangle;\n  }();\n\n  var materialId = 0;\n\n  var Material = /*#__PURE__*/function (_EventDispatcher4) {\n    _inherits(Material, _EventDispatcher4);\n\n    var _super6 = _createSuper(Material);\n\n    function Material() {\n      var _this7;\n\n      _classCallCheck(this, Material);\n\n      _this7 = _super6.call(this);\n      Object.defineProperty(_assertThisInitialized(_this7), 'id', {\n        value: materialId++\n      });\n      _this7.uuid = generateUUID();\n      _this7.name = '';\n      _this7.type = 'Material';\n      _this7.fog = true;\n      _this7.blending = NormalBlending;\n      _this7.side = FrontSide;\n      _this7.vertexColors = false;\n      _this7.opacity = 1;\n      _this7.format = RGBAFormat;\n      _this7.transparent = false;\n      _this7.blendSrc = SrcAlphaFactor;\n      _this7.blendDst = OneMinusSrcAlphaFactor;\n      _this7.blendEquation = AddEquation;\n      _this7.blendSrcAlpha = null;\n      _this7.blendDstAlpha = null;\n      _this7.blendEquationAlpha = null;\n      _this7.depthFunc = LessEqualDepth;\n      _this7.depthTest = true;\n      _this7.depthWrite = true;\n      _this7.stencilWriteMask = 0xff;\n      _this7.stencilFunc = AlwaysStencilFunc;\n      _this7.stencilRef = 0;\n      _this7.stencilFuncMask = 0xff;\n      _this7.stencilFail = KeepStencilOp;\n      _this7.stencilZFail = KeepStencilOp;\n      _this7.stencilZPass = KeepStencilOp;\n      _this7.stencilWrite = false;\n      _this7.clippingPlanes = null;\n      _this7.clipIntersection = false;\n      _this7.clipShadows = false;\n      _this7.shadowSide = null;\n      _this7.colorWrite = true;\n      _this7.precision = null; // override the renderer's default precision for this material\n\n      _this7.polygonOffset = false;\n      _this7.polygonOffsetFactor = 0;\n      _this7.polygonOffsetUnits = 0;\n      _this7.dithering = false;\n      _this7.alphaToCoverage = false;\n      _this7.premultipliedAlpha = false;\n      _this7.visible = true;\n      _this7.toneMapped = true;\n      _this7.userData = {};\n      _this7.version = 0;\n      _this7._alphaTest = 0;\n      return _this7;\n    }\n\n    _createClass(Material, [{\n      key: \"alphaTest\",\n      get: function get() {\n        return this._alphaTest;\n      },\n      set: function set(value) {\n        if (this._alphaTest > 0 !== value > 0) {\n          this.version++;\n        }\n\n        this._alphaTest = value;\n      }\n    }, {\n      key: \"onBuild\",\n      value: function onBuild() {}\n    }, {\n      key: \"onBeforeRender\",\n      value: function onBeforeRender() {}\n    }, {\n      key: \"onBeforeCompile\",\n      value: function onBeforeCompile() {}\n    }, {\n      key: \"customProgramCacheKey\",\n      value: function customProgramCacheKey() {\n        return this.onBeforeCompile.toString();\n      }\n    }, {\n      key: \"setValues\",\n      value: function setValues(values) {\n        if (values === undefined) return;\n\n        for (var key in values) {\n          var newValue = values[key];\n\n          if (newValue === undefined) {\n            console.warn('THREE.Material: \\'' + key + '\\' parameter is undefined.');\n            continue;\n          } // for backward compatability if shading is set in the constructor\n\n\n          if (key === 'shading') {\n            console.warn('THREE.' + this.type + ': .shading has been removed. Use the boolean .flatShading instead.');\n            this.flatShading = newValue === FlatShading ? true : false;\n            continue;\n          }\n\n          var currentValue = this[key];\n\n          if (currentValue === undefined) {\n            console.warn('THREE.' + this.type + ': \\'' + key + '\\' is not a property of this material.');\n            continue;\n          }\n\n          if (currentValue && currentValue.isColor) {\n            currentValue.set(newValue);\n          } else if (currentValue && currentValue.isVector3 && newValue && newValue.isVector3) {\n            currentValue.copy(newValue);\n          } else {\n            this[key] = newValue;\n          }\n        }\n      }\n    }, {\n      key: \"toJSON\",\n      value: function toJSON(meta) {\n        var isRoot = meta === undefined || typeof meta === 'string';\n\n        if (isRoot) {\n          meta = {\n            textures: {},\n            images: {}\n          };\n        }\n\n        var data = {\n          metadata: {\n            version: 4.5,\n            type: 'Material',\n            generator: 'Material.toJSON'\n          }\n        }; // standard Material serialization\n\n        data.uuid = this.uuid;\n        data.type = this.type;\n        if (this.name !== '') data.name = this.name;\n        if (this.color && this.color.isColor) data.color = this.color.getHex();\n        if (this.roughness !== undefined) data.roughness = this.roughness;\n        if (this.metalness !== undefined) data.metalness = this.metalness;\n        if (this.sheen !== undefined) data.sheen = this.sheen;\n        if (this.sheenColor && this.sheenColor.isColor) data.sheenColor = this.sheenColor.getHex();\n        if (this.sheenRoughness !== undefined) data.sheenRoughness = this.sheenRoughness;\n        if (this.emissive && this.emissive.isColor) data.emissive = this.emissive.getHex();\n        if (this.emissiveIntensity && this.emissiveIntensity !== 1) data.emissiveIntensity = this.emissiveIntensity;\n        if (this.specular && this.specular.isColor) data.specular = this.specular.getHex();\n        if (this.specularIntensity !== undefined) data.specularIntensity = this.specularIntensity;\n        if (this.specularColor && this.specularColor.isColor) data.specularColor = this.specularColor.getHex();\n        if (this.shininess !== undefined) data.shininess = this.shininess;\n        if (this.clearcoat !== undefined) data.clearcoat = this.clearcoat;\n        if (this.clearcoatRoughness !== undefined) data.clearcoatRoughness = this.clearcoatRoughness;\n\n        if (this.clearcoatMap && this.clearcoatMap.isTexture) {\n          data.clearcoatMap = this.clearcoatMap.toJSON(meta).uuid;\n        }\n\n        if (this.clearcoatRoughnessMap && this.clearcoatRoughnessMap.isTexture) {\n          data.clearcoatRoughnessMap = this.clearcoatRoughnessMap.toJSON(meta).uuid;\n        }\n\n        if (this.clearcoatNormalMap && this.clearcoatNormalMap.isTexture) {\n          data.clearcoatNormalMap = this.clearcoatNormalMap.toJSON(meta).uuid;\n          data.clearcoatNormalScale = this.clearcoatNormalScale.toArray();\n        }\n\n        if (this.map && this.map.isTexture) data.map = this.map.toJSON(meta).uuid;\n        if (this.matcap && this.matcap.isTexture) data.matcap = this.matcap.toJSON(meta).uuid;\n        if (this.alphaMap && this.alphaMap.isTexture) data.alphaMap = this.alphaMap.toJSON(meta).uuid;\n\n        if (this.lightMap && this.lightMap.isTexture) {\n          data.lightMap = this.lightMap.toJSON(meta).uuid;\n          data.lightMapIntensity = this.lightMapIntensity;\n        }\n\n        if (this.aoMap && this.aoMap.isTexture) {\n          data.aoMap = this.aoMap.toJSON(meta).uuid;\n          data.aoMapIntensity = this.aoMapIntensity;\n        }\n\n        if (this.bumpMap && this.bumpMap.isTexture) {\n          data.bumpMap = this.bumpMap.toJSON(meta).uuid;\n          data.bumpScale = this.bumpScale;\n        }\n\n        if (this.normalMap && this.normalMap.isTexture) {\n          data.normalMap = this.normalMap.toJSON(meta).uuid;\n          data.normalMapType = this.normalMapType;\n          data.normalScale = this.normalScale.toArray();\n        }\n\n        if (this.displacementMap && this.displacementMap.isTexture) {\n          data.displacementMap = this.displacementMap.toJSON(meta).uuid;\n          data.displacementScale = this.displacementScale;\n          data.displacementBias = this.displacementBias;\n        }\n\n        if (this.roughnessMap && this.roughnessMap.isTexture) data.roughnessMap = this.roughnessMap.toJSON(meta).uuid;\n        if (this.metalnessMap && this.metalnessMap.isTexture) data.metalnessMap = this.metalnessMap.toJSON(meta).uuid;\n        if (this.emissiveMap && this.emissiveMap.isTexture) data.emissiveMap = this.emissiveMap.toJSON(meta).uuid;\n        if (this.specularMap && this.specularMap.isTexture) data.specularMap = this.specularMap.toJSON(meta).uuid;\n        if (this.specularIntensityMap && this.specularIntensityMap.isTexture) data.specularIntensityMap = this.specularIntensityMap.toJSON(meta).uuid;\n        if (this.specularColorMap && this.specularColorMap.isTexture) data.specularColorMap = this.specularColorMap.toJSON(meta).uuid;\n\n        if (this.envMap && this.envMap.isTexture) {\n          data.envMap = this.envMap.toJSON(meta).uuid;\n          if (this.combine !== undefined) data.combine = this.combine;\n        }\n\n        if (this.envMapIntensity !== undefined) data.envMapIntensity = this.envMapIntensity;\n        if (this.reflectivity !== undefined) data.reflectivity = this.reflectivity;\n        if (this.refractionRatio !== undefined) data.refractionRatio = this.refractionRatio;\n\n        if (this.gradientMap && this.gradientMap.isTexture) {\n          data.gradientMap = this.gradientMap.toJSON(meta).uuid;\n        }\n\n        if (this.transmission !== undefined) data.transmission = this.transmission;\n        if (this.transmissionMap && this.transmissionMap.isTexture) data.transmissionMap = this.transmissionMap.toJSON(meta).uuid;\n        if (this.thickness !== undefined) data.thickness = this.thickness;\n        if (this.thicknessMap && this.thicknessMap.isTexture) data.thicknessMap = this.thicknessMap.toJSON(meta).uuid;\n        if (this.attenuationDistance !== undefined) data.attenuationDistance = this.attenuationDistance;\n        if (this.attenuationColor !== undefined) data.attenuationColor = this.attenuationColor.getHex();\n        if (this.size !== undefined) data.size = this.size;\n        if (this.shadowSide !== null) data.shadowSide = this.shadowSide;\n        if (this.sizeAttenuation !== undefined) data.sizeAttenuation = this.sizeAttenuation;\n        if (this.blending !== NormalBlending) data.blending = this.blending;\n        if (this.side !== FrontSide) data.side = this.side;\n        if (this.vertexColors) data.vertexColors = true;\n        if (this.opacity < 1) data.opacity = this.opacity;\n        if (this.format !== RGBAFormat) data.format = this.format;\n        if (this.transparent === true) data.transparent = this.transparent;\n        data.depthFunc = this.depthFunc;\n        data.depthTest = this.depthTest;\n        data.depthWrite = this.depthWrite;\n        data.colorWrite = this.colorWrite;\n        data.stencilWrite = this.stencilWrite;\n        data.stencilWriteMask = this.stencilWriteMask;\n        data.stencilFunc = this.stencilFunc;\n        data.stencilRef = this.stencilRef;\n        data.stencilFuncMask = this.stencilFuncMask;\n        data.stencilFail = this.stencilFail;\n        data.stencilZFail = this.stencilZFail;\n        data.stencilZPass = this.stencilZPass; // rotation (SpriteMaterial)\n\n        if (this.rotation && this.rotation !== 0) data.rotation = this.rotation;\n        if (this.polygonOffset === true) data.polygonOffset = true;\n        if (this.polygonOffsetFactor !== 0) data.polygonOffsetFactor = this.polygonOffsetFactor;\n        if (this.polygonOffsetUnits !== 0) data.polygonOffsetUnits = this.polygonOffsetUnits;\n        if (this.linewidth && this.linewidth !== 1) data.linewidth = this.linewidth;\n        if (this.dashSize !== undefined) data.dashSize = this.dashSize;\n        if (this.gapSize !== undefined) data.gapSize = this.gapSize;\n        if (this.scale !== undefined) data.scale = this.scale;\n        if (this.dithering === true) data.dithering = true;\n        if (this.alphaTest > 0) data.alphaTest = this.alphaTest;\n        if (this.alphaToCoverage === true) data.alphaToCoverage = this.alphaToCoverage;\n        if (this.premultipliedAlpha === true) data.premultipliedAlpha = this.premultipliedAlpha;\n        if (this.wireframe === true) data.wireframe = this.wireframe;\n        if (this.wireframeLinewidth > 1) data.wireframeLinewidth = this.wireframeLinewidth;\n        if (this.wireframeLinecap !== 'round') data.wireframeLinecap = this.wireframeLinecap;\n        if (this.wireframeLinejoin !== 'round') data.wireframeLinejoin = this.wireframeLinejoin;\n        if (this.flatShading === true) data.flatShading = this.flatShading;\n        if (this.visible === false) data.visible = false;\n        if (this.toneMapped === false) data.toneMapped = false;\n        if (JSON.stringify(this.userData) !== '{}') data.userData = this.userData; // TODO: Copied from Object3D.toJSON\n\n        function extractFromCache(cache) {\n          var values = [];\n\n          for (var key in cache) {\n            var _data = cache[key];\n            delete _data.metadata;\n            values.push(_data);\n          }\n\n          return values;\n        }\n\n        if (isRoot) {\n          var textures = extractFromCache(meta.textures);\n          var images = extractFromCache(meta.images);\n          if (textures.length > 0) data.textures = textures;\n          if (images.length > 0) data.images = images;\n        }\n\n        return data;\n      }\n    }, {\n      key: \"clone\",\n      value: function clone() {\n        return new this.constructor().copy(this);\n      }\n    }, {\n      key: \"copy\",\n      value: function copy(source) {\n        this.name = source.name;\n        this.fog = source.fog;\n        this.blending = source.blending;\n        this.side = source.side;\n        this.vertexColors = source.vertexColors;\n        this.opacity = source.opacity;\n        this.format = source.format;\n        this.transparent = source.transparent;\n        this.blendSrc = source.blendSrc;\n        this.blendDst = source.blendDst;\n        this.blendEquation = source.blendEquation;\n        this.blendSrcAlpha = source.blendSrcAlpha;\n        this.blendDstAlpha = source.blendDstAlpha;\n        this.blendEquationAlpha = source.blendEquationAlpha;\n        this.depthFunc = source.depthFunc;\n        this.depthTest = source.depthTest;\n        this.depthWrite = source.depthWrite;\n        this.stencilWriteMask = source.stencilWriteMask;\n        this.stencilFunc = source.stencilFunc;\n        this.stencilRef = source.stencilRef;\n        this.stencilFuncMask = source.stencilFuncMask;\n        this.stencilFail = source.stencilFail;\n        this.stencilZFail = source.stencilZFail;\n        this.stencilZPass = source.stencilZPass;\n        this.stencilWrite = source.stencilWrite;\n        var srcPlanes = source.clippingPlanes;\n        var dstPlanes = null;\n\n        if (srcPlanes !== null) {\n          var n = srcPlanes.length;\n          dstPlanes = new Array(n);\n\n          for (var _i30 = 0; _i30 !== n; ++_i30) {\n            dstPlanes[_i30] = srcPlanes[_i30].clone();\n          }\n        }\n\n        this.clippingPlanes = dstPlanes;\n        this.clipIntersection = source.clipIntersection;\n        this.clipShadows = source.clipShadows;\n        this.shadowSide = source.shadowSide;\n        this.colorWrite = source.colorWrite;\n        this.precision = source.precision;\n        this.polygonOffset = source.polygonOffset;\n        this.polygonOffsetFactor = source.polygonOffsetFactor;\n        this.polygonOffsetUnits = source.polygonOffsetUnits;\n        this.dithering = source.dithering;\n        this.alphaTest = source.alphaTest;\n        this.alphaToCoverage = source.alphaToCoverage;\n        this.premultipliedAlpha = source.premultipliedAlpha;\n        this.visible = source.visible;\n        this.toneMapped = source.toneMapped;\n        this.userData = JSON.parse(JSON.stringify(source.userData));\n        return this;\n      }\n    }, {\n      key: \"dispose\",\n      value: function dispose() {\n        this.dispatchEvent({\n          type: 'dispose'\n        });\n      }\n    }, {\n      key: \"needsUpdate\",\n      set: function set(value) {\n        if (value === true) this.version++;\n      }\n    }]);\n\n    return Material;\n  }(EventDispatcher);\n\n  Material.prototype.isMaterial = true;\n  var _colorKeywords = {\n    'aliceblue': 0xF0F8FF,\n    'antiquewhite': 0xFAEBD7,\n    'aqua': 0x00FFFF,\n    'aquamarine': 0x7FFFD4,\n    'azure': 0xF0FFFF,\n    'beige': 0xF5F5DC,\n    'bisque': 0xFFE4C4,\n    'black': 0x000000,\n    'blanchedalmond': 0xFFEBCD,\n    'blue': 0x0000FF,\n    'blueviolet': 0x8A2BE2,\n    'brown': 0xA52A2A,\n    'burlywood': 0xDEB887,\n    'cadetblue': 0x5F9EA0,\n    'chartreuse': 0x7FFF00,\n    'chocolate': 0xD2691E,\n    'coral': 0xFF7F50,\n    'cornflowerblue': 0x6495ED,\n    'cornsilk': 0xFFF8DC,\n    'crimson': 0xDC143C,\n    'cyan': 0x00FFFF,\n    'darkblue': 0x00008B,\n    'darkcyan': 0x008B8B,\n    'darkgoldenrod': 0xB8860B,\n    'darkgray': 0xA9A9A9,\n    'darkgreen': 0x006400,\n    'darkgrey': 0xA9A9A9,\n    'darkkhaki': 0xBDB76B,\n    'darkmagenta': 0x8B008B,\n    'darkolivegreen': 0x556B2F,\n    'darkorange': 0xFF8C00,\n    'darkorchid': 0x9932CC,\n    'darkred': 0x8B0000,\n    'darksalmon': 0xE9967A,\n    'darkseagreen': 0x8FBC8F,\n    'darkslateblue': 0x483D8B,\n    'darkslategray': 0x2F4F4F,\n    'darkslategrey': 0x2F4F4F,\n    'darkturquoise': 0x00CED1,\n    'darkviolet': 0x9400D3,\n    'deeppink': 0xFF1493,\n    'deepskyblue': 0x00BFFF,\n    'dimgray': 0x696969,\n    'dimgrey': 0x696969,\n    'dodgerblue': 0x1E90FF,\n    'firebrick': 0xB22222,\n    'floralwhite': 0xFFFAF0,\n    'forestgreen': 0x228B22,\n    'fuchsia': 0xFF00FF,\n    'gainsboro': 0xDCDCDC,\n    'ghostwhite': 0xF8F8FF,\n    'gold': 0xFFD700,\n    'goldenrod': 0xDAA520,\n    'gray': 0x808080,\n    'green': 0x008000,\n    'greenyellow': 0xADFF2F,\n    'grey': 0x808080,\n    'honeydew': 0xF0FFF0,\n    'hotpink': 0xFF69B4,\n    'indianred': 0xCD5C5C,\n    'indigo': 0x4B0082,\n    'ivory': 0xFFFFF0,\n    'khaki': 0xF0E68C,\n    'lavender': 0xE6E6FA,\n    'lavenderblush': 0xFFF0F5,\n    'lawngreen': 0x7CFC00,\n    'lemonchiffon': 0xFFFACD,\n    'lightblue': 0xADD8E6,\n    'lightcoral': 0xF08080,\n    'lightcyan': 0xE0FFFF,\n    'lightgoldenrodyellow': 0xFAFAD2,\n    'lightgray': 0xD3D3D3,\n    'lightgreen': 0x90EE90,\n    'lightgrey': 0xD3D3D3,\n    'lightpink': 0xFFB6C1,\n    'lightsalmon': 0xFFA07A,\n    'lightseagreen': 0x20B2AA,\n    'lightskyblue': 0x87CEFA,\n    'lightslategray': 0x778899,\n    'lightslategrey': 0x778899,\n    'lightsteelblue': 0xB0C4DE,\n    'lightyellow': 0xFFFFE0,\n    'lime': 0x00FF00,\n    'limegreen': 0x32CD32,\n    'linen': 0xFAF0E6,\n    'magenta': 0xFF00FF,\n    'maroon': 0x800000,\n    'mediumaquamarine': 0x66CDAA,\n    'mediumblue': 0x0000CD,\n    'mediumorchid': 0xBA55D3,\n    'mediumpurple': 0x9370DB,\n    'mediumseagreen': 0x3CB371,\n    'mediumslateblue': 0x7B68EE,\n    'mediumspringgreen': 0x00FA9A,\n    'mediumturquoise': 0x48D1CC,\n    'mediumvioletred': 0xC71585,\n    'midnightblue': 0x191970,\n    'mintcream': 0xF5FFFA,\n    'mistyrose': 0xFFE4E1,\n    'moccasin': 0xFFE4B5,\n    'navajowhite': 0xFFDEAD,\n    'navy': 0x000080,\n    'oldlace': 0xFDF5E6,\n    'olive': 0x808000,\n    'olivedrab': 0x6B8E23,\n    'orange': 0xFFA500,\n    'orangered': 0xFF4500,\n    'orchid': 0xDA70D6,\n    'palegoldenrod': 0xEEE8AA,\n    'palegreen': 0x98FB98,\n    'paleturquoise': 0xAFEEEE,\n    'palevioletred': 0xDB7093,\n    'papayawhip': 0xFFEFD5,\n    'peachpuff': 0xFFDAB9,\n    'peru': 0xCD853F,\n    'pink': 0xFFC0CB,\n    'plum': 0xDDA0DD,\n    'powderblue': 0xB0E0E6,\n    'purple': 0x800080,\n    'rebeccapurple': 0x663399,\n    'red': 0xFF0000,\n    'rosybrown': 0xBC8F8F,\n    'royalblue': 0x4169E1,\n    'saddlebrown': 0x8B4513,\n    'salmon': 0xFA8072,\n    'sandybrown': 0xF4A460,\n    'seagreen': 0x2E8B57,\n    'seashell': 0xFFF5EE,\n    'sienna': 0xA0522D,\n    'silver': 0xC0C0C0,\n    'skyblue': 0x87CEEB,\n    'slateblue': 0x6A5ACD,\n    'slategray': 0x708090,\n    'slategrey': 0x708090,\n    'snow': 0xFFFAFA,\n    'springgreen': 0x00FF7F,\n    'steelblue': 0x4682B4,\n    'tan': 0xD2B48C,\n    'teal': 0x008080,\n    'thistle': 0xD8BFD8,\n    'tomato': 0xFF6347,\n    'turquoise': 0x40E0D0,\n    'violet': 0xEE82EE,\n    'wheat': 0xF5DEB3,\n    'white': 0xFFFFFF,\n    'whitesmoke': 0xF5F5F5,\n    'yellow': 0xFFFF00,\n    'yellowgreen': 0x9ACD32\n  };\n  var _hslA = {\n    h: 0,\n    s: 0,\n    l: 0\n  };\n  var _hslB = {\n    h: 0,\n    s: 0,\n    l: 0\n  };\n\n  function hue2rgb(p, q, t) {\n    if (t < 0) t += 1;\n    if (t > 1) t -= 1;\n    if (t < 1 / 6) return p + (q - p) * 6 * t;\n    if (t < 1 / 2) return q;\n    if (t < 2 / 3) return p + (q - p) * 6 * (2 / 3 - t);\n    return p;\n  }\n\n  function SRGBToLinear(c) {\n    return c < 0.04045 ? c * 0.0773993808 : Math.pow(c * 0.9478672986 + 0.0521327014, 2.4);\n  }\n\n  function LinearToSRGB(c) {\n    return c < 0.0031308 ? c * 12.92 : 1.055 * Math.pow(c, 0.41666) - 0.055;\n  }\n\n  var Color = /*#__PURE__*/function () {\n    function Color(r, g, b) {\n      _classCallCheck(this, Color);\n\n      if (g === undefined && b === undefined) {\n        // r is THREE.Color, hex or string\n        return this.set(r);\n      }\n\n      return this.setRGB(r, g, b);\n    }\n\n    _createClass(Color, [{\n      key: \"set\",\n      value: function set(value) {\n        if (value && value.isColor) {\n          this.copy(value);\n        } else if (typeof value === 'number') {\n          this.setHex(value);\n        } else if (typeof value === 'string') {\n          this.setStyle(value);\n        }\n\n        return this;\n      }\n    }, {\n      key: \"setScalar\",\n      value: function setScalar(scalar) {\n        this.r = scalar;\n        this.g = scalar;\n        this.b = scalar;\n        return this;\n      }\n    }, {\n      key: \"setHex\",\n      value: function setHex(hex) {\n        hex = Math.floor(hex);\n        this.r = (hex >> 16 & 255) / 255;\n        this.g = (hex >> 8 & 255) / 255;\n        this.b = (hex & 255) / 255;\n        return this;\n      }\n    }, {\n      key: \"setRGB\",\n      value: function setRGB(r, g, b) {\n        this.r = r;\n        this.g = g;\n        this.b = b;\n        return this;\n      }\n    }, {\n      key: \"setHSL\",\n      value: function setHSL(h, s, l) {\n        // h,s,l ranges are in 0.0 - 1.0\n        h = euclideanModulo(h, 1);\n        s = clamp(s, 0, 1);\n        l = clamp(l, 0, 1);\n\n        if (s === 0) {\n          this.r = this.g = this.b = l;\n        } else {\n          var p = l <= 0.5 ? l * (1 + s) : l + s - l * s;\n          var q = 2 * l - p;\n          this.r = hue2rgb(q, p, h + 1 / 3);\n          this.g = hue2rgb(q, p, h);\n          this.b = hue2rgb(q, p, h - 1 / 3);\n        }\n\n        return this;\n      }\n    }, {\n      key: \"setStyle\",\n      value: function setStyle(style) {\n        function handleAlpha(string) {\n          if (string === undefined) return;\n\n          if (parseFloat(string) < 1) {\n            console.warn('THREE.Color: Alpha component of ' + style + ' will be ignored.');\n          }\n        }\n\n        var m;\n\n        if (m = /^((?:rgb|hsl)a?)\\(([^\\)]*)\\)/.exec(style)) {\n          // rgb / hsl\n          var color;\n          var name = m[1];\n          var components = m[2];\n\n          switch (name) {\n            case 'rgb':\n            case 'rgba':\n              if (color = /^\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*(?:,\\s*(\\d*\\.?\\d+)\\s*)?$/.exec(components)) {\n                // rgb(255,0,0) rgba(255,0,0,0.5)\n                this.r = Math.min(255, parseInt(color[1], 10)) / 255;\n                this.g = Math.min(255, parseInt(color[2], 10)) / 255;\n                this.b = Math.min(255, parseInt(color[3], 10)) / 255;\n                handleAlpha(color[4]);\n                return this;\n              }\n\n              if (color = /^\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*(?:,\\s*(\\d*\\.?\\d+)\\s*)?$/.exec(components)) {\n                // rgb(100%,0%,0%) rgba(100%,0%,0%,0.5)\n                this.r = Math.min(100, parseInt(color[1], 10)) / 100;\n                this.g = Math.min(100, parseInt(color[2], 10)) / 100;\n                this.b = Math.min(100, parseInt(color[3], 10)) / 100;\n                handleAlpha(color[4]);\n                return this;\n              }\n\n              break;\n\n            case 'hsl':\n            case 'hsla':\n              if (color = /^\\s*(\\d*\\.?\\d+)\\s*,\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*(?:,\\s*(\\d*\\.?\\d+)\\s*)?$/.exec(components)) {\n                // hsl(120,50%,50%) hsla(120,50%,50%,0.5)\n                var h = parseFloat(color[1]) / 360;\n                var s = parseInt(color[2], 10) / 100;\n                var l = parseInt(color[3], 10) / 100;\n                handleAlpha(color[4]);\n                return this.setHSL(h, s, l);\n              }\n\n              break;\n          }\n        } else if (m = /^\\#([A-Fa-f\\d]+)$/.exec(style)) {\n          // hex color\n          var hex = m[1];\n          var size = hex.length;\n\n          if (size === 3) {\n            // #ff0\n            this.r = parseInt(hex.charAt(0) + hex.charAt(0), 16) / 255;\n            this.g = parseInt(hex.charAt(1) + hex.charAt(1), 16) / 255;\n            this.b = parseInt(hex.charAt(2) + hex.charAt(2), 16) / 255;\n            return this;\n          } else if (size === 6) {\n            // #ff0000\n            this.r = parseInt(hex.charAt(0) + hex.charAt(1), 16) / 255;\n            this.g = parseInt(hex.charAt(2) + hex.charAt(3), 16) / 255;\n            this.b = parseInt(hex.charAt(4) + hex.charAt(5), 16) / 255;\n            return this;\n          }\n        }\n\n        if (style && style.length > 0) {\n          return this.setColorName(style);\n        }\n\n        return this;\n      }\n    }, {\n      key: \"setColorName\",\n      value: function setColorName(style) {\n        // color keywords\n        var hex = _colorKeywords[style.toLowerCase()];\n\n        if (hex !== undefined) {\n          // red\n          this.setHex(hex);\n        } else {\n          // unknown color\n          console.warn('THREE.Color: Unknown color ' + style);\n        }\n\n        return this;\n      }\n    }, {\n      key: \"clone\",\n      value: function clone() {\n        return new this.constructor(this.r, this.g, this.b);\n      }\n    }, {\n      key: \"copy\",\n      value: function copy(color) {\n        this.r = color.r;\n        this.g = color.g;\n        this.b = color.b;\n        return this;\n      }\n    }, {\n      key: \"copyGammaToLinear\",\n      value: function copyGammaToLinear(color) {\n        var gammaFactor = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 2.0;\n        this.r = Math.pow(color.r, gammaFactor);\n        this.g = Math.pow(color.g, gammaFactor);\n        this.b = Math.pow(color.b, gammaFactor);\n        return this;\n      }\n    }, {\n      key: \"copyLinearToGamma\",\n      value: function copyLinearToGamma(color) {\n        var gammaFactor = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 2.0;\n        var safeInverse = gammaFactor > 0 ? 1.0 / gammaFactor : 1.0;\n        this.r = Math.pow(color.r, safeInverse);\n        this.g = Math.pow(color.g, safeInverse);\n        this.b = Math.pow(color.b, safeInverse);\n        return this;\n      }\n    }, {\n      key: \"convertGammaToLinear\",\n      value: function convertGammaToLinear(gammaFactor) {\n        this.copyGammaToLinear(this, gammaFactor);\n        return this;\n      }\n    }, {\n      key: \"convertLinearToGamma\",\n      value: function convertLinearToGamma(gammaFactor) {\n        this.copyLinearToGamma(this, gammaFactor);\n        return this;\n      }\n    }, {\n      key: \"copySRGBToLinear\",\n      value: function copySRGBToLinear(color) {\n        this.r = SRGBToLinear(color.r);\n        this.g = SRGBToLinear(color.g);\n        this.b = SRGBToLinear(color.b);\n        return this;\n      }\n    }, {\n      key: \"copyLinearToSRGB\",\n      value: function copyLinearToSRGB(color) {\n        this.r = LinearToSRGB(color.r);\n        this.g = LinearToSRGB(color.g);\n        this.b = LinearToSRGB(color.b);\n        return this;\n      }\n    }, {\n      key: \"convertSRGBToLinear\",\n      value: function convertSRGBToLinear() {\n        this.copySRGBToLinear(this);\n        return this;\n      }\n    }, {\n      key: \"convertLinearToSRGB\",\n      value: function convertLinearToSRGB() {\n        this.copyLinearToSRGB(this);\n        return this;\n      }\n    }, {\n      key: \"getHex\",\n      value: function getHex() {\n        return this.r * 255 << 16 ^ this.g * 255 << 8 ^ this.b * 255 << 0;\n      }\n    }, {\n      key: \"getHexString\",\n      value: function getHexString() {\n        return ('000000' + this.getHex().toString(16)).slice(-6);\n      }\n    }, {\n      key: \"getHSL\",\n      value: function getHSL(target) {\n        // h,s,l ranges are in 0.0 - 1.0\n        var r = this.r,\n            g = this.g,\n            b = this.b;\n        var max = Math.max(r, g, b);\n        var min = Math.min(r, g, b);\n        var hue, saturation;\n        var lightness = (min + max) / 2.0;\n\n        if (min === max) {\n          hue = 0;\n          saturation = 0;\n        } else {\n          var delta = max - min;\n          saturation = lightness <= 0.5 ? delta / (max + min) : delta / (2 - max - min);\n\n          switch (max) {\n            case r:\n              hue = (g - b) / delta + (g < b ? 6 : 0);\n              break;\n\n            case g:\n              hue = (b - r) / delta + 2;\n              break;\n\n            case b:\n              hue = (r - g) / delta + 4;\n              break;\n          }\n\n          hue /= 6;\n        }\n\n        target.h = hue;\n        target.s = saturation;\n        target.l = lightness;\n        return target;\n      }\n    }, {\n      key: \"getStyle\",\n      value: function getStyle() {\n        return 'rgb(' + (this.r * 255 | 0) + ',' + (this.g * 255 | 0) + ',' + (this.b * 255 | 0) + ')';\n      }\n    }, {\n      key: \"offsetHSL\",\n      value: function offsetHSL(h, s, l) {\n        this.getHSL(_hslA);\n        _hslA.h += h;\n        _hslA.s += s;\n        _hslA.l += l;\n        this.setHSL(_hslA.h, _hslA.s, _hslA.l);\n        return this;\n      }\n    }, {\n      key: \"add\",\n      value: function add(color) {\n        this.r += color.r;\n        this.g += color.g;\n        this.b += color.b;\n        return this;\n      }\n    }, {\n      key: \"addColors\",\n      value: function addColors(color1, color2) {\n        this.r = color1.r + color2.r;\n        this.g = color1.g + color2.g;\n        this.b = color1.b + color2.b;\n        return this;\n      }\n    }, {\n      key: \"addScalar\",\n      value: function addScalar(s) {\n        this.r += s;\n        this.g += s;\n        this.b += s;\n        return this;\n      }\n    }, {\n      key: \"sub\",\n      value: function sub(color) {\n        this.r = Math.max(0, this.r - color.r);\n        this.g = Math.max(0, this.g - color.g);\n        this.b = Math.max(0, this.b - color.b);\n        return this;\n      }\n    }, {\n      key: \"multiply\",\n      value: function multiply(color) {\n        this.r *= color.r;\n        this.g *= color.g;\n        this.b *= color.b;\n        return this;\n      }\n    }, {\n      key: \"multiplyScalar\",\n      value: function multiplyScalar(s) {\n        this.r *= s;\n        this.g *= s;\n        this.b *= s;\n        return this;\n      }\n    }, {\n      key: \"lerp\",\n      value: function lerp(color, alpha) {\n        this.r += (color.r - this.r) * alpha;\n        this.g += (color.g - this.g) * alpha;\n        this.b += (color.b - this.b) * alpha;\n        return this;\n      }\n    }, {\n      key: \"lerpColors\",\n      value: function lerpColors(color1, color2, alpha) {\n        this.r = color1.r + (color2.r - color1.r) * alpha;\n        this.g = color1.g + (color2.g - color1.g) * alpha;\n        this.b = color1.b + (color2.b - color1.b) * alpha;\n        return this;\n      }\n    }, {\n      key: \"lerpHSL\",\n      value: function lerpHSL(color, alpha) {\n        this.getHSL(_hslA);\n        color.getHSL(_hslB);\n        var h = lerp(_hslA.h, _hslB.h, alpha);\n        var s = lerp(_hslA.s, _hslB.s, alpha);\n        var l = lerp(_hslA.l, _hslB.l, alpha);\n        this.setHSL(h, s, l);\n        return this;\n      }\n    }, {\n      key: \"equals\",\n      value: function equals(c) {\n        return c.r === this.r && c.g === this.g && c.b === this.b;\n      }\n    }, {\n      key: \"fromArray\",\n      value: function fromArray(array) {\n        var offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n        this.r = array[offset];\n        this.g = array[offset + 1];\n        this.b = array[offset + 2];\n        return this;\n      }\n    }, {\n      key: \"toArray\",\n      value: function toArray() {\n        var array = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n        var offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n        array[offset] = this.r;\n        array[offset + 1] = this.g;\n        array[offset + 2] = this.b;\n        return array;\n      }\n    }, {\n      key: \"fromBufferAttribute\",\n      value: function fromBufferAttribute(attribute, index) {\n        this.r = attribute.getX(index);\n        this.g = attribute.getY(index);\n        this.b = attribute.getZ(index);\n\n        if (attribute.normalized === true) {\n          // assuming Uint8Array\n          this.r /= 255;\n          this.g /= 255;\n          this.b /= 255;\n        }\n\n        return this;\n      }\n    }, {\n      key: \"toJSON\",\n      value: function toJSON() {\n        return this.getHex();\n      }\n    }]);\n\n    return Color;\n  }();\n\n  Color.NAMES = _colorKeywords;\n  Color.prototype.isColor = true;\n  Color.prototype.r = 1;\n  Color.prototype.g = 1;\n  Color.prototype.b = 1;\n  /**\n   * parameters = {\n   *\tcolor: <hex>,\n   *\topacity: <float>,\n   *\tmap: new THREE.Texture( <Image> ),\n   *\n   *\tlightMap: new THREE.Texture( <Image> ),\n   *\tlightMapIntensity: <float>\n   *\n   *\taoMap: new THREE.Texture( <Image> ),\n   *\taoMapIntensity: <float>\n   *\n   *\tspecularMap: new THREE.Texture( <Image> ),\n   *\n   *\talphaMap: new THREE.Texture( <Image> ),\n   *\n   *\tenvMap: new THREE.CubeTexture( [posx, negx, posy, negy, posz, negz] ),\n   *\tcombine: THREE.Multiply,\n   *\treflectivity: <float>,\n   *\trefractionRatio: <float>,\n   *\n   *\tdepthTest: <bool>,\n   *\tdepthWrite: <bool>,\n   *\n   *\twireframe: <boolean>,\n   *\twireframeLinewidth: <float>,\n   * }\n   */\n\n  var MeshBasicMaterial = /*#__PURE__*/function (_Material) {\n    _inherits(MeshBasicMaterial, _Material);\n\n    var _super7 = _createSuper(MeshBasicMaterial);\n\n    function MeshBasicMaterial(parameters) {\n      var _this8;\n\n      _classCallCheck(this, MeshBasicMaterial);\n\n      _this8 = _super7.call(this);\n      _this8.type = 'MeshBasicMaterial';\n      _this8.color = new Color(0xffffff); // emissive\n\n      _this8.map = null;\n      _this8.lightMap = null;\n      _this8.lightMapIntensity = 1.0;\n      _this8.aoMap = null;\n      _this8.aoMapIntensity = 1.0;\n      _this8.specularMap = null;\n      _this8.alphaMap = null;\n      _this8.envMap = null;\n      _this8.combine = MultiplyOperation;\n      _this8.reflectivity = 1;\n      _this8.refractionRatio = 0.98;\n      _this8.wireframe = false;\n      _this8.wireframeLinewidth = 1;\n      _this8.wireframeLinecap = 'round';\n      _this8.wireframeLinejoin = 'round';\n\n      _this8.setValues(parameters);\n\n      return _this8;\n    }\n\n    _createClass(MeshBasicMaterial, [{\n      key: \"copy\",\n      value: function copy(source) {\n        _get(_getPrototypeOf(MeshBasicMaterial.prototype), \"copy\", this).call(this, source);\n\n        this.color.copy(source.color);\n        this.map = source.map;\n        this.lightMap = source.lightMap;\n        this.lightMapIntensity = source.lightMapIntensity;\n        this.aoMap = source.aoMap;\n        this.aoMapIntensity = source.aoMapIntensity;\n        this.specularMap = source.specularMap;\n        this.alphaMap = source.alphaMap;\n        this.envMap = source.envMap;\n        this.combine = source.combine;\n        this.reflectivity = source.reflectivity;\n        this.refractionRatio = source.refractionRatio;\n        this.wireframe = source.wireframe;\n        this.wireframeLinewidth = source.wireframeLinewidth;\n        this.wireframeLinecap = source.wireframeLinecap;\n        this.wireframeLinejoin = source.wireframeLinejoin;\n        return this;\n      }\n    }]);\n\n    return MeshBasicMaterial;\n  }(Material);\n\n  MeshBasicMaterial.prototype.isMeshBasicMaterial = true;\n\n  var _vector$9 = /*@__PURE__*/new Vector3();\n\n  var _vector2$1 = /*@__PURE__*/new Vector2();\n\n  var BufferAttribute = /*#__PURE__*/function () {\n    function BufferAttribute(array, itemSize, normalized) {\n      _classCallCheck(this, BufferAttribute);\n\n      if (Array.isArray(array)) {\n        throw new TypeError('THREE.BufferAttribute: array should be a Typed Array.');\n      }\n\n      this.name = '';\n      this.array = array;\n      this.itemSize = itemSize;\n      this.count = array !== undefined ? array.length / itemSize : 0;\n      this.normalized = normalized === true;\n      this.usage = StaticDrawUsage;\n      this.updateRange = {\n        offset: 0,\n        count: -1\n      };\n      this.version = 0;\n    }\n\n    _createClass(BufferAttribute, [{\n      key: \"onUploadCallback\",\n      value: function onUploadCallback() {}\n    }, {\n      key: \"needsUpdate\",\n      set: function set(value) {\n        if (value === true) this.version++;\n      }\n    }, {\n      key: \"setUsage\",\n      value: function setUsage(value) {\n        this.usage = value;\n        return this;\n      }\n    }, {\n      key: \"copy\",\n      value: function copy(source) {\n        this.name = source.name;\n        this.array = new source.array.constructor(source.array);\n        this.itemSize = source.itemSize;\n        this.count = source.count;\n        this.normalized = source.normalized;\n        this.usage = source.usage;\n        return this;\n      }\n    }, {\n      key: \"copyAt\",\n      value: function copyAt(index1, attribute, index2) {\n        index1 *= this.itemSize;\n        index2 *= attribute.itemSize;\n\n        for (var _i31 = 0, l = this.itemSize; _i31 < l; _i31++) {\n          this.array[index1 + _i31] = attribute.array[index2 + _i31];\n        }\n\n        return this;\n      }\n    }, {\n      key: \"copyArray\",\n      value: function copyArray(array) {\n        this.array.set(array);\n        return this;\n      }\n    }, {\n      key: \"copyColorsArray\",\n      value: function copyColorsArray(colors) {\n        var array = this.array;\n        var offset = 0;\n\n        for (var _i32 = 0, l = colors.length; _i32 < l; _i32++) {\n          var color = colors[_i32];\n\n          if (color === undefined) {\n            console.warn('THREE.BufferAttribute.copyColorsArray(): color is undefined', _i32);\n            color = new Color();\n          }\n\n          array[offset++] = color.r;\n          array[offset++] = color.g;\n          array[offset++] = color.b;\n        }\n\n        return this;\n      }\n    }, {\n      key: \"copyVector2sArray\",\n      value: function copyVector2sArray(vectors) {\n        var array = this.array;\n        var offset = 0;\n\n        for (var _i33 = 0, l = vectors.length; _i33 < l; _i33++) {\n          var vector = vectors[_i33];\n\n          if (vector === undefined) {\n            console.warn('THREE.BufferAttribute.copyVector2sArray(): vector is undefined', _i33);\n            vector = new Vector2();\n          }\n\n          array[offset++] = vector.x;\n          array[offset++] = vector.y;\n        }\n\n        return this;\n      }\n    }, {\n      key: \"copyVector3sArray\",\n      value: function copyVector3sArray(vectors) {\n        var array = this.array;\n        var offset = 0;\n\n        for (var _i34 = 0, l = vectors.length; _i34 < l; _i34++) {\n          var vector = vectors[_i34];\n\n          if (vector === undefined) {\n            console.warn('THREE.BufferAttribute.copyVector3sArray(): vector is undefined', _i34);\n            vector = new Vector3();\n          }\n\n          array[offset++] = vector.x;\n          array[offset++] = vector.y;\n          array[offset++] = vector.z;\n        }\n\n        return this;\n      }\n    }, {\n      key: \"copyVector4sArray\",\n      value: function copyVector4sArray(vectors) {\n        var array = this.array;\n        var offset = 0;\n\n        for (var _i35 = 0, l = vectors.length; _i35 < l; _i35++) {\n          var vector = vectors[_i35];\n\n          if (vector === undefined) {\n            console.warn('THREE.BufferAttribute.copyVector4sArray(): vector is undefined', _i35);\n            vector = new Vector4();\n          }\n\n          array[offset++] = vector.x;\n          array[offset++] = vector.y;\n          array[offset++] = vector.z;\n          array[offset++] = vector.w;\n        }\n\n        return this;\n      }\n    }, {\n      key: \"applyMatrix3\",\n      value: function applyMatrix3(m) {\n        if (this.itemSize === 2) {\n          for (var _i36 = 0, l = this.count; _i36 < l; _i36++) {\n            _vector2$1.fromBufferAttribute(this, _i36);\n\n            _vector2$1.applyMatrix3(m);\n\n            this.setXY(_i36, _vector2$1.x, _vector2$1.y);\n          }\n        } else if (this.itemSize === 3) {\n          for (var _i37 = 0, _l2 = this.count; _i37 < _l2; _i37++) {\n            _vector$9.fromBufferAttribute(this, _i37);\n\n            _vector$9.applyMatrix3(m);\n\n            this.setXYZ(_i37, _vector$9.x, _vector$9.y, _vector$9.z);\n          }\n        }\n\n        return this;\n      }\n    }, {\n      key: \"applyMatrix4\",\n      value: function applyMatrix4(m) {\n        for (var _i38 = 0, l = this.count; _i38 < l; _i38++) {\n          _vector$9.x = this.getX(_i38);\n          _vector$9.y = this.getY(_i38);\n          _vector$9.z = this.getZ(_i38);\n\n          _vector$9.applyMatrix4(m);\n\n          this.setXYZ(_i38, _vector$9.x, _vector$9.y, _vector$9.z);\n        }\n\n        return this;\n      }\n    }, {\n      key: \"applyNormalMatrix\",\n      value: function applyNormalMatrix(m) {\n        for (var _i39 = 0, l = this.count; _i39 < l; _i39++) {\n          _vector$9.x = this.getX(_i39);\n          _vector$9.y = this.getY(_i39);\n          _vector$9.z = this.getZ(_i39);\n\n          _vector$9.applyNormalMatrix(m);\n\n          this.setXYZ(_i39, _vector$9.x, _vector$9.y, _vector$9.z);\n        }\n\n        return this;\n      }\n    }, {\n      key: \"transformDirection\",\n      value: function transformDirection(m) {\n        for (var _i40 = 0, l = this.count; _i40 < l; _i40++) {\n          _vector$9.x = this.getX(_i40);\n          _vector$9.y = this.getY(_i40);\n          _vector$9.z = this.getZ(_i40);\n\n          _vector$9.transformDirection(m);\n\n          this.setXYZ(_i40, _vector$9.x, _vector$9.y, _vector$9.z);\n        }\n\n        return this;\n      }\n    }, {\n      key: \"set\",\n      value: function set(value) {\n        var offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n        this.array.set(value, offset);\n        return this;\n      }\n    }, {\n      key: \"getX\",\n      value: function getX(index) {\n        return this.array[index * this.itemSize];\n      }\n    }, {\n      key: \"setX\",\n      value: function setX(index, x) {\n        this.array[index * this.itemSize] = x;\n        return this;\n      }\n    }, {\n      key: \"getY\",\n      value: function getY(index) {\n        return this.array[index * this.itemSize + 1];\n      }\n    }, {\n      key: \"setY\",\n      value: function setY(index, y) {\n        this.array[index * this.itemSize + 1] = y;\n        return this;\n      }\n    }, {\n      key: \"getZ\",\n      value: function getZ(index) {\n        return this.array[index * this.itemSize + 2];\n      }\n    }, {\n      key: \"setZ\",\n      value: function setZ(index, z) {\n        this.array[index * this.itemSize + 2] = z;\n        return this;\n      }\n    }, {\n      key: \"getW\",\n      value: function getW(index) {\n        return this.array[index * this.itemSize + 3];\n      }\n    }, {\n      key: \"setW\",\n      value: function setW(index, w) {\n        this.array[index * this.itemSize + 3] = w;\n        return this;\n      }\n    }, {\n      key: \"setXY\",\n      value: function setXY(index, x, y) {\n        index *= this.itemSize;\n        this.array[index + 0] = x;\n        this.array[index + 1] = y;\n        return this;\n      }\n    }, {\n      key: \"setXYZ\",\n      value: function setXYZ(index, x, y, z) {\n        index *= this.itemSize;\n        this.array[index + 0] = x;\n        this.array[index + 1] = y;\n        this.array[index + 2] = z;\n        return this;\n      }\n    }, {\n      key: \"setXYZW\",\n      value: function setXYZW(index, x, y, z, w) {\n        index *= this.itemSize;\n        this.array[index + 0] = x;\n        this.array[index + 1] = y;\n        this.array[index + 2] = z;\n        this.array[index + 3] = w;\n        return this;\n      }\n    }, {\n      key: \"onUpload\",\n      value: function onUpload(callback) {\n        this.onUploadCallback = callback;\n        return this;\n      }\n    }, {\n      key: \"clone\",\n      value: function clone() {\n        return new this.constructor(this.array, this.itemSize).copy(this);\n      }\n    }, {\n      key: \"toJSON\",\n      value: function toJSON() {\n        var data = {\n          itemSize: this.itemSize,\n          type: this.array.constructor.name,\n          array: Array.prototype.slice.call(this.array),\n          normalized: this.normalized\n        };\n        if (this.name !== '') data.name = this.name;\n        if (this.usage !== StaticDrawUsage) data.usage = this.usage;\n        if (this.updateRange.offset !== 0 || this.updateRange.count !== -1) data.updateRange = this.updateRange;\n        return data;\n      }\n    }]);\n\n    return BufferAttribute;\n  }();\n\n  BufferAttribute.prototype.isBufferAttribute = true; //\n\n  var Int8BufferAttribute = /*#__PURE__*/function (_BufferAttribute) {\n    _inherits(Int8BufferAttribute, _BufferAttribute);\n\n    var _super8 = _createSuper(Int8BufferAttribute);\n\n    function Int8BufferAttribute(array, itemSize, normalized) {\n      _classCallCheck(this, Int8BufferAttribute);\n\n      return _super8.call(this, new Int8Array(array), itemSize, normalized);\n    }\n\n    return Int8BufferAttribute;\n  }(BufferAttribute);\n\n  var Uint8BufferAttribute = /*#__PURE__*/function (_BufferAttribute2) {\n    _inherits(Uint8BufferAttribute, _BufferAttribute2);\n\n    var _super9 = _createSuper(Uint8BufferAttribute);\n\n    function Uint8BufferAttribute(array, itemSize, normalized) {\n      _classCallCheck(this, Uint8BufferAttribute);\n\n      return _super9.call(this, new Uint8Array(array), itemSize, normalized);\n    }\n\n    return Uint8BufferAttribute;\n  }(BufferAttribute);\n\n  var Uint8ClampedBufferAttribute = /*#__PURE__*/function (_BufferAttribute3) {\n    _inherits(Uint8ClampedBufferAttribute, _BufferAttribute3);\n\n    var _super10 = _createSuper(Uint8ClampedBufferAttribute);\n\n    function Uint8ClampedBufferAttribute(array, itemSize, normalized) {\n      _classCallCheck(this, Uint8ClampedBufferAttribute);\n\n      return _super10.call(this, new Uint8ClampedArray(array), itemSize, normalized);\n    }\n\n    return Uint8ClampedBufferAttribute;\n  }(BufferAttribute);\n\n  var Int16BufferAttribute = /*#__PURE__*/function (_BufferAttribute4) {\n    _inherits(Int16BufferAttribute, _BufferAttribute4);\n\n    var _super11 = _createSuper(Int16BufferAttribute);\n\n    function Int16BufferAttribute(array, itemSize, normalized) {\n      _classCallCheck(this, Int16BufferAttribute);\n\n      return _super11.call(this, new Int16Array(array), itemSize, normalized);\n    }\n\n    return Int16BufferAttribute;\n  }(BufferAttribute);\n\n  var Uint16BufferAttribute = /*#__PURE__*/function (_BufferAttribute5) {\n    _inherits(Uint16BufferAttribute, _BufferAttribute5);\n\n    var _super12 = _createSuper(Uint16BufferAttribute);\n\n    function Uint16BufferAttribute(array, itemSize, normalized) {\n      _classCallCheck(this, Uint16BufferAttribute);\n\n      return _super12.call(this, new Uint16Array(array), itemSize, normalized);\n    }\n\n    return Uint16BufferAttribute;\n  }(BufferAttribute);\n\n  var Int32BufferAttribute = /*#__PURE__*/function (_BufferAttribute6) {\n    _inherits(Int32BufferAttribute, _BufferAttribute6);\n\n    var _super13 = _createSuper(Int32BufferAttribute);\n\n    function Int32BufferAttribute(array, itemSize, normalized) {\n      _classCallCheck(this, Int32BufferAttribute);\n\n      return _super13.call(this, new Int32Array(array), itemSize, normalized);\n    }\n\n    return Int32BufferAttribute;\n  }(BufferAttribute);\n\n  var Uint32BufferAttribute = /*#__PURE__*/function (_BufferAttribute7) {\n    _inherits(Uint32BufferAttribute, _BufferAttribute7);\n\n    var _super14 = _createSuper(Uint32BufferAttribute);\n\n    function Uint32BufferAttribute(array, itemSize, normalized) {\n      _classCallCheck(this, Uint32BufferAttribute);\n\n      return _super14.call(this, new Uint32Array(array), itemSize, normalized);\n    }\n\n    return Uint32BufferAttribute;\n  }(BufferAttribute);\n\n  var Float16BufferAttribute = /*#__PURE__*/function (_BufferAttribute8) {\n    _inherits(Float16BufferAttribute, _BufferAttribute8);\n\n    var _super15 = _createSuper(Float16BufferAttribute);\n\n    function Float16BufferAttribute(array, itemSize, normalized) {\n      _classCallCheck(this, Float16BufferAttribute);\n\n      return _super15.call(this, new Uint16Array(array), itemSize, normalized);\n    }\n\n    return Float16BufferAttribute;\n  }(BufferAttribute);\n\n  Float16BufferAttribute.prototype.isFloat16BufferAttribute = true;\n\n  var Float32BufferAttribute = /*#__PURE__*/function (_BufferAttribute9) {\n    _inherits(Float32BufferAttribute, _BufferAttribute9);\n\n    var _super16 = _createSuper(Float32BufferAttribute);\n\n    function Float32BufferAttribute(array, itemSize, normalized) {\n      _classCallCheck(this, Float32BufferAttribute);\n\n      return _super16.call(this, new Float32Array(array), itemSize, normalized);\n    }\n\n    return Float32BufferAttribute;\n  }(BufferAttribute);\n\n  var Float64BufferAttribute = /*#__PURE__*/function (_BufferAttribute10) {\n    _inherits(Float64BufferAttribute, _BufferAttribute10);\n\n    var _super17 = _createSuper(Float64BufferAttribute);\n\n    function Float64BufferAttribute(array, itemSize, normalized) {\n      _classCallCheck(this, Float64BufferAttribute);\n\n      return _super17.call(this, new Float64Array(array), itemSize, normalized);\n    }\n\n    return Float64BufferAttribute;\n  }(BufferAttribute); //\n\n\n  var _id = 0;\n\n  var _m1 = /*@__PURE__*/new Matrix4();\n\n  var _obj = /*@__PURE__*/new Object3D();\n\n  var _offset = /*@__PURE__*/new Vector3();\n\n  var _box$1 = /*@__PURE__*/new Box3();\n\n  var _boxMorphTargets = /*@__PURE__*/new Box3();\n\n  var _vector$8 = /*@__PURE__*/new Vector3();\n\n  var BufferGeometry = /*#__PURE__*/function (_EventDispatcher5) {\n    _inherits(BufferGeometry, _EventDispatcher5);\n\n    var _super18 = _createSuper(BufferGeometry);\n\n    function BufferGeometry() {\n      var _this9;\n\n      _classCallCheck(this, BufferGeometry);\n\n      _this9 = _super18.call(this);\n      Object.defineProperty(_assertThisInitialized(_this9), 'id', {\n        value: _id++\n      });\n      _this9.uuid = generateUUID();\n      _this9.name = '';\n      _this9.type = 'BufferGeometry';\n      _this9.index = null;\n      _this9.attributes = {};\n      _this9.morphAttributes = {};\n      _this9.morphTargetsRelative = false;\n      _this9.groups = [];\n      _this9.boundingBox = null;\n      _this9.boundingSphere = null;\n      _this9.drawRange = {\n        start: 0,\n        count: Infinity\n      };\n      _this9.userData = {};\n      return _this9;\n    }\n\n    _createClass(BufferGeometry, [{\n      key: \"getIndex\",\n      value: function getIndex() {\n        return this.index;\n      }\n    }, {\n      key: \"setIndex\",\n      value: function setIndex(index) {\n        if (Array.isArray(index)) {\n          this.index = new (arrayMax(index) > 65535 ? Uint32BufferAttribute : Uint16BufferAttribute)(index, 1);\n        } else {\n          this.index = index;\n        }\n\n        return this;\n      }\n    }, {\n      key: \"getAttribute\",\n      value: function getAttribute(name) {\n        return this.attributes[name];\n      }\n    }, {\n      key: \"setAttribute\",\n      value: function setAttribute(name, attribute) {\n        this.attributes[name] = attribute;\n        return this;\n      }\n    }, {\n      key: \"deleteAttribute\",\n      value: function deleteAttribute(name) {\n        delete this.attributes[name];\n        return this;\n      }\n    }, {\n      key: \"hasAttribute\",\n      value: function hasAttribute(name) {\n        return this.attributes[name] !== undefined;\n      }\n    }, {\n      key: \"addGroup\",\n      value: function addGroup(start, count) {\n        var materialIndex = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n        this.groups.push({\n          start: start,\n          count: count,\n          materialIndex: materialIndex\n        });\n      }\n    }, {\n      key: \"clearGroups\",\n      value: function clearGroups() {\n        this.groups = [];\n      }\n    }, {\n      key: \"setDrawRange\",\n      value: function setDrawRange(start, count) {\n        this.drawRange.start = start;\n        this.drawRange.count = count;\n      }\n    }, {\n      key: \"applyMatrix4\",\n      value: function applyMatrix4(matrix) {\n        var position = this.attributes.position;\n\n        if (position !== undefined) {\n          position.applyMatrix4(matrix);\n          position.needsUpdate = true;\n        }\n\n        var normal = this.attributes.normal;\n\n        if (normal !== undefined) {\n          var normalMatrix = new Matrix3().getNormalMatrix(matrix);\n          normal.applyNormalMatrix(normalMatrix);\n          normal.needsUpdate = true;\n        }\n\n        var tangent = this.attributes.tangent;\n\n        if (tangent !== undefined) {\n          tangent.transformDirection(matrix);\n          tangent.needsUpdate = true;\n        }\n\n        if (this.boundingBox !== null) {\n          this.computeBoundingBox();\n        }\n\n        if (this.boundingSphere !== null) {\n          this.computeBoundingSphere();\n        }\n\n        return this;\n      }\n    }, {\n      key: \"applyQuaternion\",\n      value: function applyQuaternion(q) {\n        _m1.makeRotationFromQuaternion(q);\n\n        this.applyMatrix4(_m1);\n        return this;\n      }\n    }, {\n      key: \"rotateX\",\n      value: function rotateX(angle) {\n        // rotate geometry around world x-axis\n        _m1.makeRotationX(angle);\n\n        this.applyMatrix4(_m1);\n        return this;\n      }\n    }, {\n      key: \"rotateY\",\n      value: function rotateY(angle) {\n        // rotate geometry around world y-axis\n        _m1.makeRotationY(angle);\n\n        this.applyMatrix4(_m1);\n        return this;\n      }\n    }, {\n      key: \"rotateZ\",\n      value: function rotateZ(angle) {\n        // rotate geometry around world z-axis\n        _m1.makeRotationZ(angle);\n\n        this.applyMatrix4(_m1);\n        return this;\n      }\n    }, {\n      key: \"translate\",\n      value: function translate(x, y, z) {\n        // translate geometry\n        _m1.makeTranslation(x, y, z);\n\n        this.applyMatrix4(_m1);\n        return this;\n      }\n    }, {\n      key: \"scale\",\n      value: function scale(x, y, z) {\n        // scale geometry\n        _m1.makeScale(x, y, z);\n\n        this.applyMatrix4(_m1);\n        return this;\n      }\n    }, {\n      key: \"lookAt\",\n      value: function lookAt(vector) {\n        _obj.lookAt(vector);\n\n        _obj.updateMatrix();\n\n        this.applyMatrix4(_obj.matrix);\n        return this;\n      }\n    }, {\n      key: \"center\",\n      value: function center() {\n        this.computeBoundingBox();\n        this.boundingBox.getCenter(_offset).negate();\n        this.translate(_offset.x, _offset.y, _offset.z);\n        return this;\n      }\n    }, {\n      key: \"setFromPoints\",\n      value: function setFromPoints(points) {\n        var position = [];\n\n        for (var _i41 = 0, l = points.length; _i41 < l; _i41++) {\n          var point = points[_i41];\n          position.push(point.x, point.y, point.z || 0);\n        }\n\n        this.setAttribute('position', new Float32BufferAttribute(position, 3));\n        return this;\n      }\n    }, {\n      key: \"computeBoundingBox\",\n      value: function computeBoundingBox() {\n        if (this.boundingBox === null) {\n          this.boundingBox = new Box3();\n        }\n\n        var position = this.attributes.position;\n        var morphAttributesPosition = this.morphAttributes.position;\n\n        if (position && position.isGLBufferAttribute) {\n          console.error('THREE.BufferGeometry.computeBoundingBox(): GLBufferAttribute requires a manual bounding box. Alternatively set \"mesh.frustumCulled\" to \"false\".', this);\n          this.boundingBox.set(new Vector3(-Infinity, -Infinity, -Infinity), new Vector3(+Infinity, +Infinity, +Infinity));\n          return;\n        }\n\n        if (position !== undefined) {\n          this.boundingBox.setFromBufferAttribute(position); // process morph attributes if present\n\n          if (morphAttributesPosition) {\n            for (var _i42 = 0, il = morphAttributesPosition.length; _i42 < il; _i42++) {\n              var morphAttribute = morphAttributesPosition[_i42];\n\n              _box$1.setFromBufferAttribute(morphAttribute);\n\n              if (this.morphTargetsRelative) {\n                _vector$8.addVectors(this.boundingBox.min, _box$1.min);\n\n                this.boundingBox.expandByPoint(_vector$8);\n\n                _vector$8.addVectors(this.boundingBox.max, _box$1.max);\n\n                this.boundingBox.expandByPoint(_vector$8);\n              } else {\n                this.boundingBox.expandByPoint(_box$1.min);\n                this.boundingBox.expandByPoint(_box$1.max);\n              }\n            }\n          }\n        } else {\n          this.boundingBox.makeEmpty();\n        }\n\n        if (isNaN(this.boundingBox.min.x) || isNaN(this.boundingBox.min.y) || isNaN(this.boundingBox.min.z)) {\n          console.error('THREE.BufferGeometry.computeBoundingBox(): Computed min/max have NaN values. The \"position\" attribute is likely to have NaN values.', this);\n        }\n      }\n    }, {\n      key: \"computeBoundingSphere\",\n      value: function computeBoundingSphere() {\n        if (this.boundingSphere === null) {\n          this.boundingSphere = new Sphere();\n        }\n\n        var position = this.attributes.position;\n        var morphAttributesPosition = this.morphAttributes.position;\n\n        if (position && position.isGLBufferAttribute) {\n          console.error('THREE.BufferGeometry.computeBoundingSphere(): GLBufferAttribute requires a manual bounding sphere. Alternatively set \"mesh.frustumCulled\" to \"false\".', this);\n          this.boundingSphere.set(new Vector3(), Infinity);\n          return;\n        }\n\n        if (position) {\n          // first, find the center of the bounding sphere\n          var center = this.boundingSphere.center;\n\n          _box$1.setFromBufferAttribute(position); // process morph attributes if present\n\n\n          if (morphAttributesPosition) {\n            for (var _i43 = 0, il = morphAttributesPosition.length; _i43 < il; _i43++) {\n              var morphAttribute = morphAttributesPosition[_i43];\n\n              _boxMorphTargets.setFromBufferAttribute(morphAttribute);\n\n              if (this.morphTargetsRelative) {\n                _vector$8.addVectors(_box$1.min, _boxMorphTargets.min);\n\n                _box$1.expandByPoint(_vector$8);\n\n                _vector$8.addVectors(_box$1.max, _boxMorphTargets.max);\n\n                _box$1.expandByPoint(_vector$8);\n              } else {\n                _box$1.expandByPoint(_boxMorphTargets.min);\n\n                _box$1.expandByPoint(_boxMorphTargets.max);\n              }\n            }\n          }\n\n          _box$1.getCenter(center); // second, try to find a boundingSphere with a radius smaller than the\n          // boundingSphere of the boundingBox: sqrt(3) smaller in the best case\n\n\n          var maxRadiusSq = 0;\n\n          for (var _i44 = 0, _il = position.count; _i44 < _il; _i44++) {\n            _vector$8.fromBufferAttribute(position, _i44);\n\n            maxRadiusSq = Math.max(maxRadiusSq, center.distanceToSquared(_vector$8));\n          } // process morph attributes if present\n\n\n          if (morphAttributesPosition) {\n            for (var _i45 = 0, _il2 = morphAttributesPosition.length; _i45 < _il2; _i45++) {\n              var _morphAttribute = morphAttributesPosition[_i45];\n              var morphTargetsRelative = this.morphTargetsRelative;\n\n              for (var j = 0, jl = _morphAttribute.count; j < jl; j++) {\n                _vector$8.fromBufferAttribute(_morphAttribute, j);\n\n                if (morphTargetsRelative) {\n                  _offset.fromBufferAttribute(position, j);\n\n                  _vector$8.add(_offset);\n                }\n\n                maxRadiusSq = Math.max(maxRadiusSq, center.distanceToSquared(_vector$8));\n              }\n            }\n          }\n\n          this.boundingSphere.radius = Math.sqrt(maxRadiusSq);\n\n          if (isNaN(this.boundingSphere.radius)) {\n            console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The \"position\" attribute is likely to have NaN values.', this);\n          }\n        }\n      }\n    }, {\n      key: \"computeTangents\",\n      value: function computeTangents() {\n        var index = this.index;\n        var attributes = this.attributes; // based on http://www.terathon.com/code/tangent.html\n        // (per vertex tangents)\n\n        if (index === null || attributes.position === undefined || attributes.normal === undefined || attributes.uv === undefined) {\n          console.error('THREE.BufferGeometry: .computeTangents() failed. Missing required attributes (index, position, normal or uv)');\n          return;\n        }\n\n        var indices = index.array;\n        var positions = attributes.position.array;\n        var normals = attributes.normal.array;\n        var uvs = attributes.uv.array;\n        var nVertices = positions.length / 3;\n\n        if (attributes.tangent === undefined) {\n          this.setAttribute('tangent', new BufferAttribute(new Float32Array(4 * nVertices), 4));\n        }\n\n        var tangents = attributes.tangent.array;\n        var tan1 = [],\n            tan2 = [];\n\n        for (var _i46 = 0; _i46 < nVertices; _i46++) {\n          tan1[_i46] = new Vector3();\n          tan2[_i46] = new Vector3();\n        }\n\n        var vA = new Vector3(),\n            vB = new Vector3(),\n            vC = new Vector3(),\n            uvA = new Vector2(),\n            uvB = new Vector2(),\n            uvC = new Vector2(),\n            sdir = new Vector3(),\n            tdir = new Vector3();\n\n        function handleTriangle(a, b, c) {\n          vA.fromArray(positions, a * 3);\n          vB.fromArray(positions, b * 3);\n          vC.fromArray(positions, c * 3);\n          uvA.fromArray(uvs, a * 2);\n          uvB.fromArray(uvs, b * 2);\n          uvC.fromArray(uvs, c * 2);\n          vB.sub(vA);\n          vC.sub(vA);\n          uvB.sub(uvA);\n          uvC.sub(uvA);\n          var r = 1.0 / (uvB.x * uvC.y - uvC.x * uvB.y); // silently ignore degenerate uv triangles having coincident or colinear vertices\n\n          if (!isFinite(r)) return;\n          sdir.copy(vB).multiplyScalar(uvC.y).addScaledVector(vC, -uvB.y).multiplyScalar(r);\n          tdir.copy(vC).multiplyScalar(uvB.x).addScaledVector(vB, -uvC.x).multiplyScalar(r);\n          tan1[a].add(sdir);\n          tan1[b].add(sdir);\n          tan1[c].add(sdir);\n          tan2[a].add(tdir);\n          tan2[b].add(tdir);\n          tan2[c].add(tdir);\n        }\n\n        var groups = this.groups;\n\n        if (groups.length === 0) {\n          groups = [{\n            start: 0,\n            count: indices.length\n          }];\n        }\n\n        for (var _i47 = 0, il = groups.length; _i47 < il; ++_i47) {\n          var group = groups[_i47];\n          var start = group.start;\n          var count = group.count;\n\n          for (var j = start, jl = start + count; j < jl; j += 3) {\n            handleTriangle(indices[j + 0], indices[j + 1], indices[j + 2]);\n          }\n        }\n\n        var tmp = new Vector3(),\n            tmp2 = new Vector3();\n        var n = new Vector3(),\n            n2 = new Vector3();\n\n        function handleVertex(v) {\n          n.fromArray(normals, v * 3);\n          n2.copy(n);\n          var t = tan1[v]; // Gram-Schmidt orthogonalize\n\n          tmp.copy(t);\n          tmp.sub(n.multiplyScalar(n.dot(t))).normalize(); // Calculate handedness\n\n          tmp2.crossVectors(n2, t);\n          var test = tmp2.dot(tan2[v]);\n          var w = test < 0.0 ? -1.0 : 1.0;\n          tangents[v * 4] = tmp.x;\n          tangents[v * 4 + 1] = tmp.y;\n          tangents[v * 4 + 2] = tmp.z;\n          tangents[v * 4 + 3] = w;\n        }\n\n        for (var _i48 = 0, _il3 = groups.length; _i48 < _il3; ++_i48) {\n          var _group = groups[_i48];\n          var _start2 = _group.start;\n          var _count = _group.count;\n\n          for (var _j = _start2, _jl = _start2 + _count; _j < _jl; _j += 3) {\n            handleVertex(indices[_j + 0]);\n            handleVertex(indices[_j + 1]);\n            handleVertex(indices[_j + 2]);\n          }\n        }\n      }\n    }, {\n      key: \"computeVertexNormals\",\n      value: function computeVertexNormals() {\n        var index = this.index;\n        var positionAttribute = this.getAttribute('position');\n\n        if (positionAttribute !== undefined) {\n          var normalAttribute = this.getAttribute('normal');\n\n          if (normalAttribute === undefined) {\n            normalAttribute = new BufferAttribute(new Float32Array(positionAttribute.count * 3), 3);\n            this.setAttribute('normal', normalAttribute);\n          } else {\n            // reset existing normals to zero\n            for (var _i49 = 0, il = normalAttribute.count; _i49 < il; _i49++) {\n              normalAttribute.setXYZ(_i49, 0, 0, 0);\n            }\n          }\n\n          var pA = new Vector3(),\n              pB = new Vector3(),\n              pC = new Vector3();\n          var nA = new Vector3(),\n              nB = new Vector3(),\n              nC = new Vector3();\n          var cb = new Vector3(),\n              ab = new Vector3(); // indexed elements\n\n          if (index) {\n            for (var _i50 = 0, _il4 = index.count; _i50 < _il4; _i50 += 3) {\n              var vA = index.getX(_i50 + 0);\n              var vB = index.getX(_i50 + 1);\n              var vC = index.getX(_i50 + 2);\n              pA.fromBufferAttribute(positionAttribute, vA);\n              pB.fromBufferAttribute(positionAttribute, vB);\n              pC.fromBufferAttribute(positionAttribute, vC);\n              cb.subVectors(pC, pB);\n              ab.subVectors(pA, pB);\n              cb.cross(ab);\n              nA.fromBufferAttribute(normalAttribute, vA);\n              nB.fromBufferAttribute(normalAttribute, vB);\n              nC.fromBufferAttribute(normalAttribute, vC);\n              nA.add(cb);\n              nB.add(cb);\n              nC.add(cb);\n              normalAttribute.setXYZ(vA, nA.x, nA.y, nA.z);\n              normalAttribute.setXYZ(vB, nB.x, nB.y, nB.z);\n              normalAttribute.setXYZ(vC, nC.x, nC.y, nC.z);\n            }\n          } else {\n            // non-indexed elements (unconnected triangle soup)\n            for (var _i51 = 0, _il5 = positionAttribute.count; _i51 < _il5; _i51 += 3) {\n              pA.fromBufferAttribute(positionAttribute, _i51 + 0);\n              pB.fromBufferAttribute(positionAttribute, _i51 + 1);\n              pC.fromBufferAttribute(positionAttribute, _i51 + 2);\n              cb.subVectors(pC, pB);\n              ab.subVectors(pA, pB);\n              cb.cross(ab);\n              normalAttribute.setXYZ(_i51 + 0, cb.x, cb.y, cb.z);\n              normalAttribute.setXYZ(_i51 + 1, cb.x, cb.y, cb.z);\n              normalAttribute.setXYZ(_i51 + 2, cb.x, cb.y, cb.z);\n            }\n          }\n\n          this.normalizeNormals();\n          normalAttribute.needsUpdate = true;\n        }\n      }\n    }, {\n      key: \"merge\",\n      value: function merge(geometry, offset) {\n        if (!(geometry && geometry.isBufferGeometry)) {\n          console.error('THREE.BufferGeometry.merge(): geometry not an instance of THREE.BufferGeometry.', geometry);\n          return;\n        }\n\n        if (offset === undefined) {\n          offset = 0;\n          console.warn('THREE.BufferGeometry.merge(): Overwriting original geometry, starting at offset=0. ' + 'Use BufferGeometryUtils.mergeBufferGeometries() for lossless merge.');\n        }\n\n        var attributes = this.attributes;\n\n        for (var key in attributes) {\n          if (geometry.attributes[key] === undefined) continue;\n          var attribute1 = attributes[key];\n          var attributeArray1 = attribute1.array;\n          var attribute2 = geometry.attributes[key];\n          var attributeArray2 = attribute2.array;\n          var attributeOffset = attribute2.itemSize * offset;\n          var length = Math.min(attributeArray2.length, attributeArray1.length - attributeOffset);\n\n          for (var _i52 = 0, j = attributeOffset; _i52 < length; _i52++, j++) {\n            attributeArray1[j] = attributeArray2[_i52];\n          }\n        }\n\n        return this;\n      }\n    }, {\n      key: \"normalizeNormals\",\n      value: function normalizeNormals() {\n        var normals = this.attributes.normal;\n\n        for (var _i53 = 0, il = normals.count; _i53 < il; _i53++) {\n          _vector$8.fromBufferAttribute(normals, _i53);\n\n          _vector$8.normalize();\n\n          normals.setXYZ(_i53, _vector$8.x, _vector$8.y, _vector$8.z);\n        }\n      }\n    }, {\n      key: \"toNonIndexed\",\n      value: function toNonIndexed() {\n        function convertBufferAttribute(attribute, indices) {\n          var array = attribute.array;\n          var itemSize = attribute.itemSize;\n          var normalized = attribute.normalized;\n          var array2 = new array.constructor(indices.length * itemSize);\n          var index = 0,\n              index2 = 0;\n\n          for (var _i54 = 0, l = indices.length; _i54 < l; _i54++) {\n            if (attribute.isInterleavedBufferAttribute) {\n              index = indices[_i54] * attribute.data.stride + attribute.offset;\n            } else {\n              index = indices[_i54] * itemSize;\n            }\n\n            for (var j = 0; j < itemSize; j++) {\n              array2[index2++] = array[index++];\n            }\n          }\n\n          return new BufferAttribute(array2, itemSize, normalized);\n        } //\n\n\n        if (this.index === null) {\n          console.warn('THREE.BufferGeometry.toNonIndexed(): BufferGeometry is already non-indexed.');\n          return this;\n        }\n\n        var geometry2 = new BufferGeometry();\n        var indices = this.index.array;\n        var attributes = this.attributes; // attributes\n\n        for (var name in attributes) {\n          var attribute = attributes[name];\n          var newAttribute = convertBufferAttribute(attribute, indices);\n          geometry2.setAttribute(name, newAttribute);\n        } // morph attributes\n\n\n        var morphAttributes = this.morphAttributes;\n\n        for (var _name in morphAttributes) {\n          var morphArray = [];\n          var morphAttribute = morphAttributes[_name]; // morphAttribute: array of Float32BufferAttributes\n\n          for (var _i55 = 0, il = morphAttribute.length; _i55 < il; _i55++) {\n            var _attribute = morphAttribute[_i55];\n\n            var _newAttribute = convertBufferAttribute(_attribute, indices);\n\n            morphArray.push(_newAttribute);\n          }\n\n          geometry2.morphAttributes[_name] = morphArray;\n        }\n\n        geometry2.morphTargetsRelative = this.morphTargetsRelative; // groups\n\n        var groups = this.groups;\n\n        for (var _i56 = 0, l = groups.length; _i56 < l; _i56++) {\n          var group = groups[_i56];\n          geometry2.addGroup(group.start, group.count, group.materialIndex);\n        }\n\n        return geometry2;\n      }\n    }, {\n      key: \"toJSON\",\n      value: function toJSON() {\n        var data = {\n          metadata: {\n            version: 4.5,\n            type: 'BufferGeometry',\n            generator: 'BufferGeometry.toJSON'\n          }\n        }; // standard BufferGeometry serialization\n\n        data.uuid = this.uuid;\n        data.type = this.type;\n        if (this.name !== '') data.name = this.name;\n        if (Object.keys(this.userData).length > 0) data.userData = this.userData;\n\n        if (this.parameters !== undefined) {\n          var parameters = this.parameters;\n\n          for (var key in parameters) {\n            if (parameters[key] !== undefined) data[key] = parameters[key];\n          }\n\n          return data;\n        } // for simplicity the code assumes attributes are not shared across geometries, see #15811\n\n\n        data.data = {\n          attributes: {}\n        };\n        var index = this.index;\n\n        if (index !== null) {\n          data.data.index = {\n            type: index.array.constructor.name,\n            array: Array.prototype.slice.call(index.array)\n          };\n        }\n\n        var attributes = this.attributes;\n\n        for (var _key in attributes) {\n          var attribute = attributes[_key];\n          data.data.attributes[_key] = attribute.toJSON(data.data);\n        }\n\n        var morphAttributes = {};\n        var hasMorphAttributes = false;\n\n        for (var _key2 in this.morphAttributes) {\n          var attributeArray = this.morphAttributes[_key2];\n          var array = [];\n\n          for (var _i57 = 0, il = attributeArray.length; _i57 < il; _i57++) {\n            var _attribute2 = attributeArray[_i57];\n            array.push(_attribute2.toJSON(data.data));\n          }\n\n          if (array.length > 0) {\n            morphAttributes[_key2] = array;\n            hasMorphAttributes = true;\n          }\n        }\n\n        if (hasMorphAttributes) {\n          data.data.morphAttributes = morphAttributes;\n          data.data.morphTargetsRelative = this.morphTargetsRelative;\n        }\n\n        var groups = this.groups;\n\n        if (groups.length > 0) {\n          data.data.groups = JSON.parse(JSON.stringify(groups));\n        }\n\n        var boundingSphere = this.boundingSphere;\n\n        if (boundingSphere !== null) {\n          data.data.boundingSphere = {\n            center: boundingSphere.center.toArray(),\n            radius: boundingSphere.radius\n          };\n        }\n\n        return data;\n      }\n    }, {\n      key: \"clone\",\n      value: function clone() {\n        return new this.constructor().copy(this);\n      }\n    }, {\n      key: \"copy\",\n      value: function copy(source) {\n        // reset\n        this.index = null;\n        this.attributes = {};\n        this.morphAttributes = {};\n        this.groups = [];\n        this.boundingBox = null;\n        this.boundingSphere = null; // used for storing cloned, shared data\n\n        var data = {}; // name\n\n        this.name = source.name; // index\n\n        var index = source.index;\n\n        if (index !== null) {\n          this.setIndex(index.clone(data));\n        } // attributes\n\n\n        var attributes = source.attributes;\n\n        for (var name in attributes) {\n          var attribute = attributes[name];\n          this.setAttribute(name, attribute.clone(data));\n        } // morph attributes\n\n\n        var morphAttributes = source.morphAttributes;\n\n        for (var _name2 in morphAttributes) {\n          var array = [];\n          var morphAttribute = morphAttributes[_name2]; // morphAttribute: array of Float32BufferAttributes\n\n          for (var _i58 = 0, l = morphAttribute.length; _i58 < l; _i58++) {\n            array.push(morphAttribute[_i58].clone(data));\n          }\n\n          this.morphAttributes[_name2] = array;\n        }\n\n        this.morphTargetsRelative = source.morphTargetsRelative; // groups\n\n        var groups = source.groups;\n\n        for (var _i59 = 0, _l3 = groups.length; _i59 < _l3; _i59++) {\n          var group = groups[_i59];\n          this.addGroup(group.start, group.count, group.materialIndex);\n        } // bounding box\n\n\n        var boundingBox = source.boundingBox;\n\n        if (boundingBox !== null) {\n          this.boundingBox = boundingBox.clone();\n        } // bounding sphere\n\n\n        var boundingSphere = source.boundingSphere;\n\n        if (boundingSphere !== null) {\n          this.boundingSphere = boundingSphere.clone();\n        } // draw range\n\n\n        this.drawRange.start = source.drawRange.start;\n        this.drawRange.count = source.drawRange.count; // user data\n\n        this.userData = source.userData; // geometry generator parameters\n\n        if (source.parameters !== undefined) this.parameters = Object.assign({}, source.parameters);\n        return this;\n      }\n    }, {\n      key: \"dispose\",\n      value: function dispose() {\n        this.dispatchEvent({\n          type: 'dispose'\n        });\n      }\n    }]);\n\n    return BufferGeometry;\n  }(EventDispatcher);\n\n  BufferGeometry.prototype.isBufferGeometry = true;\n\n  var _inverseMatrix$2 = /*@__PURE__*/new Matrix4();\n\n  var _ray$2 = /*@__PURE__*/new Ray();\n\n  var _sphere$3 = /*@__PURE__*/new Sphere();\n\n  var _vA$1 = /*@__PURE__*/new Vector3();\n\n  var _vB$1 = /*@__PURE__*/new Vector3();\n\n  var _vC$1 = /*@__PURE__*/new Vector3();\n\n  var _tempA = /*@__PURE__*/new Vector3();\n\n  var _tempB = /*@__PURE__*/new Vector3();\n\n  var _tempC = /*@__PURE__*/new Vector3();\n\n  var _morphA = /*@__PURE__*/new Vector3();\n\n  var _morphB = /*@__PURE__*/new Vector3();\n\n  var _morphC = /*@__PURE__*/new Vector3();\n\n  var _uvA$1 = /*@__PURE__*/new Vector2();\n\n  var _uvB$1 = /*@__PURE__*/new Vector2();\n\n  var _uvC$1 = /*@__PURE__*/new Vector2();\n\n  var _intersectionPoint = /*@__PURE__*/new Vector3();\n\n  var _intersectionPointWorld = /*@__PURE__*/new Vector3();\n\n  var Mesh = /*#__PURE__*/function (_Object3D) {\n    _inherits(Mesh, _Object3D);\n\n    var _super19 = _createSuper(Mesh);\n\n    function Mesh() {\n      var _this10;\n\n      var geometry = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : new BufferGeometry();\n      var material = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : new MeshBasicMaterial();\n\n      _classCallCheck(this, Mesh);\n\n      _this10 = _super19.call(this);\n      _this10.type = 'Mesh';\n      _this10.geometry = geometry;\n      _this10.material = material;\n\n      _this10.updateMorphTargets();\n\n      return _this10;\n    }\n\n    _createClass(Mesh, [{\n      key: \"copy\",\n      value: function copy(source) {\n        _get(_getPrototypeOf(Mesh.prototype), \"copy\", this).call(this, source);\n\n        if (source.morphTargetInfluences !== undefined) {\n          this.morphTargetInfluences = source.morphTargetInfluences.slice();\n        }\n\n        if (source.morphTargetDictionary !== undefined) {\n          this.morphTargetDictionary = Object.assign({}, source.morphTargetDictionary);\n        }\n\n        this.material = source.material;\n        this.geometry = source.geometry;\n        return this;\n      }\n    }, {\n      key: \"updateMorphTargets\",\n      value: function updateMorphTargets() {\n        var geometry = this.geometry;\n\n        if (geometry.isBufferGeometry) {\n          var morphAttributes = geometry.morphAttributes;\n          var keys = Object.keys(morphAttributes);\n\n          if (keys.length > 0) {\n            var morphAttribute = morphAttributes[keys[0]];\n\n            if (morphAttribute !== undefined) {\n              this.morphTargetInfluences = [];\n              this.morphTargetDictionary = {};\n\n              for (var m = 0, ml = morphAttribute.length; m < ml; m++) {\n                var name = morphAttribute[m].name || String(m);\n                this.morphTargetInfluences.push(0);\n                this.morphTargetDictionary[name] = m;\n              }\n            }\n          }\n        } else {\n          var morphTargets = geometry.morphTargets;\n\n          if (morphTargets !== undefined && morphTargets.length > 0) {\n            console.error('THREE.Mesh.updateMorphTargets() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.');\n          }\n        }\n      }\n    }, {\n      key: \"raycast\",\n      value: function raycast(raycaster, intersects) {\n        var geometry = this.geometry;\n        var material = this.material;\n        var matrixWorld = this.matrixWorld;\n        if (material === undefined) return; // Checking boundingSphere distance to ray\n\n        if (geometry.boundingSphere === null) geometry.computeBoundingSphere();\n\n        _sphere$3.copy(geometry.boundingSphere);\n\n        _sphere$3.applyMatrix4(matrixWorld);\n\n        if (raycaster.ray.intersectsSphere(_sphere$3) === false) return; //\n\n        _inverseMatrix$2.copy(matrixWorld).invert();\n\n        _ray$2.copy(raycaster.ray).applyMatrix4(_inverseMatrix$2); // Check boundingBox before continuing\n\n\n        if (geometry.boundingBox !== null) {\n          if (_ray$2.intersectsBox(geometry.boundingBox) === false) return;\n        }\n\n        var intersection;\n\n        if (geometry.isBufferGeometry) {\n          var index = geometry.index;\n          var position = geometry.attributes.position;\n          var morphPosition = geometry.morphAttributes.position;\n          var morphTargetsRelative = geometry.morphTargetsRelative;\n          var uv = geometry.attributes.uv;\n          var uv2 = geometry.attributes.uv2;\n          var groups = geometry.groups;\n          var drawRange = geometry.drawRange;\n\n          if (index !== null) {\n            // indexed buffer geometry\n            if (Array.isArray(material)) {\n              for (var _i60 = 0, il = groups.length; _i60 < il; _i60++) {\n                var group = groups[_i60];\n                var groupMaterial = material[group.materialIndex];\n                var start = Math.max(group.start, drawRange.start);\n                var end = Math.min(index.count, Math.min(group.start + group.count, drawRange.start + drawRange.count));\n\n                for (var j = start, jl = end; j < jl; j += 3) {\n                  var a = index.getX(j);\n                  var b = index.getX(j + 1);\n                  var c = index.getX(j + 2);\n                  intersection = checkBufferGeometryIntersection(this, groupMaterial, raycaster, _ray$2, position, morphPosition, morphTargetsRelative, uv, uv2, a, b, c);\n\n                  if (intersection) {\n                    intersection.faceIndex = Math.floor(j / 3); // triangle number in indexed buffer semantics\n\n                    intersection.face.materialIndex = group.materialIndex;\n                    intersects.push(intersection);\n                  }\n                }\n              }\n            } else {\n              var _start3 = Math.max(0, drawRange.start);\n\n              var _end2 = Math.min(index.count, drawRange.start + drawRange.count);\n\n              for (var _i61 = _start3, _il6 = _end2; _i61 < _il6; _i61 += 3) {\n                var _a = index.getX(_i61);\n\n                var _b = index.getX(_i61 + 1);\n\n                var _c = index.getX(_i61 + 2);\n\n                intersection = checkBufferGeometryIntersection(this, material, raycaster, _ray$2, position, morphPosition, morphTargetsRelative, uv, uv2, _a, _b, _c);\n\n                if (intersection) {\n                  intersection.faceIndex = Math.floor(_i61 / 3); // triangle number in indexed buffer semantics\n\n                  intersects.push(intersection);\n                }\n              }\n            }\n          } else if (position !== undefined) {\n            // non-indexed buffer geometry\n            if (Array.isArray(material)) {\n              for (var _i62 = 0, _il7 = groups.length; _i62 < _il7; _i62++) {\n                var _group2 = groups[_i62];\n                var _groupMaterial = material[_group2.materialIndex];\n\n                var _start4 = Math.max(_group2.start, drawRange.start);\n\n                var _end3 = Math.min(position.count, Math.min(_group2.start + _group2.count, drawRange.start + drawRange.count));\n\n                for (var _j2 = _start4, _jl2 = _end3; _j2 < _jl2; _j2 += 3) {\n                  var _a2 = _j2;\n\n                  var _b2 = _j2 + 1;\n\n                  var _c2 = _j2 + 2;\n\n                  intersection = checkBufferGeometryIntersection(this, _groupMaterial, raycaster, _ray$2, position, morphPosition, morphTargetsRelative, uv, uv2, _a2, _b2, _c2);\n\n                  if (intersection) {\n                    intersection.faceIndex = Math.floor(_j2 / 3); // triangle number in non-indexed buffer semantics\n\n                    intersection.face.materialIndex = _group2.materialIndex;\n                    intersects.push(intersection);\n                  }\n                }\n              }\n            } else {\n              var _start5 = Math.max(0, drawRange.start);\n\n              var _end4 = Math.min(position.count, drawRange.start + drawRange.count);\n\n              for (var _i63 = _start5, _il8 = _end4; _i63 < _il8; _i63 += 3) {\n                var _a3 = _i63;\n\n                var _b3 = _i63 + 1;\n\n                var _c3 = _i63 + 2;\n\n                intersection = checkBufferGeometryIntersection(this, material, raycaster, _ray$2, position, morphPosition, morphTargetsRelative, uv, uv2, _a3, _b3, _c3);\n\n                if (intersection) {\n                  intersection.faceIndex = Math.floor(_i63 / 3); // triangle number in non-indexed buffer semantics\n\n                  intersects.push(intersection);\n                }\n              }\n            }\n          }\n        } else if (geometry.isGeometry) {\n          console.error('THREE.Mesh.raycast() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.');\n        }\n      }\n    }]);\n\n    return Mesh;\n  }(Object3D);\n\n  Mesh.prototype.isMesh = true;\n\n  function checkIntersection(object, material, raycaster, ray, pA, pB, pC, point) {\n    var intersect;\n\n    if (material.side === BackSide) {\n      intersect = ray.intersectTriangle(pC, pB, pA, true, point);\n    } else {\n      intersect = ray.intersectTriangle(pA, pB, pC, material.side !== DoubleSide, point);\n    }\n\n    if (intersect === null) return null;\n\n    _intersectionPointWorld.copy(point);\n\n    _intersectionPointWorld.applyMatrix4(object.matrixWorld);\n\n    var distance = raycaster.ray.origin.distanceTo(_intersectionPointWorld);\n    if (distance < raycaster.near || distance > raycaster.far) return null;\n    return {\n      distance: distance,\n      point: _intersectionPointWorld.clone(),\n      object: object\n    };\n  }\n\n  function checkBufferGeometryIntersection(object, material, raycaster, ray, position, morphPosition, morphTargetsRelative, uv, uv2, a, b, c) {\n    _vA$1.fromBufferAttribute(position, a);\n\n    _vB$1.fromBufferAttribute(position, b);\n\n    _vC$1.fromBufferAttribute(position, c);\n\n    var morphInfluences = object.morphTargetInfluences;\n\n    if (morphPosition && morphInfluences) {\n      _morphA.set(0, 0, 0);\n\n      _morphB.set(0, 0, 0);\n\n      _morphC.set(0, 0, 0);\n\n      for (var _i64 = 0, il = morphPosition.length; _i64 < il; _i64++) {\n        var influence = morphInfluences[_i64];\n        var morphAttribute = morphPosition[_i64];\n        if (influence === 0) continue;\n\n        _tempA.fromBufferAttribute(morphAttribute, a);\n\n        _tempB.fromBufferAttribute(morphAttribute, b);\n\n        _tempC.fromBufferAttribute(morphAttribute, c);\n\n        if (morphTargetsRelative) {\n          _morphA.addScaledVector(_tempA, influence);\n\n          _morphB.addScaledVector(_tempB, influence);\n\n          _morphC.addScaledVector(_tempC, influence);\n        } else {\n          _morphA.addScaledVector(_tempA.sub(_vA$1), influence);\n\n          _morphB.addScaledVector(_tempB.sub(_vB$1), influence);\n\n          _morphC.addScaledVector(_tempC.sub(_vC$1), influence);\n        }\n      }\n\n      _vA$1.add(_morphA);\n\n      _vB$1.add(_morphB);\n\n      _vC$1.add(_morphC);\n    }\n\n    if (object.isSkinnedMesh) {\n      object.boneTransform(a, _vA$1);\n      object.boneTransform(b, _vB$1);\n      object.boneTransform(c, _vC$1);\n    }\n\n    var intersection = checkIntersection(object, material, raycaster, ray, _vA$1, _vB$1, _vC$1, _intersectionPoint);\n\n    if (intersection) {\n      if (uv) {\n        _uvA$1.fromBufferAttribute(uv, a);\n\n        _uvB$1.fromBufferAttribute(uv, b);\n\n        _uvC$1.fromBufferAttribute(uv, c);\n\n        intersection.uv = Triangle.getUV(_intersectionPoint, _vA$1, _vB$1, _vC$1, _uvA$1, _uvB$1, _uvC$1, new Vector2());\n      }\n\n      if (uv2) {\n        _uvA$1.fromBufferAttribute(uv2, a);\n\n        _uvB$1.fromBufferAttribute(uv2, b);\n\n        _uvC$1.fromBufferAttribute(uv2, c);\n\n        intersection.uv2 = Triangle.getUV(_intersectionPoint, _vA$1, _vB$1, _vC$1, _uvA$1, _uvB$1, _uvC$1, new Vector2());\n      }\n\n      var face = {\n        a: a,\n        b: b,\n        c: c,\n        normal: new Vector3(),\n        materialIndex: 0\n      };\n      Triangle.getNormal(_vA$1, _vB$1, _vC$1, face.normal);\n      intersection.face = face;\n    }\n\n    return intersection;\n  }\n\n  var BoxGeometry = /*#__PURE__*/function (_BufferGeometry) {\n    _inherits(BoxGeometry, _BufferGeometry);\n\n    var _super20 = _createSuper(BoxGeometry);\n\n    function BoxGeometry() {\n      var _this11;\n\n      var width = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n      var height = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n      var depth = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n      var widthSegments = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 1;\n      var heightSegments = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 1;\n      var depthSegments = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : 1;\n\n      _classCallCheck(this, BoxGeometry);\n\n      _this11 = _super20.call(this);\n      _this11.type = 'BoxGeometry';\n      _this11.parameters = {\n        width: width,\n        height: height,\n        depth: depth,\n        widthSegments: widthSegments,\n        heightSegments: heightSegments,\n        depthSegments: depthSegments\n      };\n\n      var scope = _assertThisInitialized(_this11); // segments\n\n\n      widthSegments = Math.floor(widthSegments);\n      heightSegments = Math.floor(heightSegments);\n      depthSegments = Math.floor(depthSegments); // buffers\n\n      var indices = [];\n      var vertices = [];\n      var normals = [];\n      var uvs = []; // helper variables\n\n      var numberOfVertices = 0;\n      var groupStart = 0; // build each side of the box geometry\n\n      buildPlane('z', 'y', 'x', -1, -1, depth, height, width, depthSegments, heightSegments, 0); // px\n\n      buildPlane('z', 'y', 'x', 1, -1, depth, height, -width, depthSegments, heightSegments, 1); // nx\n\n      buildPlane('x', 'z', 'y', 1, 1, width, depth, height, widthSegments, depthSegments, 2); // py\n\n      buildPlane('x', 'z', 'y', 1, -1, width, depth, -height, widthSegments, depthSegments, 3); // ny\n\n      buildPlane('x', 'y', 'z', 1, -1, width, height, depth, widthSegments, heightSegments, 4); // pz\n\n      buildPlane('x', 'y', 'z', -1, -1, width, height, -depth, widthSegments, heightSegments, 5); // nz\n      // build geometry\n\n      _this11.setIndex(indices);\n\n      _this11.setAttribute('position', new Float32BufferAttribute(vertices, 3));\n\n      _this11.setAttribute('normal', new Float32BufferAttribute(normals, 3));\n\n      _this11.setAttribute('uv', new Float32BufferAttribute(uvs, 2));\n\n      function buildPlane(u, v, w, udir, vdir, width, height, depth, gridX, gridY, materialIndex) {\n        var segmentWidth = width / gridX;\n        var segmentHeight = height / gridY;\n        var widthHalf = width / 2;\n        var heightHalf = height / 2;\n        var depthHalf = depth / 2;\n        var gridX1 = gridX + 1;\n        var gridY1 = gridY + 1;\n        var vertexCounter = 0;\n        var groupCount = 0;\n        var vector = new Vector3(); // generate vertices, normals and uvs\n\n        for (var iy = 0; iy < gridY1; iy++) {\n          var y = iy * segmentHeight - heightHalf;\n\n          for (var ix = 0; ix < gridX1; ix++) {\n            var x = ix * segmentWidth - widthHalf; // set values to correct vector component\n\n            vector[u] = x * udir;\n            vector[v] = y * vdir;\n            vector[w] = depthHalf; // now apply vector to vertex buffer\n\n            vertices.push(vector.x, vector.y, vector.z); // set values to correct vector component\n\n            vector[u] = 0;\n            vector[v] = 0;\n            vector[w] = depth > 0 ? 1 : -1; // now apply vector to normal buffer\n\n            normals.push(vector.x, vector.y, vector.z); // uvs\n\n            uvs.push(ix / gridX);\n            uvs.push(1 - iy / gridY); // counters\n\n            vertexCounter += 1;\n          }\n        } // indices\n        // 1. you need three indices to draw a single face\n        // 2. a single segment consists of two faces\n        // 3. so we need to generate six (2*3) indices per segment\n\n\n        for (var _iy = 0; _iy < gridY; _iy++) {\n          for (var _ix = 0; _ix < gridX; _ix++) {\n            var a = numberOfVertices + _ix + gridX1 * _iy;\n            var b = numberOfVertices + _ix + gridX1 * (_iy + 1);\n            var c = numberOfVertices + (_ix + 1) + gridX1 * (_iy + 1);\n            var d = numberOfVertices + (_ix + 1) + gridX1 * _iy; // faces\n\n            indices.push(a, b, d);\n            indices.push(b, c, d); // increase counter\n\n            groupCount += 6;\n          }\n        } // add a group to the geometry. this will ensure multi material support\n\n\n        scope.addGroup(groupStart, groupCount, materialIndex); // calculate new start value for groups\n\n        groupStart += groupCount; // update total number of vertices\n\n        numberOfVertices += vertexCounter;\n      }\n\n      return _this11;\n    }\n\n    _createClass(BoxGeometry, null, [{\n      key: \"fromJSON\",\n      value: function fromJSON(data) {\n        return new BoxGeometry(data.width, data.height, data.depth, data.widthSegments, data.heightSegments, data.depthSegments);\n      }\n    }]);\n\n    return BoxGeometry;\n  }(BufferGeometry);\n  /**\n   * Uniform Utilities\n   */\n\n\n  function cloneUniforms(src) {\n    var dst = {};\n\n    for (var u in src) {\n      dst[u] = {};\n\n      for (var p in src[u]) {\n        var property = src[u][p];\n\n        if (property && (property.isColor || property.isMatrix3 || property.isMatrix4 || property.isVector2 || property.isVector3 || property.isVector4 || property.isTexture || property.isQuaternion)) {\n          dst[u][p] = property.clone();\n        } else if (Array.isArray(property)) {\n          dst[u][p] = property.slice();\n        } else {\n          dst[u][p] = property;\n        }\n      }\n    }\n\n    return dst;\n  }\n\n  function mergeUniforms(uniforms) {\n    var merged = {};\n\n    for (var u = 0; u < uniforms.length; u++) {\n      var _tmp = cloneUniforms(uniforms[u]);\n\n      for (var p in _tmp) {\n        merged[p] = _tmp[p];\n      }\n    }\n\n    return merged;\n  } // Legacy\n\n\n  var UniformsUtils = {\n    clone: cloneUniforms,\n    merge: mergeUniforms\n  };\n  var default_vertex = \"void main() {\\n\\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\\n}\";\n  var default_fragment = \"void main() {\\n\\tgl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );\\n}\";\n  /**\n   * parameters = {\n   *\tdefines: { \"label\" : \"value\" },\n   *\tuniforms: { \"parameter1\": { value: 1.0 }, \"parameter2\": { value2: 2 } },\n   *\n   *\tfragmentShader: <string>,\n   *\tvertexShader: <string>,\n   *\n   *\twireframe: <boolean>,\n   *\twireframeLinewidth: <float>,\n   *\n   *\tlights: <bool>\n   * }\n   */\n\n  var ShaderMaterial = /*#__PURE__*/function (_Material2) {\n    _inherits(ShaderMaterial, _Material2);\n\n    var _super21 = _createSuper(ShaderMaterial);\n\n    function ShaderMaterial(parameters) {\n      var _this12;\n\n      _classCallCheck(this, ShaderMaterial);\n\n      _this12 = _super21.call(this);\n      _this12.type = 'ShaderMaterial';\n      _this12.defines = {};\n      _this12.uniforms = {};\n      _this12.vertexShader = default_vertex;\n      _this12.fragmentShader = default_fragment;\n      _this12.linewidth = 1;\n      _this12.wireframe = false;\n      _this12.wireframeLinewidth = 1;\n      _this12.fog = false; // set to use scene fog\n\n      _this12.lights = false; // set to use scene lights\n\n      _this12.clipping = false; // set to use user-defined clipping planes\n\n      _this12.extensions = {\n        derivatives: false,\n        // set to use derivatives\n        fragDepth: false,\n        // set to use fragment depth values\n        drawBuffers: false,\n        // set to use draw buffers\n        shaderTextureLOD: false // set to use shader texture LOD\n\n      }; // When rendered geometry doesn't include these attributes but the material does,\n      // use these default values in WebGL. This avoids errors when buffer data is missing.\n\n      _this12.defaultAttributeValues = {\n        'color': [1, 1, 1],\n        'uv': [0, 0],\n        'uv2': [0, 0]\n      };\n      _this12.index0AttributeName = undefined;\n      _this12.uniformsNeedUpdate = false;\n      _this12.glslVersion = null;\n\n      if (parameters !== undefined) {\n        if (parameters.attributes !== undefined) {\n          console.error('THREE.ShaderMaterial: attributes should now be defined in THREE.BufferGeometry instead.');\n        }\n\n        _this12.setValues(parameters);\n      }\n\n      return _this12;\n    }\n\n    _createClass(ShaderMaterial, [{\n      key: \"copy\",\n      value: function copy(source) {\n        _get(_getPrototypeOf(ShaderMaterial.prototype), \"copy\", this).call(this, source);\n\n        this.fragmentShader = source.fragmentShader;\n        this.vertexShader = source.vertexShader;\n        this.uniforms = cloneUniforms(source.uniforms);\n        this.defines = Object.assign({}, source.defines);\n        this.wireframe = source.wireframe;\n        this.wireframeLinewidth = source.wireframeLinewidth;\n        this.lights = source.lights;\n        this.clipping = source.clipping;\n        this.extensions = Object.assign({}, source.extensions);\n        this.glslVersion = source.glslVersion;\n        return this;\n      }\n    }, {\n      key: \"toJSON\",\n      value: function toJSON(meta) {\n        var data = _get(_getPrototypeOf(ShaderMaterial.prototype), \"toJSON\", this).call(this, meta);\n\n        data.glslVersion = this.glslVersion;\n        data.uniforms = {};\n\n        for (var name in this.uniforms) {\n          var uniform = this.uniforms[name];\n          var _value = uniform.value;\n\n          if (_value && _value.isTexture) {\n            data.uniforms[name] = {\n              type: 't',\n              value: _value.toJSON(meta).uuid\n            };\n          } else if (_value && _value.isColor) {\n            data.uniforms[name] = {\n              type: 'c',\n              value: _value.getHex()\n            };\n          } else if (_value && _value.isVector2) {\n            data.uniforms[name] = {\n              type: 'v2',\n              value: _value.toArray()\n            };\n          } else if (_value && _value.isVector3) {\n            data.uniforms[name] = {\n              type: 'v3',\n              value: _value.toArray()\n            };\n          } else if (_value && _value.isVector4) {\n            data.uniforms[name] = {\n              type: 'v4',\n              value: _value.toArray()\n            };\n          } else if (_value && _value.isMatrix3) {\n            data.uniforms[name] = {\n              type: 'm3',\n              value: _value.toArray()\n            };\n          } else if (_value && _value.isMatrix4) {\n            data.uniforms[name] = {\n              type: 'm4',\n              value: _value.toArray()\n            };\n          } else {\n            data.uniforms[name] = {\n              value: _value\n            }; // note: the array variants v2v, v3v, v4v, m4v and tv are not supported so far\n          }\n        }\n\n        if (Object.keys(this.defines).length > 0) data.defines = this.defines;\n        data.vertexShader = this.vertexShader;\n        data.fragmentShader = this.fragmentShader;\n        var extensions = {};\n\n        for (var key in this.extensions) {\n          if (this.extensions[key] === true) extensions[key] = true;\n        }\n\n        if (Object.keys(extensions).length > 0) data.extensions = extensions;\n        return data;\n      }\n    }]);\n\n    return ShaderMaterial;\n  }(Material);\n\n  ShaderMaterial.prototype.isShaderMaterial = true;\n\n  var Camera = /*#__PURE__*/function (_Object3D2) {\n    _inherits(Camera, _Object3D2);\n\n    var _super22 = _createSuper(Camera);\n\n    function Camera() {\n      var _this13;\n\n      _classCallCheck(this, Camera);\n\n      _this13 = _super22.call(this);\n      _this13.type = 'Camera';\n      _this13.matrixWorldInverse = new Matrix4();\n      _this13.projectionMatrix = new Matrix4();\n      _this13.projectionMatrixInverse = new Matrix4();\n      return _this13;\n    }\n\n    _createClass(Camera, [{\n      key: \"copy\",\n      value: function copy(source, recursive) {\n        _get(_getPrototypeOf(Camera.prototype), \"copy\", this).call(this, source, recursive);\n\n        this.matrixWorldInverse.copy(source.matrixWorldInverse);\n        this.projectionMatrix.copy(source.projectionMatrix);\n        this.projectionMatrixInverse.copy(source.projectionMatrixInverse);\n        return this;\n      }\n    }, {\n      key: \"getWorldDirection\",\n      value: function getWorldDirection(target) {\n        this.updateWorldMatrix(true, false);\n        var e = this.matrixWorld.elements;\n        return target.set(-e[8], -e[9], -e[10]).normalize();\n      }\n    }, {\n      key: \"updateMatrixWorld\",\n      value: function updateMatrixWorld(force) {\n        _get(_getPrototypeOf(Camera.prototype), \"updateMatrixWorld\", this).call(this, force);\n\n        this.matrixWorldInverse.copy(this.matrixWorld).invert();\n      }\n    }, {\n      key: \"updateWorldMatrix\",\n      value: function updateWorldMatrix(updateParents, updateChildren) {\n        _get(_getPrototypeOf(Camera.prototype), \"updateWorldMatrix\", this).call(this, updateParents, updateChildren);\n\n        this.matrixWorldInverse.copy(this.matrixWorld).invert();\n      }\n    }, {\n      key: \"clone\",\n      value: function clone() {\n        return new this.constructor().copy(this);\n      }\n    }]);\n\n    return Camera;\n  }(Object3D);\n\n  Camera.prototype.isCamera = true;\n\n  var PerspectiveCamera = /*#__PURE__*/function (_Camera) {\n    _inherits(PerspectiveCamera, _Camera);\n\n    var _super23 = _createSuper(PerspectiveCamera);\n\n    function PerspectiveCamera() {\n      var _this14;\n\n      var fov = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 50;\n      var aspect = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n      var near = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0.1;\n      var far = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 2000;\n\n      _classCallCheck(this, PerspectiveCamera);\n\n      _this14 = _super23.call(this);\n      _this14.type = 'PerspectiveCamera';\n      _this14.fov = fov;\n      _this14.zoom = 1;\n      _this14.near = near;\n      _this14.far = far;\n      _this14.focus = 10;\n      _this14.aspect = aspect;\n      _this14.view = null;\n      _this14.filmGauge = 35; // width of the film (default in millimeters)\n\n      _this14.filmOffset = 0; // horizontal film offset (same unit as gauge)\n\n      _this14.updateProjectionMatrix();\n\n      return _this14;\n    }\n\n    _createClass(PerspectiveCamera, [{\n      key: \"copy\",\n      value: function copy(source, recursive) {\n        _get(_getPrototypeOf(PerspectiveCamera.prototype), \"copy\", this).call(this, source, recursive);\n\n        this.fov = source.fov;\n        this.zoom = source.zoom;\n        this.near = source.near;\n        this.far = source.far;\n        this.focus = source.focus;\n        this.aspect = source.aspect;\n        this.view = source.view === null ? null : Object.assign({}, source.view);\n        this.filmGauge = source.filmGauge;\n        this.filmOffset = source.filmOffset;\n        return this;\n      }\n      /**\n       * Sets the FOV by focal length in respect to the current .filmGauge.\n       *\n       * The default film gauge is 35, so that the focal length can be specified for\n       * a 35mm (full frame) camera.\n       *\n       * Values for focal length and film gauge must have the same unit.\n       */\n\n    }, {\n      key: \"setFocalLength\",\n      value: function setFocalLength(focalLength) {\n        /** see {@link http://www.bobatkins.com/photography/technical/field_of_view.html} */\n        var vExtentSlope = 0.5 * this.getFilmHeight() / focalLength;\n        this.fov = RAD2DEG * 2 * Math.atan(vExtentSlope);\n        this.updateProjectionMatrix();\n      }\n      /**\n       * Calculates the focal length from the current .fov and .filmGauge.\n       */\n\n    }, {\n      key: \"getFocalLength\",\n      value: function getFocalLength() {\n        var vExtentSlope = Math.tan(DEG2RAD * 0.5 * this.fov);\n        return 0.5 * this.getFilmHeight() / vExtentSlope;\n      }\n    }, {\n      key: \"getEffectiveFOV\",\n      value: function getEffectiveFOV() {\n        return RAD2DEG * 2 * Math.atan(Math.tan(DEG2RAD * 0.5 * this.fov) / this.zoom);\n      }\n    }, {\n      key: \"getFilmWidth\",\n      value: function getFilmWidth() {\n        // film not completely covered in portrait format (aspect < 1)\n        return this.filmGauge * Math.min(this.aspect, 1);\n      }\n    }, {\n      key: \"getFilmHeight\",\n      value: function getFilmHeight() {\n        // film not completely covered in landscape format (aspect > 1)\n        return this.filmGauge / Math.max(this.aspect, 1);\n      }\n      /**\n       * Sets an offset in a larger frustum. This is useful for multi-window or\n       * multi-monitor/multi-machine setups.\n       *\n       * For example, if you have 3x2 monitors and each monitor is 1920x1080 and\n       * the monitors are in grid like this\n       *\n       *\t +---+---+---+\n       *\t | A | B | C |\n       *\t +---+---+---+\n       *\t | D | E | F |\n       *\t +---+---+---+\n       *\n       * then for each monitor you would call it like this\n       *\n       *\t const w = 1920;\n       *\t const h = 1080;\n       *\t const fullWidth = w * 3;\n       *\t const fullHeight = h * 2;\n       *\n       *\t --A--\n       *\t camera.setViewOffset( fullWidth, fullHeight, w * 0, h * 0, w, h );\n       *\t --B--\n       *\t camera.setViewOffset( fullWidth, fullHeight, w * 1, h * 0, w, h );\n       *\t --C--\n       *\t camera.setViewOffset( fullWidth, fullHeight, w * 2, h * 0, w, h );\n       *\t --D--\n       *\t camera.setViewOffset( fullWidth, fullHeight, w * 0, h * 1, w, h );\n       *\t --E--\n       *\t camera.setViewOffset( fullWidth, fullHeight, w * 1, h * 1, w, h );\n       *\t --F--\n       *\t camera.setViewOffset( fullWidth, fullHeight, w * 2, h * 1, w, h );\n       *\n       *\t Note there is no reason monitors have to be the same size or in a grid.\n       */\n\n    }, {\n      key: \"setViewOffset\",\n      value: function setViewOffset(fullWidth, fullHeight, x, y, width, height) {\n        this.aspect = fullWidth / fullHeight;\n\n        if (this.view === null) {\n          this.view = {\n            enabled: true,\n            fullWidth: 1,\n            fullHeight: 1,\n            offsetX: 0,\n            offsetY: 0,\n            width: 1,\n            height: 1\n          };\n        }\n\n        this.view.enabled = true;\n        this.view.fullWidth = fullWidth;\n        this.view.fullHeight = fullHeight;\n        this.view.offsetX = x;\n        this.view.offsetY = y;\n        this.view.width = width;\n        this.view.height = height;\n        this.updateProjectionMatrix();\n      }\n    }, {\n      key: \"clearViewOffset\",\n      value: function clearViewOffset() {\n        if (this.view !== null) {\n          this.view.enabled = false;\n        }\n\n        this.updateProjectionMatrix();\n      }\n    }, {\n      key: \"updateProjectionMatrix\",\n      value: function updateProjectionMatrix() {\n        var near = this.near;\n        var top = near * Math.tan(DEG2RAD * 0.5 * this.fov) / this.zoom;\n        var height = 2 * top;\n        var width = this.aspect * height;\n        var left = -0.5 * width;\n        var view = this.view;\n\n        if (this.view !== null && this.view.enabled) {\n          var fullWidth = view.fullWidth,\n              fullHeight = view.fullHeight;\n          left += view.offsetX * width / fullWidth;\n          top -= view.offsetY * height / fullHeight;\n          width *= view.width / fullWidth;\n          height *= view.height / fullHeight;\n        }\n\n        var skew = this.filmOffset;\n        if (skew !== 0) left += near * skew / this.getFilmWidth();\n        this.projectionMatrix.makePerspective(left, left + width, top, top - height, near, this.far);\n        this.projectionMatrixInverse.copy(this.projectionMatrix).invert();\n      }\n    }, {\n      key: \"toJSON\",\n      value: function toJSON(meta) {\n        var data = _get(_getPrototypeOf(PerspectiveCamera.prototype), \"toJSON\", this).call(this, meta);\n\n        data.object.fov = this.fov;\n        data.object.zoom = this.zoom;\n        data.object.near = this.near;\n        data.object.far = this.far;\n        data.object.focus = this.focus;\n        data.object.aspect = this.aspect;\n        if (this.view !== null) data.object.view = Object.assign({}, this.view);\n        data.object.filmGauge = this.filmGauge;\n        data.object.filmOffset = this.filmOffset;\n        return data;\n      }\n    }]);\n\n    return PerspectiveCamera;\n  }(Camera);\n\n  PerspectiveCamera.prototype.isPerspectiveCamera = true;\n  var fov = 90,\n      aspect = 1;\n\n  var CubeCamera = /*#__PURE__*/function (_Object3D3) {\n    _inherits(CubeCamera, _Object3D3);\n\n    var _super24 = _createSuper(CubeCamera);\n\n    function CubeCamera(near, far, renderTarget) {\n      var _this15;\n\n      _classCallCheck(this, CubeCamera);\n\n      _this15 = _super24.call(this);\n      _this15.type = 'CubeCamera';\n\n      if (renderTarget.isWebGLCubeRenderTarget !== true) {\n        console.error('THREE.CubeCamera: The constructor now expects an instance of WebGLCubeRenderTarget as third parameter.');\n        return _possibleConstructorReturn(_this15);\n      }\n\n      _this15.renderTarget = renderTarget;\n      var cameraPX = new PerspectiveCamera(fov, aspect, near, far);\n      cameraPX.layers = _this15.layers;\n      cameraPX.up.set(0, -1, 0);\n      cameraPX.lookAt(new Vector3(1, 0, 0));\n\n      _this15.add(cameraPX);\n\n      var cameraNX = new PerspectiveCamera(fov, aspect, near, far);\n      cameraNX.layers = _this15.layers;\n      cameraNX.up.set(0, -1, 0);\n      cameraNX.lookAt(new Vector3(-1, 0, 0));\n\n      _this15.add(cameraNX);\n\n      var cameraPY = new PerspectiveCamera(fov, aspect, near, far);\n      cameraPY.layers = _this15.layers;\n      cameraPY.up.set(0, 0, 1);\n      cameraPY.lookAt(new Vector3(0, 1, 0));\n\n      _this15.add(cameraPY);\n\n      var cameraNY = new PerspectiveCamera(fov, aspect, near, far);\n      cameraNY.layers = _this15.layers;\n      cameraNY.up.set(0, 0, -1);\n      cameraNY.lookAt(new Vector3(0, -1, 0));\n\n      _this15.add(cameraNY);\n\n      var cameraPZ = new PerspectiveCamera(fov, aspect, near, far);\n      cameraPZ.layers = _this15.layers;\n      cameraPZ.up.set(0, -1, 0);\n      cameraPZ.lookAt(new Vector3(0, 0, 1));\n\n      _this15.add(cameraPZ);\n\n      var cameraNZ = new PerspectiveCamera(fov, aspect, near, far);\n      cameraNZ.layers = _this15.layers;\n      cameraNZ.up.set(0, -1, 0);\n      cameraNZ.lookAt(new Vector3(0, 0, -1));\n\n      _this15.add(cameraNZ);\n\n      return _this15;\n    }\n\n    _createClass(CubeCamera, [{\n      key: \"update\",\n      value: function update(renderer, scene) {\n        if (this.parent === null) this.updateMatrixWorld();\n        var renderTarget = this.renderTarget;\n\n        var _this$children = _slicedToArray(this.children, 6),\n            cameraPX = _this$children[0],\n            cameraNX = _this$children[1],\n            cameraPY = _this$children[2],\n            cameraNY = _this$children[3],\n            cameraPZ = _this$children[4],\n            cameraNZ = _this$children[5];\n\n        var currentXrEnabled = renderer.xr.enabled;\n        var currentRenderTarget = renderer.getRenderTarget();\n        renderer.xr.enabled = false;\n        var generateMipmaps = renderTarget.texture.generateMipmaps;\n        renderTarget.texture.generateMipmaps = false;\n        renderer.setRenderTarget(renderTarget, 0);\n        renderer.render(scene, cameraPX);\n        renderer.setRenderTarget(renderTarget, 1);\n        renderer.render(scene, cameraNX);\n        renderer.setRenderTarget(renderTarget, 2);\n        renderer.render(scene, cameraPY);\n        renderer.setRenderTarget(renderTarget, 3);\n        renderer.render(scene, cameraNY);\n        renderer.setRenderTarget(renderTarget, 4);\n        renderer.render(scene, cameraPZ);\n        renderTarget.texture.generateMipmaps = generateMipmaps;\n        renderer.setRenderTarget(renderTarget, 5);\n        renderer.render(scene, cameraNZ);\n        renderer.setRenderTarget(currentRenderTarget);\n        renderer.xr.enabled = currentXrEnabled;\n      }\n    }]);\n\n    return CubeCamera;\n  }(Object3D);\n\n  var CubeTexture = /*#__PURE__*/function (_Texture) {\n    _inherits(CubeTexture, _Texture);\n\n    var _super25 = _createSuper(CubeTexture);\n\n    function CubeTexture(images, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding) {\n      var _this16;\n\n      _classCallCheck(this, CubeTexture);\n\n      images = images !== undefined ? images : [];\n      mapping = mapping !== undefined ? mapping : CubeReflectionMapping;\n      _this16 = _super25.call(this, images, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding);\n      _this16.flipY = false;\n      return _this16;\n    }\n\n    _createClass(CubeTexture, [{\n      key: \"images\",\n      get: function get() {\n        return this.image;\n      },\n      set: function set(value) {\n        this.image = value;\n      }\n    }]);\n\n    return CubeTexture;\n  }(Texture);\n\n  CubeTexture.prototype.isCubeTexture = true;\n\n  var WebGLCubeRenderTarget = /*#__PURE__*/function (_WebGLRenderTarget3) {\n    _inherits(WebGLCubeRenderTarget, _WebGLRenderTarget3);\n\n    var _super26 = _createSuper(WebGLCubeRenderTarget);\n\n    function WebGLCubeRenderTarget(size, options, dummy) {\n      var _this17;\n\n      _classCallCheck(this, WebGLCubeRenderTarget);\n\n      if (Number.isInteger(options)) {\n        console.warn('THREE.WebGLCubeRenderTarget: constructor signature is now WebGLCubeRenderTarget( size, options )');\n        options = dummy;\n      }\n\n      _this17 = _super26.call(this, size, size, options);\n      options = options || {}; // By convention -- likely based on the RenderMan spec from the 1990's -- cube maps are specified by WebGL (and three.js)\n      // in a coordinate system in which positive-x is to the right when looking up the positive-z axis -- in other words,\n      // in a left-handed coordinate system. By continuing this convention, preexisting cube maps continued to render correctly.\n      // three.js uses a right-handed coordinate system. So environment maps used in three.js appear to have px and nx swapped\n      // and the flag isRenderTargetTexture controls this conversion. The flip is not required when using WebGLCubeRenderTarget.texture\n      // as a cube texture (this is detected when isRenderTargetTexture is set to true for cube textures).\n\n      _this17.texture = new CubeTexture(undefined, options.mapping, options.wrapS, options.wrapT, options.magFilter, options.minFilter, options.format, options.type, options.anisotropy, options.encoding);\n      _this17.texture.isRenderTargetTexture = true;\n      _this17.texture.generateMipmaps = options.generateMipmaps !== undefined ? options.generateMipmaps : false;\n      _this17.texture.minFilter = options.minFilter !== undefined ? options.minFilter : LinearFilter;\n      _this17.texture._needsFlipEnvMap = false;\n      return _this17;\n    }\n\n    _createClass(WebGLCubeRenderTarget, [{\n      key: \"fromEquirectangularTexture\",\n      value: function fromEquirectangularTexture(renderer, texture) {\n        this.texture.type = texture.type;\n        this.texture.format = RGBAFormat; // see #18859\n\n        this.texture.encoding = texture.encoding;\n        this.texture.generateMipmaps = texture.generateMipmaps;\n        this.texture.minFilter = texture.minFilter;\n        this.texture.magFilter = texture.magFilter;\n        var shader = {\n          uniforms: {\n            tEquirect: {\n              value: null\n            }\n          },\n          vertexShader:\n          /* glsl */\n          \"\\n\\n\\t\\t\\t\\tvarying vec3 vWorldDirection;\\n\\n\\t\\t\\t\\tvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\\n\\n\\t\\t\\t\\t\\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\tvoid main() {\\n\\n\\t\\t\\t\\t\\tvWorldDirection = transformDirection( position, modelMatrix );\\n\\n\\t\\t\\t\\t\\t#include <begin_vertex>\\n\\t\\t\\t\\t\\t#include <project_vertex>\\n\\n\\t\\t\\t\\t}\\n\\t\\t\\t\",\n          fragmentShader:\n          /* glsl */\n          \"\\n\\n\\t\\t\\t\\tuniform sampler2D tEquirect;\\n\\n\\t\\t\\t\\tvarying vec3 vWorldDirection;\\n\\n\\t\\t\\t\\t#include <common>\\n\\n\\t\\t\\t\\tvoid main() {\\n\\n\\t\\t\\t\\t\\tvec3 direction = normalize( vWorldDirection );\\n\\n\\t\\t\\t\\t\\tvec2 sampleUV = equirectUv( direction );\\n\\n\\t\\t\\t\\t\\tgl_FragColor = texture2D( tEquirect, sampleUV );\\n\\n\\t\\t\\t\\t}\\n\\t\\t\\t\"\n        };\n        var geometry = new BoxGeometry(5, 5, 5);\n        var material = new ShaderMaterial({\n          name: 'CubemapFromEquirect',\n          uniforms: cloneUniforms(shader.uniforms),\n          vertexShader: shader.vertexShader,\n          fragmentShader: shader.fragmentShader,\n          side: BackSide,\n          blending: NoBlending\n        });\n        material.uniforms.tEquirect.value = texture;\n        var mesh = new Mesh(geometry, material);\n        var currentMinFilter = texture.minFilter; // Avoid blurred poles\n\n        if (texture.minFilter === LinearMipmapLinearFilter) texture.minFilter = LinearFilter;\n        var camera = new CubeCamera(1, 10, this);\n        camera.update(renderer, mesh);\n        texture.minFilter = currentMinFilter;\n        mesh.geometry.dispose();\n        mesh.material.dispose();\n        return this;\n      }\n    }, {\n      key: \"clear\",\n      value: function clear(renderer, color, depth, stencil) {\n        var currentRenderTarget = renderer.getRenderTarget();\n\n        for (var _i65 = 0; _i65 < 6; _i65++) {\n          renderer.setRenderTarget(this, _i65);\n          renderer.clear(color, depth, stencil);\n        }\n\n        renderer.setRenderTarget(currentRenderTarget);\n      }\n    }]);\n\n    return WebGLCubeRenderTarget;\n  }(WebGLRenderTarget);\n\n  WebGLCubeRenderTarget.prototype.isWebGLCubeRenderTarget = true;\n\n  var _vector1 = /*@__PURE__*/new Vector3();\n\n  var _vector2 = /*@__PURE__*/new Vector3();\n\n  var _normalMatrix = /*@__PURE__*/new Matrix3();\n\n  var Plane = /*#__PURE__*/function () {\n    function Plane() {\n      var normal = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : new Vector3(1, 0, 0);\n      var constant = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n\n      _classCallCheck(this, Plane);\n\n      // normal is assumed to be normalized\n      this.normal = normal;\n      this.constant = constant;\n    }\n\n    _createClass(Plane, [{\n      key: \"set\",\n      value: function set(normal, constant) {\n        this.normal.copy(normal);\n        this.constant = constant;\n        return this;\n      }\n    }, {\n      key: \"setComponents\",\n      value: function setComponents(x, y, z, w) {\n        this.normal.set(x, y, z);\n        this.constant = w;\n        return this;\n      }\n    }, {\n      key: \"setFromNormalAndCoplanarPoint\",\n      value: function setFromNormalAndCoplanarPoint(normal, point) {\n        this.normal.copy(normal);\n        this.constant = -point.dot(this.normal);\n        return this;\n      }\n    }, {\n      key: \"setFromCoplanarPoints\",\n      value: function setFromCoplanarPoints(a, b, c) {\n        var normal = _vector1.subVectors(c, b).cross(_vector2.subVectors(a, b)).normalize(); // Q: should an error be thrown if normal is zero (e.g. degenerate plane)?\n\n\n        this.setFromNormalAndCoplanarPoint(normal, a);\n        return this;\n      }\n    }, {\n      key: \"copy\",\n      value: function copy(plane) {\n        this.normal.copy(plane.normal);\n        this.constant = plane.constant;\n        return this;\n      }\n    }, {\n      key: \"normalize\",\n      value: function normalize() {\n        // Note: will lead to a divide by zero if the plane is invalid.\n        var inverseNormalLength = 1.0 / this.normal.length();\n        this.normal.multiplyScalar(inverseNormalLength);\n        this.constant *= inverseNormalLength;\n        return this;\n      }\n    }, {\n      key: \"negate\",\n      value: function negate() {\n        this.constant *= -1;\n        this.normal.negate();\n        return this;\n      }\n    }, {\n      key: \"distanceToPoint\",\n      value: function distanceToPoint(point) {\n        return this.normal.dot(point) + this.constant;\n      }\n    }, {\n      key: \"distanceToSphere\",\n      value: function distanceToSphere(sphere) {\n        return this.distanceToPoint(sphere.center) - sphere.radius;\n      }\n    }, {\n      key: \"projectPoint\",\n      value: function projectPoint(point, target) {\n        return target.copy(this.normal).multiplyScalar(-this.distanceToPoint(point)).add(point);\n      }\n    }, {\n      key: \"intersectLine\",\n      value: function intersectLine(line, target) {\n        var direction = line.delta(_vector1);\n        var denominator = this.normal.dot(direction);\n\n        if (denominator === 0) {\n          // line is coplanar, return origin\n          if (this.distanceToPoint(line.start) === 0) {\n            return target.copy(line.start);\n          } // Unsure if this is the correct method to handle this case.\n\n\n          return null;\n        }\n\n        var t = -(line.start.dot(this.normal) + this.constant) / denominator;\n\n        if (t < 0 || t > 1) {\n          return null;\n        }\n\n        return target.copy(direction).multiplyScalar(t).add(line.start);\n      }\n    }, {\n      key: \"intersectsLine\",\n      value: function intersectsLine(line) {\n        // Note: this tests if a line intersects the plane, not whether it (or its end-points) are coplanar with it.\n        var startSign = this.distanceToPoint(line.start);\n        var endSign = this.distanceToPoint(line.end);\n        return startSign < 0 && endSign > 0 || endSign < 0 && startSign > 0;\n      }\n    }, {\n      key: \"intersectsBox\",\n      value: function intersectsBox(box) {\n        return box.intersectsPlane(this);\n      }\n    }, {\n      key: \"intersectsSphere\",\n      value: function intersectsSphere(sphere) {\n        return sphere.intersectsPlane(this);\n      }\n    }, {\n      key: \"coplanarPoint\",\n      value: function coplanarPoint(target) {\n        return target.copy(this.normal).multiplyScalar(-this.constant);\n      }\n    }, {\n      key: \"applyMatrix4\",\n      value: function applyMatrix4(matrix, optionalNormalMatrix) {\n        var normalMatrix = optionalNormalMatrix || _normalMatrix.getNormalMatrix(matrix);\n\n        var referencePoint = this.coplanarPoint(_vector1).applyMatrix4(matrix);\n        var normal = this.normal.applyMatrix3(normalMatrix).normalize();\n        this.constant = -referencePoint.dot(normal);\n        return this;\n      }\n    }, {\n      key: \"translate\",\n      value: function translate(offset) {\n        this.constant -= offset.dot(this.normal);\n        return this;\n      }\n    }, {\n      key: \"equals\",\n      value: function equals(plane) {\n        return plane.normal.equals(this.normal) && plane.constant === this.constant;\n      }\n    }, {\n      key: \"clone\",\n      value: function clone() {\n        return new this.constructor().copy(this);\n      }\n    }]);\n\n    return Plane;\n  }();\n\n  Plane.prototype.isPlane = true;\n\n  var _sphere$2 = /*@__PURE__*/new Sphere();\n\n  var _vector$7 = /*@__PURE__*/new Vector3();\n\n  var Frustum = /*#__PURE__*/function () {\n    function Frustum() {\n      var p0 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : new Plane();\n      var p1 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : new Plane();\n      var p2 = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : new Plane();\n      var p3 = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : new Plane();\n      var p4 = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : new Plane();\n      var p5 = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : new Plane();\n\n      _classCallCheck(this, Frustum);\n\n      this.planes = [p0, p1, p2, p3, p4, p5];\n    }\n\n    _createClass(Frustum, [{\n      key: \"set\",\n      value: function set(p0, p1, p2, p3, p4, p5) {\n        var planes = this.planes;\n        planes[0].copy(p0);\n        planes[1].copy(p1);\n        planes[2].copy(p2);\n        planes[3].copy(p3);\n        planes[4].copy(p4);\n        planes[5].copy(p5);\n        return this;\n      }\n    }, {\n      key: \"copy\",\n      value: function copy(frustum) {\n        var planes = this.planes;\n\n        for (var _i66 = 0; _i66 < 6; _i66++) {\n          planes[_i66].copy(frustum.planes[_i66]);\n        }\n\n        return this;\n      }\n    }, {\n      key: \"setFromProjectionMatrix\",\n      value: function setFromProjectionMatrix(m) {\n        var planes = this.planes;\n        var me = m.elements;\n        var me0 = me[0],\n            me1 = me[1],\n            me2 = me[2],\n            me3 = me[3];\n        var me4 = me[4],\n            me5 = me[5],\n            me6 = me[6],\n            me7 = me[7];\n        var me8 = me[8],\n            me9 = me[9],\n            me10 = me[10],\n            me11 = me[11];\n        var me12 = me[12],\n            me13 = me[13],\n            me14 = me[14],\n            me15 = me[15];\n        planes[0].setComponents(me3 - me0, me7 - me4, me11 - me8, me15 - me12).normalize();\n        planes[1].setComponents(me3 + me0, me7 + me4, me11 + me8, me15 + me12).normalize();\n        planes[2].setComponents(me3 + me1, me7 + me5, me11 + me9, me15 + me13).normalize();\n        planes[3].setComponents(me3 - me1, me7 - me5, me11 - me9, me15 - me13).normalize();\n        planes[4].setComponents(me3 - me2, me7 - me6, me11 - me10, me15 - me14).normalize();\n        planes[5].setComponents(me3 + me2, me7 + me6, me11 + me10, me15 + me14).normalize();\n        return this;\n      }\n    }, {\n      key: \"intersectsObject\",\n      value: function intersectsObject(object) {\n        var geometry = object.geometry;\n        if (geometry.boundingSphere === null) geometry.computeBoundingSphere();\n\n        _sphere$2.copy(geometry.boundingSphere).applyMatrix4(object.matrixWorld);\n\n        return this.intersectsSphere(_sphere$2);\n      }\n    }, {\n      key: \"intersectsSprite\",\n      value: function intersectsSprite(sprite) {\n        _sphere$2.center.set(0, 0, 0);\n\n        _sphere$2.radius = 0.7071067811865476;\n\n        _sphere$2.applyMatrix4(sprite.matrixWorld);\n\n        return this.intersectsSphere(_sphere$2);\n      }\n    }, {\n      key: \"intersectsSphere\",\n      value: function intersectsSphere(sphere) {\n        var planes = this.planes;\n        var center = sphere.center;\n        var negRadius = -sphere.radius;\n\n        for (var _i67 = 0; _i67 < 6; _i67++) {\n          var distance = planes[_i67].distanceToPoint(center);\n\n          if (distance < negRadius) {\n            return false;\n          }\n        }\n\n        return true;\n      }\n    }, {\n      key: \"intersectsBox\",\n      value: function intersectsBox(box) {\n        var planes = this.planes;\n\n        for (var _i68 = 0; _i68 < 6; _i68++) {\n          var plane = planes[_i68]; // corner at max distance\n\n          _vector$7.x = plane.normal.x > 0 ? box.max.x : box.min.x;\n          _vector$7.y = plane.normal.y > 0 ? box.max.y : box.min.y;\n          _vector$7.z = plane.normal.z > 0 ? box.max.z : box.min.z;\n\n          if (plane.distanceToPoint(_vector$7) < 0) {\n            return false;\n          }\n        }\n\n        return true;\n      }\n    }, {\n      key: \"containsPoint\",\n      value: function containsPoint(point) {\n        var planes = this.planes;\n\n        for (var _i69 = 0; _i69 < 6; _i69++) {\n          if (planes[_i69].distanceToPoint(point) < 0) {\n            return false;\n          }\n        }\n\n        return true;\n      }\n    }, {\n      key: \"clone\",\n      value: function clone() {\n        return new this.constructor().copy(this);\n      }\n    }]);\n\n    return Frustum;\n  }();\n\n  function WebGLAnimation() {\n    var context = null;\n    var isAnimating = false;\n    var animationLoop = null;\n    var requestId = null;\n\n    function onAnimationFrame(time, frame) {\n      animationLoop(time, frame);\n      requestId = context.requestAnimationFrame(onAnimationFrame);\n    }\n\n    return {\n      start: function start() {\n        if (isAnimating === true) return;\n        if (animationLoop === null) return;\n        requestId = context.requestAnimationFrame(onAnimationFrame);\n        isAnimating = true;\n      },\n      stop: function stop() {\n        context.cancelAnimationFrame(requestId);\n        isAnimating = false;\n      },\n      setAnimationLoop: function setAnimationLoop(callback) {\n        animationLoop = callback;\n      },\n      setContext: function setContext(value) {\n        context = value;\n      }\n    };\n  }\n\n  function WebGLAttributes(gl, capabilities) {\n    var isWebGL2 = capabilities.isWebGL2;\n    var buffers = new WeakMap();\n\n    function createBuffer(attribute, bufferType) {\n      var array = attribute.array;\n      var usage = attribute.usage;\n      var buffer = gl.createBuffer();\n      gl.bindBuffer(bufferType, buffer);\n      gl.bufferData(bufferType, array, usage);\n      attribute.onUploadCallback();\n      var type = gl.FLOAT;\n\n      if (array instanceof Float32Array) {\n        type = gl.FLOAT;\n      } else if (array instanceof Float64Array) {\n        console.warn('THREE.WebGLAttributes: Unsupported data buffer format: Float64Array.');\n      } else if (array instanceof Uint16Array) {\n        if (attribute.isFloat16BufferAttribute) {\n          if (isWebGL2) {\n            type = gl.HALF_FLOAT;\n          } else {\n            console.warn('THREE.WebGLAttributes: Usage of Float16BufferAttribute requires WebGL2.');\n          }\n        } else {\n          type = gl.UNSIGNED_SHORT;\n        }\n      } else if (array instanceof Int16Array) {\n        type = gl.SHORT;\n      } else if (array instanceof Uint32Array) {\n        type = gl.UNSIGNED_INT;\n      } else if (array instanceof Int32Array) {\n        type = gl.INT;\n      } else if (array instanceof Int8Array) {\n        type = gl.BYTE;\n      } else if (array instanceof Uint8Array) {\n        type = gl.UNSIGNED_BYTE;\n      } else if (array instanceof Uint8ClampedArray) {\n        type = gl.UNSIGNED_BYTE;\n      }\n\n      return {\n        buffer: buffer,\n        type: type,\n        bytesPerElement: array.BYTES_PER_ELEMENT,\n        version: attribute.version\n      };\n    }\n\n    function updateBuffer(buffer, attribute, bufferType) {\n      var array = attribute.array;\n      var updateRange = attribute.updateRange;\n      gl.bindBuffer(bufferType, buffer);\n\n      if (updateRange.count === -1) {\n        // Not using update ranges\n        gl.bufferSubData(bufferType, 0, array);\n      } else {\n        if (isWebGL2) {\n          gl.bufferSubData(bufferType, updateRange.offset * array.BYTES_PER_ELEMENT, array, updateRange.offset, updateRange.count);\n        } else {\n          gl.bufferSubData(bufferType, updateRange.offset * array.BYTES_PER_ELEMENT, array.subarray(updateRange.offset, updateRange.offset + updateRange.count));\n        }\n\n        updateRange.count = -1; // reset range\n      }\n    } //\n\n\n    function get(attribute) {\n      if (attribute.isInterleavedBufferAttribute) attribute = attribute.data;\n      return buffers.get(attribute);\n    }\n\n    function remove(attribute) {\n      if (attribute.isInterleavedBufferAttribute) attribute = attribute.data;\n      var data = buffers.get(attribute);\n\n      if (data) {\n        gl.deleteBuffer(data.buffer);\n        buffers.delete(attribute);\n      }\n    }\n\n    function update(attribute, bufferType) {\n      if (attribute.isGLBufferAttribute) {\n        var cached = buffers.get(attribute);\n\n        if (!cached || cached.version < attribute.version) {\n          buffers.set(attribute, {\n            buffer: attribute.buffer,\n            type: attribute.type,\n            bytesPerElement: attribute.elementSize,\n            version: attribute.version\n          });\n        }\n\n        return;\n      }\n\n      if (attribute.isInterleavedBufferAttribute) attribute = attribute.data;\n      var data = buffers.get(attribute);\n\n      if (data === undefined) {\n        buffers.set(attribute, createBuffer(attribute, bufferType));\n      } else if (data.version < attribute.version) {\n        updateBuffer(data.buffer, attribute, bufferType);\n        data.version = attribute.version;\n      }\n    }\n\n    return {\n      get: get,\n      remove: remove,\n      update: update\n    };\n  }\n\n  var PlaneGeometry = /*#__PURE__*/function (_BufferGeometry2) {\n    _inherits(PlaneGeometry, _BufferGeometry2);\n\n    var _super27 = _createSuper(PlaneGeometry);\n\n    function PlaneGeometry() {\n      var _this18;\n\n      var width = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n      var height = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n      var widthSegments = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n      var heightSegments = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 1;\n\n      _classCallCheck(this, PlaneGeometry);\n\n      _this18 = _super27.call(this);\n      _this18.type = 'PlaneGeometry';\n      _this18.parameters = {\n        width: width,\n        height: height,\n        widthSegments: widthSegments,\n        heightSegments: heightSegments\n      };\n      var width_half = width / 2;\n      var height_half = height / 2;\n      var gridX = Math.floor(widthSegments);\n      var gridY = Math.floor(heightSegments);\n      var gridX1 = gridX + 1;\n      var gridY1 = gridY + 1;\n      var segment_width = width / gridX;\n      var segment_height = height / gridY; //\n\n      var indices = [];\n      var vertices = [];\n      var normals = [];\n      var uvs = [];\n\n      for (var iy = 0; iy < gridY1; iy++) {\n        var y = iy * segment_height - height_half;\n\n        for (var ix = 0; ix < gridX1; ix++) {\n          var x = ix * segment_width - width_half;\n          vertices.push(x, -y, 0);\n          normals.push(0, 0, 1);\n          uvs.push(ix / gridX);\n          uvs.push(1 - iy / gridY);\n        }\n      }\n\n      for (var _iy2 = 0; _iy2 < gridY; _iy2++) {\n        for (var _ix2 = 0; _ix2 < gridX; _ix2++) {\n          var a = _ix2 + gridX1 * _iy2;\n          var b = _ix2 + gridX1 * (_iy2 + 1);\n          var c = _ix2 + 1 + gridX1 * (_iy2 + 1);\n          var d = _ix2 + 1 + gridX1 * _iy2;\n          indices.push(a, b, d);\n          indices.push(b, c, d);\n        }\n      }\n\n      _this18.setIndex(indices);\n\n      _this18.setAttribute('position', new Float32BufferAttribute(vertices, 3));\n\n      _this18.setAttribute('normal', new Float32BufferAttribute(normals, 3));\n\n      _this18.setAttribute('uv', new Float32BufferAttribute(uvs, 2));\n\n      return _this18;\n    }\n\n    _createClass(PlaneGeometry, null, [{\n      key: \"fromJSON\",\n      value: function fromJSON(data) {\n        return new PlaneGeometry(data.width, data.height, data.widthSegments, data.heightSegments);\n      }\n    }]);\n\n    return PlaneGeometry;\n  }(BufferGeometry);\n\n  var alphamap_fragment = \"#ifdef USE_ALPHAMAP\\n\\tdiffuseColor.a *= texture2D( alphaMap, vUv ).g;\\n#endif\";\n  var alphamap_pars_fragment = \"#ifdef USE_ALPHAMAP\\n\\tuniform sampler2D alphaMap;\\n#endif\";\n  var alphatest_fragment = \"#ifdef USE_ALPHATEST\\n\\tif ( diffuseColor.a < alphaTest ) discard;\\n#endif\";\n  var alphatest_pars_fragment = \"#ifdef USE_ALPHATEST\\n\\tuniform float alphaTest;\\n#endif\";\n  var aomap_fragment = \"#ifdef USE_AOMAP\\n\\tfloat ambientOcclusion = ( texture2D( aoMap, vUv2 ).r - 1.0 ) * aoMapIntensity + 1.0;\\n\\treflectedLight.indirectDiffuse *= ambientOcclusion;\\n\\t#if defined( USE_ENVMAP ) && defined( STANDARD )\\n\\t\\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\\n\\t\\treflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.roughness );\\n\\t#endif\\n#endif\";\n  var aomap_pars_fragment = \"#ifdef USE_AOMAP\\n\\tuniform sampler2D aoMap;\\n\\tuniform float aoMapIntensity;\\n#endif\";\n  var begin_vertex = \"vec3 transformed = vec3( position );\";\n  var beginnormal_vertex = \"vec3 objectNormal = vec3( normal );\\n#ifdef USE_TANGENT\\n\\tvec3 objectTangent = vec3( tangent.xyz );\\n#endif\";\n  var bsdfs = \"vec3 BRDF_Lambert( const in vec3 diffuseColor ) {\\n\\treturn RECIPROCAL_PI * diffuseColor;\\n}\\nvec3 F_Schlick( const in vec3 f0, const in float f90, const in float dotVH ) {\\n\\tfloat fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );\\n\\treturn f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );\\n}\\nfloat V_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {\\n\\tfloat a2 = pow2( alpha );\\n\\tfloat gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\\n\\tfloat gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\\n\\treturn 0.5 / max( gv + gl, EPSILON );\\n}\\nfloat D_GGX( const in float alpha, const in float dotNH ) {\\n\\tfloat a2 = pow2( alpha );\\n\\tfloat denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;\\n\\treturn RECIPROCAL_PI * a2 / pow2( denom );\\n}\\nvec3 BRDF_GGX( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 f0, const in float f90, const in float roughness ) {\\n\\tfloat alpha = pow2( roughness );\\n\\tvec3 halfDir = normalize( lightDir + viewDir );\\n\\tfloat dotNL = saturate( dot( normal, lightDir ) );\\n\\tfloat dotNV = saturate( dot( normal, viewDir ) );\\n\\tfloat dotNH = saturate( dot( normal, halfDir ) );\\n\\tfloat dotVH = saturate( dot( viewDir, halfDir ) );\\n\\tvec3 F = F_Schlick( f0, f90, dotVH );\\n\\tfloat V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );\\n\\tfloat D = D_GGX( alpha, dotNH );\\n\\treturn F * ( V * D );\\n}\\nvec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {\\n\\tconst float LUT_SIZE = 64.0;\\n\\tconst float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;\\n\\tconst float LUT_BIAS = 0.5 / LUT_SIZE;\\n\\tfloat dotNV = saturate( dot( N, V ) );\\n\\tvec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );\\n\\tuv = uv * LUT_SCALE + LUT_BIAS;\\n\\treturn uv;\\n}\\nfloat LTC_ClippedSphereFormFactor( const in vec3 f ) {\\n\\tfloat l = length( f );\\n\\treturn max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );\\n}\\nvec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {\\n\\tfloat x = dot( v1, v2 );\\n\\tfloat y = abs( x );\\n\\tfloat a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;\\n\\tfloat b = 3.4175940 + ( 4.1616724 + y ) * y;\\n\\tfloat v = a / b;\\n\\tfloat theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;\\n\\treturn cross( v1, v2 ) * theta_sintheta;\\n}\\nvec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {\\n\\tvec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];\\n\\tvec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];\\n\\tvec3 lightNormal = cross( v1, v2 );\\n\\tif( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );\\n\\tvec3 T1, T2;\\n\\tT1 = normalize( V - N * dot( V, N ) );\\n\\tT2 = - cross( N, T1 );\\n\\tmat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );\\n\\tvec3 coords[ 4 ];\\n\\tcoords[ 0 ] = mat * ( rectCoords[ 0 ] - P );\\n\\tcoords[ 1 ] = mat * ( rectCoords[ 1 ] - P );\\n\\tcoords[ 2 ] = mat * ( rectCoords[ 2 ] - P );\\n\\tcoords[ 3 ] = mat * ( rectCoords[ 3 ] - P );\\n\\tcoords[ 0 ] = normalize( coords[ 0 ] );\\n\\tcoords[ 1 ] = normalize( coords[ 1 ] );\\n\\tcoords[ 2 ] = normalize( coords[ 2 ] );\\n\\tcoords[ 3 ] = normalize( coords[ 3 ] );\\n\\tvec3 vectorFormFactor = vec3( 0.0 );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );\\n\\tfloat result = LTC_ClippedSphereFormFactor( vectorFormFactor );\\n\\treturn vec3( result );\\n}\\nfloat G_BlinnPhong_Implicit( ) {\\n\\treturn 0.25;\\n}\\nfloat D_BlinnPhong( const in float shininess, const in float dotNH ) {\\n\\treturn RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );\\n}\\nvec3 BRDF_BlinnPhong( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float shininess ) {\\n\\tvec3 halfDir = normalize( lightDir + viewDir );\\n\\tfloat dotNH = saturate( dot( normal, halfDir ) );\\n\\tfloat dotVH = saturate( dot( viewDir, halfDir ) );\\n\\tvec3 F = F_Schlick( specularColor, 1.0, dotVH );\\n\\tfloat G = G_BlinnPhong_Implicit( );\\n\\tfloat D = D_BlinnPhong( shininess, dotNH );\\n\\treturn F * ( G * D );\\n}\\n#if defined( USE_SHEEN )\\nfloat D_Charlie( float roughness, float dotNH ) {\\n\\tfloat alpha = pow2( roughness );\\n\\tfloat invAlpha = 1.0 / alpha;\\n\\tfloat cos2h = dotNH * dotNH;\\n\\tfloat sin2h = max( 1.0 - cos2h, 0.0078125 );\\n\\treturn ( 2.0 + invAlpha ) * pow( sin2h, invAlpha * 0.5 ) / ( 2.0 * PI );\\n}\\nfloat V_Neubelt( float dotNV, float dotNL ) {\\n\\treturn saturate( 1.0 / ( 4.0 * ( dotNL + dotNV - dotNL * dotNV ) ) );\\n}\\nvec3 BRDF_Sheen( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, vec3 sheenColor, const in float sheenRoughness ) {\\n\\tvec3 halfDir = normalize( lightDir + viewDir );\\n\\tfloat dotNL = saturate( dot( normal, lightDir ) );\\n\\tfloat dotNV = saturate( dot( normal, viewDir ) );\\n\\tfloat dotNH = saturate( dot( normal, halfDir ) );\\n\\tfloat D = D_Charlie( sheenRoughness, dotNH );\\n\\tfloat V = V_Neubelt( dotNV, dotNL );\\n\\treturn sheenColor * ( D * V );\\n}\\n#endif\";\n  var bumpmap_pars_fragment = \"#ifdef USE_BUMPMAP\\n\\tuniform sampler2D bumpMap;\\n\\tuniform float bumpScale;\\n\\tvec2 dHdxy_fwd() {\\n\\t\\tvec2 dSTdx = dFdx( vUv );\\n\\t\\tvec2 dSTdy = dFdy( vUv );\\n\\t\\tfloat Hll = bumpScale * texture2D( bumpMap, vUv ).x;\\n\\t\\tfloat dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;\\n\\t\\tfloat dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;\\n\\t\\treturn vec2( dBx, dBy );\\n\\t}\\n\\tvec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy, float faceDirection ) {\\n\\t\\tvec3 vSigmaX = vec3( dFdx( surf_pos.x ), dFdx( surf_pos.y ), dFdx( surf_pos.z ) );\\n\\t\\tvec3 vSigmaY = vec3( dFdy( surf_pos.x ), dFdy( surf_pos.y ), dFdy( surf_pos.z ) );\\n\\t\\tvec3 vN = surf_norm;\\n\\t\\tvec3 R1 = cross( vSigmaY, vN );\\n\\t\\tvec3 R2 = cross( vN, vSigmaX );\\n\\t\\tfloat fDet = dot( vSigmaX, R1 ) * faceDirection;\\n\\t\\tvec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\\n\\t\\treturn normalize( abs( fDet ) * surf_norm - vGrad );\\n\\t}\\n#endif\";\n  var clipping_planes_fragment = \"#if NUM_CLIPPING_PLANES > 0\\n\\tvec4 plane;\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {\\n\\t\\tplane = clippingPlanes[ i ];\\n\\t\\tif ( dot( vClipPosition, plane.xyz ) > plane.w ) discard;\\n\\t}\\n\\t#pragma unroll_loop_end\\n\\t#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES\\n\\t\\tbool clipped = true;\\n\\t\\t#pragma unroll_loop_start\\n\\t\\tfor ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {\\n\\t\\t\\tplane = clippingPlanes[ i ];\\n\\t\\t\\tclipped = ( dot( vClipPosition, plane.xyz ) > plane.w ) && clipped;\\n\\t\\t}\\n\\t\\t#pragma unroll_loop_end\\n\\t\\tif ( clipped ) discard;\\n\\t#endif\\n#endif\";\n  var clipping_planes_pars_fragment = \"#if NUM_CLIPPING_PLANES > 0\\n\\tvarying vec3 vClipPosition;\\n\\tuniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];\\n#endif\";\n  var clipping_planes_pars_vertex = \"#if NUM_CLIPPING_PLANES > 0\\n\\tvarying vec3 vClipPosition;\\n#endif\";\n  var clipping_planes_vertex = \"#if NUM_CLIPPING_PLANES > 0\\n\\tvClipPosition = - mvPosition.xyz;\\n#endif\";\n  var color_fragment = \"#if defined( USE_COLOR_ALPHA )\\n\\tdiffuseColor *= vColor;\\n#elif defined( USE_COLOR )\\n\\tdiffuseColor.rgb *= vColor;\\n#endif\";\n  var color_pars_fragment = \"#if defined( USE_COLOR_ALPHA )\\n\\tvarying vec4 vColor;\\n#elif defined( USE_COLOR )\\n\\tvarying vec3 vColor;\\n#endif\";\n  var color_pars_vertex = \"#if defined( USE_COLOR_ALPHA )\\n\\tvarying vec4 vColor;\\n#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )\\n\\tvarying vec3 vColor;\\n#endif\";\n  var color_vertex = \"#if defined( USE_COLOR_ALPHA )\\n\\tvColor = vec4( 1.0 );\\n#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )\\n\\tvColor = vec3( 1.0 );\\n#endif\\n#ifdef USE_COLOR\\n\\tvColor *= color;\\n#endif\\n#ifdef USE_INSTANCING_COLOR\\n\\tvColor.xyz *= instanceColor.xyz;\\n#endif\";\n  var common = \"#define PI 3.141592653589793\\n#define PI2 6.283185307179586\\n#define PI_HALF 1.5707963267948966\\n#define RECIPROCAL_PI 0.3183098861837907\\n#define RECIPROCAL_PI2 0.15915494309189535\\n#define EPSILON 1e-6\\n#ifndef saturate\\n#define saturate( a ) clamp( a, 0.0, 1.0 )\\n#endif\\n#define whiteComplement( a ) ( 1.0 - saturate( a ) )\\nfloat pow2( const in float x ) { return x*x; }\\nfloat pow3( const in float x ) { return x*x*x; }\\nfloat pow4( const in float x ) { float x2 = x*x; return x2*x2; }\\nfloat max3( const in vec3 v ) { return max( max( v.x, v.y ), v.z ); }\\nfloat average( const in vec3 color ) { return dot( color, vec3( 0.3333 ) ); }\\nhighp float rand( const in vec2 uv ) {\\n\\tconst highp float a = 12.9898, b = 78.233, c = 43758.5453;\\n\\thighp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );\\n\\treturn fract( sin( sn ) * c );\\n}\\n#ifdef HIGH_PRECISION\\n\\tfloat precisionSafeLength( vec3 v ) { return length( v ); }\\n#else\\n\\tfloat precisionSafeLength( vec3 v ) {\\n\\t\\tfloat maxComponent = max3( abs( v ) );\\n\\t\\treturn length( v / maxComponent ) * maxComponent;\\n\\t}\\n#endif\\nstruct IncidentLight {\\n\\tvec3 color;\\n\\tvec3 direction;\\n\\tbool visible;\\n};\\nstruct ReflectedLight {\\n\\tvec3 directDiffuse;\\n\\tvec3 directSpecular;\\n\\tvec3 indirectDiffuse;\\n\\tvec3 indirectSpecular;\\n};\\nstruct GeometricContext {\\n\\tvec3 position;\\n\\tvec3 normal;\\n\\tvec3 viewDir;\\n#ifdef USE_CLEARCOAT\\n\\tvec3 clearcoatNormal;\\n#endif\\n};\\nvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\\n\\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\\n}\\nvec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {\\n\\treturn normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );\\n}\\nmat3 transposeMat3( const in mat3 m ) {\\n\\tmat3 tmp;\\n\\ttmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );\\n\\ttmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );\\n\\ttmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );\\n\\treturn tmp;\\n}\\nfloat linearToRelativeLuminance( const in vec3 color ) {\\n\\tvec3 weights = vec3( 0.2126, 0.7152, 0.0722 );\\n\\treturn dot( weights, color.rgb );\\n}\\nbool isPerspectiveMatrix( mat4 m ) {\\n\\treturn m[ 2 ][ 3 ] == - 1.0;\\n}\\nvec2 equirectUv( in vec3 dir ) {\\n\\tfloat u = atan( dir.z, dir.x ) * RECIPROCAL_PI2 + 0.5;\\n\\tfloat v = asin( clamp( dir.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\\n\\treturn vec2( u, v );\\n}\";\n  var cube_uv_reflection_fragment = \"#ifdef ENVMAP_TYPE_CUBE_UV\\n\\t#define cubeUV_maxMipLevel 8.0\\n\\t#define cubeUV_minMipLevel 4.0\\n\\t#define cubeUV_maxTileSize 256.0\\n\\t#define cubeUV_minTileSize 16.0\\n\\tfloat getFace( vec3 direction ) {\\n\\t\\tvec3 absDirection = abs( direction );\\n\\t\\tfloat face = - 1.0;\\n\\t\\tif ( absDirection.x > absDirection.z ) {\\n\\t\\t\\tif ( absDirection.x > absDirection.y )\\n\\t\\t\\t\\tface = direction.x > 0.0 ? 0.0 : 3.0;\\n\\t\\t\\telse\\n\\t\\t\\t\\tface = direction.y > 0.0 ? 1.0 : 4.0;\\n\\t\\t} else {\\n\\t\\t\\tif ( absDirection.z > absDirection.y )\\n\\t\\t\\t\\tface = direction.z > 0.0 ? 2.0 : 5.0;\\n\\t\\t\\telse\\n\\t\\t\\t\\tface = direction.y > 0.0 ? 1.0 : 4.0;\\n\\t\\t}\\n\\t\\treturn face;\\n\\t}\\n\\tvec2 getUV( vec3 direction, float face ) {\\n\\t\\tvec2 uv;\\n\\t\\tif ( face == 0.0 ) {\\n\\t\\t\\tuv = vec2( direction.z, direction.y ) / abs( direction.x );\\n\\t\\t} else if ( face == 1.0 ) {\\n\\t\\t\\tuv = vec2( - direction.x, - direction.z ) / abs( direction.y );\\n\\t\\t} else if ( face == 2.0 ) {\\n\\t\\t\\tuv = vec2( - direction.x, direction.y ) / abs( direction.z );\\n\\t\\t} else if ( face == 3.0 ) {\\n\\t\\t\\tuv = vec2( - direction.z, direction.y ) / abs( direction.x );\\n\\t\\t} else if ( face == 4.0 ) {\\n\\t\\t\\tuv = vec2( - direction.x, direction.z ) / abs( direction.y );\\n\\t\\t} else {\\n\\t\\t\\tuv = vec2( direction.x, direction.y ) / abs( direction.z );\\n\\t\\t}\\n\\t\\treturn 0.5 * ( uv + 1.0 );\\n\\t}\\n\\tvec3 bilinearCubeUV( sampler2D envMap, vec3 direction, float mipInt ) {\\n\\t\\tfloat face = getFace( direction );\\n\\t\\tfloat filterInt = max( cubeUV_minMipLevel - mipInt, 0.0 );\\n\\t\\tmipInt = max( mipInt, cubeUV_minMipLevel );\\n\\t\\tfloat faceSize = exp2( mipInt );\\n\\t\\tfloat texelSize = 1.0 / ( 3.0 * cubeUV_maxTileSize );\\n\\t\\tvec2 uv = getUV( direction, face ) * ( faceSize - 1.0 );\\n\\t\\tvec2 f = fract( uv );\\n\\t\\tuv += 0.5 - f;\\n\\t\\tif ( face > 2.0 ) {\\n\\t\\t\\tuv.y += faceSize;\\n\\t\\t\\tface -= 3.0;\\n\\t\\t}\\n\\t\\tuv.x += face * faceSize;\\n\\t\\tif ( mipInt < cubeUV_maxMipLevel ) {\\n\\t\\t\\tuv.y += 2.0 * cubeUV_maxTileSize;\\n\\t\\t}\\n\\t\\tuv.y += filterInt * 2.0 * cubeUV_minTileSize;\\n\\t\\tuv.x += 3.0 * max( 0.0, cubeUV_maxTileSize - 2.0 * faceSize );\\n\\t\\tuv *= texelSize;\\n\\t\\tvec3 tl = envMapTexelToLinear( texture2D( envMap, uv ) ).rgb;\\n\\t\\tuv.x += texelSize;\\n\\t\\tvec3 tr = envMapTexelToLinear( texture2D( envMap, uv ) ).rgb;\\n\\t\\tuv.y += texelSize;\\n\\t\\tvec3 br = envMapTexelToLinear( texture2D( envMap, uv ) ).rgb;\\n\\t\\tuv.x -= texelSize;\\n\\t\\tvec3 bl = envMapTexelToLinear( texture2D( envMap, uv ) ).rgb;\\n\\t\\tvec3 tm = mix( tl, tr, f.x );\\n\\t\\tvec3 bm = mix( bl, br, f.x );\\n\\t\\treturn mix( tm, bm, f.y );\\n\\t}\\n\\t#define r0 1.0\\n\\t#define v0 0.339\\n\\t#define m0 - 2.0\\n\\t#define r1 0.8\\n\\t#define v1 0.276\\n\\t#define m1 - 1.0\\n\\t#define r4 0.4\\n\\t#define v4 0.046\\n\\t#define m4 2.0\\n\\t#define r5 0.305\\n\\t#define v5 0.016\\n\\t#define m5 3.0\\n\\t#define r6 0.21\\n\\t#define v6 0.0038\\n\\t#define m6 4.0\\n\\tfloat roughnessToMip( float roughness ) {\\n\\t\\tfloat mip = 0.0;\\n\\t\\tif ( roughness >= r1 ) {\\n\\t\\t\\tmip = ( r0 - roughness ) * ( m1 - m0 ) / ( r0 - r1 ) + m0;\\n\\t\\t} else if ( roughness >= r4 ) {\\n\\t\\t\\tmip = ( r1 - roughness ) * ( m4 - m1 ) / ( r1 - r4 ) + m1;\\n\\t\\t} else if ( roughness >= r5 ) {\\n\\t\\t\\tmip = ( r4 - roughness ) * ( m5 - m4 ) / ( r4 - r5 ) + m4;\\n\\t\\t} else if ( roughness >= r6 ) {\\n\\t\\t\\tmip = ( r5 - roughness ) * ( m6 - m5 ) / ( r5 - r6 ) + m5;\\n\\t\\t} else {\\n\\t\\t\\tmip = - 2.0 * log2( 1.16 * roughness );\\t\\t}\\n\\t\\treturn mip;\\n\\t}\\n\\tvec4 textureCubeUV( sampler2D envMap, vec3 sampleDir, float roughness ) {\\n\\t\\tfloat mip = clamp( roughnessToMip( roughness ), m0, cubeUV_maxMipLevel );\\n\\t\\tfloat mipF = fract( mip );\\n\\t\\tfloat mipInt = floor( mip );\\n\\t\\tvec3 color0 = bilinearCubeUV( envMap, sampleDir, mipInt );\\n\\t\\tif ( mipF == 0.0 ) {\\n\\t\\t\\treturn vec4( color0, 1.0 );\\n\\t\\t} else {\\n\\t\\t\\tvec3 color1 = bilinearCubeUV( envMap, sampleDir, mipInt + 1.0 );\\n\\t\\t\\treturn vec4( mix( color0, color1, mipF ), 1.0 );\\n\\t\\t}\\n\\t}\\n#endif\";\n  var defaultnormal_vertex = \"vec3 transformedNormal = objectNormal;\\n#ifdef USE_INSTANCING\\n\\tmat3 m = mat3( instanceMatrix );\\n\\ttransformedNormal /= vec3( dot( m[ 0 ], m[ 0 ] ), dot( m[ 1 ], m[ 1 ] ), dot( m[ 2 ], m[ 2 ] ) );\\n\\ttransformedNormal = m * transformedNormal;\\n#endif\\ntransformedNormal = normalMatrix * transformedNormal;\\n#ifdef FLIP_SIDED\\n\\ttransformedNormal = - transformedNormal;\\n#endif\\n#ifdef USE_TANGENT\\n\\tvec3 transformedTangent = ( modelViewMatrix * vec4( objectTangent, 0.0 ) ).xyz;\\n\\t#ifdef FLIP_SIDED\\n\\t\\ttransformedTangent = - transformedTangent;\\n\\t#endif\\n#endif\";\n  var displacementmap_pars_vertex = \"#ifdef USE_DISPLACEMENTMAP\\n\\tuniform sampler2D displacementMap;\\n\\tuniform float displacementScale;\\n\\tuniform float displacementBias;\\n#endif\";\n  var displacementmap_vertex = \"#ifdef USE_DISPLACEMENTMAP\\n\\ttransformed += normalize( objectNormal ) * ( texture2D( displacementMap, vUv ).x * displacementScale + displacementBias );\\n#endif\";\n  var emissivemap_fragment = \"#ifdef USE_EMISSIVEMAP\\n\\tvec4 emissiveColor = texture2D( emissiveMap, vUv );\\n\\temissiveColor.rgb = emissiveMapTexelToLinear( emissiveColor ).rgb;\\n\\ttotalEmissiveRadiance *= emissiveColor.rgb;\\n#endif\";\n  var emissivemap_pars_fragment = \"#ifdef USE_EMISSIVEMAP\\n\\tuniform sampler2D emissiveMap;\\n#endif\";\n  var encodings_fragment = \"gl_FragColor = linearToOutputTexel( gl_FragColor );\";\n  var encodings_pars_fragment = \"\\nvec4 LinearToLinear( in vec4 value ) {\\n\\treturn value;\\n}\\nvec4 GammaToLinear( in vec4 value, in float gammaFactor ) {\\n\\treturn vec4( pow( value.rgb, vec3( gammaFactor ) ), value.a );\\n}\\nvec4 LinearToGamma( in vec4 value, in float gammaFactor ) {\\n\\treturn vec4( pow( value.rgb, vec3( 1.0 / gammaFactor ) ), value.a );\\n}\\nvec4 sRGBToLinear( in vec4 value ) {\\n\\treturn vec4( mix( pow( value.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), value.rgb * 0.0773993808, vec3( lessThanEqual( value.rgb, vec3( 0.04045 ) ) ) ), value.a );\\n}\\nvec4 LinearTosRGB( in vec4 value ) {\\n\\treturn vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );\\n}\\nvec4 RGBEToLinear( in vec4 value ) {\\n\\treturn vec4( value.rgb * exp2( value.a * 255.0 - 128.0 ), 1.0 );\\n}\\nvec4 LinearToRGBE( in vec4 value ) {\\n\\tfloat maxComponent = max( max( value.r, value.g ), value.b );\\n\\tfloat fExp = clamp( ceil( log2( maxComponent ) ), -128.0, 127.0 );\\n\\treturn vec4( value.rgb / exp2( fExp ), ( fExp + 128.0 ) / 255.0 );\\n}\\nvec4 RGBMToLinear( in vec4 value, in float maxRange ) {\\n\\treturn vec4( value.rgb * value.a * maxRange, 1.0 );\\n}\\nvec4 LinearToRGBM( in vec4 value, in float maxRange ) {\\n\\tfloat maxRGB = max( value.r, max( value.g, value.b ) );\\n\\tfloat M = clamp( maxRGB / maxRange, 0.0, 1.0 );\\n\\tM = ceil( M * 255.0 ) / 255.0;\\n\\treturn vec4( value.rgb / ( M * maxRange ), M );\\n}\\nvec4 RGBDToLinear( in vec4 value, in float maxRange ) {\\n\\treturn vec4( value.rgb * ( ( maxRange / 255.0 ) / value.a ), 1.0 );\\n}\\nvec4 LinearToRGBD( in vec4 value, in float maxRange ) {\\n\\tfloat maxRGB = max( value.r, max( value.g, value.b ) );\\n\\tfloat D = max( maxRange / maxRGB, 1.0 );\\n\\tD = clamp( floor( D ) / 255.0, 0.0, 1.0 );\\n\\treturn vec4( value.rgb * ( D * ( 255.0 / maxRange ) ), D );\\n}\\nconst mat3 cLogLuvM = mat3( 0.2209, 0.3390, 0.4184, 0.1138, 0.6780, 0.7319, 0.0102, 0.1130, 0.2969 );\\nvec4 LinearToLogLuv( in vec4 value ) {\\n\\tvec3 Xp_Y_XYZp = cLogLuvM * value.rgb;\\n\\tXp_Y_XYZp = max( Xp_Y_XYZp, vec3( 1e-6, 1e-6, 1e-6 ) );\\n\\tvec4 vResult;\\n\\tvResult.xy = Xp_Y_XYZp.xy / Xp_Y_XYZp.z;\\n\\tfloat Le = 2.0 * log2(Xp_Y_XYZp.y) + 127.0;\\n\\tvResult.w = fract( Le );\\n\\tvResult.z = ( Le - ( floor( vResult.w * 255.0 ) ) / 255.0 ) / 255.0;\\n\\treturn vResult;\\n}\\nconst mat3 cLogLuvInverseM = mat3( 6.0014, -2.7008, -1.7996, -1.3320, 3.1029, -5.7721, 0.3008, -1.0882, 5.6268 );\\nvec4 LogLuvToLinear( in vec4 value ) {\\n\\tfloat Le = value.z * 255.0 + value.w;\\n\\tvec3 Xp_Y_XYZp;\\n\\tXp_Y_XYZp.y = exp2( ( Le - 127.0 ) / 2.0 );\\n\\tXp_Y_XYZp.z = Xp_Y_XYZp.y / value.y;\\n\\tXp_Y_XYZp.x = value.x * Xp_Y_XYZp.z;\\n\\tvec3 vRGB = cLogLuvInverseM * Xp_Y_XYZp.rgb;\\n\\treturn vec4( max( vRGB, 0.0 ), 1.0 );\\n}\";\n  var envmap_fragment = \"#ifdef USE_ENVMAP\\n\\t#ifdef ENV_WORLDPOS\\n\\t\\tvec3 cameraToFrag;\\n\\t\\tif ( isOrthographic ) {\\n\\t\\t\\tcameraToFrag = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\\n\\t\\t} else {\\n\\t\\t\\tcameraToFrag = normalize( vWorldPosition - cameraPosition );\\n\\t\\t}\\n\\t\\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\\n\\t\\t#ifdef ENVMAP_MODE_REFLECTION\\n\\t\\t\\tvec3 reflectVec = reflect( cameraToFrag, worldNormal );\\n\\t\\t#else\\n\\t\\t\\tvec3 reflectVec = refract( cameraToFrag, worldNormal, refractionRatio );\\n\\t\\t#endif\\n\\t#else\\n\\t\\tvec3 reflectVec = vReflect;\\n\\t#endif\\n\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\tvec4 envColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\\n\\t\\tenvColor = envMapTexelToLinear( envColor );\\n\\t#elif defined( ENVMAP_TYPE_CUBE_UV )\\n\\t\\tvec4 envColor = textureCubeUV( envMap, reflectVec, 0.0 );\\n\\t#else\\n\\t\\tvec4 envColor = vec4( 0.0 );\\n\\t#endif\\n\\t#ifdef ENVMAP_BLENDING_MULTIPLY\\n\\t\\toutgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );\\n\\t#elif defined( ENVMAP_BLENDING_MIX )\\n\\t\\toutgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );\\n\\t#elif defined( ENVMAP_BLENDING_ADD )\\n\\t\\toutgoingLight += envColor.xyz * specularStrength * reflectivity;\\n\\t#endif\\n#endif\";\n  var envmap_common_pars_fragment = \"#ifdef USE_ENVMAP\\n\\tuniform float envMapIntensity;\\n\\tuniform float flipEnvMap;\\n\\tuniform int maxMipLevel;\\n\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\tuniform samplerCube envMap;\\n\\t#else\\n\\t\\tuniform sampler2D envMap;\\n\\t#endif\\n\\t\\n#endif\";\n  var envmap_pars_fragment = \"#ifdef USE_ENVMAP\\n\\tuniform float reflectivity;\\n\\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\\n\\t\\t#define ENV_WORLDPOS\\n\\t#endif\\n\\t#ifdef ENV_WORLDPOS\\n\\t\\tvarying vec3 vWorldPosition;\\n\\t\\tuniform float refractionRatio;\\n\\t#else\\n\\t\\tvarying vec3 vReflect;\\n\\t#endif\\n#endif\";\n  var envmap_pars_vertex = \"#ifdef USE_ENVMAP\\n\\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) ||defined( PHONG )\\n\\t\\t#define ENV_WORLDPOS\\n\\t#endif\\n\\t#ifdef ENV_WORLDPOS\\n\\t\\t\\n\\t\\tvarying vec3 vWorldPosition;\\n\\t#else\\n\\t\\tvarying vec3 vReflect;\\n\\t\\tuniform float refractionRatio;\\n\\t#endif\\n#endif\";\n  var envmap_vertex = \"#ifdef USE_ENVMAP\\n\\t#ifdef ENV_WORLDPOS\\n\\t\\tvWorldPosition = worldPosition.xyz;\\n\\t#else\\n\\t\\tvec3 cameraToVertex;\\n\\t\\tif ( isOrthographic ) {\\n\\t\\t\\tcameraToVertex = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\\n\\t\\t} else {\\n\\t\\t\\tcameraToVertex = normalize( worldPosition.xyz - cameraPosition );\\n\\t\\t}\\n\\t\\tvec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\\n\\t\\t#ifdef ENVMAP_MODE_REFLECTION\\n\\t\\t\\tvReflect = reflect( cameraToVertex, worldNormal );\\n\\t\\t#else\\n\\t\\t\\tvReflect = refract( cameraToVertex, worldNormal, refractionRatio );\\n\\t\\t#endif\\n\\t#endif\\n#endif\";\n  var fog_vertex = \"#ifdef USE_FOG\\n\\tvFogDepth = - mvPosition.z;\\n#endif\";\n  var fog_pars_vertex = \"#ifdef USE_FOG\\n\\tvarying float vFogDepth;\\n#endif\";\n  var fog_fragment = \"#ifdef USE_FOG\\n\\t#ifdef FOG_EXP2\\n\\t\\tfloat fogFactor = 1.0 - exp( - fogDensity * fogDensity * vFogDepth * vFogDepth );\\n\\t#else\\n\\t\\tfloat fogFactor = smoothstep( fogNear, fogFar, vFogDepth );\\n\\t#endif\\n\\tgl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );\\n#endif\";\n  var fog_pars_fragment = \"#ifdef USE_FOG\\n\\tuniform vec3 fogColor;\\n\\tvarying float vFogDepth;\\n\\t#ifdef FOG_EXP2\\n\\t\\tuniform float fogDensity;\\n\\t#else\\n\\t\\tuniform float fogNear;\\n\\t\\tuniform float fogFar;\\n\\t#endif\\n#endif\";\n  var gradientmap_pars_fragment = \"#ifdef USE_GRADIENTMAP\\n\\tuniform sampler2D gradientMap;\\n#endif\\nvec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {\\n\\tfloat dotNL = dot( normal, lightDirection );\\n\\tvec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );\\n\\t#ifdef USE_GRADIENTMAP\\n\\t\\treturn texture2D( gradientMap, coord ).rgb;\\n\\t#else\\n\\t\\treturn ( coord.x < 0.7 ) ? vec3( 0.7 ) : vec3( 1.0 );\\n\\t#endif\\n}\";\n  var lightmap_fragment = \"#ifdef USE_LIGHTMAP\\n\\tvec4 lightMapTexel = texture2D( lightMap, vUv2 );\\n\\tvec3 lightMapIrradiance = lightMapTexelToLinear( lightMapTexel ).rgb * lightMapIntensity;\\n\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\tlightMapIrradiance *= PI;\\n\\t#endif\\n\\treflectedLight.indirectDiffuse += lightMapIrradiance;\\n#endif\";\n  var lightmap_pars_fragment = \"#ifdef USE_LIGHTMAP\\n\\tuniform sampler2D lightMap;\\n\\tuniform float lightMapIntensity;\\n#endif\";\n  var lights_lambert_vertex = \"vec3 diffuse = vec3( 1.0 );\\nGeometricContext geometry;\\ngeometry.position = mvPosition.xyz;\\ngeometry.normal = normalize( transformedNormal );\\ngeometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( -mvPosition.xyz );\\nGeometricContext backGeometry;\\nbackGeometry.position = geometry.position;\\nbackGeometry.normal = -geometry.normal;\\nbackGeometry.viewDir = geometry.viewDir;\\nvLightFront = vec3( 0.0 );\\nvIndirectFront = vec3( 0.0 );\\n#ifdef DOUBLE_SIDED\\n\\tvLightBack = vec3( 0.0 );\\n\\tvIndirectBack = vec3( 0.0 );\\n#endif\\nIncidentLight directLight;\\nfloat dotNL;\\nvec3 directLightColor_Diffuse;\\nvIndirectFront += getAmbientLightIrradiance( ambientLightColor );\\nvIndirectFront += getLightProbeIrradiance( lightProbe, geometry.normal );\\n#ifdef DOUBLE_SIDED\\n\\tvIndirectBack += getAmbientLightIrradiance( ambientLightColor );\\n\\tvIndirectBack += getLightProbeIrradiance( lightProbe, backGeometry.normal );\\n#endif\\n#if NUM_POINT_LIGHTS > 0\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\\n\\t\\tgetPointLightInfo( pointLights[ i ], geometry, directLight );\\n\\t\\tdotNL = dot( geometry.normal, directLight.direction );\\n\\t\\tdirectLightColor_Diffuse = directLight.color;\\n\\t\\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\tvLightBack += saturate( - dotNL ) * directLightColor_Diffuse;\\n\\t\\t#endif\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\\n#if NUM_SPOT_LIGHTS > 0\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\\n\\t\\tgetSpotLightInfo( spotLights[ i ], geometry, directLight );\\n\\t\\tdotNL = dot( geometry.normal, directLight.direction );\\n\\t\\tdirectLightColor_Diffuse = directLight.color;\\n\\t\\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\tvLightBack += saturate( - dotNL ) * directLightColor_Diffuse;\\n\\t\\t#endif\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\\n#if NUM_DIR_LIGHTS > 0\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\\n\\t\\tgetDirectionalLightInfo( directionalLights[ i ], geometry, directLight );\\n\\t\\tdotNL = dot( geometry.normal, directLight.direction );\\n\\t\\tdirectLightColor_Diffuse = directLight.color;\\n\\t\\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\tvLightBack += saturate( - dotNL ) * directLightColor_Diffuse;\\n\\t\\t#endif\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\\n#if NUM_HEMI_LIGHTS > 0\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\\n\\t\\tvIndirectFront += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry.normal );\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\tvIndirectBack += getHemisphereLightIrradiance( hemisphereLights[ i ], backGeometry.normal );\\n\\t\\t#endif\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\";\n  var lights_pars_begin = \"uniform bool receiveShadow;\\nuniform vec3 ambientLightColor;\\nuniform vec3 lightProbe[ 9 ];\\nvec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {\\n\\tfloat x = normal.x, y = normal.y, z = normal.z;\\n\\tvec3 result = shCoefficients[ 0 ] * 0.886227;\\n\\tresult += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;\\n\\tresult += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;\\n\\tresult += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;\\n\\tresult += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;\\n\\tresult += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;\\n\\tresult += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );\\n\\tresult += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;\\n\\tresult += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );\\n\\treturn result;\\n}\\nvec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in vec3 normal ) {\\n\\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\\n\\tvec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );\\n\\treturn irradiance;\\n}\\nvec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {\\n\\tvec3 irradiance = ambientLightColor;\\n\\treturn irradiance;\\n}\\nfloat getDistanceAttenuation( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {\\n\\t#if defined ( PHYSICALLY_CORRECT_LIGHTS )\\n\\t\\tfloat distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );\\n\\t\\tif ( cutoffDistance > 0.0 ) {\\n\\t\\t\\tdistanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );\\n\\t\\t}\\n\\t\\treturn distanceFalloff;\\n\\t#else\\n\\t\\tif ( cutoffDistance > 0.0 && decayExponent > 0.0 ) {\\n\\t\\t\\treturn pow( saturate( - lightDistance / cutoffDistance + 1.0 ), decayExponent );\\n\\t\\t}\\n\\t\\treturn 1.0;\\n\\t#endif\\n}\\nfloat getSpotAttenuation( const in float coneCosine, const in float penumbraCosine, const in float angleCosine ) {\\n\\treturn smoothstep( coneCosine, penumbraCosine, angleCosine );\\n}\\n#if NUM_DIR_LIGHTS > 0\\n\\tstruct DirectionalLight {\\n\\t\\tvec3 direction;\\n\\t\\tvec3 color;\\n\\t};\\n\\tuniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];\\n\\tvoid getDirectionalLightInfo( const in DirectionalLight directionalLight, const in GeometricContext geometry, out IncidentLight light ) {\\n\\t\\tlight.color = directionalLight.color;\\n\\t\\tlight.direction = directionalLight.direction;\\n\\t\\tlight.visible = true;\\n\\t}\\n#endif\\n#if NUM_POINT_LIGHTS > 0\\n\\tstruct PointLight {\\n\\t\\tvec3 position;\\n\\t\\tvec3 color;\\n\\t\\tfloat distance;\\n\\t\\tfloat decay;\\n\\t};\\n\\tuniform PointLight pointLights[ NUM_POINT_LIGHTS ];\\n\\tvoid getPointLightInfo( const in PointLight pointLight, const in GeometricContext geometry, out IncidentLight light ) {\\n\\t\\tvec3 lVector = pointLight.position - geometry.position;\\n\\t\\tlight.direction = normalize( lVector );\\n\\t\\tfloat lightDistance = length( lVector );\\n\\t\\tlight.color = pointLight.color;\\n\\t\\tlight.color *= getDistanceAttenuation( lightDistance, pointLight.distance, pointLight.decay );\\n\\t\\tlight.visible = ( light.color != vec3( 0.0 ) );\\n\\t}\\n#endif\\n#if NUM_SPOT_LIGHTS > 0\\n\\tstruct SpotLight {\\n\\t\\tvec3 position;\\n\\t\\tvec3 direction;\\n\\t\\tvec3 color;\\n\\t\\tfloat distance;\\n\\t\\tfloat decay;\\n\\t\\tfloat coneCos;\\n\\t\\tfloat penumbraCos;\\n\\t};\\n\\tuniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];\\n\\tvoid getSpotLightInfo( const in SpotLight spotLight, const in GeometricContext geometry, out IncidentLight light ) {\\n\\t\\tvec3 lVector = spotLight.position - geometry.position;\\n\\t\\tlight.direction = normalize( lVector );\\n\\t\\tfloat angleCos = dot( light.direction, spotLight.direction );\\n\\t\\tfloat spotAttenuation = getSpotAttenuation( spotLight.coneCos, spotLight.penumbraCos, angleCos );\\n\\t\\tif ( spotAttenuation > 0.0 ) {\\n\\t\\t\\tfloat lightDistance = length( lVector );\\n\\t\\t\\tlight.color = spotLight.color * spotAttenuation;\\n\\t\\t\\tlight.color *= getDistanceAttenuation( lightDistance, spotLight.distance, spotLight.decay );\\n\\t\\t\\tlight.visible = ( light.color != vec3( 0.0 ) );\\n\\t\\t} else {\\n\\t\\t\\tlight.color = vec3( 0.0 );\\n\\t\\t\\tlight.visible = false;\\n\\t\\t}\\n\\t}\\n#endif\\n#if NUM_RECT_AREA_LIGHTS > 0\\n\\tstruct RectAreaLight {\\n\\t\\tvec3 color;\\n\\t\\tvec3 position;\\n\\t\\tvec3 halfWidth;\\n\\t\\tvec3 halfHeight;\\n\\t};\\n\\tuniform sampler2D ltc_1;\\tuniform sampler2D ltc_2;\\n\\tuniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];\\n#endif\\n#if NUM_HEMI_LIGHTS > 0\\n\\tstruct HemisphereLight {\\n\\t\\tvec3 direction;\\n\\t\\tvec3 skyColor;\\n\\t\\tvec3 groundColor;\\n\\t};\\n\\tuniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];\\n\\tvec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in vec3 normal ) {\\n\\t\\tfloat dotNL = dot( normal, hemiLight.direction );\\n\\t\\tfloat hemiDiffuseWeight = 0.5 * dotNL + 0.5;\\n\\t\\tvec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );\\n\\t\\treturn irradiance;\\n\\t}\\n#endif\";\n  var envmap_physical_pars_fragment = \"#if defined( USE_ENVMAP )\\n\\t#ifdef ENVMAP_MODE_REFRACTION\\n\\t\\tuniform float refractionRatio;\\n\\t#endif\\n\\tvec3 getIBLIrradiance( const in vec3 normal ) {\\n\\t\\t#if defined( ENVMAP_TYPE_CUBE_UV )\\n\\t\\t\\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\\n\\t\\t\\tvec4 envMapColor = textureCubeUV( envMap, worldNormal, 1.0 );\\n\\t\\t\\treturn PI * envMapColor.rgb * envMapIntensity;\\n\\t\\t#else\\n\\t\\t\\treturn vec3( 0.0 );\\n\\t\\t#endif\\n\\t}\\n\\tvec3 getIBLRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness ) {\\n\\t\\t#if defined( ENVMAP_TYPE_CUBE_UV )\\n\\t\\t\\tvec3 reflectVec;\\n\\t\\t\\t#ifdef ENVMAP_MODE_REFLECTION\\n\\t\\t\\t\\treflectVec = reflect( - viewDir, normal );\\n\\t\\t\\t\\treflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );\\n\\t\\t\\t#else\\n\\t\\t\\t\\treflectVec = refract( - viewDir, normal, refractionRatio );\\n\\t\\t\\t#endif\\n\\t\\t\\treflectVec = inverseTransformDirection( reflectVec, viewMatrix );\\n\\t\\t\\tvec4 envMapColor = textureCubeUV( envMap, reflectVec, roughness );\\n\\t\\t\\treturn envMapColor.rgb * envMapIntensity;\\n\\t\\t#else\\n\\t\\t\\treturn vec3( 0.0 );\\n\\t\\t#endif\\n\\t}\\n#endif\";\n  var lights_toon_fragment = \"ToonMaterial material;\\nmaterial.diffuseColor = diffuseColor.rgb;\";\n  var lights_toon_pars_fragment = \"varying vec3 vViewPosition;\\nstruct ToonMaterial {\\n\\tvec3 diffuseColor;\\n};\\nvoid RE_Direct_Toon( const in IncidentLight directLight, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\\n\\tvec3 irradiance = getGradientIrradiance( geometry.normal, directLight.direction ) * directLight.color;\\n\\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n}\\nvoid RE_IndirectDiffuse_Toon( const in vec3 irradiance, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\\n\\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n}\\n#define RE_Direct\\t\\t\\t\\tRE_Direct_Toon\\n#define RE_IndirectDiffuse\\t\\tRE_IndirectDiffuse_Toon\\n#define Material_LightProbeLOD( material )\\t(0)\";\n  var lights_phong_fragment = \"BlinnPhongMaterial material;\\nmaterial.diffuseColor = diffuseColor.rgb;\\nmaterial.specularColor = specular;\\nmaterial.specularShininess = shininess;\\nmaterial.specularStrength = specularStrength;\";\n  var lights_phong_pars_fragment = \"varying vec3 vViewPosition;\\nstruct BlinnPhongMaterial {\\n\\tvec3 diffuseColor;\\n\\tvec3 specularColor;\\n\\tfloat specularShininess;\\n\\tfloat specularStrength;\\n};\\nvoid RE_Direct_BlinnPhong( const in IncidentLight directLight, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\\n\\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\\n\\tvec3 irradiance = dotNL * directLight.color;\\n\\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n\\treflectedLight.directSpecular += irradiance * BRDF_BlinnPhong( directLight.direction, geometry.viewDir, geometry.normal, material.specularColor, material.specularShininess ) * material.specularStrength;\\n}\\nvoid RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\\n\\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n}\\n#define RE_Direct\\t\\t\\t\\tRE_Direct_BlinnPhong\\n#define RE_IndirectDiffuse\\t\\tRE_IndirectDiffuse_BlinnPhong\\n#define Material_LightProbeLOD( material )\\t(0)\";\n  var lights_physical_fragment = \"PhysicalMaterial material;\\nmaterial.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );\\nvec3 dxy = max( abs( dFdx( geometryNormal ) ), abs( dFdy( geometryNormal ) ) );\\nfloat geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );\\nmaterial.roughness = max( roughnessFactor, 0.0525 );material.roughness += geometryRoughness;\\nmaterial.roughness = min( material.roughness, 1.0 );\\n#ifdef IOR\\n\\t#ifdef SPECULAR\\n\\t\\tfloat specularIntensityFactor = specularIntensity;\\n\\t\\tvec3 specularColorFactor = specularColor;\\n\\t\\t#ifdef USE_SPECULARINTENSITYMAP\\n\\t\\t\\tspecularIntensityFactor *= texture2D( specularIntensityMap, vUv ).a;\\n\\t\\t#endif\\n\\t\\t#ifdef USE_SPECULARCOLORMAP\\n\\t\\t\\tspecularColorFactor *= specularColorMapTexelToLinear( texture2D( specularColorMap, vUv ) ).rgb;\\n\\t\\t#endif\\n\\t\\tmaterial.specularF90 = mix( specularIntensityFactor, 1.0, metalnessFactor );\\n\\t#else\\n\\t\\tfloat specularIntensityFactor = 1.0;\\n\\t\\tvec3 specularColorFactor = vec3( 1.0 );\\n\\t\\tmaterial.specularF90 = 1.0;\\n\\t#endif\\n\\tmaterial.specularColor = mix( min( pow2( ( ior - 1.0 ) / ( ior + 1.0 ) ) * specularColorFactor, vec3( 1.0 ) ) * specularIntensityFactor, diffuseColor.rgb, metalnessFactor );\\n#else\\n\\tmaterial.specularColor = mix( vec3( 0.04 ), diffuseColor.rgb, metalnessFactor );\\n\\tmaterial.specularF90 = 1.0;\\n#endif\\n#ifdef USE_CLEARCOAT\\n\\tmaterial.clearcoat = clearcoat;\\n\\tmaterial.clearcoatRoughness = clearcoatRoughness;\\n\\tmaterial.clearcoatF0 = vec3( 0.04 );\\n\\tmaterial.clearcoatF90 = 1.0;\\n\\t#ifdef USE_CLEARCOATMAP\\n\\t\\tmaterial.clearcoat *= texture2D( clearcoatMap, vUv ).x;\\n\\t#endif\\n\\t#ifdef USE_CLEARCOAT_ROUGHNESSMAP\\n\\t\\tmaterial.clearcoatRoughness *= texture2D( clearcoatRoughnessMap, vUv ).y;\\n\\t#endif\\n\\tmaterial.clearcoat = saturate( material.clearcoat );\\tmaterial.clearcoatRoughness = max( material.clearcoatRoughness, 0.0525 );\\n\\tmaterial.clearcoatRoughness += geometryRoughness;\\n\\tmaterial.clearcoatRoughness = min( material.clearcoatRoughness, 1.0 );\\n#endif\\n#ifdef USE_SHEEN\\n\\tmaterial.sheenColor = sheenColor;\\n\\t#ifdef USE_SHEENCOLORMAP\\n\\t\\tmaterial.sheenColor *= sheenColorMapTexelToLinear( texture2D( sheenColorMap, vUv ) ).rgb;\\n\\t#endif\\n\\tmaterial.sheenRoughness = clamp( sheenRoughness, 0.07, 1.0 );\\n\\t#ifdef USE_SHEENROUGHNESSMAP\\n\\t\\tmaterial.sheenRoughness *= texture2D( sheenRoughnessMap, vUv ).a;\\n\\t#endif\\n#endif\";\n  var lights_physical_pars_fragment = \"struct PhysicalMaterial {\\n\\tvec3 diffuseColor;\\n\\tfloat roughness;\\n\\tvec3 specularColor;\\n\\tfloat specularF90;\\n\\t#ifdef USE_CLEARCOAT\\n\\t\\tfloat clearcoat;\\n\\t\\tfloat clearcoatRoughness;\\n\\t\\tvec3 clearcoatF0;\\n\\t\\tfloat clearcoatF90;\\n\\t#endif\\n\\t#ifdef USE_SHEEN\\n\\t\\tvec3 sheenColor;\\n\\t\\tfloat sheenRoughness;\\n\\t#endif\\n};\\nvec3 clearcoatSpecular = vec3( 0.0 );\\nvec2 DFGApprox( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {\\n\\tfloat dotNV = saturate( dot( normal, viewDir ) );\\n\\tconst vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );\\n\\tconst vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );\\n\\tvec4 r = roughness * c0 + c1;\\n\\tfloat a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;\\n\\tvec2 fab = vec2( - 1.04, 1.04 ) * a004 + r.zw;\\n\\treturn fab;\\n}\\nvec3 EnvironmentBRDF( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness ) {\\n\\tvec2 fab = DFGApprox( normal, viewDir, roughness );\\n\\treturn specularColor * fab.x + specularF90 * fab.y;\\n}\\nvoid computeMultiscattering( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {\\n\\tvec2 fab = DFGApprox( normal, viewDir, roughness );\\n\\tvec3 FssEss = specularColor * fab.x + specularF90 * fab.y;\\n\\tfloat Ess = fab.x + fab.y;\\n\\tfloat Ems = 1.0 - Ess;\\n\\tvec3 Favg = specularColor + ( 1.0 - specularColor ) * 0.047619;\\tvec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );\\n\\tsingleScatter += FssEss;\\n\\tmultiScatter += Fms * Ems;\\n}\\n#if NUM_RECT_AREA_LIGHTS > 0\\n\\tvoid RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\t\\tvec3 normal = geometry.normal;\\n\\t\\tvec3 viewDir = geometry.viewDir;\\n\\t\\tvec3 position = geometry.position;\\n\\t\\tvec3 lightPos = rectAreaLight.position;\\n\\t\\tvec3 halfWidth = rectAreaLight.halfWidth;\\n\\t\\tvec3 halfHeight = rectAreaLight.halfHeight;\\n\\t\\tvec3 lightColor = rectAreaLight.color;\\n\\t\\tfloat roughness = material.roughness;\\n\\t\\tvec3 rectCoords[ 4 ];\\n\\t\\trectCoords[ 0 ] = lightPos + halfWidth - halfHeight;\\t\\trectCoords[ 1 ] = lightPos - halfWidth - halfHeight;\\n\\t\\trectCoords[ 2 ] = lightPos - halfWidth + halfHeight;\\n\\t\\trectCoords[ 3 ] = lightPos + halfWidth + halfHeight;\\n\\t\\tvec2 uv = LTC_Uv( normal, viewDir, roughness );\\n\\t\\tvec4 t1 = texture2D( ltc_1, uv );\\n\\t\\tvec4 t2 = texture2D( ltc_2, uv );\\n\\t\\tmat3 mInv = mat3(\\n\\t\\t\\tvec3( t1.x, 0, t1.y ),\\n\\t\\t\\tvec3(\t\t0, 1,\t\t0 ),\\n\\t\\t\\tvec3( t1.z, 0, t1.w )\\n\\t\\t);\\n\\t\\tvec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );\\n\\t\\treflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );\\n\\t\\treflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );\\n\\t}\\n#endif\\nvoid RE_Direct_Physical( const in IncidentLight directLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\\n\\tvec3 irradiance = dotNL * directLight.color;\\n\\t#ifdef USE_CLEARCOAT\\n\\t\\tfloat dotNLcc = saturate( dot( geometry.clearcoatNormal, directLight.direction ) );\\n\\t\\tvec3 ccIrradiance = dotNLcc * directLight.color;\\n\\t\\tclearcoatSpecular += ccIrradiance * BRDF_GGX( directLight.direction, geometry.viewDir, geometry.clearcoatNormal, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );\\n\\t#endif\\n\\t#ifdef USE_SHEEN\\n\\t\\treflectedLight.directSpecular += irradiance * BRDF_Sheen( directLight.direction, geometry.viewDir, geometry.normal, material.sheenColor, material.sheenRoughness );\\n\\t#endif\\n\\treflectedLight.directSpecular += irradiance * BRDF_GGX( directLight.direction, geometry.viewDir, geometry.normal, material.specularColor, material.specularF90, material.roughness );\\n\\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n}\\nvoid RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n}\\nvoid RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {\\n\\t#ifdef USE_CLEARCOAT\\n\\t\\tclearcoatSpecular += clearcoatRadiance * EnvironmentBRDF( geometry.clearcoatNormal, geometry.viewDir, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );\\n\\t#endif\\n\\tvec3 singleScattering = vec3( 0.0 );\\n\\tvec3 multiScattering = vec3( 0.0 );\\n\\tvec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;\\n\\tcomputeMultiscattering( geometry.normal, geometry.viewDir, material.specularColor, material.specularF90, material.roughness, singleScattering, multiScattering );\\n\\tvec3 diffuse = material.diffuseColor * ( 1.0 - ( singleScattering + multiScattering ) );\\n\\treflectedLight.indirectSpecular += radiance * singleScattering;\\n\\treflectedLight.indirectSpecular += multiScattering * cosineWeightedIrradiance;\\n\\treflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;\\n}\\n#define RE_Direct\\t\\t\\t\\tRE_Direct_Physical\\n#define RE_Direct_RectArea\\t\\tRE_Direct_RectArea_Physical\\n#define RE_IndirectDiffuse\\t\\tRE_IndirectDiffuse_Physical\\n#define RE_IndirectSpecular\\t\\tRE_IndirectSpecular_Physical\\nfloat computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {\\n\\treturn saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );\\n}\";\n  var lights_fragment_begin = \"\\nGeometricContext geometry;\\ngeometry.position = - vViewPosition;\\ngeometry.normal = normal;\\ngeometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );\\n#ifdef USE_CLEARCOAT\\n\\tgeometry.clearcoatNormal = clearcoatNormal;\\n#endif\\nIncidentLight directLight;\\n#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )\\n\\tPointLight pointLight;\\n\\t#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0\\n\\tPointLightShadow pointLightShadow;\\n\\t#endif\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\\n\\t\\tpointLight = pointLights[ i ];\\n\\t\\tgetPointLightInfo( pointLight, geometry, directLight );\\n\\t\\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )\\n\\t\\tpointLightShadow = pointLightShadows[ i ];\\n\\t\\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;\\n\\t\\t#endif\\n\\t\\tRE_Direct( directLight, geometry, material, reflectedLight );\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\\n#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )\\n\\tSpotLight spotLight;\\n\\t#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0\\n\\tSpotLightShadow spotLightShadow;\\n\\t#endif\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\\n\\t\\tspotLight = spotLights[ i ];\\n\\t\\tgetSpotLightInfo( spotLight, geometry, directLight );\\n\\t\\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )\\n\\t\\tspotLightShadow = spotLightShadows[ i ];\\n\\t\\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\\n\\t\\t#endif\\n\\t\\tRE_Direct( directLight, geometry, material, reflectedLight );\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\\n#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )\\n\\tDirectionalLight directionalLight;\\n\\t#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0\\n\\tDirectionalLightShadow directionalLightShadow;\\n\\t#endif\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\\n\\t\\tdirectionalLight = directionalLights[ i ];\\n\\t\\tgetDirectionalLightInfo( directionalLight, geometry, directLight );\\n\\t\\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )\\n\\t\\tdirectionalLightShadow = directionalLightShadows[ i ];\\n\\t\\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\\n\\t\\t#endif\\n\\t\\tRE_Direct( directLight, geometry, material, reflectedLight );\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\\n#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )\\n\\tRectAreaLight rectAreaLight;\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {\\n\\t\\trectAreaLight = rectAreaLights[ i ];\\n\\t\\tRE_Direct_RectArea( rectAreaLight, geometry, material, reflectedLight );\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\\n#if defined( RE_IndirectDiffuse )\\n\\tvec3 iblIrradiance = vec3( 0.0 );\\n\\tvec3 irradiance = getAmbientLightIrradiance( ambientLightColor );\\n\\tirradiance += getLightProbeIrradiance( lightProbe, geometry.normal );\\n\\t#if ( NUM_HEMI_LIGHTS > 0 )\\n\\t\\t#pragma unroll_loop_start\\n\\t\\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\\n\\t\\t\\tirradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry.normal );\\n\\t\\t}\\n\\t\\t#pragma unroll_loop_end\\n\\t#endif\\n#endif\\n#if defined( RE_IndirectSpecular )\\n\\tvec3 radiance = vec3( 0.0 );\\n\\tvec3 clearcoatRadiance = vec3( 0.0 );\\n#endif\";\n  var lights_fragment_maps = \"#if defined( RE_IndirectDiffuse )\\n\\t#ifdef USE_LIGHTMAP\\n\\t\\tvec4 lightMapTexel = texture2D( lightMap, vUv2 );\\n\\t\\tvec3 lightMapIrradiance = lightMapTexelToLinear( lightMapTexel ).rgb * lightMapIntensity;\\n\\t\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\t\\tlightMapIrradiance *= PI;\\n\\t\\t#endif\\n\\t\\tirradiance += lightMapIrradiance;\\n\\t#endif\\n\\t#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )\\n\\t\\tiblIrradiance += getIBLIrradiance( geometry.normal );\\n\\t#endif\\n#endif\\n#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )\\n\\tradiance += getIBLRadiance( geometry.viewDir, geometry.normal, material.roughness );\\n\\t#ifdef USE_CLEARCOAT\\n\\t\\tclearcoatRadiance += getIBLRadiance( geometry.viewDir, geometry.clearcoatNormal, material.clearcoatRoughness );\\n\\t#endif\\n#endif\";\n  var lights_fragment_end = \"#if defined( RE_IndirectDiffuse )\\n\\tRE_IndirectDiffuse( irradiance, geometry, material, reflectedLight );\\n#endif\\n#if defined( RE_IndirectSpecular )\\n\\tRE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometry, material, reflectedLight );\\n#endif\";\n  var logdepthbuf_fragment = \"#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\\n\\tgl_FragDepthEXT = vIsPerspective == 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;\\n#endif\";\n  var logdepthbuf_pars_fragment = \"#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\\n\\tuniform float logDepthBufFC;\\n\\tvarying float vFragDepth;\\n\\tvarying float vIsPerspective;\\n#endif\";\n  var logdepthbuf_pars_vertex = \"#ifdef USE_LOGDEPTHBUF\\n\\t#ifdef USE_LOGDEPTHBUF_EXT\\n\\t\\tvarying float vFragDepth;\\n\\t\\tvarying float vIsPerspective;\\n\\t#else\\n\\t\\tuniform float logDepthBufFC;\\n\\t#endif\\n#endif\";\n  var logdepthbuf_vertex = \"#ifdef USE_LOGDEPTHBUF\\n\\t#ifdef USE_LOGDEPTHBUF_EXT\\n\\t\\tvFragDepth = 1.0 + gl_Position.w;\\n\\t\\tvIsPerspective = float( isPerspectiveMatrix( projectionMatrix ) );\\n\\t#else\\n\\t\\tif ( isPerspectiveMatrix( projectionMatrix ) ) {\\n\\t\\t\\tgl_Position.z = log2( max( EPSILON, gl_Position.w + 1.0 ) ) * logDepthBufFC - 1.0;\\n\\t\\t\\tgl_Position.z *= gl_Position.w;\\n\\t\\t}\\n\\t#endif\\n#endif\";\n  var map_fragment = \"#ifdef USE_MAP\\n\\tvec4 texelColor = texture2D( map, vUv );\\n\\ttexelColor = mapTexelToLinear( texelColor );\\n\\tdiffuseColor *= texelColor;\\n#endif\";\n  var map_pars_fragment = \"#ifdef USE_MAP\\n\\tuniform sampler2D map;\\n#endif\";\n  var map_particle_fragment = \"#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\\n\\tvec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;\\n#endif\\n#ifdef USE_MAP\\n\\tvec4 mapTexel = texture2D( map, uv );\\n\\tdiffuseColor *= mapTexelToLinear( mapTexel );\\n#endif\\n#ifdef USE_ALPHAMAP\\n\\tdiffuseColor.a *= texture2D( alphaMap, uv ).g;\\n#endif\";\n  var map_particle_pars_fragment = \"#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\\n\\tuniform mat3 uvTransform;\\n#endif\\n#ifdef USE_MAP\\n\\tuniform sampler2D map;\\n#endif\\n#ifdef USE_ALPHAMAP\\n\\tuniform sampler2D alphaMap;\\n#endif\";\n  var metalnessmap_fragment = \"float metalnessFactor = metalness;\\n#ifdef USE_METALNESSMAP\\n\\tvec4 texelMetalness = texture2D( metalnessMap, vUv );\\n\\tmetalnessFactor *= texelMetalness.b;\\n#endif\";\n  var metalnessmap_pars_fragment = \"#ifdef USE_METALNESSMAP\\n\\tuniform sampler2D metalnessMap;\\n#endif\";\n  var morphnormal_vertex = \"#ifdef USE_MORPHNORMALS\\n\\tobjectNormal *= morphTargetBaseInfluence;\\n\\t#ifdef MORPHTARGETS_TEXTURE\\n\\t\\tfor ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\\n\\t\\t\\tif ( morphTargetInfluences[ i ] > 0.0 ) objectNormal += getMorph( gl_VertexID, i, 1, 2 ) * morphTargetInfluences[ i ];\\n\\t\\t}\\n\\t#else\\n\\t\\tobjectNormal += morphNormal0 * morphTargetInfluences[ 0 ];\\n\\t\\tobjectNormal += morphNormal1 * morphTargetInfluences[ 1 ];\\n\\t\\tobjectNormal += morphNormal2 * morphTargetInfluences[ 2 ];\\n\\t\\tobjectNormal += morphNormal3 * morphTargetInfluences[ 3 ];\\n\\t#endif\\n#endif\";\n  var morphtarget_pars_vertex = \"#ifdef USE_MORPHTARGETS\\n\\tuniform float morphTargetBaseInfluence;\\n\\t#ifdef MORPHTARGETS_TEXTURE\\n\\t\\tuniform float morphTargetInfluences[ MORPHTARGETS_COUNT ];\\n\\t\\tuniform sampler2DArray morphTargetsTexture;\\n\\t\\tuniform vec2 morphTargetsTextureSize;\\n\\t\\tvec3 getMorph( const in int vertexIndex, const in int morphTargetIndex, const in int offset, const in int stride ) {\\n\\t\\t\\tfloat texelIndex = float( vertexIndex * stride + offset );\\n\\t\\t\\tfloat y = floor( texelIndex / morphTargetsTextureSize.x );\\n\\t\\t\\tfloat x = texelIndex - y * morphTargetsTextureSize.x;\\n\\t\\t\\tvec3 morphUV = vec3( ( x + 0.5 ) / morphTargetsTextureSize.x, y / morphTargetsTextureSize.y, morphTargetIndex );\\n\\t\\t\\treturn texture( morphTargetsTexture, morphUV ).xyz;\\n\\t\\t}\\n\\t#else\\n\\t\\t#ifndef USE_MORPHNORMALS\\n\\t\\t\\tuniform float morphTargetInfluences[ 8 ];\\n\\t\\t#else\\n\\t\\t\\tuniform float morphTargetInfluences[ 4 ];\\n\\t\\t#endif\\n\\t#endif\\n#endif\";\n  var morphtarget_vertex = \"#ifdef USE_MORPHTARGETS\\n\\ttransformed *= morphTargetBaseInfluence;\\n\\t#ifdef MORPHTARGETS_TEXTURE\\n\\t\\tfor ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\\n\\t\\t\\t#ifndef USE_MORPHNORMALS\\n\\t\\t\\t\\tif ( morphTargetInfluences[ i ] > 0.0 ) transformed += getMorph( gl_VertexID, i, 0, 1 ) * morphTargetInfluences[ i ];\\n\\t\\t\\t#else\\n\\t\\t\\t\\tif ( morphTargetInfluences[ i ] > 0.0 ) transformed += getMorph( gl_VertexID, i, 0, 2 ) * morphTargetInfluences[ i ];\\n\\t\\t\\t#endif\\n\\t\\t}\\n\\t#else\\n\\t\\ttransformed += morphTarget0 * morphTargetInfluences[ 0 ];\\n\\t\\ttransformed += morphTarget1 * morphTargetInfluences[ 1 ];\\n\\t\\ttransformed += morphTarget2 * morphTargetInfluences[ 2 ];\\n\\t\\ttransformed += morphTarget3 * morphTargetInfluences[ 3 ];\\n\\t\\t#ifndef USE_MORPHNORMALS\\n\\t\\t\\ttransformed += morphTarget4 * morphTargetInfluences[ 4 ];\\n\\t\\t\\ttransformed += morphTarget5 * morphTargetInfluences[ 5 ];\\n\\t\\t\\ttransformed += morphTarget6 * morphTargetInfluences[ 6 ];\\n\\t\\t\\ttransformed += morphTarget7 * morphTargetInfluences[ 7 ];\\n\\t\\t#endif\\n\\t#endif\\n#endif\";\n  var normal_fragment_begin = \"float faceDirection = gl_FrontFacing ? 1.0 : - 1.0;\\n#ifdef FLAT_SHADED\\n\\tvec3 fdx = vec3( dFdx( vViewPosition.x ), dFdx( vViewPosition.y ), dFdx( vViewPosition.z ) );\\n\\tvec3 fdy = vec3( dFdy( vViewPosition.x ), dFdy( vViewPosition.y ), dFdy( vViewPosition.z ) );\\n\\tvec3 normal = normalize( cross( fdx, fdy ) );\\n#else\\n\\tvec3 normal = normalize( vNormal );\\n\\t#ifdef DOUBLE_SIDED\\n\\t\\tnormal = normal * faceDirection;\\n\\t#endif\\n\\t#ifdef USE_TANGENT\\n\\t\\tvec3 tangent = normalize( vTangent );\\n\\t\\tvec3 bitangent = normalize( vBitangent );\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\ttangent = tangent * faceDirection;\\n\\t\\t\\tbitangent = bitangent * faceDirection;\\n\\t\\t#endif\\n\\t\\t#if defined( TANGENTSPACE_NORMALMAP ) || defined( USE_CLEARCOAT_NORMALMAP )\\n\\t\\t\\tmat3 vTBN = mat3( tangent, bitangent, normal );\\n\\t\\t#endif\\n\\t#endif\\n#endif\\nvec3 geometryNormal = normal;\";\n  var normal_fragment_maps = \"#ifdef OBJECTSPACE_NORMALMAP\\n\\tnormal = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\\n\\t#ifdef FLIP_SIDED\\n\\t\\tnormal = - normal;\\n\\t#endif\\n\\t#ifdef DOUBLE_SIDED\\n\\t\\tnormal = normal * faceDirection;\\n\\t#endif\\n\\tnormal = normalize( normalMatrix * normal );\\n#elif defined( TANGENTSPACE_NORMALMAP )\\n\\tvec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\\n\\tmapN.xy *= normalScale;\\n\\t#ifdef USE_TANGENT\\n\\t\\tnormal = normalize( vTBN * mapN );\\n\\t#else\\n\\t\\tnormal = perturbNormal2Arb( - vViewPosition, normal, mapN, faceDirection );\\n\\t#endif\\n#elif defined( USE_BUMPMAP )\\n\\tnormal = perturbNormalArb( - vViewPosition, normal, dHdxy_fwd(), faceDirection );\\n#endif\";\n  var normal_pars_fragment = \"#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n\\t#ifdef USE_TANGENT\\n\\t\\tvarying vec3 vTangent;\\n\\t\\tvarying vec3 vBitangent;\\n\\t#endif\\n#endif\";\n  var normal_pars_vertex = \"#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n\\t#ifdef USE_TANGENT\\n\\t\\tvarying vec3 vTangent;\\n\\t\\tvarying vec3 vBitangent;\\n\\t#endif\\n#endif\";\n  var normal_vertex = \"#ifndef FLAT_SHADED\\n\\tvNormal = normalize( transformedNormal );\\n\\t#ifdef USE_TANGENT\\n\\t\\tvTangent = normalize( transformedTangent );\\n\\t\\tvBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );\\n\\t#endif\\n#endif\";\n  var normalmap_pars_fragment = \"#ifdef USE_NORMALMAP\\n\\tuniform sampler2D normalMap;\\n\\tuniform vec2 normalScale;\\n#endif\\n#ifdef OBJECTSPACE_NORMALMAP\\n\\tuniform mat3 normalMatrix;\\n#endif\\n#if ! defined ( USE_TANGENT ) && ( defined ( TANGENTSPACE_NORMALMAP ) || defined ( USE_CLEARCOAT_NORMALMAP ) )\\n\\tvec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm, vec3 mapN, float faceDirection ) {\\n\\t\\tvec3 q0 = vec3( dFdx( eye_pos.x ), dFdx( eye_pos.y ), dFdx( eye_pos.z ) );\\n\\t\\tvec3 q1 = vec3( dFdy( eye_pos.x ), dFdy( eye_pos.y ), dFdy( eye_pos.z ) );\\n\\t\\tvec2 st0 = dFdx( vUv.st );\\n\\t\\tvec2 st1 = dFdy( vUv.st );\\n\\t\\tvec3 N = surf_norm;\\n\\t\\tvec3 q1perp = cross( q1, N );\\n\\t\\tvec3 q0perp = cross( N, q0 );\\n\\t\\tvec3 T = q1perp * st0.x + q0perp * st1.x;\\n\\t\\tvec3 B = q1perp * st0.y + q0perp * st1.y;\\n\\t\\tfloat det = max( dot( T, T ), dot( B, B ) );\\n\\t\\tfloat scale = ( det == 0.0 ) ? 0.0 : faceDirection * inversesqrt( det );\\n\\t\\treturn normalize( T * ( mapN.x * scale ) + B * ( mapN.y * scale ) + N * mapN.z );\\n\\t}\\n#endif\";\n  var clearcoat_normal_fragment_begin = \"#ifdef USE_CLEARCOAT\\n\\tvec3 clearcoatNormal = geometryNormal;\\n#endif\";\n  var clearcoat_normal_fragment_maps = \"#ifdef USE_CLEARCOAT_NORMALMAP\\n\\tvec3 clearcoatMapN = texture2D( clearcoatNormalMap, vUv ).xyz * 2.0 - 1.0;\\n\\tclearcoatMapN.xy *= clearcoatNormalScale;\\n\\t#ifdef USE_TANGENT\\n\\t\\tclearcoatNormal = normalize( vTBN * clearcoatMapN );\\n\\t#else\\n\\t\\tclearcoatNormal = perturbNormal2Arb( - vViewPosition, clearcoatNormal, clearcoatMapN, faceDirection );\\n\\t#endif\\n#endif\";\n  var clearcoat_pars_fragment = \"#ifdef USE_CLEARCOATMAP\\n\\tuniform sampler2D clearcoatMap;\\n#endif\\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\\n\\tuniform sampler2D clearcoatRoughnessMap;\\n#endif\\n#ifdef USE_CLEARCOAT_NORMALMAP\\n\\tuniform sampler2D clearcoatNormalMap;\\n\\tuniform vec2 clearcoatNormalScale;\\n#endif\";\n  var output_fragment = \"#ifdef OPAQUE\\ndiffuseColor.a = 1.0;\\n#endif\\n#ifdef USE_TRANSMISSION\\ndiffuseColor.a *= transmissionAlpha + 0.1;\\n#endif\\ngl_FragColor = vec4( outgoingLight, diffuseColor.a );\";\n  var packing = \"vec3 packNormalToRGB( const in vec3 normal ) {\\n\\treturn normalize( normal ) * 0.5 + 0.5;\\n}\\nvec3 unpackRGBToNormal( const in vec3 rgb ) {\\n\\treturn 2.0 * rgb.xyz - 1.0;\\n}\\nconst float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;\\nconst vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256., 256. );\\nconst vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );\\nconst float ShiftRight8 = 1. / 256.;\\nvec4 packDepthToRGBA( const in float v ) {\\n\\tvec4 r = vec4( fract( v * PackFactors ), v );\\n\\tr.yzw -= r.xyz * ShiftRight8;\\treturn r * PackUpscale;\\n}\\nfloat unpackRGBAToDepth( const in vec4 v ) {\\n\\treturn dot( v, UnpackFactors );\\n}\\nvec4 pack2HalfToRGBA( vec2 v ) {\\n\\tvec4 r = vec4( v.x, fract( v.x * 255.0 ), v.y, fract( v.y * 255.0 ) );\\n\\treturn vec4( r.x - r.y / 255.0, r.y, r.z - r.w / 255.0, r.w );\\n}\\nvec2 unpackRGBATo2Half( vec4 v ) {\\n\\treturn vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );\\n}\\nfloat viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {\\n\\treturn ( viewZ + near ) / ( near - far );\\n}\\nfloat orthographicDepthToViewZ( const in float linearClipZ, const in float near, const in float far ) {\\n\\treturn linearClipZ * ( near - far ) - near;\\n}\\nfloat viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {\\n\\treturn ( ( near + viewZ ) * far ) / ( ( far - near ) * viewZ );\\n}\\nfloat perspectiveDepthToViewZ( const in float invClipZ, const in float near, const in float far ) {\\n\\treturn ( near * far ) / ( ( far - near ) * invClipZ - far );\\n}\";\n  var premultiplied_alpha_fragment = \"#ifdef PREMULTIPLIED_ALPHA\\n\\tgl_FragColor.rgb *= gl_FragColor.a;\\n#endif\";\n  var project_vertex = \"vec4 mvPosition = vec4( transformed, 1.0 );\\n#ifdef USE_INSTANCING\\n\\tmvPosition = instanceMatrix * mvPosition;\\n#endif\\nmvPosition = modelViewMatrix * mvPosition;\\ngl_Position = projectionMatrix * mvPosition;\";\n  var dithering_fragment = \"#ifdef DITHERING\\n\\tgl_FragColor.rgb = dithering( gl_FragColor.rgb );\\n#endif\";\n  var dithering_pars_fragment = \"#ifdef DITHERING\\n\\tvec3 dithering( vec3 color ) {\\n\\t\\tfloat grid_position = rand( gl_FragCoord.xy );\\n\\t\\tvec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );\\n\\t\\tdither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );\\n\\t\\treturn color + dither_shift_RGB;\\n\\t}\\n#endif\";\n  var roughnessmap_fragment = \"float roughnessFactor = roughness;\\n#ifdef USE_ROUGHNESSMAP\\n\\tvec4 texelRoughness = texture2D( roughnessMap, vUv );\\n\\troughnessFactor *= texelRoughness.g;\\n#endif\";\n  var roughnessmap_pars_fragment = \"#ifdef USE_ROUGHNESSMAP\\n\\tuniform sampler2D roughnessMap;\\n#endif\";\n  var shadowmap_pars_fragment = \"#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHT_SHADOWS > 0\\n\\t\\tuniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t\\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t\\tstruct DirectionalLightShadow {\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t};\\n\\t\\tuniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHT_SHADOWS > 0\\n\\t\\tuniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];\\n\\t\\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHT_SHADOWS ];\\n\\t\\tstruct SpotLightShadow {\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t};\\n\\t\\tuniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\\n\\t#endif\\n\\t#if NUM_POINT_LIGHT_SHADOWS > 0\\n\\t\\tuniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t\\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t\\tstruct PointLightShadow {\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t\\tfloat shadowCameraNear;\\n\\t\\t\\tfloat shadowCameraFar;\\n\\t\\t};\\n\\t\\tuniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t#endif\\n\\tfloat texture2DCompare( sampler2D depths, vec2 uv, float compare ) {\\n\\t\\treturn step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );\\n\\t}\\n\\tvec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {\\n\\t\\treturn unpackRGBATo2Half( texture2D( shadow, uv ) );\\n\\t}\\n\\tfloat VSMShadow (sampler2D shadow, vec2 uv, float compare ){\\n\\t\\tfloat occlusion = 1.0;\\n\\t\\tvec2 distribution = texture2DDistribution( shadow, uv );\\n\\t\\tfloat hard_shadow = step( compare , distribution.x );\\n\\t\\tif (hard_shadow != 1.0 ) {\\n\\t\\t\\tfloat distance = compare - distribution.x ;\\n\\t\\t\\tfloat variance = max( 0.00000, distribution.y * distribution.y );\\n\\t\\t\\tfloat softness_probability = variance / (variance + distance * distance );\\t\\t\\tsoftness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 );\\t\\t\\tocclusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );\\n\\t\\t}\\n\\t\\treturn occlusion;\\n\\t}\\n\\tfloat getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {\\n\\t\\tfloat shadow = 1.0;\\n\\t\\tshadowCoord.xyz /= shadowCoord.w;\\n\\t\\tshadowCoord.z += shadowBias;\\n\\t\\tbvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );\\n\\t\\tbool inFrustum = all( inFrustumVec );\\n\\t\\tbvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );\\n\\t\\tbool frustumTest = all( frustumTestVec );\\n\\t\\tif ( frustumTest ) {\\n\\t\\t#if defined( SHADOWMAP_TYPE_PCF )\\n\\t\\t\\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\\n\\t\\t\\tfloat dx0 = - texelSize.x * shadowRadius;\\n\\t\\t\\tfloat dy0 = - texelSize.y * shadowRadius;\\n\\t\\t\\tfloat dx1 = + texelSize.x * shadowRadius;\\n\\t\\t\\tfloat dy1 = + texelSize.y * shadowRadius;\\n\\t\\t\\tfloat dx2 = dx0 / 2.0;\\n\\t\\t\\tfloat dy2 = dy0 / 2.0;\\n\\t\\t\\tfloat dx3 = dx1 / 2.0;\\n\\t\\t\\tfloat dy3 = dy1 / 2.0;\\n\\t\\t\\tshadow = (\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\\n\\t\\t\\t) * ( 1.0 / 17.0 );\\n\\t\\t#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\\n\\t\\t\\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\\n\\t\\t\\tfloat dx = texelSize.x;\\n\\t\\t\\tfloat dy = texelSize.y;\\n\\t\\t\\tvec2 uv = shadowCoord.xy;\\n\\t\\t\\tvec2 f = fract( uv * shadowMapSize + 0.5 );\\n\\t\\t\\tuv -= f * texelSize;\\n\\t\\t\\tshadow = (\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, uv, shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, uv + vec2( dx, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, uv + vec2( 0.0, dy ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, uv + texelSize, shadowCoord.z ) +\\n\\t\\t\\t\\tmix( texture2DCompare( shadowMap, uv + vec2( -dx, 0.0 ), shadowCoord.z ), \\n\\t\\t\\t\\t\\t texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 0.0 ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t f.x ) +\\n\\t\\t\\t\\tmix( texture2DCompare( shadowMap, uv + vec2( -dx, dy ), shadowCoord.z ), \\n\\t\\t\\t\\t\\t texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t f.x ) +\\n\\t\\t\\t\\tmix( texture2DCompare( shadowMap, uv + vec2( 0.0, -dy ), shadowCoord.z ), \\n\\t\\t\\t\\t\\t texture2DCompare( shadowMap, uv + vec2( 0.0, 2.0 * dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t f.y ) +\\n\\t\\t\\t\\tmix( texture2DCompare( shadowMap, uv + vec2( dx, -dy ), shadowCoord.z ), \\n\\t\\t\\t\\t\\t texture2DCompare( shadowMap, uv + vec2( dx, 2.0 * dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t f.y ) +\\n\\t\\t\\t\\tmix( mix( texture2DCompare( shadowMap, uv + vec2( -dx, -dy ), shadowCoord.z ), \\n\\t\\t\\t\\t\\t\\t\ttexture2DCompare( shadowMap, uv + vec2( 2.0 * dx, -dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t\\t\tf.x ),\\n\\t\\t\\t\\t\\t mix( texture2DCompare( shadowMap, uv + vec2( -dx, 2.0 * dy ), shadowCoord.z ), \\n\\t\\t\\t\\t\\t\\t\ttexture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 2.0 * dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t\\t\tf.x ),\\n\\t\\t\\t\\t\\t f.y )\\n\\t\\t\\t) * ( 1.0 / 9.0 );\\n\\t\\t#elif defined( SHADOWMAP_TYPE_VSM )\\n\\t\\t\\tshadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );\\n\\t\\t#else\\n\\t\\t\\tshadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );\\n\\t\\t#endif\\n\\t\\t}\\n\\t\\treturn shadow;\\n\\t}\\n\\tvec2 cubeToUV( vec3 v, float texelSizeY ) {\\n\\t\\tvec3 absV = abs( v );\\n\\t\\tfloat scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );\\n\\t\\tabsV *= scaleToCube;\\n\\t\\tv *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );\\n\\t\\tvec2 planar = v.xy;\\n\\t\\tfloat almostATexel = 1.5 * texelSizeY;\\n\\t\\tfloat almostOne = 1.0 - almostATexel;\\n\\t\\tif ( absV.z >= almostOne ) {\\n\\t\\t\\tif ( v.z > 0.0 )\\n\\t\\t\\t\\tplanar.x = 4.0 - v.x;\\n\\t\\t} else if ( absV.x >= almostOne ) {\\n\\t\\t\\tfloat signX = sign( v.x );\\n\\t\\t\\tplanar.x = v.z * signX + 2.0 * signX;\\n\\t\\t} else if ( absV.y >= almostOne ) {\\n\\t\\t\\tfloat signY = sign( v.y );\\n\\t\\t\\tplanar.x = v.x + 2.0 * signY + 2.0;\\n\\t\\t\\tplanar.y = v.z * signY - 2.0;\\n\\t\\t}\\n\\t\\treturn vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );\\n\\t}\\n\\tfloat getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {\\n\\t\\tvec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );\\n\\t\\tvec3 lightToPosition = shadowCoord.xyz;\\n\\t\\tfloat dp = ( length( lightToPosition ) - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );\\t\\tdp += shadowBias;\\n\\t\\tvec3 bd3D = normalize( lightToPosition );\\n\\t\\t#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )\\n\\t\\t\\tvec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;\\n\\t\\t\\treturn (\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )\\n\\t\\t\\t) * ( 1.0 / 9.0 );\\n\\t\\t#else\\n\\t\\t\\treturn texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );\\n\\t\\t#endif\\n\\t}\\n#endif\";\n  var shadowmap_pars_vertex = \"#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHT_SHADOWS > 0\\n\\t\\tuniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t\\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t\\tstruct DirectionalLightShadow {\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t};\\n\\t\\tuniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHT_SHADOWS > 0\\n\\t\\tuniform mat4 spotShadowMatrix[ NUM_SPOT_LIGHT_SHADOWS ];\\n\\t\\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHT_SHADOWS ];\\n\\t\\tstruct SpotLightShadow {\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t};\\n\\t\\tuniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\\n\\t#endif\\n\\t#if NUM_POINT_LIGHT_SHADOWS > 0\\n\\t\\tuniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t\\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t\\tstruct PointLightShadow {\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t\\tfloat shadowCameraNear;\\n\\t\\t\\tfloat shadowCameraFar;\\n\\t\\t};\\n\\t\\tuniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t#endif\\n#endif\";\n  var shadowmap_vertex = \"#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHT_SHADOWS > 0 || NUM_SPOT_LIGHT_SHADOWS > 0 || NUM_POINT_LIGHT_SHADOWS > 0\\n\\t\\tvec3 shadowWorldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\\n\\t\\tvec4 shadowWorldPosition;\\n\\t#endif\\n\\t#if NUM_DIR_LIGHT_SHADOWS > 0\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\\n\\t\\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * directionalLightShadows[ i ].shadowNormalBias, 0 );\\n\\t\\tvDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * shadowWorldPosition;\\n\\t}\\n\\t#pragma unroll_loop_end\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHT_SHADOWS > 0\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {\\n\\t\\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * spotLightShadows[ i ].shadowNormalBias, 0 );\\n\\t\\tvSpotShadowCoord[ i ] = spotShadowMatrix[ i ] * shadowWorldPosition;\\n\\t}\\n\\t#pragma unroll_loop_end\\n\\t#endif\\n\\t#if NUM_POINT_LIGHT_SHADOWS > 0\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\\n\\t\\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * pointLightShadows[ i ].shadowNormalBias, 0 );\\n\\t\\tvPointShadowCoord[ i ] = pointShadowMatrix[ i ] * shadowWorldPosition;\\n\\t}\\n\\t#pragma unroll_loop_end\\n\\t#endif\\n#endif\";\n  var shadowmask_pars_fragment = \"float getShadowMask() {\\n\\tfloat shadow = 1.0;\\n\\t#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHT_SHADOWS > 0\\n\\tDirectionalLightShadow directionalLight;\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\\n\\t\\tdirectionalLight = directionalLightShadows[ i ];\\n\\t\\tshadow *= receiveShadow ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\\n\\t}\\n\\t#pragma unroll_loop_end\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHT_SHADOWS > 0\\n\\tSpotLightShadow spotLight;\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {\\n\\t\\tspotLight = spotLightShadows[ i ];\\n\\t\\tshadow *= receiveShadow ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\\n\\t}\\n\\t#pragma unroll_loop_end\\n\\t#endif\\n\\t#if NUM_POINT_LIGHT_SHADOWS > 0\\n\\tPointLightShadow pointLight;\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\\n\\t\\tpointLight = pointLightShadows[ i ];\\n\\t\\tshadow *= receiveShadow ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;\\n\\t}\\n\\t#pragma unroll_loop_end\\n\\t#endif\\n\\t#endif\\n\\treturn shadow;\\n}\";\n  var skinbase_vertex = \"#ifdef USE_SKINNING\\n\\tmat4 boneMatX = getBoneMatrix( skinIndex.x );\\n\\tmat4 boneMatY = getBoneMatrix( skinIndex.y );\\n\\tmat4 boneMatZ = getBoneMatrix( skinIndex.z );\\n\\tmat4 boneMatW = getBoneMatrix( skinIndex.w );\\n#endif\";\n  var skinning_pars_vertex = \"#ifdef USE_SKINNING\\n\\tuniform mat4 bindMatrix;\\n\\tuniform mat4 bindMatrixInverse;\\n\\t#ifdef BONE_TEXTURE\\n\\t\\tuniform highp sampler2D boneTexture;\\n\\t\\tuniform int boneTextureSize;\\n\\t\\tmat4 getBoneMatrix( const in float i ) {\\n\\t\\t\\tfloat j = i * 4.0;\\n\\t\\t\\tfloat x = mod( j, float( boneTextureSize ) );\\n\\t\\t\\tfloat y = floor( j / float( boneTextureSize ) );\\n\\t\\t\\tfloat dx = 1.0 / float( boneTextureSize );\\n\\t\\t\\tfloat dy = 1.0 / float( boneTextureSize );\\n\\t\\t\\ty = dy * ( y + 0.5 );\\n\\t\\t\\tvec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );\\n\\t\\t\\tvec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );\\n\\t\\t\\tvec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );\\n\\t\\t\\tvec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );\\n\\t\\t\\tmat4 bone = mat4( v1, v2, v3, v4 );\\n\\t\\t\\treturn bone;\\n\\t\\t}\\n\\t#else\\n\\t\\tuniform mat4 boneMatrices[ MAX_BONES ];\\n\\t\\tmat4 getBoneMatrix( const in float i ) {\\n\\t\\t\\tmat4 bone = boneMatrices[ int(i) ];\\n\\t\\t\\treturn bone;\\n\\t\\t}\\n\\t#endif\\n#endif\";\n  var skinning_vertex = \"#ifdef USE_SKINNING\\n\\tvec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );\\n\\tvec4 skinned = vec4( 0.0 );\\n\\tskinned += boneMatX * skinVertex * skinWeight.x;\\n\\tskinned += boneMatY * skinVertex * skinWeight.y;\\n\\tskinned += boneMatZ * skinVertex * skinWeight.z;\\n\\tskinned += boneMatW * skinVertex * skinWeight.w;\\n\\ttransformed = ( bindMatrixInverse * skinned ).xyz;\\n#endif\";\n  var skinnormal_vertex = \"#ifdef USE_SKINNING\\n\\tmat4 skinMatrix = mat4( 0.0 );\\n\\tskinMatrix += skinWeight.x * boneMatX;\\n\\tskinMatrix += skinWeight.y * boneMatY;\\n\\tskinMatrix += skinWeight.z * boneMatZ;\\n\\tskinMatrix += skinWeight.w * boneMatW;\\n\\tskinMatrix = bindMatrixInverse * skinMatrix * bindMatrix;\\n\\tobjectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;\\n\\t#ifdef USE_TANGENT\\n\\t\\tobjectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;\\n\\t#endif\\n#endif\";\n  var specularmap_fragment = \"float specularStrength;\\n#ifdef USE_SPECULARMAP\\n\\tvec4 texelSpecular = texture2D( specularMap, vUv );\\n\\tspecularStrength = texelSpecular.r;\\n#else\\n\\tspecularStrength = 1.0;\\n#endif\";\n  var specularmap_pars_fragment = \"#ifdef USE_SPECULARMAP\\n\\tuniform sampler2D specularMap;\\n#endif\";\n  var tonemapping_fragment = \"#if defined( TONE_MAPPING )\\n\\tgl_FragColor.rgb = toneMapping( gl_FragColor.rgb );\\n#endif\";\n  var tonemapping_pars_fragment = \"#ifndef saturate\\n#define saturate( a ) clamp( a, 0.0, 1.0 )\\n#endif\\nuniform float toneMappingExposure;\\nvec3 LinearToneMapping( vec3 color ) {\\n\\treturn toneMappingExposure * color;\\n}\\nvec3 ReinhardToneMapping( vec3 color ) {\\n\\tcolor *= toneMappingExposure;\\n\\treturn saturate( color / ( vec3( 1.0 ) + color ) );\\n}\\nvec3 OptimizedCineonToneMapping( vec3 color ) {\\n\\tcolor *= toneMappingExposure;\\n\\tcolor = max( vec3( 0.0 ), color - 0.004 );\\n\\treturn pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );\\n}\\nvec3 RRTAndODTFit( vec3 v ) {\\n\\tvec3 a = v * ( v + 0.0245786 ) - 0.000090537;\\n\\tvec3 b = v * ( 0.983729 * v + 0.4329510 ) + 0.238081;\\n\\treturn a / b;\\n}\\nvec3 ACESFilmicToneMapping( vec3 color ) {\\n\\tconst mat3 ACESInputMat = mat3(\\n\\t\\tvec3( 0.59719, 0.07600, 0.02840 ),\\t\\tvec3( 0.35458, 0.90834, 0.13383 ),\\n\\t\\tvec3( 0.04823, 0.01566, 0.83777 )\\n\\t);\\n\\tconst mat3 ACESOutputMat = mat3(\\n\\t\\tvec3(\t1.60475, -0.10208, -0.00327 ),\\t\\tvec3( -0.53108,\t1.10813, -0.07276 ),\\n\\t\\tvec3( -0.07367, -0.00605,\t1.07602 )\\n\\t);\\n\\tcolor *= toneMappingExposure / 0.6;\\n\\tcolor = ACESInputMat * color;\\n\\tcolor = RRTAndODTFit( color );\\n\\tcolor = ACESOutputMat * color;\\n\\treturn saturate( color );\\n}\\nvec3 CustomToneMapping( vec3 color ) { return color; }\";\n  var transmission_fragment = \"#ifdef USE_TRANSMISSION\\n\\tfloat transmissionAlpha = 1.0;\\n\\tfloat transmissionFactor = transmission;\\n\\tfloat thicknessFactor = thickness;\\n\\t#ifdef USE_TRANSMISSIONMAP\\n\\t\\ttransmissionFactor *= texture2D( transmissionMap, vUv ).r;\\n\\t#endif\\n\\t#ifdef USE_THICKNESSMAP\\n\\t\\tthicknessFactor *= texture2D( thicknessMap, vUv ).g;\\n\\t#endif\\n\\tvec3 pos = vWorldPosition;\\n\\tvec3 v = normalize( cameraPosition - pos );\\n\\tvec3 n = inverseTransformDirection( normal, viewMatrix );\\n\\tvec4 transmission = getIBLVolumeRefraction(\\n\\t\\tn, v, roughnessFactor, material.diffuseColor, material.specularColor, material.specularF90,\\n\\t\\tpos, modelMatrix, viewMatrix, projectionMatrix, ior, thicknessFactor,\\n\\t\\tattenuationColor, attenuationDistance );\\n\\ttotalDiffuse = mix( totalDiffuse, transmission.rgb, transmissionFactor );\\n\\ttransmissionAlpha = mix( transmissionAlpha, transmission.a, transmissionFactor );\\n#endif\";\n  var transmission_pars_fragment = \"#ifdef USE_TRANSMISSION\\n\\tuniform float transmission;\\n\\tuniform float thickness;\\n\\tuniform float attenuationDistance;\\n\\tuniform vec3 attenuationColor;\\n\\t#ifdef USE_TRANSMISSIONMAP\\n\\t\\tuniform sampler2D transmissionMap;\\n\\t#endif\\n\\t#ifdef USE_THICKNESSMAP\\n\\t\\tuniform sampler2D thicknessMap;\\n\\t#endif\\n\\tuniform vec2 transmissionSamplerSize;\\n\\tuniform sampler2D transmissionSamplerMap;\\n\\tuniform mat4 modelMatrix;\\n\\tuniform mat4 projectionMatrix;\\n\\tvarying vec3 vWorldPosition;\\n\\tvec3 getVolumeTransmissionRay( vec3 n, vec3 v, float thickness, float ior, mat4 modelMatrix ) {\\n\\t\\tvec3 refractionVector = refract( - v, normalize( n ), 1.0 / ior );\\n\\t\\tvec3 modelScale;\\n\\t\\tmodelScale.x = length( vec3( modelMatrix[ 0 ].xyz ) );\\n\\t\\tmodelScale.y = length( vec3( modelMatrix[ 1 ].xyz ) );\\n\\t\\tmodelScale.z = length( vec3( modelMatrix[ 2 ].xyz ) );\\n\\t\\treturn normalize( refractionVector ) * thickness * modelScale;\\n\\t}\\n\\tfloat applyIorToRoughness( float roughness, float ior ) {\\n\\t\\treturn roughness * clamp( ior * 2.0 - 2.0, 0.0, 1.0 );\\n\\t}\\n\\tvec4 getTransmissionSample( vec2 fragCoord, float roughness, float ior ) {\\n\\t\\tfloat framebufferLod = log2( transmissionSamplerSize.x ) * applyIorToRoughness( roughness, ior );\\n\\t\\t#ifdef TEXTURE_LOD_EXT\\n\\t\\t\\treturn texture2DLodEXT( transmissionSamplerMap, fragCoord.xy, framebufferLod );\\n\\t\\t#else\\n\\t\\t\\treturn texture2D( transmissionSamplerMap, fragCoord.xy, framebufferLod );\\n\\t\\t#endif\\n\\t}\\n\\tvec3 applyVolumeAttenuation( vec3 radiance, float transmissionDistance, vec3 attenuationColor, float attenuationDistance ) {\\n\\t\\tif ( attenuationDistance == 0.0 ) {\\n\\t\\t\\treturn radiance;\\n\\t\\t} else {\\n\\t\\t\\tvec3 attenuationCoefficient = -log( attenuationColor ) / attenuationDistance;\\n\\t\\t\\tvec3 transmittance = exp( - attenuationCoefficient * transmissionDistance );\\t\\t\\treturn transmittance * radiance;\\n\\t\\t}\\n\\t}\\n\\tvec4 getIBLVolumeRefraction( vec3 n, vec3 v, float roughness, vec3 diffuseColor, vec3 specularColor, float specularF90,\\n\\t\\tvec3 position, mat4 modelMatrix, mat4 viewMatrix, mat4 projMatrix, float ior, float thickness,\\n\\t\\tvec3 attenuationColor, float attenuationDistance ) {\\n\\t\\tvec3 transmissionRay = getVolumeTransmissionRay( n, v, thickness, ior, modelMatrix );\\n\\t\\tvec3 refractedRayExit = position + transmissionRay;\\n\\t\\tvec4 ndcPos = projMatrix * viewMatrix * vec4( refractedRayExit, 1.0 );\\n\\t\\tvec2 refractionCoords = ndcPos.xy / ndcPos.w;\\n\\t\\trefractionCoords += 1.0;\\n\\t\\trefractionCoords /= 2.0;\\n\\t\\tvec4 transmittedLight = getTransmissionSample( refractionCoords, roughness, ior );\\n\\t\\tvec3 attenuatedColor = applyVolumeAttenuation( transmittedLight.rgb, length( transmissionRay ), attenuationColor, attenuationDistance );\\n\\t\\tvec3 F = EnvironmentBRDF( n, v, specularColor, specularF90, roughness );\\n\\t\\treturn vec4( ( 1.0 - F ) * attenuatedColor * diffuseColor, transmittedLight.a );\\n\\t}\\n#endif\";\n  var uv_pars_fragment = \"#if ( defined( USE_UV ) && ! defined( UVS_VERTEX_ONLY ) )\\n\\tvarying vec2 vUv;\\n#endif\";\n  var uv_pars_vertex = \"#ifdef USE_UV\\n\\t#ifdef UVS_VERTEX_ONLY\\n\\t\\tvec2 vUv;\\n\\t#else\\n\\t\\tvarying vec2 vUv;\\n\\t#endif\\n\\tuniform mat3 uvTransform;\\n#endif\";\n  var uv_vertex = \"#ifdef USE_UV\\n\\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\\n#endif\";\n  var uv2_pars_fragment = \"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\\n\\tvarying vec2 vUv2;\\n#endif\";\n  var uv2_pars_vertex = \"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\\n\\tattribute vec2 uv2;\\n\\tvarying vec2 vUv2;\\n\\tuniform mat3 uv2Transform;\\n#endif\";\n  var uv2_vertex = \"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\\n\\tvUv2 = ( uv2Transform * vec3( uv2, 1 ) ).xy;\\n#endif\";\n  var worldpos_vertex = \"#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP ) || defined ( USE_TRANSMISSION )\\n\\tvec4 worldPosition = vec4( transformed, 1.0 );\\n\\t#ifdef USE_INSTANCING\\n\\t\\tworldPosition = instanceMatrix * worldPosition;\\n\\t#endif\\n\\tworldPosition = modelMatrix * worldPosition;\\n#endif\";\n  var vertex$g = \"varying vec2 vUv;\\nuniform mat3 uvTransform;\\nvoid main() {\\n\\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\\n\\tgl_Position = vec4( position.xy, 1.0, 1.0 );\\n}\";\n  var fragment$g = \"uniform sampler2D t2D;\\nvarying vec2 vUv;\\nvoid main() {\\n\\tvec4 texColor = texture2D( t2D, vUv );\\n\\tgl_FragColor = mapTexelToLinear( texColor );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n}\";\n  var vertex$f = \"varying vec3 vWorldDirection;\\n#include <common>\\nvoid main() {\\n\\tvWorldDirection = transformDirection( position, modelMatrix );\\n\\t#include <begin_vertex>\\n\\t#include <project_vertex>\\n\\tgl_Position.z = gl_Position.w;\\n}\";\n  var fragment$f = \"#include <envmap_common_pars_fragment>\\nuniform float opacity;\\nvarying vec3 vWorldDirection;\\n#include <cube_uv_reflection_fragment>\\nvoid main() {\\n\\tvec3 vReflect = vWorldDirection;\\n\\t#include <envmap_fragment>\\n\\tgl_FragColor = envColor;\\n\\tgl_FragColor.a *= opacity;\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n}\";\n  var vertex$e = \"#include <common>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvarying vec2 vHighPrecisionZW;\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#ifdef USE_DISPLACEMENTMAP\\n\\t\\t#include <beginnormal_vertex>\\n\\t\\t#include <morphnormal_vertex>\\n\\t\\t#include <skinnormal_vertex>\\n\\t#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvHighPrecisionZW = gl_Position.zw;\\n}\";\n  var fragment$e = \"#if DEPTH_PACKING == 3200\\n\\tuniform float opacity;\\n#endif\\n#include <common>\\n#include <packing>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvarying vec2 vHighPrecisionZW;\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( 1.0 );\\n\\t#if DEPTH_PACKING == 3200\\n\\t\\tdiffuseColor.a = opacity;\\n\\t#endif\\n\\t#include <map_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <logdepthbuf_fragment>\\n\\tfloat fragCoordZ = 0.5 * vHighPrecisionZW[0] / vHighPrecisionZW[1] + 0.5;\\n\\t#if DEPTH_PACKING == 3200\\n\\t\\tgl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );\\n\\t#elif DEPTH_PACKING == 3201\\n\\t\\tgl_FragColor = packDepthToRGBA( fragCoordZ );\\n\\t#endif\\n}\";\n  var vertex$d = \"#define DISTANCE\\nvarying vec3 vWorldPosition;\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#ifdef USE_DISPLACEMENTMAP\\n\\t\\t#include <beginnormal_vertex>\\n\\t\\t#include <morphnormal_vertex>\\n\\t\\t#include <skinnormal_vertex>\\n\\t#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvWorldPosition = worldPosition.xyz;\\n}\";\n  var fragment$d = \"#define DISTANCE\\nuniform vec3 referencePosition;\\nuniform float nearDistance;\\nuniform float farDistance;\\nvarying vec3 vWorldPosition;\\n#include <common>\\n#include <packing>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main () {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( 1.0 );\\n\\t#include <map_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\tfloat dist = length( vWorldPosition - referencePosition );\\n\\tdist = ( dist - nearDistance ) / ( farDistance - nearDistance );\\n\\tdist = saturate( dist );\\n\\tgl_FragColor = packDepthToRGBA( dist );\\n}\";\n  var vertex$c = \"varying vec3 vWorldDirection;\\n#include <common>\\nvoid main() {\\n\\tvWorldDirection = transformDirection( position, modelMatrix );\\n\\t#include <begin_vertex>\\n\\t#include <project_vertex>\\n}\";\n  var fragment$c = \"uniform sampler2D tEquirect;\\nvarying vec3 vWorldDirection;\\n#include <common>\\nvoid main() {\\n\\tvec3 direction = normalize( vWorldDirection );\\n\\tvec2 sampleUV = equirectUv( direction );\\n\\tvec4 texColor = texture2D( tEquirect, sampleUV );\\n\\tgl_FragColor = mapTexelToLinear( texColor );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n}\";\n  var vertex$b = \"uniform float scale;\\nattribute float lineDistance;\\nvarying float vLineDistance;\\n#include <common>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\tvLineDistance = scale * lineDistance;\\n\\t#include <color_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <fog_vertex>\\n}\";\n  var fragment$b = \"uniform vec3 diffuse;\\nuniform float opacity;\\nuniform float dashSize;\\nuniform float totalSize;\\nvarying float vLineDistance;\\n#include <common>\\n#include <color_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tif ( mod( vLineDistance, totalSize ) > dashSize ) {\\n\\t\\tdiscard;\\n\\t}\\n\\tvec3 outgoingLight = vec3( 0.0 );\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <color_fragment>\\n\\toutgoingLight = diffuseColor.rgb;\\n\\t#include <output_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n}\";\n  var vertex$a = \"#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#if defined ( USE_ENVMAP ) || defined ( USE_SKINNING )\\n\\t\\t#include <beginnormal_vertex>\\n\\t\\t#include <morphnormal_vertex>\\n\\t\\t#include <skinbase_vertex>\\n\\t\\t#include <skinnormal_vertex>\\n\\t\\t#include <defaultnormal_vertex>\\n\\t#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <envmap_vertex>\\n\\t#include <fog_vertex>\\n}\";\n  var fragment$a = \"uniform vec3 diffuse;\\nuniform float opacity;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <envmap_common_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <cube_uv_reflection_fragment>\\n#include <fog_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <specularmap_fragment>\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\t#ifdef USE_LIGHTMAP\\n\\t\\tvec4 lightMapTexel= texture2D( lightMap, vUv2 );\\n\\t\\treflectedLight.indirectDiffuse += lightMapTexelToLinear( lightMapTexel ).rgb * lightMapIntensity;\\n\\t#else\\n\\t\\treflectedLight.indirectDiffuse += vec3( 1.0 );\\n\\t#endif\\n\\t#include <aomap_fragment>\\n\\treflectedLight.indirectDiffuse *= diffuseColor.rgb;\\n\\tvec3 outgoingLight = reflectedLight.indirectDiffuse;\\n\\t#include <envmap_fragment>\\n\\t#include <output_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\n  var vertex$9 = \"#define LAMBERT\\nvarying vec3 vLightFront;\\nvarying vec3 vIndirectFront;\\n#ifdef DOUBLE_SIDED\\n\\tvarying vec3 vLightBack;\\n\\tvarying vec3 vIndirectBack;\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <envmap_vertex>\\n\\t#include <lights_lambert_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\";\n  var fragment$9 = \"uniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform float opacity;\\nvarying vec3 vLightFront;\\nvarying vec3 vIndirectFront;\\n#ifdef DOUBLE_SIDED\\n\\tvarying vec3 vLightBack;\\n\\tvarying vec3 vIndirectBack;\\n#endif\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <envmap_common_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <cube_uv_reflection_fragment>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <fog_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <shadowmask_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <specularmap_fragment>\\n\\t#include <emissivemap_fragment>\\n\\t#ifdef DOUBLE_SIDED\\n\\t\\treflectedLight.indirectDiffuse += ( gl_FrontFacing ) ? vIndirectFront : vIndirectBack;\\n\\t#else\\n\\t\\treflectedLight.indirectDiffuse += vIndirectFront;\\n\\t#endif\\n\\t#include <lightmap_fragment>\\n\\treflectedLight.indirectDiffuse *= BRDF_Lambert( diffuseColor.rgb );\\n\\t#ifdef DOUBLE_SIDED\\n\\t\\treflectedLight.directDiffuse = ( gl_FrontFacing ) ? vLightFront : vLightBack;\\n\\t#else\\n\\t\\treflectedLight.directDiffuse = vLightFront;\\n\\t#endif\\n\\treflectedLight.directDiffuse *= BRDF_Lambert( diffuseColor.rgb ) * getShadowMask();\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\\n\\t#include <envmap_fragment>\\n\\t#include <output_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\n  var vertex$8 = \"#define MATCAP\\nvarying vec3 vViewPosition;\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <color_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <normal_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <color_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <normal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <fog_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n}\";\n  var fragment$8 = \"#define MATCAP\\nuniform vec3 diffuse;\\nuniform float opacity;\\nuniform sampler2D matcap;\\nvarying vec3 vViewPosition;\\n#include <common>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <normal_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\tvec3 viewDir = normalize( vViewPosition );\\n\\tvec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );\\n\\tvec3 y = cross( viewDir, x );\\n\\tvec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;\\n\\t#ifdef USE_MATCAP\\n\\t\\tvec4 matcapColor = texture2D( matcap, uv );\\n\\t\\tmatcapColor = matcapTexelToLinear( matcapColor );\\n\\t#else\\n\\t\\tvec4 matcapColor = vec4( 1.0 );\\n\\t#endif\\n\\tvec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;\\n\\t#include <output_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\n  var vertex$7 = \"#define NORMAL\\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\\n\\tvarying vec3 vViewPosition;\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <normal_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <normal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\\n\\tvViewPosition = - mvPosition.xyz;\\n#endif\\n}\";\n  var fragment$7 = \"#define NORMAL\\nuniform float opacity;\\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\\n\\tvarying vec3 vViewPosition;\\n#endif\\n#include <packing>\\n#include <uv_pars_fragment>\\n#include <normal_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\tgl_FragColor = vec4( packNormalToRGB( normal ), opacity );\\n}\";\n  var vertex$6 = \"#define PHONG\\nvarying vec3 vViewPosition;\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <normal_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <normal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n\\t#include <worldpos_vertex>\\n\\t#include <envmap_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\";\n  var fragment$6 = \"#define PHONG\\nuniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform vec3 specular;\\nuniform float shininess;\\nuniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <envmap_common_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <cube_uv_reflection_fragment>\\n#include <fog_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <normal_pars_fragment>\\n#include <lights_phong_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <specularmap_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\t#include <emissivemap_fragment>\\n\\t#include <lights_phong_fragment>\\n\\t#include <lights_fragment_begin>\\n\\t#include <lights_fragment_maps>\\n\\t#include <lights_fragment_end>\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\\n\\t#include <envmap_fragment>\\n\\t#include <output_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\n  var vertex$5 = \"#define STANDARD\\nvarying vec3 vViewPosition;\\n#ifdef USE_TRANSMISSION\\n\\tvarying vec3 vWorldPosition;\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <normal_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <normal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n\\t#include <worldpos_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n#ifdef USE_TRANSMISSION\\n\\tvWorldPosition = worldPosition.xyz;\\n#endif\\n}\";\n  var fragment$5 = \"#define STANDARD\\n#ifdef PHYSICAL\\n\\t#define IOR\\n\\t#define SPECULAR\\n#endif\\nuniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform float roughness;\\nuniform float metalness;\\nuniform float opacity;\\n#ifdef IOR\\n\\tuniform float ior;\\n#endif\\n#ifdef SPECULAR\\n\\tuniform float specularIntensity;\\n\\tuniform vec3 specularColor;\\n\\t#ifdef USE_SPECULARINTENSITYMAP\\n\\t\\tuniform sampler2D specularIntensityMap;\\n\\t#endif\\n\\t#ifdef USE_SPECULARCOLORMAP\\n\\t\\tuniform sampler2D specularColorMap;\\n\\t#endif\\n#endif\\n#ifdef USE_CLEARCOAT\\n\\tuniform float clearcoat;\\n\\tuniform float clearcoatRoughness;\\n#endif\\n#ifdef USE_SHEEN\\n\\tuniform vec3 sheenColor;\\n\\tuniform float sheenRoughness;\\n\\t#ifdef USE_SHEENCOLORMAP\\n\\t\\tuniform sampler2D sheenColorMap;\\n\\t#endif\\n\\t#ifdef USE_SHEENROUGHNESSMAP\\n\\t\\tuniform sampler2D sheenRoughnessMap;\\n\\t#endif\\n#endif\\nvarying vec3 vViewPosition;\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <bsdfs>\\n#include <cube_uv_reflection_fragment>\\n#include <envmap_common_pars_fragment>\\n#include <envmap_physical_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <lights_pars_begin>\\n#include <normal_pars_fragment>\\n#include <lights_physical_pars_fragment>\\n#include <transmission_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <clearcoat_pars_fragment>\\n#include <roughnessmap_pars_fragment>\\n#include <metalnessmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <roughnessmap_fragment>\\n\\t#include <metalnessmap_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\t#include <clearcoat_normal_fragment_begin>\\n\\t#include <clearcoat_normal_fragment_maps>\\n\\t#include <emissivemap_fragment>\\n\\t#include <lights_physical_fragment>\\n\\t#include <lights_fragment_begin>\\n\\t#include <lights_fragment_maps>\\n\\t#include <lights_fragment_end>\\n\\t#include <aomap_fragment>\\n\\tvec3 totalDiffuse = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse;\\n\\tvec3 totalSpecular = reflectedLight.directSpecular + reflectedLight.indirectSpecular;\\n\\t#include <transmission_fragment>\\n\\tvec3 outgoingLight = totalDiffuse + totalSpecular + totalEmissiveRadiance;\\n\\t#ifdef USE_CLEARCOAT\\n\\t\\tfloat dotNVcc = saturate( dot( geometry.clearcoatNormal, geometry.viewDir ) );\\n\\t\\tvec3 Fcc = F_Schlick( material.clearcoatF0, material.clearcoatF90, dotNVcc );\\n\\t\\toutgoingLight = outgoingLight * ( 1.0 - clearcoat * Fcc ) + clearcoatSpecular * clearcoat;\\n\\t#endif\\n\\t#include <output_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\n  var vertex$4 = \"#define TOON\\nvarying vec3 vViewPosition;\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <normal_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <normal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n\\t#include <worldpos_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\";\n  var fragment$4 = \"#define TOON\\nuniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <gradientmap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <normal_pars_fragment>\\n#include <lights_toon_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\t#include <emissivemap_fragment>\\n\\t#include <lights_toon_fragment>\\n\\t#include <lights_fragment_begin>\\n\\t#include <lights_fragment_maps>\\n\\t#include <lights_fragment_end>\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\\n\\t#include <output_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\n  var vertex$3 = \"uniform float size;\\nuniform float scale;\\n#include <common>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <color_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <project_vertex>\\n\\tgl_PointSize = size;\\n\\t#ifdef USE_SIZEATTENUATION\\n\\t\\tbool isPerspective = isPerspectiveMatrix( projectionMatrix );\\n\\t\\tif ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );\\n\\t#endif\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <fog_vertex>\\n}\";\n  var fragment$3 = \"uniform vec3 diffuse;\\nuniform float opacity;\\n#include <common>\\n#include <color_pars_fragment>\\n#include <map_particle_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec3 outgoingLight = vec3( 0.0 );\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_particle_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphatest_fragment>\\n\\toutgoingLight = diffuseColor.rgb;\\n\\t#include <output_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n}\";\n  var vertex$2 = \"#include <common>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\nvoid main() {\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <project_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\";\n  var fragment$2 = \"uniform vec3 color;\\nuniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <fog_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <shadowmap_pars_fragment>\\n#include <shadowmask_pars_fragment>\\nvoid main() {\\n\\tgl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n}\";\n  var vertex$1 = \"uniform float rotation;\\nuniform vec2 center;\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\tvec4 mvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );\\n\\tvec2 scale;\\n\\tscale.x = length( vec3( modelMatrix[ 0 ].x, modelMatrix[ 0 ].y, modelMatrix[ 0 ].z ) );\\n\\tscale.y = length( vec3( modelMatrix[ 1 ].x, modelMatrix[ 1 ].y, modelMatrix[ 1 ].z ) );\\n\\t#ifndef USE_SIZEATTENUATION\\n\\t\\tbool isPerspective = isPerspectiveMatrix( projectionMatrix );\\n\\t\\tif ( isPerspective ) scale *= - mvPosition.z;\\n\\t#endif\\n\\tvec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;\\n\\tvec2 rotatedPosition;\\n\\trotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;\\n\\trotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;\\n\\tmvPosition.xy += rotatedPosition;\\n\\tgl_Position = projectionMatrix * mvPosition;\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <fog_vertex>\\n}\";\n  var fragment$1 = \"uniform vec3 diffuse;\\nuniform float opacity;\\n#include <common>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec3 outgoingLight = vec3( 0.0 );\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\toutgoingLight = diffuseColor.rgb;\\n\\t#include <output_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n}\";\n  var ShaderChunk = {\n    alphamap_fragment: alphamap_fragment,\n    alphamap_pars_fragment: alphamap_pars_fragment,\n    alphatest_fragment: alphatest_fragment,\n    alphatest_pars_fragment: alphatest_pars_fragment,\n    aomap_fragment: aomap_fragment,\n    aomap_pars_fragment: aomap_pars_fragment,\n    begin_vertex: begin_vertex,\n    beginnormal_vertex: beginnormal_vertex,\n    bsdfs: bsdfs,\n    bumpmap_pars_fragment: bumpmap_pars_fragment,\n    clipping_planes_fragment: clipping_planes_fragment,\n    clipping_planes_pars_fragment: clipping_planes_pars_fragment,\n    clipping_planes_pars_vertex: clipping_planes_pars_vertex,\n    clipping_planes_vertex: clipping_planes_vertex,\n    color_fragment: color_fragment,\n    color_pars_fragment: color_pars_fragment,\n    color_pars_vertex: color_pars_vertex,\n    color_vertex: color_vertex,\n    common: common,\n    cube_uv_reflection_fragment: cube_uv_reflection_fragment,\n    defaultnormal_vertex: defaultnormal_vertex,\n    displacementmap_pars_vertex: displacementmap_pars_vertex,\n    displacementmap_vertex: displacementmap_vertex,\n    emissivemap_fragment: emissivemap_fragment,\n    emissivemap_pars_fragment: emissivemap_pars_fragment,\n    encodings_fragment: encodings_fragment,\n    encodings_pars_fragment: encodings_pars_fragment,\n    envmap_fragment: envmap_fragment,\n    envmap_common_pars_fragment: envmap_common_pars_fragment,\n    envmap_pars_fragment: envmap_pars_fragment,\n    envmap_pars_vertex: envmap_pars_vertex,\n    envmap_physical_pars_fragment: envmap_physical_pars_fragment,\n    envmap_vertex: envmap_vertex,\n    fog_vertex: fog_vertex,\n    fog_pars_vertex: fog_pars_vertex,\n    fog_fragment: fog_fragment,\n    fog_pars_fragment: fog_pars_fragment,\n    gradientmap_pars_fragment: gradientmap_pars_fragment,\n    lightmap_fragment: lightmap_fragment,\n    lightmap_pars_fragment: lightmap_pars_fragment,\n    lights_lambert_vertex: lights_lambert_vertex,\n    lights_pars_begin: lights_pars_begin,\n    lights_toon_fragment: lights_toon_fragment,\n    lights_toon_pars_fragment: lights_toon_pars_fragment,\n    lights_phong_fragment: lights_phong_fragment,\n    lights_phong_pars_fragment: lights_phong_pars_fragment,\n    lights_physical_fragment: lights_physical_fragment,\n    lights_physical_pars_fragment: lights_physical_pars_fragment,\n    lights_fragment_begin: lights_fragment_begin,\n    lights_fragment_maps: lights_fragment_maps,\n    lights_fragment_end: lights_fragment_end,\n    logdepthbuf_fragment: logdepthbuf_fragment,\n    logdepthbuf_pars_fragment: logdepthbuf_pars_fragment,\n    logdepthbuf_pars_vertex: logdepthbuf_pars_vertex,\n    logdepthbuf_vertex: logdepthbuf_vertex,\n    map_fragment: map_fragment,\n    map_pars_fragment: map_pars_fragment,\n    map_particle_fragment: map_particle_fragment,\n    map_particle_pars_fragment: map_particle_pars_fragment,\n    metalnessmap_fragment: metalnessmap_fragment,\n    metalnessmap_pars_fragment: metalnessmap_pars_fragment,\n    morphnormal_vertex: morphnormal_vertex,\n    morphtarget_pars_vertex: morphtarget_pars_vertex,\n    morphtarget_vertex: morphtarget_vertex,\n    normal_fragment_begin: normal_fragment_begin,\n    normal_fragment_maps: normal_fragment_maps,\n    normal_pars_fragment: normal_pars_fragment,\n    normal_pars_vertex: normal_pars_vertex,\n    normal_vertex: normal_vertex,\n    normalmap_pars_fragment: normalmap_pars_fragment,\n    clearcoat_normal_fragment_begin: clearcoat_normal_fragment_begin,\n    clearcoat_normal_fragment_maps: clearcoat_normal_fragment_maps,\n    clearcoat_pars_fragment: clearcoat_pars_fragment,\n    output_fragment: output_fragment,\n    packing: packing,\n    premultiplied_alpha_fragment: premultiplied_alpha_fragment,\n    project_vertex: project_vertex,\n    dithering_fragment: dithering_fragment,\n    dithering_pars_fragment: dithering_pars_fragment,\n    roughnessmap_fragment: roughnessmap_fragment,\n    roughnessmap_pars_fragment: roughnessmap_pars_fragment,\n    shadowmap_pars_fragment: shadowmap_pars_fragment,\n    shadowmap_pars_vertex: shadowmap_pars_vertex,\n    shadowmap_vertex: shadowmap_vertex,\n    shadowmask_pars_fragment: shadowmask_pars_fragment,\n    skinbase_vertex: skinbase_vertex,\n    skinning_pars_vertex: skinning_pars_vertex,\n    skinning_vertex: skinning_vertex,\n    skinnormal_vertex: skinnormal_vertex,\n    specularmap_fragment: specularmap_fragment,\n    specularmap_pars_fragment: specularmap_pars_fragment,\n    tonemapping_fragment: tonemapping_fragment,\n    tonemapping_pars_fragment: tonemapping_pars_fragment,\n    transmission_fragment: transmission_fragment,\n    transmission_pars_fragment: transmission_pars_fragment,\n    uv_pars_fragment: uv_pars_fragment,\n    uv_pars_vertex: uv_pars_vertex,\n    uv_vertex: uv_vertex,\n    uv2_pars_fragment: uv2_pars_fragment,\n    uv2_pars_vertex: uv2_pars_vertex,\n    uv2_vertex: uv2_vertex,\n    worldpos_vertex: worldpos_vertex,\n    background_vert: vertex$g,\n    background_frag: fragment$g,\n    cube_vert: vertex$f,\n    cube_frag: fragment$f,\n    depth_vert: vertex$e,\n    depth_frag: fragment$e,\n    distanceRGBA_vert: vertex$d,\n    distanceRGBA_frag: fragment$d,\n    equirect_vert: vertex$c,\n    equirect_frag: fragment$c,\n    linedashed_vert: vertex$b,\n    linedashed_frag: fragment$b,\n    meshbasic_vert: vertex$a,\n    meshbasic_frag: fragment$a,\n    meshlambert_vert: vertex$9,\n    meshlambert_frag: fragment$9,\n    meshmatcap_vert: vertex$8,\n    meshmatcap_frag: fragment$8,\n    meshnormal_vert: vertex$7,\n    meshnormal_frag: fragment$7,\n    meshphong_vert: vertex$6,\n    meshphong_frag: fragment$6,\n    meshphysical_vert: vertex$5,\n    meshphysical_frag: fragment$5,\n    meshtoon_vert: vertex$4,\n    meshtoon_frag: fragment$4,\n    points_vert: vertex$3,\n    points_frag: fragment$3,\n    shadow_vert: vertex$2,\n    shadow_frag: fragment$2,\n    sprite_vert: vertex$1,\n    sprite_frag: fragment$1\n  };\n  /**\n   * Uniforms library for shared webgl shaders\n   */\n\n  var UniformsLib = {\n    common: {\n      diffuse: {\n        value: new Color(0xffffff)\n      },\n      opacity: {\n        value: 1.0\n      },\n      map: {\n        value: null\n      },\n      uvTransform: {\n        value: new Matrix3()\n      },\n      uv2Transform: {\n        value: new Matrix3()\n      },\n      alphaMap: {\n        value: null\n      },\n      alphaTest: {\n        value: 0\n      }\n    },\n    specularmap: {\n      specularMap: {\n        value: null\n      }\n    },\n    envmap: {\n      envMap: {\n        value: null\n      },\n      flipEnvMap: {\n        value: -1\n      },\n      reflectivity: {\n        value: 1.0\n      },\n      // basic, lambert, phong\n      ior: {\n        value: 1.5\n      },\n      // standard, physical\n      refractionRatio: {\n        value: 0.98\n      },\n      maxMipLevel: {\n        value: 0\n      }\n    },\n    aomap: {\n      aoMap: {\n        value: null\n      },\n      aoMapIntensity: {\n        value: 1\n      }\n    },\n    lightmap: {\n      lightMap: {\n        value: null\n      },\n      lightMapIntensity: {\n        value: 1\n      }\n    },\n    emissivemap: {\n      emissiveMap: {\n        value: null\n      }\n    },\n    bumpmap: {\n      bumpMap: {\n        value: null\n      },\n      bumpScale: {\n        value: 1\n      }\n    },\n    normalmap: {\n      normalMap: {\n        value: null\n      },\n      normalScale: {\n        value: new Vector2(1, 1)\n      }\n    },\n    displacementmap: {\n      displacementMap: {\n        value: null\n      },\n      displacementScale: {\n        value: 1\n      },\n      displacementBias: {\n        value: 0\n      }\n    },\n    roughnessmap: {\n      roughnessMap: {\n        value: null\n      }\n    },\n    metalnessmap: {\n      metalnessMap: {\n        value: null\n      }\n    },\n    gradientmap: {\n      gradientMap: {\n        value: null\n      }\n    },\n    fog: {\n      fogDensity: {\n        value: 0.00025\n      },\n      fogNear: {\n        value: 1\n      },\n      fogFar: {\n        value: 2000\n      },\n      fogColor: {\n        value: new Color(0xffffff)\n      }\n    },\n    lights: {\n      ambientLightColor: {\n        value: []\n      },\n      lightProbe: {\n        value: []\n      },\n      directionalLights: {\n        value: [],\n        properties: {\n          direction: {},\n          color: {}\n        }\n      },\n      directionalLightShadows: {\n        value: [],\n        properties: {\n          shadowBias: {},\n          shadowNormalBias: {},\n          shadowRadius: {},\n          shadowMapSize: {}\n        }\n      },\n      directionalShadowMap: {\n        value: []\n      },\n      directionalShadowMatrix: {\n        value: []\n      },\n      spotLights: {\n        value: [],\n        properties: {\n          color: {},\n          position: {},\n          direction: {},\n          distance: {},\n          coneCos: {},\n          penumbraCos: {},\n          decay: {}\n        }\n      },\n      spotLightShadows: {\n        value: [],\n        properties: {\n          shadowBias: {},\n          shadowNormalBias: {},\n          shadowRadius: {},\n          shadowMapSize: {}\n        }\n      },\n      spotShadowMap: {\n        value: []\n      },\n      spotShadowMatrix: {\n        value: []\n      },\n      pointLights: {\n        value: [],\n        properties: {\n          color: {},\n          position: {},\n          decay: {},\n          distance: {}\n        }\n      },\n      pointLightShadows: {\n        value: [],\n        properties: {\n          shadowBias: {},\n          shadowNormalBias: {},\n          shadowRadius: {},\n          shadowMapSize: {},\n          shadowCameraNear: {},\n          shadowCameraFar: {}\n        }\n      },\n      pointShadowMap: {\n        value: []\n      },\n      pointShadowMatrix: {\n        value: []\n      },\n      hemisphereLights: {\n        value: [],\n        properties: {\n          direction: {},\n          skyColor: {},\n          groundColor: {}\n        }\n      },\n      // TODO (abelnation): RectAreaLight BRDF data needs to be moved from example to main src\n      rectAreaLights: {\n        value: [],\n        properties: {\n          color: {},\n          position: {},\n          width: {},\n          height: {}\n        }\n      },\n      ltc_1: {\n        value: null\n      },\n      ltc_2: {\n        value: null\n      }\n    },\n    points: {\n      diffuse: {\n        value: new Color(0xffffff)\n      },\n      opacity: {\n        value: 1.0\n      },\n      size: {\n        value: 1.0\n      },\n      scale: {\n        value: 1.0\n      },\n      map: {\n        value: null\n      },\n      alphaMap: {\n        value: null\n      },\n      alphaTest: {\n        value: 0\n      },\n      uvTransform: {\n        value: new Matrix3()\n      }\n    },\n    sprite: {\n      diffuse: {\n        value: new Color(0xffffff)\n      },\n      opacity: {\n        value: 1.0\n      },\n      center: {\n        value: new Vector2(0.5, 0.5)\n      },\n      rotation: {\n        value: 0.0\n      },\n      map: {\n        value: null\n      },\n      alphaMap: {\n        value: null\n      },\n      alphaTest: {\n        value: 0\n      },\n      uvTransform: {\n        value: new Matrix3()\n      }\n    }\n  };\n  var ShaderLib = {\n    basic: {\n      uniforms: mergeUniforms([UniformsLib.common, UniformsLib.specularmap, UniformsLib.envmap, UniformsLib.aomap, UniformsLib.lightmap, UniformsLib.fog]),\n      vertexShader: ShaderChunk.meshbasic_vert,\n      fragmentShader: ShaderChunk.meshbasic_frag\n    },\n    lambert: {\n      uniforms: mergeUniforms([UniformsLib.common, UniformsLib.specularmap, UniformsLib.envmap, UniformsLib.aomap, UniformsLib.lightmap, UniformsLib.emissivemap, UniformsLib.fog, UniformsLib.lights, {\n        emissive: {\n          value: new Color(0x000000)\n        }\n      }]),\n      vertexShader: ShaderChunk.meshlambert_vert,\n      fragmentShader: ShaderChunk.meshlambert_frag\n    },\n    phong: {\n      uniforms: mergeUniforms([UniformsLib.common, UniformsLib.specularmap, UniformsLib.envmap, UniformsLib.aomap, UniformsLib.lightmap, UniformsLib.emissivemap, UniformsLib.bumpmap, UniformsLib.normalmap, UniformsLib.displacementmap, UniformsLib.fog, UniformsLib.lights, {\n        emissive: {\n          value: new Color(0x000000)\n        },\n        specular: {\n          value: new Color(0x111111)\n        },\n        shininess: {\n          value: 30\n        }\n      }]),\n      vertexShader: ShaderChunk.meshphong_vert,\n      fragmentShader: ShaderChunk.meshphong_frag\n    },\n    standard: {\n      uniforms: mergeUniforms([UniformsLib.common, UniformsLib.envmap, UniformsLib.aomap, UniformsLib.lightmap, UniformsLib.emissivemap, UniformsLib.bumpmap, UniformsLib.normalmap, UniformsLib.displacementmap, UniformsLib.roughnessmap, UniformsLib.metalnessmap, UniformsLib.fog, UniformsLib.lights, {\n        emissive: {\n          value: new Color(0x000000)\n        },\n        roughness: {\n          value: 1.0\n        },\n        metalness: {\n          value: 0.0\n        },\n        envMapIntensity: {\n          value: 1\n        } // temporary\n\n      }]),\n      vertexShader: ShaderChunk.meshphysical_vert,\n      fragmentShader: ShaderChunk.meshphysical_frag\n    },\n    toon: {\n      uniforms: mergeUniforms([UniformsLib.common, UniformsLib.aomap, UniformsLib.lightmap, UniformsLib.emissivemap, UniformsLib.bumpmap, UniformsLib.normalmap, UniformsLib.displacementmap, UniformsLib.gradientmap, UniformsLib.fog, UniformsLib.lights, {\n        emissive: {\n          value: new Color(0x000000)\n        }\n      }]),\n      vertexShader: ShaderChunk.meshtoon_vert,\n      fragmentShader: ShaderChunk.meshtoon_frag\n    },\n    matcap: {\n      uniforms: mergeUniforms([UniformsLib.common, UniformsLib.bumpmap, UniformsLib.normalmap, UniformsLib.displacementmap, UniformsLib.fog, {\n        matcap: {\n          value: null\n        }\n      }]),\n      vertexShader: ShaderChunk.meshmatcap_vert,\n      fragmentShader: ShaderChunk.meshmatcap_frag\n    },\n    points: {\n      uniforms: mergeUniforms([UniformsLib.points, UniformsLib.fog]),\n      vertexShader: ShaderChunk.points_vert,\n      fragmentShader: ShaderChunk.points_frag\n    },\n    dashed: {\n      uniforms: mergeUniforms([UniformsLib.common, UniformsLib.fog, {\n        scale: {\n          value: 1\n        },\n        dashSize: {\n          value: 1\n        },\n        totalSize: {\n          value: 2\n        }\n      }]),\n      vertexShader: ShaderChunk.linedashed_vert,\n      fragmentShader: ShaderChunk.linedashed_frag\n    },\n    depth: {\n      uniforms: mergeUniforms([UniformsLib.common, UniformsLib.displacementmap]),\n      vertexShader: ShaderChunk.depth_vert,\n      fragmentShader: ShaderChunk.depth_frag\n    },\n    normal: {\n      uniforms: mergeUniforms([UniformsLib.common, UniformsLib.bumpmap, UniformsLib.normalmap, UniformsLib.displacementmap, {\n        opacity: {\n          value: 1.0\n        }\n      }]),\n      vertexShader: ShaderChunk.meshnormal_vert,\n      fragmentShader: ShaderChunk.meshnormal_frag\n    },\n    sprite: {\n      uniforms: mergeUniforms([UniformsLib.sprite, UniformsLib.fog]),\n      vertexShader: ShaderChunk.sprite_vert,\n      fragmentShader: ShaderChunk.sprite_frag\n    },\n    background: {\n      uniforms: {\n        uvTransform: {\n          value: new Matrix3()\n        },\n        t2D: {\n          value: null\n        }\n      },\n      vertexShader: ShaderChunk.background_vert,\n      fragmentShader: ShaderChunk.background_frag\n    },\n\n    /* -------------------------------------------------------------------------\n    //\tCube map shader\n     ------------------------------------------------------------------------- */\n    cube: {\n      uniforms: mergeUniforms([UniformsLib.envmap, {\n        opacity: {\n          value: 1.0\n        }\n      }]),\n      vertexShader: ShaderChunk.cube_vert,\n      fragmentShader: ShaderChunk.cube_frag\n    },\n    equirect: {\n      uniforms: {\n        tEquirect: {\n          value: null\n        }\n      },\n      vertexShader: ShaderChunk.equirect_vert,\n      fragmentShader: ShaderChunk.equirect_frag\n    },\n    distanceRGBA: {\n      uniforms: mergeUniforms([UniformsLib.common, UniformsLib.displacementmap, {\n        referencePosition: {\n          value: new Vector3()\n        },\n        nearDistance: {\n          value: 1\n        },\n        farDistance: {\n          value: 1000\n        }\n      }]),\n      vertexShader: ShaderChunk.distanceRGBA_vert,\n      fragmentShader: ShaderChunk.distanceRGBA_frag\n    },\n    shadow: {\n      uniforms: mergeUniforms([UniformsLib.lights, UniformsLib.fog, {\n        color: {\n          value: new Color(0x00000)\n        },\n        opacity: {\n          value: 1.0\n        }\n      }]),\n      vertexShader: ShaderChunk.shadow_vert,\n      fragmentShader: ShaderChunk.shadow_frag\n    }\n  };\n  ShaderLib.physical = {\n    uniforms: mergeUniforms([ShaderLib.standard.uniforms, {\n      clearcoat: {\n        value: 0\n      },\n      clearcoatMap: {\n        value: null\n      },\n      clearcoatRoughness: {\n        value: 0\n      },\n      clearcoatRoughnessMap: {\n        value: null\n      },\n      clearcoatNormalScale: {\n        value: new Vector2(1, 1)\n      },\n      clearcoatNormalMap: {\n        value: null\n      },\n      sheen: {\n        value: 0\n      },\n      sheenColor: {\n        value: new Color(0x000000)\n      },\n      sheenColorMap: {\n        value: null\n      },\n      sheenRoughness: {\n        value: 0\n      },\n      sheenRoughnessMap: {\n        value: null\n      },\n      transmission: {\n        value: 0\n      },\n      transmissionMap: {\n        value: null\n      },\n      transmissionSamplerSize: {\n        value: new Vector2()\n      },\n      transmissionSamplerMap: {\n        value: null\n      },\n      thickness: {\n        value: 0\n      },\n      thicknessMap: {\n        value: null\n      },\n      attenuationDistance: {\n        value: 0\n      },\n      attenuationColor: {\n        value: new Color(0x000000)\n      },\n      specularIntensity: {\n        value: 0\n      },\n      specularIntensityMap: {\n        value: null\n      },\n      specularColor: {\n        value: new Color(1, 1, 1)\n      },\n      specularColorMap: {\n        value: null\n      }\n    }]),\n    vertexShader: ShaderChunk.meshphysical_vert,\n    fragmentShader: ShaderChunk.meshphysical_frag\n  };\n\n  function WebGLBackground(renderer, cubemaps, state, objects, premultipliedAlpha) {\n    var clearColor = new Color(0x000000);\n    var clearAlpha = 0;\n    var planeMesh;\n    var boxMesh;\n    var currentBackground = null;\n    var currentBackgroundVersion = 0;\n    var currentTonemapping = null;\n\n    function render(renderList, scene) {\n      var forceClear = false;\n      var background = scene.isScene === true ? scene.background : null;\n\n      if (background && background.isTexture) {\n        background = cubemaps.get(background);\n      } // Ignore background in AR\n      // TODO: Reconsider this.\n\n\n      var xr = renderer.xr;\n      var session = xr.getSession && xr.getSession();\n\n      if (session && session.environmentBlendMode === 'additive') {\n        background = null;\n      }\n\n      if (background === null) {\n        setClear(clearColor, clearAlpha);\n      } else if (background && background.isColor) {\n        setClear(background, 1);\n        forceClear = true;\n      }\n\n      if (renderer.autoClear || forceClear) {\n        renderer.clear(renderer.autoClearColor, renderer.autoClearDepth, renderer.autoClearStencil);\n      }\n\n      if (background && (background.isCubeTexture || background.mapping === CubeUVReflectionMapping)) {\n        if (boxMesh === undefined) {\n          boxMesh = new Mesh(new BoxGeometry(1, 1, 1), new ShaderMaterial({\n            name: 'BackgroundCubeMaterial',\n            uniforms: cloneUniforms(ShaderLib.cube.uniforms),\n            vertexShader: ShaderLib.cube.vertexShader,\n            fragmentShader: ShaderLib.cube.fragmentShader,\n            side: BackSide,\n            depthTest: false,\n            depthWrite: false,\n            fog: false\n          }));\n          boxMesh.geometry.deleteAttribute('normal');\n          boxMesh.geometry.deleteAttribute('uv');\n\n          boxMesh.onBeforeRender = function (renderer, scene, camera) {\n            this.matrixWorld.copyPosition(camera.matrixWorld);\n          }; // enable code injection for non-built-in material\n\n\n          Object.defineProperty(boxMesh.material, 'envMap', {\n            get: function get() {\n              return this.uniforms.envMap.value;\n            }\n          });\n          objects.update(boxMesh);\n        }\n\n        boxMesh.material.uniforms.envMap.value = background;\n        boxMesh.material.uniforms.flipEnvMap.value = background.isCubeTexture && background.isRenderTargetTexture === false ? -1 : 1;\n\n        if (currentBackground !== background || currentBackgroundVersion !== background.version || currentTonemapping !== renderer.toneMapping) {\n          boxMesh.material.needsUpdate = true;\n          currentBackground = background;\n          currentBackgroundVersion = background.version;\n          currentTonemapping = renderer.toneMapping;\n        } // push to the pre-sorted opaque render list\n\n\n        renderList.unshift(boxMesh, boxMesh.geometry, boxMesh.material, 0, 0, null);\n      } else if (background && background.isTexture) {\n        if (planeMesh === undefined) {\n          planeMesh = new Mesh(new PlaneGeometry(2, 2), new ShaderMaterial({\n            name: 'BackgroundMaterial',\n            uniforms: cloneUniforms(ShaderLib.background.uniforms),\n            vertexShader: ShaderLib.background.vertexShader,\n            fragmentShader: ShaderLib.background.fragmentShader,\n            side: FrontSide,\n            depthTest: false,\n            depthWrite: false,\n            fog: false\n          }));\n          planeMesh.geometry.deleteAttribute('normal'); // enable code injection for non-built-in material\n\n          Object.defineProperty(planeMesh.material, 'map', {\n            get: function get() {\n              return this.uniforms.t2D.value;\n            }\n          });\n          objects.update(planeMesh);\n        }\n\n        planeMesh.material.uniforms.t2D.value = background;\n\n        if (background.matrixAutoUpdate === true) {\n          background.updateMatrix();\n        }\n\n        planeMesh.material.uniforms.uvTransform.value.copy(background.matrix);\n\n        if (currentBackground !== background || currentBackgroundVersion !== background.version || currentTonemapping !== renderer.toneMapping) {\n          planeMesh.material.needsUpdate = true;\n          currentBackground = background;\n          currentBackgroundVersion = background.version;\n          currentTonemapping = renderer.toneMapping;\n        } // push to the pre-sorted opaque render list\n\n\n        renderList.unshift(planeMesh, planeMesh.geometry, planeMesh.material, 0, 0, null);\n      }\n    }\n\n    function setClear(color, alpha) {\n      state.buffers.color.setClear(color.r, color.g, color.b, alpha, premultipliedAlpha);\n    }\n\n    return {\n      getClearColor: function getClearColor() {\n        return clearColor;\n      },\n      setClearColor: function setClearColor(color) {\n        var alpha = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n        clearColor.set(color);\n        clearAlpha = alpha;\n        setClear(clearColor, clearAlpha);\n      },\n      getClearAlpha: function getClearAlpha() {\n        return clearAlpha;\n      },\n      setClearAlpha: function setClearAlpha(alpha) {\n        clearAlpha = alpha;\n        setClear(clearColor, clearAlpha);\n      },\n      render: render\n    };\n  }\n\n  function WebGLBindingStates(gl, extensions, attributes, capabilities) {\n    var maxVertexAttributes = gl.getParameter(gl.MAX_VERTEX_ATTRIBS);\n    var extension = capabilities.isWebGL2 ? null : extensions.get('OES_vertex_array_object');\n    var vaoAvailable = capabilities.isWebGL2 || extension !== null;\n    var bindingStates = {};\n    var defaultState = createBindingState(null);\n    var currentState = defaultState;\n\n    function setup(object, material, program, geometry, index) {\n      var updateBuffers = false;\n\n      if (vaoAvailable) {\n        var state = getBindingState(geometry, program, material);\n\n        if (currentState !== state) {\n          currentState = state;\n          bindVertexArrayObject(currentState.object);\n        }\n\n        updateBuffers = needsUpdate(geometry, index);\n        if (updateBuffers) saveCache(geometry, index);\n      } else {\n        var wireframe = material.wireframe === true;\n\n        if (currentState.geometry !== geometry.id || currentState.program !== program.id || currentState.wireframe !== wireframe) {\n          currentState.geometry = geometry.id;\n          currentState.program = program.id;\n          currentState.wireframe = wireframe;\n          updateBuffers = true;\n        }\n      }\n\n      if (object.isInstancedMesh === true) {\n        updateBuffers = true;\n      }\n\n      if (index !== null) {\n        attributes.update(index, gl.ELEMENT_ARRAY_BUFFER);\n      }\n\n      if (updateBuffers) {\n        setupVertexAttributes(object, material, program, geometry);\n\n        if (index !== null) {\n          gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, attributes.get(index).buffer);\n        }\n      }\n    }\n\n    function createVertexArrayObject() {\n      if (capabilities.isWebGL2) return gl.createVertexArray();\n      return extension.createVertexArrayOES();\n    }\n\n    function bindVertexArrayObject(vao) {\n      if (capabilities.isWebGL2) return gl.bindVertexArray(vao);\n      return extension.bindVertexArrayOES(vao);\n    }\n\n    function deleteVertexArrayObject(vao) {\n      if (capabilities.isWebGL2) return gl.deleteVertexArray(vao);\n      return extension.deleteVertexArrayOES(vao);\n    }\n\n    function getBindingState(geometry, program, material) {\n      var wireframe = material.wireframe === true;\n      var programMap = bindingStates[geometry.id];\n\n      if (programMap === undefined) {\n        programMap = {};\n        bindingStates[geometry.id] = programMap;\n      }\n\n      var stateMap = programMap[program.id];\n\n      if (stateMap === undefined) {\n        stateMap = {};\n        programMap[program.id] = stateMap;\n      }\n\n      var state = stateMap[wireframe];\n\n      if (state === undefined) {\n        state = createBindingState(createVertexArrayObject());\n        stateMap[wireframe] = state;\n      }\n\n      return state;\n    }\n\n    function createBindingState(vao) {\n      var newAttributes = [];\n      var enabledAttributes = [];\n      var attributeDivisors = [];\n\n      for (var _i70 = 0; _i70 < maxVertexAttributes; _i70++) {\n        newAttributes[_i70] = 0;\n        enabledAttributes[_i70] = 0;\n        attributeDivisors[_i70] = 0;\n      }\n\n      return {\n        // for backward compatibility on non-VAO support browser\n        geometry: null,\n        program: null,\n        wireframe: false,\n        newAttributes: newAttributes,\n        enabledAttributes: enabledAttributes,\n        attributeDivisors: attributeDivisors,\n        object: vao,\n        attributes: {},\n        index: null\n      };\n    }\n\n    function needsUpdate(geometry, index) {\n      var cachedAttributes = currentState.attributes;\n      var geometryAttributes = geometry.attributes;\n      var attributesNum = 0;\n\n      for (var key in geometryAttributes) {\n        var cachedAttribute = cachedAttributes[key];\n        var geometryAttribute = geometryAttributes[key];\n        if (cachedAttribute === undefined) return true;\n        if (cachedAttribute.attribute !== geometryAttribute) return true;\n        if (cachedAttribute.data !== geometryAttribute.data) return true;\n        attributesNum++;\n      }\n\n      if (currentState.attributesNum !== attributesNum) return true;\n      if (currentState.index !== index) return true;\n      return false;\n    }\n\n    function saveCache(geometry, index) {\n      var cache = {};\n      var attributes = geometry.attributes;\n      var attributesNum = 0;\n\n      for (var key in attributes) {\n        var attribute = attributes[key];\n        var data = {};\n        data.attribute = attribute;\n\n        if (attribute.data) {\n          data.data = attribute.data;\n        }\n\n        cache[key] = data;\n        attributesNum++;\n      }\n\n      currentState.attributes = cache;\n      currentState.attributesNum = attributesNum;\n      currentState.index = index;\n    }\n\n    function initAttributes() {\n      var newAttributes = currentState.newAttributes;\n\n      for (var _i71 = 0, il = newAttributes.length; _i71 < il; _i71++) {\n        newAttributes[_i71] = 0;\n      }\n    }\n\n    function enableAttribute(attribute) {\n      enableAttributeAndDivisor(attribute, 0);\n    }\n\n    function enableAttributeAndDivisor(attribute, meshPerAttribute) {\n      var newAttributes = currentState.newAttributes;\n      var enabledAttributes = currentState.enabledAttributes;\n      var attributeDivisors = currentState.attributeDivisors;\n      newAttributes[attribute] = 1;\n\n      if (enabledAttributes[attribute] === 0) {\n        gl.enableVertexAttribArray(attribute);\n        enabledAttributes[attribute] = 1;\n      }\n\n      if (attributeDivisors[attribute] !== meshPerAttribute) {\n        var _extension = capabilities.isWebGL2 ? gl : extensions.get('ANGLE_instanced_arrays');\n\n        _extension[capabilities.isWebGL2 ? 'vertexAttribDivisor' : 'vertexAttribDivisorANGLE'](attribute, meshPerAttribute);\n\n        attributeDivisors[attribute] = meshPerAttribute;\n      }\n    }\n\n    function disableUnusedAttributes() {\n      var newAttributes = currentState.newAttributes;\n      var enabledAttributes = currentState.enabledAttributes;\n\n      for (var _i72 = 0, il = enabledAttributes.length; _i72 < il; _i72++) {\n        if (enabledAttributes[_i72] !== newAttributes[_i72]) {\n          gl.disableVertexAttribArray(_i72);\n          enabledAttributes[_i72] = 0;\n        }\n      }\n    }\n\n    function vertexAttribPointer(index, size, type, normalized, stride, offset) {\n      if (capabilities.isWebGL2 === true && (type === gl.INT || type === gl.UNSIGNED_INT)) {\n        gl.vertexAttribIPointer(index, size, type, stride, offset);\n      } else {\n        gl.vertexAttribPointer(index, size, type, normalized, stride, offset);\n      }\n    }\n\n    function setupVertexAttributes(object, material, program, geometry) {\n      if (capabilities.isWebGL2 === false && (object.isInstancedMesh || geometry.isInstancedBufferGeometry)) {\n        if (extensions.get('ANGLE_instanced_arrays') === null) return;\n      }\n\n      initAttributes();\n      var geometryAttributes = geometry.attributes;\n      var programAttributes = program.getAttributes();\n      var materialDefaultAttributeValues = material.defaultAttributeValues;\n\n      for (var name in programAttributes) {\n        var programAttribute = programAttributes[name];\n\n        if (programAttribute.location >= 0) {\n          var geometryAttribute = geometryAttributes[name];\n\n          if (geometryAttribute === undefined) {\n            if (name === 'instanceMatrix' && object.instanceMatrix) geometryAttribute = object.instanceMatrix;\n            if (name === 'instanceColor' && object.instanceColor) geometryAttribute = object.instanceColor;\n          }\n\n          if (geometryAttribute !== undefined) {\n            var normalized = geometryAttribute.normalized;\n            var size = geometryAttribute.itemSize;\n            var attribute = attributes.get(geometryAttribute); // TODO Attribute may not be available on context restore\n\n            if (attribute === undefined) continue;\n            var buffer = attribute.buffer;\n            var type = attribute.type;\n            var bytesPerElement = attribute.bytesPerElement;\n\n            if (geometryAttribute.isInterleavedBufferAttribute) {\n              var data = geometryAttribute.data;\n              var stride = data.stride;\n              var offset = geometryAttribute.offset;\n\n              if (data && data.isInstancedInterleavedBuffer) {\n                for (var _i73 = 0; _i73 < programAttribute.locationSize; _i73++) {\n                  enableAttributeAndDivisor(programAttribute.location + _i73, data.meshPerAttribute);\n                }\n\n                if (object.isInstancedMesh !== true && geometry._maxInstanceCount === undefined) {\n                  geometry._maxInstanceCount = data.meshPerAttribute * data.count;\n                }\n              } else {\n                for (var _i74 = 0; _i74 < programAttribute.locationSize; _i74++) {\n                  enableAttribute(programAttribute.location + _i74);\n                }\n              }\n\n              gl.bindBuffer(gl.ARRAY_BUFFER, buffer);\n\n              for (var _i75 = 0; _i75 < programAttribute.locationSize; _i75++) {\n                vertexAttribPointer(programAttribute.location + _i75, size / programAttribute.locationSize, type, normalized, stride * bytesPerElement, (offset + size / programAttribute.locationSize * _i75) * bytesPerElement);\n              }\n            } else {\n              if (geometryAttribute.isInstancedBufferAttribute) {\n                for (var _i76 = 0; _i76 < programAttribute.locationSize; _i76++) {\n                  enableAttributeAndDivisor(programAttribute.location + _i76, geometryAttribute.meshPerAttribute);\n                }\n\n                if (object.isInstancedMesh !== true && geometry._maxInstanceCount === undefined) {\n                  geometry._maxInstanceCount = geometryAttribute.meshPerAttribute * geometryAttribute.count;\n                }\n              } else {\n                for (var _i77 = 0; _i77 < programAttribute.locationSize; _i77++) {\n                  enableAttribute(programAttribute.location + _i77);\n                }\n              }\n\n              gl.bindBuffer(gl.ARRAY_BUFFER, buffer);\n\n              for (var _i78 = 0; _i78 < programAttribute.locationSize; _i78++) {\n                vertexAttribPointer(programAttribute.location + _i78, size / programAttribute.locationSize, type, normalized, size * bytesPerElement, size / programAttribute.locationSize * _i78 * bytesPerElement);\n              }\n            }\n          } else if (materialDefaultAttributeValues !== undefined) {\n            var _value2 = materialDefaultAttributeValues[name];\n\n            if (_value2 !== undefined) {\n              switch (_value2.length) {\n                case 2:\n                  gl.vertexAttrib2fv(programAttribute.location, _value2);\n                  break;\n\n                case 3:\n                  gl.vertexAttrib3fv(programAttribute.location, _value2);\n                  break;\n\n                case 4:\n                  gl.vertexAttrib4fv(programAttribute.location, _value2);\n                  break;\n\n                default:\n                  gl.vertexAttrib1fv(programAttribute.location, _value2);\n              }\n            }\n          }\n        }\n      }\n\n      disableUnusedAttributes();\n    }\n\n    function dispose() {\n      reset();\n\n      for (var geometryId in bindingStates) {\n        var programMap = bindingStates[geometryId];\n\n        for (var programId in programMap) {\n          var stateMap = programMap[programId];\n\n          for (var wireframe in stateMap) {\n            deleteVertexArrayObject(stateMap[wireframe].object);\n            delete stateMap[wireframe];\n          }\n\n          delete programMap[programId];\n        }\n\n        delete bindingStates[geometryId];\n      }\n    }\n\n    function releaseStatesOfGeometry(geometry) {\n      if (bindingStates[geometry.id] === undefined) return;\n      var programMap = bindingStates[geometry.id];\n\n      for (var programId in programMap) {\n        var stateMap = programMap[programId];\n\n        for (var wireframe in stateMap) {\n          deleteVertexArrayObject(stateMap[wireframe].object);\n          delete stateMap[wireframe];\n        }\n\n        delete programMap[programId];\n      }\n\n      delete bindingStates[geometry.id];\n    }\n\n    function releaseStatesOfProgram(program) {\n      for (var geometryId in bindingStates) {\n        var programMap = bindingStates[geometryId];\n        if (programMap[program.id] === undefined) continue;\n        var stateMap = programMap[program.id];\n\n        for (var wireframe in stateMap) {\n          deleteVertexArrayObject(stateMap[wireframe].object);\n          delete stateMap[wireframe];\n        }\n\n        delete programMap[program.id];\n      }\n    }\n\n    function reset() {\n      resetDefaultState();\n      if (currentState === defaultState) return;\n      currentState = defaultState;\n      bindVertexArrayObject(currentState.object);\n    } // for backward-compatilibity\n\n\n    function resetDefaultState() {\n      defaultState.geometry = null;\n      defaultState.program = null;\n      defaultState.wireframe = false;\n    }\n\n    return {\n      setup: setup,\n      reset: reset,\n      resetDefaultState: resetDefaultState,\n      dispose: dispose,\n      releaseStatesOfGeometry: releaseStatesOfGeometry,\n      releaseStatesOfProgram: releaseStatesOfProgram,\n      initAttributes: initAttributes,\n      enableAttribute: enableAttribute,\n      disableUnusedAttributes: disableUnusedAttributes\n    };\n  }\n\n  function WebGLBufferRenderer(gl, extensions, info, capabilities) {\n    var isWebGL2 = capabilities.isWebGL2;\n    var mode;\n\n    function setMode(value) {\n      mode = value;\n    }\n\n    function render(start, count) {\n      gl.drawArrays(mode, start, count);\n      info.update(count, mode, 1);\n    }\n\n    function renderInstances(start, count, primcount) {\n      if (primcount === 0) return;\n      var extension, methodName;\n\n      if (isWebGL2) {\n        extension = gl;\n        methodName = 'drawArraysInstanced';\n      } else {\n        extension = extensions.get('ANGLE_instanced_arrays');\n        methodName = 'drawArraysInstancedANGLE';\n\n        if (extension === null) {\n          console.error('THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.');\n          return;\n        }\n      }\n\n      extension[methodName](mode, start, count, primcount);\n      info.update(count, mode, primcount);\n    } //\n\n\n    this.setMode = setMode;\n    this.render = render;\n    this.renderInstances = renderInstances;\n  }\n\n  function WebGLCapabilities(gl, extensions, parameters) {\n    var maxAnisotropy;\n\n    function getMaxAnisotropy() {\n      if (maxAnisotropy !== undefined) return maxAnisotropy;\n\n      if (extensions.has('EXT_texture_filter_anisotropic') === true) {\n        var extension = extensions.get('EXT_texture_filter_anisotropic');\n        maxAnisotropy = gl.getParameter(extension.MAX_TEXTURE_MAX_ANISOTROPY_EXT);\n      } else {\n        maxAnisotropy = 0;\n      }\n\n      return maxAnisotropy;\n    }\n\n    function getMaxPrecision(precision) {\n      if (precision === 'highp') {\n        if (gl.getShaderPrecisionFormat(gl.VERTEX_SHADER, gl.HIGH_FLOAT).precision > 0 && gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER, gl.HIGH_FLOAT).precision > 0) {\n          return 'highp';\n        }\n\n        precision = 'mediump';\n      }\n\n      if (precision === 'mediump') {\n        if (gl.getShaderPrecisionFormat(gl.VERTEX_SHADER, gl.MEDIUM_FLOAT).precision > 0 && gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER, gl.MEDIUM_FLOAT).precision > 0) {\n          return 'mediump';\n        }\n      }\n\n      return 'lowp';\n    }\n    /* eslint-disable no-undef */\n\n\n    var isWebGL2 = typeof WebGL2RenderingContext !== 'undefined' && gl instanceof WebGL2RenderingContext || typeof WebGL2ComputeRenderingContext !== 'undefined' && gl instanceof WebGL2ComputeRenderingContext;\n    /* eslint-enable no-undef */\n\n    var precision = parameters.precision !== undefined ? parameters.precision : 'highp';\n    var maxPrecision = getMaxPrecision(precision);\n\n    if (maxPrecision !== precision) {\n      console.warn('THREE.WebGLRenderer:', precision, 'not supported, using', maxPrecision, 'instead.');\n      precision = maxPrecision;\n    }\n\n    var drawBuffers = isWebGL2 || extensions.has('WEBGL_draw_buffers');\n    var logarithmicDepthBuffer = parameters.logarithmicDepthBuffer === true;\n    var maxTextures = gl.getParameter(gl.MAX_TEXTURE_IMAGE_UNITS);\n    var maxVertexTextures = gl.getParameter(gl.MAX_VERTEX_TEXTURE_IMAGE_UNITS);\n    var maxTextureSize = gl.getParameter(gl.MAX_TEXTURE_SIZE);\n    var maxCubemapSize = gl.getParameter(gl.MAX_CUBE_MAP_TEXTURE_SIZE);\n    var maxAttributes = gl.getParameter(gl.MAX_VERTEX_ATTRIBS);\n    var maxVertexUniforms = gl.getParameter(gl.MAX_VERTEX_UNIFORM_VECTORS);\n    var maxVaryings = gl.getParameter(gl.MAX_VARYING_VECTORS);\n    var maxFragmentUniforms = gl.getParameter(gl.MAX_FRAGMENT_UNIFORM_VECTORS);\n    var vertexTextures = maxVertexTextures > 0;\n    var floatFragmentTextures = isWebGL2 || extensions.has('OES_texture_float');\n    var floatVertexTextures = vertexTextures && floatFragmentTextures;\n    var maxSamples = isWebGL2 ? gl.getParameter(gl.MAX_SAMPLES) : 0;\n    return {\n      isWebGL2: isWebGL2,\n      drawBuffers: drawBuffers,\n      getMaxAnisotropy: getMaxAnisotropy,\n      getMaxPrecision: getMaxPrecision,\n      precision: precision,\n      logarithmicDepthBuffer: logarithmicDepthBuffer,\n      maxTextures: maxTextures,\n      maxVertexTextures: maxVertexTextures,\n      maxTextureSize: maxTextureSize,\n      maxCubemapSize: maxCubemapSize,\n      maxAttributes: maxAttributes,\n      maxVertexUniforms: maxVertexUniforms,\n      maxVaryings: maxVaryings,\n      maxFragmentUniforms: maxFragmentUniforms,\n      vertexTextures: vertexTextures,\n      floatFragmentTextures: floatFragmentTextures,\n      floatVertexTextures: floatVertexTextures,\n      maxSamples: maxSamples\n    };\n  }\n\n  function WebGLClipping(properties) {\n    var scope = this;\n    var globalState = null,\n        numGlobalPlanes = 0,\n        localClippingEnabled = false,\n        renderingShadows = false;\n    var plane = new Plane(),\n        viewNormalMatrix = new Matrix3(),\n        uniform = {\n      value: null,\n      needsUpdate: false\n    };\n    this.uniform = uniform;\n    this.numPlanes = 0;\n    this.numIntersection = 0;\n\n    this.init = function (planes, enableLocalClipping, camera) {\n      var enabled = planes.length !== 0 || enableLocalClipping || // enable state of previous frame - the clipping code has to\n      // run another frame in order to reset the state:\n      numGlobalPlanes !== 0 || localClippingEnabled;\n      localClippingEnabled = enableLocalClipping;\n      globalState = projectPlanes(planes, camera, 0);\n      numGlobalPlanes = planes.length;\n      return enabled;\n    };\n\n    this.beginShadows = function () {\n      renderingShadows = true;\n      projectPlanes(null);\n    };\n\n    this.endShadows = function () {\n      renderingShadows = false;\n      resetGlobalState();\n    };\n\n    this.setState = function (material, camera, useCache) {\n      var planes = material.clippingPlanes,\n          clipIntersection = material.clipIntersection,\n          clipShadows = material.clipShadows;\n      var materialProperties = properties.get(material);\n\n      if (!localClippingEnabled || planes === null || planes.length === 0 || renderingShadows && !clipShadows) {\n        // there's no local clipping\n        if (renderingShadows) {\n          // there's no global clipping\n          projectPlanes(null);\n        } else {\n          resetGlobalState();\n        }\n      } else {\n        var nGlobal = renderingShadows ? 0 : numGlobalPlanes,\n            lGlobal = nGlobal * 4;\n        var dstArray = materialProperties.clippingState || null;\n        uniform.value = dstArray; // ensure unique state\n\n        dstArray = projectPlanes(planes, camera, lGlobal, useCache);\n\n        for (var _i79 = 0; _i79 !== lGlobal; ++_i79) {\n          dstArray[_i79] = globalState[_i79];\n        }\n\n        materialProperties.clippingState = dstArray;\n        this.numIntersection = clipIntersection ? this.numPlanes : 0;\n        this.numPlanes += nGlobal;\n      }\n    };\n\n    function resetGlobalState() {\n      if (uniform.value !== globalState) {\n        uniform.value = globalState;\n        uniform.needsUpdate = numGlobalPlanes > 0;\n      }\n\n      scope.numPlanes = numGlobalPlanes;\n      scope.numIntersection = 0;\n    }\n\n    function projectPlanes(planes, camera, dstOffset, skipTransform) {\n      var nPlanes = planes !== null ? planes.length : 0;\n      var dstArray = null;\n\n      if (nPlanes !== 0) {\n        dstArray = uniform.value;\n\n        if (skipTransform !== true || dstArray === null) {\n          var flatSize = dstOffset + nPlanes * 4,\n              viewMatrix = camera.matrixWorldInverse;\n          viewNormalMatrix.getNormalMatrix(viewMatrix);\n\n          if (dstArray === null || dstArray.length < flatSize) {\n            dstArray = new Float32Array(flatSize);\n          }\n\n          for (var _i80 = 0, i4 = dstOffset; _i80 !== nPlanes; ++_i80, i4 += 4) {\n            plane.copy(planes[_i80]).applyMatrix4(viewMatrix, viewNormalMatrix);\n            plane.normal.toArray(dstArray, i4);\n            dstArray[i4 + 3] = plane.constant;\n          }\n        }\n\n        uniform.value = dstArray;\n        uniform.needsUpdate = true;\n      }\n\n      scope.numPlanes = nPlanes;\n      scope.numIntersection = 0;\n      return dstArray;\n    }\n  }\n\n  function WebGLCubeMaps(renderer) {\n    var cubemaps = new WeakMap();\n\n    function mapTextureMapping(texture, mapping) {\n      if (mapping === EquirectangularReflectionMapping) {\n        texture.mapping = CubeReflectionMapping;\n      } else if (mapping === EquirectangularRefractionMapping) {\n        texture.mapping = CubeRefractionMapping;\n      }\n\n      return texture;\n    }\n\n    function get(texture) {\n      if (texture && texture.isTexture && texture.isRenderTargetTexture === false) {\n        var mapping = texture.mapping;\n\n        if (mapping === EquirectangularReflectionMapping || mapping === EquirectangularRefractionMapping) {\n          if (cubemaps.has(texture)) {\n            var cubemap = cubemaps.get(texture).texture;\n            return mapTextureMapping(cubemap, texture.mapping);\n          } else {\n            var image = texture.image;\n\n            if (image && image.height > 0) {\n              var currentRenderTarget = renderer.getRenderTarget();\n              var renderTarget = new WebGLCubeRenderTarget(image.height / 2);\n              renderTarget.fromEquirectangularTexture(renderer, texture);\n              cubemaps.set(texture, renderTarget);\n              renderer.setRenderTarget(currentRenderTarget);\n              texture.addEventListener('dispose', onTextureDispose);\n              return mapTextureMapping(renderTarget.texture, texture.mapping);\n            } else {\n              // image not yet ready. try the conversion next frame\n              return null;\n            }\n          }\n        }\n      }\n\n      return texture;\n    }\n\n    function onTextureDispose(event) {\n      var texture = event.target;\n      texture.removeEventListener('dispose', onTextureDispose);\n      var cubemap = cubemaps.get(texture);\n\n      if (cubemap !== undefined) {\n        cubemaps.delete(texture);\n        cubemap.dispose();\n      }\n    }\n\n    function dispose() {\n      cubemaps = new WeakMap();\n    }\n\n    return {\n      get: get,\n      dispose: dispose\n    };\n  }\n\n  var OrthographicCamera = /*#__PURE__*/function (_Camera2) {\n    _inherits(OrthographicCamera, _Camera2);\n\n    var _super28 = _createSuper(OrthographicCamera);\n\n    function OrthographicCamera() {\n      var _this19;\n\n      var left = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : -1;\n      var right = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n      var top = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n      var bottom = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : -1;\n      var near = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 0.1;\n      var far = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : 2000;\n\n      _classCallCheck(this, OrthographicCamera);\n\n      _this19 = _super28.call(this);\n      _this19.type = 'OrthographicCamera';\n      _this19.zoom = 1;\n      _this19.view = null;\n      _this19.left = left;\n      _this19.right = right;\n      _this19.top = top;\n      _this19.bottom = bottom;\n      _this19.near = near;\n      _this19.far = far;\n\n      _this19.updateProjectionMatrix();\n\n      return _this19;\n    }\n\n    _createClass(OrthographicCamera, [{\n      key: \"copy\",\n      value: function copy(source, recursive) {\n        _get(_getPrototypeOf(OrthographicCamera.prototype), \"copy\", this).call(this, source, recursive);\n\n        this.left = source.left;\n        this.right = source.right;\n        this.top = source.top;\n        this.bottom = source.bottom;\n        this.near = source.near;\n        this.far = source.far;\n        this.zoom = source.zoom;\n        this.view = source.view === null ? null : Object.assign({}, source.view);\n        return this;\n      }\n    }, {\n      key: \"setViewOffset\",\n      value: function setViewOffset(fullWidth, fullHeight, x, y, width, height) {\n        if (this.view === null) {\n          this.view = {\n            enabled: true,\n            fullWidth: 1,\n            fullHeight: 1,\n            offsetX: 0,\n            offsetY: 0,\n            width: 1,\n            height: 1\n          };\n        }\n\n        this.view.enabled = true;\n        this.view.fullWidth = fullWidth;\n        this.view.fullHeight = fullHeight;\n        this.view.offsetX = x;\n        this.view.offsetY = y;\n        this.view.width = width;\n        this.view.height = height;\n        this.updateProjectionMatrix();\n      }\n    }, {\n      key: \"clearViewOffset\",\n      value: function clearViewOffset() {\n        if (this.view !== null) {\n          this.view.enabled = false;\n        }\n\n        this.updateProjectionMatrix();\n      }\n    }, {\n      key: \"updateProjectionMatrix\",\n      value: function updateProjectionMatrix() {\n        var dx = (this.right - this.left) / (2 * this.zoom);\n        var dy = (this.top - this.bottom) / (2 * this.zoom);\n        var cx = (this.right + this.left) / 2;\n        var cy = (this.top + this.bottom) / 2;\n        var left = cx - dx;\n        var right = cx + dx;\n        var top = cy + dy;\n        var bottom = cy - dy;\n\n        if (this.view !== null && this.view.enabled) {\n          var scaleW = (this.right - this.left) / this.view.fullWidth / this.zoom;\n          var scaleH = (this.top - this.bottom) / this.view.fullHeight / this.zoom;\n          left += scaleW * this.view.offsetX;\n          right = left + scaleW * this.view.width;\n          top -= scaleH * this.view.offsetY;\n          bottom = top - scaleH * this.view.height;\n        }\n\n        this.projectionMatrix.makeOrthographic(left, right, top, bottom, this.near, this.far);\n        this.projectionMatrixInverse.copy(this.projectionMatrix).invert();\n      }\n    }, {\n      key: \"toJSON\",\n      value: function toJSON(meta) {\n        var data = _get(_getPrototypeOf(OrthographicCamera.prototype), \"toJSON\", this).call(this, meta);\n\n        data.object.zoom = this.zoom;\n        data.object.left = this.left;\n        data.object.right = this.right;\n        data.object.top = this.top;\n        data.object.bottom = this.bottom;\n        data.object.near = this.near;\n        data.object.far = this.far;\n        if (this.view !== null) data.object.view = Object.assign({}, this.view);\n        return data;\n      }\n    }]);\n\n    return OrthographicCamera;\n  }(Camera);\n\n  OrthographicCamera.prototype.isOrthographicCamera = true;\n\n  var RawShaderMaterial = /*#__PURE__*/function (_ShaderMaterial) {\n    _inherits(RawShaderMaterial, _ShaderMaterial);\n\n    var _super29 = _createSuper(RawShaderMaterial);\n\n    function RawShaderMaterial(parameters) {\n      var _this20;\n\n      _classCallCheck(this, RawShaderMaterial);\n\n      _this20 = _super29.call(this, parameters);\n      _this20.type = 'RawShaderMaterial';\n      return _this20;\n    }\n\n    return RawShaderMaterial;\n  }(ShaderMaterial);\n\n  RawShaderMaterial.prototype.isRawShaderMaterial = true;\n  var LOD_MIN = 4;\n  var LOD_MAX = 8;\n  var SIZE_MAX = Math.pow(2, LOD_MAX); // The standard deviations (radians) associated with the extra mips. These are\n  // chosen to approximate a Trowbridge-Reitz distribution function times the\n  // geometric shadowing function. These sigma values squared must match the\n  // variance #defines in cube_uv_reflection_fragment.glsl.js.\n\n  var EXTRA_LOD_SIGMA = [0.125, 0.215, 0.35, 0.446, 0.526, 0.582];\n  var TOTAL_LODS = LOD_MAX - LOD_MIN + 1 + EXTRA_LOD_SIGMA.length; // The maximum length of the blur for loop. Smaller sigmas will use fewer\n  // samples and exit early, but not recompile the shader.\n\n  var MAX_SAMPLES = 20;\n  var ENCODINGS = (_ENCODINGS = {}, _defineProperty(_ENCODINGS, LinearEncoding, 0), _defineProperty(_ENCODINGS, sRGBEncoding, 1), _defineProperty(_ENCODINGS, RGBEEncoding, 2), _defineProperty(_ENCODINGS, RGBM7Encoding, 3), _defineProperty(_ENCODINGS, RGBM16Encoding, 4), _defineProperty(_ENCODINGS, RGBDEncoding, 5), _defineProperty(_ENCODINGS, GammaEncoding, 6), _ENCODINGS);\n\n  var _flatCamera = /*@__PURE__*/new OrthographicCamera();\n\n  var _createPlanes2 = /*@__PURE__*/_createPlanes(),\n      _lodPlanes = _createPlanes2._lodPlanes,\n      _sizeLods = _createPlanes2._sizeLods,\n      _sigmas = _createPlanes2._sigmas;\n\n  var _clearColor = /*@__PURE__*/new Color();\n\n  var _oldTarget = null; // Golden Ratio\n\n  var PHI = (1 + Math.sqrt(5)) / 2;\n  var INV_PHI = 1 / PHI; // Vertices of a dodecahedron (except the opposites, which represent the\n  // same axis), used as axis directions evenly spread on a sphere.\n\n  var _axisDirections = [/*@__PURE__*/new Vector3(1, 1, 1), /*@__PURE__*/new Vector3(-1, 1, 1), /*@__PURE__*/new Vector3(1, 1, -1), /*@__PURE__*/new Vector3(-1, 1, -1), /*@__PURE__*/new Vector3(0, PHI, INV_PHI), /*@__PURE__*/new Vector3(0, PHI, -INV_PHI), /*@__PURE__*/new Vector3(INV_PHI, 0, PHI), /*@__PURE__*/new Vector3(-INV_PHI, 0, PHI), /*@__PURE__*/new Vector3(PHI, INV_PHI, 0), /*@__PURE__*/new Vector3(-PHI, INV_PHI, 0)];\n  /**\n   * This class generates a Prefiltered, Mipmapped Radiance Environment Map\n   * (PMREM) from a cubeMap environment texture. This allows different levels of\n   * blur to be quickly accessed based on material roughness. It is packed into a\n   * special CubeUV format that allows us to perform custom interpolation so that\n   * we can support nonlinear formats such as RGBE. Unlike a traditional mipmap\n   * chain, it only goes down to the LOD_MIN level (above), and then creates extra\n   * even more filtered 'mips' at the same LOD_MIN resolution, associated with\n   * higher roughness levels. In this way we maintain resolution to smoothly\n   * interpolate diffuse lighting while limiting sampling computation.\n   *\n   * Paper: Fast, Accurate Image-Based Lighting\n   * https://drive.google.com/file/d/15y8r_UpKlU9SvV4ILb0C3qCPecS8pvLz/view\n  */\n\n  var PMREMGenerator = /*#__PURE__*/function () {\n    function PMREMGenerator(renderer) {\n      _classCallCheck(this, PMREMGenerator);\n\n      this._renderer = renderer;\n      this._pingPongRenderTarget = null;\n      this._blurMaterial = _getBlurShader(MAX_SAMPLES);\n      this._equirectShader = null;\n      this._cubemapShader = null;\n\n      this._compileMaterial(this._blurMaterial);\n    }\n    /**\n     * Generates a PMREM from a supplied Scene, which can be faster than using an\n     * image if networking bandwidth is low. Optional sigma specifies a blur radius\n     * in radians to be applied to the scene before PMREM generation. Optional near\n     * and far planes ensure the scene is rendered in its entirety (the cubeCamera\n     * is placed at the origin).\n     */\n\n\n    _createClass(PMREMGenerator, [{\n      key: \"fromScene\",\n      value: function fromScene(scene) {\n        var sigma = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n        var near = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0.1;\n        var far = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 100;\n        _oldTarget = this._renderer.getRenderTarget();\n\n        var cubeUVRenderTarget = this._allocateTargets();\n\n        this._sceneToCubeUV(scene, near, far, cubeUVRenderTarget);\n\n        if (sigma > 0) {\n          this._blur(cubeUVRenderTarget, 0, 0, sigma);\n        }\n\n        this._applyPMREM(cubeUVRenderTarget);\n\n        this._cleanup(cubeUVRenderTarget);\n\n        return cubeUVRenderTarget;\n      }\n      /**\n       * Generates a PMREM from an equirectangular texture, which can be either LDR\n       * (RGBFormat) or HDR (RGBEFormat). The ideal input image size is 1k (1024 x 512),\n       * as this matches best with the 256 x 256 cubemap output.\n       */\n\n    }, {\n      key: \"fromEquirectangular\",\n      value: function fromEquirectangular(equirectangular) {\n        return this._fromTexture(equirectangular);\n      }\n      /**\n       * Generates a PMREM from an cubemap texture, which can be either LDR\n       * (RGBFormat) or HDR (RGBEFormat). The ideal input cube size is 256 x 256,\n       * as this matches best with the 256 x 256 cubemap output.\n       */\n\n    }, {\n      key: \"fromCubemap\",\n      value: function fromCubemap(cubemap) {\n        return this._fromTexture(cubemap);\n      }\n      /**\n       * Pre-compiles the cubemap shader. You can get faster start-up by invoking this method during\n       * your texture's network fetch for increased concurrency.\n       */\n\n    }, {\n      key: \"compileCubemapShader\",\n      value: function compileCubemapShader() {\n        if (this._cubemapShader === null) {\n          this._cubemapShader = _getCubemapShader();\n\n          this._compileMaterial(this._cubemapShader);\n        }\n      }\n      /**\n       * Pre-compiles the equirectangular shader. You can get faster start-up by invoking this method during\n       * your texture's network fetch for increased concurrency.\n       */\n\n    }, {\n      key: \"compileEquirectangularShader\",\n      value: function compileEquirectangularShader() {\n        if (this._equirectShader === null) {\n          this._equirectShader = _getEquirectShader();\n\n          this._compileMaterial(this._equirectShader);\n        }\n      }\n      /**\n       * Disposes of the PMREMGenerator's internal memory. Note that PMREMGenerator is a static class,\n       * so you should not need more than one PMREMGenerator object. If you do, calling dispose() on\n       * one of them will cause any others to also become unusable.\n       */\n\n    }, {\n      key: \"dispose\",\n      value: function dispose() {\n        this._blurMaterial.dispose();\n\n        if (this._cubemapShader !== null) this._cubemapShader.dispose();\n        if (this._equirectShader !== null) this._equirectShader.dispose();\n\n        for (var _i81 = 0; _i81 < _lodPlanes.length; _i81++) {\n          _lodPlanes[_i81].dispose();\n        }\n      } // private interface\n\n    }, {\n      key: \"_cleanup\",\n      value: function _cleanup(outputTarget) {\n        this._pingPongRenderTarget.dispose();\n\n        this._renderer.setRenderTarget(_oldTarget);\n\n        outputTarget.scissorTest = false;\n\n        _setViewport(outputTarget, 0, 0, outputTarget.width, outputTarget.height);\n      }\n    }, {\n      key: \"_fromTexture\",\n      value: function _fromTexture(texture) {\n        _oldTarget = this._renderer.getRenderTarget();\n\n        var cubeUVRenderTarget = this._allocateTargets(texture);\n\n        this._textureToCubeUV(texture, cubeUVRenderTarget);\n\n        this._applyPMREM(cubeUVRenderTarget);\n\n        this._cleanup(cubeUVRenderTarget);\n\n        return cubeUVRenderTarget;\n      }\n    }, {\n      key: \"_allocateTargets\",\n      value: function _allocateTargets(texture) {\n        // warning: null texture is valid\n        var params = {\n          magFilter: NearestFilter,\n          minFilter: NearestFilter,\n          generateMipmaps: false,\n          type: UnsignedByteType,\n          format: RGBEFormat,\n          encoding: _isLDR(texture) ? texture.encoding : RGBEEncoding,\n          depthBuffer: false\n        };\n\n        var cubeUVRenderTarget = _createRenderTarget(params);\n\n        cubeUVRenderTarget.depthBuffer = texture ? false : true;\n        this._pingPongRenderTarget = _createRenderTarget(params);\n        return cubeUVRenderTarget;\n      }\n    }, {\n      key: \"_compileMaterial\",\n      value: function _compileMaterial(material) {\n        var tmpMesh = new Mesh(_lodPlanes[0], material);\n\n        this._renderer.compile(tmpMesh, _flatCamera);\n      }\n    }, {\n      key: \"_sceneToCubeUV\",\n      value: function _sceneToCubeUV(scene, near, far, cubeUVRenderTarget) {\n        var fov = 90;\n        var aspect = 1;\n        var cubeCamera = new PerspectiveCamera(fov, aspect, near, far);\n        var upSign = [1, -1, 1, 1, 1, 1];\n        var forwardSign = [1, 1, 1, -1, -1, -1];\n        var renderer = this._renderer;\n        var originalAutoClear = renderer.autoClear;\n        var outputEncoding = renderer.outputEncoding;\n        var toneMapping = renderer.toneMapping;\n        renderer.getClearColor(_clearColor);\n        renderer.toneMapping = NoToneMapping;\n        renderer.outputEncoding = LinearEncoding;\n        renderer.autoClear = false;\n        var backgroundMaterial = new MeshBasicMaterial({\n          name: 'PMREM.Background',\n          side: BackSide,\n          depthWrite: false,\n          depthTest: false\n        });\n        var backgroundBox = new Mesh(new BoxGeometry(), backgroundMaterial);\n        var useSolidColor = false;\n        var background = scene.background;\n\n        if (background) {\n          if (background.isColor) {\n            backgroundMaterial.color.copy(background);\n            scene.background = null;\n            useSolidColor = true;\n          }\n        } else {\n          backgroundMaterial.color.copy(_clearColor);\n          useSolidColor = true;\n        }\n\n        for (var _i82 = 0; _i82 < 6; _i82++) {\n          var col = _i82 % 3;\n\n          if (col == 0) {\n            cubeCamera.up.set(0, upSign[_i82], 0);\n            cubeCamera.lookAt(forwardSign[_i82], 0, 0);\n          } else if (col == 1) {\n            cubeCamera.up.set(0, 0, upSign[_i82]);\n            cubeCamera.lookAt(0, forwardSign[_i82], 0);\n          } else {\n            cubeCamera.up.set(0, upSign[_i82], 0);\n            cubeCamera.lookAt(0, 0, forwardSign[_i82]);\n          }\n\n          _setViewport(cubeUVRenderTarget, col * SIZE_MAX, _i82 > 2 ? SIZE_MAX : 0, SIZE_MAX, SIZE_MAX);\n\n          renderer.setRenderTarget(cubeUVRenderTarget);\n\n          if (useSolidColor) {\n            renderer.render(backgroundBox, cubeCamera);\n          }\n\n          renderer.render(scene, cubeCamera);\n        }\n\n        backgroundBox.geometry.dispose();\n        backgroundBox.material.dispose();\n        renderer.toneMapping = toneMapping;\n        renderer.outputEncoding = outputEncoding;\n        renderer.autoClear = originalAutoClear;\n        scene.background = background;\n      }\n    }, {\n      key: \"_setEncoding\",\n      value: function _setEncoding(uniform, texture) {\n        if (this._renderer.capabilities.isWebGL2 === true && texture.format === RGBAFormat && texture.type === UnsignedByteType && texture.encoding === sRGBEncoding) {\n          uniform.value = ENCODINGS[LinearEncoding];\n        } else {\n          uniform.value = ENCODINGS[texture.encoding];\n        }\n      }\n    }, {\n      key: \"_textureToCubeUV\",\n      value: function _textureToCubeUV(texture, cubeUVRenderTarget) {\n        var renderer = this._renderer;\n        var isCubeTexture = texture.mapping === CubeReflectionMapping || texture.mapping === CubeRefractionMapping;\n\n        if (isCubeTexture) {\n          if (this._cubemapShader == null) {\n            this._cubemapShader = _getCubemapShader();\n          }\n        } else {\n          if (this._equirectShader == null) {\n            this._equirectShader = _getEquirectShader();\n          }\n        }\n\n        var material = isCubeTexture ? this._cubemapShader : this._equirectShader;\n        var mesh = new Mesh(_lodPlanes[0], material);\n        var uniforms = material.uniforms;\n        uniforms['envMap'].value = texture;\n\n        if (!isCubeTexture) {\n          uniforms['texelSize'].value.set(1.0 / texture.image.width, 1.0 / texture.image.height);\n        }\n\n        this._setEncoding(uniforms['inputEncoding'], texture);\n\n        this._setEncoding(uniforms['outputEncoding'], cubeUVRenderTarget.texture);\n\n        _setViewport(cubeUVRenderTarget, 0, 0, 3 * SIZE_MAX, 2 * SIZE_MAX);\n\n        renderer.setRenderTarget(cubeUVRenderTarget);\n        renderer.render(mesh, _flatCamera);\n      }\n    }, {\n      key: \"_applyPMREM\",\n      value: function _applyPMREM(cubeUVRenderTarget) {\n        var renderer = this._renderer;\n        var autoClear = renderer.autoClear;\n        renderer.autoClear = false;\n\n        for (var _i83 = 1; _i83 < TOTAL_LODS; _i83++) {\n          var sigma = Math.sqrt(_sigmas[_i83] * _sigmas[_i83] - _sigmas[_i83 - 1] * _sigmas[_i83 - 1]);\n          var poleAxis = _axisDirections[(_i83 - 1) % _axisDirections.length];\n\n          this._blur(cubeUVRenderTarget, _i83 - 1, _i83, sigma, poleAxis);\n        }\n\n        renderer.autoClear = autoClear;\n      }\n      /**\n       * This is a two-pass Gaussian blur for a cubemap. Normally this is done\n       * vertically and horizontally, but this breaks down on a cube. Here we apply\n       * the blur latitudinally (around the poles), and then longitudinally (towards\n       * the poles) to approximate the orthogonally-separable blur. It is least\n       * accurate at the poles, but still does a decent job.\n       */\n\n    }, {\n      key: \"_blur\",\n      value: function _blur(cubeUVRenderTarget, lodIn, lodOut, sigma, poleAxis) {\n        var pingPongRenderTarget = this._pingPongRenderTarget;\n\n        this._halfBlur(cubeUVRenderTarget, pingPongRenderTarget, lodIn, lodOut, sigma, 'latitudinal', poleAxis);\n\n        this._halfBlur(pingPongRenderTarget, cubeUVRenderTarget, lodOut, lodOut, sigma, 'longitudinal', poleAxis);\n      }\n    }, {\n      key: \"_halfBlur\",\n      value: function _halfBlur(targetIn, targetOut, lodIn, lodOut, sigmaRadians, direction, poleAxis) {\n        var renderer = this._renderer;\n        var blurMaterial = this._blurMaterial;\n\n        if (direction !== 'latitudinal' && direction !== 'longitudinal') {\n          console.error('blur direction must be either latitudinal or longitudinal!');\n        } // Number of standard deviations at which to cut off the discrete approximation.\n\n\n        var STANDARD_DEVIATIONS = 3;\n        var blurMesh = new Mesh(_lodPlanes[lodOut], blurMaterial);\n        var blurUniforms = blurMaterial.uniforms;\n        var pixels = _sizeLods[lodIn] - 1;\n        var radiansPerPixel = isFinite(sigmaRadians) ? Math.PI / (2 * pixels) : 2 * Math.PI / (2 * MAX_SAMPLES - 1);\n        var sigmaPixels = sigmaRadians / radiansPerPixel;\n        var samples = isFinite(sigmaRadians) ? 1 + Math.floor(STANDARD_DEVIATIONS * sigmaPixels) : MAX_SAMPLES;\n\n        if (samples > MAX_SAMPLES) {\n          console.warn(\"sigmaRadians, \".concat(sigmaRadians, \", is too large and will clip, as it requested \").concat(samples, \" samples when the maximum is set to \").concat(MAX_SAMPLES));\n        }\n\n        var weights = [];\n        var sum = 0;\n\n        for (var _i84 = 0; _i84 < MAX_SAMPLES; ++_i84) {\n          var _x2 = _i84 / sigmaPixels;\n\n          var weight = Math.exp(-_x2 * _x2 / 2);\n          weights.push(weight);\n\n          if (_i84 == 0) {\n            sum += weight;\n          } else if (_i84 < samples) {\n            sum += 2 * weight;\n          }\n        }\n\n        for (var _i85 = 0; _i85 < weights.length; _i85++) {\n          weights[_i85] = weights[_i85] / sum;\n        }\n\n        blurUniforms['envMap'].value = targetIn.texture;\n        blurUniforms['samples'].value = samples;\n        blurUniforms['weights'].value = weights;\n        blurUniforms['latitudinal'].value = direction === 'latitudinal';\n\n        if (poleAxis) {\n          blurUniforms['poleAxis'].value = poleAxis;\n        }\n\n        blurUniforms['dTheta'].value = radiansPerPixel;\n        blurUniforms['mipInt'].value = LOD_MAX - lodIn;\n\n        this._setEncoding(blurUniforms['inputEncoding'], targetIn.texture);\n\n        this._setEncoding(blurUniforms['outputEncoding'], targetIn.texture);\n\n        var outputSize = _sizeLods[lodOut];\n        var x = 3 * Math.max(0, SIZE_MAX - 2 * outputSize);\n        var y = (lodOut === 0 ? 0 : 2 * SIZE_MAX) + 2 * outputSize * (lodOut > LOD_MAX - LOD_MIN ? lodOut - LOD_MAX + LOD_MIN : 0);\n\n        _setViewport(targetOut, x, y, 3 * outputSize, 2 * outputSize);\n\n        renderer.setRenderTarget(targetOut);\n        renderer.render(blurMesh, _flatCamera);\n      }\n    }]);\n\n    return PMREMGenerator;\n  }();\n\n  function _isLDR(texture) {\n    if (texture === undefined || texture.type !== UnsignedByteType) return false;\n    return texture.encoding === LinearEncoding || texture.encoding === sRGBEncoding || texture.encoding === GammaEncoding;\n  }\n\n  function _createPlanes() {\n    var _lodPlanes = [];\n    var _sizeLods = [];\n    var _sigmas = [];\n    var lod = LOD_MAX;\n\n    for (var _i86 = 0; _i86 < TOTAL_LODS; _i86++) {\n      var sizeLod = Math.pow(2, lod);\n\n      _sizeLods.push(sizeLod);\n\n      var sigma = 1.0 / sizeLod;\n\n      if (_i86 > LOD_MAX - LOD_MIN) {\n        sigma = EXTRA_LOD_SIGMA[_i86 - LOD_MAX + LOD_MIN - 1];\n      } else if (_i86 == 0) {\n        sigma = 0;\n      }\n\n      _sigmas.push(sigma);\n\n      var texelSize = 1.0 / (sizeLod - 1);\n      var min = -texelSize / 2;\n      var max = 1 + texelSize / 2;\n      var uv1 = [min, min, max, min, max, max, min, min, max, max, min, max];\n      var cubeFaces = 6;\n      var vertices = 6;\n      var positionSize = 3;\n      var uvSize = 2;\n      var faceIndexSize = 1;\n      var position = new Float32Array(positionSize * vertices * cubeFaces);\n      var uv = new Float32Array(uvSize * vertices * cubeFaces);\n      var faceIndex = new Float32Array(faceIndexSize * vertices * cubeFaces);\n\n      for (var face = 0; face < cubeFaces; face++) {\n        var x = face % 3 * 2 / 3 - 1;\n        var y = face > 2 ? 0 : -1;\n        var coordinates = [x, y, 0, x + 2 / 3, y, 0, x + 2 / 3, y + 1, 0, x, y, 0, x + 2 / 3, y + 1, 0, x, y + 1, 0];\n        position.set(coordinates, positionSize * vertices * face);\n        uv.set(uv1, uvSize * vertices * face);\n        var fill = [face, face, face, face, face, face];\n        faceIndex.set(fill, faceIndexSize * vertices * face);\n      }\n\n      var planes = new BufferGeometry();\n      planes.setAttribute('position', new BufferAttribute(position, positionSize));\n      planes.setAttribute('uv', new BufferAttribute(uv, uvSize));\n      planes.setAttribute('faceIndex', new BufferAttribute(faceIndex, faceIndexSize));\n\n      _lodPlanes.push(planes);\n\n      if (lod > LOD_MIN) {\n        lod--;\n      }\n    }\n\n    return {\n      _lodPlanes: _lodPlanes,\n      _sizeLods: _sizeLods,\n      _sigmas: _sigmas\n    };\n  }\n\n  function _createRenderTarget(params) {\n    var cubeUVRenderTarget = new WebGLRenderTarget(3 * SIZE_MAX, 3 * SIZE_MAX, params);\n    cubeUVRenderTarget.texture.mapping = CubeUVReflectionMapping;\n    cubeUVRenderTarget.texture.name = 'PMREM.cubeUv';\n    cubeUVRenderTarget.scissorTest = true;\n    return cubeUVRenderTarget;\n  }\n\n  function _setViewport(target, x, y, width, height) {\n    target.viewport.set(x, y, width, height);\n    target.scissor.set(x, y, width, height);\n  }\n\n  function _getBlurShader(maxSamples) {\n    var weights = new Float32Array(maxSamples);\n    var poleAxis = new Vector3(0, 1, 0);\n    var shaderMaterial = new RawShaderMaterial({\n      name: 'SphericalGaussianBlur',\n      defines: {\n        'n': maxSamples\n      },\n      uniforms: {\n        'envMap': {\n          value: null\n        },\n        'samples': {\n          value: 1\n        },\n        'weights': {\n          value: weights\n        },\n        'latitudinal': {\n          value: false\n        },\n        'dTheta': {\n          value: 0\n        },\n        'mipInt': {\n          value: 0\n        },\n        'poleAxis': {\n          value: poleAxis\n        },\n        'inputEncoding': {\n          value: ENCODINGS[LinearEncoding]\n        },\n        'outputEncoding': {\n          value: ENCODINGS[LinearEncoding]\n        }\n      },\n      vertexShader: _getCommonVertexShader(),\n      fragmentShader:\n      /* glsl */\n      \"\\n\\n\\t\\t\\tprecision mediump float;\\n\\t\\t\\tprecision mediump int;\\n\\n\\t\\t\\tvarying vec3 vOutputDirection;\\n\\n\\t\\t\\tuniform sampler2D envMap;\\n\\t\\t\\tuniform int samples;\\n\\t\\t\\tuniform float weights[ n ];\\n\\t\\t\\tuniform bool latitudinal;\\n\\t\\t\\tuniform float dTheta;\\n\\t\\t\\tuniform float mipInt;\\n\\t\\t\\tuniform vec3 poleAxis;\\n\\n\\t\\t\\t\".concat(_getEncodings(), \"\\n\\n\\t\\t\\t#define ENVMAP_TYPE_CUBE_UV\\n\\t\\t\\t#include <cube_uv_reflection_fragment>\\n\\n\\t\\t\\tvec3 getSample( float theta, vec3 axis ) {\\n\\n\\t\\t\\t\\tfloat cosTheta = cos( theta );\\n\\t\\t\\t\\t// Rodrigues' axis-angle rotation\\n\\t\\t\\t\\tvec3 sampleDirection = vOutputDirection * cosTheta\\n\\t\\t\\t\\t\\t+ cross( axis, vOutputDirection ) * sin( theta )\\n\\t\\t\\t\\t\\t+ axis * dot( axis, vOutputDirection ) * ( 1.0 - cosTheta );\\n\\n\\t\\t\\t\\treturn bilinearCubeUV( envMap, sampleDirection, mipInt );\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\tvoid main() {\\n\\n\\t\\t\\t\\tvec3 axis = latitudinal ? poleAxis : cross( poleAxis, vOutputDirection );\\n\\n\\t\\t\\t\\tif ( all( equal( axis, vec3( 0.0 ) ) ) ) {\\n\\n\\t\\t\\t\\t\\taxis = vec3( vOutputDirection.z, 0.0, - vOutputDirection.x );\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\taxis = normalize( axis );\\n\\n\\t\\t\\t\\tgl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );\\n\\t\\t\\t\\tgl_FragColor.rgb += weights[ 0 ] * getSample( 0.0, axis );\\n\\n\\t\\t\\t\\tfor ( int i = 1; i < n; i++ ) {\\n\\n\\t\\t\\t\\t\\tif ( i >= samples ) {\\n\\n\\t\\t\\t\\t\\t\\tbreak;\\n\\n\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\tfloat theta = dTheta * float( i );\\n\\t\\t\\t\\t\\tgl_FragColor.rgb += weights[ i ] * getSample( -1.0 * theta, axis );\\n\\t\\t\\t\\t\\tgl_FragColor.rgb += weights[ i ] * getSample( theta, axis );\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\tgl_FragColor = linearToOutputTexel( gl_FragColor );\\n\\n\\t\\t\\t}\\n\\t\\t\"),\n      blending: NoBlending,\n      depthTest: false,\n      depthWrite: false\n    });\n    return shaderMaterial;\n  }\n\n  function _getEquirectShader() {\n    var texelSize = new Vector2(1, 1);\n    var shaderMaterial = new RawShaderMaterial({\n      name: 'EquirectangularToCubeUV',\n      uniforms: {\n        'envMap': {\n          value: null\n        },\n        'texelSize': {\n          value: texelSize\n        },\n        'inputEncoding': {\n          value: ENCODINGS[LinearEncoding]\n        },\n        'outputEncoding': {\n          value: ENCODINGS[LinearEncoding]\n        }\n      },\n      vertexShader: _getCommonVertexShader(),\n      fragmentShader:\n      /* glsl */\n      \"\\n\\n\\t\\t\\tprecision mediump float;\\n\\t\\t\\tprecision mediump int;\\n\\n\\t\\t\\tvarying vec3 vOutputDirection;\\n\\n\\t\\t\\tuniform sampler2D envMap;\\n\\t\\t\\tuniform vec2 texelSize;\\n\\n\\t\\t\\t\".concat(_getEncodings(), \"\\n\\n\\t\\t\\t#include <common>\\n\\n\\t\\t\\tvoid main() {\\n\\n\\t\\t\\t\\tgl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );\\n\\n\\t\\t\\t\\tvec3 outputDirection = normalize( vOutputDirection );\\n\\t\\t\\t\\tvec2 uv = equirectUv( outputDirection );\\n\\n\\t\\t\\t\\tvec2 f = fract( uv / texelSize - 0.5 );\\n\\t\\t\\t\\tuv -= f * texelSize;\\n\\t\\t\\t\\tvec3 tl = envMapTexelToLinear( texture2D ( envMap, uv ) ).rgb;\\n\\t\\t\\t\\tuv.x += texelSize.x;\\n\\t\\t\\t\\tvec3 tr = envMapTexelToLinear( texture2D ( envMap, uv ) ).rgb;\\n\\t\\t\\t\\tuv.y += texelSize.y;\\n\\t\\t\\t\\tvec3 br = envMapTexelToLinear( texture2D ( envMap, uv ) ).rgb;\\n\\t\\t\\t\\tuv.x -= texelSize.x;\\n\\t\\t\\t\\tvec3 bl = envMapTexelToLinear( texture2D ( envMap, uv ) ).rgb;\\n\\n\\t\\t\\t\\tvec3 tm = mix( tl, tr, f.x );\\n\\t\\t\\t\\tvec3 bm = mix( bl, br, f.x );\\n\\t\\t\\t\\tgl_FragColor.rgb = mix( tm, bm, f.y );\\n\\n\\t\\t\\t\\tgl_FragColor = linearToOutputTexel( gl_FragColor );\\n\\n\\t\\t\\t}\\n\\t\\t\"),\n      blending: NoBlending,\n      depthTest: false,\n      depthWrite: false\n    });\n    return shaderMaterial;\n  }\n\n  function _getCubemapShader() {\n    var shaderMaterial = new RawShaderMaterial({\n      name: 'CubemapToCubeUV',\n      uniforms: {\n        'envMap': {\n          value: null\n        },\n        'inputEncoding': {\n          value: ENCODINGS[LinearEncoding]\n        },\n        'outputEncoding': {\n          value: ENCODINGS[LinearEncoding]\n        }\n      },\n      vertexShader: _getCommonVertexShader(),\n      fragmentShader:\n      /* glsl */\n      \"\\n\\n\\t\\t\\tprecision mediump float;\\n\\t\\t\\tprecision mediump int;\\n\\n\\t\\t\\tvarying vec3 vOutputDirection;\\n\\n\\t\\t\\tuniform samplerCube envMap;\\n\\n\\t\\t\\t\".concat(_getEncodings(), \"\\n\\n\\t\\t\\tvoid main() {\\n\\n\\t\\t\\t\\tgl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );\\n\\t\\t\\t\\tgl_FragColor.rgb = envMapTexelToLinear( textureCube( envMap, vec3( - vOutputDirection.x, vOutputDirection.yz ) ) ).rgb;\\n\\t\\t\\t\\tgl_FragColor = linearToOutputTexel( gl_FragColor );\\n\\n\\t\\t\\t}\\n\\t\\t\"),\n      blending: NoBlending,\n      depthTest: false,\n      depthWrite: false\n    });\n    return shaderMaterial;\n  }\n\n  function _getCommonVertexShader() {\n    return (\n      /* glsl */\n      \"\\n\\n\\t\\tprecision mediump float;\\n\\t\\tprecision mediump int;\\n\\n\\t\\tattribute vec3 position;\\n\\t\\tattribute vec2 uv;\\n\\t\\tattribute float faceIndex;\\n\\n\\t\\tvarying vec3 vOutputDirection;\\n\\n\\t\\t// RH coordinate system; PMREM face-indexing convention\\n\\t\\tvec3 getDirection( vec2 uv, float face ) {\\n\\n\\t\\t\\tuv = 2.0 * uv - 1.0;\\n\\n\\t\\t\\tvec3 direction = vec3( uv, 1.0 );\\n\\n\\t\\t\\tif ( face == 0.0 ) {\\n\\n\\t\\t\\t\\tdirection = direction.zyx; // ( 1, v, u ) pos x\\n\\n\\t\\t\\t} else if ( face == 1.0 ) {\\n\\n\\t\\t\\t\\tdirection = direction.xzy;\\n\\t\\t\\t\\tdirection.xz *= -1.0; // ( -u, 1, -v ) pos y\\n\\n\\t\\t\\t} else if ( face == 2.0 ) {\\n\\n\\t\\t\\t\\tdirection.x *= -1.0; // ( -u, v, 1 ) pos z\\n\\n\\t\\t\\t} else if ( face == 3.0 ) {\\n\\n\\t\\t\\t\\tdirection = direction.zyx;\\n\\t\\t\\t\\tdirection.xz *= -1.0; // ( -1, v, -u ) neg x\\n\\n\\t\\t\\t} else if ( face == 4.0 ) {\\n\\n\\t\\t\\t\\tdirection = direction.xzy;\\n\\t\\t\\t\\tdirection.xy *= -1.0; // ( -u, -1, v ) neg y\\n\\n\\t\\t\\t} else if ( face == 5.0 ) {\\n\\n\\t\\t\\t\\tdirection.z *= -1.0; // ( u, v, -1 ) neg z\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\treturn direction;\\n\\n\\t\\t}\\n\\n\\t\\tvoid main() {\\n\\n\\t\\t\\tvOutputDirection = getDirection( uv, faceIndex );\\n\\t\\t\\tgl_Position = vec4( position, 1.0 );\\n\\n\\t\\t}\\n\\t\"\n    );\n  }\n\n  function _getEncodings() {\n    return (\n      /* glsl */\n      \"\\n\\n\\t\\tuniform int inputEncoding;\\n\\t\\tuniform int outputEncoding;\\n\\n\\t\\t#include <encodings_pars_fragment>\\n\\n\\t\\tvec4 inputTexelToLinear( vec4 value ) {\\n\\n\\t\\t\\tif ( inputEncoding == 0 ) {\\n\\n\\t\\t\\t\\treturn value;\\n\\n\\t\\t\\t} else if ( inputEncoding == 1 ) {\\n\\n\\t\\t\\t\\treturn sRGBToLinear( value );\\n\\n\\t\\t\\t} else if ( inputEncoding == 2 ) {\\n\\n\\t\\t\\t\\treturn RGBEToLinear( value );\\n\\n\\t\\t\\t} else if ( inputEncoding == 3 ) {\\n\\n\\t\\t\\t\\treturn RGBMToLinear( value, 7.0 );\\n\\n\\t\\t\\t} else if ( inputEncoding == 4 ) {\\n\\n\\t\\t\\t\\treturn RGBMToLinear( value, 16.0 );\\n\\n\\t\\t\\t} else if ( inputEncoding == 5 ) {\\n\\n\\t\\t\\t\\treturn RGBDToLinear( value, 256.0 );\\n\\n\\t\\t\\t} else {\\n\\n\\t\\t\\t\\treturn GammaToLinear( value, 2.2 );\\n\\n\\t\\t\\t}\\n\\n\\t\\t}\\n\\n\\t\\tvec4 linearToOutputTexel( vec4 value ) {\\n\\n\\t\\t\\tif ( outputEncoding == 0 ) {\\n\\n\\t\\t\\t\\treturn value;\\n\\n\\t\\t\\t} else if ( outputEncoding == 1 ) {\\n\\n\\t\\t\\t\\treturn LinearTosRGB( value );\\n\\n\\t\\t\\t} else if ( outputEncoding == 2 ) {\\n\\n\\t\\t\\t\\treturn LinearToRGBE( value );\\n\\n\\t\\t\\t} else if ( outputEncoding == 3 ) {\\n\\n\\t\\t\\t\\treturn LinearToRGBM( value, 7.0 );\\n\\n\\t\\t\\t} else if ( outputEncoding == 4 ) {\\n\\n\\t\\t\\t\\treturn LinearToRGBM( value, 16.0 );\\n\\n\\t\\t\\t} else if ( outputEncoding == 5 ) {\\n\\n\\t\\t\\t\\treturn LinearToRGBD( value, 256.0 );\\n\\n\\t\\t\\t} else {\\n\\n\\t\\t\\t\\treturn LinearToGamma( value, 2.2 );\\n\\n\\t\\t\\t}\\n\\n\\t\\t}\\n\\n\\t\\tvec4 envMapTexelToLinear( vec4 color ) {\\n\\n\\t\\t\\treturn inputTexelToLinear( color );\\n\\n\\t\\t}\\n\\t\"\n    );\n  }\n\n  function WebGLCubeUVMaps(renderer) {\n    var cubeUVmaps = new WeakMap();\n    var pmremGenerator = null;\n\n    function get(texture) {\n      if (texture && texture.isTexture && texture.isRenderTargetTexture === false) {\n        var mapping = texture.mapping;\n        var isEquirectMap = mapping === EquirectangularReflectionMapping || mapping === EquirectangularRefractionMapping;\n        var isCubeMap = mapping === CubeReflectionMapping || mapping === CubeRefractionMapping;\n\n        if (isEquirectMap || isCubeMap) {\n          // equirect/cube map to cubeUV conversion\n          if (cubeUVmaps.has(texture)) {\n            return cubeUVmaps.get(texture).texture;\n          } else {\n            var image = texture.image;\n\n            if (isEquirectMap && image && image.height > 0 || isCubeMap && image && isCubeTextureComplete(image)) {\n              var currentRenderTarget = renderer.getRenderTarget();\n              if (pmremGenerator === null) pmremGenerator = new PMREMGenerator(renderer);\n              var renderTarget = isEquirectMap ? pmremGenerator.fromEquirectangular(texture) : pmremGenerator.fromCubemap(texture);\n              cubeUVmaps.set(texture, renderTarget);\n              renderer.setRenderTarget(currentRenderTarget);\n              texture.addEventListener('dispose', onTextureDispose);\n              return renderTarget.texture;\n            } else {\n              // image not yet ready. try the conversion next frame\n              return null;\n            }\n          }\n        }\n      }\n\n      return texture;\n    }\n\n    function isCubeTextureComplete(image) {\n      var count = 0;\n      var length = 6;\n\n      for (var _i87 = 0; _i87 < length; _i87++) {\n        if (image[_i87] !== undefined) count++;\n      }\n\n      return count === length;\n    }\n\n    function onTextureDispose(event) {\n      var texture = event.target;\n      texture.removeEventListener('dispose', onTextureDispose);\n      var cubemapUV = cubeUVmaps.get(texture);\n\n      if (cubemapUV !== undefined) {\n        cubeUVmaps.delete(texture);\n        cubemapUV.dispose();\n      }\n    }\n\n    function dispose() {\n      cubeUVmaps = new WeakMap();\n\n      if (pmremGenerator !== null) {\n        pmremGenerator.dispose();\n        pmremGenerator = null;\n      }\n    }\n\n    return {\n      get: get,\n      dispose: dispose\n    };\n  }\n\n  function WebGLExtensions(gl) {\n    var extensions = {};\n\n    function getExtension(name) {\n      if (extensions[name] !== undefined) {\n        return extensions[name];\n      }\n\n      var extension;\n\n      switch (name) {\n        case 'WEBGL_depth_texture':\n          extension = gl.getExtension('WEBGL_depth_texture') || gl.getExtension('MOZ_WEBGL_depth_texture') || gl.getExtension('WEBKIT_WEBGL_depth_texture');\n          break;\n\n        case 'EXT_texture_filter_anisotropic':\n          extension = gl.getExtension('EXT_texture_filter_anisotropic') || gl.getExtension('MOZ_EXT_texture_filter_anisotropic') || gl.getExtension('WEBKIT_EXT_texture_filter_anisotropic');\n          break;\n\n        case 'WEBGL_compressed_texture_s3tc':\n          extension = gl.getExtension('WEBGL_compressed_texture_s3tc') || gl.getExtension('MOZ_WEBGL_compressed_texture_s3tc') || gl.getExtension('WEBKIT_WEBGL_compressed_texture_s3tc');\n          break;\n\n        case 'WEBGL_compressed_texture_pvrtc':\n          extension = gl.getExtension('WEBGL_compressed_texture_pvrtc') || gl.getExtension('WEBKIT_WEBGL_compressed_texture_pvrtc');\n          break;\n\n        default:\n          extension = gl.getExtension(name);\n      }\n\n      extensions[name] = extension;\n      return extension;\n    }\n\n    return {\n      has: function has(name) {\n        return getExtension(name) !== null;\n      },\n      init: function init(capabilities) {\n        if (capabilities.isWebGL2) {\n          getExtension('EXT_color_buffer_float');\n        } else {\n          getExtension('WEBGL_depth_texture');\n          getExtension('OES_texture_float');\n          getExtension('OES_texture_half_float');\n          getExtension('OES_texture_half_float_linear');\n          getExtension('OES_standard_derivatives');\n          getExtension('OES_element_index_uint');\n          getExtension('OES_vertex_array_object');\n          getExtension('ANGLE_instanced_arrays');\n        }\n\n        getExtension('OES_texture_float_linear');\n        getExtension('EXT_color_buffer_half_float');\n      },\n      get: function get(name) {\n        var extension = getExtension(name);\n\n        if (extension === null) {\n          console.warn('THREE.WebGLRenderer: ' + name + ' extension not supported.');\n        }\n\n        return extension;\n      }\n    };\n  }\n\n  function WebGLGeometries(gl, attributes, info, bindingStates) {\n    var geometries = {};\n    var wireframeAttributes = new WeakMap();\n\n    function onGeometryDispose(event) {\n      var geometry = event.target;\n\n      if (geometry.index !== null) {\n        attributes.remove(geometry.index);\n      }\n\n      for (var name in geometry.attributes) {\n        attributes.remove(geometry.attributes[name]);\n      }\n\n      geometry.removeEventListener('dispose', onGeometryDispose);\n      delete geometries[geometry.id];\n      var attribute = wireframeAttributes.get(geometry);\n\n      if (attribute) {\n        attributes.remove(attribute);\n        wireframeAttributes.delete(geometry);\n      }\n\n      bindingStates.releaseStatesOfGeometry(geometry);\n\n      if (geometry.isInstancedBufferGeometry === true) {\n        delete geometry._maxInstanceCount;\n      } //\n\n\n      info.memory.geometries--;\n    }\n\n    function get(object, geometry) {\n      if (geometries[geometry.id] === true) return geometry;\n      geometry.addEventListener('dispose', onGeometryDispose);\n      geometries[geometry.id] = true;\n      info.memory.geometries++;\n      return geometry;\n    }\n\n    function update(geometry) {\n      var geometryAttributes = geometry.attributes; // Updating index buffer in VAO now. See WebGLBindingStates.\n\n      for (var name in geometryAttributes) {\n        attributes.update(geometryAttributes[name], gl.ARRAY_BUFFER);\n      } // morph targets\n\n\n      var morphAttributes = geometry.morphAttributes;\n\n      for (var _name3 in morphAttributes) {\n        var array = morphAttributes[_name3];\n\n        for (var _i88 = 0, l = array.length; _i88 < l; _i88++) {\n          attributes.update(array[_i88], gl.ARRAY_BUFFER);\n        }\n      }\n    }\n\n    function updateWireframeAttribute(geometry) {\n      var indices = [];\n      var geometryIndex = geometry.index;\n      var geometryPosition = geometry.attributes.position;\n      var version = 0;\n\n      if (geometryIndex !== null) {\n        var array = geometryIndex.array;\n        version = geometryIndex.version;\n\n        for (var _i89 = 0, l = array.length; _i89 < l; _i89 += 3) {\n          var a = array[_i89 + 0];\n          var b = array[_i89 + 1];\n          var c = array[_i89 + 2];\n          indices.push(a, b, b, c, c, a);\n        }\n      } else {\n        var _array = geometryPosition.array;\n        version = geometryPosition.version;\n\n        for (var _i90 = 0, _l4 = _array.length / 3 - 1; _i90 < _l4; _i90 += 3) {\n          var _a4 = _i90 + 0;\n\n          var _b4 = _i90 + 1;\n\n          var _c4 = _i90 + 2;\n\n          indices.push(_a4, _b4, _b4, _c4, _c4, _a4);\n        }\n      }\n\n      var attribute = new (arrayMax(indices) > 65535 ? Uint32BufferAttribute : Uint16BufferAttribute)(indices, 1);\n      attribute.version = version; // Updating index buffer in VAO now. See WebGLBindingStates\n      //\n\n      var previousAttribute = wireframeAttributes.get(geometry);\n      if (previousAttribute) attributes.remove(previousAttribute); //\n\n      wireframeAttributes.set(geometry, attribute);\n    }\n\n    function getWireframeAttribute(geometry) {\n      var currentAttribute = wireframeAttributes.get(geometry);\n\n      if (currentAttribute) {\n        var geometryIndex = geometry.index;\n\n        if (geometryIndex !== null) {\n          // if the attribute is obsolete, create a new one\n          if (currentAttribute.version < geometryIndex.version) {\n            updateWireframeAttribute(geometry);\n          }\n        }\n      } else {\n        updateWireframeAttribute(geometry);\n      }\n\n      return wireframeAttributes.get(geometry);\n    }\n\n    return {\n      get: get,\n      update: update,\n      getWireframeAttribute: getWireframeAttribute\n    };\n  }\n\n  function WebGLIndexedBufferRenderer(gl, extensions, info, capabilities) {\n    var isWebGL2 = capabilities.isWebGL2;\n    var mode;\n\n    function setMode(value) {\n      mode = value;\n    }\n\n    var type, bytesPerElement;\n\n    function setIndex(value) {\n      type = value.type;\n      bytesPerElement = value.bytesPerElement;\n    }\n\n    function render(start, count) {\n      gl.drawElements(mode, count, type, start * bytesPerElement);\n      info.update(count, mode, 1);\n    }\n\n    function renderInstances(start, count, primcount) {\n      if (primcount === 0) return;\n      var extension, methodName;\n\n      if (isWebGL2) {\n        extension = gl;\n        methodName = 'drawElementsInstanced';\n      } else {\n        extension = extensions.get('ANGLE_instanced_arrays');\n        methodName = 'drawElementsInstancedANGLE';\n\n        if (extension === null) {\n          console.error('THREE.WebGLIndexedBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.');\n          return;\n        }\n      }\n\n      extension[methodName](mode, count, type, start * bytesPerElement, primcount);\n      info.update(count, mode, primcount);\n    } //\n\n\n    this.setMode = setMode;\n    this.setIndex = setIndex;\n    this.render = render;\n    this.renderInstances = renderInstances;\n  }\n\n  function WebGLInfo(gl) {\n    var memory = {\n      geometries: 0,\n      textures: 0\n    };\n    var render = {\n      frame: 0,\n      calls: 0,\n      triangles: 0,\n      points: 0,\n      lines: 0\n    };\n\n    function update(count, mode, instanceCount) {\n      render.calls++;\n\n      switch (mode) {\n        case gl.TRIANGLES:\n          render.triangles += instanceCount * (count / 3);\n          break;\n\n        case gl.LINES:\n          render.lines += instanceCount * (count / 2);\n          break;\n\n        case gl.LINE_STRIP:\n          render.lines += instanceCount * (count - 1);\n          break;\n\n        case gl.LINE_LOOP:\n          render.lines += instanceCount * count;\n          break;\n\n        case gl.POINTS:\n          render.points += instanceCount * count;\n          break;\n\n        default:\n          console.error('THREE.WebGLInfo: Unknown draw mode:', mode);\n          break;\n      }\n    }\n\n    function reset() {\n      render.frame++;\n      render.calls = 0;\n      render.triangles = 0;\n      render.points = 0;\n      render.lines = 0;\n    }\n\n    return {\n      memory: memory,\n      render: render,\n      programs: null,\n      autoReset: true,\n      reset: reset,\n      update: update\n    };\n  }\n\n  var DataTexture2DArray = /*#__PURE__*/function (_Texture2) {\n    _inherits(DataTexture2DArray, _Texture2);\n\n    var _super30 = _createSuper(DataTexture2DArray);\n\n    function DataTexture2DArray() {\n      var _this21;\n\n      var data = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n      var width = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n      var height = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n      var depth = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 1;\n\n      _classCallCheck(this, DataTexture2DArray);\n\n      _this21 = _super30.call(this, null);\n      _this21.image = {\n        data: data,\n        width: width,\n        height: height,\n        depth: depth\n      };\n      _this21.magFilter = NearestFilter;\n      _this21.minFilter = NearestFilter;\n      _this21.wrapR = ClampToEdgeWrapping;\n      _this21.generateMipmaps = false;\n      _this21.flipY = false;\n      _this21.unpackAlignment = 1;\n      _this21.needsUpdate = true;\n      return _this21;\n    }\n\n    return DataTexture2DArray;\n  }(Texture);\n\n  DataTexture2DArray.prototype.isDataTexture2DArray = true;\n\n  function numericalSort(a, b) {\n    return a[0] - b[0];\n  }\n\n  function absNumericalSort(a, b) {\n    return Math.abs(b[1]) - Math.abs(a[1]);\n  }\n\n  function denormalize(morph, attribute) {\n    var denominator = 1;\n    var array = attribute.isInterleavedBufferAttribute ? attribute.data.array : attribute.array;\n    if (array instanceof Int8Array) denominator = 127;else if (array instanceof Int16Array) denominator = 32767;else if (array instanceof Int32Array) denominator = 2147483647;else console.error('THREE.WebGLMorphtargets: Unsupported morph attribute data type: ', array);\n    morph.divideScalar(denominator);\n  }\n\n  function WebGLMorphtargets(gl, capabilities, textures) {\n    var influencesList = {};\n    var morphInfluences = new Float32Array(8);\n    var morphTextures = new WeakMap();\n    var morph = new Vector3();\n    var workInfluences = [];\n\n    for (var _i91 = 0; _i91 < 8; _i91++) {\n      workInfluences[_i91] = [_i91, 0];\n    }\n\n    function update(object, geometry, material, program) {\n      var objectInfluences = object.morphTargetInfluences;\n\n      if (capabilities.isWebGL2 === true) {\n        // instead of using attributes, the WebGL 2 code path encodes morph targets\n        // into an array of data textures. Each layer represents a single morph target.\n        var numberOfMorphTargets = geometry.morphAttributes.position.length;\n        var entry = morphTextures.get(geometry);\n\n        if (entry === undefined || entry.count !== numberOfMorphTargets) {\n          if (entry !== undefined) entry.texture.dispose();\n          var hasMorphNormals = geometry.morphAttributes.normal !== undefined;\n          var morphTargets = geometry.morphAttributes.position;\n          var morphNormals = geometry.morphAttributes.normal || [];\n          var numberOfVertices = geometry.attributes.position.count;\n          var numberOfVertexData = hasMorphNormals === true ? 2 : 1; // (v,n) vs. (v)\n\n          var width = numberOfVertices * numberOfVertexData;\n          var height = 1;\n\n          if (width > capabilities.maxTextureSize) {\n            height = Math.ceil(width / capabilities.maxTextureSize);\n            width = capabilities.maxTextureSize;\n          }\n\n          var buffer = new Float32Array(width * height * 4 * numberOfMorphTargets);\n          var texture = new DataTexture2DArray(buffer, width, height, numberOfMorphTargets);\n          texture.format = RGBAFormat; // using RGBA since RGB might be emulated (and is thus slower)\n\n          texture.type = FloatType; // fill buffer\n\n          var vertexDataStride = numberOfVertexData * 4;\n\n          for (var _i92 = 0; _i92 < numberOfMorphTargets; _i92++) {\n            var morphTarget = morphTargets[_i92];\n            var morphNormal = morphNormals[_i92];\n            var offset = width * height * 4 * _i92;\n\n            for (var j = 0; j < morphTarget.count; j++) {\n              morph.fromBufferAttribute(morphTarget, j);\n              if (morphTarget.normalized === true) denormalize(morph, morphTarget);\n              var stride = j * vertexDataStride;\n              buffer[offset + stride + 0] = morph.x;\n              buffer[offset + stride + 1] = morph.y;\n              buffer[offset + stride + 2] = morph.z;\n              buffer[offset + stride + 3] = 0;\n\n              if (hasMorphNormals === true) {\n                morph.fromBufferAttribute(morphNormal, j);\n                if (morphNormal.normalized === true) denormalize(morph, morphNormal);\n                buffer[offset + stride + 4] = morph.x;\n                buffer[offset + stride + 5] = morph.y;\n                buffer[offset + stride + 6] = morph.z;\n                buffer[offset + stride + 7] = 0;\n              }\n            }\n          }\n\n          entry = {\n            count: numberOfMorphTargets,\n            texture: texture,\n            size: new Vector2(width, height)\n          };\n          morphTextures.set(geometry, entry);\n        } //\n\n\n        var morphInfluencesSum = 0;\n\n        for (var _i93 = 0; _i93 < objectInfluences.length; _i93++) {\n          morphInfluencesSum += objectInfluences[_i93];\n        }\n\n        var morphBaseInfluence = geometry.morphTargetsRelative ? 1 : 1 - morphInfluencesSum;\n        program.getUniforms().setValue(gl, 'morphTargetBaseInfluence', morphBaseInfluence);\n        program.getUniforms().setValue(gl, 'morphTargetInfluences', objectInfluences);\n        program.getUniforms().setValue(gl, 'morphTargetsTexture', entry.texture, textures);\n        program.getUniforms().setValue(gl, 'morphTargetsTextureSize', entry.size);\n      } else {\n        // When object doesn't have morph target influences defined, we treat it as a 0-length array\n        // This is important to make sure we set up morphTargetBaseInfluence / morphTargetInfluences\n        var length = objectInfluences === undefined ? 0 : objectInfluences.length;\n        var influences = influencesList[geometry.id];\n\n        if (influences === undefined || influences.length !== length) {\n          // initialise list\n          influences = [];\n\n          for (var _i94 = 0; _i94 < length; _i94++) {\n            influences[_i94] = [_i94, 0];\n          }\n\n          influencesList[geometry.id] = influences;\n        } // Collect influences\n\n\n        for (var _i95 = 0; _i95 < length; _i95++) {\n          var influence = influences[_i95];\n          influence[0] = _i95;\n          influence[1] = objectInfluences[_i95];\n        }\n\n        influences.sort(absNumericalSort);\n\n        for (var _i96 = 0; _i96 < 8; _i96++) {\n          if (_i96 < length && influences[_i96][1]) {\n            workInfluences[_i96][0] = influences[_i96][0];\n            workInfluences[_i96][1] = influences[_i96][1];\n          } else {\n            workInfluences[_i96][0] = Number.MAX_SAFE_INTEGER;\n            workInfluences[_i96][1] = 0;\n          }\n        }\n\n        workInfluences.sort(numericalSort);\n        var _morphTargets = geometry.morphAttributes.position;\n        var _morphNormals = geometry.morphAttributes.normal;\n        var _morphInfluencesSum = 0;\n\n        for (var _i97 = 0; _i97 < 8; _i97++) {\n          var _influence = workInfluences[_i97];\n          var index = _influence[0];\n          var _value3 = _influence[1];\n\n          if (index !== Number.MAX_SAFE_INTEGER && _value3) {\n            if (_morphTargets && geometry.getAttribute('morphTarget' + _i97) !== _morphTargets[index]) {\n              geometry.setAttribute('morphTarget' + _i97, _morphTargets[index]);\n            }\n\n            if (_morphNormals && geometry.getAttribute('morphNormal' + _i97) !== _morphNormals[index]) {\n              geometry.setAttribute('morphNormal' + _i97, _morphNormals[index]);\n            }\n\n            morphInfluences[_i97] = _value3;\n            _morphInfluencesSum += _value3;\n          } else {\n            if (_morphTargets && geometry.hasAttribute('morphTarget' + _i97) === true) {\n              geometry.deleteAttribute('morphTarget' + _i97);\n            }\n\n            if (_morphNormals && geometry.hasAttribute('morphNormal' + _i97) === true) {\n              geometry.deleteAttribute('morphNormal' + _i97);\n            }\n\n            morphInfluences[_i97] = 0;\n          }\n        } // GLSL shader uses formula baseinfluence * base + sum(target * influence)\n        // This allows us to switch between absolute morphs and relative morphs without changing shader code\n        // When baseinfluence = 1 - sum(influence), the above is equivalent to sum((target - base) * influence)\n\n\n        var _morphBaseInfluence = geometry.morphTargetsRelative ? 1 : 1 - _morphInfluencesSum;\n\n        program.getUniforms().setValue(gl, 'morphTargetBaseInfluence', _morphBaseInfluence);\n        program.getUniforms().setValue(gl, 'morphTargetInfluences', morphInfluences);\n      }\n    }\n\n    return {\n      update: update\n    };\n  }\n\n  function WebGLObjects(gl, geometries, attributes, info) {\n    var updateMap = new WeakMap();\n\n    function update(object) {\n      var frame = info.render.frame;\n      var geometry = object.geometry;\n      var buffergeometry = geometries.get(object, geometry); // Update once per frame\n\n      if (updateMap.get(buffergeometry) !== frame) {\n        geometries.update(buffergeometry);\n        updateMap.set(buffergeometry, frame);\n      }\n\n      if (object.isInstancedMesh) {\n        if (object.hasEventListener('dispose', onInstancedMeshDispose) === false) {\n          object.addEventListener('dispose', onInstancedMeshDispose);\n        }\n\n        attributes.update(object.instanceMatrix, gl.ARRAY_BUFFER);\n\n        if (object.instanceColor !== null) {\n          attributes.update(object.instanceColor, gl.ARRAY_BUFFER);\n        }\n      }\n\n      return buffergeometry;\n    }\n\n    function dispose() {\n      updateMap = new WeakMap();\n    }\n\n    function onInstancedMeshDispose(event) {\n      var instancedMesh = event.target;\n      instancedMesh.removeEventListener('dispose', onInstancedMeshDispose);\n      attributes.remove(instancedMesh.instanceMatrix);\n      if (instancedMesh.instanceColor !== null) attributes.remove(instancedMesh.instanceColor);\n    }\n\n    return {\n      update: update,\n      dispose: dispose\n    };\n  }\n\n  var DataTexture3D = /*#__PURE__*/function (_Texture3) {\n    _inherits(DataTexture3D, _Texture3);\n\n    var _super31 = _createSuper(DataTexture3D);\n\n    function DataTexture3D() {\n      var _this22;\n\n      var data = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n      var width = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n      var height = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n      var depth = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 1;\n\n      _classCallCheck(this, DataTexture3D);\n\n      // We're going to add .setXXX() methods for setting properties later.\n      // Users can still set in DataTexture3D directly.\n      //\n      //\tconst texture = new THREE.DataTexture3D( data, width, height, depth );\n      // \ttexture.anisotropy = 16;\n      //\n      // See #14839\n      _this22 = _super31.call(this, null);\n      _this22.image = {\n        data: data,\n        width: width,\n        height: height,\n        depth: depth\n      };\n      _this22.magFilter = NearestFilter;\n      _this22.minFilter = NearestFilter;\n      _this22.wrapR = ClampToEdgeWrapping;\n      _this22.generateMipmaps = false;\n      _this22.flipY = false;\n      _this22.unpackAlignment = 1;\n      _this22.needsUpdate = true;\n      return _this22;\n    }\n\n    return DataTexture3D;\n  }(Texture);\n\n  DataTexture3D.prototype.isDataTexture3D = true;\n  /**\n   * Uniforms of a program.\n   * Those form a tree structure with a special top-level container for the root,\n   * which you get by calling 'new WebGLUniforms( gl, program )'.\n   *\n   *\n   * Properties of inner nodes including the top-level container:\n   *\n   * .seq - array of nested uniforms\n   * .map - nested uniforms by name\n   *\n   *\n   * Methods of all nodes except the top-level container:\n   *\n   * .setValue( gl, value, [textures] )\n   *\n   * \t\tuploads a uniform value(s)\n   *\t\tthe 'textures' parameter is needed for sampler uniforms\n   *\n   *\n   * Static methods of the top-level container (textures factorizations):\n   *\n   * .upload( gl, seq, values, textures )\n   *\n   * \t\tsets uniforms in 'seq' to 'values[id].value'\n   *\n   * .seqWithValue( seq, values ) : filteredSeq\n   *\n   * \t\tfilters 'seq' entries with corresponding entry in values\n   *\n   *\n   * Methods of the top-level container (textures factorizations):\n   *\n   * .setValue( gl, name, value, textures )\n   *\n   * \t\tsets uniform with\tname 'name' to 'value'\n   *\n   * .setOptional( gl, obj, prop )\n   *\n   * \t\tlike .set for an optional property of the object\n   *\n   */\n\n  var emptyTexture = new Texture();\n  var emptyTexture2dArray = new DataTexture2DArray();\n  var emptyTexture3d = new DataTexture3D();\n  var emptyCubeTexture = new CubeTexture(); // --- Utilities ---\n  // Array Caches (provide typed arrays for temporary by size)\n\n  var arrayCacheF32 = [];\n  var arrayCacheI32 = []; // Float32Array caches used for uploading Matrix uniforms\n\n  var mat4array = new Float32Array(16);\n  var mat3array = new Float32Array(9);\n  var mat2array = new Float32Array(4); // Flattening for arrays of vectors and matrices\n\n  function flatten(array, nBlocks, blockSize) {\n    var firstElem = array[0];\n    if (firstElem <= 0 || firstElem > 0) return array; // unoptimized: ! isNaN( firstElem )\n    // see http://jacksondunstan.com/articles/983\n\n    var n = nBlocks * blockSize;\n    var r = arrayCacheF32[n];\n\n    if (r === undefined) {\n      r = new Float32Array(n);\n      arrayCacheF32[n] = r;\n    }\n\n    if (nBlocks !== 0) {\n      firstElem.toArray(r, 0);\n\n      for (var _i98 = 1, offset = 0; _i98 !== nBlocks; ++_i98) {\n        offset += blockSize;\n\n        array[_i98].toArray(r, offset);\n      }\n    }\n\n    return r;\n  }\n\n  function arraysEqual(a, b) {\n    if (a.length !== b.length) return false;\n\n    for (var _i99 = 0, l = a.length; _i99 < l; _i99++) {\n      if (a[_i99] !== b[_i99]) return false;\n    }\n\n    return true;\n  }\n\n  function copyArray(a, b) {\n    for (var _i100 = 0, l = b.length; _i100 < l; _i100++) {\n      a[_i100] = b[_i100];\n    }\n  } // Texture unit allocation\n\n\n  function allocTexUnits(textures, n) {\n    var r = arrayCacheI32[n];\n\n    if (r === undefined) {\n      r = new Int32Array(n);\n      arrayCacheI32[n] = r;\n    }\n\n    for (var _i101 = 0; _i101 !== n; ++_i101) {\n      r[_i101] = textures.allocateTextureUnit();\n    }\n\n    return r;\n  } // --- Setters ---\n  // Note: Defining these methods externally, because they come in a bunch\n  // and this way their names minify.\n  // Single scalar\n\n\n  function setValueV1f(gl, v) {\n    var cache = this.cache;\n    if (cache[0] === v) return;\n    gl.uniform1f(this.addr, v);\n    cache[0] = v;\n  } // Single float vector (from flat array or THREE.VectorN)\n\n\n  function setValueV2f(gl, v) {\n    var cache = this.cache;\n\n    if (v.x !== undefined) {\n      if (cache[0] !== v.x || cache[1] !== v.y) {\n        gl.uniform2f(this.addr, v.x, v.y);\n        cache[0] = v.x;\n        cache[1] = v.y;\n      }\n    } else {\n      if (arraysEqual(cache, v)) return;\n      gl.uniform2fv(this.addr, v);\n      copyArray(cache, v);\n    }\n  }\n\n  function setValueV3f(gl, v) {\n    var cache = this.cache;\n\n    if (v.x !== undefined) {\n      if (cache[0] !== v.x || cache[1] !== v.y || cache[2] !== v.z) {\n        gl.uniform3f(this.addr, v.x, v.y, v.z);\n        cache[0] = v.x;\n        cache[1] = v.y;\n        cache[2] = v.z;\n      }\n    } else if (v.r !== undefined) {\n      if (cache[0] !== v.r || cache[1] !== v.g || cache[2] !== v.b) {\n        gl.uniform3f(this.addr, v.r, v.g, v.b);\n        cache[0] = v.r;\n        cache[1] = v.g;\n        cache[2] = v.b;\n      }\n    } else {\n      if (arraysEqual(cache, v)) return;\n      gl.uniform3fv(this.addr, v);\n      copyArray(cache, v);\n    }\n  }\n\n  function setValueV4f(gl, v) {\n    var cache = this.cache;\n\n    if (v.x !== undefined) {\n      if (cache[0] !== v.x || cache[1] !== v.y || cache[2] !== v.z || cache[3] !== v.w) {\n        gl.uniform4f(this.addr, v.x, v.y, v.z, v.w);\n        cache[0] = v.x;\n        cache[1] = v.y;\n        cache[2] = v.z;\n        cache[3] = v.w;\n      }\n    } else {\n      if (arraysEqual(cache, v)) return;\n      gl.uniform4fv(this.addr, v);\n      copyArray(cache, v);\n    }\n  } // Single matrix (from flat array or THREE.MatrixN)\n\n\n  function setValueM2(gl, v) {\n    var cache = this.cache;\n    var elements = v.elements;\n\n    if (elements === undefined) {\n      if (arraysEqual(cache, v)) return;\n      gl.uniformMatrix2fv(this.addr, false, v);\n      copyArray(cache, v);\n    } else {\n      if (arraysEqual(cache, elements)) return;\n      mat2array.set(elements);\n      gl.uniformMatrix2fv(this.addr, false, mat2array);\n      copyArray(cache, elements);\n    }\n  }\n\n  function setValueM3(gl, v) {\n    var cache = this.cache;\n    var elements = v.elements;\n\n    if (elements === undefined) {\n      if (arraysEqual(cache, v)) return;\n      gl.uniformMatrix3fv(this.addr, false, v);\n      copyArray(cache, v);\n    } else {\n      if (arraysEqual(cache, elements)) return;\n      mat3array.set(elements);\n      gl.uniformMatrix3fv(this.addr, false, mat3array);\n      copyArray(cache, elements);\n    }\n  }\n\n  function setValueM4(gl, v) {\n    var cache = this.cache;\n    var elements = v.elements;\n\n    if (elements === undefined) {\n      if (arraysEqual(cache, v)) return;\n      gl.uniformMatrix4fv(this.addr, false, v);\n      copyArray(cache, v);\n    } else {\n      if (arraysEqual(cache, elements)) return;\n      mat4array.set(elements);\n      gl.uniformMatrix4fv(this.addr, false, mat4array);\n      copyArray(cache, elements);\n    }\n  } // Single integer / boolean\n\n\n  function setValueV1i(gl, v) {\n    var cache = this.cache;\n    if (cache[0] === v) return;\n    gl.uniform1i(this.addr, v);\n    cache[0] = v;\n  } // Single integer / boolean vector (from flat array)\n\n\n  function setValueV2i(gl, v) {\n    var cache = this.cache;\n    if (arraysEqual(cache, v)) return;\n    gl.uniform2iv(this.addr, v);\n    copyArray(cache, v);\n  }\n\n  function setValueV3i(gl, v) {\n    var cache = this.cache;\n    if (arraysEqual(cache, v)) return;\n    gl.uniform3iv(this.addr, v);\n    copyArray(cache, v);\n  }\n\n  function setValueV4i(gl, v) {\n    var cache = this.cache;\n    if (arraysEqual(cache, v)) return;\n    gl.uniform4iv(this.addr, v);\n    copyArray(cache, v);\n  } // Single unsigned integer\n\n\n  function setValueV1ui(gl, v) {\n    var cache = this.cache;\n    if (cache[0] === v) return;\n    gl.uniform1ui(this.addr, v);\n    cache[0] = v;\n  } // Single unsigned integer vector (from flat array)\n\n\n  function setValueV2ui(gl, v) {\n    var cache = this.cache;\n    if (arraysEqual(cache, v)) return;\n    gl.uniform2uiv(this.addr, v);\n    copyArray(cache, v);\n  }\n\n  function setValueV3ui(gl, v) {\n    var cache = this.cache;\n    if (arraysEqual(cache, v)) return;\n    gl.uniform3uiv(this.addr, v);\n    copyArray(cache, v);\n  }\n\n  function setValueV4ui(gl, v) {\n    var cache = this.cache;\n    if (arraysEqual(cache, v)) return;\n    gl.uniform4uiv(this.addr, v);\n    copyArray(cache, v);\n  } // Single texture (2D / Cube)\n\n\n  function setValueT1(gl, v, textures) {\n    var cache = this.cache;\n    var unit = textures.allocateTextureUnit();\n\n    if (cache[0] !== unit) {\n      gl.uniform1i(this.addr, unit);\n      cache[0] = unit;\n    }\n\n    textures.safeSetTexture2D(v || emptyTexture, unit);\n  }\n\n  function setValueT3D1(gl, v, textures) {\n    var cache = this.cache;\n    var unit = textures.allocateTextureUnit();\n\n    if (cache[0] !== unit) {\n      gl.uniform1i(this.addr, unit);\n      cache[0] = unit;\n    }\n\n    textures.setTexture3D(v || emptyTexture3d, unit);\n  }\n\n  function setValueT6(gl, v, textures) {\n    var cache = this.cache;\n    var unit = textures.allocateTextureUnit();\n\n    if (cache[0] !== unit) {\n      gl.uniform1i(this.addr, unit);\n      cache[0] = unit;\n    }\n\n    textures.safeSetTextureCube(v || emptyCubeTexture, unit);\n  }\n\n  function setValueT2DArray1(gl, v, textures) {\n    var cache = this.cache;\n    var unit = textures.allocateTextureUnit();\n\n    if (cache[0] !== unit) {\n      gl.uniform1i(this.addr, unit);\n      cache[0] = unit;\n    }\n\n    textures.setTexture2DArray(v || emptyTexture2dArray, unit);\n  } // Helper to pick the right setter for the singular case\n\n\n  function getSingularSetter(type) {\n    switch (type) {\n      case 0x1406:\n        return setValueV1f;\n      // FLOAT\n\n      case 0x8b50:\n        return setValueV2f;\n      // _VEC2\n\n      case 0x8b51:\n        return setValueV3f;\n      // _VEC3\n\n      case 0x8b52:\n        return setValueV4f;\n      // _VEC4\n\n      case 0x8b5a:\n        return setValueM2;\n      // _MAT2\n\n      case 0x8b5b:\n        return setValueM3;\n      // _MAT3\n\n      case 0x8b5c:\n        return setValueM4;\n      // _MAT4\n\n      case 0x1404:\n      case 0x8b56:\n        return setValueV1i;\n      // INT, BOOL\n\n      case 0x8b53:\n      case 0x8b57:\n        return setValueV2i;\n      // _VEC2\n\n      case 0x8b54:\n      case 0x8b58:\n        return setValueV3i;\n      // _VEC3\n\n      case 0x8b55:\n      case 0x8b59:\n        return setValueV4i;\n      // _VEC4\n\n      case 0x1405:\n        return setValueV1ui;\n      // UINT\n\n      case 0x8dc6:\n        return setValueV2ui;\n      // _VEC2\n\n      case 0x8dc7:\n        return setValueV3ui;\n      // _VEC3\n\n      case 0x8dc8:\n        return setValueV4ui;\n      // _VEC4\n\n      case 0x8b5e: // SAMPLER_2D\n\n      case 0x8d66: // SAMPLER_EXTERNAL_OES\n\n      case 0x8dca: // INT_SAMPLER_2D\n\n      case 0x8dd2: // UNSIGNED_INT_SAMPLER_2D\n\n      case 0x8b62:\n        // SAMPLER_2D_SHADOW\n        return setValueT1;\n\n      case 0x8b5f: // SAMPLER_3D\n\n      case 0x8dcb: // INT_SAMPLER_3D\n\n      case 0x8dd3:\n        // UNSIGNED_INT_SAMPLER_3D\n        return setValueT3D1;\n\n      case 0x8b60: // SAMPLER_CUBE\n\n      case 0x8dcc: // INT_SAMPLER_CUBE\n\n      case 0x8dd4: // UNSIGNED_INT_SAMPLER_CUBE\n\n      case 0x8dc5:\n        // SAMPLER_CUBE_SHADOW\n        return setValueT6;\n\n      case 0x8dc1: // SAMPLER_2D_ARRAY\n\n      case 0x8dcf: // INT_SAMPLER_2D_ARRAY\n\n      case 0x8dd7: // UNSIGNED_INT_SAMPLER_2D_ARRAY\n\n      case 0x8dc4:\n        // SAMPLER_2D_ARRAY_SHADOW\n        return setValueT2DArray1;\n    }\n  } // Array of scalars\n\n\n  function setValueV1fArray(gl, v) {\n    gl.uniform1fv(this.addr, v);\n  } // Array of vectors (from flat array or array of THREE.VectorN)\n\n\n  function setValueV2fArray(gl, v) {\n    var data = flatten(v, this.size, 2);\n    gl.uniform2fv(this.addr, data);\n  }\n\n  function setValueV3fArray(gl, v) {\n    var data = flatten(v, this.size, 3);\n    gl.uniform3fv(this.addr, data);\n  }\n\n  function setValueV4fArray(gl, v) {\n    var data = flatten(v, this.size, 4);\n    gl.uniform4fv(this.addr, data);\n  } // Array of matrices (from flat array or array of THREE.MatrixN)\n\n\n  function setValueM2Array(gl, v) {\n    var data = flatten(v, this.size, 4);\n    gl.uniformMatrix2fv(this.addr, false, data);\n  }\n\n  function setValueM3Array(gl, v) {\n    var data = flatten(v, this.size, 9);\n    gl.uniformMatrix3fv(this.addr, false, data);\n  }\n\n  function setValueM4Array(gl, v) {\n    var data = flatten(v, this.size, 16);\n    gl.uniformMatrix4fv(this.addr, false, data);\n  } // Array of integer / boolean\n\n\n  function setValueV1iArray(gl, v) {\n    gl.uniform1iv(this.addr, v);\n  } // Array of integer / boolean vectors (from flat array)\n\n\n  function setValueV2iArray(gl, v) {\n    gl.uniform2iv(this.addr, v);\n  }\n\n  function setValueV3iArray(gl, v) {\n    gl.uniform3iv(this.addr, v);\n  }\n\n  function setValueV4iArray(gl, v) {\n    gl.uniform4iv(this.addr, v);\n  } // Array of unsigned integer\n\n\n  function setValueV1uiArray(gl, v) {\n    gl.uniform1uiv(this.addr, v);\n  } // Array of unsigned integer vectors (from flat array)\n\n\n  function setValueV2uiArray(gl, v) {\n    gl.uniform2uiv(this.addr, v);\n  }\n\n  function setValueV3uiArray(gl, v) {\n    gl.uniform3uiv(this.addr, v);\n  }\n\n  function setValueV4uiArray(gl, v) {\n    gl.uniform4uiv(this.addr, v);\n  } // Array of textures (2D / Cube)\n\n\n  function setValueT1Array(gl, v, textures) {\n    var n = v.length;\n    var units = allocTexUnits(textures, n);\n    gl.uniform1iv(this.addr, units);\n\n    for (var _i102 = 0; _i102 !== n; ++_i102) {\n      textures.safeSetTexture2D(v[_i102] || emptyTexture, units[_i102]);\n    }\n  }\n\n  function setValueT6Array(gl, v, textures) {\n    var n = v.length;\n    var units = allocTexUnits(textures, n);\n    gl.uniform1iv(this.addr, units);\n\n    for (var _i103 = 0; _i103 !== n; ++_i103) {\n      textures.safeSetTextureCube(v[_i103] || emptyCubeTexture, units[_i103]);\n    }\n  } // Helper to pick the right setter for a pure (bottom-level) array\n\n\n  function getPureArraySetter(type) {\n    switch (type) {\n      case 0x1406:\n        return setValueV1fArray;\n      // FLOAT\n\n      case 0x8b50:\n        return setValueV2fArray;\n      // _VEC2\n\n      case 0x8b51:\n        return setValueV3fArray;\n      // _VEC3\n\n      case 0x8b52:\n        return setValueV4fArray;\n      // _VEC4\n\n      case 0x8b5a:\n        return setValueM2Array;\n      // _MAT2\n\n      case 0x8b5b:\n        return setValueM3Array;\n      // _MAT3\n\n      case 0x8b5c:\n        return setValueM4Array;\n      // _MAT4\n\n      case 0x1404:\n      case 0x8b56:\n        return setValueV1iArray;\n      // INT, BOOL\n\n      case 0x8b53:\n      case 0x8b57:\n        return setValueV2iArray;\n      // _VEC2\n\n      case 0x8b54:\n      case 0x8b58:\n        return setValueV3iArray;\n      // _VEC3\n\n      case 0x8b55:\n      case 0x8b59:\n        return setValueV4iArray;\n      // _VEC4\n\n      case 0x1405:\n        return setValueV1uiArray;\n      // UINT\n\n      case 0x8dc6:\n        return setValueV2uiArray;\n      // _VEC2\n\n      case 0x8dc7:\n        return setValueV3uiArray;\n      // _VEC3\n\n      case 0x8dc8:\n        return setValueV4uiArray;\n      // _VEC4\n\n      case 0x8b5e: // SAMPLER_2D\n\n      case 0x8d66: // SAMPLER_EXTERNAL_OES\n\n      case 0x8dca: // INT_SAMPLER_2D\n\n      case 0x8dd2: // UNSIGNED_INT_SAMPLER_2D\n\n      case 0x8b62:\n        // SAMPLER_2D_SHADOW\n        return setValueT1Array;\n\n      case 0x8b60: // SAMPLER_CUBE\n\n      case 0x8dcc: // INT_SAMPLER_CUBE\n\n      case 0x8dd4: // UNSIGNED_INT_SAMPLER_CUBE\n\n      case 0x8dc5:\n        // SAMPLER_CUBE_SHADOW\n        return setValueT6Array;\n    }\n  } // --- Uniform Classes ---\n\n\n  function SingleUniform(id, activeInfo, addr) {\n    this.id = id;\n    this.addr = addr;\n    this.cache = [];\n    this.setValue = getSingularSetter(activeInfo.type); // this.path = activeInfo.name; // DEBUG\n  }\n\n  function PureArrayUniform(id, activeInfo, addr) {\n    this.id = id;\n    this.addr = addr;\n    this.cache = [];\n    this.size = activeInfo.size;\n    this.setValue = getPureArraySetter(activeInfo.type); // this.path = activeInfo.name; // DEBUG\n  }\n\n  PureArrayUniform.prototype.updateCache = function (data) {\n    var cache = this.cache;\n\n    if (data instanceof Float32Array && cache.length !== data.length) {\n      this.cache = new Float32Array(data.length);\n    }\n\n    copyArray(cache, data);\n  };\n\n  function StructuredUniform(id) {\n    this.id = id;\n    this.seq = [];\n    this.map = {};\n  }\n\n  StructuredUniform.prototype.setValue = function (gl, value, textures) {\n    var seq = this.seq;\n\n    for (var _i104 = 0, n = seq.length; _i104 !== n; ++_i104) {\n      var u = seq[_i104];\n      u.setValue(gl, value[u.id], textures);\n    }\n  }; // --- Top-level ---\n  // Parser - builds up the property tree from the path strings\n\n\n  var RePathPart = /(\\w+)(\\])?(\\[|\\.)?/g; // extracts\n  // \t- the identifier (member name or array index)\n  //\t- followed by an optional right bracket (found when array index)\n  //\t- followed by an optional left bracket or dot (type of subscript)\n  //\n  // Note: These portions can be read in a non-overlapping fashion and\n  // allow straightforward parsing of the hierarchy that WebGL encodes\n  // in the uniform names.\n\n  function addUniform(container, uniformObject) {\n    container.seq.push(uniformObject);\n    container.map[uniformObject.id] = uniformObject;\n  }\n\n  function parseUniform(activeInfo, addr, container) {\n    var path = activeInfo.name,\n        pathLength = path.length; // reset RegExp object, because of the early exit of a previous run\n\n    RePathPart.lastIndex = 0;\n\n    while (true) {\n      var match = RePathPart.exec(path),\n          matchEnd = RePathPart.lastIndex;\n      var id = match[1];\n      var idIsIndex = match[2] === ']',\n          subscript = match[3];\n      if (idIsIndex) id = id | 0; // convert to integer\n\n      if (subscript === undefined || subscript === '[' && matchEnd + 2 === pathLength) {\n        // bare name or \"pure\" bottom-level array \"[0]\" suffix\n        addUniform(container, subscript === undefined ? new SingleUniform(id, activeInfo, addr) : new PureArrayUniform(id, activeInfo, addr));\n        break;\n      } else {\n        // step into inner node / create it in case it doesn't exist\n        var map = container.map;\n        var next = map[id];\n\n        if (next === undefined) {\n          next = new StructuredUniform(id);\n          addUniform(container, next);\n        }\n\n        container = next;\n      }\n    }\n  } // Root Container\n\n\n  function WebGLUniforms(gl, program) {\n    this.seq = [];\n    this.map = {};\n    var n = gl.getProgramParameter(program, gl.ACTIVE_UNIFORMS);\n\n    for (var _i105 = 0; _i105 < n; ++_i105) {\n      var info = gl.getActiveUniform(program, _i105),\n          addr = gl.getUniformLocation(program, info.name);\n      parseUniform(info, addr, this);\n    }\n  }\n\n  WebGLUniforms.prototype.setValue = function (gl, name, value, textures) {\n    var u = this.map[name];\n    if (u !== undefined) u.setValue(gl, value, textures);\n  };\n\n  WebGLUniforms.prototype.setOptional = function (gl, object, name) {\n    var v = object[name];\n    if (v !== undefined) this.setValue(gl, name, v);\n  }; // Static interface\n\n\n  WebGLUniforms.upload = function (gl, seq, values, textures) {\n    for (var _i106 = 0, n = seq.length; _i106 !== n; ++_i106) {\n      var u = seq[_i106],\n          v = values[u.id];\n\n      if (v.needsUpdate !== false) {\n        // note: always updating when .needsUpdate is undefined\n        u.setValue(gl, v.value, textures);\n      }\n    }\n  };\n\n  WebGLUniforms.seqWithValue = function (seq, values) {\n    var r = [];\n\n    for (var _i107 = 0, n = seq.length; _i107 !== n; ++_i107) {\n      var u = seq[_i107];\n      if (u.id in values) r.push(u);\n    }\n\n    return r;\n  };\n\n  function WebGLShader(gl, type, string) {\n    var shader = gl.createShader(type);\n    gl.shaderSource(shader, string);\n    gl.compileShader(shader);\n    return shader;\n  }\n\n  var programIdCount = 0;\n\n  function addLineNumbers(string) {\n    var lines = string.split('\\n');\n\n    for (var _i108 = 0; _i108 < lines.length; _i108++) {\n      lines[_i108] = _i108 + 1 + ': ' + lines[_i108];\n    }\n\n    return lines.join('\\n');\n  }\n\n  function getEncodingComponents(encoding) {\n    switch (encoding) {\n      case LinearEncoding:\n        return ['Linear', '( value )'];\n\n      case sRGBEncoding:\n        return ['sRGB', '( value )'];\n\n      case RGBEEncoding:\n        return ['RGBE', '( value )'];\n\n      case RGBM7Encoding:\n        return ['RGBM', '( value, 7.0 )'];\n\n      case RGBM16Encoding:\n        return ['RGBM', '( value, 16.0 )'];\n\n      case RGBDEncoding:\n        return ['RGBD', '( value, 256.0 )'];\n\n      case GammaEncoding:\n        return ['Gamma', '( value, float( GAMMA_FACTOR ) )'];\n\n      case LogLuvEncoding:\n        return ['LogLuv', '( value )'];\n\n      default:\n        console.warn('THREE.WebGLProgram: Unsupported encoding:', encoding);\n        return ['Linear', '( value )'];\n    }\n  }\n\n  function getShaderErrors(gl, shader, type) {\n    var status = gl.getShaderParameter(shader, gl.COMPILE_STATUS);\n    var errors = gl.getShaderInfoLog(shader).trim();\n    if (status && errors === '') return ''; // --enable-privileged-webgl-extension\n    // console.log( '**' + type + '**', gl.getExtension( 'WEBGL_debug_shaders' ).getTranslatedShaderSource( shader ) );\n\n    return type.toUpperCase() + '\\n\\n' + errors + '\\n\\n' + addLineNumbers(gl.getShaderSource(shader));\n  }\n\n  function getTexelDecodingFunction(functionName, encoding) {\n    var components = getEncodingComponents(encoding);\n    return 'vec4 ' + functionName + '( vec4 value ) { return ' + components[0] + 'ToLinear' + components[1] + '; }';\n  }\n\n  function getTexelEncodingFunction(functionName, encoding) {\n    var components = getEncodingComponents(encoding);\n    return 'vec4 ' + functionName + '( vec4 value ) { return LinearTo' + components[0] + components[1] + '; }';\n  }\n\n  function getToneMappingFunction(functionName, toneMapping) {\n    var toneMappingName;\n\n    switch (toneMapping) {\n      case LinearToneMapping:\n        toneMappingName = 'Linear';\n        break;\n\n      case ReinhardToneMapping:\n        toneMappingName = 'Reinhard';\n        break;\n\n      case CineonToneMapping:\n        toneMappingName = 'OptimizedCineon';\n        break;\n\n      case ACESFilmicToneMapping:\n        toneMappingName = 'ACESFilmic';\n        break;\n\n      case CustomToneMapping:\n        toneMappingName = 'Custom';\n        break;\n\n      default:\n        console.warn('THREE.WebGLProgram: Unsupported toneMapping:', toneMapping);\n        toneMappingName = 'Linear';\n    }\n\n    return 'vec3 ' + functionName + '( vec3 color ) { return ' + toneMappingName + 'ToneMapping( color ); }';\n  }\n\n  function generateExtensions(parameters) {\n    var chunks = [parameters.extensionDerivatives || parameters.envMapCubeUV || parameters.bumpMap || parameters.tangentSpaceNormalMap || parameters.clearcoatNormalMap || parameters.flatShading || parameters.shaderID === 'physical' ? '#extension GL_OES_standard_derivatives : enable' : '', (parameters.extensionFragDepth || parameters.logarithmicDepthBuffer) && parameters.rendererExtensionFragDepth ? '#extension GL_EXT_frag_depth : enable' : '', parameters.extensionDrawBuffers && parameters.rendererExtensionDrawBuffers ? '#extension GL_EXT_draw_buffers : require' : '', (parameters.extensionShaderTextureLOD || parameters.envMap || parameters.transmission) && parameters.rendererExtensionShaderTextureLod ? '#extension GL_EXT_shader_texture_lod : enable' : ''];\n    return chunks.filter(filterEmptyLine).join('\\n');\n  }\n\n  function generateDefines(defines) {\n    var chunks = [];\n\n    for (var name in defines) {\n      var _value4 = defines[name];\n      if (_value4 === false) continue;\n      chunks.push('#define ' + name + ' ' + _value4);\n    }\n\n    return chunks.join('\\n');\n  }\n\n  function fetchAttributeLocations(gl, program) {\n    var attributes = {};\n    var n = gl.getProgramParameter(program, gl.ACTIVE_ATTRIBUTES);\n\n    for (var _i109 = 0; _i109 < n; _i109++) {\n      var info = gl.getActiveAttrib(program, _i109);\n      var name = info.name;\n      var locationSize = 1;\n      if (info.type === gl.FLOAT_MAT2) locationSize = 2;\n      if (info.type === gl.FLOAT_MAT3) locationSize = 3;\n      if (info.type === gl.FLOAT_MAT4) locationSize = 4; // console.log( 'THREE.WebGLProgram: ACTIVE VERTEX ATTRIBUTE:', name, i );\n\n      attributes[name] = {\n        type: info.type,\n        location: gl.getAttribLocation(program, name),\n        locationSize: locationSize\n      };\n    }\n\n    return attributes;\n  }\n\n  function filterEmptyLine(string) {\n    return string !== '';\n  }\n\n  function replaceLightNums(string, parameters) {\n    return string.replace(/NUM_DIR_LIGHTS/g, parameters.numDirLights).replace(/NUM_SPOT_LIGHTS/g, parameters.numSpotLights).replace(/NUM_RECT_AREA_LIGHTS/g, parameters.numRectAreaLights).replace(/NUM_POINT_LIGHTS/g, parameters.numPointLights).replace(/NUM_HEMI_LIGHTS/g, parameters.numHemiLights).replace(/NUM_DIR_LIGHT_SHADOWS/g, parameters.numDirLightShadows).replace(/NUM_SPOT_LIGHT_SHADOWS/g, parameters.numSpotLightShadows).replace(/NUM_POINT_LIGHT_SHADOWS/g, parameters.numPointLightShadows);\n  }\n\n  function replaceClippingPlaneNums(string, parameters) {\n    return string.replace(/NUM_CLIPPING_PLANES/g, parameters.numClippingPlanes).replace(/UNION_CLIPPING_PLANES/g, parameters.numClippingPlanes - parameters.numClipIntersection);\n  } // Resolve Includes\n\n\n  var includePattern = /^[ \\t]*#include +<([\\w\\d./]+)>/gm;\n\n  function resolveIncludes(string) {\n    return string.replace(includePattern, includeReplacer);\n  }\n\n  function includeReplacer(match, include) {\n    var string = ShaderChunk[include];\n\n    if (string === undefined) {\n      throw new Error('Can not resolve #include <' + include + '>');\n    }\n\n    return resolveIncludes(string);\n  } // Unroll Loops\n\n\n  var deprecatedUnrollLoopPattern = /#pragma unroll_loop[\\s]+?for \\( int i \\= (\\d+)\\; i < (\\d+)\\; i \\+\\+ \\) \\{([\\s\\S]+?)(?=\\})\\}/g;\n  var unrollLoopPattern = /#pragma unroll_loop_start\\s+for\\s*\\(\\s*int\\s+i\\s*=\\s*(\\d+)\\s*;\\s*i\\s*<\\s*(\\d+)\\s*;\\s*i\\s*\\+\\+\\s*\\)\\s*{([\\s\\S]+?)}\\s+#pragma unroll_loop_end/g;\n\n  function unrollLoops(string) {\n    return string.replace(unrollLoopPattern, loopReplacer).replace(deprecatedUnrollLoopPattern, deprecatedLoopReplacer);\n  }\n\n  function deprecatedLoopReplacer(match, start, end, snippet) {\n    console.warn('WebGLProgram: #pragma unroll_loop shader syntax is deprecated. Please use #pragma unroll_loop_start syntax instead.');\n    return loopReplacer(match, start, end, snippet);\n  }\n\n  function loopReplacer(match, start, end, snippet) {\n    var string = '';\n\n    for (var _i110 = parseInt(start); _i110 < parseInt(end); _i110++) {\n      string += snippet.replace(/\\[\\s*i\\s*\\]/g, '[ ' + _i110 + ' ]').replace(/UNROLLED_LOOP_INDEX/g, _i110);\n    }\n\n    return string;\n  } //\n\n\n  function generatePrecision(parameters) {\n    var precisionstring = 'precision ' + parameters.precision + ' float;\\nprecision ' + parameters.precision + ' int;';\n\n    if (parameters.precision === 'highp') {\n      precisionstring += '\\n#define HIGH_PRECISION';\n    } else if (parameters.precision === 'mediump') {\n      precisionstring += '\\n#define MEDIUM_PRECISION';\n    } else if (parameters.precision === 'lowp') {\n      precisionstring += '\\n#define LOW_PRECISION';\n    }\n\n    return precisionstring;\n  }\n\n  function generateShadowMapTypeDefine(parameters) {\n    var shadowMapTypeDefine = 'SHADOWMAP_TYPE_BASIC';\n\n    if (parameters.shadowMapType === PCFShadowMap) {\n      shadowMapTypeDefine = 'SHADOWMAP_TYPE_PCF';\n    } else if (parameters.shadowMapType === PCFSoftShadowMap) {\n      shadowMapTypeDefine = 'SHADOWMAP_TYPE_PCF_SOFT';\n    } else if (parameters.shadowMapType === VSMShadowMap) {\n      shadowMapTypeDefine = 'SHADOWMAP_TYPE_VSM';\n    }\n\n    return shadowMapTypeDefine;\n  }\n\n  function generateEnvMapTypeDefine(parameters) {\n    var envMapTypeDefine = 'ENVMAP_TYPE_CUBE';\n\n    if (parameters.envMap) {\n      switch (parameters.envMapMode) {\n        case CubeReflectionMapping:\n        case CubeRefractionMapping:\n          envMapTypeDefine = 'ENVMAP_TYPE_CUBE';\n          break;\n\n        case CubeUVReflectionMapping:\n        case CubeUVRefractionMapping:\n          envMapTypeDefine = 'ENVMAP_TYPE_CUBE_UV';\n          break;\n      }\n    }\n\n    return envMapTypeDefine;\n  }\n\n  function generateEnvMapModeDefine(parameters) {\n    var envMapModeDefine = 'ENVMAP_MODE_REFLECTION';\n\n    if (parameters.envMap) {\n      switch (parameters.envMapMode) {\n        case CubeRefractionMapping:\n        case CubeUVRefractionMapping:\n          envMapModeDefine = 'ENVMAP_MODE_REFRACTION';\n          break;\n      }\n    }\n\n    return envMapModeDefine;\n  }\n\n  function generateEnvMapBlendingDefine(parameters) {\n    var envMapBlendingDefine = 'ENVMAP_BLENDING_NONE';\n\n    if (parameters.envMap) {\n      switch (parameters.combine) {\n        case MultiplyOperation:\n          envMapBlendingDefine = 'ENVMAP_BLENDING_MULTIPLY';\n          break;\n\n        case MixOperation:\n          envMapBlendingDefine = 'ENVMAP_BLENDING_MIX';\n          break;\n\n        case AddOperation:\n          envMapBlendingDefine = 'ENVMAP_BLENDING_ADD';\n          break;\n      }\n    }\n\n    return envMapBlendingDefine;\n  }\n\n  function WebGLProgram(renderer, cacheKey, parameters, bindingStates) {\n    // TODO Send this event to Three.js DevTools\n    // console.log( 'WebGLProgram', cacheKey );\n    var gl = renderer.getContext();\n    var defines = parameters.defines;\n    var vertexShader = parameters.vertexShader;\n    var fragmentShader = parameters.fragmentShader;\n    var shadowMapTypeDefine = generateShadowMapTypeDefine(parameters);\n    var envMapTypeDefine = generateEnvMapTypeDefine(parameters);\n    var envMapModeDefine = generateEnvMapModeDefine(parameters);\n    var envMapBlendingDefine = generateEnvMapBlendingDefine(parameters);\n    var gammaFactorDefine = renderer.gammaFactor > 0 ? renderer.gammaFactor : 1.0;\n    var customExtensions = parameters.isWebGL2 ? '' : generateExtensions(parameters);\n    var customDefines = generateDefines(defines);\n    var program = gl.createProgram();\n    var prefixVertex, prefixFragment;\n    var versionString = parameters.glslVersion ? '#version ' + parameters.glslVersion + '\\n' : '';\n\n    if (parameters.isRawShaderMaterial) {\n      prefixVertex = [customDefines].filter(filterEmptyLine).join('\\n');\n\n      if (prefixVertex.length > 0) {\n        prefixVertex += '\\n';\n      }\n\n      prefixFragment = [customExtensions, customDefines].filter(filterEmptyLine).join('\\n');\n\n      if (prefixFragment.length > 0) {\n        prefixFragment += '\\n';\n      }\n    } else {\n      prefixVertex = [generatePrecision(parameters), '#define SHADER_NAME ' + parameters.shaderName, customDefines, parameters.instancing ? '#define USE_INSTANCING' : '', parameters.instancingColor ? '#define USE_INSTANCING_COLOR' : '', parameters.supportsVertexTextures ? '#define VERTEX_TEXTURES' : '', '#define GAMMA_FACTOR ' + gammaFactorDefine, '#define MAX_BONES ' + parameters.maxBones, parameters.useFog && parameters.fog ? '#define USE_FOG' : '', parameters.useFog && parameters.fogExp2 ? '#define FOG_EXP2' : '', parameters.map ? '#define USE_MAP' : '', parameters.envMap ? '#define USE_ENVMAP' : '', parameters.envMap ? '#define ' + envMapModeDefine : '', parameters.lightMap ? '#define USE_LIGHTMAP' : '', parameters.aoMap ? '#define USE_AOMAP' : '', parameters.emissiveMap ? '#define USE_EMISSIVEMAP' : '', parameters.bumpMap ? '#define USE_BUMPMAP' : '', parameters.normalMap ? '#define USE_NORMALMAP' : '', parameters.normalMap && parameters.objectSpaceNormalMap ? '#define OBJECTSPACE_NORMALMAP' : '', parameters.normalMap && parameters.tangentSpaceNormalMap ? '#define TANGENTSPACE_NORMALMAP' : '', parameters.clearcoatMap ? '#define USE_CLEARCOATMAP' : '', parameters.clearcoatRoughnessMap ? '#define USE_CLEARCOAT_ROUGHNESSMAP' : '', parameters.clearcoatNormalMap ? '#define USE_CLEARCOAT_NORMALMAP' : '', parameters.displacementMap && parameters.supportsVertexTextures ? '#define USE_DISPLACEMENTMAP' : '', parameters.specularMap ? '#define USE_SPECULARMAP' : '', parameters.specularIntensityMap ? '#define USE_SPECULARINTENSITYMAP' : '', parameters.specularColorMap ? '#define USE_SPECULARCOLORMAP' : '', parameters.roughnessMap ? '#define USE_ROUGHNESSMAP' : '', parameters.metalnessMap ? '#define USE_METALNESSMAP' : '', parameters.alphaMap ? '#define USE_ALPHAMAP' : '', parameters.transmission ? '#define USE_TRANSMISSION' : '', parameters.transmissionMap ? '#define USE_TRANSMISSIONMAP' : '', parameters.thicknessMap ? '#define USE_THICKNESSMAP' : '', parameters.sheenColorMap ? '#define USE_SHEENCOLORMAP' : '', parameters.sheenRoughnessMap ? '#define USE_SHEENROUGHNESSMAP' : '', parameters.vertexTangents ? '#define USE_TANGENT' : '', parameters.vertexColors ? '#define USE_COLOR' : '', parameters.vertexAlphas ? '#define USE_COLOR_ALPHA' : '', parameters.vertexUvs ? '#define USE_UV' : '', parameters.uvsVertexOnly ? '#define UVS_VERTEX_ONLY' : '', parameters.flatShading ? '#define FLAT_SHADED' : '', parameters.skinning ? '#define USE_SKINNING' : '', parameters.useVertexTexture ? '#define BONE_TEXTURE' : '', parameters.morphTargets ? '#define USE_MORPHTARGETS' : '', parameters.morphNormals && parameters.flatShading === false ? '#define USE_MORPHNORMALS' : '', parameters.morphTargets && parameters.isWebGL2 ? '#define MORPHTARGETS_TEXTURE' : '', parameters.morphTargets && parameters.isWebGL2 ? '#define MORPHTARGETS_COUNT ' + parameters.morphTargetsCount : '', parameters.doubleSided ? '#define DOUBLE_SIDED' : '', parameters.flipSided ? '#define FLIP_SIDED' : '', parameters.shadowMapEnabled ? '#define USE_SHADOWMAP' : '', parameters.shadowMapEnabled ? '#define ' + shadowMapTypeDefine : '', parameters.sizeAttenuation ? '#define USE_SIZEATTENUATION' : '', parameters.logarithmicDepthBuffer ? '#define USE_LOGDEPTHBUF' : '', parameters.logarithmicDepthBuffer && parameters.rendererExtensionFragDepth ? '#define USE_LOGDEPTHBUF_EXT' : '', 'uniform mat4 modelMatrix;', 'uniform mat4 modelViewMatrix;', 'uniform mat4 projectionMatrix;', 'uniform mat4 viewMatrix;', 'uniform mat3 normalMatrix;', 'uniform vec3 cameraPosition;', 'uniform bool isOrthographic;', '#ifdef USE_INSTANCING', '\tattribute mat4 instanceMatrix;', '#endif', '#ifdef USE_INSTANCING_COLOR', '\tattribute vec3 instanceColor;', '#endif', 'attribute vec3 position;', 'attribute vec3 normal;', 'attribute vec2 uv;', '#ifdef USE_TANGENT', '\tattribute vec4 tangent;', '#endif', '#if defined( USE_COLOR_ALPHA )', '\tattribute vec4 color;', '#elif defined( USE_COLOR )', '\tattribute vec3 color;', '#endif', '#if ( defined( USE_MORPHTARGETS ) && ! defined( MORPHTARGETS_TEXTURE ) )', '\tattribute vec3 morphTarget0;', '\tattribute vec3 morphTarget1;', '\tattribute vec3 morphTarget2;', '\tattribute vec3 morphTarget3;', '\t#ifdef USE_MORPHNORMALS', '\t\tattribute vec3 morphNormal0;', '\t\tattribute vec3 morphNormal1;', '\t\tattribute vec3 morphNormal2;', '\t\tattribute vec3 morphNormal3;', '\t#else', '\t\tattribute vec3 morphTarget4;', '\t\tattribute vec3 morphTarget5;', '\t\tattribute vec3 morphTarget6;', '\t\tattribute vec3 morphTarget7;', '\t#endif', '#endif', '#ifdef USE_SKINNING', '\tattribute vec4 skinIndex;', '\tattribute vec4 skinWeight;', '#endif', '\\n'].filter(filterEmptyLine).join('\\n');\n      prefixFragment = [customExtensions, generatePrecision(parameters), '#define SHADER_NAME ' + parameters.shaderName, customDefines, '#define GAMMA_FACTOR ' + gammaFactorDefine, parameters.useFog && parameters.fog ? '#define USE_FOG' : '', parameters.useFog && parameters.fogExp2 ? '#define FOG_EXP2' : '', parameters.map ? '#define USE_MAP' : '', parameters.matcap ? '#define USE_MATCAP' : '', parameters.envMap ? '#define USE_ENVMAP' : '', parameters.envMap ? '#define ' + envMapTypeDefine : '', parameters.envMap ? '#define ' + envMapModeDefine : '', parameters.envMap ? '#define ' + envMapBlendingDefine : '', parameters.lightMap ? '#define USE_LIGHTMAP' : '', parameters.aoMap ? '#define USE_AOMAP' : '', parameters.emissiveMap ? '#define USE_EMISSIVEMAP' : '', parameters.bumpMap ? '#define USE_BUMPMAP' : '', parameters.normalMap ? '#define USE_NORMALMAP' : '', parameters.normalMap && parameters.objectSpaceNormalMap ? '#define OBJECTSPACE_NORMALMAP' : '', parameters.normalMap && parameters.tangentSpaceNormalMap ? '#define TANGENTSPACE_NORMALMAP' : '', parameters.clearcoat ? '#define USE_CLEARCOAT' : '', parameters.clearcoatMap ? '#define USE_CLEARCOATMAP' : '', parameters.clearcoatRoughnessMap ? '#define USE_CLEARCOAT_ROUGHNESSMAP' : '', parameters.clearcoatNormalMap ? '#define USE_CLEARCOAT_NORMALMAP' : '', parameters.specularMap ? '#define USE_SPECULARMAP' : '', parameters.specularIntensityMap ? '#define USE_SPECULARINTENSITYMAP' : '', parameters.specularColorMap ? '#define USE_SPECULARCOLORMAP' : '', parameters.roughnessMap ? '#define USE_ROUGHNESSMAP' : '', parameters.metalnessMap ? '#define USE_METALNESSMAP' : '', parameters.alphaMap ? '#define USE_ALPHAMAP' : '', parameters.alphaTest ? '#define USE_ALPHATEST' : '', parameters.sheen ? '#define USE_SHEEN' : '', parameters.sheenColorMap ? '#define USE_SHEENCOLORMAP' : '', parameters.sheenRoughnessMap ? '#define USE_SHEENROUGHNESSMAP' : '', parameters.transmission ? '#define USE_TRANSMISSION' : '', parameters.transmissionMap ? '#define USE_TRANSMISSIONMAP' : '', parameters.thicknessMap ? '#define USE_THICKNESSMAP' : '', parameters.vertexTangents ? '#define USE_TANGENT' : '', parameters.vertexColors || parameters.instancingColor ? '#define USE_COLOR' : '', parameters.vertexAlphas ? '#define USE_COLOR_ALPHA' : '', parameters.vertexUvs ? '#define USE_UV' : '', parameters.uvsVertexOnly ? '#define UVS_VERTEX_ONLY' : '', parameters.gradientMap ? '#define USE_GRADIENTMAP' : '', parameters.flatShading ? '#define FLAT_SHADED' : '', parameters.doubleSided ? '#define DOUBLE_SIDED' : '', parameters.flipSided ? '#define FLIP_SIDED' : '', parameters.shadowMapEnabled ? '#define USE_SHADOWMAP' : '', parameters.shadowMapEnabled ? '#define ' + shadowMapTypeDefine : '', parameters.premultipliedAlpha ? '#define PREMULTIPLIED_ALPHA' : '', parameters.physicallyCorrectLights ? '#define PHYSICALLY_CORRECT_LIGHTS' : '', parameters.logarithmicDepthBuffer ? '#define USE_LOGDEPTHBUF' : '', parameters.logarithmicDepthBuffer && parameters.rendererExtensionFragDepth ? '#define USE_LOGDEPTHBUF_EXT' : '', (parameters.extensionShaderTextureLOD || parameters.envMap) && parameters.rendererExtensionShaderTextureLod ? '#define TEXTURE_LOD_EXT' : '', 'uniform mat4 viewMatrix;', 'uniform vec3 cameraPosition;', 'uniform bool isOrthographic;', parameters.toneMapping !== NoToneMapping ? '#define TONE_MAPPING' : '', parameters.toneMapping !== NoToneMapping ? ShaderChunk['tonemapping_pars_fragment'] : '', // this code is required here because it is used by the toneMapping() function defined below\n      parameters.toneMapping !== NoToneMapping ? getToneMappingFunction('toneMapping', parameters.toneMapping) : '', parameters.dithering ? '#define DITHERING' : '', parameters.format === RGBFormat ? '#define OPAQUE' : '', ShaderChunk['encodings_pars_fragment'], // this code is required here because it is used by the various encoding/decoding function defined below\n      parameters.map ? getTexelDecodingFunction('mapTexelToLinear', parameters.mapEncoding) : '', parameters.matcap ? getTexelDecodingFunction('matcapTexelToLinear', parameters.matcapEncoding) : '', parameters.envMap ? getTexelDecodingFunction('envMapTexelToLinear', parameters.envMapEncoding) : '', parameters.emissiveMap ? getTexelDecodingFunction('emissiveMapTexelToLinear', parameters.emissiveMapEncoding) : '', parameters.specularColorMap ? getTexelDecodingFunction('specularColorMapTexelToLinear', parameters.specularColorMapEncoding) : '', parameters.sheenColorMap ? getTexelDecodingFunction('sheenColorMapTexelToLinear', parameters.sheenColorMapEncoding) : '', parameters.lightMap ? getTexelDecodingFunction('lightMapTexelToLinear', parameters.lightMapEncoding) : '', getTexelEncodingFunction('linearToOutputTexel', parameters.outputEncoding), parameters.depthPacking ? '#define DEPTH_PACKING ' + parameters.depthPacking : '', '\\n'].filter(filterEmptyLine).join('\\n');\n    }\n\n    vertexShader = resolveIncludes(vertexShader);\n    vertexShader = replaceLightNums(vertexShader, parameters);\n    vertexShader = replaceClippingPlaneNums(vertexShader, parameters);\n    fragmentShader = resolveIncludes(fragmentShader);\n    fragmentShader = replaceLightNums(fragmentShader, parameters);\n    fragmentShader = replaceClippingPlaneNums(fragmentShader, parameters);\n    vertexShader = unrollLoops(vertexShader);\n    fragmentShader = unrollLoops(fragmentShader);\n\n    if (parameters.isWebGL2 && parameters.isRawShaderMaterial !== true) {\n      // GLSL 3.0 conversion for built-in materials and ShaderMaterial\n      versionString = '#version 300 es\\n';\n      prefixVertex = ['precision mediump sampler2DArray;', '#define attribute in', '#define varying out', '#define texture2D texture'].join('\\n') + '\\n' + prefixVertex;\n      prefixFragment = ['#define varying in', parameters.glslVersion === GLSL3 ? '' : 'out highp vec4 pc_fragColor;', parameters.glslVersion === GLSL3 ? '' : '#define gl_FragColor pc_fragColor', '#define gl_FragDepthEXT gl_FragDepth', '#define texture2D texture', '#define textureCube texture', '#define texture2DProj textureProj', '#define texture2DLodEXT textureLod', '#define texture2DProjLodEXT textureProjLod', '#define textureCubeLodEXT textureLod', '#define texture2DGradEXT textureGrad', '#define texture2DProjGradEXT textureProjGrad', '#define textureCubeGradEXT textureGrad'].join('\\n') + '\\n' + prefixFragment;\n    }\n\n    var vertexGlsl = versionString + prefixVertex + vertexShader;\n    var fragmentGlsl = versionString + prefixFragment + fragmentShader; // console.log( '*VERTEX*', vertexGlsl );\n    // console.log( '*FRAGMENT*', fragmentGlsl );\n\n    var glVertexShader = WebGLShader(gl, gl.VERTEX_SHADER, vertexGlsl);\n    var glFragmentShader = WebGLShader(gl, gl.FRAGMENT_SHADER, fragmentGlsl);\n    gl.attachShader(program, glVertexShader);\n    gl.attachShader(program, glFragmentShader); // Force a particular attribute to index 0.\n\n    if (parameters.index0AttributeName !== undefined) {\n      gl.bindAttribLocation(program, 0, parameters.index0AttributeName);\n    } else if (parameters.morphTargets === true) {\n      // programs with morphTargets displace position out of attribute 0\n      gl.bindAttribLocation(program, 0, 'position');\n    }\n\n    gl.linkProgram(program); // check for link errors\n\n    if (renderer.debug.checkShaderErrors) {\n      var programLog = gl.getProgramInfoLog(program).trim();\n      var vertexLog = gl.getShaderInfoLog(glVertexShader).trim();\n      var fragmentLog = gl.getShaderInfoLog(glFragmentShader).trim();\n      var runnable = true;\n      var haveDiagnostics = true;\n\n      if (gl.getProgramParameter(program, gl.LINK_STATUS) === false) {\n        runnable = false;\n        var vertexErrors = getShaderErrors(gl, glVertexShader, 'vertex');\n        var fragmentErrors = getShaderErrors(gl, glFragmentShader, 'fragment');\n        console.error('THREE.WebGLProgram: Shader Error ' + gl.getError() + ' - ' + 'VALIDATE_STATUS ' + gl.getProgramParameter(program, gl.VALIDATE_STATUS) + '\\n\\n' + 'Program Info Log: ' + programLog + '\\n' + vertexErrors + '\\n' + fragmentErrors);\n      } else if (programLog !== '') {\n        console.warn('THREE.WebGLProgram: Program Info Log:', programLog);\n      } else if (vertexLog === '' || fragmentLog === '') {\n        haveDiagnostics = false;\n      }\n\n      if (haveDiagnostics) {\n        this.diagnostics = {\n          runnable: runnable,\n          programLog: programLog,\n          vertexShader: {\n            log: vertexLog,\n            prefix: prefixVertex\n          },\n          fragmentShader: {\n            log: fragmentLog,\n            prefix: prefixFragment\n          }\n        };\n      }\n    } // Clean up\n    // Crashes in iOS9 and iOS10. #18402\n    // gl.detachShader( program, glVertexShader );\n    // gl.detachShader( program, glFragmentShader );\n\n\n    gl.deleteShader(glVertexShader);\n    gl.deleteShader(glFragmentShader); // set up caching for uniform locations\n\n    var cachedUniforms;\n\n    this.getUniforms = function () {\n      if (cachedUniforms === undefined) {\n        cachedUniforms = new WebGLUniforms(gl, program);\n      }\n\n      return cachedUniforms;\n    }; // set up caching for attribute locations\n\n\n    var cachedAttributes;\n\n    this.getAttributes = function () {\n      if (cachedAttributes === undefined) {\n        cachedAttributes = fetchAttributeLocations(gl, program);\n      }\n\n      return cachedAttributes;\n    }; // free resource\n\n\n    this.destroy = function () {\n      bindingStates.releaseStatesOfProgram(this);\n      gl.deleteProgram(program);\n      this.program = undefined;\n    }; //\n\n\n    this.name = parameters.shaderName;\n    this.id = programIdCount++;\n    this.cacheKey = cacheKey;\n    this.usedTimes = 1;\n    this.program = program;\n    this.vertexShader = glVertexShader;\n    this.fragmentShader = glFragmentShader;\n    return this;\n  }\n\n  function WebGLPrograms(renderer, cubemaps, cubeuvmaps, extensions, capabilities, bindingStates, clipping) {\n    var programs = [];\n    var isWebGL2 = capabilities.isWebGL2;\n    var logarithmicDepthBuffer = capabilities.logarithmicDepthBuffer;\n    var floatVertexTextures = capabilities.floatVertexTextures;\n    var maxVertexUniforms = capabilities.maxVertexUniforms;\n    var vertexTextures = capabilities.vertexTextures;\n    var precision = capabilities.precision;\n    var shaderIDs = {\n      MeshDepthMaterial: 'depth',\n      MeshDistanceMaterial: 'distanceRGBA',\n      MeshNormalMaterial: 'normal',\n      MeshBasicMaterial: 'basic',\n      MeshLambertMaterial: 'lambert',\n      MeshPhongMaterial: 'phong',\n      MeshToonMaterial: 'toon',\n      MeshStandardMaterial: 'physical',\n      MeshPhysicalMaterial: 'physical',\n      MeshMatcapMaterial: 'matcap',\n      LineBasicMaterial: 'basic',\n      LineDashedMaterial: 'dashed',\n      PointsMaterial: 'points',\n      ShadowMaterial: 'shadow',\n      SpriteMaterial: 'sprite'\n    };\n    var parameterNames = ['precision', 'isWebGL2', 'supportsVertexTextures', 'outputEncoding', 'instancing', 'instancingColor', 'map', 'mapEncoding', 'matcap', 'matcapEncoding', 'envMap', 'envMapMode', 'envMapEncoding', 'envMapCubeUV', 'lightMap', 'lightMapEncoding', 'aoMap', 'emissiveMap', 'emissiveMapEncoding', 'bumpMap', 'normalMap', 'objectSpaceNormalMap', 'tangentSpaceNormalMap', 'clearcoat', 'clearcoatMap', 'clearcoatRoughnessMap', 'clearcoatNormalMap', 'displacementMap', 'specularMap',, 'roughnessMap', 'metalnessMap', 'gradientMap', 'alphaMap', 'alphaTest', 'combine', 'vertexColors', 'vertexAlphas', 'vertexTangents', 'vertexUvs', 'uvsVertexOnly', 'fog', 'useFog', 'fogExp2', 'flatShading', 'sizeAttenuation', 'logarithmicDepthBuffer', 'skinning', 'maxBones', 'useVertexTexture', 'morphTargets', 'morphNormals', 'morphTargetsCount', 'premultipliedAlpha', 'numDirLights', 'numPointLights', 'numSpotLights', 'numHemiLights', 'numRectAreaLights', 'numDirLightShadows', 'numPointLightShadows', 'numSpotLightShadows', 'shadowMapEnabled', 'shadowMapType', 'toneMapping', 'physicallyCorrectLights', 'doubleSided', 'flipSided', 'numClippingPlanes', 'numClipIntersection', 'depthPacking', 'dithering', 'format', 'specularIntensityMap', 'specularColorMap', 'specularColorMapEncoding', 'transmission', 'transmissionMap', 'thicknessMap', 'sheen', 'sheenColorMap', 'sheenColorMapEncoding', 'sheenRoughnessMap'];\n\n    function getMaxBones(object) {\n      var skeleton = object.skeleton;\n      var bones = skeleton.bones;\n\n      if (floatVertexTextures) {\n        return 1024;\n      } else {\n        // default for when object is not specified\n        // ( for example when prebuilding shader to be used with multiple objects )\n        //\n        //\t- leave some extra space for other uniforms\n        //\t- limit here is ANGLE's 254 max uniform vectors\n        //\t\t(up to 54 should be safe)\n        var nVertexUniforms = maxVertexUniforms;\n        var nVertexMatrices = Math.floor((nVertexUniforms - 20) / 4);\n        var maxBones = Math.min(nVertexMatrices, bones.length);\n\n        if (maxBones < bones.length) {\n          console.warn('THREE.WebGLRenderer: Skeleton has ' + bones.length + ' bones. This GPU supports ' + maxBones + '.');\n          return 0;\n        }\n\n        return maxBones;\n      }\n    }\n\n    function getTextureEncodingFromMap(map) {\n      var encoding;\n\n      if (map && map.isTexture) {\n        encoding = map.encoding;\n      } else if (map && map.isWebGLRenderTarget) {\n        console.warn('THREE.WebGLPrograms.getTextureEncodingFromMap: don\\'t use render targets as textures. Use their .texture property instead.');\n        encoding = map.texture.encoding;\n      } else {\n        encoding = LinearEncoding;\n      }\n\n      if (isWebGL2 && map && map.isTexture && map.format === RGBAFormat && map.type === UnsignedByteType && map.encoding === sRGBEncoding) {\n        encoding = LinearEncoding; // disable inline decode for sRGB textures in WebGL 2\n      }\n\n      return encoding;\n    }\n\n    function getParameters(material, lights, shadows, scene, object) {\n      var fog = scene.fog;\n      var environment = material.isMeshStandardMaterial ? scene.environment : null;\n      var envMap = (material.isMeshStandardMaterial ? cubeuvmaps : cubemaps).get(material.envMap || environment);\n      var shaderID = shaderIDs[material.type]; // heuristics to create shader parameters according to lights in the scene\n      // (not to blow over maxLights budget)\n\n      var maxBones = object.isSkinnedMesh ? getMaxBones(object) : 0;\n\n      if (material.precision !== null) {\n        precision = capabilities.getMaxPrecision(material.precision);\n\n        if (precision !== material.precision) {\n          console.warn('THREE.WebGLProgram.getParameters:', material.precision, 'not supported, using', precision, 'instead.');\n        }\n      }\n\n      var vertexShader, fragmentShader;\n\n      if (shaderID) {\n        var shader = ShaderLib[shaderID];\n        vertexShader = shader.vertexShader;\n        fragmentShader = shader.fragmentShader;\n      } else {\n        vertexShader = material.vertexShader;\n        fragmentShader = material.fragmentShader;\n      }\n\n      var currentRenderTarget = renderer.getRenderTarget();\n      var useAlphaTest = material.alphaTest > 0;\n      var useClearcoat = material.clearcoat > 0;\n      var parameters = {\n        isWebGL2: isWebGL2,\n        shaderID: shaderID,\n        shaderName: material.type,\n        vertexShader: vertexShader,\n        fragmentShader: fragmentShader,\n        defines: material.defines,\n        isRawShaderMaterial: material.isRawShaderMaterial === true,\n        glslVersion: material.glslVersion,\n        precision: precision,\n        instancing: object.isInstancedMesh === true,\n        instancingColor: object.isInstancedMesh === true && object.instanceColor !== null,\n        supportsVertexTextures: vertexTextures,\n        outputEncoding: currentRenderTarget !== null ? getTextureEncodingFromMap(currentRenderTarget.texture) : renderer.outputEncoding,\n        map: !!material.map,\n        mapEncoding: getTextureEncodingFromMap(material.map),\n        matcap: !!material.matcap,\n        matcapEncoding: getTextureEncodingFromMap(material.matcap),\n        envMap: !!envMap,\n        envMapMode: envMap && envMap.mapping,\n        envMapEncoding: getTextureEncodingFromMap(envMap),\n        envMapCubeUV: !!envMap && (envMap.mapping === CubeUVReflectionMapping || envMap.mapping === CubeUVRefractionMapping),\n        lightMap: !!material.lightMap,\n        lightMapEncoding: getTextureEncodingFromMap(material.lightMap),\n        aoMap: !!material.aoMap,\n        emissiveMap: !!material.emissiveMap,\n        emissiveMapEncoding: getTextureEncodingFromMap(material.emissiveMap),\n        bumpMap: !!material.bumpMap,\n        normalMap: !!material.normalMap,\n        objectSpaceNormalMap: material.normalMapType === ObjectSpaceNormalMap,\n        tangentSpaceNormalMap: material.normalMapType === TangentSpaceNormalMap,\n        clearcoat: useClearcoat,\n        clearcoatMap: useClearcoat && !!material.clearcoatMap,\n        clearcoatRoughnessMap: useClearcoat && !!material.clearcoatRoughnessMap,\n        clearcoatNormalMap: useClearcoat && !!material.clearcoatNormalMap,\n        displacementMap: !!material.displacementMap,\n        roughnessMap: !!material.roughnessMap,\n        metalnessMap: !!material.metalnessMap,\n        specularMap: !!material.specularMap,\n        specularIntensityMap: !!material.specularIntensityMap,\n        specularColorMap: !!material.specularColorMap,\n        specularColorMapEncoding: getTextureEncodingFromMap(material.specularColorMap),\n        alphaMap: !!material.alphaMap,\n        alphaTest: useAlphaTest,\n        gradientMap: !!material.gradientMap,\n        sheen: material.sheen > 0,\n        sheenColorMap: !!material.sheenColorMap,\n        sheenColorMapEncoding: getTextureEncodingFromMap(material.sheenColorMap),\n        sheenRoughnessMap: !!material.sheenRoughnessMap,\n        transmission: material.transmission > 0,\n        transmissionMap: !!material.transmissionMap,\n        thicknessMap: !!material.thicknessMap,\n        combine: material.combine,\n        vertexTangents: !!material.normalMap && !!object.geometry && !!object.geometry.attributes.tangent,\n        vertexColors: material.vertexColors,\n        vertexAlphas: material.vertexColors === true && !!object.geometry && !!object.geometry.attributes.color && object.geometry.attributes.color.itemSize === 4,\n        vertexUvs: !!material.map || !!material.bumpMap || !!material.normalMap || !!material.specularMap || !!material.alphaMap || !!material.emissiveMap || !!material.roughnessMap || !!material.metalnessMap || !!material.clearcoatMap || !!material.clearcoatRoughnessMap || !!material.clearcoatNormalMap || !!material.displacementMap || !!material.transmissionMap || !!material.thicknessMap || !!material.specularIntensityMap || !!material.specularColorMap || !!material.sheenColorMap || material.sheenRoughnessMap,\n        uvsVertexOnly: !(!!material.map || !!material.bumpMap || !!material.normalMap || !!material.specularMap || !!material.alphaMap || !!material.emissiveMap || !!material.roughnessMap || !!material.metalnessMap || !!material.clearcoatNormalMap || material.transmission > 0 || !!material.transmissionMap || !!material.thicknessMap || !!material.specularIntensityMap || !!material.specularColorMap || !!material.sheen > 0 || !!material.sheenColorMap || !!material.sheenRoughnessMap) && !!material.displacementMap,\n        fog: !!fog,\n        useFog: material.fog,\n        fogExp2: fog && fog.isFogExp2,\n        flatShading: !!material.flatShading,\n        sizeAttenuation: material.sizeAttenuation,\n        logarithmicDepthBuffer: logarithmicDepthBuffer,\n        skinning: object.isSkinnedMesh === true && maxBones > 0,\n        maxBones: maxBones,\n        useVertexTexture: floatVertexTextures,\n        morphTargets: !!object.geometry && !!object.geometry.morphAttributes.position,\n        morphNormals: !!object.geometry && !!object.geometry.morphAttributes.normal,\n        morphTargetsCount: !!object.geometry && !!object.geometry.morphAttributes.position ? object.geometry.morphAttributes.position.length : 0,\n        numDirLights: lights.directional.length,\n        numPointLights: lights.point.length,\n        numSpotLights: lights.spot.length,\n        numRectAreaLights: lights.rectArea.length,\n        numHemiLights: lights.hemi.length,\n        numDirLightShadows: lights.directionalShadowMap.length,\n        numPointLightShadows: lights.pointShadowMap.length,\n        numSpotLightShadows: lights.spotShadowMap.length,\n        numClippingPlanes: clipping.numPlanes,\n        numClipIntersection: clipping.numIntersection,\n        format: material.format,\n        dithering: material.dithering,\n        shadowMapEnabled: renderer.shadowMap.enabled && shadows.length > 0,\n        shadowMapType: renderer.shadowMap.type,\n        toneMapping: material.toneMapped ? renderer.toneMapping : NoToneMapping,\n        physicallyCorrectLights: renderer.physicallyCorrectLights,\n        premultipliedAlpha: material.premultipliedAlpha,\n        doubleSided: material.side === DoubleSide,\n        flipSided: material.side === BackSide,\n        depthPacking: material.depthPacking !== undefined ? material.depthPacking : false,\n        index0AttributeName: material.index0AttributeName,\n        extensionDerivatives: material.extensions && material.extensions.derivatives,\n        extensionFragDepth: material.extensions && material.extensions.fragDepth,\n        extensionDrawBuffers: material.extensions && material.extensions.drawBuffers,\n        extensionShaderTextureLOD: material.extensions && material.extensions.shaderTextureLOD,\n        rendererExtensionFragDepth: isWebGL2 || extensions.has('EXT_frag_depth'),\n        rendererExtensionDrawBuffers: isWebGL2 || extensions.has('WEBGL_draw_buffers'),\n        rendererExtensionShaderTextureLod: isWebGL2 || extensions.has('EXT_shader_texture_lod'),\n        customProgramCacheKey: material.customProgramCacheKey()\n      };\n      return parameters;\n    }\n\n    function getProgramCacheKey(parameters) {\n      var array = [];\n\n      if (parameters.shaderID) {\n        array.push(parameters.shaderID);\n      } else {\n        array.push(hashString(parameters.fragmentShader));\n        array.push(hashString(parameters.vertexShader));\n      }\n\n      if (parameters.defines !== undefined) {\n        for (var name in parameters.defines) {\n          array.push(name);\n          array.push(parameters.defines[name]);\n        }\n      }\n\n      if (parameters.isRawShaderMaterial === false) {\n        for (var _i111 = 0; _i111 < parameterNames.length; _i111++) {\n          array.push(parameters[parameterNames[_i111]]);\n        }\n\n        array.push(renderer.outputEncoding);\n        array.push(renderer.gammaFactor);\n      }\n\n      array.push(parameters.customProgramCacheKey);\n      return array.join();\n    }\n\n    function getUniforms(material) {\n      var shaderID = shaderIDs[material.type];\n      var uniforms;\n\n      if (shaderID) {\n        var shader = ShaderLib[shaderID];\n        uniforms = UniformsUtils.clone(shader.uniforms);\n      } else {\n        uniforms = material.uniforms;\n      }\n\n      return uniforms;\n    }\n\n    function acquireProgram(parameters, cacheKey) {\n      var program; // Check if code has been already compiled\n\n      for (var p = 0, pl = programs.length; p < pl; p++) {\n        var preexistingProgram = programs[p];\n\n        if (preexistingProgram.cacheKey === cacheKey) {\n          program = preexistingProgram;\n          ++program.usedTimes;\n          break;\n        }\n      }\n\n      if (program === undefined) {\n        program = new WebGLProgram(renderer, cacheKey, parameters, bindingStates);\n        programs.push(program);\n      }\n\n      return program;\n    }\n\n    function releaseProgram(program) {\n      if (--program.usedTimes === 0) {\n        // Remove from unordered set\n        var _i112 = programs.indexOf(program);\n\n        programs[_i112] = programs[programs.length - 1];\n        programs.pop(); // Free WebGL resources\n\n        program.destroy();\n      }\n    }\n\n    return {\n      getParameters: getParameters,\n      getProgramCacheKey: getProgramCacheKey,\n      getUniforms: getUniforms,\n      acquireProgram: acquireProgram,\n      releaseProgram: releaseProgram,\n      // Exposed for resource monitoring & error feedback via renderer.info:\n      programs: programs\n    };\n  }\n\n  function WebGLProperties() {\n    var properties = new WeakMap();\n\n    function get(object) {\n      var map = properties.get(object);\n\n      if (map === undefined) {\n        map = {};\n        properties.set(object, map);\n      }\n\n      return map;\n    }\n\n    function remove(object) {\n      properties.delete(object);\n    }\n\n    function update(object, key, value) {\n      properties.get(object)[key] = value;\n    }\n\n    function dispose() {\n      properties = new WeakMap();\n    }\n\n    return {\n      get: get,\n      remove: remove,\n      update: update,\n      dispose: dispose\n    };\n  }\n\n  function painterSortStable(a, b) {\n    if (a.groupOrder !== b.groupOrder) {\n      return a.groupOrder - b.groupOrder;\n    } else if (a.renderOrder !== b.renderOrder) {\n      return a.renderOrder - b.renderOrder;\n    } else if (a.program !== b.program) {\n      return a.program.id - b.program.id;\n    } else if (a.material.id !== b.material.id) {\n      return a.material.id - b.material.id;\n    } else if (a.z !== b.z) {\n      return a.z - b.z;\n    } else {\n      return a.id - b.id;\n    }\n  }\n\n  function reversePainterSortStable(a, b) {\n    if (a.groupOrder !== b.groupOrder) {\n      return a.groupOrder - b.groupOrder;\n    } else if (a.renderOrder !== b.renderOrder) {\n      return a.renderOrder - b.renderOrder;\n    } else if (a.z !== b.z) {\n      return b.z - a.z;\n    } else {\n      return a.id - b.id;\n    }\n  }\n\n  function WebGLRenderList(properties) {\n    var renderItems = [];\n    var renderItemsIndex = 0;\n    var opaque = [];\n    var transmissive = [];\n    var transparent = [];\n    var defaultProgram = {\n      id: -1\n    };\n\n    function init() {\n      renderItemsIndex = 0;\n      opaque.length = 0;\n      transmissive.length = 0;\n      transparent.length = 0;\n    }\n\n    function getNextRenderItem(object, geometry, material, groupOrder, z, group) {\n      var renderItem = renderItems[renderItemsIndex];\n      var materialProperties = properties.get(material);\n\n      if (renderItem === undefined) {\n        renderItem = {\n          id: object.id,\n          object: object,\n          geometry: geometry,\n          material: material,\n          program: materialProperties.program || defaultProgram,\n          groupOrder: groupOrder,\n          renderOrder: object.renderOrder,\n          z: z,\n          group: group\n        };\n        renderItems[renderItemsIndex] = renderItem;\n      } else {\n        renderItem.id = object.id;\n        renderItem.object = object;\n        renderItem.geometry = geometry;\n        renderItem.material = material;\n        renderItem.program = materialProperties.program || defaultProgram;\n        renderItem.groupOrder = groupOrder;\n        renderItem.renderOrder = object.renderOrder;\n        renderItem.z = z;\n        renderItem.group = group;\n      }\n\n      renderItemsIndex++;\n      return renderItem;\n    }\n\n    function push(object, geometry, material, groupOrder, z, group) {\n      var renderItem = getNextRenderItem(object, geometry, material, groupOrder, z, group);\n\n      if (material.transmission > 0.0) {\n        transmissive.push(renderItem);\n      } else if (material.transparent === true) {\n        transparent.push(renderItem);\n      } else {\n        opaque.push(renderItem);\n      }\n    }\n\n    function unshift(object, geometry, material, groupOrder, z, group) {\n      var renderItem = getNextRenderItem(object, geometry, material, groupOrder, z, group);\n\n      if (material.transmission > 0.0) {\n        transmissive.unshift(renderItem);\n      } else if (material.transparent === true) {\n        transparent.unshift(renderItem);\n      } else {\n        opaque.unshift(renderItem);\n      }\n    }\n\n    function sort(customOpaqueSort, customTransparentSort) {\n      if (opaque.length > 1) opaque.sort(customOpaqueSort || painterSortStable);\n      if (transmissive.length > 1) transmissive.sort(customTransparentSort || reversePainterSortStable);\n      if (transparent.length > 1) transparent.sort(customTransparentSort || reversePainterSortStable);\n    }\n\n    function finish() {\n      // Clear references from inactive renderItems in the list\n      for (var _i113 = renderItemsIndex, il = renderItems.length; _i113 < il; _i113++) {\n        var renderItem = renderItems[_i113];\n        if (renderItem.id === null) break;\n        renderItem.id = null;\n        renderItem.object = null;\n        renderItem.geometry = null;\n        renderItem.material = null;\n        renderItem.program = null;\n        renderItem.group = null;\n      }\n    }\n\n    return {\n      opaque: opaque,\n      transmissive: transmissive,\n      transparent: transparent,\n      init: init,\n      push: push,\n      unshift: unshift,\n      finish: finish,\n      sort: sort\n    };\n  }\n\n  function WebGLRenderLists(properties) {\n    var lists = new WeakMap();\n\n    function get(scene, renderCallDepth) {\n      var list;\n\n      if (lists.has(scene) === false) {\n        list = new WebGLRenderList(properties);\n        lists.set(scene, [list]);\n      } else {\n        if (renderCallDepth >= lists.get(scene).length) {\n          list = new WebGLRenderList(properties);\n          lists.get(scene).push(list);\n        } else {\n          list = lists.get(scene)[renderCallDepth];\n        }\n      }\n\n      return list;\n    }\n\n    function dispose() {\n      lists = new WeakMap();\n    }\n\n    return {\n      get: get,\n      dispose: dispose\n    };\n  }\n\n  function UniformsCache() {\n    var lights = {};\n    return {\n      get: function get(light) {\n        if (lights[light.id] !== undefined) {\n          return lights[light.id];\n        }\n\n        var uniforms;\n\n        switch (light.type) {\n          case 'DirectionalLight':\n            uniforms = {\n              direction: new Vector3(),\n              color: new Color()\n            };\n            break;\n\n          case 'SpotLight':\n            uniforms = {\n              position: new Vector3(),\n              direction: new Vector3(),\n              color: new Color(),\n              distance: 0,\n              coneCos: 0,\n              penumbraCos: 0,\n              decay: 0\n            };\n            break;\n\n          case 'PointLight':\n            uniforms = {\n              position: new Vector3(),\n              color: new Color(),\n              distance: 0,\n              decay: 0\n            };\n            break;\n\n          case 'HemisphereLight':\n            uniforms = {\n              direction: new Vector3(),\n              skyColor: new Color(),\n              groundColor: new Color()\n            };\n            break;\n\n          case 'RectAreaLight':\n            uniforms = {\n              color: new Color(),\n              position: new Vector3(),\n              halfWidth: new Vector3(),\n              halfHeight: new Vector3()\n            };\n            break;\n        }\n\n        lights[light.id] = uniforms;\n        return uniforms;\n      }\n    };\n  }\n\n  function ShadowUniformsCache() {\n    var lights = {};\n    return {\n      get: function get(light) {\n        if (lights[light.id] !== undefined) {\n          return lights[light.id];\n        }\n\n        var uniforms;\n\n        switch (light.type) {\n          case 'DirectionalLight':\n            uniforms = {\n              shadowBias: 0,\n              shadowNormalBias: 0,\n              shadowRadius: 1,\n              shadowMapSize: new Vector2()\n            };\n            break;\n\n          case 'SpotLight':\n            uniforms = {\n              shadowBias: 0,\n              shadowNormalBias: 0,\n              shadowRadius: 1,\n              shadowMapSize: new Vector2()\n            };\n            break;\n\n          case 'PointLight':\n            uniforms = {\n              shadowBias: 0,\n              shadowNormalBias: 0,\n              shadowRadius: 1,\n              shadowMapSize: new Vector2(),\n              shadowCameraNear: 1,\n              shadowCameraFar: 1000\n            };\n            break;\n          // TODO (abelnation): set RectAreaLight shadow uniforms\n        }\n\n        lights[light.id] = uniforms;\n        return uniforms;\n      }\n    };\n  }\n\n  var nextVersion = 0;\n\n  function shadowCastingLightsFirst(lightA, lightB) {\n    return (lightB.castShadow ? 1 : 0) - (lightA.castShadow ? 1 : 0);\n  }\n\n  function WebGLLights(extensions, capabilities) {\n    var cache = new UniformsCache();\n    var shadowCache = ShadowUniformsCache();\n    var state = {\n      version: 0,\n      hash: {\n        directionalLength: -1,\n        pointLength: -1,\n        spotLength: -1,\n        rectAreaLength: -1,\n        hemiLength: -1,\n        numDirectionalShadows: -1,\n        numPointShadows: -1,\n        numSpotShadows: -1\n      },\n      ambient: [0, 0, 0],\n      probe: [],\n      directional: [],\n      directionalShadow: [],\n      directionalShadowMap: [],\n      directionalShadowMatrix: [],\n      spot: [],\n      spotShadow: [],\n      spotShadowMap: [],\n      spotShadowMatrix: [],\n      rectArea: [],\n      rectAreaLTC1: null,\n      rectAreaLTC2: null,\n      point: [],\n      pointShadow: [],\n      pointShadowMap: [],\n      pointShadowMatrix: [],\n      hemi: []\n    };\n\n    for (var _i114 = 0; _i114 < 9; _i114++) {\n      state.probe.push(new Vector3());\n    }\n\n    var vector3 = new Vector3();\n    var matrix4 = new Matrix4();\n    var matrix42 = new Matrix4();\n\n    function setup(lights, physicallyCorrectLights) {\n      var r = 0,\n          g = 0,\n          b = 0;\n\n      for (var _i115 = 0; _i115 < 9; _i115++) {\n        state.probe[_i115].set(0, 0, 0);\n      }\n\n      var directionalLength = 0;\n      var pointLength = 0;\n      var spotLength = 0;\n      var rectAreaLength = 0;\n      var hemiLength = 0;\n      var numDirectionalShadows = 0;\n      var numPointShadows = 0;\n      var numSpotShadows = 0;\n      lights.sort(shadowCastingLightsFirst); // artist-friendly light intensity scaling factor\n\n      var scaleFactor = physicallyCorrectLights !== true ? Math.PI : 1;\n\n      for (var _i116 = 0, l = lights.length; _i116 < l; _i116++) {\n        var light = lights[_i116];\n        var color = light.color;\n        var intensity = light.intensity;\n        var distance = light.distance;\n        var shadowMap = light.shadow && light.shadow.map ? light.shadow.map.texture : null;\n\n        if (light.isAmbientLight) {\n          r += color.r * intensity * scaleFactor;\n          g += color.g * intensity * scaleFactor;\n          b += color.b * intensity * scaleFactor;\n        } else if (light.isLightProbe) {\n          for (var j = 0; j < 9; j++) {\n            state.probe[j].addScaledVector(light.sh.coefficients[j], intensity);\n          }\n        } else if (light.isDirectionalLight) {\n          var uniforms = cache.get(light);\n          uniforms.color.copy(light.color).multiplyScalar(light.intensity * scaleFactor);\n\n          if (light.castShadow) {\n            var shadow = light.shadow;\n            var shadowUniforms = shadowCache.get(light);\n            shadowUniforms.shadowBias = shadow.bias;\n            shadowUniforms.shadowNormalBias = shadow.normalBias;\n            shadowUniforms.shadowRadius = shadow.radius;\n            shadowUniforms.shadowMapSize = shadow.mapSize;\n            state.directionalShadow[directionalLength] = shadowUniforms;\n            state.directionalShadowMap[directionalLength] = shadowMap;\n            state.directionalShadowMatrix[directionalLength] = light.shadow.matrix;\n            numDirectionalShadows++;\n          }\n\n          state.directional[directionalLength] = uniforms;\n          directionalLength++;\n        } else if (light.isSpotLight) {\n          var _uniforms = cache.get(light);\n\n          _uniforms.position.setFromMatrixPosition(light.matrixWorld);\n\n          _uniforms.color.copy(color).multiplyScalar(intensity * scaleFactor);\n\n          _uniforms.distance = distance;\n          _uniforms.coneCos = Math.cos(light.angle);\n          _uniforms.penumbraCos = Math.cos(light.angle * (1 - light.penumbra));\n          _uniforms.decay = light.decay;\n\n          if (light.castShadow) {\n            var _shadow = light.shadow;\n\n            var _shadowUniforms = shadowCache.get(light);\n\n            _shadowUniforms.shadowBias = _shadow.bias;\n            _shadowUniforms.shadowNormalBias = _shadow.normalBias;\n            _shadowUniforms.shadowRadius = _shadow.radius;\n            _shadowUniforms.shadowMapSize = _shadow.mapSize;\n            state.spotShadow[spotLength] = _shadowUniforms;\n            state.spotShadowMap[spotLength] = shadowMap;\n            state.spotShadowMatrix[spotLength] = light.shadow.matrix;\n            numSpotShadows++;\n          }\n\n          state.spot[spotLength] = _uniforms;\n          spotLength++;\n        } else if (light.isRectAreaLight) {\n          var _uniforms2 = cache.get(light); // (a) intensity is the total visible light emitted\n          //uniforms.color.copy( color ).multiplyScalar( intensity / ( light.width * light.height * Math.PI ) );\n          // (b) intensity is the brightness of the light\n\n\n          _uniforms2.color.copy(color).multiplyScalar(intensity);\n\n          _uniforms2.halfWidth.set(light.width * 0.5, 0.0, 0.0);\n\n          _uniforms2.halfHeight.set(0.0, light.height * 0.5, 0.0);\n\n          state.rectArea[rectAreaLength] = _uniforms2;\n          rectAreaLength++;\n        } else if (light.isPointLight) {\n          var _uniforms3 = cache.get(light);\n\n          _uniforms3.color.copy(light.color).multiplyScalar(light.intensity * scaleFactor);\n\n          _uniforms3.distance = light.distance;\n          _uniforms3.decay = light.decay;\n\n          if (light.castShadow) {\n            var _shadow2 = light.shadow;\n\n            var _shadowUniforms2 = shadowCache.get(light);\n\n            _shadowUniforms2.shadowBias = _shadow2.bias;\n            _shadowUniforms2.shadowNormalBias = _shadow2.normalBias;\n            _shadowUniforms2.shadowRadius = _shadow2.radius;\n            _shadowUniforms2.shadowMapSize = _shadow2.mapSize;\n            _shadowUniforms2.shadowCameraNear = _shadow2.camera.near;\n            _shadowUniforms2.shadowCameraFar = _shadow2.camera.far;\n            state.pointShadow[pointLength] = _shadowUniforms2;\n            state.pointShadowMap[pointLength] = shadowMap;\n            state.pointShadowMatrix[pointLength] = light.shadow.matrix;\n            numPointShadows++;\n          }\n\n          state.point[pointLength] = _uniforms3;\n          pointLength++;\n        } else if (light.isHemisphereLight) {\n          var _uniforms4 = cache.get(light);\n\n          _uniforms4.skyColor.copy(light.color).multiplyScalar(intensity * scaleFactor);\n\n          _uniforms4.groundColor.copy(light.groundColor).multiplyScalar(intensity * scaleFactor);\n\n          state.hemi[hemiLength] = _uniforms4;\n          hemiLength++;\n        }\n      }\n\n      if (rectAreaLength > 0) {\n        if (capabilities.isWebGL2) {\n          // WebGL 2\n          state.rectAreaLTC1 = UniformsLib.LTC_FLOAT_1;\n          state.rectAreaLTC2 = UniformsLib.LTC_FLOAT_2;\n        } else {\n          // WebGL 1\n          if (extensions.has('OES_texture_float_linear') === true) {\n            state.rectAreaLTC1 = UniformsLib.LTC_FLOAT_1;\n            state.rectAreaLTC2 = UniformsLib.LTC_FLOAT_2;\n          } else if (extensions.has('OES_texture_half_float_linear') === true) {\n            state.rectAreaLTC1 = UniformsLib.LTC_HALF_1;\n            state.rectAreaLTC2 = UniformsLib.LTC_HALF_2;\n          } else {\n            console.error('THREE.WebGLRenderer: Unable to use RectAreaLight. Missing WebGL extensions.');\n          }\n        }\n      }\n\n      state.ambient[0] = r;\n      state.ambient[1] = g;\n      state.ambient[2] = b;\n      var hash = state.hash;\n\n      if (hash.directionalLength !== directionalLength || hash.pointLength !== pointLength || hash.spotLength !== spotLength || hash.rectAreaLength !== rectAreaLength || hash.hemiLength !== hemiLength || hash.numDirectionalShadows !== numDirectionalShadows || hash.numPointShadows !== numPointShadows || hash.numSpotShadows !== numSpotShadows) {\n        state.directional.length = directionalLength;\n        state.spot.length = spotLength;\n        state.rectArea.length = rectAreaLength;\n        state.point.length = pointLength;\n        state.hemi.length = hemiLength;\n        state.directionalShadow.length = numDirectionalShadows;\n        state.directionalShadowMap.length = numDirectionalShadows;\n        state.pointShadow.length = numPointShadows;\n        state.pointShadowMap.length = numPointShadows;\n        state.spotShadow.length = numSpotShadows;\n        state.spotShadowMap.length = numSpotShadows;\n        state.directionalShadowMatrix.length = numDirectionalShadows;\n        state.pointShadowMatrix.length = numPointShadows;\n        state.spotShadowMatrix.length = numSpotShadows;\n        hash.directionalLength = directionalLength;\n        hash.pointLength = pointLength;\n        hash.spotLength = spotLength;\n        hash.rectAreaLength = rectAreaLength;\n        hash.hemiLength = hemiLength;\n        hash.numDirectionalShadows = numDirectionalShadows;\n        hash.numPointShadows = numPointShadows;\n        hash.numSpotShadows = numSpotShadows;\n        state.version = nextVersion++;\n      }\n    }\n\n    function setupView(lights, camera) {\n      var directionalLength = 0;\n      var pointLength = 0;\n      var spotLength = 0;\n      var rectAreaLength = 0;\n      var hemiLength = 0;\n      var viewMatrix = camera.matrixWorldInverse;\n\n      for (var _i117 = 0, l = lights.length; _i117 < l; _i117++) {\n        var light = lights[_i117];\n\n        if (light.isDirectionalLight) {\n          var uniforms = state.directional[directionalLength];\n          uniforms.direction.setFromMatrixPosition(light.matrixWorld);\n          vector3.setFromMatrixPosition(light.target.matrixWorld);\n          uniforms.direction.sub(vector3);\n          uniforms.direction.transformDirection(viewMatrix);\n          directionalLength++;\n        } else if (light.isSpotLight) {\n          var _uniforms5 = state.spot[spotLength];\n\n          _uniforms5.position.setFromMatrixPosition(light.matrixWorld);\n\n          _uniforms5.position.applyMatrix4(viewMatrix);\n\n          _uniforms5.direction.setFromMatrixPosition(light.matrixWorld);\n\n          vector3.setFromMatrixPosition(light.target.matrixWorld);\n\n          _uniforms5.direction.sub(vector3);\n\n          _uniforms5.direction.transformDirection(viewMatrix);\n\n          spotLength++;\n        } else if (light.isRectAreaLight) {\n          var _uniforms6 = state.rectArea[rectAreaLength];\n\n          _uniforms6.position.setFromMatrixPosition(light.matrixWorld);\n\n          _uniforms6.position.applyMatrix4(viewMatrix); // extract local rotation of light to derive width/height half vectors\n\n\n          matrix42.identity();\n          matrix4.copy(light.matrixWorld);\n          matrix4.premultiply(viewMatrix);\n          matrix42.extractRotation(matrix4);\n\n          _uniforms6.halfWidth.set(light.width * 0.5, 0.0, 0.0);\n\n          _uniforms6.halfHeight.set(0.0, light.height * 0.5, 0.0);\n\n          _uniforms6.halfWidth.applyMatrix4(matrix42);\n\n          _uniforms6.halfHeight.applyMatrix4(matrix42);\n\n          rectAreaLength++;\n        } else if (light.isPointLight) {\n          var _uniforms7 = state.point[pointLength];\n\n          _uniforms7.position.setFromMatrixPosition(light.matrixWorld);\n\n          _uniforms7.position.applyMatrix4(viewMatrix);\n\n          pointLength++;\n        } else if (light.isHemisphereLight) {\n          var _uniforms8 = state.hemi[hemiLength];\n\n          _uniforms8.direction.setFromMatrixPosition(light.matrixWorld);\n\n          _uniforms8.direction.transformDirection(viewMatrix);\n\n          _uniforms8.direction.normalize();\n\n          hemiLength++;\n        }\n      }\n    }\n\n    return {\n      setup: setup,\n      setupView: setupView,\n      state: state\n    };\n  }\n\n  function WebGLRenderState(extensions, capabilities) {\n    var lights = new WebGLLights(extensions, capabilities);\n    var lightsArray = [];\n    var shadowsArray = [];\n\n    function init() {\n      lightsArray.length = 0;\n      shadowsArray.length = 0;\n    }\n\n    function pushLight(light) {\n      lightsArray.push(light);\n    }\n\n    function pushShadow(shadowLight) {\n      shadowsArray.push(shadowLight);\n    }\n\n    function setupLights(physicallyCorrectLights) {\n      lights.setup(lightsArray, physicallyCorrectLights);\n    }\n\n    function setupLightsView(camera) {\n      lights.setupView(lightsArray, camera);\n    }\n\n    var state = {\n      lightsArray: lightsArray,\n      shadowsArray: shadowsArray,\n      lights: lights\n    };\n    return {\n      init: init,\n      state: state,\n      setupLights: setupLights,\n      setupLightsView: setupLightsView,\n      pushLight: pushLight,\n      pushShadow: pushShadow\n    };\n  }\n\n  function WebGLRenderStates(extensions, capabilities) {\n    var renderStates = new WeakMap();\n\n    function get(scene) {\n      var renderCallDepth = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n      var renderState;\n\n      if (renderStates.has(scene) === false) {\n        renderState = new WebGLRenderState(extensions, capabilities);\n        renderStates.set(scene, [renderState]);\n      } else {\n        if (renderCallDepth >= renderStates.get(scene).length) {\n          renderState = new WebGLRenderState(extensions, capabilities);\n          renderStates.get(scene).push(renderState);\n        } else {\n          renderState = renderStates.get(scene)[renderCallDepth];\n        }\n      }\n\n      return renderState;\n    }\n\n    function dispose() {\n      renderStates = new WeakMap();\n    }\n\n    return {\n      get: get,\n      dispose: dispose\n    };\n  }\n  /**\n   * parameters = {\n   *\n   *\topacity: <float>,\n   *\n   *\tmap: new THREE.Texture( <Image> ),\n   *\n   *\talphaMap: new THREE.Texture( <Image> ),\n   *\n   *\tdisplacementMap: new THREE.Texture( <Image> ),\n   *\tdisplacementScale: <float>,\n   *\tdisplacementBias: <float>,\n   *\n   *\twireframe: <boolean>,\n   *\twireframeLinewidth: <float>\n   * }\n   */\n\n\n  var MeshDepthMaterial = /*#__PURE__*/function (_Material3) {\n    _inherits(MeshDepthMaterial, _Material3);\n\n    var _super32 = _createSuper(MeshDepthMaterial);\n\n    function MeshDepthMaterial(parameters) {\n      var _this23;\n\n      _classCallCheck(this, MeshDepthMaterial);\n\n      _this23 = _super32.call(this);\n      _this23.type = 'MeshDepthMaterial';\n      _this23.depthPacking = BasicDepthPacking;\n      _this23.map = null;\n      _this23.alphaMap = null;\n      _this23.displacementMap = null;\n      _this23.displacementScale = 1;\n      _this23.displacementBias = 0;\n      _this23.wireframe = false;\n      _this23.wireframeLinewidth = 1;\n      _this23.fog = false;\n\n      _this23.setValues(parameters);\n\n      return _this23;\n    }\n\n    _createClass(MeshDepthMaterial, [{\n      key: \"copy\",\n      value: function copy(source) {\n        _get(_getPrototypeOf(MeshDepthMaterial.prototype), \"copy\", this).call(this, source);\n\n        this.depthPacking = source.depthPacking;\n        this.map = source.map;\n        this.alphaMap = source.alphaMap;\n        this.displacementMap = source.displacementMap;\n        this.displacementScale = source.displacementScale;\n        this.displacementBias = source.displacementBias;\n        this.wireframe = source.wireframe;\n        this.wireframeLinewidth = source.wireframeLinewidth;\n        return this;\n      }\n    }]);\n\n    return MeshDepthMaterial;\n  }(Material);\n\n  MeshDepthMaterial.prototype.isMeshDepthMaterial = true;\n  /**\n   * parameters = {\n   *\n   *\treferencePosition: <float>,\n   *\tnearDistance: <float>,\n   *\tfarDistance: <float>,\n   *\n   *\tmap: new THREE.Texture( <Image> ),\n   *\n   *\talphaMap: new THREE.Texture( <Image> ),\n   *\n   *\tdisplacementMap: new THREE.Texture( <Image> ),\n   *\tdisplacementScale: <float>,\n   *\tdisplacementBias: <float>\n   *\n   * }\n   */\n\n  var MeshDistanceMaterial = /*#__PURE__*/function (_Material4) {\n    _inherits(MeshDistanceMaterial, _Material4);\n\n    var _super33 = _createSuper(MeshDistanceMaterial);\n\n    function MeshDistanceMaterial(parameters) {\n      var _this24;\n\n      _classCallCheck(this, MeshDistanceMaterial);\n\n      _this24 = _super33.call(this);\n      _this24.type = 'MeshDistanceMaterial';\n      _this24.referencePosition = new Vector3();\n      _this24.nearDistance = 1;\n      _this24.farDistance = 1000;\n      _this24.map = null;\n      _this24.alphaMap = null;\n      _this24.displacementMap = null;\n      _this24.displacementScale = 1;\n      _this24.displacementBias = 0;\n      _this24.fog = false;\n\n      _this24.setValues(parameters);\n\n      return _this24;\n    }\n\n    _createClass(MeshDistanceMaterial, [{\n      key: \"copy\",\n      value: function copy(source) {\n        _get(_getPrototypeOf(MeshDistanceMaterial.prototype), \"copy\", this).call(this, source);\n\n        this.referencePosition.copy(source.referencePosition);\n        this.nearDistance = source.nearDistance;\n        this.farDistance = source.farDistance;\n        this.map = source.map;\n        this.alphaMap = source.alphaMap;\n        this.displacementMap = source.displacementMap;\n        this.displacementScale = source.displacementScale;\n        this.displacementBias = source.displacementBias;\n        return this;\n      }\n    }]);\n\n    return MeshDistanceMaterial;\n  }(Material);\n\n  MeshDistanceMaterial.prototype.isMeshDistanceMaterial = true;\n  var vertex = \"void main() {\\n\\tgl_Position = vec4( position, 1.0 );\\n}\";\n  var fragment = \"uniform sampler2D shadow_pass;\\nuniform vec2 resolution;\\nuniform float radius;\\n#include <packing>\\nvoid main() {\\n\\tconst float samples = float( VSM_SAMPLES );\\n\\tfloat mean = 0.0;\\n\\tfloat squared_mean = 0.0;\\n\\tfloat uvStride = samples <= 1.0 ? 0.0 : 2.0 / ( samples - 1.0 );\\n\\tfloat uvStart = samples <= 1.0 ? 0.0 : - 1.0;\\n\\tfor ( float i = 0.0; i < samples; i ++ ) {\\n\\t\\tfloat uvOffset = uvStart + i * uvStride;\\n\\t\\t#ifdef HORIZONTAL_PASS\\n\\t\\t\\tvec2 distribution = unpackRGBATo2Half( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( uvOffset, 0.0 ) * radius ) / resolution ) );\\n\\t\\t\\tmean += distribution.x;\\n\\t\\t\\tsquared_mean += distribution.y * distribution.y + distribution.x * distribution.x;\\n\\t\\t#else\\n\\t\\t\\tfloat depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0, uvOffset ) * radius ) / resolution ) );\\n\\t\\t\\tmean += depth;\\n\\t\\t\\tsquared_mean += depth * depth;\\n\\t\\t#endif\\n\\t}\\n\\tmean = mean / samples;\\n\\tsquared_mean = squared_mean / samples;\\n\\tfloat std_dev = sqrt( squared_mean - mean * mean );\\n\\tgl_FragColor = pack2HalfToRGBA( vec2( mean, std_dev ) );\\n}\";\n\n  function WebGLShadowMap(_renderer, _objects, _capabilities) {\n    var _frustum = new Frustum();\n\n    var _shadowMapSize = new Vector2(),\n        _viewportSize = new Vector2(),\n        _viewport = new Vector4(),\n        _depthMaterial = new MeshDepthMaterial({\n      depthPacking: RGBADepthPacking\n    }),\n        _distanceMaterial = new MeshDistanceMaterial(),\n        _materialCache = {},\n        _maxTextureSize = _capabilities.maxTextureSize;\n\n    var shadowSide = {\n      0: BackSide,\n      1: FrontSide,\n      2: DoubleSide\n    };\n    var shadowMaterialVertical = new ShaderMaterial({\n      defines: {\n        VSM_SAMPLES: 8\n      },\n      uniforms: {\n        shadow_pass: {\n          value: null\n        },\n        resolution: {\n          value: new Vector2()\n        },\n        radius: {\n          value: 4.0\n        }\n      },\n      vertexShader: vertex,\n      fragmentShader: fragment\n    });\n    var shadowMaterialHorizontal = shadowMaterialVertical.clone();\n    shadowMaterialHorizontal.defines.HORIZONTAL_PASS = 1;\n    var fullScreenTri = new BufferGeometry();\n    fullScreenTri.setAttribute('position', new BufferAttribute(new Float32Array([-1, -1, 0.5, 3, -1, 0.5, -1, 3, 0.5]), 3));\n    var fullScreenMesh = new Mesh(fullScreenTri, shadowMaterialVertical);\n    var scope = this;\n    this.enabled = false;\n    this.autoUpdate = true;\n    this.needsUpdate = false;\n    this.type = PCFShadowMap;\n\n    this.render = function (lights, scene, camera) {\n      if (scope.enabled === false) return;\n      if (scope.autoUpdate === false && scope.needsUpdate === false) return;\n      if (lights.length === 0) return;\n\n      var currentRenderTarget = _renderer.getRenderTarget();\n\n      var activeCubeFace = _renderer.getActiveCubeFace();\n\n      var activeMipmapLevel = _renderer.getActiveMipmapLevel();\n\n      var _state = _renderer.state; // Set GL state for depth map.\n\n      _state.setBlending(NoBlending);\n\n      _state.buffers.color.setClear(1, 1, 1, 1);\n\n      _state.buffers.depth.setTest(true);\n\n      _state.setScissorTest(false); // render depth map\n\n\n      for (var _i118 = 0, il = lights.length; _i118 < il; _i118++) {\n        var light = lights[_i118];\n        var shadow = light.shadow;\n\n        if (shadow === undefined) {\n          console.warn('THREE.WebGLShadowMap:', light, 'has no shadow.');\n          continue;\n        }\n\n        if (shadow.autoUpdate === false && shadow.needsUpdate === false) continue;\n\n        _shadowMapSize.copy(shadow.mapSize);\n\n        var shadowFrameExtents = shadow.getFrameExtents();\n\n        _shadowMapSize.multiply(shadowFrameExtents);\n\n        _viewportSize.copy(shadow.mapSize);\n\n        if (_shadowMapSize.x > _maxTextureSize || _shadowMapSize.y > _maxTextureSize) {\n          if (_shadowMapSize.x > _maxTextureSize) {\n            _viewportSize.x = Math.floor(_maxTextureSize / shadowFrameExtents.x);\n            _shadowMapSize.x = _viewportSize.x * shadowFrameExtents.x;\n            shadow.mapSize.x = _viewportSize.x;\n          }\n\n          if (_shadowMapSize.y > _maxTextureSize) {\n            _viewportSize.y = Math.floor(_maxTextureSize / shadowFrameExtents.y);\n            _shadowMapSize.y = _viewportSize.y * shadowFrameExtents.y;\n            shadow.mapSize.y = _viewportSize.y;\n          }\n        }\n\n        if (shadow.map === null && !shadow.isPointLightShadow && this.type === VSMShadowMap) {\n          var pars = {\n            minFilter: LinearFilter,\n            magFilter: LinearFilter,\n            format: RGBAFormat\n          };\n          shadow.map = new WebGLRenderTarget(_shadowMapSize.x, _shadowMapSize.y, pars);\n          shadow.map.texture.name = light.name + '.shadowMap';\n          shadow.mapPass = new WebGLRenderTarget(_shadowMapSize.x, _shadowMapSize.y, pars);\n          shadow.camera.updateProjectionMatrix();\n        }\n\n        if (shadow.map === null) {\n          var _pars = {\n            minFilter: NearestFilter,\n            magFilter: NearestFilter,\n            format: RGBAFormat\n          };\n          shadow.map = new WebGLRenderTarget(_shadowMapSize.x, _shadowMapSize.y, _pars);\n          shadow.map.texture.name = light.name + '.shadowMap';\n          shadow.camera.updateProjectionMatrix();\n        }\n\n        _renderer.setRenderTarget(shadow.map);\n\n        _renderer.clear();\n\n        var viewportCount = shadow.getViewportCount();\n\n        for (var vp = 0; vp < viewportCount; vp++) {\n          var viewport = shadow.getViewport(vp);\n\n          _viewport.set(_viewportSize.x * viewport.x, _viewportSize.y * viewport.y, _viewportSize.x * viewport.z, _viewportSize.y * viewport.w);\n\n          _state.viewport(_viewport);\n\n          shadow.updateMatrices(light, vp);\n          _frustum = shadow.getFrustum();\n          renderObject(scene, camera, shadow.camera, light, this.type);\n        } // do blur pass for VSM\n\n\n        if (!shadow.isPointLightShadow && this.type === VSMShadowMap) {\n          VSMPass(shadow, camera);\n        }\n\n        shadow.needsUpdate = false;\n      }\n\n      scope.needsUpdate = false;\n\n      _renderer.setRenderTarget(currentRenderTarget, activeCubeFace, activeMipmapLevel);\n    };\n\n    function VSMPass(shadow, camera) {\n      var geometry = _objects.update(fullScreenMesh);\n\n      if (shadowMaterialVertical.defines.VSM_SAMPLES !== shadow.blurSamples) {\n        shadowMaterialVertical.defines.VSM_SAMPLES = shadow.blurSamples;\n        shadowMaterialHorizontal.defines.VSM_SAMPLES = shadow.blurSamples;\n        shadowMaterialVertical.needsUpdate = true;\n        shadowMaterialHorizontal.needsUpdate = true;\n      } // vertical pass\n\n\n      shadowMaterialVertical.uniforms.shadow_pass.value = shadow.map.texture;\n      shadowMaterialVertical.uniforms.resolution.value = shadow.mapSize;\n      shadowMaterialVertical.uniforms.radius.value = shadow.radius;\n\n      _renderer.setRenderTarget(shadow.mapPass);\n\n      _renderer.clear();\n\n      _renderer.renderBufferDirect(camera, null, geometry, shadowMaterialVertical, fullScreenMesh, null); // horizontal pass\n\n\n      shadowMaterialHorizontal.uniforms.shadow_pass.value = shadow.mapPass.texture;\n      shadowMaterialHorizontal.uniforms.resolution.value = shadow.mapSize;\n      shadowMaterialHorizontal.uniforms.radius.value = shadow.radius;\n\n      _renderer.setRenderTarget(shadow.map);\n\n      _renderer.clear();\n\n      _renderer.renderBufferDirect(camera, null, geometry, shadowMaterialHorizontal, fullScreenMesh, null);\n    }\n\n    function getDepthMaterial(object, geometry, material, light, shadowCameraNear, shadowCameraFar, type) {\n      var result = null;\n      var customMaterial = light.isPointLight === true ? object.customDistanceMaterial : object.customDepthMaterial;\n\n      if (customMaterial !== undefined) {\n        result = customMaterial;\n      } else {\n        result = light.isPointLight === true ? _distanceMaterial : _depthMaterial;\n      }\n\n      if (_renderer.localClippingEnabled && material.clipShadows === true && material.clippingPlanes.length !== 0 || material.displacementMap && material.displacementScale !== 0 || material.alphaMap && material.alphaTest > 0) {\n        // in this case we need a unique material instance reflecting the\n        // appropriate state\n        var keyA = result.uuid,\n            keyB = material.uuid;\n        var materialsForVariant = _materialCache[keyA];\n\n        if (materialsForVariant === undefined) {\n          materialsForVariant = {};\n          _materialCache[keyA] = materialsForVariant;\n        }\n\n        var cachedMaterial = materialsForVariant[keyB];\n\n        if (cachedMaterial === undefined) {\n          cachedMaterial = result.clone();\n          materialsForVariant[keyB] = cachedMaterial;\n        }\n\n        result = cachedMaterial;\n      }\n\n      result.visible = material.visible;\n      result.wireframe = material.wireframe;\n\n      if (type === VSMShadowMap) {\n        result.side = material.shadowSide !== null ? material.shadowSide : material.side;\n      } else {\n        result.side = material.shadowSide !== null ? material.shadowSide : shadowSide[material.side];\n      }\n\n      result.alphaMap = material.alphaMap;\n      result.alphaTest = material.alphaTest;\n      result.clipShadows = material.clipShadows;\n      result.clippingPlanes = material.clippingPlanes;\n      result.clipIntersection = material.clipIntersection;\n      result.displacementMap = material.displacementMap;\n      result.displacementScale = material.displacementScale;\n      result.displacementBias = material.displacementBias;\n      result.wireframeLinewidth = material.wireframeLinewidth;\n      result.linewidth = material.linewidth;\n\n      if (light.isPointLight === true && result.isMeshDistanceMaterial === true) {\n        result.referencePosition.setFromMatrixPosition(light.matrixWorld);\n        result.nearDistance = shadowCameraNear;\n        result.farDistance = shadowCameraFar;\n      }\n\n      return result;\n    }\n\n    function renderObject(object, camera, shadowCamera, light, type) {\n      if (object.visible === false) return;\n      var visible = object.layers.test(camera.layers);\n\n      if (visible && (object.isMesh || object.isLine || object.isPoints)) {\n        if ((object.castShadow || object.receiveShadow && type === VSMShadowMap) && (!object.frustumCulled || _frustum.intersectsObject(object))) {\n          object.modelViewMatrix.multiplyMatrices(shadowCamera.matrixWorldInverse, object.matrixWorld);\n\n          var geometry = _objects.update(object);\n\n          var material = object.material;\n\n          if (Array.isArray(material)) {\n            var groups = geometry.groups;\n\n            for (var k = 0, kl = groups.length; k < kl; k++) {\n              var group = groups[k];\n              var groupMaterial = material[group.materialIndex];\n\n              if (groupMaterial && groupMaterial.visible) {\n                var depthMaterial = getDepthMaterial(object, geometry, groupMaterial, light, shadowCamera.near, shadowCamera.far, type);\n\n                _renderer.renderBufferDirect(shadowCamera, null, geometry, depthMaterial, object, group);\n              }\n            }\n          } else if (material.visible) {\n            var _depthMaterial2 = getDepthMaterial(object, geometry, material, light, shadowCamera.near, shadowCamera.far, type);\n\n            _renderer.renderBufferDirect(shadowCamera, null, geometry, _depthMaterial2, object, null);\n          }\n        }\n      }\n\n      var children = object.children;\n\n      for (var _i119 = 0, l = children.length; _i119 < l; _i119++) {\n        renderObject(children[_i119], camera, shadowCamera, light, type);\n      }\n    }\n  }\n\n  function WebGLState(gl, extensions, capabilities) {\n    var _equationToGL, _factorToGL;\n\n    var isWebGL2 = capabilities.isWebGL2;\n\n    function ColorBuffer() {\n      var locked = false;\n      var color = new Vector4();\n      var currentColorMask = null;\n      var currentColorClear = new Vector4(0, 0, 0, 0);\n      return {\n        setMask: function setMask(colorMask) {\n          if (currentColorMask !== colorMask && !locked) {\n            gl.colorMask(colorMask, colorMask, colorMask, colorMask);\n            currentColorMask = colorMask;\n          }\n        },\n        setLocked: function setLocked(lock) {\n          locked = lock;\n        },\n        setClear: function setClear(r, g, b, a, premultipliedAlpha) {\n          if (premultipliedAlpha === true) {\n            r *= a;\n            g *= a;\n            b *= a;\n          }\n\n          color.set(r, g, b, a);\n\n          if (currentColorClear.equals(color) === false) {\n            gl.clearColor(r, g, b, a);\n            currentColorClear.copy(color);\n          }\n        },\n        reset: function reset() {\n          locked = false;\n          currentColorMask = null;\n          currentColorClear.set(-1, 0, 0, 0); // set to invalid state\n        }\n      };\n    }\n\n    function DepthBuffer() {\n      var locked = false;\n      var currentDepthMask = null;\n      var currentDepthFunc = null;\n      var currentDepthClear = null;\n      return {\n        setTest: function setTest(depthTest) {\n          if (depthTest) {\n            enable(gl.DEPTH_TEST);\n          } else {\n            disable(gl.DEPTH_TEST);\n          }\n        },\n        setMask: function setMask(depthMask) {\n          if (currentDepthMask !== depthMask && !locked) {\n            gl.depthMask(depthMask);\n            currentDepthMask = depthMask;\n          }\n        },\n        setFunc: function setFunc(depthFunc) {\n          if (currentDepthFunc !== depthFunc) {\n            if (depthFunc) {\n              switch (depthFunc) {\n                case NeverDepth:\n                  gl.depthFunc(gl.NEVER);\n                  break;\n\n                case AlwaysDepth:\n                  gl.depthFunc(gl.ALWAYS);\n                  break;\n\n                case LessDepth:\n                  gl.depthFunc(gl.LESS);\n                  break;\n\n                case LessEqualDepth:\n                  gl.depthFunc(gl.LEQUAL);\n                  break;\n\n                case EqualDepth:\n                  gl.depthFunc(gl.EQUAL);\n                  break;\n\n                case GreaterEqualDepth:\n                  gl.depthFunc(gl.GEQUAL);\n                  break;\n\n                case GreaterDepth:\n                  gl.depthFunc(gl.GREATER);\n                  break;\n\n                case NotEqualDepth:\n                  gl.depthFunc(gl.NOTEQUAL);\n                  break;\n\n                default:\n                  gl.depthFunc(gl.LEQUAL);\n              }\n            } else {\n              gl.depthFunc(gl.LEQUAL);\n            }\n\n            currentDepthFunc = depthFunc;\n          }\n        },\n        setLocked: function setLocked(lock) {\n          locked = lock;\n        },\n        setClear: function setClear(depth) {\n          if (currentDepthClear !== depth) {\n            gl.clearDepth(depth);\n            currentDepthClear = depth;\n          }\n        },\n        reset: function reset() {\n          locked = false;\n          currentDepthMask = null;\n          currentDepthFunc = null;\n          currentDepthClear = null;\n        }\n      };\n    }\n\n    function StencilBuffer() {\n      var locked = false;\n      var currentStencilMask = null;\n      var currentStencilFunc = null;\n      var currentStencilRef = null;\n      var currentStencilFuncMask = null;\n      var currentStencilFail = null;\n      var currentStencilZFail = null;\n      var currentStencilZPass = null;\n      var currentStencilClear = null;\n      return {\n        setTest: function setTest(stencilTest) {\n          if (!locked) {\n            if (stencilTest) {\n              enable(gl.STENCIL_TEST);\n            } else {\n              disable(gl.STENCIL_TEST);\n            }\n          }\n        },\n        setMask: function setMask(stencilMask) {\n          if (currentStencilMask !== stencilMask && !locked) {\n            gl.stencilMask(stencilMask);\n            currentStencilMask = stencilMask;\n          }\n        },\n        setFunc: function setFunc(stencilFunc, stencilRef, stencilMask) {\n          if (currentStencilFunc !== stencilFunc || currentStencilRef !== stencilRef || currentStencilFuncMask !== stencilMask) {\n            gl.stencilFunc(stencilFunc, stencilRef, stencilMask);\n            currentStencilFunc = stencilFunc;\n            currentStencilRef = stencilRef;\n            currentStencilFuncMask = stencilMask;\n          }\n        },\n        setOp: function setOp(stencilFail, stencilZFail, stencilZPass) {\n          if (currentStencilFail !== stencilFail || currentStencilZFail !== stencilZFail || currentStencilZPass !== stencilZPass) {\n            gl.stencilOp(stencilFail, stencilZFail, stencilZPass);\n            currentStencilFail = stencilFail;\n            currentStencilZFail = stencilZFail;\n            currentStencilZPass = stencilZPass;\n          }\n        },\n        setLocked: function setLocked(lock) {\n          locked = lock;\n        },\n        setClear: function setClear(stencil) {\n          if (currentStencilClear !== stencil) {\n            gl.clearStencil(stencil);\n            currentStencilClear = stencil;\n          }\n        },\n        reset: function reset() {\n          locked = false;\n          currentStencilMask = null;\n          currentStencilFunc = null;\n          currentStencilRef = null;\n          currentStencilFuncMask = null;\n          currentStencilFail = null;\n          currentStencilZFail = null;\n          currentStencilZPass = null;\n          currentStencilClear = null;\n        }\n      };\n    } //\n\n\n    var colorBuffer = new ColorBuffer();\n    var depthBuffer = new DepthBuffer();\n    var stencilBuffer = new StencilBuffer();\n    var enabledCapabilities = {};\n    var xrFramebuffer = null;\n    var currentBoundFramebuffers = {};\n    var currentProgram = null;\n    var currentBlendingEnabled = false;\n    var currentBlending = null;\n    var currentBlendEquation = null;\n    var currentBlendSrc = null;\n    var currentBlendDst = null;\n    var currentBlendEquationAlpha = null;\n    var currentBlendSrcAlpha = null;\n    var currentBlendDstAlpha = null;\n    var currentPremultipledAlpha = false;\n    var currentFlipSided = null;\n    var currentCullFace = null;\n    var currentLineWidth = null;\n    var currentPolygonOffsetFactor = null;\n    var currentPolygonOffsetUnits = null;\n    var maxTextures = gl.getParameter(gl.MAX_COMBINED_TEXTURE_IMAGE_UNITS);\n    var lineWidthAvailable = false;\n    var version = 0;\n    var glVersion = gl.getParameter(gl.VERSION);\n\n    if (glVersion.indexOf('WebGL') !== -1) {\n      version = parseFloat(/^WebGL (\\d)/.exec(glVersion)[1]);\n      lineWidthAvailable = version >= 1.0;\n    } else if (glVersion.indexOf('OpenGL ES') !== -1) {\n      version = parseFloat(/^OpenGL ES (\\d)/.exec(glVersion)[1]);\n      lineWidthAvailable = version >= 2.0;\n    }\n\n    var currentTextureSlot = null;\n    var currentBoundTextures = {};\n    var scissorParam = gl.getParameter(gl.SCISSOR_BOX);\n    var viewportParam = gl.getParameter(gl.VIEWPORT);\n    var currentScissor = new Vector4().fromArray(scissorParam);\n    var currentViewport = new Vector4().fromArray(viewportParam);\n\n    function createTexture(type, target, count) {\n      var data = new Uint8Array(4); // 4 is required to match default unpack alignment of 4.\n\n      var texture = gl.createTexture();\n      gl.bindTexture(type, texture);\n      gl.texParameteri(type, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n      gl.texParameteri(type, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n\n      for (var _i120 = 0; _i120 < count; _i120++) {\n        gl.texImage2D(target + _i120, 0, gl.RGBA, 1, 1, 0, gl.RGBA, gl.UNSIGNED_BYTE, data);\n      }\n\n      return texture;\n    }\n\n    var emptyTextures = {};\n    emptyTextures[gl.TEXTURE_2D] = createTexture(gl.TEXTURE_2D, gl.TEXTURE_2D, 1);\n    emptyTextures[gl.TEXTURE_CUBE_MAP] = createTexture(gl.TEXTURE_CUBE_MAP, gl.TEXTURE_CUBE_MAP_POSITIVE_X, 6); // init\n\n    colorBuffer.setClear(0, 0, 0, 1);\n    depthBuffer.setClear(1);\n    stencilBuffer.setClear(0);\n    enable(gl.DEPTH_TEST);\n    depthBuffer.setFunc(LessEqualDepth);\n    setFlipSided(false);\n    setCullFace(CullFaceBack);\n    enable(gl.CULL_FACE);\n    setBlending(NoBlending); //\n\n    function enable(id) {\n      if (enabledCapabilities[id] !== true) {\n        gl.enable(id);\n        enabledCapabilities[id] = true;\n      }\n    }\n\n    function disable(id) {\n      if (enabledCapabilities[id] !== false) {\n        gl.disable(id);\n        enabledCapabilities[id] = false;\n      }\n    }\n\n    function bindXRFramebuffer(framebuffer) {\n      if (framebuffer !== xrFramebuffer) {\n        gl.bindFramebuffer(gl.FRAMEBUFFER, framebuffer);\n        xrFramebuffer = framebuffer;\n      }\n    }\n\n    function bindFramebuffer(target, framebuffer) {\n      if (framebuffer === null && xrFramebuffer !== null) framebuffer = xrFramebuffer; // use active XR framebuffer if available\n\n      if (currentBoundFramebuffers[target] !== framebuffer) {\n        gl.bindFramebuffer(target, framebuffer);\n        currentBoundFramebuffers[target] = framebuffer;\n\n        if (isWebGL2) {\n          // gl.DRAW_FRAMEBUFFER is equivalent to gl.FRAMEBUFFER\n          if (target === gl.DRAW_FRAMEBUFFER) {\n            currentBoundFramebuffers[gl.FRAMEBUFFER] = framebuffer;\n          }\n\n          if (target === gl.FRAMEBUFFER) {\n            currentBoundFramebuffers[gl.DRAW_FRAMEBUFFER] = framebuffer;\n          }\n        }\n\n        return true;\n      }\n\n      return false;\n    }\n\n    function useProgram(program) {\n      if (currentProgram !== program) {\n        gl.useProgram(program);\n        currentProgram = program;\n        return true;\n      }\n\n      return false;\n    }\n\n    var equationToGL = (_equationToGL = {}, _defineProperty(_equationToGL, AddEquation, gl.FUNC_ADD), _defineProperty(_equationToGL, SubtractEquation, gl.FUNC_SUBTRACT), _defineProperty(_equationToGL, ReverseSubtractEquation, gl.FUNC_REVERSE_SUBTRACT), _equationToGL);\n\n    if (isWebGL2) {\n      equationToGL[MinEquation] = gl.MIN;\n      equationToGL[MaxEquation] = gl.MAX;\n    } else {\n      var extension = extensions.get('EXT_blend_minmax');\n\n      if (extension !== null) {\n        equationToGL[MinEquation] = extension.MIN_EXT;\n        equationToGL[MaxEquation] = extension.MAX_EXT;\n      }\n    }\n\n    var factorToGL = (_factorToGL = {}, _defineProperty(_factorToGL, ZeroFactor, gl.ZERO), _defineProperty(_factorToGL, OneFactor, gl.ONE), _defineProperty(_factorToGL, SrcColorFactor, gl.SRC_COLOR), _defineProperty(_factorToGL, SrcAlphaFactor, gl.SRC_ALPHA), _defineProperty(_factorToGL, SrcAlphaSaturateFactor, gl.SRC_ALPHA_SATURATE), _defineProperty(_factorToGL, DstColorFactor, gl.DST_COLOR), _defineProperty(_factorToGL, DstAlphaFactor, gl.DST_ALPHA), _defineProperty(_factorToGL, OneMinusSrcColorFactor, gl.ONE_MINUS_SRC_COLOR), _defineProperty(_factorToGL, OneMinusSrcAlphaFactor, gl.ONE_MINUS_SRC_ALPHA), _defineProperty(_factorToGL, OneMinusDstColorFactor, gl.ONE_MINUS_DST_COLOR), _defineProperty(_factorToGL, OneMinusDstAlphaFactor, gl.ONE_MINUS_DST_ALPHA), _factorToGL);\n\n    function setBlending(blending, blendEquation, blendSrc, blendDst, blendEquationAlpha, blendSrcAlpha, blendDstAlpha, premultipliedAlpha) {\n      if (blending === NoBlending) {\n        if (currentBlendingEnabled === true) {\n          disable(gl.BLEND);\n          currentBlendingEnabled = false;\n        }\n\n        return;\n      }\n\n      if (currentBlendingEnabled === false) {\n        enable(gl.BLEND);\n        currentBlendingEnabled = true;\n      }\n\n      if (blending !== CustomBlending) {\n        if (blending !== currentBlending || premultipliedAlpha !== currentPremultipledAlpha) {\n          if (currentBlendEquation !== AddEquation || currentBlendEquationAlpha !== AddEquation) {\n            gl.blendEquation(gl.FUNC_ADD);\n            currentBlendEquation = AddEquation;\n            currentBlendEquationAlpha = AddEquation;\n          }\n\n          if (premultipliedAlpha) {\n            switch (blending) {\n              case NormalBlending:\n                gl.blendFuncSeparate(gl.ONE, gl.ONE_MINUS_SRC_ALPHA, gl.ONE, gl.ONE_MINUS_SRC_ALPHA);\n                break;\n\n              case AdditiveBlending:\n                gl.blendFunc(gl.ONE, gl.ONE);\n                break;\n\n              case SubtractiveBlending:\n                gl.blendFuncSeparate(gl.ZERO, gl.ZERO, gl.ONE_MINUS_SRC_COLOR, gl.ONE_MINUS_SRC_ALPHA);\n                break;\n\n              case MultiplyBlending:\n                gl.blendFuncSeparate(gl.ZERO, gl.SRC_COLOR, gl.ZERO, gl.SRC_ALPHA);\n                break;\n\n              default:\n                console.error('THREE.WebGLState: Invalid blending: ', blending);\n                break;\n            }\n          } else {\n            switch (blending) {\n              case NormalBlending:\n                gl.blendFuncSeparate(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA, gl.ONE, gl.ONE_MINUS_SRC_ALPHA);\n                break;\n\n              case AdditiveBlending:\n                gl.blendFunc(gl.SRC_ALPHA, gl.ONE);\n                break;\n\n              case SubtractiveBlending:\n                gl.blendFunc(gl.ZERO, gl.ONE_MINUS_SRC_COLOR);\n                break;\n\n              case MultiplyBlending:\n                gl.blendFunc(gl.ZERO, gl.SRC_COLOR);\n                break;\n\n              default:\n                console.error('THREE.WebGLState: Invalid blending: ', blending);\n                break;\n            }\n          }\n\n          currentBlendSrc = null;\n          currentBlendDst = null;\n          currentBlendSrcAlpha = null;\n          currentBlendDstAlpha = null;\n          currentBlending = blending;\n          currentPremultipledAlpha = premultipliedAlpha;\n        }\n\n        return;\n      } // custom blending\n\n\n      blendEquationAlpha = blendEquationAlpha || blendEquation;\n      blendSrcAlpha = blendSrcAlpha || blendSrc;\n      blendDstAlpha = blendDstAlpha || blendDst;\n\n      if (blendEquation !== currentBlendEquation || blendEquationAlpha !== currentBlendEquationAlpha) {\n        gl.blendEquationSeparate(equationToGL[blendEquation], equationToGL[blendEquationAlpha]);\n        currentBlendEquation = blendEquation;\n        currentBlendEquationAlpha = blendEquationAlpha;\n      }\n\n      if (blendSrc !== currentBlendSrc || blendDst !== currentBlendDst || blendSrcAlpha !== currentBlendSrcAlpha || blendDstAlpha !== currentBlendDstAlpha) {\n        gl.blendFuncSeparate(factorToGL[blendSrc], factorToGL[blendDst], factorToGL[blendSrcAlpha], factorToGL[blendDstAlpha]);\n        currentBlendSrc = blendSrc;\n        currentBlendDst = blendDst;\n        currentBlendSrcAlpha = blendSrcAlpha;\n        currentBlendDstAlpha = blendDstAlpha;\n      }\n\n      currentBlending = blending;\n      currentPremultipledAlpha = null;\n    }\n\n    function setMaterial(material, frontFaceCW) {\n      material.side === DoubleSide ? disable(gl.CULL_FACE) : enable(gl.CULL_FACE);\n      var flipSided = material.side === BackSide;\n      if (frontFaceCW) flipSided = !flipSided;\n      setFlipSided(flipSided);\n      material.blending === NormalBlending && material.transparent === false ? setBlending(NoBlending) : setBlending(material.blending, material.blendEquation, material.blendSrc, material.blendDst, material.blendEquationAlpha, material.blendSrcAlpha, material.blendDstAlpha, material.premultipliedAlpha);\n      depthBuffer.setFunc(material.depthFunc);\n      depthBuffer.setTest(material.depthTest);\n      depthBuffer.setMask(material.depthWrite);\n      colorBuffer.setMask(material.colorWrite);\n      var stencilWrite = material.stencilWrite;\n      stencilBuffer.setTest(stencilWrite);\n\n      if (stencilWrite) {\n        stencilBuffer.setMask(material.stencilWriteMask);\n        stencilBuffer.setFunc(material.stencilFunc, material.stencilRef, material.stencilFuncMask);\n        stencilBuffer.setOp(material.stencilFail, material.stencilZFail, material.stencilZPass);\n      }\n\n      setPolygonOffset(material.polygonOffset, material.polygonOffsetFactor, material.polygonOffsetUnits);\n      material.alphaToCoverage === true ? enable(gl.SAMPLE_ALPHA_TO_COVERAGE) : disable(gl.SAMPLE_ALPHA_TO_COVERAGE);\n    } //\n\n\n    function setFlipSided(flipSided) {\n      if (currentFlipSided !== flipSided) {\n        if (flipSided) {\n          gl.frontFace(gl.CW);\n        } else {\n          gl.frontFace(gl.CCW);\n        }\n\n        currentFlipSided = flipSided;\n      }\n    }\n\n    function setCullFace(cullFace) {\n      if (cullFace !== CullFaceNone) {\n        enable(gl.CULL_FACE);\n\n        if (cullFace !== currentCullFace) {\n          if (cullFace === CullFaceBack) {\n            gl.cullFace(gl.BACK);\n          } else if (cullFace === CullFaceFront) {\n            gl.cullFace(gl.FRONT);\n          } else {\n            gl.cullFace(gl.FRONT_AND_BACK);\n          }\n        }\n      } else {\n        disable(gl.CULL_FACE);\n      }\n\n      currentCullFace = cullFace;\n    }\n\n    function setLineWidth(width) {\n      if (width !== currentLineWidth) {\n        if (lineWidthAvailable) gl.lineWidth(width);\n        currentLineWidth = width;\n      }\n    }\n\n    function setPolygonOffset(polygonOffset, factor, units) {\n      if (polygonOffset) {\n        enable(gl.POLYGON_OFFSET_FILL);\n\n        if (currentPolygonOffsetFactor !== factor || currentPolygonOffsetUnits !== units) {\n          gl.polygonOffset(factor, units);\n          currentPolygonOffsetFactor = factor;\n          currentPolygonOffsetUnits = units;\n        }\n      } else {\n        disable(gl.POLYGON_OFFSET_FILL);\n      }\n    }\n\n    function setScissorTest(scissorTest) {\n      if (scissorTest) {\n        enable(gl.SCISSOR_TEST);\n      } else {\n        disable(gl.SCISSOR_TEST);\n      }\n    } // texture\n\n\n    function activeTexture(webglSlot) {\n      if (webglSlot === undefined) webglSlot = gl.TEXTURE0 + maxTextures - 1;\n\n      if (currentTextureSlot !== webglSlot) {\n        gl.activeTexture(webglSlot);\n        currentTextureSlot = webglSlot;\n      }\n    }\n\n    function bindTexture(webglType, webglTexture) {\n      if (currentTextureSlot === null) {\n        activeTexture();\n      }\n\n      var boundTexture = currentBoundTextures[currentTextureSlot];\n\n      if (boundTexture === undefined) {\n        boundTexture = {\n          type: undefined,\n          texture: undefined\n        };\n        currentBoundTextures[currentTextureSlot] = boundTexture;\n      }\n\n      if (boundTexture.type !== webglType || boundTexture.texture !== webglTexture) {\n        gl.bindTexture(webglType, webglTexture || emptyTextures[webglType]);\n        boundTexture.type = webglType;\n        boundTexture.texture = webglTexture;\n      }\n    }\n\n    function unbindTexture() {\n      var boundTexture = currentBoundTextures[currentTextureSlot];\n\n      if (boundTexture !== undefined && boundTexture.type !== undefined) {\n        gl.bindTexture(boundTexture.type, null);\n        boundTexture.type = undefined;\n        boundTexture.texture = undefined;\n      }\n    }\n\n    function compressedTexImage2D() {\n      try {\n        gl.compressedTexImage2D.apply(gl, arguments);\n      } catch (error) {\n        console.error('THREE.WebGLState:', error);\n      }\n    }\n\n    function texImage2D() {\n      try {\n        gl.texImage2D.apply(gl, arguments);\n      } catch (error) {\n        console.error('THREE.WebGLState:', error);\n      }\n    }\n\n    function texImage3D() {\n      try {\n        gl.texImage3D.apply(gl, arguments);\n      } catch (error) {\n        console.error('THREE.WebGLState:', error);\n      }\n    } //\n\n\n    function scissor(scissor) {\n      if (currentScissor.equals(scissor) === false) {\n        gl.scissor(scissor.x, scissor.y, scissor.z, scissor.w);\n        currentScissor.copy(scissor);\n      }\n    }\n\n    function viewport(viewport) {\n      if (currentViewport.equals(viewport) === false) {\n        gl.viewport(viewport.x, viewport.y, viewport.z, viewport.w);\n        currentViewport.copy(viewport);\n      }\n    } //\n\n\n    function reset() {\n      // reset state\n      gl.disable(gl.BLEND);\n      gl.disable(gl.CULL_FACE);\n      gl.disable(gl.DEPTH_TEST);\n      gl.disable(gl.POLYGON_OFFSET_FILL);\n      gl.disable(gl.SCISSOR_TEST);\n      gl.disable(gl.STENCIL_TEST);\n      gl.disable(gl.SAMPLE_ALPHA_TO_COVERAGE);\n      gl.blendEquation(gl.FUNC_ADD);\n      gl.blendFunc(gl.ONE, gl.ZERO);\n      gl.blendFuncSeparate(gl.ONE, gl.ZERO, gl.ONE, gl.ZERO);\n      gl.colorMask(true, true, true, true);\n      gl.clearColor(0, 0, 0, 0);\n      gl.depthMask(true);\n      gl.depthFunc(gl.LESS);\n      gl.clearDepth(1);\n      gl.stencilMask(0xffffffff);\n      gl.stencilFunc(gl.ALWAYS, 0, 0xffffffff);\n      gl.stencilOp(gl.KEEP, gl.KEEP, gl.KEEP);\n      gl.clearStencil(0);\n      gl.cullFace(gl.BACK);\n      gl.frontFace(gl.CCW);\n      gl.polygonOffset(0, 0);\n      gl.activeTexture(gl.TEXTURE0);\n      gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n\n      if (isWebGL2 === true) {\n        gl.bindFramebuffer(gl.DRAW_FRAMEBUFFER, null);\n        gl.bindFramebuffer(gl.READ_FRAMEBUFFER, null);\n      }\n\n      gl.useProgram(null);\n      gl.lineWidth(1);\n      gl.scissor(0, 0, gl.canvas.width, gl.canvas.height);\n      gl.viewport(0, 0, gl.canvas.width, gl.canvas.height); // reset internals\n\n      enabledCapabilities = {};\n      currentTextureSlot = null;\n      currentBoundTextures = {};\n      xrFramebuffer = null;\n      currentBoundFramebuffers = {};\n      currentProgram = null;\n      currentBlendingEnabled = false;\n      currentBlending = null;\n      currentBlendEquation = null;\n      currentBlendSrc = null;\n      currentBlendDst = null;\n      currentBlendEquationAlpha = null;\n      currentBlendSrcAlpha = null;\n      currentBlendDstAlpha = null;\n      currentPremultipledAlpha = false;\n      currentFlipSided = null;\n      currentCullFace = null;\n      currentLineWidth = null;\n      currentPolygonOffsetFactor = null;\n      currentPolygonOffsetUnits = null;\n      currentScissor.set(0, 0, gl.canvas.width, gl.canvas.height);\n      currentViewport.set(0, 0, gl.canvas.width, gl.canvas.height);\n      colorBuffer.reset();\n      depthBuffer.reset();\n      stencilBuffer.reset();\n    }\n\n    return {\n      buffers: {\n        color: colorBuffer,\n        depth: depthBuffer,\n        stencil: stencilBuffer\n      },\n      enable: enable,\n      disable: disable,\n      bindFramebuffer: bindFramebuffer,\n      bindXRFramebuffer: bindXRFramebuffer,\n      useProgram: useProgram,\n      setBlending: setBlending,\n      setMaterial: setMaterial,\n      setFlipSided: setFlipSided,\n      setCullFace: setCullFace,\n      setLineWidth: setLineWidth,\n      setPolygonOffset: setPolygonOffset,\n      setScissorTest: setScissorTest,\n      activeTexture: activeTexture,\n      bindTexture: bindTexture,\n      unbindTexture: unbindTexture,\n      compressedTexImage2D: compressedTexImage2D,\n      texImage2D: texImage2D,\n      texImage3D: texImage3D,\n      scissor: scissor,\n      viewport: viewport,\n      reset: reset\n    };\n  }\n\n  function WebGLTextures(_gl, extensions, state, properties, capabilities, utils, info) {\n    var _wrappingToGL, _filterToGL;\n\n    var isWebGL2 = capabilities.isWebGL2;\n    var maxTextures = capabilities.maxTextures;\n    var maxCubemapSize = capabilities.maxCubemapSize;\n    var maxTextureSize = capabilities.maxTextureSize;\n    var maxSamples = capabilities.maxSamples;\n\n    var _videoTextures = new WeakMap();\n\n    var _canvas; // cordova iOS (as of 5.0) still uses UIWebView, which provides OffscreenCanvas,\n    // also OffscreenCanvas.getContext(\"webgl\"), but not OffscreenCanvas.getContext(\"2d\")!\n    // Some implementations may only implement OffscreenCanvas partially (e.g. lacking 2d).\n\n\n    var useOffscreenCanvas = false;\n\n    try {\n      useOffscreenCanvas = typeof OffscreenCanvas !== 'undefined' && new OffscreenCanvas(1, 1).getContext('2d') !== null;\n    } catch (err) {// Ignore any errors\n    }\n\n    function createCanvas(width, height) {\n      // Use OffscreenCanvas when available. Specially needed in web workers\n      return useOffscreenCanvas ? new OffscreenCanvas(width, height) : createElementNS('canvas');\n    }\n\n    function resizeImage(image, needsPowerOfTwo, needsNewCanvas, maxSize) {\n      var scale = 1; // handle case if texture exceeds max size\n\n      if (image.width > maxSize || image.height > maxSize) {\n        scale = maxSize / Math.max(image.width, image.height);\n      } // only perform resize if necessary\n\n\n      if (scale < 1 || needsPowerOfTwo === true) {\n        // only perform resize for certain image types\n        if (typeof HTMLImageElement !== 'undefined' && image instanceof HTMLImageElement || typeof HTMLCanvasElement !== 'undefined' && image instanceof HTMLCanvasElement || typeof ImageBitmap !== 'undefined' && image instanceof ImageBitmap) {\n          var floor = needsPowerOfTwo ? floorPowerOfTwo : Math.floor;\n          var width = floor(scale * image.width);\n          var height = floor(scale * image.height);\n          if (_canvas === undefined) _canvas = createCanvas(width, height); // cube textures can't reuse the same canvas\n\n          var canvas = needsNewCanvas ? createCanvas(width, height) : _canvas;\n          canvas.width = width;\n          canvas.height = height;\n          var context = canvas.getContext('2d');\n          context.drawImage(image, 0, 0, width, height);\n          console.warn('THREE.WebGLRenderer: Texture has been resized from (' + image.width + 'x' + image.height + ') to (' + width + 'x' + height + ').');\n          return canvas;\n        } else {\n          if ('data' in image) {\n            console.warn('THREE.WebGLRenderer: Image in DataTexture is too big (' + image.width + 'x' + image.height + ').');\n          }\n\n          return image;\n        }\n      }\n\n      return image;\n    }\n\n    function isPowerOfTwo$1(image) {\n      return isPowerOfTwo(image.width) && isPowerOfTwo(image.height);\n    }\n\n    function textureNeedsPowerOfTwo(texture) {\n      if (isWebGL2) return false;\n      return texture.wrapS !== ClampToEdgeWrapping || texture.wrapT !== ClampToEdgeWrapping || texture.minFilter !== NearestFilter && texture.minFilter !== LinearFilter;\n    }\n\n    function textureNeedsGenerateMipmaps(texture, supportsMips) {\n      return texture.generateMipmaps && supportsMips && texture.minFilter !== NearestFilter && texture.minFilter !== LinearFilter;\n    }\n\n    function generateMipmap(target, texture, width, height) {\n      var depth = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 1;\n\n      _gl.generateMipmap(target);\n\n      var textureProperties = properties.get(texture);\n      textureProperties.__maxMipLevel = Math.log2(Math.max(width, height, depth));\n    }\n\n    function getInternalFormat(internalFormatName, glFormat, glType, encoding) {\n      if (isWebGL2 === false) return glFormat;\n\n      if (internalFormatName !== null) {\n        if (_gl[internalFormatName] !== undefined) return _gl[internalFormatName];\n        console.warn('THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format \\'' + internalFormatName + '\\'');\n      }\n\n      var internalFormat = glFormat;\n\n      if (glFormat === _gl.RED) {\n        if (glType === _gl.FLOAT) internalFormat = _gl.R32F;\n        if (glType === _gl.HALF_FLOAT) internalFormat = _gl.R16F;\n        if (glType === _gl.UNSIGNED_BYTE) internalFormat = _gl.R8;\n      }\n\n      if (glFormat === _gl.RGB) {\n        if (glType === _gl.FLOAT) internalFormat = _gl.RGB32F;\n        if (glType === _gl.HALF_FLOAT) internalFormat = _gl.RGB16F;\n        if (glType === _gl.UNSIGNED_BYTE) internalFormat = _gl.RGB8;\n      }\n\n      if (glFormat === _gl.RGBA) {\n        if (glType === _gl.FLOAT) internalFormat = _gl.RGBA32F;\n        if (glType === _gl.HALF_FLOAT) internalFormat = _gl.RGBA16F;\n        if (glType === _gl.UNSIGNED_BYTE) internalFormat = encoding === sRGBEncoding ? _gl.SRGB8_ALPHA8 : _gl.RGBA8;\n      }\n\n      if (internalFormat === _gl.R16F || internalFormat === _gl.R32F || internalFormat === _gl.RGBA16F || internalFormat === _gl.RGBA32F) {\n        extensions.get('EXT_color_buffer_float');\n      }\n\n      return internalFormat;\n    } // Fallback filters for non-power-of-2 textures\n\n\n    function filterFallback(f) {\n      if (f === NearestFilter || f === NearestMipmapNearestFilter || f === NearestMipmapLinearFilter) {\n        return _gl.NEAREST;\n      }\n\n      return _gl.LINEAR;\n    } //\n\n\n    function onTextureDispose(event) {\n      var texture = event.target;\n      texture.removeEventListener('dispose', onTextureDispose);\n      deallocateTexture(texture);\n\n      if (texture.isVideoTexture) {\n        _videoTextures.delete(texture);\n      }\n\n      info.memory.textures--;\n    }\n\n    function onRenderTargetDispose(event) {\n      var renderTarget = event.target;\n      renderTarget.removeEventListener('dispose', onRenderTargetDispose);\n      deallocateRenderTarget(renderTarget);\n    } //\n\n\n    function deallocateTexture(texture) {\n      var textureProperties = properties.get(texture);\n      if (textureProperties.__webglInit === undefined) return;\n\n      _gl.deleteTexture(textureProperties.__webglTexture);\n\n      properties.remove(texture);\n    }\n\n    function deallocateRenderTarget(renderTarget) {\n      var texture = renderTarget.texture;\n      var renderTargetProperties = properties.get(renderTarget);\n      var textureProperties = properties.get(texture);\n      if (!renderTarget) return;\n\n      if (textureProperties.__webglTexture !== undefined) {\n        _gl.deleteTexture(textureProperties.__webglTexture);\n\n        info.memory.textures--;\n      }\n\n      if (renderTarget.depthTexture) {\n        renderTarget.depthTexture.dispose();\n      }\n\n      if (renderTarget.isWebGLCubeRenderTarget) {\n        for (var _i121 = 0; _i121 < 6; _i121++) {\n          _gl.deleteFramebuffer(renderTargetProperties.__webglFramebuffer[_i121]);\n\n          if (renderTargetProperties.__webglDepthbuffer) _gl.deleteRenderbuffer(renderTargetProperties.__webglDepthbuffer[_i121]);\n        }\n      } else {\n        _gl.deleteFramebuffer(renderTargetProperties.__webglFramebuffer);\n\n        if (renderTargetProperties.__webglDepthbuffer) _gl.deleteRenderbuffer(renderTargetProperties.__webglDepthbuffer);\n        if (renderTargetProperties.__webglMultisampledFramebuffer) _gl.deleteFramebuffer(renderTargetProperties.__webglMultisampledFramebuffer);\n        if (renderTargetProperties.__webglColorRenderbuffer) _gl.deleteRenderbuffer(renderTargetProperties.__webglColorRenderbuffer);\n        if (renderTargetProperties.__webglDepthRenderbuffer) _gl.deleteRenderbuffer(renderTargetProperties.__webglDepthRenderbuffer);\n      }\n\n      if (renderTarget.isWebGLMultipleRenderTargets) {\n        for (var _i122 = 0, il = texture.length; _i122 < il; _i122++) {\n          var attachmentProperties = properties.get(texture[_i122]);\n\n          if (attachmentProperties.__webglTexture) {\n            _gl.deleteTexture(attachmentProperties.__webglTexture);\n\n            info.memory.textures--;\n          }\n\n          properties.remove(texture[_i122]);\n        }\n      }\n\n      properties.remove(texture);\n      properties.remove(renderTarget);\n    } //\n\n\n    var textureUnits = 0;\n\n    function resetTextureUnits() {\n      textureUnits = 0;\n    }\n\n    function allocateTextureUnit() {\n      var textureUnit = textureUnits;\n\n      if (textureUnit >= maxTextures) {\n        console.warn('THREE.WebGLTextures: Trying to use ' + textureUnit + ' texture units while this GPU supports only ' + maxTextures);\n      }\n\n      textureUnits += 1;\n      return textureUnit;\n    } //\n\n\n    function setTexture2D(texture, slot) {\n      var textureProperties = properties.get(texture);\n      if (texture.isVideoTexture) updateVideoTexture(texture);\n\n      if (texture.version > 0 && textureProperties.__version !== texture.version) {\n        var image = texture.image;\n\n        if (image === undefined) {\n          console.warn('THREE.WebGLRenderer: Texture marked for update but image is undefined');\n        } else if (image.complete === false) {\n          console.warn('THREE.WebGLRenderer: Texture marked for update but image is incomplete');\n        } else {\n          uploadTexture(textureProperties, texture, slot);\n          return;\n        }\n      }\n\n      state.activeTexture(_gl.TEXTURE0 + slot);\n      state.bindTexture(_gl.TEXTURE_2D, textureProperties.__webglTexture);\n    }\n\n    function setTexture2DArray(texture, slot) {\n      var textureProperties = properties.get(texture);\n\n      if (texture.version > 0 && textureProperties.__version !== texture.version) {\n        uploadTexture(textureProperties, texture, slot);\n        return;\n      }\n\n      state.activeTexture(_gl.TEXTURE0 + slot);\n      state.bindTexture(_gl.TEXTURE_2D_ARRAY, textureProperties.__webglTexture);\n    }\n\n    function setTexture3D(texture, slot) {\n      var textureProperties = properties.get(texture);\n\n      if (texture.version > 0 && textureProperties.__version !== texture.version) {\n        uploadTexture(textureProperties, texture, slot);\n        return;\n      }\n\n      state.activeTexture(_gl.TEXTURE0 + slot);\n      state.bindTexture(_gl.TEXTURE_3D, textureProperties.__webglTexture);\n    }\n\n    function setTextureCube(texture, slot) {\n      var textureProperties = properties.get(texture);\n\n      if (texture.version > 0 && textureProperties.__version !== texture.version) {\n        uploadCubeTexture(textureProperties, texture, slot);\n        return;\n      }\n\n      state.activeTexture(_gl.TEXTURE0 + slot);\n      state.bindTexture(_gl.TEXTURE_CUBE_MAP, textureProperties.__webglTexture);\n    }\n\n    var wrappingToGL = (_wrappingToGL = {}, _defineProperty(_wrappingToGL, RepeatWrapping, _gl.REPEAT), _defineProperty(_wrappingToGL, ClampToEdgeWrapping, _gl.CLAMP_TO_EDGE), _defineProperty(_wrappingToGL, MirroredRepeatWrapping, _gl.MIRRORED_REPEAT), _wrappingToGL);\n    var filterToGL = (_filterToGL = {}, _defineProperty(_filterToGL, NearestFilter, _gl.NEAREST), _defineProperty(_filterToGL, NearestMipmapNearestFilter, _gl.NEAREST_MIPMAP_NEAREST), _defineProperty(_filterToGL, NearestMipmapLinearFilter, _gl.NEAREST_MIPMAP_LINEAR), _defineProperty(_filterToGL, LinearFilter, _gl.LINEAR), _defineProperty(_filterToGL, LinearMipmapNearestFilter, _gl.LINEAR_MIPMAP_NEAREST), _defineProperty(_filterToGL, LinearMipmapLinearFilter, _gl.LINEAR_MIPMAP_LINEAR), _filterToGL);\n\n    function setTextureParameters(textureType, texture, supportsMips) {\n      if (supportsMips) {\n        _gl.texParameteri(textureType, _gl.TEXTURE_WRAP_S, wrappingToGL[texture.wrapS]);\n\n        _gl.texParameteri(textureType, _gl.TEXTURE_WRAP_T, wrappingToGL[texture.wrapT]);\n\n        if (textureType === _gl.TEXTURE_3D || textureType === _gl.TEXTURE_2D_ARRAY) {\n          _gl.texParameteri(textureType, _gl.TEXTURE_WRAP_R, wrappingToGL[texture.wrapR]);\n        }\n\n        _gl.texParameteri(textureType, _gl.TEXTURE_MAG_FILTER, filterToGL[texture.magFilter]);\n\n        _gl.texParameteri(textureType, _gl.TEXTURE_MIN_FILTER, filterToGL[texture.minFilter]);\n      } else {\n        _gl.texParameteri(textureType, _gl.TEXTURE_WRAP_S, _gl.CLAMP_TO_EDGE);\n\n        _gl.texParameteri(textureType, _gl.TEXTURE_WRAP_T, _gl.CLAMP_TO_EDGE);\n\n        if (textureType === _gl.TEXTURE_3D || textureType === _gl.TEXTURE_2D_ARRAY) {\n          _gl.texParameteri(textureType, _gl.TEXTURE_WRAP_R, _gl.CLAMP_TO_EDGE);\n        }\n\n        if (texture.wrapS !== ClampToEdgeWrapping || texture.wrapT !== ClampToEdgeWrapping) {\n          console.warn('THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping.');\n        }\n\n        _gl.texParameteri(textureType, _gl.TEXTURE_MAG_FILTER, filterFallback(texture.magFilter));\n\n        _gl.texParameteri(textureType, _gl.TEXTURE_MIN_FILTER, filterFallback(texture.minFilter));\n\n        if (texture.minFilter !== NearestFilter && texture.minFilter !== LinearFilter) {\n          console.warn('THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter.');\n        }\n      }\n\n      if (extensions.has('EXT_texture_filter_anisotropic') === true) {\n        var extension = extensions.get('EXT_texture_filter_anisotropic');\n        if (texture.type === FloatType && extensions.has('OES_texture_float_linear') === false) return; // verify extension for WebGL 1 and WebGL 2\n\n        if (isWebGL2 === false && texture.type === HalfFloatType && extensions.has('OES_texture_half_float_linear') === false) return; // verify extension for WebGL 1 only\n\n        if (texture.anisotropy > 1 || properties.get(texture).__currentAnisotropy) {\n          _gl.texParameterf(textureType, extension.TEXTURE_MAX_ANISOTROPY_EXT, Math.min(texture.anisotropy, capabilities.getMaxAnisotropy()));\n\n          properties.get(texture).__currentAnisotropy = texture.anisotropy;\n        }\n      }\n    }\n\n    function initTexture(textureProperties, texture) {\n      if (textureProperties.__webglInit === undefined) {\n        textureProperties.__webglInit = true;\n        texture.addEventListener('dispose', onTextureDispose);\n        textureProperties.__webglTexture = _gl.createTexture();\n        info.memory.textures++;\n      }\n    }\n\n    function uploadTexture(textureProperties, texture, slot) {\n      var textureType = _gl.TEXTURE_2D;\n      if (texture.isDataTexture2DArray) textureType = _gl.TEXTURE_2D_ARRAY;\n      if (texture.isDataTexture3D) textureType = _gl.TEXTURE_3D;\n      initTexture(textureProperties, texture);\n      state.activeTexture(_gl.TEXTURE0 + slot);\n      state.bindTexture(textureType, textureProperties.__webglTexture);\n\n      _gl.pixelStorei(_gl.UNPACK_FLIP_Y_WEBGL, texture.flipY);\n\n      _gl.pixelStorei(_gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, texture.premultiplyAlpha);\n\n      _gl.pixelStorei(_gl.UNPACK_ALIGNMENT, texture.unpackAlignment);\n\n      _gl.pixelStorei(_gl.UNPACK_COLORSPACE_CONVERSION_WEBGL, _gl.NONE);\n\n      var needsPowerOfTwo = textureNeedsPowerOfTwo(texture) && isPowerOfTwo$1(texture.image) === false;\n      var image = resizeImage(texture.image, needsPowerOfTwo, false, maxTextureSize);\n      var supportsMips = isPowerOfTwo$1(image) || isWebGL2,\n          glFormat = utils.convert(texture.format);\n      var glType = utils.convert(texture.type),\n          glInternalFormat = getInternalFormat(texture.internalFormat, glFormat, glType, texture.encoding);\n      setTextureParameters(textureType, texture, supportsMips);\n      var mipmap;\n      var mipmaps = texture.mipmaps;\n\n      if (texture.isDepthTexture) {\n        // populate depth texture with dummy data\n        glInternalFormat = _gl.DEPTH_COMPONENT;\n\n        if (isWebGL2) {\n          if (texture.type === FloatType) {\n            glInternalFormat = _gl.DEPTH_COMPONENT32F;\n          } else if (texture.type === UnsignedIntType) {\n            glInternalFormat = _gl.DEPTH_COMPONENT24;\n          } else if (texture.type === UnsignedInt248Type) {\n            glInternalFormat = _gl.DEPTH24_STENCIL8;\n          } else {\n            glInternalFormat = _gl.DEPTH_COMPONENT16; // WebGL2 requires sized internalformat for glTexImage2D\n          }\n        } else {\n          if (texture.type === FloatType) {\n            console.error('WebGLRenderer: Floating point depth texture requires WebGL2.');\n          }\n        } // validation checks for WebGL 1\n\n\n        if (texture.format === DepthFormat && glInternalFormat === _gl.DEPTH_COMPONENT) {\n          // The error INVALID_OPERATION is generated by texImage2D if format and internalformat are\n          // DEPTH_COMPONENT and type is not UNSIGNED_SHORT or UNSIGNED_INT\n          // (https://www.khronos.org/registry/webgl/extensions/WEBGL_depth_texture/)\n          if (texture.type !== UnsignedShortType && texture.type !== UnsignedIntType) {\n            console.warn('THREE.WebGLRenderer: Use UnsignedShortType or UnsignedIntType for DepthFormat DepthTexture.');\n            texture.type = UnsignedShortType;\n            glType = utils.convert(texture.type);\n          }\n        }\n\n        if (texture.format === DepthStencilFormat && glInternalFormat === _gl.DEPTH_COMPONENT) {\n          // Depth stencil textures need the DEPTH_STENCIL internal format\n          // (https://www.khronos.org/registry/webgl/extensions/WEBGL_depth_texture/)\n          glInternalFormat = _gl.DEPTH_STENCIL; // The error INVALID_OPERATION is generated by texImage2D if format and internalformat are\n          // DEPTH_STENCIL and type is not UNSIGNED_INT_24_8_WEBGL.\n          // (https://www.khronos.org/registry/webgl/extensions/WEBGL_depth_texture/)\n\n          if (texture.type !== UnsignedInt248Type) {\n            console.warn('THREE.WebGLRenderer: Use UnsignedInt248Type for DepthStencilFormat DepthTexture.');\n            texture.type = UnsignedInt248Type;\n            glType = utils.convert(texture.type);\n          }\n        } //\n\n\n        state.texImage2D(_gl.TEXTURE_2D, 0, glInternalFormat, image.width, image.height, 0, glFormat, glType, null);\n      } else if (texture.isDataTexture) {\n        // use manually created mipmaps if available\n        // if there are no manual mipmaps\n        // set 0 level mipmap and then use GL to generate other mipmap levels\n        if (mipmaps.length > 0 && supportsMips) {\n          for (var _i123 = 0, il = mipmaps.length; _i123 < il; _i123++) {\n            mipmap = mipmaps[_i123];\n            state.texImage2D(_gl.TEXTURE_2D, _i123, glInternalFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data);\n          }\n\n          texture.generateMipmaps = false;\n          textureProperties.__maxMipLevel = mipmaps.length - 1;\n        } else {\n          state.texImage2D(_gl.TEXTURE_2D, 0, glInternalFormat, image.width, image.height, 0, glFormat, glType, image.data);\n          textureProperties.__maxMipLevel = 0;\n        }\n      } else if (texture.isCompressedTexture) {\n        for (var _i124 = 0, _il9 = mipmaps.length; _i124 < _il9; _i124++) {\n          mipmap = mipmaps[_i124];\n\n          if (texture.format !== RGBAFormat && texture.format !== RGBFormat) {\n            if (glFormat !== null) {\n              state.compressedTexImage2D(_gl.TEXTURE_2D, _i124, glInternalFormat, mipmap.width, mipmap.height, 0, mipmap.data);\n            } else {\n              console.warn('THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()');\n            }\n          } else {\n            state.texImage2D(_gl.TEXTURE_2D, _i124, glInternalFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data);\n          }\n        }\n\n        textureProperties.__maxMipLevel = mipmaps.length - 1;\n      } else if (texture.isDataTexture2DArray) {\n        state.texImage3D(_gl.TEXTURE_2D_ARRAY, 0, glInternalFormat, image.width, image.height, image.depth, 0, glFormat, glType, image.data);\n        textureProperties.__maxMipLevel = 0;\n      } else if (texture.isDataTexture3D) {\n        state.texImage3D(_gl.TEXTURE_3D, 0, glInternalFormat, image.width, image.height, image.depth, 0, glFormat, glType, image.data);\n        textureProperties.__maxMipLevel = 0;\n      } else {\n        // regular Texture (image, video, canvas)\n        // use manually created mipmaps if available\n        // if there are no manual mipmaps\n        // set 0 level mipmap and then use GL to generate other mipmap levels\n        if (mipmaps.length > 0 && supportsMips) {\n          for (var _i125 = 0, _il10 = mipmaps.length; _i125 < _il10; _i125++) {\n            mipmap = mipmaps[_i125];\n            state.texImage2D(_gl.TEXTURE_2D, _i125, glInternalFormat, glFormat, glType, mipmap);\n          }\n\n          texture.generateMipmaps = false;\n          textureProperties.__maxMipLevel = mipmaps.length - 1;\n        } else {\n          state.texImage2D(_gl.TEXTURE_2D, 0, glInternalFormat, glFormat, glType, image);\n          textureProperties.__maxMipLevel = 0;\n        }\n      }\n\n      if (textureNeedsGenerateMipmaps(texture, supportsMips)) {\n        generateMipmap(textureType, texture, image.width, image.height);\n      }\n\n      textureProperties.__version = texture.version;\n      if (texture.onUpdate) texture.onUpdate(texture);\n    }\n\n    function uploadCubeTexture(textureProperties, texture, slot) {\n      if (texture.image.length !== 6) return;\n      initTexture(textureProperties, texture);\n      state.activeTexture(_gl.TEXTURE0 + slot);\n      state.bindTexture(_gl.TEXTURE_CUBE_MAP, textureProperties.__webglTexture);\n\n      _gl.pixelStorei(_gl.UNPACK_FLIP_Y_WEBGL, texture.flipY);\n\n      _gl.pixelStorei(_gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, texture.premultiplyAlpha);\n\n      _gl.pixelStorei(_gl.UNPACK_ALIGNMENT, texture.unpackAlignment);\n\n      _gl.pixelStorei(_gl.UNPACK_COLORSPACE_CONVERSION_WEBGL, _gl.NONE);\n\n      var isCompressed = texture && (texture.isCompressedTexture || texture.image[0].isCompressedTexture);\n      var isDataTexture = texture.image[0] && texture.image[0].isDataTexture;\n      var cubeImage = [];\n\n      for (var _i126 = 0; _i126 < 6; _i126++) {\n        if (!isCompressed && !isDataTexture) {\n          cubeImage[_i126] = resizeImage(texture.image[_i126], false, true, maxCubemapSize);\n        } else {\n          cubeImage[_i126] = isDataTexture ? texture.image[_i126].image : texture.image[_i126];\n        }\n      }\n\n      var image = cubeImage[0],\n          supportsMips = isPowerOfTwo$1(image) || isWebGL2,\n          glFormat = utils.convert(texture.format),\n          glType = utils.convert(texture.type),\n          glInternalFormat = getInternalFormat(texture.internalFormat, glFormat, glType, texture.encoding);\n      setTextureParameters(_gl.TEXTURE_CUBE_MAP, texture, supportsMips);\n      var mipmaps;\n\n      if (isCompressed) {\n        for (var _i127 = 0; _i127 < 6; _i127++) {\n          mipmaps = cubeImage[_i127].mipmaps;\n\n          for (var j = 0; j < mipmaps.length; j++) {\n            var mipmap = mipmaps[j];\n\n            if (texture.format !== RGBAFormat && texture.format !== RGBFormat) {\n              if (glFormat !== null) {\n                state.compressedTexImage2D(_gl.TEXTURE_CUBE_MAP_POSITIVE_X + _i127, j, glInternalFormat, mipmap.width, mipmap.height, 0, mipmap.data);\n              } else {\n                console.warn('THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()');\n              }\n            } else {\n              state.texImage2D(_gl.TEXTURE_CUBE_MAP_POSITIVE_X + _i127, j, glInternalFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data);\n            }\n          }\n        }\n\n        textureProperties.__maxMipLevel = mipmaps.length - 1;\n      } else {\n        mipmaps = texture.mipmaps;\n\n        for (var _i128 = 0; _i128 < 6; _i128++) {\n          if (isDataTexture) {\n            state.texImage2D(_gl.TEXTURE_CUBE_MAP_POSITIVE_X + _i128, 0, glInternalFormat, cubeImage[_i128].width, cubeImage[_i128].height, 0, glFormat, glType, cubeImage[_i128].data);\n\n            for (var _j3 = 0; _j3 < mipmaps.length; _j3++) {\n              var _mipmap = mipmaps[_j3];\n              var mipmapImage = _mipmap.image[_i128].image;\n              state.texImage2D(_gl.TEXTURE_CUBE_MAP_POSITIVE_X + _i128, _j3 + 1, glInternalFormat, mipmapImage.width, mipmapImage.height, 0, glFormat, glType, mipmapImage.data);\n            }\n          } else {\n            state.texImage2D(_gl.TEXTURE_CUBE_MAP_POSITIVE_X + _i128, 0, glInternalFormat, glFormat, glType, cubeImage[_i128]);\n\n            for (var _j4 = 0; _j4 < mipmaps.length; _j4++) {\n              var _mipmap2 = mipmaps[_j4];\n              state.texImage2D(_gl.TEXTURE_CUBE_MAP_POSITIVE_X + _i128, _j4 + 1, glInternalFormat, glFormat, glType, _mipmap2.image[_i128]);\n            }\n          }\n        }\n\n        textureProperties.__maxMipLevel = mipmaps.length;\n      }\n\n      if (textureNeedsGenerateMipmaps(texture, supportsMips)) {\n        // We assume images for cube map have the same size.\n        generateMipmap(_gl.TEXTURE_CUBE_MAP, texture, image.width, image.height);\n      }\n\n      textureProperties.__version = texture.version;\n      if (texture.onUpdate) texture.onUpdate(texture);\n    } // Render targets\n    // Setup storage for target texture and bind it to correct framebuffer\n\n\n    function setupFrameBufferTexture(framebuffer, renderTarget, texture, attachment, textureTarget) {\n      var glFormat = utils.convert(texture.format);\n      var glType = utils.convert(texture.type);\n      var glInternalFormat = getInternalFormat(texture.internalFormat, glFormat, glType, texture.encoding);\n\n      if (textureTarget === _gl.TEXTURE_3D || textureTarget === _gl.TEXTURE_2D_ARRAY) {\n        state.texImage3D(textureTarget, 0, glInternalFormat, renderTarget.width, renderTarget.height, renderTarget.depth, 0, glFormat, glType, null);\n      } else {\n        state.texImage2D(textureTarget, 0, glInternalFormat, renderTarget.width, renderTarget.height, 0, glFormat, glType, null);\n      }\n\n      state.bindFramebuffer(_gl.FRAMEBUFFER, framebuffer);\n\n      _gl.framebufferTexture2D(_gl.FRAMEBUFFER, attachment, textureTarget, properties.get(texture).__webglTexture, 0);\n\n      state.bindFramebuffer(_gl.FRAMEBUFFER, null);\n    } // Setup storage for internal depth/stencil buffers and bind to correct framebuffer\n\n\n    function setupRenderBufferStorage(renderbuffer, renderTarget, isMultisample) {\n      _gl.bindRenderbuffer(_gl.RENDERBUFFER, renderbuffer);\n\n      if (renderTarget.depthBuffer && !renderTarget.stencilBuffer) {\n        var glInternalFormat = _gl.DEPTH_COMPONENT16;\n\n        if (isMultisample) {\n          var depthTexture = renderTarget.depthTexture;\n\n          if (depthTexture && depthTexture.isDepthTexture) {\n            if (depthTexture.type === FloatType) {\n              glInternalFormat = _gl.DEPTH_COMPONENT32F;\n            } else if (depthTexture.type === UnsignedIntType) {\n              glInternalFormat = _gl.DEPTH_COMPONENT24;\n            }\n          }\n\n          var samples = getRenderTargetSamples(renderTarget);\n\n          _gl.renderbufferStorageMultisample(_gl.RENDERBUFFER, samples, glInternalFormat, renderTarget.width, renderTarget.height);\n        } else {\n          _gl.renderbufferStorage(_gl.RENDERBUFFER, glInternalFormat, renderTarget.width, renderTarget.height);\n        }\n\n        _gl.framebufferRenderbuffer(_gl.FRAMEBUFFER, _gl.DEPTH_ATTACHMENT, _gl.RENDERBUFFER, renderbuffer);\n      } else if (renderTarget.depthBuffer && renderTarget.stencilBuffer) {\n        if (isMultisample) {\n          var _samples = getRenderTargetSamples(renderTarget);\n\n          _gl.renderbufferStorageMultisample(_gl.RENDERBUFFER, _samples, _gl.DEPTH24_STENCIL8, renderTarget.width, renderTarget.height);\n        } else {\n          _gl.renderbufferStorage(_gl.RENDERBUFFER, _gl.DEPTH_STENCIL, renderTarget.width, renderTarget.height);\n        }\n\n        _gl.framebufferRenderbuffer(_gl.FRAMEBUFFER, _gl.DEPTH_STENCIL_ATTACHMENT, _gl.RENDERBUFFER, renderbuffer);\n      } else {\n        // Use the first texture for MRT so far\n        var texture = renderTarget.isWebGLMultipleRenderTargets === true ? renderTarget.texture[0] : renderTarget.texture;\n        var glFormat = utils.convert(texture.format);\n        var glType = utils.convert(texture.type);\n\n        var _glInternalFormat = getInternalFormat(texture.internalFormat, glFormat, glType, texture.encoding);\n\n        if (isMultisample) {\n          var _samples2 = getRenderTargetSamples(renderTarget);\n\n          _gl.renderbufferStorageMultisample(_gl.RENDERBUFFER, _samples2, _glInternalFormat, renderTarget.width, renderTarget.height);\n        } else {\n          _gl.renderbufferStorage(_gl.RENDERBUFFER, _glInternalFormat, renderTarget.width, renderTarget.height);\n        }\n      }\n\n      _gl.bindRenderbuffer(_gl.RENDERBUFFER, null);\n    } // Setup resources for a Depth Texture for a FBO (needs an extension)\n\n\n    function setupDepthTexture(framebuffer, renderTarget) {\n      var isCube = renderTarget && renderTarget.isWebGLCubeRenderTarget;\n      if (isCube) throw new Error('Depth Texture with cube render targets is not supported');\n      state.bindFramebuffer(_gl.FRAMEBUFFER, framebuffer);\n\n      if (!(renderTarget.depthTexture && renderTarget.depthTexture.isDepthTexture)) {\n        throw new Error('renderTarget.depthTexture must be an instance of THREE.DepthTexture');\n      } // upload an empty depth texture with framebuffer size\n\n\n      if (!properties.get(renderTarget.depthTexture).__webglTexture || renderTarget.depthTexture.image.width !== renderTarget.width || renderTarget.depthTexture.image.height !== renderTarget.height) {\n        renderTarget.depthTexture.image.width = renderTarget.width;\n        renderTarget.depthTexture.image.height = renderTarget.height;\n        renderTarget.depthTexture.needsUpdate = true;\n      }\n\n      setTexture2D(renderTarget.depthTexture, 0);\n\n      var webglDepthTexture = properties.get(renderTarget.depthTexture).__webglTexture;\n\n      if (renderTarget.depthTexture.format === DepthFormat) {\n        _gl.framebufferTexture2D(_gl.FRAMEBUFFER, _gl.DEPTH_ATTACHMENT, _gl.TEXTURE_2D, webglDepthTexture, 0);\n      } else if (renderTarget.depthTexture.format === DepthStencilFormat) {\n        _gl.framebufferTexture2D(_gl.FRAMEBUFFER, _gl.DEPTH_STENCIL_ATTACHMENT, _gl.TEXTURE_2D, webglDepthTexture, 0);\n      } else {\n        throw new Error('Unknown depthTexture format');\n      }\n    } // Setup GL resources for a non-texture depth buffer\n\n\n    function setupDepthRenderbuffer(renderTarget) {\n      var renderTargetProperties = properties.get(renderTarget);\n      var isCube = renderTarget.isWebGLCubeRenderTarget === true;\n\n      if (renderTarget.depthTexture) {\n        if (isCube) throw new Error('target.depthTexture not supported in Cube render targets');\n        setupDepthTexture(renderTargetProperties.__webglFramebuffer, renderTarget);\n      } else {\n        if (isCube) {\n          renderTargetProperties.__webglDepthbuffer = [];\n\n          for (var _i129 = 0; _i129 < 6; _i129++) {\n            state.bindFramebuffer(_gl.FRAMEBUFFER, renderTargetProperties.__webglFramebuffer[_i129]);\n            renderTargetProperties.__webglDepthbuffer[_i129] = _gl.createRenderbuffer();\n            setupRenderBufferStorage(renderTargetProperties.__webglDepthbuffer[_i129], renderTarget, false);\n          }\n        } else {\n          state.bindFramebuffer(_gl.FRAMEBUFFER, renderTargetProperties.__webglFramebuffer);\n          renderTargetProperties.__webglDepthbuffer = _gl.createRenderbuffer();\n          setupRenderBufferStorage(renderTargetProperties.__webglDepthbuffer, renderTarget, false);\n        }\n      }\n\n      state.bindFramebuffer(_gl.FRAMEBUFFER, null);\n    } // Set up GL resources for the render target\n\n\n    function setupRenderTarget(renderTarget) {\n      var texture = renderTarget.texture;\n      var renderTargetProperties = properties.get(renderTarget);\n      var textureProperties = properties.get(texture);\n      renderTarget.addEventListener('dispose', onRenderTargetDispose);\n\n      if (renderTarget.isWebGLMultipleRenderTargets !== true) {\n        textureProperties.__webglTexture = _gl.createTexture();\n        textureProperties.__version = texture.version;\n        info.memory.textures++;\n      }\n\n      var isCube = renderTarget.isWebGLCubeRenderTarget === true;\n      var isMultipleRenderTargets = renderTarget.isWebGLMultipleRenderTargets === true;\n      var isMultisample = renderTarget.isWebGLMultisampleRenderTarget === true;\n      var isRenderTarget3D = texture.isDataTexture3D || texture.isDataTexture2DArray;\n      var supportsMips = isPowerOfTwo$1(renderTarget) || isWebGL2; // Handles WebGL2 RGBFormat fallback - #18858\n\n      if (isWebGL2 && texture.format === RGBFormat && (texture.type === FloatType || texture.type === HalfFloatType)) {\n        texture.format = RGBAFormat;\n        console.warn('THREE.WebGLRenderer: Rendering to textures with RGB format is not supported. Using RGBA format instead.');\n      } // Setup framebuffer\n\n\n      if (isCube) {\n        renderTargetProperties.__webglFramebuffer = [];\n\n        for (var _i130 = 0; _i130 < 6; _i130++) {\n          renderTargetProperties.__webglFramebuffer[_i130] = _gl.createFramebuffer();\n        }\n      } else {\n        renderTargetProperties.__webglFramebuffer = _gl.createFramebuffer();\n\n        if (isMultipleRenderTargets) {\n          if (capabilities.drawBuffers) {\n            var textures = renderTarget.texture;\n\n            for (var _i131 = 0, il = textures.length; _i131 < il; _i131++) {\n              var attachmentProperties = properties.get(textures[_i131]);\n\n              if (attachmentProperties.__webglTexture === undefined) {\n                attachmentProperties.__webglTexture = _gl.createTexture();\n                info.memory.textures++;\n              }\n            }\n          } else {\n            console.warn('THREE.WebGLRenderer: WebGLMultipleRenderTargets can only be used with WebGL2 or WEBGL_draw_buffers extension.');\n          }\n        } else if (isMultisample) {\n          if (isWebGL2) {\n            renderTargetProperties.__webglMultisampledFramebuffer = _gl.createFramebuffer();\n            renderTargetProperties.__webglColorRenderbuffer = _gl.createRenderbuffer();\n\n            _gl.bindRenderbuffer(_gl.RENDERBUFFER, renderTargetProperties.__webglColorRenderbuffer);\n\n            var glFormat = utils.convert(texture.format);\n            var glType = utils.convert(texture.type);\n            var glInternalFormat = getInternalFormat(texture.internalFormat, glFormat, glType, texture.encoding);\n            var samples = getRenderTargetSamples(renderTarget);\n\n            _gl.renderbufferStorageMultisample(_gl.RENDERBUFFER, samples, glInternalFormat, renderTarget.width, renderTarget.height);\n\n            state.bindFramebuffer(_gl.FRAMEBUFFER, renderTargetProperties.__webglMultisampledFramebuffer);\n\n            _gl.framebufferRenderbuffer(_gl.FRAMEBUFFER, _gl.COLOR_ATTACHMENT0, _gl.RENDERBUFFER, renderTargetProperties.__webglColorRenderbuffer);\n\n            _gl.bindRenderbuffer(_gl.RENDERBUFFER, null);\n\n            if (renderTarget.depthBuffer) {\n              renderTargetProperties.__webglDepthRenderbuffer = _gl.createRenderbuffer();\n              setupRenderBufferStorage(renderTargetProperties.__webglDepthRenderbuffer, renderTarget, true);\n            }\n\n            state.bindFramebuffer(_gl.FRAMEBUFFER, null);\n          } else {\n            console.warn('THREE.WebGLRenderer: WebGLMultisampleRenderTarget can only be used with WebGL2.');\n          }\n        }\n      } // Setup color buffer\n\n\n      if (isCube) {\n        state.bindTexture(_gl.TEXTURE_CUBE_MAP, textureProperties.__webglTexture);\n        setTextureParameters(_gl.TEXTURE_CUBE_MAP, texture, supportsMips);\n\n        for (var _i132 = 0; _i132 < 6; _i132++) {\n          setupFrameBufferTexture(renderTargetProperties.__webglFramebuffer[_i132], renderTarget, texture, _gl.COLOR_ATTACHMENT0, _gl.TEXTURE_CUBE_MAP_POSITIVE_X + _i132);\n        }\n\n        if (textureNeedsGenerateMipmaps(texture, supportsMips)) {\n          generateMipmap(_gl.TEXTURE_CUBE_MAP, texture, renderTarget.width, renderTarget.height);\n        }\n\n        state.unbindTexture();\n      } else if (isMultipleRenderTargets) {\n        var _textures = renderTarget.texture;\n\n        for (var _i133 = 0, _il11 = _textures.length; _i133 < _il11; _i133++) {\n          var attachment = _textures[_i133];\n\n          var _attachmentProperties = properties.get(attachment);\n\n          state.bindTexture(_gl.TEXTURE_2D, _attachmentProperties.__webglTexture);\n          setTextureParameters(_gl.TEXTURE_2D, attachment, supportsMips);\n          setupFrameBufferTexture(renderTargetProperties.__webglFramebuffer, renderTarget, attachment, _gl.COLOR_ATTACHMENT0 + _i133, _gl.TEXTURE_2D);\n\n          if (textureNeedsGenerateMipmaps(attachment, supportsMips)) {\n            generateMipmap(_gl.TEXTURE_2D, attachment, renderTarget.width, renderTarget.height);\n          }\n        }\n\n        state.unbindTexture();\n      } else {\n        var glTextureType = _gl.TEXTURE_2D;\n\n        if (isRenderTarget3D) {\n          // Render targets containing layers, i.e: Texture 3D and 2d arrays\n          if (isWebGL2) {\n            var isTexture3D = texture.isDataTexture3D;\n            glTextureType = isTexture3D ? _gl.TEXTURE_3D : _gl.TEXTURE_2D_ARRAY;\n          } else {\n            console.warn('THREE.DataTexture3D and THREE.DataTexture2DArray only supported with WebGL2.');\n          }\n        }\n\n        state.bindTexture(glTextureType, textureProperties.__webglTexture);\n        setTextureParameters(glTextureType, texture, supportsMips);\n        setupFrameBufferTexture(renderTargetProperties.__webglFramebuffer, renderTarget, texture, _gl.COLOR_ATTACHMENT0, glTextureType);\n\n        if (textureNeedsGenerateMipmaps(texture, supportsMips)) {\n          generateMipmap(glTextureType, texture, renderTarget.width, renderTarget.height, renderTarget.depth);\n        }\n\n        state.unbindTexture();\n      } // Setup depth and stencil buffers\n\n\n      if (renderTarget.depthBuffer) {\n        setupDepthRenderbuffer(renderTarget);\n      }\n    }\n\n    function updateRenderTargetMipmap(renderTarget) {\n      var supportsMips = isPowerOfTwo$1(renderTarget) || isWebGL2;\n      var textures = renderTarget.isWebGLMultipleRenderTargets === true ? renderTarget.texture : [renderTarget.texture];\n\n      for (var _i134 = 0, il = textures.length; _i134 < il; _i134++) {\n        var texture = textures[_i134];\n\n        if (textureNeedsGenerateMipmaps(texture, supportsMips)) {\n          var target = renderTarget.isWebGLCubeRenderTarget ? _gl.TEXTURE_CUBE_MAP : _gl.TEXTURE_2D;\n\n          var webglTexture = properties.get(texture).__webglTexture;\n\n          state.bindTexture(target, webglTexture);\n          generateMipmap(target, texture, renderTarget.width, renderTarget.height);\n          state.unbindTexture();\n        }\n      }\n    }\n\n    function updateMultisampleRenderTarget(renderTarget) {\n      if (renderTarget.isWebGLMultisampleRenderTarget) {\n        if (isWebGL2) {\n          var width = renderTarget.width;\n          var height = renderTarget.height;\n          var mask = _gl.COLOR_BUFFER_BIT;\n          if (renderTarget.depthBuffer) mask |= _gl.DEPTH_BUFFER_BIT;\n          if (renderTarget.stencilBuffer) mask |= _gl.STENCIL_BUFFER_BIT;\n          var renderTargetProperties = properties.get(renderTarget);\n          state.bindFramebuffer(_gl.READ_FRAMEBUFFER, renderTargetProperties.__webglMultisampledFramebuffer);\n          state.bindFramebuffer(_gl.DRAW_FRAMEBUFFER, renderTargetProperties.__webglFramebuffer);\n\n          _gl.blitFramebuffer(0, 0, width, height, 0, 0, width, height, mask, _gl.NEAREST);\n\n          state.bindFramebuffer(_gl.READ_FRAMEBUFFER, null);\n          state.bindFramebuffer(_gl.DRAW_FRAMEBUFFER, renderTargetProperties.__webglMultisampledFramebuffer);\n        } else {\n          console.warn('THREE.WebGLRenderer: WebGLMultisampleRenderTarget can only be used with WebGL2.');\n        }\n      }\n    }\n\n    function getRenderTargetSamples(renderTarget) {\n      return isWebGL2 && renderTarget.isWebGLMultisampleRenderTarget ? Math.min(maxSamples, renderTarget.samples) : 0;\n    }\n\n    function updateVideoTexture(texture) {\n      var frame = info.render.frame; // Check the last frame we updated the VideoTexture\n\n      if (_videoTextures.get(texture) !== frame) {\n        _videoTextures.set(texture, frame);\n\n        texture.update();\n      }\n    } // backwards compatibility\n\n\n    var warnedTexture2D = false;\n    var warnedTextureCube = false;\n\n    function safeSetTexture2D(texture, slot) {\n      if (texture && texture.isWebGLRenderTarget) {\n        if (warnedTexture2D === false) {\n          console.warn('THREE.WebGLTextures.safeSetTexture2D: don\\'t use render targets as textures. Use their .texture property instead.');\n          warnedTexture2D = true;\n        }\n\n        texture = texture.texture;\n      }\n\n      setTexture2D(texture, slot);\n    }\n\n    function safeSetTextureCube(texture, slot) {\n      if (texture && texture.isWebGLCubeRenderTarget) {\n        if (warnedTextureCube === false) {\n          console.warn('THREE.WebGLTextures.safeSetTextureCube: don\\'t use cube render targets as textures. Use their .texture property instead.');\n          warnedTextureCube = true;\n        }\n\n        texture = texture.texture;\n      }\n\n      setTextureCube(texture, slot);\n    } //\n\n\n    this.allocateTextureUnit = allocateTextureUnit;\n    this.resetTextureUnits = resetTextureUnits;\n    this.setTexture2D = setTexture2D;\n    this.setTexture2DArray = setTexture2DArray;\n    this.setTexture3D = setTexture3D;\n    this.setTextureCube = setTextureCube;\n    this.setupRenderTarget = setupRenderTarget;\n    this.updateRenderTargetMipmap = updateRenderTargetMipmap;\n    this.updateMultisampleRenderTarget = updateMultisampleRenderTarget;\n    this.safeSetTexture2D = safeSetTexture2D;\n    this.safeSetTextureCube = safeSetTextureCube;\n  }\n\n  function WebGLUtils(gl, extensions, capabilities) {\n    var isWebGL2 = capabilities.isWebGL2;\n\n    function convert(p) {\n      var extension;\n      if (p === UnsignedByteType) return gl.UNSIGNED_BYTE;\n      if (p === UnsignedShort4444Type) return gl.UNSIGNED_SHORT_4_4_4_4;\n      if (p === UnsignedShort5551Type) return gl.UNSIGNED_SHORT_5_5_5_1;\n      if (p === UnsignedShort565Type) return gl.UNSIGNED_SHORT_5_6_5;\n      if (p === ByteType) return gl.BYTE;\n      if (p === ShortType) return gl.SHORT;\n      if (p === UnsignedShortType) return gl.UNSIGNED_SHORT;\n      if (p === IntType) return gl.INT;\n      if (p === UnsignedIntType) return gl.UNSIGNED_INT;\n      if (p === FloatType) return gl.FLOAT;\n\n      if (p === HalfFloatType) {\n        if (isWebGL2) return gl.HALF_FLOAT;\n        extension = extensions.get('OES_texture_half_float');\n\n        if (extension !== null) {\n          return extension.HALF_FLOAT_OES;\n        } else {\n          return null;\n        }\n      }\n\n      if (p === AlphaFormat) return gl.ALPHA;\n      if (p === RGBFormat) return gl.RGB;\n      if (p === RGBAFormat) return gl.RGBA;\n      if (p === LuminanceFormat) return gl.LUMINANCE;\n      if (p === LuminanceAlphaFormat) return gl.LUMINANCE_ALPHA;\n      if (p === DepthFormat) return gl.DEPTH_COMPONENT;\n      if (p === DepthStencilFormat) return gl.DEPTH_STENCIL;\n      if (p === RedFormat) return gl.RED; // WebGL2 formats.\n\n      if (p === RedIntegerFormat) return gl.RED_INTEGER;\n      if (p === RGFormat) return gl.RG;\n      if (p === RGIntegerFormat) return gl.RG_INTEGER;\n      if (p === RGBIntegerFormat) return gl.RGB_INTEGER;\n      if (p === RGBAIntegerFormat) return gl.RGBA_INTEGER;\n\n      if (p === RGB_S3TC_DXT1_Format || p === RGBA_S3TC_DXT1_Format || p === RGBA_S3TC_DXT3_Format || p === RGBA_S3TC_DXT5_Format) {\n        extension = extensions.get('WEBGL_compressed_texture_s3tc');\n\n        if (extension !== null) {\n          if (p === RGB_S3TC_DXT1_Format) return extension.COMPRESSED_RGB_S3TC_DXT1_EXT;\n          if (p === RGBA_S3TC_DXT1_Format) return extension.COMPRESSED_RGBA_S3TC_DXT1_EXT;\n          if (p === RGBA_S3TC_DXT3_Format) return extension.COMPRESSED_RGBA_S3TC_DXT3_EXT;\n          if (p === RGBA_S3TC_DXT5_Format) return extension.COMPRESSED_RGBA_S3TC_DXT5_EXT;\n        } else {\n          return null;\n        }\n      }\n\n      if (p === RGB_PVRTC_4BPPV1_Format || p === RGB_PVRTC_2BPPV1_Format || p === RGBA_PVRTC_4BPPV1_Format || p === RGBA_PVRTC_2BPPV1_Format) {\n        extension = extensions.get('WEBGL_compressed_texture_pvrtc');\n\n        if (extension !== null) {\n          if (p === RGB_PVRTC_4BPPV1_Format) return extension.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;\n          if (p === RGB_PVRTC_2BPPV1_Format) return extension.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;\n          if (p === RGBA_PVRTC_4BPPV1_Format) return extension.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;\n          if (p === RGBA_PVRTC_2BPPV1_Format) return extension.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG;\n        } else {\n          return null;\n        }\n      }\n\n      if (p === RGB_ETC1_Format) {\n        extension = extensions.get('WEBGL_compressed_texture_etc1');\n\n        if (extension !== null) {\n          return extension.COMPRESSED_RGB_ETC1_WEBGL;\n        } else {\n          return null;\n        }\n      }\n\n      if (p === RGB_ETC2_Format || p === RGBA_ETC2_EAC_Format) {\n        extension = extensions.get('WEBGL_compressed_texture_etc');\n\n        if (extension !== null) {\n          if (p === RGB_ETC2_Format) return extension.COMPRESSED_RGB8_ETC2;\n          if (p === RGBA_ETC2_EAC_Format) return extension.COMPRESSED_RGBA8_ETC2_EAC;\n        }\n      }\n\n      if (p === RGBA_ASTC_4x4_Format || p === RGBA_ASTC_5x4_Format || p === RGBA_ASTC_5x5_Format || p === RGBA_ASTC_6x5_Format || p === RGBA_ASTC_6x6_Format || p === RGBA_ASTC_8x5_Format || p === RGBA_ASTC_8x6_Format || p === RGBA_ASTC_8x8_Format || p === RGBA_ASTC_10x5_Format || p === RGBA_ASTC_10x6_Format || p === RGBA_ASTC_10x8_Format || p === RGBA_ASTC_10x10_Format || p === RGBA_ASTC_12x10_Format || p === RGBA_ASTC_12x12_Format || p === SRGB8_ALPHA8_ASTC_4x4_Format || p === SRGB8_ALPHA8_ASTC_5x4_Format || p === SRGB8_ALPHA8_ASTC_5x5_Format || p === SRGB8_ALPHA8_ASTC_6x5_Format || p === SRGB8_ALPHA8_ASTC_6x6_Format || p === SRGB8_ALPHA8_ASTC_8x5_Format || p === SRGB8_ALPHA8_ASTC_8x6_Format || p === SRGB8_ALPHA8_ASTC_8x8_Format || p === SRGB8_ALPHA8_ASTC_10x5_Format || p === SRGB8_ALPHA8_ASTC_10x6_Format || p === SRGB8_ALPHA8_ASTC_10x8_Format || p === SRGB8_ALPHA8_ASTC_10x10_Format || p === SRGB8_ALPHA8_ASTC_12x10_Format || p === SRGB8_ALPHA8_ASTC_12x12_Format) {\n        extension = extensions.get('WEBGL_compressed_texture_astc');\n\n        if (extension !== null) {\n          // TODO Complete?\n          return p;\n        } else {\n          return null;\n        }\n      }\n\n      if (p === RGBA_BPTC_Format) {\n        extension = extensions.get('EXT_texture_compression_bptc');\n\n        if (extension !== null) {\n          // TODO Complete?\n          return p;\n        } else {\n          return null;\n        }\n      }\n\n      if (p === UnsignedInt248Type) {\n        if (isWebGL2) return gl.UNSIGNED_INT_24_8;\n        extension = extensions.get('WEBGL_depth_texture');\n\n        if (extension !== null) {\n          return extension.UNSIGNED_INT_24_8_WEBGL;\n        } else {\n          return null;\n        }\n      }\n    }\n\n    return {\n      convert: convert\n    };\n  }\n\n  var ArrayCamera = /*#__PURE__*/function (_PerspectiveCamera) {\n    _inherits(ArrayCamera, _PerspectiveCamera);\n\n    var _super34 = _createSuper(ArrayCamera);\n\n    function ArrayCamera() {\n      var _this25;\n\n      var array = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n\n      _classCallCheck(this, ArrayCamera);\n\n      _this25 = _super34.call(this);\n      _this25.cameras = array;\n      return _this25;\n    }\n\n    return ArrayCamera;\n  }(PerspectiveCamera);\n\n  ArrayCamera.prototype.isArrayCamera = true;\n\n  var Group = /*#__PURE__*/function (_Object3D4) {\n    _inherits(Group, _Object3D4);\n\n    var _super35 = _createSuper(Group);\n\n    function Group() {\n      var _this26;\n\n      _classCallCheck(this, Group);\n\n      _this26 = _super35.call(this);\n      _this26.type = 'Group';\n      return _this26;\n    }\n\n    return Group;\n  }(Object3D);\n\n  Group.prototype.isGroup = true;\n  var _moveEvent = {\n    type: 'move'\n  };\n\n  var WebXRController = /*#__PURE__*/function () {\n    function WebXRController() {\n      _classCallCheck(this, WebXRController);\n\n      this._targetRay = null;\n      this._grip = null;\n      this._hand = null;\n    }\n\n    _createClass(WebXRController, [{\n      key: \"getHandSpace\",\n      value: function getHandSpace() {\n        if (this._hand === null) {\n          this._hand = new Group();\n          this._hand.matrixAutoUpdate = false;\n          this._hand.visible = false;\n          this._hand.joints = {};\n          this._hand.inputState = {\n            pinching: false\n          };\n        }\n\n        return this._hand;\n      }\n    }, {\n      key: \"getTargetRaySpace\",\n      value: function getTargetRaySpace() {\n        if (this._targetRay === null) {\n          this._targetRay = new Group();\n          this._targetRay.matrixAutoUpdate = false;\n          this._targetRay.visible = false;\n          this._targetRay.hasLinearVelocity = false;\n          this._targetRay.linearVelocity = new Vector3();\n          this._targetRay.hasAngularVelocity = false;\n          this._targetRay.angularVelocity = new Vector3();\n        }\n\n        return this._targetRay;\n      }\n    }, {\n      key: \"getGripSpace\",\n      value: function getGripSpace() {\n        if (this._grip === null) {\n          this._grip = new Group();\n          this._grip.matrixAutoUpdate = false;\n          this._grip.visible = false;\n          this._grip.hasLinearVelocity = false;\n          this._grip.linearVelocity = new Vector3();\n          this._grip.hasAngularVelocity = false;\n          this._grip.angularVelocity = new Vector3();\n        }\n\n        return this._grip;\n      }\n    }, {\n      key: \"dispatchEvent\",\n      value: function dispatchEvent(event) {\n        if (this._targetRay !== null) {\n          this._targetRay.dispatchEvent(event);\n        }\n\n        if (this._grip !== null) {\n          this._grip.dispatchEvent(event);\n        }\n\n        if (this._hand !== null) {\n          this._hand.dispatchEvent(event);\n        }\n\n        return this;\n      }\n    }, {\n      key: \"disconnect\",\n      value: function disconnect(inputSource) {\n        this.dispatchEvent({\n          type: 'disconnected',\n          data: inputSource\n        });\n\n        if (this._targetRay !== null) {\n          this._targetRay.visible = false;\n        }\n\n        if (this._grip !== null) {\n          this._grip.visible = false;\n        }\n\n        if (this._hand !== null) {\n          this._hand.visible = false;\n        }\n\n        return this;\n      }\n    }, {\n      key: \"update\",\n      value: function update(inputSource, frame, referenceSpace) {\n        var inputPose = null;\n        var gripPose = null;\n        var handPose = null;\n        var targetRay = this._targetRay;\n        var grip = this._grip;\n        var hand = this._hand;\n\n        if (inputSource && frame.session.visibilityState !== 'visible-blurred') {\n          if (targetRay !== null) {\n            inputPose = frame.getPose(inputSource.targetRaySpace, referenceSpace);\n\n            if (inputPose !== null) {\n              targetRay.matrix.fromArray(inputPose.transform.matrix);\n              targetRay.matrix.decompose(targetRay.position, targetRay.rotation, targetRay.scale);\n\n              if (inputPose.linearVelocity) {\n                targetRay.hasLinearVelocity = true;\n                targetRay.linearVelocity.copy(inputPose.linearVelocity);\n              } else {\n                targetRay.hasLinearVelocity = false;\n              }\n\n              if (inputPose.angularVelocity) {\n                targetRay.hasAngularVelocity = true;\n                targetRay.angularVelocity.copy(inputPose.angularVelocity);\n              } else {\n                targetRay.hasAngularVelocity = false;\n              }\n\n              this.dispatchEvent(_moveEvent);\n            }\n          }\n\n          if (hand && inputSource.hand) {\n            handPose = true;\n\n            var _iterator = _createForOfIteratorHelper(inputSource.hand.values()),\n                _step;\n\n            try {\n              for (_iterator.s(); !(_step = _iterator.n()).done;) {\n                var inputjoint = _step.value;\n                // Update the joints groups with the XRJoint poses\n                var jointPose = frame.getJointPose(inputjoint, referenceSpace);\n\n                if (hand.joints[inputjoint.jointName] === undefined) {\n                  // The transform of this joint will be updated with the joint pose on each frame\n                  var _joint = new Group();\n\n                  _joint.matrixAutoUpdate = false;\n                  _joint.visible = false;\n                  hand.joints[inputjoint.jointName] = _joint; // ??\n\n                  hand.add(_joint);\n                }\n\n                var joint = hand.joints[inputjoint.jointName];\n\n                if (jointPose !== null) {\n                  joint.matrix.fromArray(jointPose.transform.matrix);\n                  joint.matrix.decompose(joint.position, joint.rotation, joint.scale);\n                  joint.jointRadius = jointPose.radius;\n                }\n\n                joint.visible = jointPose !== null;\n              } // Custom events\n              // Check pinchz\n\n            } catch (err) {\n              _iterator.e(err);\n            } finally {\n              _iterator.f();\n            }\n\n            var indexTip = hand.joints['index-finger-tip'];\n            var thumbTip = hand.joints['thumb-tip'];\n            var distance = indexTip.position.distanceTo(thumbTip.position);\n            var distanceToPinch = 0.02;\n            var threshold = 0.005;\n\n            if (hand.inputState.pinching && distance > distanceToPinch + threshold) {\n              hand.inputState.pinching = false;\n              this.dispatchEvent({\n                type: 'pinchend',\n                handedness: inputSource.handedness,\n                target: this\n              });\n            } else if (!hand.inputState.pinching && distance <= distanceToPinch - threshold) {\n              hand.inputState.pinching = true;\n              this.dispatchEvent({\n                type: 'pinchstart',\n                handedness: inputSource.handedness,\n                target: this\n              });\n            }\n          } else {\n            if (grip !== null && inputSource.gripSpace) {\n              gripPose = frame.getPose(inputSource.gripSpace, referenceSpace);\n\n              if (gripPose !== null) {\n                grip.matrix.fromArray(gripPose.transform.matrix);\n                grip.matrix.decompose(grip.position, grip.rotation, grip.scale);\n\n                if (gripPose.linearVelocity) {\n                  grip.hasLinearVelocity = true;\n                  grip.linearVelocity.copy(gripPose.linearVelocity);\n                } else {\n                  grip.hasLinearVelocity = false;\n                }\n\n                if (gripPose.angularVelocity) {\n                  grip.hasAngularVelocity = true;\n                  grip.angularVelocity.copy(gripPose.angularVelocity);\n                } else {\n                  grip.hasAngularVelocity = false;\n                }\n              }\n            }\n          }\n        }\n\n        if (targetRay !== null) {\n          targetRay.visible = inputPose !== null;\n        }\n\n        if (grip !== null) {\n          grip.visible = gripPose !== null;\n        }\n\n        if (hand !== null) {\n          hand.visible = handPose !== null;\n        }\n\n        return this;\n      }\n    }]);\n\n    return WebXRController;\n  }();\n\n  var WebXRManager = /*#__PURE__*/function (_EventDispatcher6) {\n    _inherits(WebXRManager, _EventDispatcher6);\n\n    var _super36 = _createSuper(WebXRManager);\n\n    function WebXRManager(renderer, gl) {\n      var _this27;\n\n      _classCallCheck(this, WebXRManager);\n\n      _this27 = _super36.call(this);\n\n      var scope = _assertThisInitialized(_this27);\n\n      var state = renderer.state;\n      var session = null;\n      var framebufferScaleFactor = 1.0;\n      var referenceSpace = null;\n      var referenceSpaceType = 'local-floor';\n      var pose = null;\n      var glBinding = null;\n      var glFramebuffer = null;\n      var glProjLayer = null;\n      var glBaseLayer = null;\n      var isMultisample = false;\n      var glMultisampledFramebuffer = null;\n      var glColorRenderbuffer = null;\n      var glDepthRenderbuffer = null;\n      var xrFrame = null;\n      var depthStyle = null;\n      var clearStyle = null;\n      var controllers = [];\n      var inputSourcesMap = new Map(); //\n\n      var cameraL = new PerspectiveCamera();\n      cameraL.layers.enable(1);\n      cameraL.viewport = new Vector4();\n      var cameraR = new PerspectiveCamera();\n      cameraR.layers.enable(2);\n      cameraR.viewport = new Vector4();\n      var cameras = [cameraL, cameraR];\n      var cameraVR = new ArrayCamera();\n      cameraVR.layers.enable(1);\n      cameraVR.layers.enable(2);\n      var _currentDepthNear = null;\n      var _currentDepthFar = null; //\n\n      _this27.cameraAutoUpdate = true;\n      _this27.enabled = false;\n      _this27.isPresenting = false;\n\n      _this27.getController = function (index) {\n        var controller = controllers[index];\n\n        if (controller === undefined) {\n          controller = new WebXRController();\n          controllers[index] = controller;\n        }\n\n        return controller.getTargetRaySpace();\n      };\n\n      _this27.getControllerGrip = function (index) {\n        var controller = controllers[index];\n\n        if (controller === undefined) {\n          controller = new WebXRController();\n          controllers[index] = controller;\n        }\n\n        return controller.getGripSpace();\n      };\n\n      _this27.getHand = function (index) {\n        var controller = controllers[index];\n\n        if (controller === undefined) {\n          controller = new WebXRController();\n          controllers[index] = controller;\n        }\n\n        return controller.getHandSpace();\n      }; //\n\n\n      function onSessionEvent(event) {\n        var controller = inputSourcesMap.get(event.inputSource);\n\n        if (controller) {\n          controller.dispatchEvent({\n            type: event.type,\n            data: event.inputSource\n          });\n        }\n      }\n\n      function onSessionEnd() {\n        inputSourcesMap.forEach(function (controller, inputSource) {\n          controller.disconnect(inputSource);\n        });\n        inputSourcesMap.clear();\n        _currentDepthNear = null;\n        _currentDepthFar = null; // restore framebuffer/rendering state\n\n        state.bindXRFramebuffer(null);\n        renderer.setRenderTarget(renderer.getRenderTarget());\n        if (glFramebuffer) gl.deleteFramebuffer(glFramebuffer);\n        if (glMultisampledFramebuffer) gl.deleteFramebuffer(glMultisampledFramebuffer);\n        if (glColorRenderbuffer) gl.deleteRenderbuffer(glColorRenderbuffer);\n        if (glDepthRenderbuffer) gl.deleteRenderbuffer(glDepthRenderbuffer);\n        glFramebuffer = null;\n        glMultisampledFramebuffer = null;\n        glColorRenderbuffer = null;\n        glDepthRenderbuffer = null;\n        glBaseLayer = null;\n        glProjLayer = null;\n        glBinding = null;\n        session = null; //\n\n        animation.stop();\n        scope.isPresenting = false;\n        scope.dispatchEvent({\n          type: 'sessionend'\n        });\n      }\n\n      _this27.setFramebufferScaleFactor = function (value) {\n        framebufferScaleFactor = value;\n\n        if (scope.isPresenting === true) {\n          console.warn('THREE.WebXRManager: Cannot change framebuffer scale while presenting.');\n        }\n      };\n\n      _this27.setReferenceSpaceType = function (value) {\n        referenceSpaceType = value;\n\n        if (scope.isPresenting === true) {\n          console.warn('THREE.WebXRManager: Cannot change reference space type while presenting.');\n        }\n      };\n\n      _this27.getReferenceSpace = function () {\n        return referenceSpace;\n      };\n\n      _this27.getBaseLayer = function () {\n        return glProjLayer !== null ? glProjLayer : glBaseLayer;\n      };\n\n      _this27.getBinding = function () {\n        return glBinding;\n      };\n\n      _this27.getFrame = function () {\n        return xrFrame;\n      };\n\n      _this27.getSession = function () {\n        return session;\n      };\n\n      _this27.setSession = /*#__PURE__*/function () {\n        var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(value) {\n          var attributes, layerInit, _layerInit, depthFormat, projectionlayerInit;\n\n          return _regeneratorRuntime.wrap(function _callee$(_context5) {\n            while (1) {\n              switch (_context5.prev = _context5.next) {\n                case 0:\n                  session = value;\n\n                  if (!(session !== null)) {\n                    _context5.next = 22;\n                    break;\n                  }\n\n                  session.addEventListener('select', onSessionEvent);\n                  session.addEventListener('selectstart', onSessionEvent);\n                  session.addEventListener('selectend', onSessionEvent);\n                  session.addEventListener('squeeze', onSessionEvent);\n                  session.addEventListener('squeezestart', onSessionEvent);\n                  session.addEventListener('squeezeend', onSessionEvent);\n                  session.addEventListener('end', onSessionEnd);\n                  session.addEventListener('inputsourceschange', onInputSourcesChange);\n                  attributes = gl.getContextAttributes();\n\n                  if (!(attributes.xrCompatible !== true)) {\n                    _context5.next = 14;\n                    break;\n                  }\n\n                  _context5.next = 14;\n                  return gl.makeXRCompatible();\n\n                case 14:\n                  if (session.renderState.layers === undefined) {\n                    layerInit = {\n                      antialias: attributes.antialias,\n                      alpha: attributes.alpha,\n                      depth: attributes.depth,\n                      stencil: attributes.stencil,\n                      framebufferScaleFactor: framebufferScaleFactor\n                    };\n                    glBaseLayer = new XRWebGLLayer(session, gl, layerInit);\n                    session.updateRenderState({\n                      baseLayer: glBaseLayer\n                    });\n                  } else if (gl instanceof WebGLRenderingContext) {\n                    // Use old style webgl layer because we can't use MSAA\n                    // WebGL2 support.\n                    _layerInit = {\n                      antialias: true,\n                      alpha: attributes.alpha,\n                      depth: attributes.depth,\n                      stencil: attributes.stencil,\n                      framebufferScaleFactor: framebufferScaleFactor\n                    };\n                    glBaseLayer = new XRWebGLLayer(session, gl, _layerInit);\n                    session.updateRenderState({\n                      layers: [glBaseLayer]\n                    });\n                  } else {\n                    isMultisample = attributes.antialias;\n                    depthFormat = null;\n\n                    if (attributes.depth) {\n                      clearStyle = gl.DEPTH_BUFFER_BIT;\n                      if (attributes.stencil) clearStyle |= gl.STENCIL_BUFFER_BIT;\n                      depthStyle = attributes.stencil ? gl.DEPTH_STENCIL_ATTACHMENT : gl.DEPTH_ATTACHMENT;\n                      depthFormat = attributes.stencil ? gl.DEPTH24_STENCIL8 : gl.DEPTH_COMPONENT24;\n                    }\n\n                    projectionlayerInit = {\n                      colorFormat: attributes.alpha ? gl.RGBA8 : gl.RGB8,\n                      depthFormat: depthFormat,\n                      scaleFactor: framebufferScaleFactor\n                    };\n                    glBinding = new XRWebGLBinding(session, gl);\n                    glProjLayer = glBinding.createProjectionLayer(projectionlayerInit);\n                    glFramebuffer = gl.createFramebuffer();\n                    session.updateRenderState({\n                      layers: [glProjLayer]\n                    });\n\n                    if (isMultisample) {\n                      glMultisampledFramebuffer = gl.createFramebuffer();\n                      glColorRenderbuffer = gl.createRenderbuffer();\n                      gl.bindRenderbuffer(gl.RENDERBUFFER, glColorRenderbuffer);\n                      gl.renderbufferStorageMultisample(gl.RENDERBUFFER, 4, gl.RGBA8, glProjLayer.textureWidth, glProjLayer.textureHeight);\n                      state.bindFramebuffer(gl.FRAMEBUFFER, glMultisampledFramebuffer);\n                      gl.framebufferRenderbuffer(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.RENDERBUFFER, glColorRenderbuffer);\n                      gl.bindRenderbuffer(gl.RENDERBUFFER, null);\n\n                      if (depthFormat !== null) {\n                        glDepthRenderbuffer = gl.createRenderbuffer();\n                        gl.bindRenderbuffer(gl.RENDERBUFFER, glDepthRenderbuffer);\n                        gl.renderbufferStorageMultisample(gl.RENDERBUFFER, 4, depthFormat, glProjLayer.textureWidth, glProjLayer.textureHeight);\n                        gl.framebufferRenderbuffer(gl.FRAMEBUFFER, depthStyle, gl.RENDERBUFFER, glDepthRenderbuffer);\n                        gl.bindRenderbuffer(gl.RENDERBUFFER, null);\n                      }\n\n                      state.bindFramebuffer(gl.FRAMEBUFFER, null);\n                    }\n                  }\n\n                  _context5.next = 17;\n                  return session.requestReferenceSpace(referenceSpaceType);\n\n                case 17:\n                  referenceSpace = _context5.sent;\n                  animation.setContext(session);\n                  animation.start();\n                  scope.isPresenting = true;\n                  scope.dispatchEvent({\n                    type: 'sessionstart'\n                  });\n\n                case 22:\n                case \"end\":\n                  return _context5.stop();\n              }\n            }\n          }, _callee);\n        }));\n\n        return function (_x3) {\n          return _ref.apply(this, arguments);\n        };\n      }();\n\n      function onInputSourcesChange(event) {\n        var inputSources = session.inputSources; // Assign inputSources to available controllers\n\n        for (var _i135 = 0; _i135 < controllers.length; _i135++) {\n          inputSourcesMap.set(inputSources[_i135], controllers[_i135]);\n        } // Notify disconnected\n\n\n        for (var _i136 = 0; _i136 < event.removed.length; _i136++) {\n          var inputSource = event.removed[_i136];\n          var controller = inputSourcesMap.get(inputSource);\n\n          if (controller) {\n            controller.dispatchEvent({\n              type: 'disconnected',\n              data: inputSource\n            });\n            inputSourcesMap.delete(inputSource);\n          }\n        } // Notify connected\n\n\n        for (var _i137 = 0; _i137 < event.added.length; _i137++) {\n          var _inputSource = event.added[_i137];\n\n          var _controller = inputSourcesMap.get(_inputSource);\n\n          if (_controller) {\n            _controller.dispatchEvent({\n              type: 'connected',\n              data: _inputSource\n            });\n          }\n        }\n      } //\n\n\n      var cameraLPos = new Vector3();\n      var cameraRPos = new Vector3();\n      /**\n       * Assumes 2 cameras that are parallel and share an X-axis, and that\n       * the cameras' projection and world matrices have already been set.\n       * And that near and far planes are identical for both cameras.\n       * Visualization of this technique: https://computergraphics.stackexchange.com/a/4765\n       */\n\n      function setProjectionFromUnion(camera, cameraL, cameraR) {\n        cameraLPos.setFromMatrixPosition(cameraL.matrixWorld);\n        cameraRPos.setFromMatrixPosition(cameraR.matrixWorld);\n        var ipd = cameraLPos.distanceTo(cameraRPos);\n        var projL = cameraL.projectionMatrix.elements;\n        var projR = cameraR.projectionMatrix.elements; // VR systems will have identical far and near planes, and\n        // most likely identical top and bottom frustum extents.\n        // Use the left camera for these values.\n\n        var near = projL[14] / (projL[10] - 1);\n        var far = projL[14] / (projL[10] + 1);\n        var topFov = (projL[9] + 1) / projL[5];\n        var bottomFov = (projL[9] - 1) / projL[5];\n        var leftFov = (projL[8] - 1) / projL[0];\n        var rightFov = (projR[8] + 1) / projR[0];\n        var left = near * leftFov;\n        var right = near * rightFov; // Calculate the new camera's position offset from the\n        // left camera. xOffset should be roughly half `ipd`.\n\n        var zOffset = ipd / (-leftFov + rightFov);\n        var xOffset = zOffset * -leftFov; // TODO: Better way to apply this offset?\n\n        cameraL.matrixWorld.decompose(camera.position, camera.quaternion, camera.scale);\n        camera.translateX(xOffset);\n        camera.translateZ(zOffset);\n        camera.matrixWorld.compose(camera.position, camera.quaternion, camera.scale);\n        camera.matrixWorldInverse.copy(camera.matrixWorld).invert(); // Find the union of the frustum values of the cameras and scale\n        // the values so that the near plane's position does not change in world space,\n        // although must now be relative to the new union camera.\n\n        var near2 = near + zOffset;\n        var far2 = far + zOffset;\n        var left2 = left - xOffset;\n        var right2 = right + (ipd - xOffset);\n        var top2 = topFov * far / far2 * near2;\n        var bottom2 = bottomFov * far / far2 * near2;\n        camera.projectionMatrix.makePerspective(left2, right2, top2, bottom2, near2, far2);\n      }\n\n      function updateCamera(camera, parent) {\n        if (parent === null) {\n          camera.matrixWorld.copy(camera.matrix);\n        } else {\n          camera.matrixWorld.multiplyMatrices(parent.matrixWorld, camera.matrix);\n        }\n\n        camera.matrixWorldInverse.copy(camera.matrixWorld).invert();\n      }\n\n      _this27.updateCamera = function (camera) {\n        if (session === null) return;\n        cameraVR.near = cameraR.near = cameraL.near = camera.near;\n        cameraVR.far = cameraR.far = cameraL.far = camera.far;\n\n        if (_currentDepthNear !== cameraVR.near || _currentDepthFar !== cameraVR.far) {\n          // Note that the new renderState won't apply until the next frame. See #18320\n          session.updateRenderState({\n            depthNear: cameraVR.near,\n            depthFar: cameraVR.far\n          });\n          _currentDepthNear = cameraVR.near;\n          _currentDepthFar = cameraVR.far;\n        }\n\n        var parent = camera.parent;\n        var cameras = cameraVR.cameras;\n        updateCamera(cameraVR, parent);\n\n        for (var _i138 = 0; _i138 < cameras.length; _i138++) {\n          updateCamera(cameras[_i138], parent);\n        }\n\n        cameraVR.matrixWorld.decompose(cameraVR.position, cameraVR.quaternion, cameraVR.scale); // update user camera and its children\n\n        camera.position.copy(cameraVR.position);\n        camera.quaternion.copy(cameraVR.quaternion);\n        camera.scale.copy(cameraVR.scale);\n        camera.matrix.copy(cameraVR.matrix);\n        camera.matrixWorld.copy(cameraVR.matrixWorld);\n        var children = camera.children;\n\n        for (var _i139 = 0, l = children.length; _i139 < l; _i139++) {\n          children[_i139].updateMatrixWorld(true);\n        } // update projection matrix for proper view frustum culling\n\n\n        if (cameras.length === 2) {\n          setProjectionFromUnion(cameraVR, cameraL, cameraR);\n        } else {\n          // assume single camera setup (AR)\n          cameraVR.projectionMatrix.copy(cameraL.projectionMatrix);\n        }\n      };\n\n      _this27.getCamera = function () {\n        return cameraVR;\n      };\n\n      _this27.getFoveation = function () {\n        if (glProjLayer !== null) {\n          return glProjLayer.fixedFoveation;\n        }\n\n        if (glBaseLayer !== null) {\n          return glBaseLayer.fixedFoveation;\n        }\n\n        return undefined;\n      };\n\n      _this27.setFoveation = function (foveation) {\n        // 0 = no foveation = full resolution\n        // 1 = maximum foveation = the edges render at lower resolution\n        if (glProjLayer !== null) {\n          glProjLayer.fixedFoveation = foveation;\n        }\n\n        if (glBaseLayer !== null && glBaseLayer.fixedFoveation !== undefined) {\n          glBaseLayer.fixedFoveation = foveation;\n        }\n      }; // Animation Loop\n\n\n      var onAnimationFrameCallback = null;\n\n      function onAnimationFrame(time, frame) {\n        pose = frame.getViewerPose(referenceSpace);\n        xrFrame = frame;\n\n        if (pose !== null) {\n          var views = pose.views;\n\n          if (glBaseLayer !== null) {\n            state.bindXRFramebuffer(glBaseLayer.framebuffer);\n          }\n\n          var cameraVRNeedsUpdate = false; // check if it's necessary to rebuild cameraVR's camera list\n\n          if (views.length !== cameraVR.cameras.length) {\n            cameraVR.cameras.length = 0;\n            cameraVRNeedsUpdate = true;\n          }\n\n          for (var _i140 = 0; _i140 < views.length; _i140++) {\n            var view = views[_i140];\n            var viewport = null;\n\n            if (glBaseLayer !== null) {\n              viewport = glBaseLayer.getViewport(view);\n            } else {\n              var glSubImage = glBinding.getViewSubImage(glProjLayer, view);\n              state.bindXRFramebuffer(glFramebuffer);\n\n              if (glSubImage.depthStencilTexture !== undefined) {\n                gl.framebufferTexture2D(gl.FRAMEBUFFER, depthStyle, gl.TEXTURE_2D, glSubImage.depthStencilTexture, 0);\n              }\n\n              gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, glSubImage.colorTexture, 0);\n              viewport = glSubImage.viewport;\n            }\n\n            var camera = cameras[_i140];\n            camera.matrix.fromArray(view.transform.matrix);\n            camera.projectionMatrix.fromArray(view.projectionMatrix);\n            camera.viewport.set(viewport.x, viewport.y, viewport.width, viewport.height);\n\n            if (_i140 === 0) {\n              cameraVR.matrix.copy(camera.matrix);\n            }\n\n            if (cameraVRNeedsUpdate === true) {\n              cameraVR.cameras.push(camera);\n            }\n          }\n\n          if (isMultisample) {\n            state.bindXRFramebuffer(glMultisampledFramebuffer);\n            if (clearStyle !== null) gl.clear(clearStyle);\n          }\n        } //\n\n\n        var inputSources = session.inputSources;\n\n        for (var _i141 = 0; _i141 < controllers.length; _i141++) {\n          var controller = controllers[_i141];\n          var inputSource = inputSources[_i141];\n          controller.update(inputSource, frame, referenceSpace);\n        }\n\n        if (onAnimationFrameCallback) onAnimationFrameCallback(time, frame);\n\n        if (isMultisample) {\n          var width = glProjLayer.textureWidth;\n          var height = glProjLayer.textureHeight;\n          state.bindFramebuffer(gl.READ_FRAMEBUFFER, glMultisampledFramebuffer);\n          state.bindFramebuffer(gl.DRAW_FRAMEBUFFER, glFramebuffer); // Invalidate the depth here to avoid flush of the depth data to main memory.\n\n          gl.invalidateFramebuffer(gl.READ_FRAMEBUFFER, [depthStyle]);\n          gl.invalidateFramebuffer(gl.DRAW_FRAMEBUFFER, [depthStyle]);\n          gl.blitFramebuffer(0, 0, width, height, 0, 0, width, height, gl.COLOR_BUFFER_BIT, gl.NEAREST); // Invalidate the MSAA buffer because it's not needed anymore.\n\n          gl.invalidateFramebuffer(gl.READ_FRAMEBUFFER, [gl.COLOR_ATTACHMENT0]);\n          state.bindFramebuffer(gl.READ_FRAMEBUFFER, null);\n          state.bindFramebuffer(gl.DRAW_FRAMEBUFFER, null);\n          state.bindFramebuffer(gl.FRAMEBUFFER, glMultisampledFramebuffer);\n        }\n\n        xrFrame = null;\n      }\n\n      var animation = new WebGLAnimation();\n      animation.setAnimationLoop(onAnimationFrame);\n\n      _this27.setAnimationLoop = function (callback) {\n        onAnimationFrameCallback = callback;\n      };\n\n      _this27.dispose = function () {};\n\n      return _this27;\n    }\n\n    return WebXRManager;\n  }(EventDispatcher);\n\n  function WebGLMaterials(properties) {\n    function refreshFogUniforms(uniforms, fog) {\n      uniforms.fogColor.value.copy(fog.color);\n\n      if (fog.isFog) {\n        uniforms.fogNear.value = fog.near;\n        uniforms.fogFar.value = fog.far;\n      } else if (fog.isFogExp2) {\n        uniforms.fogDensity.value = fog.density;\n      }\n    }\n\n    function refreshMaterialUniforms(uniforms, material, pixelRatio, height, transmissionRenderTarget) {\n      if (material.isMeshBasicMaterial) {\n        refreshUniformsCommon(uniforms, material);\n      } else if (material.isMeshLambertMaterial) {\n        refreshUniformsCommon(uniforms, material);\n        refreshUniformsLambert(uniforms, material);\n      } else if (material.isMeshToonMaterial) {\n        refreshUniformsCommon(uniforms, material);\n        refreshUniformsToon(uniforms, material);\n      } else if (material.isMeshPhongMaterial) {\n        refreshUniformsCommon(uniforms, material);\n        refreshUniformsPhong(uniforms, material);\n      } else if (material.isMeshStandardMaterial) {\n        refreshUniformsCommon(uniforms, material);\n\n        if (material.isMeshPhysicalMaterial) {\n          refreshUniformsPhysical(uniforms, material, transmissionRenderTarget);\n        } else {\n          refreshUniformsStandard(uniforms, material);\n        }\n      } else if (material.isMeshMatcapMaterial) {\n        refreshUniformsCommon(uniforms, material);\n        refreshUniformsMatcap(uniforms, material);\n      } else if (material.isMeshDepthMaterial) {\n        refreshUniformsCommon(uniforms, material);\n        refreshUniformsDepth(uniforms, material);\n      } else if (material.isMeshDistanceMaterial) {\n        refreshUniformsCommon(uniforms, material);\n        refreshUniformsDistance(uniforms, material);\n      } else if (material.isMeshNormalMaterial) {\n        refreshUniformsCommon(uniforms, material);\n        refreshUniformsNormal(uniforms, material);\n      } else if (material.isLineBasicMaterial) {\n        refreshUniformsLine(uniforms, material);\n\n        if (material.isLineDashedMaterial) {\n          refreshUniformsDash(uniforms, material);\n        }\n      } else if (material.isPointsMaterial) {\n        refreshUniformsPoints(uniforms, material, pixelRatio, height);\n      } else if (material.isSpriteMaterial) {\n        refreshUniformsSprites(uniforms, material);\n      } else if (material.isShadowMaterial) {\n        uniforms.color.value.copy(material.color);\n        uniforms.opacity.value = material.opacity;\n      } else if (material.isShaderMaterial) {\n        material.uniformsNeedUpdate = false; // #15581\n      }\n    }\n\n    function refreshUniformsCommon(uniforms, material) {\n      uniforms.opacity.value = material.opacity;\n\n      if (material.color) {\n        uniforms.diffuse.value.copy(material.color);\n      }\n\n      if (material.emissive) {\n        uniforms.emissive.value.copy(material.emissive).multiplyScalar(material.emissiveIntensity);\n      }\n\n      if (material.map) {\n        uniforms.map.value = material.map;\n      }\n\n      if (material.alphaMap) {\n        uniforms.alphaMap.value = material.alphaMap;\n      }\n\n      if (material.specularMap) {\n        uniforms.specularMap.value = material.specularMap;\n      }\n\n      if (material.alphaTest > 0) {\n        uniforms.alphaTest.value = material.alphaTest;\n      }\n\n      var envMap = properties.get(material).envMap;\n\n      if (envMap) {\n        uniforms.envMap.value = envMap;\n        uniforms.flipEnvMap.value = envMap.isCubeTexture && envMap.isRenderTargetTexture === false ? -1 : 1;\n        uniforms.reflectivity.value = material.reflectivity;\n        uniforms.ior.value = material.ior;\n        uniforms.refractionRatio.value = material.refractionRatio;\n\n        var maxMipLevel = properties.get(envMap).__maxMipLevel;\n\n        if (maxMipLevel !== undefined) {\n          uniforms.maxMipLevel.value = maxMipLevel;\n        }\n      }\n\n      if (material.lightMap) {\n        uniforms.lightMap.value = material.lightMap;\n        uniforms.lightMapIntensity.value = material.lightMapIntensity;\n      }\n\n      if (material.aoMap) {\n        uniforms.aoMap.value = material.aoMap;\n        uniforms.aoMapIntensity.value = material.aoMapIntensity;\n      } // uv repeat and offset setting priorities\n      // 1. color map\n      // 2. specular map\n      // 3. displacementMap map\n      // 4. normal map\n      // 5. bump map\n      // 6. roughnessMap map\n      // 7. metalnessMap map\n      // 8. alphaMap map\n      // 9. emissiveMap map\n      // 10. clearcoat map\n      // 11. clearcoat normal map\n      // 12. clearcoat roughnessMap map\n      // 13. specular intensity map\n      // 14. specular tint map\n      // 15. transmission map\n      // 16. thickness map\n\n\n      var uvScaleMap;\n\n      if (material.map) {\n        uvScaleMap = material.map;\n      } else if (material.specularMap) {\n        uvScaleMap = material.specularMap;\n      } else if (material.displacementMap) {\n        uvScaleMap = material.displacementMap;\n      } else if (material.normalMap) {\n        uvScaleMap = material.normalMap;\n      } else if (material.bumpMap) {\n        uvScaleMap = material.bumpMap;\n      } else if (material.roughnessMap) {\n        uvScaleMap = material.roughnessMap;\n      } else if (material.metalnessMap) {\n        uvScaleMap = material.metalnessMap;\n      } else if (material.alphaMap) {\n        uvScaleMap = material.alphaMap;\n      } else if (material.emissiveMap) {\n        uvScaleMap = material.emissiveMap;\n      } else if (material.clearcoatMap) {\n        uvScaleMap = material.clearcoatMap;\n      } else if (material.clearcoatNormalMap) {\n        uvScaleMap = material.clearcoatNormalMap;\n      } else if (material.clearcoatRoughnessMap) {\n        uvScaleMap = material.clearcoatRoughnessMap;\n      } else if (material.specularIntensityMap) {\n        uvScaleMap = material.specularIntensityMap;\n      } else if (material.specularColorMap) {\n        uvScaleMap = material.specularColorMap;\n      } else if (material.transmissionMap) {\n        uvScaleMap = material.transmissionMap;\n      } else if (material.thicknessMap) {\n        uvScaleMap = material.thicknessMap;\n      } else if (material.sheenColorMap) {\n        uvScaleMap = material.sheenColorMap;\n      } else if (material.sheenRoughnessMap) {\n        uvScaleMap = material.sheenRoughnessMap;\n      }\n\n      if (uvScaleMap !== undefined) {\n        // backwards compatibility\n        if (uvScaleMap.isWebGLRenderTarget) {\n          uvScaleMap = uvScaleMap.texture;\n        }\n\n        if (uvScaleMap.matrixAutoUpdate === true) {\n          uvScaleMap.updateMatrix();\n        }\n\n        uniforms.uvTransform.value.copy(uvScaleMap.matrix);\n      } // uv repeat and offset setting priorities for uv2\n      // 1. ao map\n      // 2. light map\n\n\n      var uv2ScaleMap;\n\n      if (material.aoMap) {\n        uv2ScaleMap = material.aoMap;\n      } else if (material.lightMap) {\n        uv2ScaleMap = material.lightMap;\n      }\n\n      if (uv2ScaleMap !== undefined) {\n        // backwards compatibility\n        if (uv2ScaleMap.isWebGLRenderTarget) {\n          uv2ScaleMap = uv2ScaleMap.texture;\n        }\n\n        if (uv2ScaleMap.matrixAutoUpdate === true) {\n          uv2ScaleMap.updateMatrix();\n        }\n\n        uniforms.uv2Transform.value.copy(uv2ScaleMap.matrix);\n      }\n    }\n\n    function refreshUniformsLine(uniforms, material) {\n      uniforms.diffuse.value.copy(material.color);\n      uniforms.opacity.value = material.opacity;\n    }\n\n    function refreshUniformsDash(uniforms, material) {\n      uniforms.dashSize.value = material.dashSize;\n      uniforms.totalSize.value = material.dashSize + material.gapSize;\n      uniforms.scale.value = material.scale;\n    }\n\n    function refreshUniformsPoints(uniforms, material, pixelRatio, height) {\n      uniforms.diffuse.value.copy(material.color);\n      uniforms.opacity.value = material.opacity;\n      uniforms.size.value = material.size * pixelRatio;\n      uniforms.scale.value = height * 0.5;\n\n      if (material.map) {\n        uniforms.map.value = material.map;\n      }\n\n      if (material.alphaMap) {\n        uniforms.alphaMap.value = material.alphaMap;\n      }\n\n      if (material.alphaTest > 0) {\n        uniforms.alphaTest.value = material.alphaTest;\n      } // uv repeat and offset setting priorities\n      // 1. color map\n      // 2. alpha map\n\n\n      var uvScaleMap;\n\n      if (material.map) {\n        uvScaleMap = material.map;\n      } else if (material.alphaMap) {\n        uvScaleMap = material.alphaMap;\n      }\n\n      if (uvScaleMap !== undefined) {\n        if (uvScaleMap.matrixAutoUpdate === true) {\n          uvScaleMap.updateMatrix();\n        }\n\n        uniforms.uvTransform.value.copy(uvScaleMap.matrix);\n      }\n    }\n\n    function refreshUniformsSprites(uniforms, material) {\n      uniforms.diffuse.value.copy(material.color);\n      uniforms.opacity.value = material.opacity;\n      uniforms.rotation.value = material.rotation;\n\n      if (material.map) {\n        uniforms.map.value = material.map;\n      }\n\n      if (material.alphaMap) {\n        uniforms.alphaMap.value = material.alphaMap;\n      }\n\n      if (material.alphaTest > 0) {\n        uniforms.alphaTest.value = material.alphaTest;\n      } // uv repeat and offset setting priorities\n      // 1. color map\n      // 2. alpha map\n\n\n      var uvScaleMap;\n\n      if (material.map) {\n        uvScaleMap = material.map;\n      } else if (material.alphaMap) {\n        uvScaleMap = material.alphaMap;\n      }\n\n      if (uvScaleMap !== undefined) {\n        if (uvScaleMap.matrixAutoUpdate === true) {\n          uvScaleMap.updateMatrix();\n        }\n\n        uniforms.uvTransform.value.copy(uvScaleMap.matrix);\n      }\n    }\n\n    function refreshUniformsLambert(uniforms, material) {\n      if (material.emissiveMap) {\n        uniforms.emissiveMap.value = material.emissiveMap;\n      }\n    }\n\n    function refreshUniformsPhong(uniforms, material) {\n      uniforms.specular.value.copy(material.specular);\n      uniforms.shininess.value = Math.max(material.shininess, 1e-4); // to prevent pow( 0.0, 0.0 )\n\n      if (material.emissiveMap) {\n        uniforms.emissiveMap.value = material.emissiveMap;\n      }\n\n      if (material.bumpMap) {\n        uniforms.bumpMap.value = material.bumpMap;\n        uniforms.bumpScale.value = material.bumpScale;\n        if (material.side === BackSide) uniforms.bumpScale.value *= -1;\n      }\n\n      if (material.normalMap) {\n        uniforms.normalMap.value = material.normalMap;\n        uniforms.normalScale.value.copy(material.normalScale);\n        if (material.side === BackSide) uniforms.normalScale.value.negate();\n      }\n\n      if (material.displacementMap) {\n        uniforms.displacementMap.value = material.displacementMap;\n        uniforms.displacementScale.value = material.displacementScale;\n        uniforms.displacementBias.value = material.displacementBias;\n      }\n    }\n\n    function refreshUniformsToon(uniforms, material) {\n      if (material.gradientMap) {\n        uniforms.gradientMap.value = material.gradientMap;\n      }\n\n      if (material.emissiveMap) {\n        uniforms.emissiveMap.value = material.emissiveMap;\n      }\n\n      if (material.bumpMap) {\n        uniforms.bumpMap.value = material.bumpMap;\n        uniforms.bumpScale.value = material.bumpScale;\n        if (material.side === BackSide) uniforms.bumpScale.value *= -1;\n      }\n\n      if (material.normalMap) {\n        uniforms.normalMap.value = material.normalMap;\n        uniforms.normalScale.value.copy(material.normalScale);\n        if (material.side === BackSide) uniforms.normalScale.value.negate();\n      }\n\n      if (material.displacementMap) {\n        uniforms.displacementMap.value = material.displacementMap;\n        uniforms.displacementScale.value = material.displacementScale;\n        uniforms.displacementBias.value = material.displacementBias;\n      }\n    }\n\n    function refreshUniformsStandard(uniforms, material) {\n      uniforms.roughness.value = material.roughness;\n      uniforms.metalness.value = material.metalness;\n\n      if (material.roughnessMap) {\n        uniforms.roughnessMap.value = material.roughnessMap;\n      }\n\n      if (material.metalnessMap) {\n        uniforms.metalnessMap.value = material.metalnessMap;\n      }\n\n      if (material.emissiveMap) {\n        uniforms.emissiveMap.value = material.emissiveMap;\n      }\n\n      if (material.bumpMap) {\n        uniforms.bumpMap.value = material.bumpMap;\n        uniforms.bumpScale.value = material.bumpScale;\n        if (material.side === BackSide) uniforms.bumpScale.value *= -1;\n      }\n\n      if (material.normalMap) {\n        uniforms.normalMap.value = material.normalMap;\n        uniforms.normalScale.value.copy(material.normalScale);\n        if (material.side === BackSide) uniforms.normalScale.value.negate();\n      }\n\n      if (material.displacementMap) {\n        uniforms.displacementMap.value = material.displacementMap;\n        uniforms.displacementScale.value = material.displacementScale;\n        uniforms.displacementBias.value = material.displacementBias;\n      }\n\n      var envMap = properties.get(material).envMap;\n\n      if (envMap) {\n        //uniforms.envMap.value = material.envMap; // part of uniforms common\n        uniforms.envMapIntensity.value = material.envMapIntensity;\n      }\n    }\n\n    function refreshUniformsPhysical(uniforms, material, transmissionRenderTarget) {\n      refreshUniformsStandard(uniforms, material);\n      uniforms.ior.value = material.ior; // also part of uniforms common\n\n      if (material.sheen > 0) {\n        uniforms.sheenColor.value.copy(material.sheenColor).multiplyScalar(material.sheen);\n        uniforms.sheenRoughness.value = material.sheenRoughness;\n\n        if (material.sheenColorMap) {\n          uniforms.sheenColorMap.value = material.sheenColorMap;\n        }\n\n        if (material.sheenRoughnessMap) {\n          uniforms.sheenRoughnessMap.value = material.sheenRoughnessMap;\n        }\n      }\n\n      if (material.clearcoat > 0) {\n        uniforms.clearcoat.value = material.clearcoat;\n        uniforms.clearcoatRoughness.value = material.clearcoatRoughness;\n\n        if (material.clearcoatMap) {\n          uniforms.clearcoatMap.value = material.clearcoatMap;\n        }\n\n        if (material.clearcoatRoughnessMap) {\n          uniforms.clearcoatRoughnessMap.value = material.clearcoatRoughnessMap;\n        }\n\n        if (material.clearcoatNormalMap) {\n          uniforms.clearcoatNormalScale.value.copy(material.clearcoatNormalScale);\n          uniforms.clearcoatNormalMap.value = material.clearcoatNormalMap;\n\n          if (material.side === BackSide) {\n            uniforms.clearcoatNormalScale.value.negate();\n          }\n        }\n      }\n\n      if (material.transmission > 0) {\n        uniforms.transmission.value = material.transmission;\n        uniforms.transmissionSamplerMap.value = transmissionRenderTarget.texture;\n        uniforms.transmissionSamplerSize.value.set(transmissionRenderTarget.width, transmissionRenderTarget.height);\n\n        if (material.transmissionMap) {\n          uniforms.transmissionMap.value = material.transmissionMap;\n        }\n\n        uniforms.thickness.value = material.thickness;\n\n        if (material.thicknessMap) {\n          uniforms.thicknessMap.value = material.thicknessMap;\n        }\n\n        uniforms.attenuationDistance.value = material.attenuationDistance;\n        uniforms.attenuationColor.value.copy(material.attenuationColor);\n      }\n\n      uniforms.specularIntensity.value = material.specularIntensity;\n      uniforms.specularColor.value.copy(material.specularColor);\n\n      if (material.specularIntensityMap) {\n        uniforms.specularIntensityMap.value = material.specularIntensityMap;\n      }\n\n      if (material.specularColorMap) {\n        uniforms.specularColorMap.value = material.specularColorMap;\n      }\n    }\n\n    function refreshUniformsMatcap(uniforms, material) {\n      if (material.matcap) {\n        uniforms.matcap.value = material.matcap;\n      }\n\n      if (material.bumpMap) {\n        uniforms.bumpMap.value = material.bumpMap;\n        uniforms.bumpScale.value = material.bumpScale;\n        if (material.side === BackSide) uniforms.bumpScale.value *= -1;\n      }\n\n      if (material.normalMap) {\n        uniforms.normalMap.value = material.normalMap;\n        uniforms.normalScale.value.copy(material.normalScale);\n        if (material.side === BackSide) uniforms.normalScale.value.negate();\n      }\n\n      if (material.displacementMap) {\n        uniforms.displacementMap.value = material.displacementMap;\n        uniforms.displacementScale.value = material.displacementScale;\n        uniforms.displacementBias.value = material.displacementBias;\n      }\n    }\n\n    function refreshUniformsDepth(uniforms, material) {\n      if (material.displacementMap) {\n        uniforms.displacementMap.value = material.displacementMap;\n        uniforms.displacementScale.value = material.displacementScale;\n        uniforms.displacementBias.value = material.displacementBias;\n      }\n    }\n\n    function refreshUniformsDistance(uniforms, material) {\n      if (material.displacementMap) {\n        uniforms.displacementMap.value = material.displacementMap;\n        uniforms.displacementScale.value = material.displacementScale;\n        uniforms.displacementBias.value = material.displacementBias;\n      }\n\n      uniforms.referencePosition.value.copy(material.referencePosition);\n      uniforms.nearDistance.value = material.nearDistance;\n      uniforms.farDistance.value = material.farDistance;\n    }\n\n    function refreshUniformsNormal(uniforms, material) {\n      if (material.bumpMap) {\n        uniforms.bumpMap.value = material.bumpMap;\n        uniforms.bumpScale.value = material.bumpScale;\n        if (material.side === BackSide) uniforms.bumpScale.value *= -1;\n      }\n\n      if (material.normalMap) {\n        uniforms.normalMap.value = material.normalMap;\n        uniforms.normalScale.value.copy(material.normalScale);\n        if (material.side === BackSide) uniforms.normalScale.value.negate();\n      }\n\n      if (material.displacementMap) {\n        uniforms.displacementMap.value = material.displacementMap;\n        uniforms.displacementScale.value = material.displacementScale;\n        uniforms.displacementBias.value = material.displacementBias;\n      }\n    }\n\n    return {\n      refreshFogUniforms: refreshFogUniforms,\n      refreshMaterialUniforms: refreshMaterialUniforms\n    };\n  }\n\n  function createCanvasElement() {\n    var canvas = createElementNS('canvas');\n    canvas.style.display = 'block';\n    return canvas;\n  }\n\n  function WebGLRenderer() {\n    var parameters = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    var _canvas = parameters.canvas !== undefined ? parameters.canvas : createCanvasElement(),\n        _context = parameters.context !== undefined ? parameters.context : null,\n        _alpha = parameters.alpha !== undefined ? parameters.alpha : false,\n        _depth = parameters.depth !== undefined ? parameters.depth : true,\n        _stencil = parameters.stencil !== undefined ? parameters.stencil : true,\n        _antialias = parameters.antialias !== undefined ? parameters.antialias : false,\n        _premultipliedAlpha = parameters.premultipliedAlpha !== undefined ? parameters.premultipliedAlpha : true,\n        _preserveDrawingBuffer = parameters.preserveDrawingBuffer !== undefined ? parameters.preserveDrawingBuffer : false,\n        _powerPreference = parameters.powerPreference !== undefined ? parameters.powerPreference : 'default',\n        _failIfMajorPerformanceCaveat = parameters.failIfMajorPerformanceCaveat !== undefined ? parameters.failIfMajorPerformanceCaveat : false;\n\n    var currentRenderList = null;\n    var currentRenderState = null; // render() can be called from within a callback triggered by another render.\n    // We track this so that the nested render call gets its list and state isolated from the parent render call.\n\n    var renderListStack = [];\n    var renderStateStack = []; // public properties\n\n    this.domElement = _canvas; // Debug configuration container\n\n    this.debug = {\n      /**\n       * Enables error checking and reporting when shader programs are being compiled\n       * @type {boolean}\n       */\n      checkShaderErrors: true\n    }; // clearing\n\n    this.autoClear = true;\n    this.autoClearColor = true;\n    this.autoClearDepth = true;\n    this.autoClearStencil = true; // scene graph\n\n    this.sortObjects = true; // user-defined clipping\n\n    this.clippingPlanes = [];\n    this.localClippingEnabled = false; // physically based shading\n\n    this.gammaFactor = 2.0; // for backwards compatibility\n\n    this.outputEncoding = LinearEncoding; // physical lights\n\n    this.physicallyCorrectLights = false; // tone mapping\n\n    this.toneMapping = NoToneMapping;\n    this.toneMappingExposure = 1.0; // internal properties\n\n    var _this = this;\n\n    var _isContextLost = false; // internal state cache\n\n    var _currentActiveCubeFace = 0;\n    var _currentActiveMipmapLevel = 0;\n    var _currentRenderTarget = null;\n\n    var _currentMaterialId = -1;\n\n    var _currentCamera = null;\n\n    var _currentViewport = new Vector4();\n\n    var _currentScissor = new Vector4();\n\n    var _currentScissorTest = null; //\n\n    var _width = _canvas.width;\n    var _height = _canvas.height;\n    var _pixelRatio = 1;\n    var _opaqueSort = null;\n    var _transparentSort = null;\n\n    var _viewport = new Vector4(0, 0, _width, _height);\n\n    var _scissor = new Vector4(0, 0, _width, _height);\n\n    var _scissorTest = false; //\n\n    var _currentDrawBuffers = []; // frustum\n\n    var _frustum = new Frustum(); // clipping\n\n\n    var _clippingEnabled = false;\n    var _localClippingEnabled = false; // transmission\n\n    var _transmissionRenderTarget = null; // camera matrices cache\n\n    var _projScreenMatrix = new Matrix4();\n\n    var _vector3 = new Vector3();\n\n    var _emptyScene = {\n      background: null,\n      fog: null,\n      environment: null,\n      overrideMaterial: null,\n      isScene: true\n    };\n\n    function getTargetPixelRatio() {\n      return _currentRenderTarget === null ? _pixelRatio : 1;\n    } // initialize\n\n\n    var _gl = _context;\n\n    function getContext(contextNames, contextAttributes) {\n      for (var _i142 = 0; _i142 < contextNames.length; _i142++) {\n        var contextName = contextNames[_i142];\n\n        var context = _canvas.getContext(contextName, contextAttributes);\n\n        if (context !== null) return context;\n      }\n\n      return null;\n    }\n\n    try {\n      var contextAttributes = {\n        alpha: _alpha,\n        depth: _depth,\n        stencil: _stencil,\n        antialias: _antialias,\n        premultipliedAlpha: _premultipliedAlpha,\n        preserveDrawingBuffer: _preserveDrawingBuffer,\n        powerPreference: _powerPreference,\n        failIfMajorPerformanceCaveat: _failIfMajorPerformanceCaveat\n      }; // event listeners must be registered before WebGL context is created, see #12753\n\n      _canvas.addEventListener('webglcontextlost', onContextLost, false);\n\n      _canvas.addEventListener('webglcontextrestored', onContextRestore, false);\n\n      if (_gl === null) {\n        var contextNames = ['webgl2', 'webgl', 'experimental-webgl'];\n\n        if (_this.isWebGL1Renderer === true) {\n          contextNames.shift();\n        }\n\n        _gl = getContext(contextNames, contextAttributes);\n\n        if (_gl === null) {\n          if (getContext(contextNames)) {\n            throw new Error('Error creating WebGL context with your selected attributes.');\n          } else {\n            throw new Error('Error creating WebGL context.');\n          }\n        }\n      } // Some experimental-webgl implementations do not have getShaderPrecisionFormat\n\n\n      if (_gl.getShaderPrecisionFormat === undefined) {\n        _gl.getShaderPrecisionFormat = function () {\n          return {\n            'rangeMin': 1,\n            'rangeMax': 1,\n            'precision': 1\n          };\n        };\n      }\n    } catch (error) {\n      console.error('THREE.WebGLRenderer: ' + error.message);\n      throw error;\n    }\n\n    var extensions, capabilities, state, info;\n    var properties, textures, cubemaps, cubeuvmaps, attributes, geometries, objects;\n    var programCache, materials, renderLists, renderStates, clipping, shadowMap;\n    var background, morphtargets, bufferRenderer, indexedBufferRenderer;\n    var utils, bindingStates;\n\n    function initGLContext() {\n      extensions = new WebGLExtensions(_gl);\n      capabilities = new WebGLCapabilities(_gl, extensions, parameters);\n      extensions.init(capabilities);\n      utils = new WebGLUtils(_gl, extensions, capabilities);\n      state = new WebGLState(_gl, extensions, capabilities);\n      _currentDrawBuffers[0] = _gl.BACK;\n      info = new WebGLInfo(_gl);\n      properties = new WebGLProperties();\n      textures = new WebGLTextures(_gl, extensions, state, properties, capabilities, utils, info);\n      cubemaps = new WebGLCubeMaps(_this);\n      cubeuvmaps = new WebGLCubeUVMaps(_this);\n      attributes = new WebGLAttributes(_gl, capabilities);\n      bindingStates = new WebGLBindingStates(_gl, extensions, attributes, capabilities);\n      geometries = new WebGLGeometries(_gl, attributes, info, bindingStates);\n      objects = new WebGLObjects(_gl, geometries, attributes, info);\n      morphtargets = new WebGLMorphtargets(_gl, capabilities, textures);\n      clipping = new WebGLClipping(properties);\n      programCache = new WebGLPrograms(_this, cubemaps, cubeuvmaps, extensions, capabilities, bindingStates, clipping);\n      materials = new WebGLMaterials(properties);\n      renderLists = new WebGLRenderLists(properties);\n      renderStates = new WebGLRenderStates(extensions, capabilities);\n      background = new WebGLBackground(_this, cubemaps, state, objects, _premultipliedAlpha);\n      shadowMap = new WebGLShadowMap(_this, objects, capabilities);\n      bufferRenderer = new WebGLBufferRenderer(_gl, extensions, info, capabilities);\n      indexedBufferRenderer = new WebGLIndexedBufferRenderer(_gl, extensions, info, capabilities);\n      info.programs = programCache.programs;\n      _this.capabilities = capabilities;\n      _this.extensions = extensions;\n      _this.properties = properties;\n      _this.renderLists = renderLists;\n      _this.shadowMap = shadowMap;\n      _this.state = state;\n      _this.info = info;\n    }\n\n    initGLContext(); // xr\n\n    var xr = new WebXRManager(_this, _gl);\n    this.xr = xr; // API\n\n    this.getContext = function () {\n      return _gl;\n    };\n\n    this.getContextAttributes = function () {\n      return _gl.getContextAttributes();\n    };\n\n    this.forceContextLoss = function () {\n      var extension = extensions.get('WEBGL_lose_context');\n      if (extension) extension.loseContext();\n    };\n\n    this.forceContextRestore = function () {\n      var extension = extensions.get('WEBGL_lose_context');\n      if (extension) extension.restoreContext();\n    };\n\n    this.getPixelRatio = function () {\n      return _pixelRatio;\n    };\n\n    this.setPixelRatio = function (value) {\n      if (value === undefined) return;\n      _pixelRatio = value;\n      this.setSize(_width, _height, false);\n    };\n\n    this.getSize = function (target) {\n      return target.set(_width, _height);\n    };\n\n    this.setSize = function (width, height, updateStyle) {\n      if (xr.isPresenting) {\n        console.warn('THREE.WebGLRenderer: Can\\'t change size while VR device is presenting.');\n        return;\n      }\n\n      _width = width;\n      _height = height;\n      _canvas.width = Math.floor(width * _pixelRatio);\n      _canvas.height = Math.floor(height * _pixelRatio);\n\n      if (updateStyle !== false) {\n        _canvas.style.width = width + 'px';\n        _canvas.style.height = height + 'px';\n      }\n\n      this.setViewport(0, 0, width, height);\n    };\n\n    this.getDrawingBufferSize = function (target) {\n      return target.set(_width * _pixelRatio, _height * _pixelRatio).floor();\n    };\n\n    this.setDrawingBufferSize = function (width, height, pixelRatio) {\n      _width = width;\n      _height = height;\n      _pixelRatio = pixelRatio;\n      _canvas.width = Math.floor(width * pixelRatio);\n      _canvas.height = Math.floor(height * pixelRatio);\n      this.setViewport(0, 0, width, height);\n    };\n\n    this.getCurrentViewport = function (target) {\n      return target.copy(_currentViewport);\n    };\n\n    this.getViewport = function (target) {\n      return target.copy(_viewport);\n    };\n\n    this.setViewport = function (x, y, width, height) {\n      if (x.isVector4) {\n        _viewport.set(x.x, x.y, x.z, x.w);\n      } else {\n        _viewport.set(x, y, width, height);\n      }\n\n      state.viewport(_currentViewport.copy(_viewport).multiplyScalar(_pixelRatio).floor());\n    };\n\n    this.getScissor = function (target) {\n      return target.copy(_scissor);\n    };\n\n    this.setScissor = function (x, y, width, height) {\n      if (x.isVector4) {\n        _scissor.set(x.x, x.y, x.z, x.w);\n      } else {\n        _scissor.set(x, y, width, height);\n      }\n\n      state.scissor(_currentScissor.copy(_scissor).multiplyScalar(_pixelRatio).floor());\n    };\n\n    this.getScissorTest = function () {\n      return _scissorTest;\n    };\n\n    this.setScissorTest = function (boolean) {\n      state.setScissorTest(_scissorTest = boolean);\n    };\n\n    this.setOpaqueSort = function (method) {\n      _opaqueSort = method;\n    };\n\n    this.setTransparentSort = function (method) {\n      _transparentSort = method;\n    }; // Clearing\n\n\n    this.getClearColor = function (target) {\n      return target.copy(background.getClearColor());\n    };\n\n    this.setClearColor = function () {\n      background.setClearColor.apply(background, arguments);\n    };\n\n    this.getClearAlpha = function () {\n      return background.getClearAlpha();\n    };\n\n    this.setClearAlpha = function () {\n      background.setClearAlpha.apply(background, arguments);\n    };\n\n    this.clear = function (color, depth, stencil) {\n      var bits = 0;\n      if (color === undefined || color) bits |= _gl.COLOR_BUFFER_BIT;\n      if (depth === undefined || depth) bits |= _gl.DEPTH_BUFFER_BIT;\n      if (stencil === undefined || stencil) bits |= _gl.STENCIL_BUFFER_BIT;\n\n      _gl.clear(bits);\n    };\n\n    this.clearColor = function () {\n      this.clear(true, false, false);\n    };\n\n    this.clearDepth = function () {\n      this.clear(false, true, false);\n    };\n\n    this.clearStencil = function () {\n      this.clear(false, false, true);\n    }; //\n\n\n    this.dispose = function () {\n      _canvas.removeEventListener('webglcontextlost', onContextLost, false);\n\n      _canvas.removeEventListener('webglcontextrestored', onContextRestore, false);\n\n      renderLists.dispose();\n      renderStates.dispose();\n      properties.dispose();\n      cubemaps.dispose();\n      cubeuvmaps.dispose();\n      objects.dispose();\n      bindingStates.dispose();\n      xr.dispose();\n      xr.removeEventListener('sessionstart', onXRSessionStart);\n      xr.removeEventListener('sessionend', onXRSessionEnd);\n\n      if (_transmissionRenderTarget) {\n        _transmissionRenderTarget.dispose();\n\n        _transmissionRenderTarget = null;\n      }\n\n      animation.stop();\n    }; // Events\n\n\n    function onContextLost(event) {\n      event.preventDefault();\n      console.log('THREE.WebGLRenderer: Context Lost.');\n      _isContextLost = true;\n    }\n\n    function onContextRestore() {\n      console.log('THREE.WebGLRenderer: Context Restored.');\n      _isContextLost = false;\n      var infoAutoReset = info.autoReset;\n      var shadowMapEnabled = shadowMap.enabled;\n      var shadowMapAutoUpdate = shadowMap.autoUpdate;\n      var shadowMapNeedsUpdate = shadowMap.needsUpdate;\n      var shadowMapType = shadowMap.type;\n      initGLContext();\n      info.autoReset = infoAutoReset;\n      shadowMap.enabled = shadowMapEnabled;\n      shadowMap.autoUpdate = shadowMapAutoUpdate;\n      shadowMap.needsUpdate = shadowMapNeedsUpdate;\n      shadowMap.type = shadowMapType;\n    }\n\n    function onMaterialDispose(event) {\n      var material = event.target;\n      material.removeEventListener('dispose', onMaterialDispose);\n      deallocateMaterial(material);\n    } // Buffer deallocation\n\n\n    function deallocateMaterial(material) {\n      releaseMaterialProgramReferences(material);\n      properties.remove(material);\n    }\n\n    function releaseMaterialProgramReferences(material) {\n      var programs = properties.get(material).programs;\n\n      if (programs !== undefined) {\n        programs.forEach(function (program) {\n          programCache.releaseProgram(program);\n        });\n      }\n    } // Buffer rendering\n\n\n    this.renderBufferDirect = function (camera, scene, geometry, material, object, group) {\n      if (scene === null) scene = _emptyScene; // renderBufferDirect second parameter used to be fog (could be null)\n\n      var frontFaceCW = object.isMesh && object.matrixWorld.determinant() < 0;\n      var program = setProgram(camera, scene, geometry, material, object);\n      state.setMaterial(material, frontFaceCW); //\n\n      var index = geometry.index;\n      var position = geometry.attributes.position; //\n\n      if (index === null) {\n        if (position === undefined || position.count === 0) return;\n      } else if (index.count === 0) {\n        return;\n      } //\n\n\n      var rangeFactor = 1;\n\n      if (material.wireframe === true) {\n        index = geometries.getWireframeAttribute(geometry);\n        rangeFactor = 2;\n      }\n\n      bindingStates.setup(object, material, program, geometry, index);\n      var attribute;\n      var renderer = bufferRenderer;\n\n      if (index !== null) {\n        attribute = attributes.get(index);\n        renderer = indexedBufferRenderer;\n        renderer.setIndex(attribute);\n      } //\n\n\n      var dataCount = index !== null ? index.count : position.count;\n      var rangeStart = geometry.drawRange.start * rangeFactor;\n      var rangeCount = geometry.drawRange.count * rangeFactor;\n      var groupStart = group !== null ? group.start * rangeFactor : 0;\n      var groupCount = group !== null ? group.count * rangeFactor : Infinity;\n      var drawStart = Math.max(rangeStart, groupStart);\n      var drawEnd = Math.min(dataCount, rangeStart + rangeCount, groupStart + groupCount) - 1;\n      var drawCount = Math.max(0, drawEnd - drawStart + 1);\n      if (drawCount === 0) return; //\n\n      if (object.isMesh) {\n        if (material.wireframe === true) {\n          state.setLineWidth(material.wireframeLinewidth * getTargetPixelRatio());\n          renderer.setMode(_gl.LINES);\n        } else {\n          renderer.setMode(_gl.TRIANGLES);\n        }\n      } else if (object.isLine) {\n        var lineWidth = material.linewidth;\n        if (lineWidth === undefined) lineWidth = 1; // Not using Line*Material\n\n        state.setLineWidth(lineWidth * getTargetPixelRatio());\n\n        if (object.isLineSegments) {\n          renderer.setMode(_gl.LINES);\n        } else if (object.isLineLoop) {\n          renderer.setMode(_gl.LINE_LOOP);\n        } else {\n          renderer.setMode(_gl.LINE_STRIP);\n        }\n      } else if (object.isPoints) {\n        renderer.setMode(_gl.POINTS);\n      } else if (object.isSprite) {\n        renderer.setMode(_gl.TRIANGLES);\n      }\n\n      if (object.isInstancedMesh) {\n        renderer.renderInstances(drawStart, drawCount, object.count);\n      } else if (geometry.isInstancedBufferGeometry) {\n        var instanceCount = Math.min(geometry.instanceCount, geometry._maxInstanceCount);\n        renderer.renderInstances(drawStart, drawCount, instanceCount);\n      } else {\n        renderer.render(drawStart, drawCount);\n      }\n    }; // Compile\n\n\n    this.compile = function (scene, camera) {\n      currentRenderState = renderStates.get(scene);\n      currentRenderState.init();\n      renderStateStack.push(currentRenderState);\n      scene.traverseVisible(function (object) {\n        if (object.isLight && object.layers.test(camera.layers)) {\n          currentRenderState.pushLight(object);\n\n          if (object.castShadow) {\n            currentRenderState.pushShadow(object);\n          }\n        }\n      });\n      currentRenderState.setupLights(_this.physicallyCorrectLights);\n      scene.traverse(function (object) {\n        var material = object.material;\n\n        if (material) {\n          if (Array.isArray(material)) {\n            for (var _i143 = 0; _i143 < material.length; _i143++) {\n              var material2 = material[_i143];\n              getProgram(material2, scene, object);\n            }\n          } else {\n            getProgram(material, scene, object);\n          }\n        }\n      });\n      renderStateStack.pop();\n      currentRenderState = null;\n    }; // Animation Loop\n\n\n    var onAnimationFrameCallback = null;\n\n    function onAnimationFrame(time) {\n      if (onAnimationFrameCallback) onAnimationFrameCallback(time);\n    }\n\n    function onXRSessionStart() {\n      animation.stop();\n    }\n\n    function onXRSessionEnd() {\n      animation.start();\n    }\n\n    var animation = new WebGLAnimation();\n    animation.setAnimationLoop(onAnimationFrame);\n    if (typeof window !== 'undefined') animation.setContext(window);\n\n    this.setAnimationLoop = function (callback) {\n      onAnimationFrameCallback = callback;\n      xr.setAnimationLoop(callback);\n      callback === null ? animation.stop() : animation.start();\n    };\n\n    xr.addEventListener('sessionstart', onXRSessionStart);\n    xr.addEventListener('sessionend', onXRSessionEnd); // Rendering\n\n    this.render = function (scene, camera) {\n      if (camera !== undefined && camera.isCamera !== true) {\n        console.error('THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.');\n        return;\n      }\n\n      if (_isContextLost === true) return; // update scene graph\n\n      if (scene.autoUpdate === true) scene.updateMatrixWorld(); // update camera matrices and frustum\n\n      if (camera.parent === null) camera.updateMatrixWorld();\n\n      if (xr.enabled === true && xr.isPresenting === true) {\n        if (xr.cameraAutoUpdate === true) xr.updateCamera(camera);\n        camera = xr.getCamera(); // use XR camera for rendering\n      } //\n\n\n      if (scene.isScene === true) scene.onBeforeRender(_this, scene, camera, _currentRenderTarget);\n      currentRenderState = renderStates.get(scene, renderStateStack.length);\n      currentRenderState.init();\n      renderStateStack.push(currentRenderState);\n\n      _projScreenMatrix.multiplyMatrices(camera.projectionMatrix, camera.matrixWorldInverse);\n\n      _frustum.setFromProjectionMatrix(_projScreenMatrix);\n\n      _localClippingEnabled = this.localClippingEnabled;\n      _clippingEnabled = clipping.init(this.clippingPlanes, _localClippingEnabled, camera);\n      currentRenderList = renderLists.get(scene, renderListStack.length);\n      currentRenderList.init();\n      renderListStack.push(currentRenderList);\n      projectObject(scene, camera, 0, _this.sortObjects);\n      currentRenderList.finish();\n\n      if (_this.sortObjects === true) {\n        currentRenderList.sort(_opaqueSort, _transparentSort);\n      } //\n\n\n      if (_clippingEnabled === true) clipping.beginShadows();\n      var shadowsArray = currentRenderState.state.shadowsArray;\n      shadowMap.render(shadowsArray, scene, camera);\n      if (_clippingEnabled === true) clipping.endShadows(); //\n\n      if (this.info.autoReset === true) this.info.reset(); //\n\n      background.render(currentRenderList, scene); // render scene\n\n      currentRenderState.setupLights(_this.physicallyCorrectLights);\n\n      if (camera.isArrayCamera) {\n        var cameras = camera.cameras;\n\n        for (var _i144 = 0, l = cameras.length; _i144 < l; _i144++) {\n          var camera2 = cameras[_i144];\n          renderScene(currentRenderList, scene, camera2, camera2.viewport);\n        }\n      } else {\n        renderScene(currentRenderList, scene, camera);\n      } //\n\n\n      if (_currentRenderTarget !== null) {\n        // resolve multisample renderbuffers to a single-sample texture if necessary\n        textures.updateMultisampleRenderTarget(_currentRenderTarget); // Generate mipmap if we're using any kind of mipmap filtering\n\n        textures.updateRenderTargetMipmap(_currentRenderTarget);\n      } //\n\n\n      if (scene.isScene === true) scene.onAfterRender(_this, scene, camera); // Ensure depth buffer writing is enabled so it can be cleared on next render\n\n      state.buffers.depth.setTest(true);\n      state.buffers.depth.setMask(true);\n      state.buffers.color.setMask(true);\n      state.setPolygonOffset(false); // _gl.finish();\n\n      bindingStates.resetDefaultState();\n      _currentMaterialId = -1;\n      _currentCamera = null;\n      renderStateStack.pop();\n\n      if (renderStateStack.length > 0) {\n        currentRenderState = renderStateStack[renderStateStack.length - 1];\n      } else {\n        currentRenderState = null;\n      }\n\n      renderListStack.pop();\n\n      if (renderListStack.length > 0) {\n        currentRenderList = renderListStack[renderListStack.length - 1];\n      } else {\n        currentRenderList = null;\n      }\n    };\n\n    function projectObject(object, camera, groupOrder, sortObjects) {\n      if (object.visible === false) return;\n      var visible = object.layers.test(camera.layers);\n\n      if (visible) {\n        if (object.isGroup) {\n          groupOrder = object.renderOrder;\n        } else if (object.isLOD) {\n          if (object.autoUpdate === true) object.update(camera);\n        } else if (object.isLight) {\n          currentRenderState.pushLight(object);\n\n          if (object.castShadow) {\n            currentRenderState.pushShadow(object);\n          }\n        } else if (object.isSprite) {\n          if (!object.frustumCulled || _frustum.intersectsSprite(object)) {\n            if (sortObjects) {\n              _vector3.setFromMatrixPosition(object.matrixWorld).applyMatrix4(_projScreenMatrix);\n            }\n\n            var geometry = objects.update(object);\n            var material = object.material;\n\n            if (material.visible) {\n              currentRenderList.push(object, geometry, material, groupOrder, _vector3.z, null);\n            }\n          }\n        } else if (object.isMesh || object.isLine || object.isPoints) {\n          if (object.isSkinnedMesh) {\n            // update skeleton only once in a frame\n            if (object.skeleton.frame !== info.render.frame) {\n              object.skeleton.update();\n              object.skeleton.frame = info.render.frame;\n            }\n          }\n\n          if (!object.frustumCulled || _frustum.intersectsObject(object)) {\n            if (sortObjects) {\n              _vector3.setFromMatrixPosition(object.matrixWorld).applyMatrix4(_projScreenMatrix);\n            }\n\n            var _geometry2 = objects.update(object);\n\n            var _material = object.material;\n\n            if (Array.isArray(_material)) {\n              var groups = _geometry2.groups;\n\n              for (var _i145 = 0, l = groups.length; _i145 < l; _i145++) {\n                var group = groups[_i145];\n                var groupMaterial = _material[group.materialIndex];\n\n                if (groupMaterial && groupMaterial.visible) {\n                  currentRenderList.push(object, _geometry2, groupMaterial, groupOrder, _vector3.z, group);\n                }\n              }\n            } else if (_material.visible) {\n              currentRenderList.push(object, _geometry2, _material, groupOrder, _vector3.z, null);\n            }\n          }\n        }\n      }\n\n      var children = object.children;\n\n      for (var _i146 = 0, _l5 = children.length; _i146 < _l5; _i146++) {\n        projectObject(children[_i146], camera, groupOrder, sortObjects);\n      }\n    }\n\n    function renderScene(currentRenderList, scene, camera, viewport) {\n      var opaqueObjects = currentRenderList.opaque;\n      var transmissiveObjects = currentRenderList.transmissive;\n      var transparentObjects = currentRenderList.transparent;\n      currentRenderState.setupLightsView(camera);\n      if (transmissiveObjects.length > 0) renderTransmissionPass(opaqueObjects, scene, camera);\n      if (viewport) state.viewport(_currentViewport.copy(viewport));\n      if (opaqueObjects.length > 0) renderObjects(opaqueObjects, scene, camera);\n      if (transmissiveObjects.length > 0) renderObjects(transmissiveObjects, scene, camera);\n      if (transparentObjects.length > 0) renderObjects(transparentObjects, scene, camera);\n    }\n\n    function renderTransmissionPass(opaqueObjects, scene, camera) {\n      if (_transmissionRenderTarget === null) {\n        var needsAntialias = _antialias === true && capabilities.isWebGL2 === true;\n        var renderTargetType = needsAntialias ? WebGLMultisampleRenderTarget : WebGLRenderTarget;\n        _transmissionRenderTarget = new renderTargetType(1024, 1024, {\n          generateMipmaps: true,\n          type: utils.convert(HalfFloatType) !== null ? HalfFloatType : UnsignedByteType,\n          minFilter: LinearMipmapLinearFilter,\n          magFilter: NearestFilter,\n          wrapS: ClampToEdgeWrapping,\n          wrapT: ClampToEdgeWrapping\n        });\n      }\n\n      var currentRenderTarget = _this.getRenderTarget();\n\n      _this.setRenderTarget(_transmissionRenderTarget);\n\n      _this.clear(); // Turn off the features which can affect the frag color for opaque objects pass.\n      // Otherwise they are applied twice in opaque objects pass and transmission objects pass.\n\n\n      var currentToneMapping = _this.toneMapping;\n      _this.toneMapping = NoToneMapping;\n      renderObjects(opaqueObjects, scene, camera);\n      _this.toneMapping = currentToneMapping;\n      textures.updateMultisampleRenderTarget(_transmissionRenderTarget);\n      textures.updateRenderTargetMipmap(_transmissionRenderTarget);\n\n      _this.setRenderTarget(currentRenderTarget);\n    }\n\n    function renderObjects(renderList, scene, camera) {\n      var overrideMaterial = scene.isScene === true ? scene.overrideMaterial : null;\n\n      for (var _i147 = 0, l = renderList.length; _i147 < l; _i147++) {\n        var renderItem = renderList[_i147];\n        var object = renderItem.object;\n        var geometry = renderItem.geometry;\n        var material = overrideMaterial === null ? renderItem.material : overrideMaterial;\n        var group = renderItem.group;\n\n        if (object.layers.test(camera.layers)) {\n          renderObject(object, scene, camera, geometry, material, group);\n        }\n      }\n    }\n\n    function renderObject(object, scene, camera, geometry, material, group) {\n      object.onBeforeRender(_this, scene, camera, geometry, material, group);\n      object.modelViewMatrix.multiplyMatrices(camera.matrixWorldInverse, object.matrixWorld);\n      object.normalMatrix.getNormalMatrix(object.modelViewMatrix);\n      material.onBeforeRender(_this, scene, camera, geometry, object, group);\n\n      if (material.transparent === true && material.side === DoubleSide) {\n        material.side = BackSide;\n        material.needsUpdate = true;\n\n        _this.renderBufferDirect(camera, scene, geometry, material, object, group);\n\n        material.side = FrontSide;\n        material.needsUpdate = true;\n\n        _this.renderBufferDirect(camera, scene, geometry, material, object, group);\n\n        material.side = DoubleSide;\n      } else {\n        _this.renderBufferDirect(camera, scene, geometry, material, object, group);\n      }\n\n      object.onAfterRender(_this, scene, camera, geometry, material, group);\n    }\n\n    function getProgram(material, scene, object) {\n      if (scene.isScene !== true) scene = _emptyScene; // scene could be a Mesh, Line, Points, ...\n\n      var materialProperties = properties.get(material);\n      var lights = currentRenderState.state.lights;\n      var shadowsArray = currentRenderState.state.shadowsArray;\n      var lightsStateVersion = lights.state.version;\n      var parameters = programCache.getParameters(material, lights.state, shadowsArray, scene, object);\n      var programCacheKey = programCache.getProgramCacheKey(parameters);\n      var programs = materialProperties.programs; // always update environment and fog - changing these trigger an getProgram call, but it's possible that the program doesn't change\n\n      materialProperties.environment = material.isMeshStandardMaterial ? scene.environment : null;\n      materialProperties.fog = scene.fog;\n      materialProperties.envMap = (material.isMeshStandardMaterial ? cubeuvmaps : cubemaps).get(material.envMap || materialProperties.environment);\n\n      if (programs === undefined) {\n        // new material\n        material.addEventListener('dispose', onMaterialDispose);\n        programs = new Map();\n        materialProperties.programs = programs;\n      }\n\n      var program = programs.get(programCacheKey);\n\n      if (program !== undefined) {\n        // early out if program and light state is identical\n        if (materialProperties.currentProgram === program && materialProperties.lightsStateVersion === lightsStateVersion) {\n          updateCommonMaterialProperties(material, parameters);\n          return program;\n        }\n      } else {\n        parameters.uniforms = programCache.getUniforms(material);\n        material.onBuild(object, parameters, _this);\n        material.onBeforeCompile(parameters, _this);\n        program = programCache.acquireProgram(parameters, programCacheKey);\n        programs.set(programCacheKey, program);\n        materialProperties.uniforms = parameters.uniforms;\n      }\n\n      var uniforms = materialProperties.uniforms;\n\n      if (!material.isShaderMaterial && !material.isRawShaderMaterial || material.clipping === true) {\n        uniforms.clippingPlanes = clipping.uniform;\n      }\n\n      updateCommonMaterialProperties(material, parameters); // store the light setup it was created for\n\n      materialProperties.needsLights = materialNeedsLights(material);\n      materialProperties.lightsStateVersion = lightsStateVersion;\n\n      if (materialProperties.needsLights) {\n        // wire up the material to this renderer's lighting state\n        uniforms.ambientLightColor.value = lights.state.ambient;\n        uniforms.lightProbe.value = lights.state.probe;\n        uniforms.directionalLights.value = lights.state.directional;\n        uniforms.directionalLightShadows.value = lights.state.directionalShadow;\n        uniforms.spotLights.value = lights.state.spot;\n        uniforms.spotLightShadows.value = lights.state.spotShadow;\n        uniforms.rectAreaLights.value = lights.state.rectArea;\n        uniforms.ltc_1.value = lights.state.rectAreaLTC1;\n        uniforms.ltc_2.value = lights.state.rectAreaLTC2;\n        uniforms.pointLights.value = lights.state.point;\n        uniforms.pointLightShadows.value = lights.state.pointShadow;\n        uniforms.hemisphereLights.value = lights.state.hemi;\n        uniforms.directionalShadowMap.value = lights.state.directionalShadowMap;\n        uniforms.directionalShadowMatrix.value = lights.state.directionalShadowMatrix;\n        uniforms.spotShadowMap.value = lights.state.spotShadowMap;\n        uniforms.spotShadowMatrix.value = lights.state.spotShadowMatrix;\n        uniforms.pointShadowMap.value = lights.state.pointShadowMap;\n        uniforms.pointShadowMatrix.value = lights.state.pointShadowMatrix; // TODO (abelnation): add area lights shadow info to uniforms\n      }\n\n      var progUniforms = program.getUniforms();\n      var uniformsList = WebGLUniforms.seqWithValue(progUniforms.seq, uniforms);\n      materialProperties.currentProgram = program;\n      materialProperties.uniformsList = uniformsList;\n      return program;\n    }\n\n    function updateCommonMaterialProperties(material, parameters) {\n      var materialProperties = properties.get(material);\n      materialProperties.outputEncoding = parameters.outputEncoding;\n      materialProperties.instancing = parameters.instancing;\n      materialProperties.skinning = parameters.skinning;\n      materialProperties.morphTargets = parameters.morphTargets;\n      materialProperties.morphNormals = parameters.morphNormals;\n      materialProperties.morphTargetsCount = parameters.morphTargetsCount;\n      materialProperties.numClippingPlanes = parameters.numClippingPlanes;\n      materialProperties.numIntersection = parameters.numClipIntersection;\n      materialProperties.vertexAlphas = parameters.vertexAlphas;\n      materialProperties.vertexTangents = parameters.vertexTangents;\n    }\n\n    function setProgram(camera, scene, geometry, material, object) {\n      if (scene.isScene !== true) scene = _emptyScene; // scene could be a Mesh, Line, Points, ...\n\n      textures.resetTextureUnits();\n      var fog = scene.fog;\n      var environment = material.isMeshStandardMaterial ? scene.environment : null;\n      var encoding = _currentRenderTarget === null ? _this.outputEncoding : _currentRenderTarget.texture.encoding;\n      var envMap = (material.isMeshStandardMaterial ? cubeuvmaps : cubemaps).get(material.envMap || environment);\n      var vertexAlphas = material.vertexColors === true && !!geometry.attributes.color && geometry.attributes.color.itemSize === 4;\n      var vertexTangents = !!material.normalMap && !!geometry.attributes.tangent;\n      var morphTargets = !!geometry.morphAttributes.position;\n      var morphNormals = !!geometry.morphAttributes.normal;\n      var morphTargetsCount = !!geometry.morphAttributes.position ? geometry.morphAttributes.position.length : 0;\n      var materialProperties = properties.get(material);\n      var lights = currentRenderState.state.lights;\n\n      if (_clippingEnabled === true) {\n        if (_localClippingEnabled === true || camera !== _currentCamera) {\n          var useCache = camera === _currentCamera && material.id === _currentMaterialId; // we might want to call this function with some ClippingGroup\n          // object instead of the material, once it becomes feasible\n          // (#8465, #8379)\n\n          clipping.setState(material, camera, useCache);\n        }\n      } //\n\n\n      var needsProgramChange = false;\n\n      if (material.version === materialProperties.__version) {\n        if (materialProperties.needsLights && materialProperties.lightsStateVersion !== lights.state.version) {\n          needsProgramChange = true;\n        } else if (materialProperties.outputEncoding !== encoding) {\n          needsProgramChange = true;\n        } else if (object.isInstancedMesh && materialProperties.instancing === false) {\n          needsProgramChange = true;\n        } else if (!object.isInstancedMesh && materialProperties.instancing === true) {\n          needsProgramChange = true;\n        } else if (object.isSkinnedMesh && materialProperties.skinning === false) {\n          needsProgramChange = true;\n        } else if (!object.isSkinnedMesh && materialProperties.skinning === true) {\n          needsProgramChange = true;\n        } else if (materialProperties.envMap !== envMap) {\n          needsProgramChange = true;\n        } else if (material.fog && materialProperties.fog !== fog) {\n          needsProgramChange = true;\n        } else if (materialProperties.numClippingPlanes !== undefined && (materialProperties.numClippingPlanes !== clipping.numPlanes || materialProperties.numIntersection !== clipping.numIntersection)) {\n          needsProgramChange = true;\n        } else if (materialProperties.vertexAlphas !== vertexAlphas) {\n          needsProgramChange = true;\n        } else if (materialProperties.vertexTangents !== vertexTangents) {\n          needsProgramChange = true;\n        } else if (materialProperties.morphTargets !== morphTargets) {\n          needsProgramChange = true;\n        } else if (materialProperties.morphNormals !== morphNormals) {\n          needsProgramChange = true;\n        } else if (capabilities.isWebGL2 === true && materialProperties.morphTargetsCount !== morphTargetsCount) {\n          needsProgramChange = true;\n        }\n      } else {\n        needsProgramChange = true;\n        materialProperties.__version = material.version;\n      } //\n\n\n      var program = materialProperties.currentProgram;\n\n      if (needsProgramChange === true) {\n        program = getProgram(material, scene, object);\n      }\n\n      var refreshProgram = false;\n      var refreshMaterial = false;\n      var refreshLights = false;\n      var p_uniforms = program.getUniforms(),\n          m_uniforms = materialProperties.uniforms;\n\n      if (state.useProgram(program.program)) {\n        refreshProgram = true;\n        refreshMaterial = true;\n        refreshLights = true;\n      }\n\n      if (material.id !== _currentMaterialId) {\n        _currentMaterialId = material.id;\n        refreshMaterial = true;\n      }\n\n      if (refreshProgram || _currentCamera !== camera) {\n        p_uniforms.setValue(_gl, 'projectionMatrix', camera.projectionMatrix);\n\n        if (capabilities.logarithmicDepthBuffer) {\n          p_uniforms.setValue(_gl, 'logDepthBufFC', 2.0 / (Math.log(camera.far + 1.0) / Math.LN2));\n        }\n\n        if (_currentCamera !== camera) {\n          _currentCamera = camera; // lighting uniforms depend on the camera so enforce an update\n          // now, in case this material supports lights - or later, when\n          // the next material that does gets activated:\n\n          refreshMaterial = true; // set to true on material change\n\n          refreshLights = true; // remains set until update done\n        } // load material specific uniforms\n        // (shader material also gets them for the sake of genericity)\n\n\n        if (material.isShaderMaterial || material.isMeshPhongMaterial || material.isMeshToonMaterial || material.isMeshStandardMaterial || material.envMap) {\n          var uCamPos = p_uniforms.map.cameraPosition;\n\n          if (uCamPos !== undefined) {\n            uCamPos.setValue(_gl, _vector3.setFromMatrixPosition(camera.matrixWorld));\n          }\n        }\n\n        if (material.isMeshPhongMaterial || material.isMeshToonMaterial || material.isMeshLambertMaterial || material.isMeshBasicMaterial || material.isMeshStandardMaterial || material.isShaderMaterial) {\n          p_uniforms.setValue(_gl, 'isOrthographic', camera.isOrthographicCamera === true);\n        }\n\n        if (material.isMeshPhongMaterial || material.isMeshToonMaterial || material.isMeshLambertMaterial || material.isMeshBasicMaterial || material.isMeshStandardMaterial || material.isShaderMaterial || material.isShadowMaterial || object.isSkinnedMesh) {\n          p_uniforms.setValue(_gl, 'viewMatrix', camera.matrixWorldInverse);\n        }\n      } // skinning and morph target uniforms must be set even if material didn't change\n      // auto-setting of texture unit for bone and morph texture must go before other textures\n      // otherwise textures used for skinning and morphing can take over texture units reserved for other material textures\n\n\n      if (object.isSkinnedMesh) {\n        p_uniforms.setOptional(_gl, object, 'bindMatrix');\n        p_uniforms.setOptional(_gl, object, 'bindMatrixInverse');\n        var skeleton = object.skeleton;\n\n        if (skeleton) {\n          if (capabilities.floatVertexTextures) {\n            if (skeleton.boneTexture === null) skeleton.computeBoneTexture();\n            p_uniforms.setValue(_gl, 'boneTexture', skeleton.boneTexture, textures);\n            p_uniforms.setValue(_gl, 'boneTextureSize', skeleton.boneTextureSize);\n          } else {\n            p_uniforms.setOptional(_gl, skeleton, 'boneMatrices');\n          }\n        }\n      }\n\n      if (!!geometry && (geometry.morphAttributes.position !== undefined || geometry.morphAttributes.normal !== undefined)) {\n        morphtargets.update(object, geometry, material, program);\n      }\n\n      if (refreshMaterial || materialProperties.receiveShadow !== object.receiveShadow) {\n        materialProperties.receiveShadow = object.receiveShadow;\n        p_uniforms.setValue(_gl, 'receiveShadow', object.receiveShadow);\n      }\n\n      if (refreshMaterial) {\n        p_uniforms.setValue(_gl, 'toneMappingExposure', _this.toneMappingExposure);\n\n        if (materialProperties.needsLights) {\n          // the current material requires lighting info\n          // note: all lighting uniforms are always set correctly\n          // they simply reference the renderer's state for their\n          // values\n          //\n          // use the current material's .needsUpdate flags to set\n          // the GL state when required\n          markUniformsLightsNeedsUpdate(m_uniforms, refreshLights);\n        } // refresh uniforms common to several materials\n\n\n        if (fog && material.fog) {\n          materials.refreshFogUniforms(m_uniforms, fog);\n        }\n\n        materials.refreshMaterialUniforms(m_uniforms, material, _pixelRatio, _height, _transmissionRenderTarget);\n        WebGLUniforms.upload(_gl, materialProperties.uniformsList, m_uniforms, textures);\n      }\n\n      if (material.isShaderMaterial && material.uniformsNeedUpdate === true) {\n        WebGLUniforms.upload(_gl, materialProperties.uniformsList, m_uniforms, textures);\n        material.uniformsNeedUpdate = false;\n      }\n\n      if (material.isSpriteMaterial) {\n        p_uniforms.setValue(_gl, 'center', object.center);\n      } // common matrices\n\n\n      p_uniforms.setValue(_gl, 'modelViewMatrix', object.modelViewMatrix);\n      p_uniforms.setValue(_gl, 'normalMatrix', object.normalMatrix);\n      p_uniforms.setValue(_gl, 'modelMatrix', object.matrixWorld);\n      return program;\n    } // If uniforms are marked as clean, they don't need to be loaded to the GPU.\n\n\n    function markUniformsLightsNeedsUpdate(uniforms, value) {\n      uniforms.ambientLightColor.needsUpdate = value;\n      uniforms.lightProbe.needsUpdate = value;\n      uniforms.directionalLights.needsUpdate = value;\n      uniforms.directionalLightShadows.needsUpdate = value;\n      uniforms.pointLights.needsUpdate = value;\n      uniforms.pointLightShadows.needsUpdate = value;\n      uniforms.spotLights.needsUpdate = value;\n      uniforms.spotLightShadows.needsUpdate = value;\n      uniforms.rectAreaLights.needsUpdate = value;\n      uniforms.hemisphereLights.needsUpdate = value;\n    }\n\n    function materialNeedsLights(material) {\n      return material.isMeshLambertMaterial || material.isMeshToonMaterial || material.isMeshPhongMaterial || material.isMeshStandardMaterial || material.isShadowMaterial || material.isShaderMaterial && material.lights === true;\n    }\n\n    this.getActiveCubeFace = function () {\n      return _currentActiveCubeFace;\n    };\n\n    this.getActiveMipmapLevel = function () {\n      return _currentActiveMipmapLevel;\n    };\n\n    this.getRenderTarget = function () {\n      return _currentRenderTarget;\n    };\n\n    this.setRenderTarget = function (renderTarget) {\n      var activeCubeFace = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n      var activeMipmapLevel = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n      _currentRenderTarget = renderTarget;\n      _currentActiveCubeFace = activeCubeFace;\n      _currentActiveMipmapLevel = activeMipmapLevel;\n\n      if (renderTarget && properties.get(renderTarget).__webglFramebuffer === undefined) {\n        textures.setupRenderTarget(renderTarget);\n      }\n\n      var framebuffer = null;\n      var isCube = false;\n      var isRenderTarget3D = false;\n\n      if (renderTarget) {\n        var texture = renderTarget.texture;\n\n        if (texture.isDataTexture3D || texture.isDataTexture2DArray) {\n          isRenderTarget3D = true;\n        }\n\n        var __webglFramebuffer = properties.get(renderTarget).__webglFramebuffer;\n\n        if (renderTarget.isWebGLCubeRenderTarget) {\n          framebuffer = __webglFramebuffer[activeCubeFace];\n          isCube = true;\n        } else if (renderTarget.isWebGLMultisampleRenderTarget) {\n          framebuffer = properties.get(renderTarget).__webglMultisampledFramebuffer;\n        } else {\n          framebuffer = __webglFramebuffer;\n        }\n\n        _currentViewport.copy(renderTarget.viewport);\n\n        _currentScissor.copy(renderTarget.scissor);\n\n        _currentScissorTest = renderTarget.scissorTest;\n      } else {\n        _currentViewport.copy(_viewport).multiplyScalar(_pixelRatio).floor();\n\n        _currentScissor.copy(_scissor).multiplyScalar(_pixelRatio).floor();\n\n        _currentScissorTest = _scissorTest;\n      }\n\n      var framebufferBound = state.bindFramebuffer(_gl.FRAMEBUFFER, framebuffer);\n\n      if (framebufferBound && capabilities.drawBuffers) {\n        var needsUpdate = false;\n\n        if (renderTarget) {\n          if (renderTarget.isWebGLMultipleRenderTargets) {\n            var _textures2 = renderTarget.texture;\n\n            if (_currentDrawBuffers.length !== _textures2.length || _currentDrawBuffers[0] !== _gl.COLOR_ATTACHMENT0) {\n              for (var _i148 = 0, il = _textures2.length; _i148 < il; _i148++) {\n                _currentDrawBuffers[_i148] = _gl.COLOR_ATTACHMENT0 + _i148;\n              }\n\n              _currentDrawBuffers.length = _textures2.length;\n              needsUpdate = true;\n            }\n          } else {\n            if (_currentDrawBuffers.length !== 1 || _currentDrawBuffers[0] !== _gl.COLOR_ATTACHMENT0) {\n              _currentDrawBuffers[0] = _gl.COLOR_ATTACHMENT0;\n              _currentDrawBuffers.length = 1;\n              needsUpdate = true;\n            }\n          }\n        } else {\n          if (_currentDrawBuffers.length !== 1 || _currentDrawBuffers[0] !== _gl.BACK) {\n            _currentDrawBuffers[0] = _gl.BACK;\n            _currentDrawBuffers.length = 1;\n            needsUpdate = true;\n          }\n        }\n\n        if (needsUpdate) {\n          if (capabilities.isWebGL2) {\n            _gl.drawBuffers(_currentDrawBuffers);\n          } else {\n            extensions.get('WEBGL_draw_buffers').drawBuffersWEBGL(_currentDrawBuffers);\n          }\n        }\n      }\n\n      state.viewport(_currentViewport);\n      state.scissor(_currentScissor);\n      state.setScissorTest(_currentScissorTest);\n\n      if (isCube) {\n        var textureProperties = properties.get(renderTarget.texture);\n\n        _gl.framebufferTexture2D(_gl.FRAMEBUFFER, _gl.COLOR_ATTACHMENT0, _gl.TEXTURE_CUBE_MAP_POSITIVE_X + activeCubeFace, textureProperties.__webglTexture, activeMipmapLevel);\n      } else if (isRenderTarget3D) {\n        var _textureProperties = properties.get(renderTarget.texture);\n\n        var layer = activeCubeFace || 0;\n\n        _gl.framebufferTextureLayer(_gl.FRAMEBUFFER, _gl.COLOR_ATTACHMENT0, _textureProperties.__webglTexture, activeMipmapLevel || 0, layer);\n      }\n\n      _currentMaterialId = -1; // reset current material to ensure correct uniform bindings\n    };\n\n    this.readRenderTargetPixels = function (renderTarget, x, y, width, height, buffer, activeCubeFaceIndex) {\n      if (!(renderTarget && renderTarget.isWebGLRenderTarget)) {\n        console.error('THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.');\n        return;\n      }\n\n      var framebuffer = properties.get(renderTarget).__webglFramebuffer;\n\n      if (renderTarget.isWebGLCubeRenderTarget && activeCubeFaceIndex !== undefined) {\n        framebuffer = framebuffer[activeCubeFaceIndex];\n      }\n\n      if (framebuffer) {\n        state.bindFramebuffer(_gl.FRAMEBUFFER, framebuffer);\n\n        try {\n          var texture = renderTarget.texture;\n          var textureFormat = texture.format;\n          var textureType = texture.type;\n\n          if (textureFormat !== RGBAFormat && utils.convert(textureFormat) !== _gl.getParameter(_gl.IMPLEMENTATION_COLOR_READ_FORMAT)) {\n            console.error('THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.');\n            return;\n          }\n\n          var halfFloatSupportedByExt = textureType === HalfFloatType && (extensions.has('EXT_color_buffer_half_float') || capabilities.isWebGL2 && extensions.has('EXT_color_buffer_float'));\n\n          if (textureType !== UnsignedByteType && utils.convert(textureType) !== _gl.getParameter(_gl.IMPLEMENTATION_COLOR_READ_TYPE) && // Edge and Chrome Mac < 52 (#9513)\n          !(textureType === FloatType && (capabilities.isWebGL2 || extensions.has('OES_texture_float') || extensions.has('WEBGL_color_buffer_float'))) && // Chrome Mac >= 52 and Firefox\n          !halfFloatSupportedByExt) {\n            console.error('THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.');\n            return;\n          }\n\n          if (_gl.checkFramebufferStatus(_gl.FRAMEBUFFER) === _gl.FRAMEBUFFER_COMPLETE) {\n            // the following if statement ensures valid read requests (no out-of-bounds pixels, see #8604)\n            if (x >= 0 && x <= renderTarget.width - width && y >= 0 && y <= renderTarget.height - height) {\n              _gl.readPixels(x, y, width, height, utils.convert(textureFormat), utils.convert(textureType), buffer);\n            }\n          } else {\n            console.error('THREE.WebGLRenderer.readRenderTargetPixels: readPixels from renderTarget failed. Framebuffer not complete.');\n          }\n        } finally {\n          // restore framebuffer of current render target if necessary\n          var _framebuffer = _currentRenderTarget !== null ? properties.get(_currentRenderTarget).__webglFramebuffer : null;\n\n          state.bindFramebuffer(_gl.FRAMEBUFFER, _framebuffer);\n        }\n      }\n    };\n\n    this.copyFramebufferToTexture = function (position, texture) {\n      var level = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n      var levelScale = Math.pow(2, -level);\n      var width = Math.floor(texture.image.width * levelScale);\n      var height = Math.floor(texture.image.height * levelScale);\n      var glFormat = utils.convert(texture.format);\n\n      if (capabilities.isWebGL2) {\n        // Workaround for https://bugs.chromium.org/p/chromium/issues/detail?id=1120100\n        // Not needed in Chrome 93+\n        if (glFormat === _gl.RGB) glFormat = _gl.RGB8;\n        if (glFormat === _gl.RGBA) glFormat = _gl.RGBA8;\n      }\n\n      textures.setTexture2D(texture, 0);\n\n      _gl.copyTexImage2D(_gl.TEXTURE_2D, level, glFormat, position.x, position.y, width, height, 0);\n\n      state.unbindTexture();\n    };\n\n    this.copyTextureToTexture = function (position, srcTexture, dstTexture) {\n      var level = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0;\n      var width = srcTexture.image.width;\n      var height = srcTexture.image.height;\n      var glFormat = utils.convert(dstTexture.format);\n      var glType = utils.convert(dstTexture.type);\n      textures.setTexture2D(dstTexture, 0); // As another texture upload may have changed pixelStorei\n      // parameters, make sure they are correct for the dstTexture\n\n      _gl.pixelStorei(_gl.UNPACK_FLIP_Y_WEBGL, dstTexture.flipY);\n\n      _gl.pixelStorei(_gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, dstTexture.premultiplyAlpha);\n\n      _gl.pixelStorei(_gl.UNPACK_ALIGNMENT, dstTexture.unpackAlignment);\n\n      if (srcTexture.isDataTexture) {\n        _gl.texSubImage2D(_gl.TEXTURE_2D, level, position.x, position.y, width, height, glFormat, glType, srcTexture.image.data);\n      } else {\n        if (srcTexture.isCompressedTexture) {\n          _gl.compressedTexSubImage2D(_gl.TEXTURE_2D, level, position.x, position.y, srcTexture.mipmaps[0].width, srcTexture.mipmaps[0].height, glFormat, srcTexture.mipmaps[0].data);\n        } else {\n          _gl.texSubImage2D(_gl.TEXTURE_2D, level, position.x, position.y, glFormat, glType, srcTexture.image);\n        }\n      } // Generate mipmaps only when copying level 0\n\n\n      if (level === 0 && dstTexture.generateMipmaps) _gl.generateMipmap(_gl.TEXTURE_2D);\n      state.unbindTexture();\n    };\n\n    this.copyTextureToTexture3D = function (sourceBox, position, srcTexture, dstTexture) {\n      var level = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 0;\n\n      if (_this.isWebGL1Renderer) {\n        console.warn('THREE.WebGLRenderer.copyTextureToTexture3D: can only be used with WebGL2.');\n        return;\n      }\n\n      var width = sourceBox.max.x - sourceBox.min.x + 1;\n      var height = sourceBox.max.y - sourceBox.min.y + 1;\n      var depth = sourceBox.max.z - sourceBox.min.z + 1;\n      var glFormat = utils.convert(dstTexture.format);\n      var glType = utils.convert(dstTexture.type);\n      var glTarget;\n\n      if (dstTexture.isDataTexture3D) {\n        textures.setTexture3D(dstTexture, 0);\n        glTarget = _gl.TEXTURE_3D;\n      } else if (dstTexture.isDataTexture2DArray) {\n        textures.setTexture2DArray(dstTexture, 0);\n        glTarget = _gl.TEXTURE_2D_ARRAY;\n      } else {\n        console.warn('THREE.WebGLRenderer.copyTextureToTexture3D: only supports THREE.DataTexture3D and THREE.DataTexture2DArray.');\n        return;\n      }\n\n      _gl.pixelStorei(_gl.UNPACK_FLIP_Y_WEBGL, dstTexture.flipY);\n\n      _gl.pixelStorei(_gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, dstTexture.premultiplyAlpha);\n\n      _gl.pixelStorei(_gl.UNPACK_ALIGNMENT, dstTexture.unpackAlignment);\n\n      var unpackRowLen = _gl.getParameter(_gl.UNPACK_ROW_LENGTH);\n\n      var unpackImageHeight = _gl.getParameter(_gl.UNPACK_IMAGE_HEIGHT);\n\n      var unpackSkipPixels = _gl.getParameter(_gl.UNPACK_SKIP_PIXELS);\n\n      var unpackSkipRows = _gl.getParameter(_gl.UNPACK_SKIP_ROWS);\n\n      var unpackSkipImages = _gl.getParameter(_gl.UNPACK_SKIP_IMAGES);\n\n      var image = srcTexture.isCompressedTexture ? srcTexture.mipmaps[0] : srcTexture.image;\n\n      _gl.pixelStorei(_gl.UNPACK_ROW_LENGTH, image.width);\n\n      _gl.pixelStorei(_gl.UNPACK_IMAGE_HEIGHT, image.height);\n\n      _gl.pixelStorei(_gl.UNPACK_SKIP_PIXELS, sourceBox.min.x);\n\n      _gl.pixelStorei(_gl.UNPACK_SKIP_ROWS, sourceBox.min.y);\n\n      _gl.pixelStorei(_gl.UNPACK_SKIP_IMAGES, sourceBox.min.z);\n\n      if (srcTexture.isDataTexture || srcTexture.isDataTexture3D) {\n        _gl.texSubImage3D(glTarget, level, position.x, position.y, position.z, width, height, depth, glFormat, glType, image.data);\n      } else {\n        if (srcTexture.isCompressedTexture) {\n          console.warn('THREE.WebGLRenderer.copyTextureToTexture3D: untested support for compressed srcTexture.');\n\n          _gl.compressedTexSubImage3D(glTarget, level, position.x, position.y, position.z, width, height, depth, glFormat, image.data);\n        } else {\n          _gl.texSubImage3D(glTarget, level, position.x, position.y, position.z, width, height, depth, glFormat, glType, image);\n        }\n      }\n\n      _gl.pixelStorei(_gl.UNPACK_ROW_LENGTH, unpackRowLen);\n\n      _gl.pixelStorei(_gl.UNPACK_IMAGE_HEIGHT, unpackImageHeight);\n\n      _gl.pixelStorei(_gl.UNPACK_SKIP_PIXELS, unpackSkipPixels);\n\n      _gl.pixelStorei(_gl.UNPACK_SKIP_ROWS, unpackSkipRows);\n\n      _gl.pixelStorei(_gl.UNPACK_SKIP_IMAGES, unpackSkipImages); // Generate mipmaps only when copying level 0\n\n\n      if (level === 0 && dstTexture.generateMipmaps) _gl.generateMipmap(glTarget);\n      state.unbindTexture();\n    };\n\n    this.initTexture = function (texture) {\n      textures.setTexture2D(texture, 0);\n      state.unbindTexture();\n    };\n\n    this.resetState = function () {\n      _currentActiveCubeFace = 0;\n      _currentActiveMipmapLevel = 0;\n      _currentRenderTarget = null;\n      state.reset();\n      bindingStates.reset();\n    };\n\n    if (typeof __THREE_DEVTOOLS__ !== 'undefined') {\n      __THREE_DEVTOOLS__.dispatchEvent(new CustomEvent('observe', {\n        detail: this\n      })); // eslint-disable-line no-undef\n\n    }\n  }\n\n  WebGLRenderer.prototype.isWebGLRenderer = true;\n\n  var WebGL1Renderer = /*#__PURE__*/function (_WebGLRenderer) {\n    _inherits(WebGL1Renderer, _WebGLRenderer);\n\n    var _super37 = _createSuper(WebGL1Renderer);\n\n    function WebGL1Renderer() {\n      _classCallCheck(this, WebGL1Renderer);\n\n      return _super37.apply(this, arguments);\n    }\n\n    return WebGL1Renderer;\n  }(WebGLRenderer);\n\n  WebGL1Renderer.prototype.isWebGL1Renderer = true;\n\n  var FogExp2 = /*#__PURE__*/function () {\n    function FogExp2(color) {\n      var density = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0.00025;\n\n      _classCallCheck(this, FogExp2);\n\n      this.name = '';\n      this.color = new Color(color);\n      this.density = density;\n    }\n\n    _createClass(FogExp2, [{\n      key: \"clone\",\n      value: function clone() {\n        return new FogExp2(this.color, this.density);\n      }\n    }, {\n      key: \"toJSON\",\n      value: function toJSON() {\n        return {\n          type: 'FogExp2',\n          color: this.color.getHex(),\n          density: this.density\n        };\n      }\n    }]);\n\n    return FogExp2;\n  }();\n\n  FogExp2.prototype.isFogExp2 = true;\n\n  var Fog = /*#__PURE__*/function () {\n    function Fog(color) {\n      var near = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n      var far = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1000;\n\n      _classCallCheck(this, Fog);\n\n      this.name = '';\n      this.color = new Color(color);\n      this.near = near;\n      this.far = far;\n    }\n\n    _createClass(Fog, [{\n      key: \"clone\",\n      value: function clone() {\n        return new Fog(this.color, this.near, this.far);\n      }\n    }, {\n      key: \"toJSON\",\n      value: function toJSON() {\n        return {\n          type: 'Fog',\n          color: this.color.getHex(),\n          near: this.near,\n          far: this.far\n        };\n      }\n    }]);\n\n    return Fog;\n  }();\n\n  Fog.prototype.isFog = true;\n\n  var Scene = /*#__PURE__*/function (_Object3D5) {\n    _inherits(Scene, _Object3D5);\n\n    var _super38 = _createSuper(Scene);\n\n    function Scene() {\n      var _this28;\n\n      _classCallCheck(this, Scene);\n\n      _this28 = _super38.call(this);\n      _this28.type = 'Scene';\n      _this28.background = null;\n      _this28.environment = null;\n      _this28.fog = null;\n      _this28.overrideMaterial = null;\n      _this28.autoUpdate = true; // checked by the renderer\n\n      if (typeof __THREE_DEVTOOLS__ !== 'undefined') {\n        __THREE_DEVTOOLS__.dispatchEvent(new CustomEvent('observe', {\n          detail: _assertThisInitialized(_this28)\n        })); // eslint-disable-line no-undef\n\n      }\n\n      return _this28;\n    }\n\n    _createClass(Scene, [{\n      key: \"copy\",\n      value: function copy(source, recursive) {\n        _get(_getPrototypeOf(Scene.prototype), \"copy\", this).call(this, source, recursive);\n\n        if (source.background !== null) this.background = source.background.clone();\n        if (source.environment !== null) this.environment = source.environment.clone();\n        if (source.fog !== null) this.fog = source.fog.clone();\n        if (source.overrideMaterial !== null) this.overrideMaterial = source.overrideMaterial.clone();\n        this.autoUpdate = source.autoUpdate;\n        this.matrixAutoUpdate = source.matrixAutoUpdate;\n        return this;\n      }\n    }, {\n      key: \"toJSON\",\n      value: function toJSON(meta) {\n        var data = _get(_getPrototypeOf(Scene.prototype), \"toJSON\", this).call(this, meta);\n\n        if (this.fog !== null) data.object.fog = this.fog.toJSON();\n        return data;\n      }\n    }]);\n\n    return Scene;\n  }(Object3D);\n\n  Scene.prototype.isScene = true;\n\n  var InterleavedBuffer = /*#__PURE__*/function () {\n    function InterleavedBuffer(array, stride) {\n      _classCallCheck(this, InterleavedBuffer);\n\n      this.array = array;\n      this.stride = stride;\n      this.count = array !== undefined ? array.length / stride : 0;\n      this.usage = StaticDrawUsage;\n      this.updateRange = {\n        offset: 0,\n        count: -1\n      };\n      this.version = 0;\n      this.uuid = generateUUID();\n    }\n\n    _createClass(InterleavedBuffer, [{\n      key: \"onUploadCallback\",\n      value: function onUploadCallback() {}\n    }, {\n      key: \"needsUpdate\",\n      set: function set(value) {\n        if (value === true) this.version++;\n      }\n    }, {\n      key: \"setUsage\",\n      value: function setUsage(value) {\n        this.usage = value;\n        return this;\n      }\n    }, {\n      key: \"copy\",\n      value: function copy(source) {\n        this.array = new source.array.constructor(source.array);\n        this.count = source.count;\n        this.stride = source.stride;\n        this.usage = source.usage;\n        return this;\n      }\n    }, {\n      key: \"copyAt\",\n      value: function copyAt(index1, attribute, index2) {\n        index1 *= this.stride;\n        index2 *= attribute.stride;\n\n        for (var _i149 = 0, l = this.stride; _i149 < l; _i149++) {\n          this.array[index1 + _i149] = attribute.array[index2 + _i149];\n        }\n\n        return this;\n      }\n    }, {\n      key: \"set\",\n      value: function set(value) {\n        var offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n        this.array.set(value, offset);\n        return this;\n      }\n    }, {\n      key: \"clone\",\n      value: function clone(data) {\n        if (data.arrayBuffers === undefined) {\n          data.arrayBuffers = {};\n        }\n\n        if (this.array.buffer._uuid === undefined) {\n          this.array.buffer._uuid = generateUUID();\n        }\n\n        if (data.arrayBuffers[this.array.buffer._uuid] === undefined) {\n          data.arrayBuffers[this.array.buffer._uuid] = this.array.slice(0).buffer;\n        }\n\n        var array = new this.array.constructor(data.arrayBuffers[this.array.buffer._uuid]);\n        var ib = new this.constructor(array, this.stride);\n        ib.setUsage(this.usage);\n        return ib;\n      }\n    }, {\n      key: \"onUpload\",\n      value: function onUpload(callback) {\n        this.onUploadCallback = callback;\n        return this;\n      }\n    }, {\n      key: \"toJSON\",\n      value: function toJSON(data) {\n        if (data.arrayBuffers === undefined) {\n          data.arrayBuffers = {};\n        } // generate UUID for array buffer if necessary\n\n\n        if (this.array.buffer._uuid === undefined) {\n          this.array.buffer._uuid = generateUUID();\n        }\n\n        if (data.arrayBuffers[this.array.buffer._uuid] === undefined) {\n          data.arrayBuffers[this.array.buffer._uuid] = Array.prototype.slice.call(new Uint32Array(this.array.buffer));\n        } //\n\n\n        return {\n          uuid: this.uuid,\n          buffer: this.array.buffer._uuid,\n          type: this.array.constructor.name,\n          stride: this.stride\n        };\n      }\n    }]);\n\n    return InterleavedBuffer;\n  }();\n\n  InterleavedBuffer.prototype.isInterleavedBuffer = true;\n\n  var _vector$6 = /*@__PURE__*/new Vector3();\n\n  var InterleavedBufferAttribute = /*#__PURE__*/function () {\n    function InterleavedBufferAttribute(interleavedBuffer, itemSize, offset) {\n      var normalized = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n\n      _classCallCheck(this, InterleavedBufferAttribute);\n\n      this.name = '';\n      this.data = interleavedBuffer;\n      this.itemSize = itemSize;\n      this.offset = offset;\n      this.normalized = normalized === true;\n    }\n\n    _createClass(InterleavedBufferAttribute, [{\n      key: \"count\",\n      get: function get() {\n        return this.data.count;\n      }\n    }, {\n      key: \"array\",\n      get: function get() {\n        return this.data.array;\n      }\n    }, {\n      key: \"needsUpdate\",\n      set: function set(value) {\n        this.data.needsUpdate = value;\n      }\n    }, {\n      key: \"applyMatrix4\",\n      value: function applyMatrix4(m) {\n        for (var _i150 = 0, l = this.data.count; _i150 < l; _i150++) {\n          _vector$6.x = this.getX(_i150);\n          _vector$6.y = this.getY(_i150);\n          _vector$6.z = this.getZ(_i150);\n\n          _vector$6.applyMatrix4(m);\n\n          this.setXYZ(_i150, _vector$6.x, _vector$6.y, _vector$6.z);\n        }\n\n        return this;\n      }\n    }, {\n      key: \"applyNormalMatrix\",\n      value: function applyNormalMatrix(m) {\n        for (var _i151 = 0, l = this.count; _i151 < l; _i151++) {\n          _vector$6.x = this.getX(_i151);\n          _vector$6.y = this.getY(_i151);\n          _vector$6.z = this.getZ(_i151);\n\n          _vector$6.applyNormalMatrix(m);\n\n          this.setXYZ(_i151, _vector$6.x, _vector$6.y, _vector$6.z);\n        }\n\n        return this;\n      }\n    }, {\n      key: \"transformDirection\",\n      value: function transformDirection(m) {\n        for (var _i152 = 0, l = this.count; _i152 < l; _i152++) {\n          _vector$6.x = this.getX(_i152);\n          _vector$6.y = this.getY(_i152);\n          _vector$6.z = this.getZ(_i152);\n\n          _vector$6.transformDirection(m);\n\n          this.setXYZ(_i152, _vector$6.x, _vector$6.y, _vector$6.z);\n        }\n\n        return this;\n      }\n    }, {\n      key: \"setX\",\n      value: function setX(index, x) {\n        this.data.array[index * this.data.stride + this.offset] = x;\n        return this;\n      }\n    }, {\n      key: \"setY\",\n      value: function setY(index, y) {\n        this.data.array[index * this.data.stride + this.offset + 1] = y;\n        return this;\n      }\n    }, {\n      key: \"setZ\",\n      value: function setZ(index, z) {\n        this.data.array[index * this.data.stride + this.offset + 2] = z;\n        return this;\n      }\n    }, {\n      key: \"setW\",\n      value: function setW(index, w) {\n        this.data.array[index * this.data.stride + this.offset + 3] = w;\n        return this;\n      }\n    }, {\n      key: \"getX\",\n      value: function getX(index) {\n        return this.data.array[index * this.data.stride + this.offset];\n      }\n    }, {\n      key: \"getY\",\n      value: function getY(index) {\n        return this.data.array[index * this.data.stride + this.offset + 1];\n      }\n    }, {\n      key: \"getZ\",\n      value: function getZ(index) {\n        return this.data.array[index * this.data.stride + this.offset + 2];\n      }\n    }, {\n      key: \"getW\",\n      value: function getW(index) {\n        return this.data.array[index * this.data.stride + this.offset + 3];\n      }\n    }, {\n      key: \"setXY\",\n      value: function setXY(index, x, y) {\n        index = index * this.data.stride + this.offset;\n        this.data.array[index + 0] = x;\n        this.data.array[index + 1] = y;\n        return this;\n      }\n    }, {\n      key: \"setXYZ\",\n      value: function setXYZ(index, x, y, z) {\n        index = index * this.data.stride + this.offset;\n        this.data.array[index + 0] = x;\n        this.data.array[index + 1] = y;\n        this.data.array[index + 2] = z;\n        return this;\n      }\n    }, {\n      key: \"setXYZW\",\n      value: function setXYZW(index, x, y, z, w) {\n        index = index * this.data.stride + this.offset;\n        this.data.array[index + 0] = x;\n        this.data.array[index + 1] = y;\n        this.data.array[index + 2] = z;\n        this.data.array[index + 3] = w;\n        return this;\n      }\n    }, {\n      key: \"clone\",\n      value: function clone(data) {\n        if (data === undefined) {\n          console.log('THREE.InterleavedBufferAttribute.clone(): Cloning an interlaved buffer attribute will deinterleave buffer data.');\n          var array = [];\n\n          for (var _i153 = 0; _i153 < this.count; _i153++) {\n            var index = _i153 * this.data.stride + this.offset;\n\n            for (var j = 0; j < this.itemSize; j++) {\n              array.push(this.data.array[index + j]);\n            }\n          }\n\n          return new BufferAttribute(new this.array.constructor(array), this.itemSize, this.normalized);\n        } else {\n          if (data.interleavedBuffers === undefined) {\n            data.interleavedBuffers = {};\n          }\n\n          if (data.interleavedBuffers[this.data.uuid] === undefined) {\n            data.interleavedBuffers[this.data.uuid] = this.data.clone(data);\n          }\n\n          return new InterleavedBufferAttribute(data.interleavedBuffers[this.data.uuid], this.itemSize, this.offset, this.normalized);\n        }\n      }\n    }, {\n      key: \"toJSON\",\n      value: function toJSON(data) {\n        if (data === undefined) {\n          console.log('THREE.InterleavedBufferAttribute.toJSON(): Serializing an interlaved buffer attribute will deinterleave buffer data.');\n          var array = [];\n\n          for (var _i154 = 0; _i154 < this.count; _i154++) {\n            var index = _i154 * this.data.stride + this.offset;\n\n            for (var j = 0; j < this.itemSize; j++) {\n              array.push(this.data.array[index + j]);\n            }\n          } // deinterleave data and save it as an ordinary buffer attribute for now\n\n\n          return {\n            itemSize: this.itemSize,\n            type: this.array.constructor.name,\n            array: array,\n            normalized: this.normalized\n          };\n        } else {\n          // save as true interlaved attribtue\n          if (data.interleavedBuffers === undefined) {\n            data.interleavedBuffers = {};\n          }\n\n          if (data.interleavedBuffers[this.data.uuid] === undefined) {\n            data.interleavedBuffers[this.data.uuid] = this.data.toJSON(data);\n          }\n\n          return {\n            isInterleavedBufferAttribute: true,\n            itemSize: this.itemSize,\n            data: this.data.uuid,\n            offset: this.offset,\n            normalized: this.normalized\n          };\n        }\n      }\n    }]);\n\n    return InterleavedBufferAttribute;\n  }();\n\n  InterleavedBufferAttribute.prototype.isInterleavedBufferAttribute = true;\n  /**\n   * parameters = {\n   *\tcolor: <hex>,\n   *\tmap: new THREE.Texture( <Image> ),\n   *\talphaMap: new THREE.Texture( <Image> ),\n   *\trotation: <float>,\n   *\tsizeAttenuation: <bool>\n   * }\n   */\n\n  var SpriteMaterial = /*#__PURE__*/function (_Material5) {\n    _inherits(SpriteMaterial, _Material5);\n\n    var _super39 = _createSuper(SpriteMaterial);\n\n    function SpriteMaterial(parameters) {\n      var _this29;\n\n      _classCallCheck(this, SpriteMaterial);\n\n      _this29 = _super39.call(this);\n      _this29.type = 'SpriteMaterial';\n      _this29.color = new Color(0xffffff);\n      _this29.map = null;\n      _this29.alphaMap = null;\n      _this29.rotation = 0;\n      _this29.sizeAttenuation = true;\n      _this29.transparent = true;\n\n      _this29.setValues(parameters);\n\n      return _this29;\n    }\n\n    _createClass(SpriteMaterial, [{\n      key: \"copy\",\n      value: function copy(source) {\n        _get(_getPrototypeOf(SpriteMaterial.prototype), \"copy\", this).call(this, source);\n\n        this.color.copy(source.color);\n        this.map = source.map;\n        this.alphaMap = source.alphaMap;\n        this.rotation = source.rotation;\n        this.sizeAttenuation = source.sizeAttenuation;\n        return this;\n      }\n    }]);\n\n    return SpriteMaterial;\n  }(Material);\n\n  SpriteMaterial.prototype.isSpriteMaterial = true;\n\n  var _geometry;\n\n  var _intersectPoint = /*@__PURE__*/new Vector3();\n\n  var _worldScale = /*@__PURE__*/new Vector3();\n\n  var _mvPosition = /*@__PURE__*/new Vector3();\n\n  var _alignedPosition = /*@__PURE__*/new Vector2();\n\n  var _rotatedPosition = /*@__PURE__*/new Vector2();\n\n  var _viewWorldMatrix = /*@__PURE__*/new Matrix4();\n\n  var _vA = /*@__PURE__*/new Vector3();\n\n  var _vB = /*@__PURE__*/new Vector3();\n\n  var _vC = /*@__PURE__*/new Vector3();\n\n  var _uvA = /*@__PURE__*/new Vector2();\n\n  var _uvB = /*@__PURE__*/new Vector2();\n\n  var _uvC = /*@__PURE__*/new Vector2();\n\n  var Sprite = /*#__PURE__*/function (_Object3D6) {\n    _inherits(Sprite, _Object3D6);\n\n    var _super40 = _createSuper(Sprite);\n\n    function Sprite(material) {\n      var _this30;\n\n      _classCallCheck(this, Sprite);\n\n      _this30 = _super40.call(this);\n      _this30.type = 'Sprite';\n\n      if (_geometry === undefined) {\n        _geometry = new BufferGeometry();\n        var float32Array = new Float32Array([-0.5, -0.5, 0, 0, 0, 0.5, -0.5, 0, 1, 0, 0.5, 0.5, 0, 1, 1, -0.5, 0.5, 0, 0, 1]);\n        var interleavedBuffer = new InterleavedBuffer(float32Array, 5);\n\n        _geometry.setIndex([0, 1, 2, 0, 2, 3]);\n\n        _geometry.setAttribute('position', new InterleavedBufferAttribute(interleavedBuffer, 3, 0, false));\n\n        _geometry.setAttribute('uv', new InterleavedBufferAttribute(interleavedBuffer, 2, 3, false));\n      }\n\n      _this30.geometry = _geometry;\n      _this30.material = material !== undefined ? material : new SpriteMaterial();\n      _this30.center = new Vector2(0.5, 0.5);\n      return _this30;\n    }\n\n    _createClass(Sprite, [{\n      key: \"raycast\",\n      value: function raycast(raycaster, intersects) {\n        if (raycaster.camera === null) {\n          console.error('THREE.Sprite: \"Raycaster.camera\" needs to be set in order to raycast against sprites.');\n        }\n\n        _worldScale.setFromMatrixScale(this.matrixWorld);\n\n        _viewWorldMatrix.copy(raycaster.camera.matrixWorld);\n\n        this.modelViewMatrix.multiplyMatrices(raycaster.camera.matrixWorldInverse, this.matrixWorld);\n\n        _mvPosition.setFromMatrixPosition(this.modelViewMatrix);\n\n        if (raycaster.camera.isPerspectiveCamera && this.material.sizeAttenuation === false) {\n          _worldScale.multiplyScalar(-_mvPosition.z);\n        }\n\n        var rotation = this.material.rotation;\n        var sin, cos;\n\n        if (rotation !== 0) {\n          cos = Math.cos(rotation);\n          sin = Math.sin(rotation);\n        }\n\n        var center = this.center;\n        transformVertex(_vA.set(-0.5, -0.5, 0), _mvPosition, center, _worldScale, sin, cos);\n        transformVertex(_vB.set(0.5, -0.5, 0), _mvPosition, center, _worldScale, sin, cos);\n        transformVertex(_vC.set(0.5, 0.5, 0), _mvPosition, center, _worldScale, sin, cos);\n\n        _uvA.set(0, 0);\n\n        _uvB.set(1, 0);\n\n        _uvC.set(1, 1); // check first triangle\n\n\n        var intersect = raycaster.ray.intersectTriangle(_vA, _vB, _vC, false, _intersectPoint);\n\n        if (intersect === null) {\n          // check second triangle\n          transformVertex(_vB.set(-0.5, 0.5, 0), _mvPosition, center, _worldScale, sin, cos);\n\n          _uvB.set(0, 1);\n\n          intersect = raycaster.ray.intersectTriangle(_vA, _vC, _vB, false, _intersectPoint);\n\n          if (intersect === null) {\n            return;\n          }\n        }\n\n        var distance = raycaster.ray.origin.distanceTo(_intersectPoint);\n        if (distance < raycaster.near || distance > raycaster.far) return;\n        intersects.push({\n          distance: distance,\n          point: _intersectPoint.clone(),\n          uv: Triangle.getUV(_intersectPoint, _vA, _vB, _vC, _uvA, _uvB, _uvC, new Vector2()),\n          face: null,\n          object: this\n        });\n      }\n    }, {\n      key: \"copy\",\n      value: function copy(source) {\n        _get(_getPrototypeOf(Sprite.prototype), \"copy\", this).call(this, source);\n\n        if (source.center !== undefined) this.center.copy(source.center);\n        this.material = source.material;\n        return this;\n      }\n    }]);\n\n    return Sprite;\n  }(Object3D);\n\n  Sprite.prototype.isSprite = true;\n\n  function transformVertex(vertexPosition, mvPosition, center, scale, sin, cos) {\n    // compute position in camera space\n    _alignedPosition.subVectors(vertexPosition, center).addScalar(0.5).multiply(scale); // to check if rotation is not zero\n\n\n    if (sin !== undefined) {\n      _rotatedPosition.x = cos * _alignedPosition.x - sin * _alignedPosition.y;\n      _rotatedPosition.y = sin * _alignedPosition.x + cos * _alignedPosition.y;\n    } else {\n      _rotatedPosition.copy(_alignedPosition);\n    }\n\n    vertexPosition.copy(mvPosition);\n    vertexPosition.x += _rotatedPosition.x;\n    vertexPosition.y += _rotatedPosition.y; // transform to world space\n\n    vertexPosition.applyMatrix4(_viewWorldMatrix);\n  }\n\n  var _v1$2 = /*@__PURE__*/new Vector3();\n\n  var _v2$1 = /*@__PURE__*/new Vector3();\n\n  var LOD = /*#__PURE__*/function (_Object3D7) {\n    _inherits(LOD, _Object3D7);\n\n    var _super41 = _createSuper(LOD);\n\n    function LOD() {\n      var _this31;\n\n      _classCallCheck(this, LOD);\n\n      _this31 = _super41.call(this);\n      _this31._currentLevel = 0;\n      _this31.type = 'LOD';\n      Object.defineProperties(_assertThisInitialized(_this31), {\n        levels: {\n          enumerable: true,\n          value: []\n        },\n        isLOD: {\n          value: true\n        }\n      });\n      _this31.autoUpdate = true;\n      return _this31;\n    }\n\n    _createClass(LOD, [{\n      key: \"copy\",\n      value: function copy(source) {\n        _get(_getPrototypeOf(LOD.prototype), \"copy\", this).call(this, source, false);\n\n        var levels = source.levels;\n\n        for (var _i155 = 0, l = levels.length; _i155 < l; _i155++) {\n          var level = levels[_i155];\n          this.addLevel(level.object.clone(), level.distance);\n        }\n\n        this.autoUpdate = source.autoUpdate;\n        return this;\n      }\n    }, {\n      key: \"addLevel\",\n      value: function addLevel(object) {\n        var distance = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n        distance = Math.abs(distance);\n        var levels = this.levels;\n        var l;\n\n        for (l = 0; l < levels.length; l++) {\n          if (distance < levels[l].distance) {\n            break;\n          }\n        }\n\n        levels.splice(l, 0, {\n          distance: distance,\n          object: object\n        });\n        this.add(object);\n        return this;\n      }\n    }, {\n      key: \"getCurrentLevel\",\n      value: function getCurrentLevel() {\n        return this._currentLevel;\n      }\n    }, {\n      key: \"getObjectForDistance\",\n      value: function getObjectForDistance(distance) {\n        var levels = this.levels;\n\n        if (levels.length > 0) {\n          var _i156, l;\n\n          for (_i156 = 1, l = levels.length; _i156 < l; _i156++) {\n            if (distance < levels[_i156].distance) {\n              break;\n            }\n          }\n\n          return levels[_i156 - 1].object;\n        }\n\n        return null;\n      }\n    }, {\n      key: \"raycast\",\n      value: function raycast(raycaster, intersects) {\n        var levels = this.levels;\n\n        if (levels.length > 0) {\n          _v1$2.setFromMatrixPosition(this.matrixWorld);\n\n          var distance = raycaster.ray.origin.distanceTo(_v1$2);\n          this.getObjectForDistance(distance).raycast(raycaster, intersects);\n        }\n      }\n    }, {\n      key: \"update\",\n      value: function update(camera) {\n        var levels = this.levels;\n\n        if (levels.length > 1) {\n          _v1$2.setFromMatrixPosition(camera.matrixWorld);\n\n          _v2$1.setFromMatrixPosition(this.matrixWorld);\n\n          var distance = _v1$2.distanceTo(_v2$1) / camera.zoom;\n          levels[0].object.visible = true;\n\n          var _i157, l;\n\n          for (_i157 = 1, l = levels.length; _i157 < l; _i157++) {\n            if (distance >= levels[_i157].distance) {\n              levels[_i157 - 1].object.visible = false;\n              levels[_i157].object.visible = true;\n            } else {\n              break;\n            }\n          }\n\n          this._currentLevel = _i157 - 1;\n\n          for (; _i157 < l; _i157++) {\n            levels[_i157].object.visible = false;\n          }\n        }\n      }\n    }, {\n      key: \"toJSON\",\n      value: function toJSON(meta) {\n        var data = _get(_getPrototypeOf(LOD.prototype), \"toJSON\", this).call(this, meta);\n\n        if (this.autoUpdate === false) data.object.autoUpdate = false;\n        data.object.levels = [];\n        var levels = this.levels;\n\n        for (var _i158 = 0, l = levels.length; _i158 < l; _i158++) {\n          var level = levels[_i158];\n          data.object.levels.push({\n            object: level.object.uuid,\n            distance: level.distance\n          });\n        }\n\n        return data;\n      }\n    }]);\n\n    return LOD;\n  }(Object3D);\n\n  var _basePosition = /*@__PURE__*/new Vector3();\n\n  var _skinIndex = /*@__PURE__*/new Vector4();\n\n  var _skinWeight = /*@__PURE__*/new Vector4();\n\n  var _vector$5 = /*@__PURE__*/new Vector3();\n\n  var _matrix = /*@__PURE__*/new Matrix4();\n\n  var SkinnedMesh = /*#__PURE__*/function (_Mesh) {\n    _inherits(SkinnedMesh, _Mesh);\n\n    var _super42 = _createSuper(SkinnedMesh);\n\n    function SkinnedMesh(geometry, material) {\n      var _this32;\n\n      _classCallCheck(this, SkinnedMesh);\n\n      _this32 = _super42.call(this, geometry, material);\n      _this32.type = 'SkinnedMesh';\n      _this32.bindMode = 'attached';\n      _this32.bindMatrix = new Matrix4();\n      _this32.bindMatrixInverse = new Matrix4();\n      return _this32;\n    }\n\n    _createClass(SkinnedMesh, [{\n      key: \"copy\",\n      value: function copy(source) {\n        _get(_getPrototypeOf(SkinnedMesh.prototype), \"copy\", this).call(this, source);\n\n        this.bindMode = source.bindMode;\n        this.bindMatrix.copy(source.bindMatrix);\n        this.bindMatrixInverse.copy(source.bindMatrixInverse);\n        this.skeleton = source.skeleton;\n        return this;\n      }\n    }, {\n      key: \"bind\",\n      value: function bind(skeleton, bindMatrix) {\n        this.skeleton = skeleton;\n\n        if (bindMatrix === undefined) {\n          this.updateMatrixWorld(true);\n          this.skeleton.calculateInverses();\n          bindMatrix = this.matrixWorld;\n        }\n\n        this.bindMatrix.copy(bindMatrix);\n        this.bindMatrixInverse.copy(bindMatrix).invert();\n      }\n    }, {\n      key: \"pose\",\n      value: function pose() {\n        this.skeleton.pose();\n      }\n    }, {\n      key: \"normalizeSkinWeights\",\n      value: function normalizeSkinWeights() {\n        var vector = new Vector4();\n        var skinWeight = this.geometry.attributes.skinWeight;\n\n        for (var _i159 = 0, l = skinWeight.count; _i159 < l; _i159++) {\n          vector.x = skinWeight.getX(_i159);\n          vector.y = skinWeight.getY(_i159);\n          vector.z = skinWeight.getZ(_i159);\n          vector.w = skinWeight.getW(_i159);\n          var scale = 1.0 / vector.manhattanLength();\n\n          if (scale !== Infinity) {\n            vector.multiplyScalar(scale);\n          } else {\n            vector.set(1, 0, 0, 0); // do something reasonable\n          }\n\n          skinWeight.setXYZW(_i159, vector.x, vector.y, vector.z, vector.w);\n        }\n      }\n    }, {\n      key: \"updateMatrixWorld\",\n      value: function updateMatrixWorld(force) {\n        _get(_getPrototypeOf(SkinnedMesh.prototype), \"updateMatrixWorld\", this).call(this, force);\n\n        if (this.bindMode === 'attached') {\n          this.bindMatrixInverse.copy(this.matrixWorld).invert();\n        } else if (this.bindMode === 'detached') {\n          this.bindMatrixInverse.copy(this.bindMatrix).invert();\n        } else {\n          console.warn('THREE.SkinnedMesh: Unrecognized bindMode: ' + this.bindMode);\n        }\n      }\n    }, {\n      key: \"boneTransform\",\n      value: function boneTransform(index, target) {\n        var skeleton = this.skeleton;\n        var geometry = this.geometry;\n\n        _skinIndex.fromBufferAttribute(geometry.attributes.skinIndex, index);\n\n        _skinWeight.fromBufferAttribute(geometry.attributes.skinWeight, index);\n\n        _basePosition.copy(target).applyMatrix4(this.bindMatrix);\n\n        target.set(0, 0, 0);\n\n        for (var _i160 = 0; _i160 < 4; _i160++) {\n          var weight = _skinWeight.getComponent(_i160);\n\n          if (weight !== 0) {\n            var boneIndex = _skinIndex.getComponent(_i160);\n\n            _matrix.multiplyMatrices(skeleton.bones[boneIndex].matrixWorld, skeleton.boneInverses[boneIndex]);\n\n            target.addScaledVector(_vector$5.copy(_basePosition).applyMatrix4(_matrix), weight);\n          }\n        }\n\n        return target.applyMatrix4(this.bindMatrixInverse);\n      }\n    }]);\n\n    return SkinnedMesh;\n  }(Mesh);\n\n  SkinnedMesh.prototype.isSkinnedMesh = true;\n\n  var Bone = /*#__PURE__*/function (_Object3D8) {\n    _inherits(Bone, _Object3D8);\n\n    var _super43 = _createSuper(Bone);\n\n    function Bone() {\n      var _this33;\n\n      _classCallCheck(this, Bone);\n\n      _this33 = _super43.call(this);\n      _this33.type = 'Bone';\n      return _this33;\n    }\n\n    return Bone;\n  }(Object3D);\n\n  Bone.prototype.isBone = true;\n\n  var DataTexture = /*#__PURE__*/function (_Texture4) {\n    _inherits(DataTexture, _Texture4);\n\n    var _super44 = _createSuper(DataTexture);\n\n    function DataTexture() {\n      var _this34;\n\n      var data = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n      var width = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n      var height = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n      var format = arguments.length > 3 ? arguments[3] : undefined;\n      var type = arguments.length > 4 ? arguments[4] : undefined;\n      var mapping = arguments.length > 5 ? arguments[5] : undefined;\n      var wrapS = arguments.length > 6 ? arguments[6] : undefined;\n      var wrapT = arguments.length > 7 ? arguments[7] : undefined;\n      var magFilter = arguments.length > 8 && arguments[8] !== undefined ? arguments[8] : NearestFilter;\n      var minFilter = arguments.length > 9 && arguments[9] !== undefined ? arguments[9] : NearestFilter;\n      var anisotropy = arguments.length > 10 ? arguments[10] : undefined;\n      var encoding = arguments.length > 11 ? arguments[11] : undefined;\n\n      _classCallCheck(this, DataTexture);\n\n      _this34 = _super44.call(this, null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding);\n      _this34.image = {\n        data: data,\n        width: width,\n        height: height\n      };\n      _this34.magFilter = magFilter;\n      _this34.minFilter = minFilter;\n      _this34.generateMipmaps = false;\n      _this34.flipY = false;\n      _this34.unpackAlignment = 1;\n      _this34.needsUpdate = true;\n      return _this34;\n    }\n\n    return DataTexture;\n  }(Texture);\n\n  DataTexture.prototype.isDataTexture = true;\n\n  var _offsetMatrix = /*@__PURE__*/new Matrix4();\n\n  var _identityMatrix = /*@__PURE__*/new Matrix4();\n\n  var Skeleton = /*#__PURE__*/function () {\n    function Skeleton() {\n      var bones = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n      var boneInverses = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n\n      _classCallCheck(this, Skeleton);\n\n      this.uuid = generateUUID();\n      this.bones = bones.slice(0);\n      this.boneInverses = boneInverses;\n      this.boneMatrices = null;\n      this.boneTexture = null;\n      this.boneTextureSize = 0;\n      this.frame = -1;\n      this.init();\n    }\n\n    _createClass(Skeleton, [{\n      key: \"init\",\n      value: function init() {\n        var bones = this.bones;\n        var boneInverses = this.boneInverses;\n        this.boneMatrices = new Float32Array(bones.length * 16); // calculate inverse bone matrices if necessary\n\n        if (boneInverses.length === 0) {\n          this.calculateInverses();\n        } else {\n          // handle special case\n          if (bones.length !== boneInverses.length) {\n            console.warn('THREE.Skeleton: Number of inverse bone matrices does not match amount of bones.');\n            this.boneInverses = [];\n\n            for (var _i161 = 0, il = this.bones.length; _i161 < il; _i161++) {\n              this.boneInverses.push(new Matrix4());\n            }\n          }\n        }\n      }\n    }, {\n      key: \"calculateInverses\",\n      value: function calculateInverses() {\n        this.boneInverses.length = 0;\n\n        for (var _i162 = 0, il = this.bones.length; _i162 < il; _i162++) {\n          var inverse = new Matrix4();\n\n          if (this.bones[_i162]) {\n            inverse.copy(this.bones[_i162].matrixWorld).invert();\n          }\n\n          this.boneInverses.push(inverse);\n        }\n      }\n    }, {\n      key: \"pose\",\n      value: function pose() {\n        // recover the bind-time world matrices\n        for (var _i163 = 0, il = this.bones.length; _i163 < il; _i163++) {\n          var bone = this.bones[_i163];\n\n          if (bone) {\n            bone.matrixWorld.copy(this.boneInverses[_i163]).invert();\n          }\n        } // compute the local matrices, positions, rotations and scales\n\n\n        for (var _i164 = 0, _il12 = this.bones.length; _i164 < _il12; _i164++) {\n          var _bone = this.bones[_i164];\n\n          if (_bone) {\n            if (_bone.parent && _bone.parent.isBone) {\n              _bone.matrix.copy(_bone.parent.matrixWorld).invert();\n\n              _bone.matrix.multiply(_bone.matrixWorld);\n            } else {\n              _bone.matrix.copy(_bone.matrixWorld);\n            }\n\n            _bone.matrix.decompose(_bone.position, _bone.quaternion, _bone.scale);\n          }\n        }\n      }\n    }, {\n      key: \"update\",\n      value: function update() {\n        var bones = this.bones;\n        var boneInverses = this.boneInverses;\n        var boneMatrices = this.boneMatrices;\n        var boneTexture = this.boneTexture; // flatten bone matrices to array\n\n        for (var _i165 = 0, il = bones.length; _i165 < il; _i165++) {\n          // compute the offset between the current and the original transform\n          var matrix = bones[_i165] ? bones[_i165].matrixWorld : _identityMatrix;\n\n          _offsetMatrix.multiplyMatrices(matrix, boneInverses[_i165]);\n\n          _offsetMatrix.toArray(boneMatrices, _i165 * 16);\n        }\n\n        if (boneTexture !== null) {\n          boneTexture.needsUpdate = true;\n        }\n      }\n    }, {\n      key: \"clone\",\n      value: function clone() {\n        return new Skeleton(this.bones, this.boneInverses);\n      }\n    }, {\n      key: \"computeBoneTexture\",\n      value: function computeBoneTexture() {\n        // layout (1 matrix = 4 pixels)\n        //\t\t\tRGBA RGBA RGBA RGBA (=> column1, column2, column3, column4)\n        //\twith\t8x8\tpixel texture max\t 16 bones * 4 pixels =\t(8 * 8)\n        //\t\t\t 16x16 pixel texture max\t 64 bones * 4 pixels = (16 * 16)\n        //\t\t\t 32x32 pixel texture max\t256 bones * 4 pixels = (32 * 32)\n        //\t\t\t 64x64 pixel texture max 1024 bones * 4 pixels = (64 * 64)\n        var size = Math.sqrt(this.bones.length * 4); // 4 pixels needed for 1 matrix\n\n        size = ceilPowerOfTwo(size);\n        size = Math.max(size, 4);\n        var boneMatrices = new Float32Array(size * size * 4); // 4 floats per RGBA pixel\n\n        boneMatrices.set(this.boneMatrices); // copy current values\n\n        var boneTexture = new DataTexture(boneMatrices, size, size, RGBAFormat, FloatType);\n        this.boneMatrices = boneMatrices;\n        this.boneTexture = boneTexture;\n        this.boneTextureSize = size;\n        return this;\n      }\n    }, {\n      key: \"getBoneByName\",\n      value: function getBoneByName(name) {\n        for (var _i166 = 0, il = this.bones.length; _i166 < il; _i166++) {\n          var bone = this.bones[_i166];\n\n          if (bone.name === name) {\n            return bone;\n          }\n        }\n\n        return undefined;\n      }\n    }, {\n      key: \"dispose\",\n      value: function dispose() {\n        if (this.boneTexture !== null) {\n          this.boneTexture.dispose();\n          this.boneTexture = null;\n        }\n      }\n    }, {\n      key: \"fromJSON\",\n      value: function fromJSON(json, bones) {\n        this.uuid = json.uuid;\n\n        for (var _i167 = 0, l = json.bones.length; _i167 < l; _i167++) {\n          var uuid = json.bones[_i167];\n          var bone = bones[uuid];\n\n          if (bone === undefined) {\n            console.warn('THREE.Skeleton: No bone found with UUID:', uuid);\n            bone = new Bone();\n          }\n\n          this.bones.push(bone);\n          this.boneInverses.push(new Matrix4().fromArray(json.boneInverses[_i167]));\n        }\n\n        this.init();\n        return this;\n      }\n    }, {\n      key: \"toJSON\",\n      value: function toJSON() {\n        var data = {\n          metadata: {\n            version: 4.5,\n            type: 'Skeleton',\n            generator: 'Skeleton.toJSON'\n          },\n          bones: [],\n          boneInverses: []\n        };\n        data.uuid = this.uuid;\n        var bones = this.bones;\n        var boneInverses = this.boneInverses;\n\n        for (var _i168 = 0, l = bones.length; _i168 < l; _i168++) {\n          var bone = bones[_i168];\n          data.bones.push(bone.uuid);\n          var boneInverse = boneInverses[_i168];\n          data.boneInverses.push(boneInverse.toArray());\n        }\n\n        return data;\n      }\n    }]);\n\n    return Skeleton;\n  }();\n\n  var InstancedBufferAttribute = /*#__PURE__*/function (_BufferAttribute11) {\n    _inherits(InstancedBufferAttribute, _BufferAttribute11);\n\n    var _super45 = _createSuper(InstancedBufferAttribute);\n\n    function InstancedBufferAttribute(array, itemSize, normalized) {\n      var _this35;\n\n      var meshPerAttribute = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 1;\n\n      _classCallCheck(this, InstancedBufferAttribute);\n\n      if (typeof normalized === 'number') {\n        meshPerAttribute = normalized;\n        normalized = false;\n        console.error('THREE.InstancedBufferAttribute: The constructor now expects normalized as the third argument.');\n      }\n\n      _this35 = _super45.call(this, array, itemSize, normalized);\n      _this35.meshPerAttribute = meshPerAttribute;\n      return _this35;\n    }\n\n    _createClass(InstancedBufferAttribute, [{\n      key: \"copy\",\n      value: function copy(source) {\n        _get(_getPrototypeOf(InstancedBufferAttribute.prototype), \"copy\", this).call(this, source);\n\n        this.meshPerAttribute = source.meshPerAttribute;\n        return this;\n      }\n    }, {\n      key: \"toJSON\",\n      value: function toJSON() {\n        var data = _get(_getPrototypeOf(InstancedBufferAttribute.prototype), \"toJSON\", this).call(this);\n\n        data.meshPerAttribute = this.meshPerAttribute;\n        data.isInstancedBufferAttribute = true;\n        return data;\n      }\n    }]);\n\n    return InstancedBufferAttribute;\n  }(BufferAttribute);\n\n  InstancedBufferAttribute.prototype.isInstancedBufferAttribute = true;\n\n  var _instanceLocalMatrix = /*@__PURE__*/new Matrix4();\n\n  var _instanceWorldMatrix = /*@__PURE__*/new Matrix4();\n\n  var _instanceIntersects = [];\n\n  var _mesh = /*@__PURE__*/new Mesh();\n\n  var InstancedMesh = /*#__PURE__*/function (_Mesh2) {\n    _inherits(InstancedMesh, _Mesh2);\n\n    var _super46 = _createSuper(InstancedMesh);\n\n    function InstancedMesh(geometry, material, count) {\n      var _this36;\n\n      _classCallCheck(this, InstancedMesh);\n\n      _this36 = _super46.call(this, geometry, material);\n      _this36.instanceMatrix = new InstancedBufferAttribute(new Float32Array(count * 16), 16);\n      _this36.instanceColor = null;\n      _this36.count = count;\n      _this36.frustumCulled = false;\n      return _this36;\n    }\n\n    _createClass(InstancedMesh, [{\n      key: \"copy\",\n      value: function copy(source) {\n        _get(_getPrototypeOf(InstancedMesh.prototype), \"copy\", this).call(this, source);\n\n        this.instanceMatrix.copy(source.instanceMatrix);\n        if (source.instanceColor !== null) this.instanceColor = source.instanceColor.clone();\n        this.count = source.count;\n        return this;\n      }\n    }, {\n      key: \"getColorAt\",\n      value: function getColorAt(index, color) {\n        color.fromArray(this.instanceColor.array, index * 3);\n      }\n    }, {\n      key: \"getMatrixAt\",\n      value: function getMatrixAt(index, matrix) {\n        matrix.fromArray(this.instanceMatrix.array, index * 16);\n      }\n    }, {\n      key: \"raycast\",\n      value: function raycast(raycaster, intersects) {\n        var matrixWorld = this.matrixWorld;\n        var raycastTimes = this.count;\n        _mesh.geometry = this.geometry;\n        _mesh.material = this.material;\n        if (_mesh.material === undefined) return;\n\n        for (var instanceId = 0; instanceId < raycastTimes; instanceId++) {\n          // calculate the world matrix for each instance\n          this.getMatrixAt(instanceId, _instanceLocalMatrix);\n\n          _instanceWorldMatrix.multiplyMatrices(matrixWorld, _instanceLocalMatrix); // the mesh represents this single instance\n\n\n          _mesh.matrixWorld = _instanceWorldMatrix;\n\n          _mesh.raycast(raycaster, _instanceIntersects); // process the result of raycast\n\n\n          for (var _i169 = 0, l = _instanceIntersects.length; _i169 < l; _i169++) {\n            var intersect = _instanceIntersects[_i169];\n            intersect.instanceId = instanceId;\n            intersect.object = this;\n            intersects.push(intersect);\n          }\n\n          _instanceIntersects.length = 0;\n        }\n      }\n    }, {\n      key: \"setColorAt\",\n      value: function setColorAt(index, color) {\n        if (this.instanceColor === null) {\n          this.instanceColor = new InstancedBufferAttribute(new Float32Array(this.instanceMatrix.count * 3), 3);\n        }\n\n        color.toArray(this.instanceColor.array, index * 3);\n      }\n    }, {\n      key: \"setMatrixAt\",\n      value: function setMatrixAt(index, matrix) {\n        matrix.toArray(this.instanceMatrix.array, index * 16);\n      }\n    }, {\n      key: \"updateMorphTargets\",\n      value: function updateMorphTargets() {}\n    }, {\n      key: \"dispose\",\n      value: function dispose() {\n        this.dispatchEvent({\n          type: 'dispose'\n        });\n      }\n    }]);\n\n    return InstancedMesh;\n  }(Mesh);\n\n  InstancedMesh.prototype.isInstancedMesh = true;\n  /**\n   * parameters = {\n   *\tcolor: <hex>,\n   *\topacity: <float>,\n   *\n   *\tlinewidth: <float>,\n   *\tlinecap: \"round\",\n   *\tlinejoin: \"round\"\n   * }\n   */\n\n  var LineBasicMaterial = /*#__PURE__*/function (_Material6) {\n    _inherits(LineBasicMaterial, _Material6);\n\n    var _super47 = _createSuper(LineBasicMaterial);\n\n    function LineBasicMaterial(parameters) {\n      var _this37;\n\n      _classCallCheck(this, LineBasicMaterial);\n\n      _this37 = _super47.call(this);\n      _this37.type = 'LineBasicMaterial';\n      _this37.color = new Color(0xffffff);\n      _this37.linewidth = 1;\n      _this37.linecap = 'round';\n      _this37.linejoin = 'round';\n\n      _this37.setValues(parameters);\n\n      return _this37;\n    }\n\n    _createClass(LineBasicMaterial, [{\n      key: \"copy\",\n      value: function copy(source) {\n        _get(_getPrototypeOf(LineBasicMaterial.prototype), \"copy\", this).call(this, source);\n\n        this.color.copy(source.color);\n        this.linewidth = source.linewidth;\n        this.linecap = source.linecap;\n        this.linejoin = source.linejoin;\n        return this;\n      }\n    }]);\n\n    return LineBasicMaterial;\n  }(Material);\n\n  LineBasicMaterial.prototype.isLineBasicMaterial = true;\n\n  var _start$1 = /*@__PURE__*/new Vector3();\n\n  var _end$1 = /*@__PURE__*/new Vector3();\n\n  var _inverseMatrix$1 = /*@__PURE__*/new Matrix4();\n\n  var _ray$1 = /*@__PURE__*/new Ray();\n\n  var _sphere$1 = /*@__PURE__*/new Sphere();\n\n  var Line = /*#__PURE__*/function (_Object3D9) {\n    _inherits(Line, _Object3D9);\n\n    var _super48 = _createSuper(Line);\n\n    function Line() {\n      var _this38;\n\n      var geometry = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : new BufferGeometry();\n      var material = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : new LineBasicMaterial();\n\n      _classCallCheck(this, Line);\n\n      _this38 = _super48.call(this);\n      _this38.type = 'Line';\n      _this38.geometry = geometry;\n      _this38.material = material;\n\n      _this38.updateMorphTargets();\n\n      return _this38;\n    }\n\n    _createClass(Line, [{\n      key: \"copy\",\n      value: function copy(source) {\n        _get(_getPrototypeOf(Line.prototype), \"copy\", this).call(this, source);\n\n        this.material = source.material;\n        this.geometry = source.geometry;\n        return this;\n      }\n    }, {\n      key: \"computeLineDistances\",\n      value: function computeLineDistances() {\n        var geometry = this.geometry;\n\n        if (geometry.isBufferGeometry) {\n          // we assume non-indexed geometry\n          if (geometry.index === null) {\n            var positionAttribute = geometry.attributes.position;\n            var lineDistances = [0];\n\n            for (var _i170 = 1, l = positionAttribute.count; _i170 < l; _i170++) {\n              _start$1.fromBufferAttribute(positionAttribute, _i170 - 1);\n\n              _end$1.fromBufferAttribute(positionAttribute, _i170);\n\n              lineDistances[_i170] = lineDistances[_i170 - 1];\n              lineDistances[_i170] += _start$1.distanceTo(_end$1);\n            }\n\n            geometry.setAttribute('lineDistance', new Float32BufferAttribute(lineDistances, 1));\n          } else {\n            console.warn('THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.');\n          }\n        } else if (geometry.isGeometry) {\n          console.error('THREE.Line.computeLineDistances() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.');\n        }\n\n        return this;\n      }\n    }, {\n      key: \"raycast\",\n      value: function raycast(raycaster, intersects) {\n        var geometry = this.geometry;\n        var matrixWorld = this.matrixWorld;\n        var threshold = raycaster.params.Line.threshold;\n        var drawRange = geometry.drawRange; // Checking boundingSphere distance to ray\n\n        if (geometry.boundingSphere === null) geometry.computeBoundingSphere();\n\n        _sphere$1.copy(geometry.boundingSphere);\n\n        _sphere$1.applyMatrix4(matrixWorld);\n\n        _sphere$1.radius += threshold;\n        if (raycaster.ray.intersectsSphere(_sphere$1) === false) return; //\n\n        _inverseMatrix$1.copy(matrixWorld).invert();\n\n        _ray$1.copy(raycaster.ray).applyMatrix4(_inverseMatrix$1);\n\n        var localThreshold = threshold / ((this.scale.x + this.scale.y + this.scale.z) / 3);\n        var localThresholdSq = localThreshold * localThreshold;\n        var vStart = new Vector3();\n        var vEnd = new Vector3();\n        var interSegment = new Vector3();\n        var interRay = new Vector3();\n        var step = this.isLineSegments ? 2 : 1;\n\n        if (geometry.isBufferGeometry) {\n          var index = geometry.index;\n          var attributes = geometry.attributes;\n          var positionAttribute = attributes.position;\n\n          if (index !== null) {\n            var start = Math.max(0, drawRange.start);\n            var end = Math.min(index.count, drawRange.start + drawRange.count);\n\n            for (var _i171 = start, l = end - 1; _i171 < l; _i171 += step) {\n              var a = index.getX(_i171);\n              var b = index.getX(_i171 + 1);\n              vStart.fromBufferAttribute(positionAttribute, a);\n              vEnd.fromBufferAttribute(positionAttribute, b);\n\n              var distSq = _ray$1.distanceSqToSegment(vStart, vEnd, interRay, interSegment);\n\n              if (distSq > localThresholdSq) continue;\n              interRay.applyMatrix4(this.matrixWorld); //Move back to world space for distance calculation\n\n              var distance = raycaster.ray.origin.distanceTo(interRay);\n              if (distance < raycaster.near || distance > raycaster.far) continue;\n              intersects.push({\n                distance: distance,\n                // What do we want? intersection point on the ray or on the segment??\n                // point: raycaster.ray.at( distance ),\n                point: interSegment.clone().applyMatrix4(this.matrixWorld),\n                index: _i171,\n                face: null,\n                faceIndex: null,\n                object: this\n              });\n            }\n          } else {\n            var _start6 = Math.max(0, drawRange.start);\n\n            var _end5 = Math.min(positionAttribute.count, drawRange.start + drawRange.count);\n\n            for (var _i172 = _start6, _l6 = _end5 - 1; _i172 < _l6; _i172 += step) {\n              vStart.fromBufferAttribute(positionAttribute, _i172);\n              vEnd.fromBufferAttribute(positionAttribute, _i172 + 1);\n\n              var _distSq = _ray$1.distanceSqToSegment(vStart, vEnd, interRay, interSegment);\n\n              if (_distSq > localThresholdSq) continue;\n              interRay.applyMatrix4(this.matrixWorld); //Move back to world space for distance calculation\n\n              var _distance = raycaster.ray.origin.distanceTo(interRay);\n\n              if (_distance < raycaster.near || _distance > raycaster.far) continue;\n              intersects.push({\n                distance: _distance,\n                // What do we want? intersection point on the ray or on the segment??\n                // point: raycaster.ray.at( distance ),\n                point: interSegment.clone().applyMatrix4(this.matrixWorld),\n                index: _i172,\n                face: null,\n                faceIndex: null,\n                object: this\n              });\n            }\n          }\n        } else if (geometry.isGeometry) {\n          console.error('THREE.Line.raycast() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.');\n        }\n      }\n    }, {\n      key: \"updateMorphTargets\",\n      value: function updateMorphTargets() {\n        var geometry = this.geometry;\n\n        if (geometry.isBufferGeometry) {\n          var morphAttributes = geometry.morphAttributes;\n          var keys = Object.keys(morphAttributes);\n\n          if (keys.length > 0) {\n            var morphAttribute = morphAttributes[keys[0]];\n\n            if (morphAttribute !== undefined) {\n              this.morphTargetInfluences = [];\n              this.morphTargetDictionary = {};\n\n              for (var m = 0, ml = morphAttribute.length; m < ml; m++) {\n                var name = morphAttribute[m].name || String(m);\n                this.morphTargetInfluences.push(0);\n                this.morphTargetDictionary[name] = m;\n              }\n            }\n          }\n        } else {\n          var morphTargets = geometry.morphTargets;\n\n          if (morphTargets !== undefined && morphTargets.length > 0) {\n            console.error('THREE.Line.updateMorphTargets() does not support THREE.Geometry. Use THREE.BufferGeometry instead.');\n          }\n        }\n      }\n    }]);\n\n    return Line;\n  }(Object3D);\n\n  Line.prototype.isLine = true;\n\n  var _start = /*@__PURE__*/new Vector3();\n\n  var _end = /*@__PURE__*/new Vector3();\n\n  var LineSegments = /*#__PURE__*/function (_Line) {\n    _inherits(LineSegments, _Line);\n\n    var _super49 = _createSuper(LineSegments);\n\n    function LineSegments(geometry, material) {\n      var _this39;\n\n      _classCallCheck(this, LineSegments);\n\n      _this39 = _super49.call(this, geometry, material);\n      _this39.type = 'LineSegments';\n      return _this39;\n    }\n\n    _createClass(LineSegments, [{\n      key: \"computeLineDistances\",\n      value: function computeLineDistances() {\n        var geometry = this.geometry;\n\n        if (geometry.isBufferGeometry) {\n          // we assume non-indexed geometry\n          if (geometry.index === null) {\n            var positionAttribute = geometry.attributes.position;\n            var lineDistances = [];\n\n            for (var _i173 = 0, l = positionAttribute.count; _i173 < l; _i173 += 2) {\n              _start.fromBufferAttribute(positionAttribute, _i173);\n\n              _end.fromBufferAttribute(positionAttribute, _i173 + 1);\n\n              lineDistances[_i173] = _i173 === 0 ? 0 : lineDistances[_i173 - 1];\n              lineDistances[_i173 + 1] = lineDistances[_i173] + _start.distanceTo(_end);\n            }\n\n            geometry.setAttribute('lineDistance', new Float32BufferAttribute(lineDistances, 1));\n          } else {\n            console.warn('THREE.LineSegments.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.');\n          }\n        } else if (geometry.isGeometry) {\n          console.error('THREE.LineSegments.computeLineDistances() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.');\n        }\n\n        return this;\n      }\n    }]);\n\n    return LineSegments;\n  }(Line);\n\n  LineSegments.prototype.isLineSegments = true;\n\n  var LineLoop = /*#__PURE__*/function (_Line2) {\n    _inherits(LineLoop, _Line2);\n\n    var _super50 = _createSuper(LineLoop);\n\n    function LineLoop(geometry, material) {\n      var _this40;\n\n      _classCallCheck(this, LineLoop);\n\n      _this40 = _super50.call(this, geometry, material);\n      _this40.type = 'LineLoop';\n      return _this40;\n    }\n\n    return LineLoop;\n  }(Line);\n\n  LineLoop.prototype.isLineLoop = true;\n  /**\n   * parameters = {\n   *\tcolor: <hex>,\n   *\topacity: <float>,\n   *\tmap: new THREE.Texture( <Image> ),\n   *\talphaMap: new THREE.Texture( <Image> ),\n   *\n   *\tsize: <float>,\n   *\tsizeAttenuation: <bool>\n   *\n   * }\n   */\n\n  var PointsMaterial = /*#__PURE__*/function (_Material7) {\n    _inherits(PointsMaterial, _Material7);\n\n    var _super51 = _createSuper(PointsMaterial);\n\n    function PointsMaterial(parameters) {\n      var _this41;\n\n      _classCallCheck(this, PointsMaterial);\n\n      _this41 = _super51.call(this);\n      _this41.type = 'PointsMaterial';\n      _this41.color = new Color(0xffffff);\n      _this41.map = null;\n      _this41.alphaMap = null;\n      _this41.size = 1;\n      _this41.sizeAttenuation = true;\n\n      _this41.setValues(parameters);\n\n      return _this41;\n    }\n\n    _createClass(PointsMaterial, [{\n      key: \"copy\",\n      value: function copy(source) {\n        _get(_getPrototypeOf(PointsMaterial.prototype), \"copy\", this).call(this, source);\n\n        this.color.copy(source.color);\n        this.map = source.map;\n        this.alphaMap = source.alphaMap;\n        this.size = source.size;\n        this.sizeAttenuation = source.sizeAttenuation;\n        return this;\n      }\n    }]);\n\n    return PointsMaterial;\n  }(Material);\n\n  PointsMaterial.prototype.isPointsMaterial = true;\n\n  var _inverseMatrix = /*@__PURE__*/new Matrix4();\n\n  var _ray = /*@__PURE__*/new Ray();\n\n  var _sphere = /*@__PURE__*/new Sphere();\n\n  var _position$2 = /*@__PURE__*/new Vector3();\n\n  var Points = /*#__PURE__*/function (_Object3D10) {\n    _inherits(Points, _Object3D10);\n\n    var _super52 = _createSuper(Points);\n\n    function Points() {\n      var _this42;\n\n      var geometry = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : new BufferGeometry();\n      var material = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : new PointsMaterial();\n\n      _classCallCheck(this, Points);\n\n      _this42 = _super52.call(this);\n      _this42.type = 'Points';\n      _this42.geometry = geometry;\n      _this42.material = material;\n\n      _this42.updateMorphTargets();\n\n      return _this42;\n    }\n\n    _createClass(Points, [{\n      key: \"copy\",\n      value: function copy(source) {\n        _get(_getPrototypeOf(Points.prototype), \"copy\", this).call(this, source);\n\n        this.material = source.material;\n        this.geometry = source.geometry;\n        return this;\n      }\n    }, {\n      key: \"raycast\",\n      value: function raycast(raycaster, intersects) {\n        var geometry = this.geometry;\n        var matrixWorld = this.matrixWorld;\n        var threshold = raycaster.params.Points.threshold;\n        var drawRange = geometry.drawRange; // Checking boundingSphere distance to ray\n\n        if (geometry.boundingSphere === null) geometry.computeBoundingSphere();\n\n        _sphere.copy(geometry.boundingSphere);\n\n        _sphere.applyMatrix4(matrixWorld);\n\n        _sphere.radius += threshold;\n        if (raycaster.ray.intersectsSphere(_sphere) === false) return; //\n\n        _inverseMatrix.copy(matrixWorld).invert();\n\n        _ray.copy(raycaster.ray).applyMatrix4(_inverseMatrix);\n\n        var localThreshold = threshold / ((this.scale.x + this.scale.y + this.scale.z) / 3);\n        var localThresholdSq = localThreshold * localThreshold;\n\n        if (geometry.isBufferGeometry) {\n          var index = geometry.index;\n          var attributes = geometry.attributes;\n          var positionAttribute = attributes.position;\n\n          if (index !== null) {\n            var start = Math.max(0, drawRange.start);\n            var end = Math.min(index.count, drawRange.start + drawRange.count);\n\n            for (var _i174 = start, il = end; _i174 < il; _i174++) {\n              var a = index.getX(_i174);\n\n              _position$2.fromBufferAttribute(positionAttribute, a);\n\n              testPoint(_position$2, a, localThresholdSq, matrixWorld, raycaster, intersects, this);\n            }\n          } else {\n            var _start7 = Math.max(0, drawRange.start);\n\n            var _end6 = Math.min(positionAttribute.count, drawRange.start + drawRange.count);\n\n            for (var _i175 = _start7, l = _end6; _i175 < l; _i175++) {\n              _position$2.fromBufferAttribute(positionAttribute, _i175);\n\n              testPoint(_position$2, _i175, localThresholdSq, matrixWorld, raycaster, intersects, this);\n            }\n          }\n        } else {\n          console.error('THREE.Points.raycast() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.');\n        }\n      }\n    }, {\n      key: \"updateMorphTargets\",\n      value: function updateMorphTargets() {\n        var geometry = this.geometry;\n\n        if (geometry.isBufferGeometry) {\n          var morphAttributes = geometry.morphAttributes;\n          var keys = Object.keys(morphAttributes);\n\n          if (keys.length > 0) {\n            var morphAttribute = morphAttributes[keys[0]];\n\n            if (morphAttribute !== undefined) {\n              this.morphTargetInfluences = [];\n              this.morphTargetDictionary = {};\n\n              for (var m = 0, ml = morphAttribute.length; m < ml; m++) {\n                var name = morphAttribute[m].name || String(m);\n                this.morphTargetInfluences.push(0);\n                this.morphTargetDictionary[name] = m;\n              }\n            }\n          }\n        } else {\n          var morphTargets = geometry.morphTargets;\n\n          if (morphTargets !== undefined && morphTargets.length > 0) {\n            console.error('THREE.Points.updateMorphTargets() does not support THREE.Geometry. Use THREE.BufferGeometry instead.');\n          }\n        }\n      }\n    }]);\n\n    return Points;\n  }(Object3D);\n\n  Points.prototype.isPoints = true;\n\n  function testPoint(point, index, localThresholdSq, matrixWorld, raycaster, intersects, object) {\n    var rayPointDistanceSq = _ray.distanceSqToPoint(point);\n\n    if (rayPointDistanceSq < localThresholdSq) {\n      var intersectPoint = new Vector3();\n\n      _ray.closestPointToPoint(point, intersectPoint);\n\n      intersectPoint.applyMatrix4(matrixWorld);\n      var distance = raycaster.ray.origin.distanceTo(intersectPoint);\n      if (distance < raycaster.near || distance > raycaster.far) return;\n      intersects.push({\n        distance: distance,\n        distanceToRay: Math.sqrt(rayPointDistanceSq),\n        point: intersectPoint,\n        index: index,\n        face: null,\n        object: object\n      });\n    }\n  }\n\n  var VideoTexture = /*#__PURE__*/function (_Texture5) {\n    _inherits(VideoTexture, _Texture5);\n\n    var _super53 = _createSuper(VideoTexture);\n\n    function VideoTexture(video, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy) {\n      var _this43;\n\n      _classCallCheck(this, VideoTexture);\n\n      _this43 = _super53.call(this, video, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy);\n      _this43.format = format !== undefined ? format : RGBFormat;\n      _this43.minFilter = minFilter !== undefined ? minFilter : LinearFilter;\n      _this43.magFilter = magFilter !== undefined ? magFilter : LinearFilter;\n      _this43.generateMipmaps = false;\n\n      var scope = _assertThisInitialized(_this43);\n\n      function updateVideo() {\n        scope.needsUpdate = true;\n        video.requestVideoFrameCallback(updateVideo);\n      }\n\n      if ('requestVideoFrameCallback' in video) {\n        video.requestVideoFrameCallback(updateVideo);\n      }\n\n      return _this43;\n    }\n\n    _createClass(VideoTexture, [{\n      key: \"clone\",\n      value: function clone() {\n        return new this.constructor(this.image).copy(this);\n      }\n    }, {\n      key: \"update\",\n      value: function update() {\n        var video = this.image;\n        var hasVideoFrameCallback = ('requestVideoFrameCallback' in video);\n\n        if (hasVideoFrameCallback === false && video.readyState >= video.HAVE_CURRENT_DATA) {\n          this.needsUpdate = true;\n        }\n      }\n    }]);\n\n    return VideoTexture;\n  }(Texture);\n\n  VideoTexture.prototype.isVideoTexture = true;\n\n  var CompressedTexture = /*#__PURE__*/function (_Texture6) {\n    _inherits(CompressedTexture, _Texture6);\n\n    var _super54 = _createSuper(CompressedTexture);\n\n    function CompressedTexture(mipmaps, width, height, format, type, mapping, wrapS, wrapT, magFilter, minFilter, anisotropy, encoding) {\n      var _this44;\n\n      _classCallCheck(this, CompressedTexture);\n\n      _this44 = _super54.call(this, null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding);\n      _this44.image = {\n        width: width,\n        height: height\n      };\n      _this44.mipmaps = mipmaps; // no flipping for cube textures\n      // (also flipping doesn't work for compressed textures )\n\n      _this44.flipY = false; // can't generate mipmaps for compressed textures\n      // mips must be embedded in DDS files\n\n      _this44.generateMipmaps = false;\n      return _this44;\n    }\n\n    return CompressedTexture;\n  }(Texture);\n\n  CompressedTexture.prototype.isCompressedTexture = true;\n\n  var CanvasTexture = /*#__PURE__*/function (_Texture7) {\n    _inherits(CanvasTexture, _Texture7);\n\n    var _super55 = _createSuper(CanvasTexture);\n\n    function CanvasTexture(canvas, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy) {\n      var _this45;\n\n      _classCallCheck(this, CanvasTexture);\n\n      _this45 = _super55.call(this, canvas, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy);\n      _this45.needsUpdate = true;\n      return _this45;\n    }\n\n    return CanvasTexture;\n  }(Texture);\n\n  CanvasTexture.prototype.isCanvasTexture = true;\n\n  var DepthTexture = /*#__PURE__*/function (_Texture8) {\n    _inherits(DepthTexture, _Texture8);\n\n    var _super56 = _createSuper(DepthTexture);\n\n    function DepthTexture(width, height, type, mapping, wrapS, wrapT, magFilter, minFilter, anisotropy, format) {\n      var _this46;\n\n      _classCallCheck(this, DepthTexture);\n\n      format = format !== undefined ? format : DepthFormat;\n\n      if (format !== DepthFormat && format !== DepthStencilFormat) {\n        throw new Error('DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat');\n      }\n\n      if (type === undefined && format === DepthFormat) type = UnsignedShortType;\n      if (type === undefined && format === DepthStencilFormat) type = UnsignedInt248Type;\n      _this46 = _super56.call(this, null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy);\n      _this46.image = {\n        width: width,\n        height: height\n      };\n      _this46.magFilter = magFilter !== undefined ? magFilter : NearestFilter;\n      _this46.minFilter = minFilter !== undefined ? minFilter : NearestFilter;\n      _this46.flipY = false;\n      _this46.generateMipmaps = false;\n      return _this46;\n    }\n\n    return DepthTexture;\n  }(Texture);\n\n  DepthTexture.prototype.isDepthTexture = true;\n\n  var CircleGeometry = /*#__PURE__*/function (_BufferGeometry3) {\n    _inherits(CircleGeometry, _BufferGeometry3);\n\n    var _super57 = _createSuper(CircleGeometry);\n\n    function CircleGeometry() {\n      var _this47;\n\n      var radius = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n      var segments = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 8;\n      var thetaStart = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n      var thetaLength = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : Math.PI * 2;\n\n      _classCallCheck(this, CircleGeometry);\n\n      _this47 = _super57.call(this);\n      _this47.type = 'CircleGeometry';\n      _this47.parameters = {\n        radius: radius,\n        segments: segments,\n        thetaStart: thetaStart,\n        thetaLength: thetaLength\n      };\n      segments = Math.max(3, segments); // buffers\n\n      var indices = [];\n      var vertices = [];\n      var normals = [];\n      var uvs = []; // helper variables\n\n      var vertex = new Vector3();\n      var uv = new Vector2(); // center point\n\n      vertices.push(0, 0, 0);\n      normals.push(0, 0, 1);\n      uvs.push(0.5, 0.5);\n\n      for (var s = 0, _i176 = 3; s <= segments; s++, _i176 += 3) {\n        var segment = thetaStart + s / segments * thetaLength; // vertex\n\n        vertex.x = radius * Math.cos(segment);\n        vertex.y = radius * Math.sin(segment);\n        vertices.push(vertex.x, vertex.y, vertex.z); // normal\n\n        normals.push(0, 0, 1); // uvs\n\n        uv.x = (vertices[_i176] / radius + 1) / 2;\n        uv.y = (vertices[_i176 + 1] / radius + 1) / 2;\n        uvs.push(uv.x, uv.y);\n      } // indices\n\n\n      for (var _i177 = 1; _i177 <= segments; _i177++) {\n        indices.push(_i177, _i177 + 1, 0);\n      } // build geometry\n\n\n      _this47.setIndex(indices);\n\n      _this47.setAttribute('position', new Float32BufferAttribute(vertices, 3));\n\n      _this47.setAttribute('normal', new Float32BufferAttribute(normals, 3));\n\n      _this47.setAttribute('uv', new Float32BufferAttribute(uvs, 2));\n\n      return _this47;\n    }\n\n    _createClass(CircleGeometry, null, [{\n      key: \"fromJSON\",\n      value: function fromJSON(data) {\n        return new CircleGeometry(data.radius, data.segments, data.thetaStart, data.thetaLength);\n      }\n    }]);\n\n    return CircleGeometry;\n  }(BufferGeometry);\n\n  var CylinderGeometry = /*#__PURE__*/function (_BufferGeometry4) {\n    _inherits(CylinderGeometry, _BufferGeometry4);\n\n    var _super58 = _createSuper(CylinderGeometry);\n\n    function CylinderGeometry() {\n      var _this48;\n\n      var radiusTop = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n      var radiusBottom = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n      var height = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n      var radialSegments = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 8;\n      var heightSegments = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 1;\n      var openEnded = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : false;\n      var thetaStart = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : 0;\n      var thetaLength = arguments.length > 7 && arguments[7] !== undefined ? arguments[7] : Math.PI * 2;\n\n      _classCallCheck(this, CylinderGeometry);\n\n      _this48 = _super58.call(this);\n      _this48.type = 'CylinderGeometry';\n      _this48.parameters = {\n        radiusTop: radiusTop,\n        radiusBottom: radiusBottom,\n        height: height,\n        radialSegments: radialSegments,\n        heightSegments: heightSegments,\n        openEnded: openEnded,\n        thetaStart: thetaStart,\n        thetaLength: thetaLength\n      };\n\n      var scope = _assertThisInitialized(_this48);\n\n      radialSegments = Math.floor(radialSegments);\n      heightSegments = Math.floor(heightSegments); // buffers\n\n      var indices = [];\n      var vertices = [];\n      var normals = [];\n      var uvs = []; // helper variables\n\n      var index = 0;\n      var indexArray = [];\n      var halfHeight = height / 2;\n      var groupStart = 0; // generate geometry\n\n      generateTorso();\n\n      if (openEnded === false) {\n        if (radiusTop > 0) generateCap(true);\n        if (radiusBottom > 0) generateCap(false);\n      } // build geometry\n\n\n      _this48.setIndex(indices);\n\n      _this48.setAttribute('position', new Float32BufferAttribute(vertices, 3));\n\n      _this48.setAttribute('normal', new Float32BufferAttribute(normals, 3));\n\n      _this48.setAttribute('uv', new Float32BufferAttribute(uvs, 2));\n\n      function generateTorso() {\n        var normal = new Vector3();\n        var vertex = new Vector3();\n        var groupCount = 0; // this will be used to calculate the normal\n\n        var slope = (radiusBottom - radiusTop) / height; // generate vertices, normals and uvs\n\n        for (var y = 0; y <= heightSegments; y++) {\n          var indexRow = [];\n          var v = y / heightSegments; // calculate the radius of the current row\n\n          var radius = v * (radiusBottom - radiusTop) + radiusTop;\n\n          for (var x = 0; x <= radialSegments; x++) {\n            var u = x / radialSegments;\n            var theta = u * thetaLength + thetaStart;\n            var sinTheta = Math.sin(theta);\n            var cosTheta = Math.cos(theta); // vertex\n\n            vertex.x = radius * sinTheta;\n            vertex.y = -v * height + halfHeight;\n            vertex.z = radius * cosTheta;\n            vertices.push(vertex.x, vertex.y, vertex.z); // normal\n\n            normal.set(sinTheta, slope, cosTheta).normalize();\n            normals.push(normal.x, normal.y, normal.z); // uv\n\n            uvs.push(u, 1 - v); // save index of vertex in respective row\n\n            indexRow.push(index++);\n          } // now save vertices of the row in our index array\n\n\n          indexArray.push(indexRow);\n        } // generate indices\n\n\n        for (var _x4 = 0; _x4 < radialSegments; _x4++) {\n          for (var _y2 = 0; _y2 < heightSegments; _y2++) {\n            // we use the index array to access the correct indices\n            var a = indexArray[_y2][_x4];\n            var b = indexArray[_y2 + 1][_x4];\n            var c = indexArray[_y2 + 1][_x4 + 1];\n            var d = indexArray[_y2][_x4 + 1]; // faces\n\n            indices.push(a, b, d);\n            indices.push(b, c, d); // update group counter\n\n            groupCount += 6;\n          }\n        } // add a group to the geometry. this will ensure multi material support\n\n\n        scope.addGroup(groupStart, groupCount, 0); // calculate new start value for groups\n\n        groupStart += groupCount;\n      }\n\n      function generateCap(top) {\n        // save the index of the first center vertex\n        var centerIndexStart = index;\n        var uv = new Vector2();\n        var vertex = new Vector3();\n        var groupCount = 0;\n        var radius = top === true ? radiusTop : radiusBottom;\n        var sign = top === true ? 1 : -1; // first we generate the center vertex data of the cap.\n        // because the geometry needs one set of uvs per face,\n        // we must generate a center vertex per face/segment\n\n        for (var x = 1; x <= radialSegments; x++) {\n          // vertex\n          vertices.push(0, halfHeight * sign, 0); // normal\n\n          normals.push(0, sign, 0); // uv\n\n          uvs.push(0.5, 0.5); // increase index\n\n          index++;\n        } // save the index of the last center vertex\n\n\n        var centerIndexEnd = index; // now we generate the surrounding vertices, normals and uvs\n\n        for (var _x5 = 0; _x5 <= radialSegments; _x5++) {\n          var u = _x5 / radialSegments;\n          var theta = u * thetaLength + thetaStart;\n          var cosTheta = Math.cos(theta);\n          var sinTheta = Math.sin(theta); // vertex\n\n          vertex.x = radius * sinTheta;\n          vertex.y = halfHeight * sign;\n          vertex.z = radius * cosTheta;\n          vertices.push(vertex.x, vertex.y, vertex.z); // normal\n\n          normals.push(0, sign, 0); // uv\n\n          uv.x = cosTheta * 0.5 + 0.5;\n          uv.y = sinTheta * 0.5 * sign + 0.5;\n          uvs.push(uv.x, uv.y); // increase index\n\n          index++;\n        } // generate indices\n\n\n        for (var _x6 = 0; _x6 < radialSegments; _x6++) {\n          var c = centerIndexStart + _x6;\n\n          var _i178 = centerIndexEnd + _x6;\n\n          if (top === true) {\n            // face top\n            indices.push(_i178, _i178 + 1, c);\n          } else {\n            // face bottom\n            indices.push(_i178 + 1, _i178, c);\n          }\n\n          groupCount += 3;\n        } // add a group to the geometry. this will ensure multi material support\n\n\n        scope.addGroup(groupStart, groupCount, top === true ? 1 : 2); // calculate new start value for groups\n\n        groupStart += groupCount;\n      }\n\n      return _this48;\n    }\n\n    _createClass(CylinderGeometry, null, [{\n      key: \"fromJSON\",\n      value: function fromJSON(data) {\n        return new CylinderGeometry(data.radiusTop, data.radiusBottom, data.height, data.radialSegments, data.heightSegments, data.openEnded, data.thetaStart, data.thetaLength);\n      }\n    }]);\n\n    return CylinderGeometry;\n  }(BufferGeometry);\n\n  var ConeGeometry = /*#__PURE__*/function (_CylinderGeometry) {\n    _inherits(ConeGeometry, _CylinderGeometry);\n\n    var _super59 = _createSuper(ConeGeometry);\n\n    function ConeGeometry() {\n      var _this49;\n\n      var radius = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n      var height = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n      var radialSegments = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 8;\n      var heightSegments = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 1;\n      var openEnded = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : false;\n      var thetaStart = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : 0;\n      var thetaLength = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : Math.PI * 2;\n\n      _classCallCheck(this, ConeGeometry);\n\n      _this49 = _super59.call(this, 0, radius, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength);\n      _this49.type = 'ConeGeometry';\n      _this49.parameters = {\n        radius: radius,\n        height: height,\n        radialSegments: radialSegments,\n        heightSegments: heightSegments,\n        openEnded: openEnded,\n        thetaStart: thetaStart,\n        thetaLength: thetaLength\n      };\n      return _this49;\n    }\n\n    _createClass(ConeGeometry, null, [{\n      key: \"fromJSON\",\n      value: function fromJSON(data) {\n        return new ConeGeometry(data.radius, data.height, data.radialSegments, data.heightSegments, data.openEnded, data.thetaStart, data.thetaLength);\n      }\n    }]);\n\n    return ConeGeometry;\n  }(CylinderGeometry);\n\n  var PolyhedronGeometry = /*#__PURE__*/function (_BufferGeometry5) {\n    _inherits(PolyhedronGeometry, _BufferGeometry5);\n\n    var _super60 = _createSuper(PolyhedronGeometry);\n\n    function PolyhedronGeometry() {\n      var _this50;\n\n      var vertices = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n      var indices = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n      var radius = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n      var detail = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0;\n\n      _classCallCheck(this, PolyhedronGeometry);\n\n      _this50 = _super60.call(this);\n      _this50.type = 'PolyhedronGeometry';\n      _this50.parameters = {\n        vertices: vertices,\n        indices: indices,\n        radius: radius,\n        detail: detail\n      }; // default buffer data\n\n      var vertexBuffer = [];\n      var uvBuffer = []; // the subdivision creates the vertex buffer data\n\n      subdivide(detail); // all vertices should lie on a conceptual sphere with a given radius\n\n      applyRadius(radius); // finally, create the uv data\n\n      generateUVs(); // build non-indexed geometry\n\n      _this50.setAttribute('position', new Float32BufferAttribute(vertexBuffer, 3));\n\n      _this50.setAttribute('normal', new Float32BufferAttribute(vertexBuffer.slice(), 3));\n\n      _this50.setAttribute('uv', new Float32BufferAttribute(uvBuffer, 2));\n\n      if (detail === 0) {\n        _this50.computeVertexNormals(); // flat normals\n\n      } else {\n        _this50.normalizeNormals(); // smooth normals\n\n      } // helper functions\n\n\n      function subdivide(detail) {\n        var a = new Vector3();\n        var b = new Vector3();\n        var c = new Vector3(); // iterate over all faces and apply a subdivison with the given detail value\n\n        for (var _i179 = 0; _i179 < indices.length; _i179 += 3) {\n          // get the vertices of the face\n          getVertexByIndex(indices[_i179 + 0], a);\n          getVertexByIndex(indices[_i179 + 1], b);\n          getVertexByIndex(indices[_i179 + 2], c); // perform subdivision\n\n          subdivideFace(a, b, c, detail);\n        }\n      }\n\n      function subdivideFace(a, b, c, detail) {\n        var cols = detail + 1; // we use this multidimensional array as a data structure for creating the subdivision\n\n        var v = []; // construct all of the vertices for this subdivision\n\n        for (var _i180 = 0; _i180 <= cols; _i180++) {\n          v[_i180] = [];\n          var aj = a.clone().lerp(c, _i180 / cols);\n          var bj = b.clone().lerp(c, _i180 / cols);\n          var rows = cols - _i180;\n\n          for (var j = 0; j <= rows; j++) {\n            if (j === 0 && _i180 === cols) {\n              v[_i180][j] = aj;\n            } else {\n              v[_i180][j] = aj.clone().lerp(bj, j / rows);\n            }\n          }\n        } // construct all of the faces\n\n\n        for (var _i181 = 0; _i181 < cols; _i181++) {\n          for (var _j5 = 0; _j5 < 2 * (cols - _i181) - 1; _j5++) {\n            var k = Math.floor(_j5 / 2);\n\n            if (_j5 % 2 === 0) {\n              pushVertex(v[_i181][k + 1]);\n              pushVertex(v[_i181 + 1][k]);\n              pushVertex(v[_i181][k]);\n            } else {\n              pushVertex(v[_i181][k + 1]);\n              pushVertex(v[_i181 + 1][k + 1]);\n              pushVertex(v[_i181 + 1][k]);\n            }\n          }\n        }\n      }\n\n      function applyRadius(radius) {\n        var vertex = new Vector3(); // iterate over the entire buffer and apply the radius to each vertex\n\n        for (var _i182 = 0; _i182 < vertexBuffer.length; _i182 += 3) {\n          vertex.x = vertexBuffer[_i182 + 0];\n          vertex.y = vertexBuffer[_i182 + 1];\n          vertex.z = vertexBuffer[_i182 + 2];\n          vertex.normalize().multiplyScalar(radius);\n          vertexBuffer[_i182 + 0] = vertex.x;\n          vertexBuffer[_i182 + 1] = vertex.y;\n          vertexBuffer[_i182 + 2] = vertex.z;\n        }\n      }\n\n      function generateUVs() {\n        var vertex = new Vector3();\n\n        for (var _i183 = 0; _i183 < vertexBuffer.length; _i183 += 3) {\n          vertex.x = vertexBuffer[_i183 + 0];\n          vertex.y = vertexBuffer[_i183 + 1];\n          vertex.z = vertexBuffer[_i183 + 2];\n          var u = azimuth(vertex) / 2 / Math.PI + 0.5;\n          var v = inclination(vertex) / Math.PI + 0.5;\n          uvBuffer.push(u, 1 - v);\n        }\n\n        correctUVs();\n        correctSeam();\n      }\n\n      function correctSeam() {\n        // handle case when face straddles the seam, see #3269\n        for (var _i184 = 0; _i184 < uvBuffer.length; _i184 += 6) {\n          // uv data of a single face\n          var x0 = uvBuffer[_i184 + 0];\n          var x1 = uvBuffer[_i184 + 2];\n          var x2 = uvBuffer[_i184 + 4];\n          var max = Math.max(x0, x1, x2);\n          var min = Math.min(x0, x1, x2); // 0.9 is somewhat arbitrary\n\n          if (max > 0.9 && min < 0.1) {\n            if (x0 < 0.2) uvBuffer[_i184 + 0] += 1;\n            if (x1 < 0.2) uvBuffer[_i184 + 2] += 1;\n            if (x2 < 0.2) uvBuffer[_i184 + 4] += 1;\n          }\n        }\n      }\n\n      function pushVertex(vertex) {\n        vertexBuffer.push(vertex.x, vertex.y, vertex.z);\n      }\n\n      function getVertexByIndex(index, vertex) {\n        var stride = index * 3;\n        vertex.x = vertices[stride + 0];\n        vertex.y = vertices[stride + 1];\n        vertex.z = vertices[stride + 2];\n      }\n\n      function correctUVs() {\n        var a = new Vector3();\n        var b = new Vector3();\n        var c = new Vector3();\n        var centroid = new Vector3();\n        var uvA = new Vector2();\n        var uvB = new Vector2();\n        var uvC = new Vector2();\n\n        for (var _i185 = 0, j = 0; _i185 < vertexBuffer.length; _i185 += 9, j += 6) {\n          a.set(vertexBuffer[_i185 + 0], vertexBuffer[_i185 + 1], vertexBuffer[_i185 + 2]);\n          b.set(vertexBuffer[_i185 + 3], vertexBuffer[_i185 + 4], vertexBuffer[_i185 + 5]);\n          c.set(vertexBuffer[_i185 + 6], vertexBuffer[_i185 + 7], vertexBuffer[_i185 + 8]);\n          uvA.set(uvBuffer[j + 0], uvBuffer[j + 1]);\n          uvB.set(uvBuffer[j + 2], uvBuffer[j + 3]);\n          uvC.set(uvBuffer[j + 4], uvBuffer[j + 5]);\n          centroid.copy(a).add(b).add(c).divideScalar(3);\n          var azi = azimuth(centroid);\n          correctUV(uvA, j + 0, a, azi);\n          correctUV(uvB, j + 2, b, azi);\n          correctUV(uvC, j + 4, c, azi);\n        }\n      }\n\n      function correctUV(uv, stride, vector, azimuth) {\n        if (azimuth < 0 && uv.x === 1) {\n          uvBuffer[stride] = uv.x - 1;\n        }\n\n        if (vector.x === 0 && vector.z === 0) {\n          uvBuffer[stride] = azimuth / 2 / Math.PI + 0.5;\n        }\n      } // Angle around the Y axis, counter-clockwise when looking from above.\n\n\n      function azimuth(vector) {\n        return Math.atan2(vector.z, -vector.x);\n      } // Angle above the XZ plane.\n\n\n      function inclination(vector) {\n        return Math.atan2(-vector.y, Math.sqrt(vector.x * vector.x + vector.z * vector.z));\n      }\n\n      return _this50;\n    }\n\n    _createClass(PolyhedronGeometry, null, [{\n      key: \"fromJSON\",\n      value: function fromJSON(data) {\n        return new PolyhedronGeometry(data.vertices, data.indices, data.radius, data.details);\n      }\n    }]);\n\n    return PolyhedronGeometry;\n  }(BufferGeometry);\n\n  var DodecahedronGeometry = /*#__PURE__*/function (_PolyhedronGeometry) {\n    _inherits(DodecahedronGeometry, _PolyhedronGeometry);\n\n    var _super61 = _createSuper(DodecahedronGeometry);\n\n    function DodecahedronGeometry() {\n      var _this51;\n\n      var radius = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n      var detail = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n\n      _classCallCheck(this, DodecahedronGeometry);\n\n      var t = (1 + Math.sqrt(5)) / 2;\n      var r = 1 / t;\n      var vertices = [// (±1, ±1, ±1)\n      -1, -1, -1, -1, -1, 1, -1, 1, -1, -1, 1, 1, 1, -1, -1, 1, -1, 1, 1, 1, -1, 1, 1, 1, // (0, ±1/φ, ±φ)\n      0, -r, -t, 0, -r, t, 0, r, -t, 0, r, t, // (±1/φ, ±φ, 0)\n      -r, -t, 0, -r, t, 0, r, -t, 0, r, t, 0, // (±φ, 0, ±1/φ)\n      -t, 0, -r, t, 0, -r, -t, 0, r, t, 0, r];\n      var indices = [3, 11, 7, 3, 7, 15, 3, 15, 13, 7, 19, 17, 7, 17, 6, 7, 6, 15, 17, 4, 8, 17, 8, 10, 17, 10, 6, 8, 0, 16, 8, 16, 2, 8, 2, 10, 0, 12, 1, 0, 1, 18, 0, 18, 16, 6, 10, 2, 6, 2, 13, 6, 13, 15, 2, 16, 18, 2, 18, 3, 2, 3, 13, 18, 1, 9, 18, 9, 11, 18, 11, 3, 4, 14, 12, 4, 12, 0, 4, 0, 8, 11, 9, 5, 11, 5, 19, 11, 19, 7, 19, 5, 14, 19, 14, 4, 19, 4, 17, 1, 12, 14, 1, 14, 5, 1, 5, 9];\n      _this51 = _super61.call(this, vertices, indices, radius, detail);\n      _this51.type = 'DodecahedronGeometry';\n      _this51.parameters = {\n        radius: radius,\n        detail: detail\n      };\n      return _this51;\n    }\n\n    _createClass(DodecahedronGeometry, null, [{\n      key: \"fromJSON\",\n      value: function fromJSON(data) {\n        return new DodecahedronGeometry(data.radius, data.detail);\n      }\n    }]);\n\n    return DodecahedronGeometry;\n  }(PolyhedronGeometry);\n\n  var _v0 = new Vector3();\n\n  var _v1$1 = new Vector3();\n\n  var _normal = new Vector3();\n\n  var _triangle = new Triangle();\n\n  var EdgesGeometry = /*#__PURE__*/function (_BufferGeometry6) {\n    _inherits(EdgesGeometry, _BufferGeometry6);\n\n    var _super62 = _createSuper(EdgesGeometry);\n\n    function EdgesGeometry() {\n      var _this52;\n\n      var geometry = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n      var thresholdAngle = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n\n      _classCallCheck(this, EdgesGeometry);\n\n      _this52 = _super62.call(this);\n      _this52.type = 'EdgesGeometry';\n      _this52.parameters = {\n        geometry: geometry,\n        thresholdAngle: thresholdAngle\n      };\n\n      if (geometry !== null) {\n        var precisionPoints = 4;\n        var precision = Math.pow(10, precisionPoints);\n        var thresholdDot = Math.cos(DEG2RAD * thresholdAngle);\n        var indexAttr = geometry.getIndex();\n        var positionAttr = geometry.getAttribute('position');\n        var indexCount = indexAttr ? indexAttr.count : positionAttr.count;\n        var indexArr = [0, 0, 0];\n        var vertKeys = ['a', 'b', 'c'];\n        var hashes = new Array(3);\n        var edgeData = {};\n        var vertices = [];\n\n        for (var _i186 = 0; _i186 < indexCount; _i186 += 3) {\n          if (indexAttr) {\n            indexArr[0] = indexAttr.getX(_i186);\n            indexArr[1] = indexAttr.getX(_i186 + 1);\n            indexArr[2] = indexAttr.getX(_i186 + 2);\n          } else {\n            indexArr[0] = _i186;\n            indexArr[1] = _i186 + 1;\n            indexArr[2] = _i186 + 2;\n          }\n\n          var a = _triangle.a,\n              b = _triangle.b,\n              c = _triangle.c;\n          a.fromBufferAttribute(positionAttr, indexArr[0]);\n          b.fromBufferAttribute(positionAttr, indexArr[1]);\n          c.fromBufferAttribute(positionAttr, indexArr[2]);\n\n          _triangle.getNormal(_normal); // create hashes for the edge from the vertices\n\n\n          hashes[0] = \"\".concat(Math.round(a.x * precision), \",\").concat(Math.round(a.y * precision), \",\").concat(Math.round(a.z * precision));\n          hashes[1] = \"\".concat(Math.round(b.x * precision), \",\").concat(Math.round(b.y * precision), \",\").concat(Math.round(b.z * precision));\n          hashes[2] = \"\".concat(Math.round(c.x * precision), \",\").concat(Math.round(c.y * precision), \",\").concat(Math.round(c.z * precision)); // skip degenerate triangles\n\n          if (hashes[0] === hashes[1] || hashes[1] === hashes[2] || hashes[2] === hashes[0]) {\n            continue;\n          } // iterate over every edge\n\n\n          for (var j = 0; j < 3; j++) {\n            // get the first and next vertex making up the edge\n            var jNext = (j + 1) % 3;\n            var vecHash0 = hashes[j];\n            var vecHash1 = hashes[jNext];\n            var v0 = _triangle[vertKeys[j]];\n            var v1 = _triangle[vertKeys[jNext]];\n            var hash = \"\".concat(vecHash0, \"_\").concat(vecHash1);\n            var reverseHash = \"\".concat(vecHash1, \"_\").concat(vecHash0);\n\n            if (reverseHash in edgeData && edgeData[reverseHash]) {\n              // if we found a sibling edge add it into the vertex array if\n              // it meets the angle threshold and delete the edge from the map.\n              if (_normal.dot(edgeData[reverseHash].normal) <= thresholdDot) {\n                vertices.push(v0.x, v0.y, v0.z);\n                vertices.push(v1.x, v1.y, v1.z);\n              }\n\n              edgeData[reverseHash] = null;\n            } else if (!(hash in edgeData)) {\n              // if we've already got an edge here then skip adding a new one\n              edgeData[hash] = {\n                index0: indexArr[j],\n                index1: indexArr[jNext],\n                normal: _normal.clone()\n              };\n            }\n          }\n        } // iterate over all remaining, unmatched edges and add them to the vertex array\n\n\n        for (var key in edgeData) {\n          if (edgeData[key]) {\n            var _edgeData$key = edgeData[key],\n                index0 = _edgeData$key.index0,\n                index1 = _edgeData$key.index1;\n\n            _v0.fromBufferAttribute(positionAttr, index0);\n\n            _v1$1.fromBufferAttribute(positionAttr, index1);\n\n            vertices.push(_v0.x, _v0.y, _v0.z);\n            vertices.push(_v1$1.x, _v1$1.y, _v1$1.z);\n          }\n        }\n\n        _this52.setAttribute('position', new Float32BufferAttribute(vertices, 3));\n      }\n\n      return _this52;\n    }\n\n    return EdgesGeometry;\n  }(BufferGeometry);\n  /**\n   * Extensible curve object.\n   *\n   * Some common of curve methods:\n   * .getPoint( t, optionalTarget ), .getTangent( t, optionalTarget )\n   * .getPointAt( u, optionalTarget ), .getTangentAt( u, optionalTarget )\n   * .getPoints(), .getSpacedPoints()\n   * .getLength()\n   * .updateArcLengths()\n   *\n   * This following curves inherit from THREE.Curve:\n   *\n   * -- 2D curves --\n   * THREE.ArcCurve\n   * THREE.CubicBezierCurve\n   * THREE.EllipseCurve\n   * THREE.LineCurve\n   * THREE.QuadraticBezierCurve\n   * THREE.SplineCurve\n   *\n   * -- 3D curves --\n   * THREE.CatmullRomCurve3\n   * THREE.CubicBezierCurve3\n   * THREE.LineCurve3\n   * THREE.QuadraticBezierCurve3\n   *\n   * A series of curves can be represented as a THREE.CurvePath.\n   *\n   **/\n\n\n  var Curve = /*#__PURE__*/function () {\n    function Curve() {\n      _classCallCheck(this, Curve);\n\n      this.type = 'Curve';\n      this.arcLengthDivisions = 200;\n    } // Virtual base class method to overwrite and implement in subclasses\n    //\t- t [0 .. 1]\n\n\n    _createClass(Curve, [{\n      key: \"getPoint\",\n      value: function getPoint() {\n        console.warn('THREE.Curve: .getPoint() not implemented.');\n        return null;\n      } // Get point at relative position in curve according to arc length\n      // - u [0 .. 1]\n\n    }, {\n      key: \"getPointAt\",\n      value: function getPointAt(u, optionalTarget) {\n        var t = this.getUtoTmapping(u);\n        return this.getPoint(t, optionalTarget);\n      } // Get sequence of points using getPoint( t )\n\n    }, {\n      key: \"getPoints\",\n      value: function getPoints() {\n        var divisions = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 5;\n        var points = [];\n\n        for (var d = 0; d <= divisions; d++) {\n          points.push(this.getPoint(d / divisions));\n        }\n\n        return points;\n      } // Get sequence of points using getPointAt( u )\n\n    }, {\n      key: \"getSpacedPoints\",\n      value: function getSpacedPoints() {\n        var divisions = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 5;\n        var points = [];\n\n        for (var d = 0; d <= divisions; d++) {\n          points.push(this.getPointAt(d / divisions));\n        }\n\n        return points;\n      } // Get total curve arc length\n\n    }, {\n      key: \"getLength\",\n      value: function getLength() {\n        var lengths = this.getLengths();\n        return lengths[lengths.length - 1];\n      } // Get list of cumulative segment lengths\n\n    }, {\n      key: \"getLengths\",\n      value: function getLengths() {\n        var divisions = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.arcLengthDivisions;\n\n        if (this.cacheArcLengths && this.cacheArcLengths.length === divisions + 1 && !this.needsUpdate) {\n          return this.cacheArcLengths;\n        }\n\n        this.needsUpdate = false;\n        var cache = [];\n        var current,\n            last = this.getPoint(0);\n        var sum = 0;\n        cache.push(0);\n\n        for (var p = 1; p <= divisions; p++) {\n          current = this.getPoint(p / divisions);\n          sum += current.distanceTo(last);\n          cache.push(sum);\n          last = current;\n        }\n\n        this.cacheArcLengths = cache;\n        return cache; // { sums: cache, sum: sum }; Sum is in the last element.\n      }\n    }, {\n      key: \"updateArcLengths\",\n      value: function updateArcLengths() {\n        this.needsUpdate = true;\n        this.getLengths();\n      } // Given u ( 0 .. 1 ), get a t to find p. This gives you points which are equidistant\n\n    }, {\n      key: \"getUtoTmapping\",\n      value: function getUtoTmapping(u, distance) {\n        var arcLengths = this.getLengths();\n        var i = 0;\n        var il = arcLengths.length;\n        var targetArcLength; // The targeted u distance value to get\n\n        if (distance) {\n          targetArcLength = distance;\n        } else {\n          targetArcLength = u * arcLengths[il - 1];\n        } // binary search for the index with largest value smaller than target u distance\n\n\n        var low = 0,\n            high = il - 1,\n            comparison;\n\n        while (low <= high) {\n          i = Math.floor(low + (high - low) / 2); // less likely to overflow, though probably not issue here, JS doesn't really have integers, all numbers are floats\n\n          comparison = arcLengths[i] - targetArcLength;\n\n          if (comparison < 0) {\n            low = i + 1;\n          } else if (comparison > 0) {\n            high = i - 1;\n          } else {\n            high = i;\n            break; // DONE\n          }\n        }\n\n        i = high;\n\n        if (arcLengths[i] === targetArcLength) {\n          return i / (il - 1);\n        } // we could get finer grain at lengths, or use simple interpolation between two points\n\n\n        var lengthBefore = arcLengths[i];\n        var lengthAfter = arcLengths[i + 1];\n        var segmentLength = lengthAfter - lengthBefore; // determine where we are between the 'before' and 'after' points\n\n        var segmentFraction = (targetArcLength - lengthBefore) / segmentLength; // add that fractional amount to t\n\n        var t = (i + segmentFraction) / (il - 1);\n        return t;\n      } // Returns a unit vector tangent at t\n      // In case any sub curve does not implement its tangent derivation,\n      // 2 points a small delta apart will be used to find its gradient\n      // which seems to give a reasonable approximation\n\n    }, {\n      key: \"getTangent\",\n      value: function getTangent(t, optionalTarget) {\n        var delta = 0.0001;\n        var t1 = t - delta;\n        var t2 = t + delta; // Capping in case of danger\n\n        if (t1 < 0) t1 = 0;\n        if (t2 > 1) t2 = 1;\n        var pt1 = this.getPoint(t1);\n        var pt2 = this.getPoint(t2);\n        var tangent = optionalTarget || (pt1.isVector2 ? new Vector2() : new Vector3());\n        tangent.copy(pt2).sub(pt1).normalize();\n        return tangent;\n      }\n    }, {\n      key: \"getTangentAt\",\n      value: function getTangentAt(u, optionalTarget) {\n        var t = this.getUtoTmapping(u);\n        return this.getTangent(t, optionalTarget);\n      }\n    }, {\n      key: \"computeFrenetFrames\",\n      value: function computeFrenetFrames(segments, closed) {\n        // see http://www.cs.indiana.edu/pub/techreports/TR425.pdf\n        var normal = new Vector3();\n        var tangents = [];\n        var normals = [];\n        var binormals = [];\n        var vec = new Vector3();\n        var mat = new Matrix4(); // compute the tangent vectors for each segment on the curve\n\n        for (var _i187 = 0; _i187 <= segments; _i187++) {\n          var u = _i187 / segments;\n          tangents[_i187] = this.getTangentAt(u, new Vector3());\n        } // select an initial normal vector perpendicular to the first tangent vector,\n        // and in the direction of the minimum tangent xyz component\n\n\n        normals[0] = new Vector3();\n        binormals[0] = new Vector3();\n        var min = Number.MAX_VALUE;\n        var tx = Math.abs(tangents[0].x);\n        var ty = Math.abs(tangents[0].y);\n        var tz = Math.abs(tangents[0].z);\n\n        if (tx <= min) {\n          min = tx;\n          normal.set(1, 0, 0);\n        }\n\n        if (ty <= min) {\n          min = ty;\n          normal.set(0, 1, 0);\n        }\n\n        if (tz <= min) {\n          normal.set(0, 0, 1);\n        }\n\n        vec.crossVectors(tangents[0], normal).normalize();\n        normals[0].crossVectors(tangents[0], vec);\n        binormals[0].crossVectors(tangents[0], normals[0]); // compute the slowly-varying normal and binormal vectors for each segment on the curve\n\n        for (var _i188 = 1; _i188 <= segments; _i188++) {\n          normals[_i188] = normals[_i188 - 1].clone();\n          binormals[_i188] = binormals[_i188 - 1].clone();\n          vec.crossVectors(tangents[_i188 - 1], tangents[_i188]);\n\n          if (vec.length() > Number.EPSILON) {\n            vec.normalize();\n            var theta = Math.acos(clamp(tangents[_i188 - 1].dot(tangents[_i188]), -1, 1)); // clamp for floating pt errors\n\n            normals[_i188].applyMatrix4(mat.makeRotationAxis(vec, theta));\n          }\n\n          binormals[_i188].crossVectors(tangents[_i188], normals[_i188]);\n        } // if the curve is closed, postprocess the vectors so the first and last normal vectors are the same\n\n\n        if (closed === true) {\n          var _theta = Math.acos(clamp(normals[0].dot(normals[segments]), -1, 1));\n\n          _theta /= segments;\n\n          if (tangents[0].dot(vec.crossVectors(normals[0], normals[segments])) > 0) {\n            _theta = -_theta;\n          }\n\n          for (var _i189 = 1; _i189 <= segments; _i189++) {\n            // twist a little...\n            normals[_i189].applyMatrix4(mat.makeRotationAxis(tangents[_i189], _theta * _i189));\n\n            binormals[_i189].crossVectors(tangents[_i189], normals[_i189]);\n          }\n        }\n\n        return {\n          tangents: tangents,\n          normals: normals,\n          binormals: binormals\n        };\n      }\n    }, {\n      key: \"clone\",\n      value: function clone() {\n        return new this.constructor().copy(this);\n      }\n    }, {\n      key: \"copy\",\n      value: function copy(source) {\n        this.arcLengthDivisions = source.arcLengthDivisions;\n        return this;\n      }\n    }, {\n      key: \"toJSON\",\n      value: function toJSON() {\n        var data = {\n          metadata: {\n            version: 4.5,\n            type: 'Curve',\n            generator: 'Curve.toJSON'\n          }\n        };\n        data.arcLengthDivisions = this.arcLengthDivisions;\n        data.type = this.type;\n        return data;\n      }\n    }, {\n      key: \"fromJSON\",\n      value: function fromJSON(json) {\n        this.arcLengthDivisions = json.arcLengthDivisions;\n        return this;\n      }\n    }]);\n\n    return Curve;\n  }();\n\n  var EllipseCurve = /*#__PURE__*/function (_Curve) {\n    _inherits(EllipseCurve, _Curve);\n\n    var _super63 = _createSuper(EllipseCurve);\n\n    function EllipseCurve() {\n      var _this53;\n\n      var aX = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n      var aY = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n      var xRadius = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n      var yRadius = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 1;\n      var aStartAngle = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 0;\n      var aEndAngle = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : Math.PI * 2;\n      var aClockwise = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : false;\n      var aRotation = arguments.length > 7 && arguments[7] !== undefined ? arguments[7] : 0;\n\n      _classCallCheck(this, EllipseCurve);\n\n      _this53 = _super63.call(this);\n      _this53.type = 'EllipseCurve';\n      _this53.aX = aX;\n      _this53.aY = aY;\n      _this53.xRadius = xRadius;\n      _this53.yRadius = yRadius;\n      _this53.aStartAngle = aStartAngle;\n      _this53.aEndAngle = aEndAngle;\n      _this53.aClockwise = aClockwise;\n      _this53.aRotation = aRotation;\n      return _this53;\n    }\n\n    _createClass(EllipseCurve, [{\n      key: \"getPoint\",\n      value: function getPoint(t, optionalTarget) {\n        var point = optionalTarget || new Vector2();\n        var twoPi = Math.PI * 2;\n        var deltaAngle = this.aEndAngle - this.aStartAngle;\n        var samePoints = Math.abs(deltaAngle) < Number.EPSILON; // ensures that deltaAngle is 0 .. 2 PI\n\n        while (deltaAngle < 0) {\n          deltaAngle += twoPi;\n        }\n\n        while (deltaAngle > twoPi) {\n          deltaAngle -= twoPi;\n        }\n\n        if (deltaAngle < Number.EPSILON) {\n          if (samePoints) {\n            deltaAngle = 0;\n          } else {\n            deltaAngle = twoPi;\n          }\n        }\n\n        if (this.aClockwise === true && !samePoints) {\n          if (deltaAngle === twoPi) {\n            deltaAngle = -twoPi;\n          } else {\n            deltaAngle = deltaAngle - twoPi;\n          }\n        }\n\n        var angle = this.aStartAngle + t * deltaAngle;\n        var x = this.aX + this.xRadius * Math.cos(angle);\n        var y = this.aY + this.yRadius * Math.sin(angle);\n\n        if (this.aRotation !== 0) {\n          var cos = Math.cos(this.aRotation);\n          var sin = Math.sin(this.aRotation);\n          var tx = x - this.aX;\n          var ty = y - this.aY; // Rotate the point about the center of the ellipse.\n\n          x = tx * cos - ty * sin + this.aX;\n          y = tx * sin + ty * cos + this.aY;\n        }\n\n        return point.set(x, y);\n      }\n    }, {\n      key: \"copy\",\n      value: function copy(source) {\n        _get(_getPrototypeOf(EllipseCurve.prototype), \"copy\", this).call(this, source);\n\n        this.aX = source.aX;\n        this.aY = source.aY;\n        this.xRadius = source.xRadius;\n        this.yRadius = source.yRadius;\n        this.aStartAngle = source.aStartAngle;\n        this.aEndAngle = source.aEndAngle;\n        this.aClockwise = source.aClockwise;\n        this.aRotation = source.aRotation;\n        return this;\n      }\n    }, {\n      key: \"toJSON\",\n      value: function toJSON() {\n        var data = _get(_getPrototypeOf(EllipseCurve.prototype), \"toJSON\", this).call(this);\n\n        data.aX = this.aX;\n        data.aY = this.aY;\n        data.xRadius = this.xRadius;\n        data.yRadius = this.yRadius;\n        data.aStartAngle = this.aStartAngle;\n        data.aEndAngle = this.aEndAngle;\n        data.aClockwise = this.aClockwise;\n        data.aRotation = this.aRotation;\n        return data;\n      }\n    }, {\n      key: \"fromJSON\",\n      value: function fromJSON(json) {\n        _get(_getPrototypeOf(EllipseCurve.prototype), \"fromJSON\", this).call(this, json);\n\n        this.aX = json.aX;\n        this.aY = json.aY;\n        this.xRadius = json.xRadius;\n        this.yRadius = json.yRadius;\n        this.aStartAngle = json.aStartAngle;\n        this.aEndAngle = json.aEndAngle;\n        this.aClockwise = json.aClockwise;\n        this.aRotation = json.aRotation;\n        return this;\n      }\n    }]);\n\n    return EllipseCurve;\n  }(Curve);\n\n  EllipseCurve.prototype.isEllipseCurve = true;\n\n  var ArcCurve = /*#__PURE__*/function (_EllipseCurve) {\n    _inherits(ArcCurve, _EllipseCurve);\n\n    var _super64 = _createSuper(ArcCurve);\n\n    function ArcCurve(aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise) {\n      var _this54;\n\n      _classCallCheck(this, ArcCurve);\n\n      _this54 = _super64.call(this, aX, aY, aRadius, aRadius, aStartAngle, aEndAngle, aClockwise);\n      _this54.type = 'ArcCurve';\n      return _this54;\n    }\n\n    return ArcCurve;\n  }(EllipseCurve);\n\n  ArcCurve.prototype.isArcCurve = true;\n  /**\n   * Centripetal CatmullRom Curve - which is useful for avoiding\n   * cusps and self-intersections in non-uniform catmull rom curves.\n   * http://www.cemyuksel.com/research/catmullrom_param/catmullrom.pdf\n   *\n   * curve.type accepts centripetal(default), chordal and catmullrom\n   * curve.tension is used for catmullrom which defaults to 0.5\n   */\n\n  /*\n  Based on an optimized c++ solution in\n   - http://stackoverflow.com/questions/9489736/catmull-rom-curve-with-no-cusps-and-no-self-intersections/\n   - http://ideone.com/NoEbVM\n  \tThis CubicPoly class could be used for reusing some variables and calculations,\n  but for three.js curve use, it could be possible inlined and flatten into a single function call\n  which can be placed in CurveUtils.\n  */\n\n  function CubicPoly() {\n    var c0 = 0,\n        c1 = 0,\n        c2 = 0,\n        c3 = 0;\n    /*\n     * Compute coefficients for a cubic polynomial\n     *\t p(s) = c0 + c1*s + c2*s^2 + c3*s^3\n     * such that\n     *\t p(0) = x0, p(1) = x1\n     *\tand\n     *\t p'(0) = t0, p'(1) = t1.\n     */\n\n    function init(x0, x1, t0, t1) {\n      c0 = x0;\n      c1 = t0;\n      c2 = -3 * x0 + 3 * x1 - 2 * t0 - t1;\n      c3 = 2 * x0 - 2 * x1 + t0 + t1;\n    }\n\n    return {\n      initCatmullRom: function initCatmullRom(x0, x1, x2, x3, tension) {\n        init(x1, x2, tension * (x2 - x0), tension * (x3 - x1));\n      },\n      initNonuniformCatmullRom: function initNonuniformCatmullRom(x0, x1, x2, x3, dt0, dt1, dt2) {\n        // compute tangents when parameterized in [t1,t2]\n        var t1 = (x1 - x0) / dt0 - (x2 - x0) / (dt0 + dt1) + (x2 - x1) / dt1;\n        var t2 = (x2 - x1) / dt1 - (x3 - x1) / (dt1 + dt2) + (x3 - x2) / dt2; // rescale tangents for parametrization in [0,1]\n\n        t1 *= dt1;\n        t2 *= dt1;\n        init(x1, x2, t1, t2);\n      },\n      calc: function calc(t) {\n        var t2 = t * t;\n        var t3 = t2 * t;\n        return c0 + c1 * t + c2 * t2 + c3 * t3;\n      }\n    };\n  } //\n\n\n  var tmp = new Vector3();\n  var px = new CubicPoly(),\n      py = new CubicPoly(),\n      pz = new CubicPoly();\n\n  var CatmullRomCurve3 = /*#__PURE__*/function (_Curve2) {\n    _inherits(CatmullRomCurve3, _Curve2);\n\n    var _super65 = _createSuper(CatmullRomCurve3);\n\n    function CatmullRomCurve3() {\n      var _this55;\n\n      var points = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n      var closed = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n      var curveType = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'centripetal';\n      var tension = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0.5;\n\n      _classCallCheck(this, CatmullRomCurve3);\n\n      _this55 = _super65.call(this);\n      _this55.type = 'CatmullRomCurve3';\n      _this55.points = points;\n      _this55.closed = closed;\n      _this55.curveType = curveType;\n      _this55.tension = tension;\n      return _this55;\n    }\n\n    _createClass(CatmullRomCurve3, [{\n      key: \"getPoint\",\n      value: function getPoint(t) {\n        var optionalTarget = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : new Vector3();\n        var point = optionalTarget;\n        var points = this.points;\n        var l = points.length;\n        var p = (l - (this.closed ? 0 : 1)) * t;\n        var intPoint = Math.floor(p);\n        var weight = p - intPoint;\n\n        if (this.closed) {\n          intPoint += intPoint > 0 ? 0 : (Math.floor(Math.abs(intPoint) / l) + 1) * l;\n        } else if (weight === 0 && intPoint === l - 1) {\n          intPoint = l - 2;\n          weight = 1;\n        }\n\n        var p0, p3; // 4 points (p1 & p2 defined below)\n\n        if (this.closed || intPoint > 0) {\n          p0 = points[(intPoint - 1) % l];\n        } else {\n          // extrapolate first point\n          tmp.subVectors(points[0], points[1]).add(points[0]);\n          p0 = tmp;\n        }\n\n        var p1 = points[intPoint % l];\n        var p2 = points[(intPoint + 1) % l];\n\n        if (this.closed || intPoint + 2 < l) {\n          p3 = points[(intPoint + 2) % l];\n        } else {\n          // extrapolate last point\n          tmp.subVectors(points[l - 1], points[l - 2]).add(points[l - 1]);\n          p3 = tmp;\n        }\n\n        if (this.curveType === 'centripetal' || this.curveType === 'chordal') {\n          // init Centripetal / Chordal Catmull-Rom\n          var pow = this.curveType === 'chordal' ? 0.5 : 0.25;\n          var dt0 = Math.pow(p0.distanceToSquared(p1), pow);\n          var dt1 = Math.pow(p1.distanceToSquared(p2), pow);\n          var dt2 = Math.pow(p2.distanceToSquared(p3), pow); // safety check for repeated points\n\n          if (dt1 < 1e-4) dt1 = 1.0;\n          if (dt0 < 1e-4) dt0 = dt1;\n          if (dt2 < 1e-4) dt2 = dt1;\n          px.initNonuniformCatmullRom(p0.x, p1.x, p2.x, p3.x, dt0, dt1, dt2);\n          py.initNonuniformCatmullRom(p0.y, p1.y, p2.y, p3.y, dt0, dt1, dt2);\n          pz.initNonuniformCatmullRom(p0.z, p1.z, p2.z, p3.z, dt0, dt1, dt2);\n        } else if (this.curveType === 'catmullrom') {\n          px.initCatmullRom(p0.x, p1.x, p2.x, p3.x, this.tension);\n          py.initCatmullRom(p0.y, p1.y, p2.y, p3.y, this.tension);\n          pz.initCatmullRom(p0.z, p1.z, p2.z, p3.z, this.tension);\n        }\n\n        point.set(px.calc(weight), py.calc(weight), pz.calc(weight));\n        return point;\n      }\n    }, {\n      key: \"copy\",\n      value: function copy(source) {\n        _get(_getPrototypeOf(CatmullRomCurve3.prototype), \"copy\", this).call(this, source);\n\n        this.points = [];\n\n        for (var _i190 = 0, l = source.points.length; _i190 < l; _i190++) {\n          var point = source.points[_i190];\n          this.points.push(point.clone());\n        }\n\n        this.closed = source.closed;\n        this.curveType = source.curveType;\n        this.tension = source.tension;\n        return this;\n      }\n    }, {\n      key: \"toJSON\",\n      value: function toJSON() {\n        var data = _get(_getPrototypeOf(CatmullRomCurve3.prototype), \"toJSON\", this).call(this);\n\n        data.points = [];\n\n        for (var _i191 = 0, l = this.points.length; _i191 < l; _i191++) {\n          var point = this.points[_i191];\n          data.points.push(point.toArray());\n        }\n\n        data.closed = this.closed;\n        data.curveType = this.curveType;\n        data.tension = this.tension;\n        return data;\n      }\n    }, {\n      key: \"fromJSON\",\n      value: function fromJSON(json) {\n        _get(_getPrototypeOf(CatmullRomCurve3.prototype), \"fromJSON\", this).call(this, json);\n\n        this.points = [];\n\n        for (var _i192 = 0, l = json.points.length; _i192 < l; _i192++) {\n          var point = json.points[_i192];\n          this.points.push(new Vector3().fromArray(point));\n        }\n\n        this.closed = json.closed;\n        this.curveType = json.curveType;\n        this.tension = json.tension;\n        return this;\n      }\n    }]);\n\n    return CatmullRomCurve3;\n  }(Curve);\n\n  CatmullRomCurve3.prototype.isCatmullRomCurve3 = true;\n  /**\n   * Bezier Curves formulas obtained from\n   * http://en.wikipedia.org/wiki/Bézier_curve\n   */\n\n  function CatmullRom(t, p0, p1, p2, p3) {\n    var v0 = (p2 - p0) * 0.5;\n    var v1 = (p3 - p1) * 0.5;\n    var t2 = t * t;\n    var t3 = t * t2;\n    return (2 * p1 - 2 * p2 + v0 + v1) * t3 + (-3 * p1 + 3 * p2 - 2 * v0 - v1) * t2 + v0 * t + p1;\n  } //\n\n\n  function QuadraticBezierP0(t, p) {\n    var k = 1 - t;\n    return k * k * p;\n  }\n\n  function QuadraticBezierP1(t, p) {\n    return 2 * (1 - t) * t * p;\n  }\n\n  function QuadraticBezierP2(t, p) {\n    return t * t * p;\n  }\n\n  function QuadraticBezier(t, p0, p1, p2) {\n    return QuadraticBezierP0(t, p0) + QuadraticBezierP1(t, p1) + QuadraticBezierP2(t, p2);\n  } //\n\n\n  function CubicBezierP0(t, p) {\n    var k = 1 - t;\n    return k * k * k * p;\n  }\n\n  function CubicBezierP1(t, p) {\n    var k = 1 - t;\n    return 3 * k * k * t * p;\n  }\n\n  function CubicBezierP2(t, p) {\n    return 3 * (1 - t) * t * t * p;\n  }\n\n  function CubicBezierP3(t, p) {\n    return t * t * t * p;\n  }\n\n  function CubicBezier(t, p0, p1, p2, p3) {\n    return CubicBezierP0(t, p0) + CubicBezierP1(t, p1) + CubicBezierP2(t, p2) + CubicBezierP3(t, p3);\n  }\n\n  var CubicBezierCurve = /*#__PURE__*/function (_Curve3) {\n    _inherits(CubicBezierCurve, _Curve3);\n\n    var _super66 = _createSuper(CubicBezierCurve);\n\n    function CubicBezierCurve() {\n      var _this56;\n\n      var v0 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : new Vector2();\n      var v1 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : new Vector2();\n      var v2 = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : new Vector2();\n      var v3 = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : new Vector2();\n\n      _classCallCheck(this, CubicBezierCurve);\n\n      _this56 = _super66.call(this);\n      _this56.type = 'CubicBezierCurve';\n      _this56.v0 = v0;\n      _this56.v1 = v1;\n      _this56.v2 = v2;\n      _this56.v3 = v3;\n      return _this56;\n    }\n\n    _createClass(CubicBezierCurve, [{\n      key: \"getPoint\",\n      value: function getPoint(t) {\n        var optionalTarget = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : new Vector2();\n        var point = optionalTarget;\n        var v0 = this.v0,\n            v1 = this.v1,\n            v2 = this.v2,\n            v3 = this.v3;\n        point.set(CubicBezier(t, v0.x, v1.x, v2.x, v3.x), CubicBezier(t, v0.y, v1.y, v2.y, v3.y));\n        return point;\n      }\n    }, {\n      key: \"copy\",\n      value: function copy(source) {\n        _get(_getPrototypeOf(CubicBezierCurve.prototype), \"copy\", this).call(this, source);\n\n        this.v0.copy(source.v0);\n        this.v1.copy(source.v1);\n        this.v2.copy(source.v2);\n        this.v3.copy(source.v3);\n        return this;\n      }\n    }, {\n      key: \"toJSON\",\n      value: function toJSON() {\n        var data = _get(_getPrototypeOf(CubicBezierCurve.prototype), \"toJSON\", this).call(this);\n\n        data.v0 = this.v0.toArray();\n        data.v1 = this.v1.toArray();\n        data.v2 = this.v2.toArray();\n        data.v3 = this.v3.toArray();\n        return data;\n      }\n    }, {\n      key: \"fromJSON\",\n      value: function fromJSON(json) {\n        _get(_getPrototypeOf(CubicBezierCurve.prototype), \"fromJSON\", this).call(this, json);\n\n        this.v0.fromArray(json.v0);\n        this.v1.fromArray(json.v1);\n        this.v2.fromArray(json.v2);\n        this.v3.fromArray(json.v3);\n        return this;\n      }\n    }]);\n\n    return CubicBezierCurve;\n  }(Curve);\n\n  CubicBezierCurve.prototype.isCubicBezierCurve = true;\n\n  var CubicBezierCurve3 = /*#__PURE__*/function (_Curve4) {\n    _inherits(CubicBezierCurve3, _Curve4);\n\n    var _super67 = _createSuper(CubicBezierCurve3);\n\n    function CubicBezierCurve3() {\n      var _this57;\n\n      var v0 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : new Vector3();\n      var v1 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : new Vector3();\n      var v2 = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : new Vector3();\n      var v3 = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : new Vector3();\n\n      _classCallCheck(this, CubicBezierCurve3);\n\n      _this57 = _super67.call(this);\n      _this57.type = 'CubicBezierCurve3';\n      _this57.v0 = v0;\n      _this57.v1 = v1;\n      _this57.v2 = v2;\n      _this57.v3 = v3;\n      return _this57;\n    }\n\n    _createClass(CubicBezierCurve3, [{\n      key: \"getPoint\",\n      value: function getPoint(t) {\n        var optionalTarget = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : new Vector3();\n        var point = optionalTarget;\n        var v0 = this.v0,\n            v1 = this.v1,\n            v2 = this.v2,\n            v3 = this.v3;\n        point.set(CubicBezier(t, v0.x, v1.x, v2.x, v3.x), CubicBezier(t, v0.y, v1.y, v2.y, v3.y), CubicBezier(t, v0.z, v1.z, v2.z, v3.z));\n        return point;\n      }\n    }, {\n      key: \"copy\",\n      value: function copy(source) {\n        _get(_getPrototypeOf(CubicBezierCurve3.prototype), \"copy\", this).call(this, source);\n\n        this.v0.copy(source.v0);\n        this.v1.copy(source.v1);\n        this.v2.copy(source.v2);\n        this.v3.copy(source.v3);\n        return this;\n      }\n    }, {\n      key: \"toJSON\",\n      value: function toJSON() {\n        var data = _get(_getPrototypeOf(CubicBezierCurve3.prototype), \"toJSON\", this).call(this);\n\n        data.v0 = this.v0.toArray();\n        data.v1 = this.v1.toArray();\n        data.v2 = this.v2.toArray();\n        data.v3 = this.v3.toArray();\n        return data;\n      }\n    }, {\n      key: \"fromJSON\",\n      value: function fromJSON(json) {\n        _get(_getPrototypeOf(CubicBezierCurve3.prototype), \"fromJSON\", this).call(this, json);\n\n        this.v0.fromArray(json.v0);\n        this.v1.fromArray(json.v1);\n        this.v2.fromArray(json.v2);\n        this.v3.fromArray(json.v3);\n        return this;\n      }\n    }]);\n\n    return CubicBezierCurve3;\n  }(Curve);\n\n  CubicBezierCurve3.prototype.isCubicBezierCurve3 = true;\n\n  var LineCurve = /*#__PURE__*/function (_Curve5) {\n    _inherits(LineCurve, _Curve5);\n\n    var _super68 = _createSuper(LineCurve);\n\n    function LineCurve() {\n      var _this58;\n\n      var v1 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : new Vector2();\n      var v2 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : new Vector2();\n\n      _classCallCheck(this, LineCurve);\n\n      _this58 = _super68.call(this);\n      _this58.type = 'LineCurve';\n      _this58.v1 = v1;\n      _this58.v2 = v2;\n      return _this58;\n    }\n\n    _createClass(LineCurve, [{\n      key: \"getPoint\",\n      value: function getPoint(t) {\n        var optionalTarget = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : new Vector2();\n        var point = optionalTarget;\n\n        if (t === 1) {\n          point.copy(this.v2);\n        } else {\n          point.copy(this.v2).sub(this.v1);\n          point.multiplyScalar(t).add(this.v1);\n        }\n\n        return point;\n      } // Line curve is linear, so we can overwrite default getPointAt\n\n    }, {\n      key: \"getPointAt\",\n      value: function getPointAt(u, optionalTarget) {\n        return this.getPoint(u, optionalTarget);\n      }\n    }, {\n      key: \"getTangent\",\n      value: function getTangent(t, optionalTarget) {\n        var tangent = optionalTarget || new Vector2();\n        tangent.copy(this.v2).sub(this.v1).normalize();\n        return tangent;\n      }\n    }, {\n      key: \"copy\",\n      value: function copy(source) {\n        _get(_getPrototypeOf(LineCurve.prototype), \"copy\", this).call(this, source);\n\n        this.v1.copy(source.v1);\n        this.v2.copy(source.v2);\n        return this;\n      }\n    }, {\n      key: \"toJSON\",\n      value: function toJSON() {\n        var data = _get(_getPrototypeOf(LineCurve.prototype), \"toJSON\", this).call(this);\n\n        data.v1 = this.v1.toArray();\n        data.v2 = this.v2.toArray();\n        return data;\n      }\n    }, {\n      key: \"fromJSON\",\n      value: function fromJSON(json) {\n        _get(_getPrototypeOf(LineCurve.prototype), \"fromJSON\", this).call(this, json);\n\n        this.v1.fromArray(json.v1);\n        this.v2.fromArray(json.v2);\n        return this;\n      }\n    }]);\n\n    return LineCurve;\n  }(Curve);\n\n  LineCurve.prototype.isLineCurve = true;\n\n  var LineCurve3 = /*#__PURE__*/function (_Curve6) {\n    _inherits(LineCurve3, _Curve6);\n\n    var _super69 = _createSuper(LineCurve3);\n\n    function LineCurve3() {\n      var _this59;\n\n      var v1 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : new Vector3();\n      var v2 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : new Vector3();\n\n      _classCallCheck(this, LineCurve3);\n\n      _this59 = _super69.call(this);\n      _this59.type = 'LineCurve3';\n      _this59.isLineCurve3 = true;\n      _this59.v1 = v1;\n      _this59.v2 = v2;\n      return _this59;\n    }\n\n    _createClass(LineCurve3, [{\n      key: \"getPoint\",\n      value: function getPoint(t) {\n        var optionalTarget = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : new Vector3();\n        var point = optionalTarget;\n\n        if (t === 1) {\n          point.copy(this.v2);\n        } else {\n          point.copy(this.v2).sub(this.v1);\n          point.multiplyScalar(t).add(this.v1);\n        }\n\n        return point;\n      } // Line curve is linear, so we can overwrite default getPointAt\n\n    }, {\n      key: \"getPointAt\",\n      value: function getPointAt(u, optionalTarget) {\n        return this.getPoint(u, optionalTarget);\n      }\n    }, {\n      key: \"copy\",\n      value: function copy(source) {\n        _get(_getPrototypeOf(LineCurve3.prototype), \"copy\", this).call(this, source);\n\n        this.v1.copy(source.v1);\n        this.v2.copy(source.v2);\n        return this;\n      }\n    }, {\n      key: \"toJSON\",\n      value: function toJSON() {\n        var data = _get(_getPrototypeOf(LineCurve3.prototype), \"toJSON\", this).call(this);\n\n        data.v1 = this.v1.toArray();\n        data.v2 = this.v2.toArray();\n        return data;\n      }\n    }, {\n      key: \"fromJSON\",\n      value: function fromJSON(json) {\n        _get(_getPrototypeOf(LineCurve3.prototype), \"fromJSON\", this).call(this, json);\n\n        this.v1.fromArray(json.v1);\n        this.v2.fromArray(json.v2);\n        return this;\n      }\n    }]);\n\n    return LineCurve3;\n  }(Curve);\n\n  var QuadraticBezierCurve = /*#__PURE__*/function (_Curve7) {\n    _inherits(QuadraticBezierCurve, _Curve7);\n\n    var _super70 = _createSuper(QuadraticBezierCurve);\n\n    function QuadraticBezierCurve() {\n      var _this60;\n\n      var v0 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : new Vector2();\n      var v1 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : new Vector2();\n      var v2 = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : new Vector2();\n\n      _classCallCheck(this, QuadraticBezierCurve);\n\n      _this60 = _super70.call(this);\n      _this60.type = 'QuadraticBezierCurve';\n      _this60.v0 = v0;\n      _this60.v1 = v1;\n      _this60.v2 = v2;\n      return _this60;\n    }\n\n    _createClass(QuadraticBezierCurve, [{\n      key: \"getPoint\",\n      value: function getPoint(t) {\n        var optionalTarget = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : new Vector2();\n        var point = optionalTarget;\n        var v0 = this.v0,\n            v1 = this.v1,\n            v2 = this.v2;\n        point.set(QuadraticBezier(t, v0.x, v1.x, v2.x), QuadraticBezier(t, v0.y, v1.y, v2.y));\n        return point;\n      }\n    }, {\n      key: \"copy\",\n      value: function copy(source) {\n        _get(_getPrototypeOf(QuadraticBezierCurve.prototype), \"copy\", this).call(this, source);\n\n        this.v0.copy(source.v0);\n        this.v1.copy(source.v1);\n        this.v2.copy(source.v2);\n        return this;\n      }\n    }, {\n      key: \"toJSON\",\n      value: function toJSON() {\n        var data = _get(_getPrototypeOf(QuadraticBezierCurve.prototype), \"toJSON\", this).call(this);\n\n        data.v0 = this.v0.toArray();\n        data.v1 = this.v1.toArray();\n        data.v2 = this.v2.toArray();\n        return data;\n      }\n    }, {\n      key: \"fromJSON\",\n      value: function fromJSON(json) {\n        _get(_getPrototypeOf(QuadraticBezierCurve.prototype), \"fromJSON\", this).call(this, json);\n\n        this.v0.fromArray(json.v0);\n        this.v1.fromArray(json.v1);\n        this.v2.fromArray(json.v2);\n        return this;\n      }\n    }]);\n\n    return QuadraticBezierCurve;\n  }(Curve);\n\n  QuadraticBezierCurve.prototype.isQuadraticBezierCurve = true;\n\n  var QuadraticBezierCurve3 = /*#__PURE__*/function (_Curve8) {\n    _inherits(QuadraticBezierCurve3, _Curve8);\n\n    var _super71 = _createSuper(QuadraticBezierCurve3);\n\n    function QuadraticBezierCurve3() {\n      var _this61;\n\n      var v0 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : new Vector3();\n      var v1 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : new Vector3();\n      var v2 = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : new Vector3();\n\n      _classCallCheck(this, QuadraticBezierCurve3);\n\n      _this61 = _super71.call(this);\n      _this61.type = 'QuadraticBezierCurve3';\n      _this61.v0 = v0;\n      _this61.v1 = v1;\n      _this61.v2 = v2;\n      return _this61;\n    }\n\n    _createClass(QuadraticBezierCurve3, [{\n      key: \"getPoint\",\n      value: function getPoint(t) {\n        var optionalTarget = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : new Vector3();\n        var point = optionalTarget;\n        var v0 = this.v0,\n            v1 = this.v1,\n            v2 = this.v2;\n        point.set(QuadraticBezier(t, v0.x, v1.x, v2.x), QuadraticBezier(t, v0.y, v1.y, v2.y), QuadraticBezier(t, v0.z, v1.z, v2.z));\n        return point;\n      }\n    }, {\n      key: \"copy\",\n      value: function copy(source) {\n        _get(_getPrototypeOf(QuadraticBezierCurve3.prototype), \"copy\", this).call(this, source);\n\n        this.v0.copy(source.v0);\n        this.v1.copy(source.v1);\n        this.v2.copy(source.v2);\n        return this;\n      }\n    }, {\n      key: \"toJSON\",\n      value: function toJSON() {\n        var data = _get(_getPrototypeOf(QuadraticBezierCurve3.prototype), \"toJSON\", this).call(this);\n\n        data.v0 = this.v0.toArray();\n        data.v1 = this.v1.toArray();\n        data.v2 = this.v2.toArray();\n        return data;\n      }\n    }, {\n      key: \"fromJSON\",\n      value: function fromJSON(json) {\n        _get(_getPrototypeOf(QuadraticBezierCurve3.prototype), \"fromJSON\", this).call(this, json);\n\n        this.v0.fromArray(json.v0);\n        this.v1.fromArray(json.v1);\n        this.v2.fromArray(json.v2);\n        return this;\n      }\n    }]);\n\n    return QuadraticBezierCurve3;\n  }(Curve);\n\n  QuadraticBezierCurve3.prototype.isQuadraticBezierCurve3 = true;\n\n  var SplineCurve = /*#__PURE__*/function (_Curve9) {\n    _inherits(SplineCurve, _Curve9);\n\n    var _super72 = _createSuper(SplineCurve);\n\n    function SplineCurve() {\n      var _this62;\n\n      var points = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n\n      _classCallCheck(this, SplineCurve);\n\n      _this62 = _super72.call(this);\n      _this62.type = 'SplineCurve';\n      _this62.points = points;\n      return _this62;\n    }\n\n    _createClass(SplineCurve, [{\n      key: \"getPoint\",\n      value: function getPoint(t) {\n        var optionalTarget = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : new Vector2();\n        var point = optionalTarget;\n        var points = this.points;\n        var p = (points.length - 1) * t;\n        var intPoint = Math.floor(p);\n        var weight = p - intPoint;\n        var p0 = points[intPoint === 0 ? intPoint : intPoint - 1];\n        var p1 = points[intPoint];\n        var p2 = points[intPoint > points.length - 2 ? points.length - 1 : intPoint + 1];\n        var p3 = points[intPoint > points.length - 3 ? points.length - 1 : intPoint + 2];\n        point.set(CatmullRom(weight, p0.x, p1.x, p2.x, p3.x), CatmullRom(weight, p0.y, p1.y, p2.y, p3.y));\n        return point;\n      }\n    }, {\n      key: \"copy\",\n      value: function copy(source) {\n        _get(_getPrototypeOf(SplineCurve.prototype), \"copy\", this).call(this, source);\n\n        this.points = [];\n\n        for (var _i193 = 0, l = source.points.length; _i193 < l; _i193++) {\n          var point = source.points[_i193];\n          this.points.push(point.clone());\n        }\n\n        return this;\n      }\n    }, {\n      key: \"toJSON\",\n      value: function toJSON() {\n        var data = _get(_getPrototypeOf(SplineCurve.prototype), \"toJSON\", this).call(this);\n\n        data.points = [];\n\n        for (var _i194 = 0, l = this.points.length; _i194 < l; _i194++) {\n          var point = this.points[_i194];\n          data.points.push(point.toArray());\n        }\n\n        return data;\n      }\n    }, {\n      key: \"fromJSON\",\n      value: function fromJSON(json) {\n        _get(_getPrototypeOf(SplineCurve.prototype), \"fromJSON\", this).call(this, json);\n\n        this.points = [];\n\n        for (var _i195 = 0, l = json.points.length; _i195 < l; _i195++) {\n          var point = json.points[_i195];\n          this.points.push(new Vector2().fromArray(point));\n        }\n\n        return this;\n      }\n    }]);\n\n    return SplineCurve;\n  }(Curve);\n\n  SplineCurve.prototype.isSplineCurve = true;\n  var Curves = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    ArcCurve: ArcCurve,\n    CatmullRomCurve3: CatmullRomCurve3,\n    CubicBezierCurve: CubicBezierCurve,\n    CubicBezierCurve3: CubicBezierCurve3,\n    EllipseCurve: EllipseCurve,\n    LineCurve: LineCurve,\n    LineCurve3: LineCurve3,\n    QuadraticBezierCurve: QuadraticBezierCurve,\n    QuadraticBezierCurve3: QuadraticBezierCurve3,\n    SplineCurve: SplineCurve\n  });\n  /**************************************************************\n   *\tCurved Path - a curve path is simply a array of connected\n   *\tcurves, but retains the api of a curve\n   **************************************************************/\n\n  var CurvePath = /*#__PURE__*/function (_Curve10) {\n    _inherits(CurvePath, _Curve10);\n\n    var _super73 = _createSuper(CurvePath);\n\n    function CurvePath() {\n      var _this63;\n\n      _classCallCheck(this, CurvePath);\n\n      _this63 = _super73.call(this);\n      _this63.type = 'CurvePath';\n      _this63.curves = [];\n      _this63.autoClose = false; // Automatically closes the path\n\n      return _this63;\n    }\n\n    _createClass(CurvePath, [{\n      key: \"add\",\n      value: function add(curve) {\n        this.curves.push(curve);\n      }\n    }, {\n      key: \"closePath\",\n      value: function closePath() {\n        // Add a line curve if start and end of lines are not connected\n        var startPoint = this.curves[0].getPoint(0);\n        var endPoint = this.curves[this.curves.length - 1].getPoint(1);\n\n        if (!startPoint.equals(endPoint)) {\n          this.curves.push(new LineCurve(endPoint, startPoint));\n        }\n      } // To get accurate point with reference to\n      // entire path distance at time t,\n      // following has to be done:\n      // 1. Length of each sub path have to be known\n      // 2. Locate and identify type of curve\n      // 3. Get t for the curve\n      // 4. Return curve.getPointAt(t')\n\n    }, {\n      key: \"getPoint\",\n      value: function getPoint(t, optionalTarget) {\n        var d = t * this.getLength();\n        var curveLengths = this.getCurveLengths();\n        var i = 0; // To think about boundaries points.\n\n        while (i < curveLengths.length) {\n          if (curveLengths[i] >= d) {\n            var diff = curveLengths[i] - d;\n            var curve = this.curves[i];\n            var segmentLength = curve.getLength();\n            var u = segmentLength === 0 ? 0 : 1 - diff / segmentLength;\n            return curve.getPointAt(u, optionalTarget);\n          }\n\n          i++;\n        }\n\n        return null; // loop where sum != 0, sum > d , sum+1 <d\n      } // We cannot use the default THREE.Curve getPoint() with getLength() because in\n      // THREE.Curve, getLength() depends on getPoint() but in THREE.CurvePath\n      // getPoint() depends on getLength\n\n    }, {\n      key: \"getLength\",\n      value: function getLength() {\n        var lens = this.getCurveLengths();\n        return lens[lens.length - 1];\n      } // cacheLengths must be recalculated.\n\n    }, {\n      key: \"updateArcLengths\",\n      value: function updateArcLengths() {\n        this.needsUpdate = true;\n        this.cacheLengths = null;\n        this.getCurveLengths();\n      } // Compute lengths and cache them\n      // We cannot overwrite getLengths() because UtoT mapping uses it.\n\n    }, {\n      key: \"getCurveLengths\",\n      value: function getCurveLengths() {\n        // We use cache values if curves and cache array are same length\n        if (this.cacheLengths && this.cacheLengths.length === this.curves.length) {\n          return this.cacheLengths;\n        } // Get length of sub-curve\n        // Push sums into cached array\n\n\n        var lengths = [];\n        var sums = 0;\n\n        for (var _i196 = 0, l = this.curves.length; _i196 < l; _i196++) {\n          sums += this.curves[_i196].getLength();\n          lengths.push(sums);\n        }\n\n        this.cacheLengths = lengths;\n        return lengths;\n      }\n    }, {\n      key: \"getSpacedPoints\",\n      value: function getSpacedPoints() {\n        var divisions = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 40;\n        var points = [];\n\n        for (var _i197 = 0; _i197 <= divisions; _i197++) {\n          points.push(this.getPoint(_i197 / divisions));\n        }\n\n        if (this.autoClose) {\n          points.push(points[0]);\n        }\n\n        return points;\n      }\n    }, {\n      key: \"getPoints\",\n      value: function getPoints() {\n        var divisions = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 12;\n        var points = [];\n        var last;\n\n        for (var _i198 = 0, curves = this.curves; _i198 < curves.length; _i198++) {\n          var curve = curves[_i198];\n          var resolution = curve && curve.isEllipseCurve ? divisions * 2 : curve && (curve.isLineCurve || curve.isLineCurve3) ? 1 : curve && curve.isSplineCurve ? divisions * curve.points.length : divisions;\n          var pts = curve.getPoints(resolution);\n\n          for (var j = 0; j < pts.length; j++) {\n            var point = pts[j];\n            if (last && last.equals(point)) continue; // ensures no consecutive points are duplicates\n\n            points.push(point);\n            last = point;\n          }\n        }\n\n        if (this.autoClose && points.length > 1 && !points[points.length - 1].equals(points[0])) {\n          points.push(points[0]);\n        }\n\n        return points;\n      }\n    }, {\n      key: \"copy\",\n      value: function copy(source) {\n        _get(_getPrototypeOf(CurvePath.prototype), \"copy\", this).call(this, source);\n\n        this.curves = [];\n\n        for (var _i199 = 0, l = source.curves.length; _i199 < l; _i199++) {\n          var curve = source.curves[_i199];\n          this.curves.push(curve.clone());\n        }\n\n        this.autoClose = source.autoClose;\n        return this;\n      }\n    }, {\n      key: \"toJSON\",\n      value: function toJSON() {\n        var data = _get(_getPrototypeOf(CurvePath.prototype), \"toJSON\", this).call(this);\n\n        data.autoClose = this.autoClose;\n        data.curves = [];\n\n        for (var _i200 = 0, l = this.curves.length; _i200 < l; _i200++) {\n          var curve = this.curves[_i200];\n          data.curves.push(curve.toJSON());\n        }\n\n        return data;\n      }\n    }, {\n      key: \"fromJSON\",\n      value: function fromJSON(json) {\n        _get(_getPrototypeOf(CurvePath.prototype), \"fromJSON\", this).call(this, json);\n\n        this.autoClose = json.autoClose;\n        this.curves = [];\n\n        for (var _i201 = 0, l = json.curves.length; _i201 < l; _i201++) {\n          var curve = json.curves[_i201];\n          this.curves.push(new Curves[curve.type]().fromJSON(curve));\n        }\n\n        return this;\n      }\n    }]);\n\n    return CurvePath;\n  }(Curve);\n\n  var Path = /*#__PURE__*/function (_CurvePath) {\n    _inherits(Path, _CurvePath);\n\n    var _super74 = _createSuper(Path);\n\n    function Path(points) {\n      var _this64;\n\n      _classCallCheck(this, Path);\n\n      _this64 = _super74.call(this);\n      _this64.type = 'Path';\n      _this64.currentPoint = new Vector2();\n\n      if (points) {\n        _this64.setFromPoints(points);\n      }\n\n      return _this64;\n    }\n\n    _createClass(Path, [{\n      key: \"setFromPoints\",\n      value: function setFromPoints(points) {\n        this.moveTo(points[0].x, points[0].y);\n\n        for (var _i202 = 1, l = points.length; _i202 < l; _i202++) {\n          this.lineTo(points[_i202].x, points[_i202].y);\n        }\n\n        return this;\n      }\n    }, {\n      key: \"moveTo\",\n      value: function moveTo(x, y) {\n        this.currentPoint.set(x, y); // TODO consider referencing vectors instead of copying?\n\n        return this;\n      }\n    }, {\n      key: \"lineTo\",\n      value: function lineTo(x, y) {\n        var curve = new LineCurve(this.currentPoint.clone(), new Vector2(x, y));\n        this.curves.push(curve);\n        this.currentPoint.set(x, y);\n        return this;\n      }\n    }, {\n      key: \"quadraticCurveTo\",\n      value: function quadraticCurveTo(aCPx, aCPy, aX, aY) {\n        var curve = new QuadraticBezierCurve(this.currentPoint.clone(), new Vector2(aCPx, aCPy), new Vector2(aX, aY));\n        this.curves.push(curve);\n        this.currentPoint.set(aX, aY);\n        return this;\n      }\n    }, {\n      key: \"bezierCurveTo\",\n      value: function bezierCurveTo(aCP1x, aCP1y, aCP2x, aCP2y, aX, aY) {\n        var curve = new CubicBezierCurve(this.currentPoint.clone(), new Vector2(aCP1x, aCP1y), new Vector2(aCP2x, aCP2y), new Vector2(aX, aY));\n        this.curves.push(curve);\n        this.currentPoint.set(aX, aY);\n        return this;\n      }\n    }, {\n      key: \"splineThru\",\n      value: function splineThru(pts\n      /*Array of Vector*/\n      ) {\n        var npts = [this.currentPoint.clone()].concat(pts);\n        var curve = new SplineCurve(npts);\n        this.curves.push(curve);\n        this.currentPoint.copy(pts[pts.length - 1]);\n        return this;\n      }\n    }, {\n      key: \"arc\",\n      value: function arc(aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise) {\n        var x0 = this.currentPoint.x;\n        var y0 = this.currentPoint.y;\n        this.absarc(aX + x0, aY + y0, aRadius, aStartAngle, aEndAngle, aClockwise);\n        return this;\n      }\n    }, {\n      key: \"absarc\",\n      value: function absarc(aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise) {\n        this.absellipse(aX, aY, aRadius, aRadius, aStartAngle, aEndAngle, aClockwise);\n        return this;\n      }\n    }, {\n      key: \"ellipse\",\n      value: function ellipse(aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation) {\n        var x0 = this.currentPoint.x;\n        var y0 = this.currentPoint.y;\n        this.absellipse(aX + x0, aY + y0, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation);\n        return this;\n      }\n    }, {\n      key: \"absellipse\",\n      value: function absellipse(aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation) {\n        var curve = new EllipseCurve(aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation);\n\n        if (this.curves.length > 0) {\n          // if a previous curve is present, attempt to join\n          var firstPoint = curve.getPoint(0);\n\n          if (!firstPoint.equals(this.currentPoint)) {\n            this.lineTo(firstPoint.x, firstPoint.y);\n          }\n        }\n\n        this.curves.push(curve);\n        var lastPoint = curve.getPoint(1);\n        this.currentPoint.copy(lastPoint);\n        return this;\n      }\n    }, {\n      key: \"copy\",\n      value: function copy(source) {\n        _get(_getPrototypeOf(Path.prototype), \"copy\", this).call(this, source);\n\n        this.currentPoint.copy(source.currentPoint);\n        return this;\n      }\n    }, {\n      key: \"toJSON\",\n      value: function toJSON() {\n        var data = _get(_getPrototypeOf(Path.prototype), \"toJSON\", this).call(this);\n\n        data.currentPoint = this.currentPoint.toArray();\n        return data;\n      }\n    }, {\n      key: \"fromJSON\",\n      value: function fromJSON(json) {\n        _get(_getPrototypeOf(Path.prototype), \"fromJSON\", this).call(this, json);\n\n        this.currentPoint.fromArray(json.currentPoint);\n        return this;\n      }\n    }]);\n\n    return Path;\n  }(CurvePath);\n\n  var Shape = /*#__PURE__*/function (_Path) {\n    _inherits(Shape, _Path);\n\n    var _super75 = _createSuper(Shape);\n\n    function Shape(points) {\n      var _this65;\n\n      _classCallCheck(this, Shape);\n\n      _this65 = _super75.call(this, points);\n      _this65.uuid = generateUUID();\n      _this65.type = 'Shape';\n      _this65.holes = [];\n      return _this65;\n    }\n\n    _createClass(Shape, [{\n      key: \"getPointsHoles\",\n      value: function getPointsHoles(divisions) {\n        var holesPts = [];\n\n        for (var _i203 = 0, l = this.holes.length; _i203 < l; _i203++) {\n          holesPts[_i203] = this.holes[_i203].getPoints(divisions);\n        }\n\n        return holesPts;\n      } // get points of shape and holes (keypoints based on segments parameter)\n\n    }, {\n      key: \"extractPoints\",\n      value: function extractPoints(divisions) {\n        return {\n          shape: this.getPoints(divisions),\n          holes: this.getPointsHoles(divisions)\n        };\n      }\n    }, {\n      key: \"copy\",\n      value: function copy(source) {\n        _get(_getPrototypeOf(Shape.prototype), \"copy\", this).call(this, source);\n\n        this.holes = [];\n\n        for (var _i204 = 0, l = source.holes.length; _i204 < l; _i204++) {\n          var hole = source.holes[_i204];\n          this.holes.push(hole.clone());\n        }\n\n        return this;\n      }\n    }, {\n      key: \"toJSON\",\n      value: function toJSON() {\n        var data = _get(_getPrototypeOf(Shape.prototype), \"toJSON\", this).call(this);\n\n        data.uuid = this.uuid;\n        data.holes = [];\n\n        for (var _i205 = 0, l = this.holes.length; _i205 < l; _i205++) {\n          var hole = this.holes[_i205];\n          data.holes.push(hole.toJSON());\n        }\n\n        return data;\n      }\n    }, {\n      key: \"fromJSON\",\n      value: function fromJSON(json) {\n        _get(_getPrototypeOf(Shape.prototype), \"fromJSON\", this).call(this, json);\n\n        this.uuid = json.uuid;\n        this.holes = [];\n\n        for (var _i206 = 0, l = json.holes.length; _i206 < l; _i206++) {\n          var hole = json.holes[_i206];\n          this.holes.push(new Path().fromJSON(hole));\n        }\n\n        return this;\n      }\n    }]);\n\n    return Shape;\n  }(Path);\n  /**\n   * Port from https://github.com/mapbox/earcut (v2.2.2)\n   */\n\n\n  var Earcut = {\n    triangulate: function triangulate(data, holeIndices) {\n      var dim = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 2;\n      var hasHoles = holeIndices && holeIndices.length;\n      var outerLen = hasHoles ? holeIndices[0] * dim : data.length;\n      var outerNode = linkedList(data, 0, outerLen, dim, true);\n      var triangles = [];\n      if (!outerNode || outerNode.next === outerNode.prev) return triangles;\n      var minX, minY, maxX, maxY, x, y, invSize;\n      if (hasHoles) outerNode = eliminateHoles(data, holeIndices, outerNode, dim); // if the shape is not too simple, we'll use z-order curve hash later; calculate polygon bbox\n\n      if (data.length > 80 * dim) {\n        minX = maxX = data[0];\n        minY = maxY = data[1];\n\n        for (var _i207 = dim; _i207 < outerLen; _i207 += dim) {\n          x = data[_i207];\n          y = data[_i207 + 1];\n          if (x < minX) minX = x;\n          if (y < minY) minY = y;\n          if (x > maxX) maxX = x;\n          if (y > maxY) maxY = y;\n        } // minX, minY and invSize are later used to transform coords into integers for z-order calculation\n\n\n        invSize = Math.max(maxX - minX, maxY - minY);\n        invSize = invSize !== 0 ? 1 / invSize : 0;\n      }\n\n      earcutLinked(outerNode, triangles, dim, minX, minY, invSize);\n      return triangles;\n    }\n  }; // create a circular doubly linked list from polygon points in the specified winding order\n\n  function linkedList(data, start, end, dim, clockwise) {\n    var i, last;\n\n    if (clockwise === signedArea(data, start, end, dim) > 0) {\n      for (i = start; i < end; i += dim) {\n        last = insertNode(i, data[i], data[i + 1], last);\n      }\n    } else {\n      for (i = end - dim; i >= start; i -= dim) {\n        last = insertNode(i, data[i], data[i + 1], last);\n      }\n    }\n\n    if (last && equals(last, last.next)) {\n      removeNode(last);\n      last = last.next;\n    }\n\n    return last;\n  } // eliminate colinear or duplicate points\n\n\n  function filterPoints(start, end) {\n    if (!start) return start;\n    if (!end) end = start;\n    var p = start,\n        again;\n\n    do {\n      again = false;\n\n      if (!p.steiner && (equals(p, p.next) || area(p.prev, p, p.next) === 0)) {\n        removeNode(p);\n        p = end = p.prev;\n        if (p === p.next) break;\n        again = true;\n      } else {\n        p = p.next;\n      }\n    } while (again || p !== end);\n\n    return end;\n  } // main ear slicing loop which triangulates a polygon (given as a linked list)\n\n\n  function earcutLinked(ear, triangles, dim, minX, minY, invSize, pass) {\n    if (!ear) return; // interlink polygon nodes in z-order\n\n    if (!pass && invSize) indexCurve(ear, minX, minY, invSize);\n    var stop = ear,\n        prev,\n        next; // iterate through ears, slicing them one by one\n\n    while (ear.prev !== ear.next) {\n      prev = ear.prev;\n      next = ear.next;\n\n      if (invSize ? isEarHashed(ear, minX, minY, invSize) : isEar(ear)) {\n        // cut off the triangle\n        triangles.push(prev.i / dim);\n        triangles.push(ear.i / dim);\n        triangles.push(next.i / dim);\n        removeNode(ear); // skipping the next vertex leads to less sliver triangles\n\n        ear = next.next;\n        stop = next.next;\n        continue;\n      }\n\n      ear = next; // if we looped through the whole remaining polygon and can't find any more ears\n\n      if (ear === stop) {\n        // try filtering points and slicing again\n        if (!pass) {\n          earcutLinked(filterPoints(ear), triangles, dim, minX, minY, invSize, 1); // if this didn't work, try curing all small self-intersections locally\n        } else if (pass === 1) {\n          ear = cureLocalIntersections(filterPoints(ear), triangles, dim);\n          earcutLinked(ear, triangles, dim, minX, minY, invSize, 2); // as a last resort, try splitting the remaining polygon into two\n        } else if (pass === 2) {\n          splitEarcut(ear, triangles, dim, minX, minY, invSize);\n        }\n\n        break;\n      }\n    }\n  } // check whether a polygon node forms a valid ear with adjacent nodes\n\n\n  function isEar(ear) {\n    var a = ear.prev,\n        b = ear,\n        c = ear.next;\n    if (area(a, b, c) >= 0) return false; // reflex, can't be an ear\n    // now make sure we don't have other points inside the potential ear\n\n    var p = ear.next.next;\n\n    while (p !== ear.prev) {\n      if (pointInTriangle(a.x, a.y, b.x, b.y, c.x, c.y, p.x, p.y) && area(p.prev, p, p.next) >= 0) return false;\n      p = p.next;\n    }\n\n    return true;\n  }\n\n  function isEarHashed(ear, minX, minY, invSize) {\n    var a = ear.prev,\n        b = ear,\n        c = ear.next;\n    if (area(a, b, c) >= 0) return false; // reflex, can't be an ear\n    // triangle bbox; min & max are calculated like this for speed\n\n    var minTX = a.x < b.x ? a.x < c.x ? a.x : c.x : b.x < c.x ? b.x : c.x,\n        minTY = a.y < b.y ? a.y < c.y ? a.y : c.y : b.y < c.y ? b.y : c.y,\n        maxTX = a.x > b.x ? a.x > c.x ? a.x : c.x : b.x > c.x ? b.x : c.x,\n        maxTY = a.y > b.y ? a.y > c.y ? a.y : c.y : b.y > c.y ? b.y : c.y; // z-order range for the current triangle bbox;\n\n    var minZ = zOrder(minTX, minTY, minX, minY, invSize),\n        maxZ = zOrder(maxTX, maxTY, minX, minY, invSize);\n    var p = ear.prevZ,\n        n = ear.nextZ; // look for points inside the triangle in both directions\n\n    while (p && p.z >= minZ && n && n.z <= maxZ) {\n      if (p !== ear.prev && p !== ear.next && pointInTriangle(a.x, a.y, b.x, b.y, c.x, c.y, p.x, p.y) && area(p.prev, p, p.next) >= 0) return false;\n      p = p.prevZ;\n      if (n !== ear.prev && n !== ear.next && pointInTriangle(a.x, a.y, b.x, b.y, c.x, c.y, n.x, n.y) && area(n.prev, n, n.next) >= 0) return false;\n      n = n.nextZ;\n    } // look for remaining points in decreasing z-order\n\n\n    while (p && p.z >= minZ) {\n      if (p !== ear.prev && p !== ear.next && pointInTriangle(a.x, a.y, b.x, b.y, c.x, c.y, p.x, p.y) && area(p.prev, p, p.next) >= 0) return false;\n      p = p.prevZ;\n    } // look for remaining points in increasing z-order\n\n\n    while (n && n.z <= maxZ) {\n      if (n !== ear.prev && n !== ear.next && pointInTriangle(a.x, a.y, b.x, b.y, c.x, c.y, n.x, n.y) && area(n.prev, n, n.next) >= 0) return false;\n      n = n.nextZ;\n    }\n\n    return true;\n  } // go through all polygon nodes and cure small local self-intersections\n\n\n  function cureLocalIntersections(start, triangles, dim) {\n    var p = start;\n\n    do {\n      var a = p.prev,\n          b = p.next.next;\n\n      if (!equals(a, b) && intersects(a, p, p.next, b) && locallyInside(a, b) && locallyInside(b, a)) {\n        triangles.push(a.i / dim);\n        triangles.push(p.i / dim);\n        triangles.push(b.i / dim); // remove two nodes involved\n\n        removeNode(p);\n        removeNode(p.next);\n        p = start = b;\n      }\n\n      p = p.next;\n    } while (p !== start);\n\n    return filterPoints(p);\n  } // try splitting polygon into two and triangulate them independently\n\n\n  function splitEarcut(start, triangles, dim, minX, minY, invSize) {\n    // look for a valid diagonal that divides the polygon into two\n    var a = start;\n\n    do {\n      var b = a.next.next;\n\n      while (b !== a.prev) {\n        if (a.i !== b.i && isValidDiagonal(a, b)) {\n          // split the polygon in two by the diagonal\n          var c = splitPolygon(a, b); // filter colinear points around the cuts\n\n          a = filterPoints(a, a.next);\n          c = filterPoints(c, c.next); // run earcut on each half\n\n          earcutLinked(a, triangles, dim, minX, minY, invSize);\n          earcutLinked(c, triangles, dim, minX, minY, invSize);\n          return;\n        }\n\n        b = b.next;\n      }\n\n      a = a.next;\n    } while (a !== start);\n  } // link every hole into the outer loop, producing a single-ring polygon without holes\n\n\n  function eliminateHoles(data, holeIndices, outerNode, dim) {\n    var queue = [];\n    var i, len, start, end, list;\n\n    for (i = 0, len = holeIndices.length; i < len; i++) {\n      start = holeIndices[i] * dim;\n      end = i < len - 1 ? holeIndices[i + 1] * dim : data.length;\n      list = linkedList(data, start, end, dim, false);\n      if (list === list.next) list.steiner = true;\n      queue.push(getLeftmost(list));\n    }\n\n    queue.sort(compareX); // process holes from left to right\n\n    for (i = 0; i < queue.length; i++) {\n      eliminateHole(queue[i], outerNode);\n      outerNode = filterPoints(outerNode, outerNode.next);\n    }\n\n    return outerNode;\n  }\n\n  function compareX(a, b) {\n    return a.x - b.x;\n  } // find a bridge between vertices that connects hole with an outer ring and and link it\n\n\n  function eliminateHole(hole, outerNode) {\n    outerNode = findHoleBridge(hole, outerNode);\n\n    if (outerNode) {\n      var b = splitPolygon(outerNode, hole); // filter collinear points around the cuts\n\n      filterPoints(outerNode, outerNode.next);\n      filterPoints(b, b.next);\n    }\n  } // David Eberly's algorithm for finding a bridge between hole and outer polygon\n\n\n  function findHoleBridge(hole, outerNode) {\n    var p = outerNode;\n    var hx = hole.x;\n    var hy = hole.y;\n    var qx = -Infinity,\n        m; // find a segment intersected by a ray from the hole's leftmost point to the left;\n    // segment's endpoint with lesser x will be potential connection point\n\n    do {\n      if (hy <= p.y && hy >= p.next.y && p.next.y !== p.y) {\n        var x = p.x + (hy - p.y) * (p.next.x - p.x) / (p.next.y - p.y);\n\n        if (x <= hx && x > qx) {\n          qx = x;\n\n          if (x === hx) {\n            if (hy === p.y) return p;\n            if (hy === p.next.y) return p.next;\n          }\n\n          m = p.x < p.next.x ? p : p.next;\n        }\n      }\n\n      p = p.next;\n    } while (p !== outerNode);\n\n    if (!m) return null;\n    if (hx === qx) return m; // hole touches outer segment; pick leftmost endpoint\n    // look for points inside the triangle of hole point, segment intersection and endpoint;\n    // if there are no points found, we have a valid connection;\n    // otherwise choose the point of the minimum angle with the ray as connection point\n\n    var stop = m,\n        mx = m.x,\n        my = m.y;\n    var tanMin = Infinity,\n        tan;\n    p = m;\n\n    do {\n      if (hx >= p.x && p.x >= mx && hx !== p.x && pointInTriangle(hy < my ? hx : qx, hy, mx, my, hy < my ? qx : hx, hy, p.x, p.y)) {\n        tan = Math.abs(hy - p.y) / (hx - p.x); // tangential\n\n        if (locallyInside(p, hole) && (tan < tanMin || tan === tanMin && (p.x > m.x || p.x === m.x && sectorContainsSector(m, p)))) {\n          m = p;\n          tanMin = tan;\n        }\n      }\n\n      p = p.next;\n    } while (p !== stop);\n\n    return m;\n  } // whether sector in vertex m contains sector in vertex p in the same coordinates\n\n\n  function sectorContainsSector(m, p) {\n    return area(m.prev, m, p.prev) < 0 && area(p.next, m, m.next) < 0;\n  } // interlink polygon nodes in z-order\n\n\n  function indexCurve(start, minX, minY, invSize) {\n    var p = start;\n\n    do {\n      if (p.z === null) p.z = zOrder(p.x, p.y, minX, minY, invSize);\n      p.prevZ = p.prev;\n      p.nextZ = p.next;\n      p = p.next;\n    } while (p !== start);\n\n    p.prevZ.nextZ = null;\n    p.prevZ = null;\n    sortLinked(p);\n  } // Simon Tatham's linked list merge sort algorithm\n  // http://www.chiark.greenend.org.uk/~sgtatham/algorithms/listsort.html\n\n\n  function sortLinked(list) {\n    var i,\n        p,\n        q,\n        e,\n        tail,\n        numMerges,\n        pSize,\n        qSize,\n        inSize = 1;\n\n    do {\n      p = list;\n      list = null;\n      tail = null;\n      numMerges = 0;\n\n      while (p) {\n        numMerges++;\n        q = p;\n        pSize = 0;\n\n        for (i = 0; i < inSize; i++) {\n          pSize++;\n          q = q.nextZ;\n          if (!q) break;\n        }\n\n        qSize = inSize;\n\n        while (pSize > 0 || qSize > 0 && q) {\n          if (pSize !== 0 && (qSize === 0 || !q || p.z <= q.z)) {\n            e = p;\n            p = p.nextZ;\n            pSize--;\n          } else {\n            e = q;\n            q = q.nextZ;\n            qSize--;\n          }\n\n          if (tail) tail.nextZ = e;else list = e;\n          e.prevZ = tail;\n          tail = e;\n        }\n\n        p = q;\n      }\n\n      tail.nextZ = null;\n      inSize *= 2;\n    } while (numMerges > 1);\n\n    return list;\n  } // z-order of a point given coords and inverse of the longer side of data bbox\n\n\n  function zOrder(x, y, minX, minY, invSize) {\n    // coords are transformed into non-negative 15-bit integer range\n    x = 32767 * (x - minX) * invSize;\n    y = 32767 * (y - minY) * invSize;\n    x = (x | x << 8) & 0x00FF00FF;\n    x = (x | x << 4) & 0x0F0F0F0F;\n    x = (x | x << 2) & 0x33333333;\n    x = (x | x << 1) & 0x55555555;\n    y = (y | y << 8) & 0x00FF00FF;\n    y = (y | y << 4) & 0x0F0F0F0F;\n    y = (y | y << 2) & 0x33333333;\n    y = (y | y << 1) & 0x55555555;\n    return x | y << 1;\n  } // find the leftmost node of a polygon ring\n\n\n  function getLeftmost(start) {\n    var p = start,\n        leftmost = start;\n\n    do {\n      if (p.x < leftmost.x || p.x === leftmost.x && p.y < leftmost.y) leftmost = p;\n      p = p.next;\n    } while (p !== start);\n\n    return leftmost;\n  } // check if a point lies within a convex triangle\n\n\n  function pointInTriangle(ax, ay, bx, by, cx, cy, px, py) {\n    return (cx - px) * (ay - py) - (ax - px) * (cy - py) >= 0 && (ax - px) * (by - py) - (bx - px) * (ay - py) >= 0 && (bx - px) * (cy - py) - (cx - px) * (by - py) >= 0;\n  } // check if a diagonal between two polygon nodes is valid (lies in polygon interior)\n\n\n  function isValidDiagonal(a, b) {\n    return a.next.i !== b.i && a.prev.i !== b.i && !intersectsPolygon(a, b) && ( // dones't intersect other edges\n    locallyInside(a, b) && locallyInside(b, a) && middleInside(a, b) && ( // locally visible\n    area(a.prev, a, b.prev) || area(a, b.prev, b)) || // does not create opposite-facing sectors\n    equals(a, b) && area(a.prev, a, a.next) > 0 && area(b.prev, b, b.next) > 0); // special zero-length case\n  } // signed area of a triangle\n\n\n  function area(p, q, r) {\n    return (q.y - p.y) * (r.x - q.x) - (q.x - p.x) * (r.y - q.y);\n  } // check if two points are equal\n\n\n  function equals(p1, p2) {\n    return p1.x === p2.x && p1.y === p2.y;\n  } // check if two segments intersect\n\n\n  function intersects(p1, q1, p2, q2) {\n    var o1 = sign(area(p1, q1, p2));\n    var o2 = sign(area(p1, q1, q2));\n    var o3 = sign(area(p2, q2, p1));\n    var o4 = sign(area(p2, q2, q1));\n    if (o1 !== o2 && o3 !== o4) return true; // general case\n\n    if (o1 === 0 && onSegment(p1, p2, q1)) return true; // p1, q1 and p2 are collinear and p2 lies on p1q1\n\n    if (o2 === 0 && onSegment(p1, q2, q1)) return true; // p1, q1 and q2 are collinear and q2 lies on p1q1\n\n    if (o3 === 0 && onSegment(p2, p1, q2)) return true; // p2, q2 and p1 are collinear and p1 lies on p2q2\n\n    if (o4 === 0 && onSegment(p2, q1, q2)) return true; // p2, q2 and q1 are collinear and q1 lies on p2q2\n\n    return false;\n  } // for collinear points p, q, r, check if point q lies on segment pr\n\n\n  function onSegment(p, q, r) {\n    return q.x <= Math.max(p.x, r.x) && q.x >= Math.min(p.x, r.x) && q.y <= Math.max(p.y, r.y) && q.y >= Math.min(p.y, r.y);\n  }\n\n  function sign(num) {\n    return num > 0 ? 1 : num < 0 ? -1 : 0;\n  } // check if a polygon diagonal intersects any polygon segments\n\n\n  function intersectsPolygon(a, b) {\n    var p = a;\n\n    do {\n      if (p.i !== a.i && p.next.i !== a.i && p.i !== b.i && p.next.i !== b.i && intersects(p, p.next, a, b)) return true;\n      p = p.next;\n    } while (p !== a);\n\n    return false;\n  } // check if a polygon diagonal is locally inside the polygon\n\n\n  function locallyInside(a, b) {\n    return area(a.prev, a, a.next) < 0 ? area(a, b, a.next) >= 0 && area(a, a.prev, b) >= 0 : area(a, b, a.prev) < 0 || area(a, a.next, b) < 0;\n  } // check if the middle point of a polygon diagonal is inside the polygon\n\n\n  function middleInside(a, b) {\n    var p = a,\n        inside = false;\n    var px = (a.x + b.x) / 2,\n        py = (a.y + b.y) / 2;\n\n    do {\n      if (p.y > py !== p.next.y > py && p.next.y !== p.y && px < (p.next.x - p.x) * (py - p.y) / (p.next.y - p.y) + p.x) inside = !inside;\n      p = p.next;\n    } while (p !== a);\n\n    return inside;\n  } // link two polygon vertices with a bridge; if the vertices belong to the same ring, it splits polygon into two;\n  // if one belongs to the outer ring and another to a hole, it merges it into a single ring\n\n\n  function splitPolygon(a, b) {\n    var a2 = new Node(a.i, a.x, a.y),\n        b2 = new Node(b.i, b.x, b.y),\n        an = a.next,\n        bp = b.prev;\n    a.next = b;\n    b.prev = a;\n    a2.next = an;\n    an.prev = a2;\n    b2.next = a2;\n    a2.prev = b2;\n    bp.next = b2;\n    b2.prev = bp;\n    return b2;\n  } // create a node and optionally link it with previous one (in a circular doubly linked list)\n\n\n  function insertNode(i, x, y, last) {\n    var p = new Node(i, x, y);\n\n    if (!last) {\n      p.prev = p;\n      p.next = p;\n    } else {\n      p.next = last.next;\n      p.prev = last;\n      last.next.prev = p;\n      last.next = p;\n    }\n\n    return p;\n  }\n\n  function removeNode(p) {\n    p.next.prev = p.prev;\n    p.prev.next = p.next;\n    if (p.prevZ) p.prevZ.nextZ = p.nextZ;\n    if (p.nextZ) p.nextZ.prevZ = p.prevZ;\n  }\n\n  function Node(i, x, y) {\n    // vertex index in coordinates array\n    this.i = i; // vertex coordinates\n\n    this.x = x;\n    this.y = y; // previous and next vertex nodes in a polygon ring\n\n    this.prev = null;\n    this.next = null; // z-order curve value\n\n    this.z = null; // previous and next nodes in z-order\n\n    this.prevZ = null;\n    this.nextZ = null; // indicates whether this is a steiner point\n\n    this.steiner = false;\n  }\n\n  function signedArea(data, start, end, dim) {\n    var sum = 0;\n\n    for (var _i208 = start, j = end - dim; _i208 < end; _i208 += dim) {\n      sum += (data[j] - data[_i208]) * (data[_i208 + 1] + data[j + 1]);\n      j = _i208;\n    }\n\n    return sum;\n  }\n\n  var ShapeUtils = /*#__PURE__*/function () {\n    function ShapeUtils() {\n      _classCallCheck(this, ShapeUtils);\n    }\n\n    _createClass(ShapeUtils, null, [{\n      key: \"area\",\n      value: // calculate area of the contour polygon\n      function area(contour) {\n        var n = contour.length;\n        var a = 0.0;\n\n        for (var p = n - 1, q = 0; q < n; p = q++) {\n          a += contour[p].x * contour[q].y - contour[q].x * contour[p].y;\n        }\n\n        return a * 0.5;\n      }\n    }, {\n      key: \"isClockWise\",\n      value: function isClockWise(pts) {\n        return ShapeUtils.area(pts) < 0;\n      }\n    }, {\n      key: \"triangulateShape\",\n      value: function triangulateShape(contour, holes) {\n        var vertices = []; // flat array of vertices like [ x0,y0, x1,y1, x2,y2, ... ]\n\n        var holeIndices = []; // array of hole indices\n\n        var faces = []; // final array of vertex indices like [ [ a,b,d ], [ b,c,d ] ]\n\n        removeDupEndPts(contour);\n        addContour(vertices, contour); //\n\n        var holeIndex = contour.length;\n        holes.forEach(removeDupEndPts);\n\n        for (var _i209 = 0; _i209 < holes.length; _i209++) {\n          holeIndices.push(holeIndex);\n          holeIndex += holes[_i209].length;\n          addContour(vertices, holes[_i209]);\n        } //\n\n\n        var triangles = Earcut.triangulate(vertices, holeIndices); //\n\n        for (var _i210 = 0; _i210 < triangles.length; _i210 += 3) {\n          faces.push(triangles.slice(_i210, _i210 + 3));\n        }\n\n        return faces;\n      }\n    }]);\n\n    return ShapeUtils;\n  }();\n\n  function removeDupEndPts(points) {\n    var l = points.length;\n\n    if (l > 2 && points[l - 1].equals(points[0])) {\n      points.pop();\n    }\n  }\n\n  function addContour(vertices, contour) {\n    for (var _i211 = 0; _i211 < contour.length; _i211++) {\n      vertices.push(contour[_i211].x);\n      vertices.push(contour[_i211].y);\n    }\n  }\n  /**\n   * Creates extruded geometry from a path shape.\n   *\n   * parameters = {\n   *\n   *\tcurveSegments: <int>, // number of points on the curves\n   *\tsteps: <int>, // number of points for z-side extrusions / used for subdividing segments of extrude spline too\n   *\tdepth: <float>, // Depth to extrude the shape\n   *\n   *\tbevelEnabled: <bool>, // turn on bevel\n   *\tbevelThickness: <float>, // how deep into the original shape bevel goes\n   *\tbevelSize: <float>, // how far from shape outline (including bevelOffset) is bevel\n   *\tbevelOffset: <float>, // how far from shape outline does bevel start\n   *\tbevelSegments: <int>, // number of bevel layers\n   *\n   *\textrudePath: <THREE.Curve> // curve to extrude shape along\n   *\n   *\tUVGenerator: <Object> // object that provides UV generator functions\n   *\n   * }\n   */\n\n\n  var ExtrudeGeometry = /*#__PURE__*/function (_BufferGeometry7) {\n    _inherits(ExtrudeGeometry, _BufferGeometry7);\n\n    var _super76 = _createSuper(ExtrudeGeometry);\n\n    function ExtrudeGeometry() {\n      var _this66;\n\n      var shapes = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : new Shape([new Vector2(0.5, 0.5), new Vector2(-0.5, 0.5), new Vector2(-0.5, -0.5), new Vector2(0.5, -0.5)]);\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n      _classCallCheck(this, ExtrudeGeometry);\n\n      _this66 = _super76.call(this);\n      _this66.type = 'ExtrudeGeometry';\n      _this66.parameters = {\n        shapes: shapes,\n        options: options\n      };\n      shapes = Array.isArray(shapes) ? shapes : [shapes];\n\n      var scope = _assertThisInitialized(_this66);\n\n      var verticesArray = [];\n      var uvArray = [];\n\n      for (var _i212 = 0, l = shapes.length; _i212 < l; _i212++) {\n        var shape = shapes[_i212];\n        addShape(shape);\n      } // build geometry\n\n\n      _this66.setAttribute('position', new Float32BufferAttribute(verticesArray, 3));\n\n      _this66.setAttribute('uv', new Float32BufferAttribute(uvArray, 2));\n\n      _this66.computeVertexNormals(); // functions\n\n\n      function addShape(shape) {\n        var placeholder = []; // options\n\n        var curveSegments = options.curveSegments !== undefined ? options.curveSegments : 12;\n        var steps = options.steps !== undefined ? options.steps : 1;\n        var depth = options.depth !== undefined ? options.depth : 1;\n        var bevelEnabled = options.bevelEnabled !== undefined ? options.bevelEnabled : true;\n        var bevelThickness = options.bevelThickness !== undefined ? options.bevelThickness : 0.2;\n        var bevelSize = options.bevelSize !== undefined ? options.bevelSize : bevelThickness - 0.1;\n        var bevelOffset = options.bevelOffset !== undefined ? options.bevelOffset : 0;\n        var bevelSegments = options.bevelSegments !== undefined ? options.bevelSegments : 3;\n        var extrudePath = options.extrudePath;\n        var uvgen = options.UVGenerator !== undefined ? options.UVGenerator : WorldUVGenerator; // deprecated options\n\n        if (options.amount !== undefined) {\n          console.warn('THREE.ExtrudeBufferGeometry: amount has been renamed to depth.');\n          depth = options.amount;\n        } //\n\n\n        var extrudePts,\n            extrudeByPath = false;\n        var splineTube, binormal, normal, position2;\n\n        if (extrudePath) {\n          extrudePts = extrudePath.getSpacedPoints(steps);\n          extrudeByPath = true;\n          bevelEnabled = false; // bevels not supported for path extrusion\n          // SETUP TNB variables\n          // TODO1 - have a .isClosed in spline?\n\n          splineTube = extrudePath.computeFrenetFrames(steps, false); // console.log(splineTube, 'splineTube', splineTube.normals.length, 'steps', steps, 'extrudePts', extrudePts.length);\n\n          binormal = new Vector3();\n          normal = new Vector3();\n          position2 = new Vector3();\n        } // Safeguards if bevels are not enabled\n\n\n        if (!bevelEnabled) {\n          bevelSegments = 0;\n          bevelThickness = 0;\n          bevelSize = 0;\n          bevelOffset = 0;\n        } // Variables initialization\n\n\n        var shapePoints = shape.extractPoints(curveSegments);\n        var vertices = shapePoints.shape;\n        var holes = shapePoints.holes;\n        var reverse = !ShapeUtils.isClockWise(vertices);\n\n        if (reverse) {\n          vertices = vertices.reverse(); // Maybe we should also check if holes are in the opposite direction, just to be safe ...\n\n          for (var h = 0, hl = holes.length; h < hl; h++) {\n            var ahole = holes[h];\n\n            if (ShapeUtils.isClockWise(ahole)) {\n              holes[h] = ahole.reverse();\n            }\n          }\n        }\n\n        var faces = ShapeUtils.triangulateShape(vertices, holes);\n        /* Vertices */\n\n        var contour = vertices; // vertices has all points but contour has only points of circumference\n\n        for (var _h = 0, _hl = holes.length; _h < _hl; _h++) {\n          var _ahole = holes[_h];\n          vertices = vertices.concat(_ahole);\n        }\n\n        function scalePt2(pt, vec, size) {\n          if (!vec) console.error('THREE.ExtrudeGeometry: vec does not exist');\n          return vec.clone().multiplyScalar(size).add(pt);\n        }\n\n        var vlen = vertices.length,\n            flen = faces.length; // Find directions for point movement\n\n        function getBevelVec(inPt, inPrev, inNext) {\n          // computes for inPt the corresponding point inPt' on a new contour\n          //\t shifted by 1 unit (length of normalized vector) to the left\n          // if we walk along contour clockwise, this new contour is outside the old one\n          //\n          // inPt' is the intersection of the two lines parallel to the two\n          //\tadjacent edges of inPt at a distance of 1 unit on the left side.\n          var v_trans_x, v_trans_y, shrink_by; // resulting translation vector for inPt\n          // good reading for geometry algorithms (here: line-line intersection)\n          // http://geomalgorithms.com/a05-_intersect-1.html\n\n          var v_prev_x = inPt.x - inPrev.x,\n              v_prev_y = inPt.y - inPrev.y;\n          var v_next_x = inNext.x - inPt.x,\n              v_next_y = inNext.y - inPt.y;\n          var v_prev_lensq = v_prev_x * v_prev_x + v_prev_y * v_prev_y; // check for collinear edges\n\n          var collinear0 = v_prev_x * v_next_y - v_prev_y * v_next_x;\n\n          if (Math.abs(collinear0) > Number.EPSILON) {\n            // not collinear\n            // length of vectors for normalizing\n            var v_prev_len = Math.sqrt(v_prev_lensq);\n            var v_next_len = Math.sqrt(v_next_x * v_next_x + v_next_y * v_next_y); // shift adjacent points by unit vectors to the left\n\n            var ptPrevShift_x = inPrev.x - v_prev_y / v_prev_len;\n            var ptPrevShift_y = inPrev.y + v_prev_x / v_prev_len;\n            var ptNextShift_x = inNext.x - v_next_y / v_next_len;\n            var ptNextShift_y = inNext.y + v_next_x / v_next_len; // scaling factor for v_prev to intersection point\n\n            var sf = ((ptNextShift_x - ptPrevShift_x) * v_next_y - (ptNextShift_y - ptPrevShift_y) * v_next_x) / (v_prev_x * v_next_y - v_prev_y * v_next_x); // vector from inPt to intersection point\n\n            v_trans_x = ptPrevShift_x + v_prev_x * sf - inPt.x;\n            v_trans_y = ptPrevShift_y + v_prev_y * sf - inPt.y; // Don't normalize!, otherwise sharp corners become ugly\n            //\tbut prevent crazy spikes\n\n            var v_trans_lensq = v_trans_x * v_trans_x + v_trans_y * v_trans_y;\n\n            if (v_trans_lensq <= 2) {\n              return new Vector2(v_trans_x, v_trans_y);\n            } else {\n              shrink_by = Math.sqrt(v_trans_lensq / 2);\n            }\n          } else {\n            // handle special case of collinear edges\n            var direction_eq = false; // assumes: opposite\n\n            if (v_prev_x > Number.EPSILON) {\n              if (v_next_x > Number.EPSILON) {\n                direction_eq = true;\n              }\n            } else {\n              if (v_prev_x < -Number.EPSILON) {\n                if (v_next_x < -Number.EPSILON) {\n                  direction_eq = true;\n                }\n              } else {\n                if (Math.sign(v_prev_y) === Math.sign(v_next_y)) {\n                  direction_eq = true;\n                }\n              }\n            }\n\n            if (direction_eq) {\n              // console.log(\"Warning: lines are a straight sequence\");\n              v_trans_x = -v_prev_y;\n              v_trans_y = v_prev_x;\n              shrink_by = Math.sqrt(v_prev_lensq);\n            } else {\n              // console.log(\"Warning: lines are a straight spike\");\n              v_trans_x = v_prev_x;\n              v_trans_y = v_prev_y;\n              shrink_by = Math.sqrt(v_prev_lensq / 2);\n            }\n          }\n\n          return new Vector2(v_trans_x / shrink_by, v_trans_y / shrink_by);\n        }\n\n        var contourMovements = [];\n\n        for (var _i213 = 0, il = contour.length, j = il - 1, k = _i213 + 1; _i213 < il; _i213++, j++, k++) {\n          if (j === il) j = 0;\n          if (k === il) k = 0; //\t(j)---(i)---(k)\n          // console.log('i,j,k', i, j , k)\n\n          contourMovements[_i213] = getBevelVec(contour[_i213], contour[j], contour[k]);\n        }\n\n        var holesMovements = [];\n        var oneHoleMovements,\n            verticesMovements = contourMovements.concat();\n\n        for (var _h2 = 0, _hl2 = holes.length; _h2 < _hl2; _h2++) {\n          var _ahole2 = holes[_h2];\n          oneHoleMovements = [];\n\n          for (var _i214 = 0, _il13 = _ahole2.length, _j6 = _il13 - 1, _k = _i214 + 1; _i214 < _il13; _i214++, _j6++, _k++) {\n            if (_j6 === _il13) _j6 = 0;\n            if (_k === _il13) _k = 0; //\t(j)---(i)---(k)\n\n            oneHoleMovements[_i214] = getBevelVec(_ahole2[_i214], _ahole2[_j6], _ahole2[_k]);\n          }\n\n          holesMovements.push(oneHoleMovements);\n          verticesMovements = verticesMovements.concat(oneHoleMovements);\n        } // Loop bevelSegments, 1 for the front, 1 for the back\n\n\n        for (var b = 0; b < bevelSegments; b++) {\n          //for ( b = bevelSegments; b > 0; b -- ) {\n          var t = b / bevelSegments;\n          var z = bevelThickness * Math.cos(t * Math.PI / 2);\n\n          var _bs = bevelSize * Math.sin(t * Math.PI / 2) + bevelOffset; // contract shape\n\n\n          for (var _i215 = 0, _il14 = contour.length; _i215 < _il14; _i215++) {\n            var vert = scalePt2(contour[_i215], contourMovements[_i215], _bs);\n            v(vert.x, vert.y, -z);\n          } // expand holes\n\n\n          for (var _h3 = 0, _hl3 = holes.length; _h3 < _hl3; _h3++) {\n            var _ahole3 = holes[_h3];\n            oneHoleMovements = holesMovements[_h3];\n\n            for (var _i216 = 0, _il15 = _ahole3.length; _i216 < _il15; _i216++) {\n              var _vert = scalePt2(_ahole3[_i216], oneHoleMovements[_i216], _bs);\n\n              v(_vert.x, _vert.y, -z);\n            }\n          }\n        }\n\n        var bs = bevelSize + bevelOffset; // Back facing vertices\n\n        for (var _i217 = 0; _i217 < vlen; _i217++) {\n          var _vert2 = bevelEnabled ? scalePt2(vertices[_i217], verticesMovements[_i217], bs) : vertices[_i217];\n\n          if (!extrudeByPath) {\n            v(_vert2.x, _vert2.y, 0);\n          } else {\n            // v( vert.x, vert.y + extrudePts[ 0 ].y, extrudePts[ 0 ].x );\n            normal.copy(splineTube.normals[0]).multiplyScalar(_vert2.x);\n            binormal.copy(splineTube.binormals[0]).multiplyScalar(_vert2.y);\n            position2.copy(extrudePts[0]).add(normal).add(binormal);\n            v(position2.x, position2.y, position2.z);\n          }\n        } // Add stepped vertices...\n        // Including front facing vertices\n\n\n        for (var s = 1; s <= steps; s++) {\n          for (var _i218 = 0; _i218 < vlen; _i218++) {\n            var _vert3 = bevelEnabled ? scalePt2(vertices[_i218], verticesMovements[_i218], bs) : vertices[_i218];\n\n            if (!extrudeByPath) {\n              v(_vert3.x, _vert3.y, depth / steps * s);\n            } else {\n              // v( vert.x, vert.y + extrudePts[ s - 1 ].y, extrudePts[ s - 1 ].x );\n              normal.copy(splineTube.normals[s]).multiplyScalar(_vert3.x);\n              binormal.copy(splineTube.binormals[s]).multiplyScalar(_vert3.y);\n              position2.copy(extrudePts[s]).add(normal).add(binormal);\n              v(position2.x, position2.y, position2.z);\n            }\n          }\n        } // Add bevel segments planes\n        //for ( b = 1; b <= bevelSegments; b ++ ) {\n\n\n        for (var _b5 = bevelSegments - 1; _b5 >= 0; _b5--) {\n          var _t = _b5 / bevelSegments;\n\n          var _z2 = bevelThickness * Math.cos(_t * Math.PI / 2);\n\n          var _bs2 = bevelSize * Math.sin(_t * Math.PI / 2) + bevelOffset; // contract shape\n\n\n          for (var _i219 = 0, _il16 = contour.length; _i219 < _il16; _i219++) {\n            var _vert4 = scalePt2(contour[_i219], contourMovements[_i219], _bs2);\n\n            v(_vert4.x, _vert4.y, depth + _z2);\n          } // expand holes\n\n\n          for (var _h4 = 0, _hl4 = holes.length; _h4 < _hl4; _h4++) {\n            var _ahole4 = holes[_h4];\n            oneHoleMovements = holesMovements[_h4];\n\n            for (var _i220 = 0, _il17 = _ahole4.length; _i220 < _il17; _i220++) {\n              var _vert5 = scalePt2(_ahole4[_i220], oneHoleMovements[_i220], _bs2);\n\n              if (!extrudeByPath) {\n                v(_vert5.x, _vert5.y, depth + _z2);\n              } else {\n                v(_vert5.x, _vert5.y + extrudePts[steps - 1].y, extrudePts[steps - 1].x + _z2);\n              }\n            }\n          }\n        }\n        /* Faces */\n        // Top and bottom faces\n\n\n        buildLidFaces(); // Sides faces\n\n        buildSideFaces(); /////\tInternal functions\n\n        function buildLidFaces() {\n          var start = verticesArray.length / 3;\n\n          if (bevelEnabled) {\n            var layer = 0; // steps + 1\n\n            var offset = vlen * layer; // Bottom faces\n\n            for (var _i221 = 0; _i221 < flen; _i221++) {\n              var face = faces[_i221];\n              f3(face[2] + offset, face[1] + offset, face[0] + offset);\n            }\n\n            layer = steps + bevelSegments * 2;\n            offset = vlen * layer; // Top faces\n\n            for (var _i222 = 0; _i222 < flen; _i222++) {\n              var _face = faces[_i222];\n              f3(_face[0] + offset, _face[1] + offset, _face[2] + offset);\n            }\n          } else {\n            // Bottom faces\n            for (var _i223 = 0; _i223 < flen; _i223++) {\n              var _face2 = faces[_i223];\n              f3(_face2[2], _face2[1], _face2[0]);\n            } // Top faces\n\n\n            for (var _i224 = 0; _i224 < flen; _i224++) {\n              var _face3 = faces[_i224];\n              f3(_face3[0] + vlen * steps, _face3[1] + vlen * steps, _face3[2] + vlen * steps);\n            }\n          }\n\n          scope.addGroup(start, verticesArray.length / 3 - start, 0);\n        } // Create faces for the z-sides of the shape\n\n\n        function buildSideFaces() {\n          var start = verticesArray.length / 3;\n          var layeroffset = 0;\n          sidewalls(contour, layeroffset);\n          layeroffset += contour.length;\n\n          for (var _h5 = 0, _hl5 = holes.length; _h5 < _hl5; _h5++) {\n            var _ahole5 = holes[_h5];\n            sidewalls(_ahole5, layeroffset); //, true\n\n            layeroffset += _ahole5.length;\n          }\n\n          scope.addGroup(start, verticesArray.length / 3 - start, 1);\n        }\n\n        function sidewalls(contour, layeroffset) {\n          var i = contour.length;\n\n          while (--i >= 0) {\n            var _j7 = i;\n\n            var _k2 = i - 1;\n\n            if (_k2 < 0) _k2 = contour.length - 1; //console.log('b', i,j, i-1, k,vertices.length);\n\n            for (var _s4 = 0, sl = steps + bevelSegments * 2; _s4 < sl; _s4++) {\n              var slen1 = vlen * _s4;\n              var slen2 = vlen * (_s4 + 1);\n\n              var a = layeroffset + _j7 + slen1,\n                  _b6 = layeroffset + _k2 + slen1,\n                  c = layeroffset + _k2 + slen2,\n                  d = layeroffset + _j7 + slen2;\n\n              f4(a, _b6, c, d);\n            }\n          }\n        }\n\n        function v(x, y, z) {\n          placeholder.push(x);\n          placeholder.push(y);\n          placeholder.push(z);\n        }\n\n        function f3(a, b, c) {\n          addVertex(a);\n          addVertex(b);\n          addVertex(c);\n          var nextIndex = verticesArray.length / 3;\n          var uvs = uvgen.generateTopUV(scope, verticesArray, nextIndex - 3, nextIndex - 2, nextIndex - 1);\n          addUV(uvs[0]);\n          addUV(uvs[1]);\n          addUV(uvs[2]);\n        }\n\n        function f4(a, b, c, d) {\n          addVertex(a);\n          addVertex(b);\n          addVertex(d);\n          addVertex(b);\n          addVertex(c);\n          addVertex(d);\n          var nextIndex = verticesArray.length / 3;\n          var uvs = uvgen.generateSideWallUV(scope, verticesArray, nextIndex - 6, nextIndex - 3, nextIndex - 2, nextIndex - 1);\n          addUV(uvs[0]);\n          addUV(uvs[1]);\n          addUV(uvs[3]);\n          addUV(uvs[1]);\n          addUV(uvs[2]);\n          addUV(uvs[3]);\n        }\n\n        function addVertex(index) {\n          verticesArray.push(placeholder[index * 3 + 0]);\n          verticesArray.push(placeholder[index * 3 + 1]);\n          verticesArray.push(placeholder[index * 3 + 2]);\n        }\n\n        function addUV(vector2) {\n          uvArray.push(vector2.x);\n          uvArray.push(vector2.y);\n        }\n      }\n\n      return _this66;\n    }\n\n    _createClass(ExtrudeGeometry, [{\n      key: \"toJSON\",\n      value: function toJSON() {\n        var data = _get(_getPrototypeOf(ExtrudeGeometry.prototype), \"toJSON\", this).call(this);\n\n        var shapes = this.parameters.shapes;\n        var options = this.parameters.options;\n        return toJSON$1(shapes, options, data);\n      }\n    }], [{\n      key: \"fromJSON\",\n      value: function fromJSON(data, shapes) {\n        var geometryShapes = [];\n\n        for (var j = 0, jl = data.shapes.length; j < jl; j++) {\n          var shape = shapes[data.shapes[j]];\n          geometryShapes.push(shape);\n        }\n\n        var extrudePath = data.options.extrudePath;\n\n        if (extrudePath !== undefined) {\n          data.options.extrudePath = new Curves[extrudePath.type]().fromJSON(extrudePath);\n        }\n\n        return new ExtrudeGeometry(geometryShapes, data.options);\n      }\n    }]);\n\n    return ExtrudeGeometry;\n  }(BufferGeometry);\n\n  var WorldUVGenerator = {\n    generateTopUV: function generateTopUV(geometry, vertices, indexA, indexB, indexC) {\n      var a_x = vertices[indexA * 3];\n      var a_y = vertices[indexA * 3 + 1];\n      var b_x = vertices[indexB * 3];\n      var b_y = vertices[indexB * 3 + 1];\n      var c_x = vertices[indexC * 3];\n      var c_y = vertices[indexC * 3 + 1];\n      return [new Vector2(a_x, a_y), new Vector2(b_x, b_y), new Vector2(c_x, c_y)];\n    },\n    generateSideWallUV: function generateSideWallUV(geometry, vertices, indexA, indexB, indexC, indexD) {\n      var a_x = vertices[indexA * 3];\n      var a_y = vertices[indexA * 3 + 1];\n      var a_z = vertices[indexA * 3 + 2];\n      var b_x = vertices[indexB * 3];\n      var b_y = vertices[indexB * 3 + 1];\n      var b_z = vertices[indexB * 3 + 2];\n      var c_x = vertices[indexC * 3];\n      var c_y = vertices[indexC * 3 + 1];\n      var c_z = vertices[indexC * 3 + 2];\n      var d_x = vertices[indexD * 3];\n      var d_y = vertices[indexD * 3 + 1];\n      var d_z = vertices[indexD * 3 + 2];\n\n      if (Math.abs(a_y - b_y) < Math.abs(a_x - b_x)) {\n        return [new Vector2(a_x, 1 - a_z), new Vector2(b_x, 1 - b_z), new Vector2(c_x, 1 - c_z), new Vector2(d_x, 1 - d_z)];\n      } else {\n        return [new Vector2(a_y, 1 - a_z), new Vector2(b_y, 1 - b_z), new Vector2(c_y, 1 - c_z), new Vector2(d_y, 1 - d_z)];\n      }\n    }\n  };\n\n  function toJSON$1(shapes, options, data) {\n    data.shapes = [];\n\n    if (Array.isArray(shapes)) {\n      for (var _i225 = 0, l = shapes.length; _i225 < l; _i225++) {\n        var shape = shapes[_i225];\n        data.shapes.push(shape.uuid);\n      }\n    } else {\n      data.shapes.push(shapes.uuid);\n    }\n\n    if (options.extrudePath !== undefined) data.options.extrudePath = options.extrudePath.toJSON();\n    return data;\n  }\n\n  var IcosahedronGeometry = /*#__PURE__*/function (_PolyhedronGeometry2) {\n    _inherits(IcosahedronGeometry, _PolyhedronGeometry2);\n\n    var _super77 = _createSuper(IcosahedronGeometry);\n\n    function IcosahedronGeometry() {\n      var _this67;\n\n      var radius = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n      var detail = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n\n      _classCallCheck(this, IcosahedronGeometry);\n\n      var t = (1 + Math.sqrt(5)) / 2;\n      var vertices = [-1, t, 0, 1, t, 0, -1, -t, 0, 1, -t, 0, 0, -1, t, 0, 1, t, 0, -1, -t, 0, 1, -t, t, 0, -1, t, 0, 1, -t, 0, -1, -t, 0, 1];\n      var indices = [0, 11, 5, 0, 5, 1, 0, 1, 7, 0, 7, 10, 0, 10, 11, 1, 5, 9, 5, 11, 4, 11, 10, 2, 10, 7, 6, 7, 1, 8, 3, 9, 4, 3, 4, 2, 3, 2, 6, 3, 6, 8, 3, 8, 9, 4, 9, 5, 2, 4, 11, 6, 2, 10, 8, 6, 7, 9, 8, 1];\n      _this67 = _super77.call(this, vertices, indices, radius, detail);\n      _this67.type = 'IcosahedronGeometry';\n      _this67.parameters = {\n        radius: radius,\n        detail: detail\n      };\n      return _this67;\n    }\n\n    _createClass(IcosahedronGeometry, null, [{\n      key: \"fromJSON\",\n      value: function fromJSON(data) {\n        return new IcosahedronGeometry(data.radius, data.detail);\n      }\n    }]);\n\n    return IcosahedronGeometry;\n  }(PolyhedronGeometry);\n\n  var LatheGeometry = /*#__PURE__*/function (_BufferGeometry8) {\n    _inherits(LatheGeometry, _BufferGeometry8);\n\n    var _super78 = _createSuper(LatheGeometry);\n\n    function LatheGeometry() {\n      var _this68;\n\n      var points = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [new Vector2(0, 0.5), new Vector2(0.5, 0), new Vector2(0, -0.5)];\n      var segments = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 12;\n      var phiStart = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n      var phiLength = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : Math.PI * 2;\n\n      _classCallCheck(this, LatheGeometry);\n\n      _this68 = _super78.call(this);\n      _this68.type = 'LatheGeometry';\n      _this68.parameters = {\n        points: points,\n        segments: segments,\n        phiStart: phiStart,\n        phiLength: phiLength\n      };\n      segments = Math.floor(segments); // clamp phiLength so it's in range of [ 0, 2PI ]\n\n      phiLength = clamp(phiLength, 0, Math.PI * 2); // buffers\n\n      var indices = [];\n      var vertices = [];\n      var uvs = []; // helper variables\n\n      var inverseSegments = 1.0 / segments;\n      var vertex = new Vector3();\n      var uv = new Vector2(); // generate vertices and uvs\n\n      for (var _i226 = 0; _i226 <= segments; _i226++) {\n        var phi = phiStart + _i226 * inverseSegments * phiLength;\n        var sin = Math.sin(phi);\n        var cos = Math.cos(phi);\n\n        for (var j = 0; j <= points.length - 1; j++) {\n          // vertex\n          vertex.x = points[j].x * sin;\n          vertex.y = points[j].y;\n          vertex.z = points[j].x * cos;\n          vertices.push(vertex.x, vertex.y, vertex.z); // uv\n\n          uv.x = _i226 / segments;\n          uv.y = j / (points.length - 1);\n          uvs.push(uv.x, uv.y);\n        }\n      } // indices\n\n\n      for (var _i227 = 0; _i227 < segments; _i227++) {\n        for (var _j8 = 0; _j8 < points.length - 1; _j8++) {\n          var base = _j8 + _i227 * points.length;\n          var a = base;\n          var b = base + points.length;\n          var c = base + points.length + 1;\n          var d = base + 1; // faces\n\n          indices.push(a, b, d);\n          indices.push(b, c, d);\n        }\n      } // build geometry\n\n\n      _this68.setIndex(indices);\n\n      _this68.setAttribute('position', new Float32BufferAttribute(vertices, 3));\n\n      _this68.setAttribute('uv', new Float32BufferAttribute(uvs, 2)); // generate normals\n\n\n      _this68.computeVertexNormals(); // if the geometry is closed, we need to average the normals along the seam.\n      // because the corresponding vertices are identical (but still have different UVs).\n\n\n      if (phiLength === Math.PI * 2) {\n        var normals = _this68.attributes.normal.array;\n        var n1 = new Vector3();\n        var n2 = new Vector3();\n        var n = new Vector3(); // this is the buffer offset for the last line of vertices\n\n        var _base = segments * points.length * 3;\n\n        for (var _i228 = 0, _j9 = 0; _i228 < points.length; _i228++, _j9 += 3) {\n          // select the normal of the vertex in the first line\n          n1.x = normals[_j9 + 0];\n          n1.y = normals[_j9 + 1];\n          n1.z = normals[_j9 + 2]; // select the normal of the vertex in the last line\n\n          n2.x = normals[_base + _j9 + 0];\n          n2.y = normals[_base + _j9 + 1];\n          n2.z = normals[_base + _j9 + 2]; // average normals\n\n          n.addVectors(n1, n2).normalize(); // assign the new values to both normals\n\n          normals[_j9 + 0] = normals[_base + _j9 + 0] = n.x;\n          normals[_j9 + 1] = normals[_base + _j9 + 1] = n.y;\n          normals[_j9 + 2] = normals[_base + _j9 + 2] = n.z;\n        }\n      }\n\n      return _this68;\n    }\n\n    _createClass(LatheGeometry, null, [{\n      key: \"fromJSON\",\n      value: function fromJSON(data) {\n        return new LatheGeometry(data.points, data.segments, data.phiStart, data.phiLength);\n      }\n    }]);\n\n    return LatheGeometry;\n  }(BufferGeometry);\n\n  var OctahedronGeometry = /*#__PURE__*/function (_PolyhedronGeometry3) {\n    _inherits(OctahedronGeometry, _PolyhedronGeometry3);\n\n    var _super79 = _createSuper(OctahedronGeometry);\n\n    function OctahedronGeometry() {\n      var _this69;\n\n      var radius = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n      var detail = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n\n      _classCallCheck(this, OctahedronGeometry);\n\n      var vertices = [1, 0, 0, -1, 0, 0, 0, 1, 0, 0, -1, 0, 0, 0, 1, 0, 0, -1];\n      var indices = [0, 2, 4, 0, 4, 3, 0, 3, 5, 0, 5, 2, 1, 2, 5, 1, 5, 3, 1, 3, 4, 1, 4, 2];\n      _this69 = _super79.call(this, vertices, indices, radius, detail);\n      _this69.type = 'OctahedronGeometry';\n      _this69.parameters = {\n        radius: radius,\n        detail: detail\n      };\n      return _this69;\n    }\n\n    _createClass(OctahedronGeometry, null, [{\n      key: \"fromJSON\",\n      value: function fromJSON(data) {\n        return new OctahedronGeometry(data.radius, data.detail);\n      }\n    }]);\n\n    return OctahedronGeometry;\n  }(PolyhedronGeometry);\n\n  var RingGeometry = /*#__PURE__*/function (_BufferGeometry9) {\n    _inherits(RingGeometry, _BufferGeometry9);\n\n    var _super80 = _createSuper(RingGeometry);\n\n    function RingGeometry() {\n      var _this70;\n\n      var innerRadius = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0.5;\n      var outerRadius = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n      var thetaSegments = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 8;\n      var phiSegments = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 1;\n      var thetaStart = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 0;\n      var thetaLength = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : Math.PI * 2;\n\n      _classCallCheck(this, RingGeometry);\n\n      _this70 = _super80.call(this);\n      _this70.type = 'RingGeometry';\n      _this70.parameters = {\n        innerRadius: innerRadius,\n        outerRadius: outerRadius,\n        thetaSegments: thetaSegments,\n        phiSegments: phiSegments,\n        thetaStart: thetaStart,\n        thetaLength: thetaLength\n      };\n      thetaSegments = Math.max(3, thetaSegments);\n      phiSegments = Math.max(1, phiSegments); // buffers\n\n      var indices = [];\n      var vertices = [];\n      var normals = [];\n      var uvs = []; // some helper variables\n\n      var radius = innerRadius;\n      var radiusStep = (outerRadius - innerRadius) / phiSegments;\n      var vertex = new Vector3();\n      var uv = new Vector2(); // generate vertices, normals and uvs\n\n      for (var j = 0; j <= phiSegments; j++) {\n        for (var _i229 = 0; _i229 <= thetaSegments; _i229++) {\n          // values are generate from the inside of the ring to the outside\n          var segment = thetaStart + _i229 / thetaSegments * thetaLength; // vertex\n\n          vertex.x = radius * Math.cos(segment);\n          vertex.y = radius * Math.sin(segment);\n          vertices.push(vertex.x, vertex.y, vertex.z); // normal\n\n          normals.push(0, 0, 1); // uv\n\n          uv.x = (vertex.x / outerRadius + 1) / 2;\n          uv.y = (vertex.y / outerRadius + 1) / 2;\n          uvs.push(uv.x, uv.y);\n        } // increase the radius for next row of vertices\n\n\n        radius += radiusStep;\n      } // indices\n\n\n      for (var _j10 = 0; _j10 < phiSegments; _j10++) {\n        var thetaSegmentLevel = _j10 * (thetaSegments + 1);\n\n        for (var _i230 = 0; _i230 < thetaSegments; _i230++) {\n          var _segment = _i230 + thetaSegmentLevel;\n\n          var a = _segment;\n          var b = _segment + thetaSegments + 1;\n          var c = _segment + thetaSegments + 2;\n          var d = _segment + 1; // faces\n\n          indices.push(a, b, d);\n          indices.push(b, c, d);\n        }\n      } // build geometry\n\n\n      _this70.setIndex(indices);\n\n      _this70.setAttribute('position', new Float32BufferAttribute(vertices, 3));\n\n      _this70.setAttribute('normal', new Float32BufferAttribute(normals, 3));\n\n      _this70.setAttribute('uv', new Float32BufferAttribute(uvs, 2));\n\n      return _this70;\n    }\n\n    _createClass(RingGeometry, null, [{\n      key: \"fromJSON\",\n      value: function fromJSON(data) {\n        return new RingGeometry(data.innerRadius, data.outerRadius, data.thetaSegments, data.phiSegments, data.thetaStart, data.thetaLength);\n      }\n    }]);\n\n    return RingGeometry;\n  }(BufferGeometry);\n\n  var ShapeGeometry = /*#__PURE__*/function (_BufferGeometry10) {\n    _inherits(ShapeGeometry, _BufferGeometry10);\n\n    var _super81 = _createSuper(ShapeGeometry);\n\n    function ShapeGeometry() {\n      var _this71;\n\n      var shapes = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : new Shape([new Vector2(0, 0.5), new Vector2(-0.5, -0.5), new Vector2(0.5, -0.5)]);\n      var curveSegments = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 12;\n\n      _classCallCheck(this, ShapeGeometry);\n\n      _this71 = _super81.call(this);\n      _this71.type = 'ShapeGeometry';\n      _this71.parameters = {\n        shapes: shapes,\n        curveSegments: curveSegments\n      }; // buffers\n\n      var indices = [];\n      var vertices = [];\n      var normals = [];\n      var uvs = []; // helper variables\n\n      var groupStart = 0;\n      var groupCount = 0; // allow single and array values for \"shapes\" parameter\n\n      if (Array.isArray(shapes) === false) {\n        addShape(shapes);\n      } else {\n        for (var _i231 = 0; _i231 < shapes.length; _i231++) {\n          addShape(shapes[_i231]);\n\n          _this71.addGroup(groupStart, groupCount, _i231); // enables MultiMaterial support\n\n\n          groupStart += groupCount;\n          groupCount = 0;\n        }\n      } // build geometry\n\n\n      _this71.setIndex(indices);\n\n      _this71.setAttribute('position', new Float32BufferAttribute(vertices, 3));\n\n      _this71.setAttribute('normal', new Float32BufferAttribute(normals, 3));\n\n      _this71.setAttribute('uv', new Float32BufferAttribute(uvs, 2)); // helper functions\n\n\n      function addShape(shape) {\n        var indexOffset = vertices.length / 3;\n        var points = shape.extractPoints(curveSegments);\n        var shapeVertices = points.shape;\n        var shapeHoles = points.holes; // check direction of vertices\n\n        if (ShapeUtils.isClockWise(shapeVertices) === false) {\n          shapeVertices = shapeVertices.reverse();\n        }\n\n        for (var _i232 = 0, l = shapeHoles.length; _i232 < l; _i232++) {\n          var shapeHole = shapeHoles[_i232];\n\n          if (ShapeUtils.isClockWise(shapeHole) === true) {\n            shapeHoles[_i232] = shapeHole.reverse();\n          }\n        }\n\n        var faces = ShapeUtils.triangulateShape(shapeVertices, shapeHoles); // join vertices of inner and outer paths to a single array\n\n        for (var _i233 = 0, _l7 = shapeHoles.length; _i233 < _l7; _i233++) {\n          var _shapeHole = shapeHoles[_i233];\n          shapeVertices = shapeVertices.concat(_shapeHole);\n        } // vertices, normals, uvs\n\n\n        for (var _i234 = 0, _l8 = shapeVertices.length; _i234 < _l8; _i234++) {\n          var _vertex = shapeVertices[_i234];\n          vertices.push(_vertex.x, _vertex.y, 0);\n          normals.push(0, 0, 1);\n          uvs.push(_vertex.x, _vertex.y); // world uvs\n        } // incides\n\n\n        for (var _i235 = 0, _l9 = faces.length; _i235 < _l9; _i235++) {\n          var face = faces[_i235];\n          var a = face[0] + indexOffset;\n          var b = face[1] + indexOffset;\n          var c = face[2] + indexOffset;\n          indices.push(a, b, c);\n          groupCount += 3;\n        }\n      }\n\n      return _this71;\n    }\n\n    _createClass(ShapeGeometry, [{\n      key: \"toJSON\",\n      value: function toJSON() {\n        var data = _get(_getPrototypeOf(ShapeGeometry.prototype), \"toJSON\", this).call(this);\n\n        var shapes = this.parameters.shapes;\n        return _toJSON(shapes, data);\n      }\n    }], [{\n      key: \"fromJSON\",\n      value: function fromJSON(data, shapes) {\n        var geometryShapes = [];\n\n        for (var j = 0, jl = data.shapes.length; j < jl; j++) {\n          var shape = shapes[data.shapes[j]];\n          geometryShapes.push(shape);\n        }\n\n        return new ShapeGeometry(geometryShapes, data.curveSegments);\n      }\n    }]);\n\n    return ShapeGeometry;\n  }(BufferGeometry);\n\n  function _toJSON(shapes, data) {\n    data.shapes = [];\n\n    if (Array.isArray(shapes)) {\n      for (var _i236 = 0, l = shapes.length; _i236 < l; _i236++) {\n        var shape = shapes[_i236];\n        data.shapes.push(shape.uuid);\n      }\n    } else {\n      data.shapes.push(shapes.uuid);\n    }\n\n    return data;\n  }\n\n  var SphereGeometry = /*#__PURE__*/function (_BufferGeometry11) {\n    _inherits(SphereGeometry, _BufferGeometry11);\n\n    var _super82 = _createSuper(SphereGeometry);\n\n    function SphereGeometry() {\n      var _this72;\n\n      var radius = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n      var widthSegments = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 32;\n      var heightSegments = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 16;\n      var phiStart = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0;\n      var phiLength = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : Math.PI * 2;\n      var thetaStart = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : 0;\n      var thetaLength = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : Math.PI;\n\n      _classCallCheck(this, SphereGeometry);\n\n      _this72 = _super82.call(this);\n      _this72.type = 'SphereGeometry';\n      _this72.parameters = {\n        radius: radius,\n        widthSegments: widthSegments,\n        heightSegments: heightSegments,\n        phiStart: phiStart,\n        phiLength: phiLength,\n        thetaStart: thetaStart,\n        thetaLength: thetaLength\n      };\n      widthSegments = Math.max(3, Math.floor(widthSegments));\n      heightSegments = Math.max(2, Math.floor(heightSegments));\n      var thetaEnd = Math.min(thetaStart + thetaLength, Math.PI);\n      var index = 0;\n      var grid = [];\n      var vertex = new Vector3();\n      var normal = new Vector3(); // buffers\n\n      var indices = [];\n      var vertices = [];\n      var normals = [];\n      var uvs = []; // generate vertices, normals and uvs\n\n      for (var iy = 0; iy <= heightSegments; iy++) {\n        var verticesRow = [];\n        var v = iy / heightSegments; // special case for the poles\n\n        var uOffset = 0;\n\n        if (iy == 0 && thetaStart == 0) {\n          uOffset = 0.5 / widthSegments;\n        } else if (iy == heightSegments && thetaEnd == Math.PI) {\n          uOffset = -0.5 / widthSegments;\n        }\n\n        for (var ix = 0; ix <= widthSegments; ix++) {\n          var u = ix / widthSegments; // vertex\n\n          vertex.x = -radius * Math.cos(phiStart + u * phiLength) * Math.sin(thetaStart + v * thetaLength);\n          vertex.y = radius * Math.cos(thetaStart + v * thetaLength);\n          vertex.z = radius * Math.sin(phiStart + u * phiLength) * Math.sin(thetaStart + v * thetaLength);\n          vertices.push(vertex.x, vertex.y, vertex.z); // normal\n\n          normal.copy(vertex).normalize();\n          normals.push(normal.x, normal.y, normal.z); // uv\n\n          uvs.push(u + uOffset, 1 - v);\n          verticesRow.push(index++);\n        }\n\n        grid.push(verticesRow);\n      } // indices\n\n\n      for (var _iy3 = 0; _iy3 < heightSegments; _iy3++) {\n        for (var _ix3 = 0; _ix3 < widthSegments; _ix3++) {\n          var a = grid[_iy3][_ix3 + 1];\n          var b = grid[_iy3][_ix3];\n          var c = grid[_iy3 + 1][_ix3];\n          var d = grid[_iy3 + 1][_ix3 + 1];\n          if (_iy3 !== 0 || thetaStart > 0) indices.push(a, b, d);\n          if (_iy3 !== heightSegments - 1 || thetaEnd < Math.PI) indices.push(b, c, d);\n        }\n      } // build geometry\n\n\n      _this72.setIndex(indices);\n\n      _this72.setAttribute('position', new Float32BufferAttribute(vertices, 3));\n\n      _this72.setAttribute('normal', new Float32BufferAttribute(normals, 3));\n\n      _this72.setAttribute('uv', new Float32BufferAttribute(uvs, 2));\n\n      return _this72;\n    }\n\n    _createClass(SphereGeometry, null, [{\n      key: \"fromJSON\",\n      value: function fromJSON(data) {\n        return new SphereGeometry(data.radius, data.widthSegments, data.heightSegments, data.phiStart, data.phiLength, data.thetaStart, data.thetaLength);\n      }\n    }]);\n\n    return SphereGeometry;\n  }(BufferGeometry);\n\n  var TetrahedronGeometry = /*#__PURE__*/function (_PolyhedronGeometry4) {\n    _inherits(TetrahedronGeometry, _PolyhedronGeometry4);\n\n    var _super83 = _createSuper(TetrahedronGeometry);\n\n    function TetrahedronGeometry() {\n      var _this73;\n\n      var radius = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n      var detail = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n\n      _classCallCheck(this, TetrahedronGeometry);\n\n      var vertices = [1, 1, 1, -1, -1, 1, -1, 1, -1, 1, -1, -1];\n      var indices = [2, 1, 0, 0, 3, 2, 1, 3, 0, 2, 3, 1];\n      _this73 = _super83.call(this, vertices, indices, radius, detail);\n      _this73.type = 'TetrahedronGeometry';\n      _this73.parameters = {\n        radius: radius,\n        detail: detail\n      };\n      return _this73;\n    }\n\n    _createClass(TetrahedronGeometry, null, [{\n      key: \"fromJSON\",\n      value: function fromJSON(data) {\n        return new TetrahedronGeometry(data.radius, data.detail);\n      }\n    }]);\n\n    return TetrahedronGeometry;\n  }(PolyhedronGeometry);\n\n  var TorusGeometry = /*#__PURE__*/function (_BufferGeometry12) {\n    _inherits(TorusGeometry, _BufferGeometry12);\n\n    var _super84 = _createSuper(TorusGeometry);\n\n    function TorusGeometry() {\n      var _this74;\n\n      var radius = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n      var tube = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0.4;\n      var radialSegments = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 8;\n      var tubularSegments = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 6;\n      var arc = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : Math.PI * 2;\n\n      _classCallCheck(this, TorusGeometry);\n\n      _this74 = _super84.call(this);\n      _this74.type = 'TorusGeometry';\n      _this74.parameters = {\n        radius: radius,\n        tube: tube,\n        radialSegments: radialSegments,\n        tubularSegments: tubularSegments,\n        arc: arc\n      };\n      radialSegments = Math.floor(radialSegments);\n      tubularSegments = Math.floor(tubularSegments); // buffers\n\n      var indices = [];\n      var vertices = [];\n      var normals = [];\n      var uvs = []; // helper variables\n\n      var center = new Vector3();\n      var vertex = new Vector3();\n      var normal = new Vector3(); // generate vertices, normals and uvs\n\n      for (var j = 0; j <= radialSegments; j++) {\n        for (var _i237 = 0; _i237 <= tubularSegments; _i237++) {\n          var u = _i237 / tubularSegments * arc;\n          var v = j / radialSegments * Math.PI * 2; // vertex\n\n          vertex.x = (radius + tube * Math.cos(v)) * Math.cos(u);\n          vertex.y = (radius + tube * Math.cos(v)) * Math.sin(u);\n          vertex.z = tube * Math.sin(v);\n          vertices.push(vertex.x, vertex.y, vertex.z); // normal\n\n          center.x = radius * Math.cos(u);\n          center.y = radius * Math.sin(u);\n          normal.subVectors(vertex, center).normalize();\n          normals.push(normal.x, normal.y, normal.z); // uv\n\n          uvs.push(_i237 / tubularSegments);\n          uvs.push(j / radialSegments);\n        }\n      } // generate indices\n\n\n      for (var _j11 = 1; _j11 <= radialSegments; _j11++) {\n        for (var _i238 = 1; _i238 <= tubularSegments; _i238++) {\n          // indices\n          var a = (tubularSegments + 1) * _j11 + _i238 - 1;\n          var b = (tubularSegments + 1) * (_j11 - 1) + _i238 - 1;\n          var c = (tubularSegments + 1) * (_j11 - 1) + _i238;\n          var d = (tubularSegments + 1) * _j11 + _i238; // faces\n\n          indices.push(a, b, d);\n          indices.push(b, c, d);\n        }\n      } // build geometry\n\n\n      _this74.setIndex(indices);\n\n      _this74.setAttribute('position', new Float32BufferAttribute(vertices, 3));\n\n      _this74.setAttribute('normal', new Float32BufferAttribute(normals, 3));\n\n      _this74.setAttribute('uv', new Float32BufferAttribute(uvs, 2));\n\n      return _this74;\n    }\n\n    _createClass(TorusGeometry, null, [{\n      key: \"fromJSON\",\n      value: function fromJSON(data) {\n        return new TorusGeometry(data.radius, data.tube, data.radialSegments, data.tubularSegments, data.arc);\n      }\n    }]);\n\n    return TorusGeometry;\n  }(BufferGeometry);\n\n  var TorusKnotGeometry = /*#__PURE__*/function (_BufferGeometry13) {\n    _inherits(TorusKnotGeometry, _BufferGeometry13);\n\n    var _super85 = _createSuper(TorusKnotGeometry);\n\n    function TorusKnotGeometry() {\n      var _this75;\n\n      var radius = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n      var tube = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0.4;\n      var tubularSegments = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 64;\n      var radialSegments = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 8;\n      var p = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 2;\n      var q = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : 3;\n\n      _classCallCheck(this, TorusKnotGeometry);\n\n      _this75 = _super85.call(this);\n      _this75.type = 'TorusKnotGeometry';\n      _this75.parameters = {\n        radius: radius,\n        tube: tube,\n        tubularSegments: tubularSegments,\n        radialSegments: radialSegments,\n        p: p,\n        q: q\n      };\n      tubularSegments = Math.floor(tubularSegments);\n      radialSegments = Math.floor(radialSegments); // buffers\n\n      var indices = [];\n      var vertices = [];\n      var normals = [];\n      var uvs = []; // helper variables\n\n      var vertex = new Vector3();\n      var normal = new Vector3();\n      var P1 = new Vector3();\n      var P2 = new Vector3();\n      var B = new Vector3();\n      var T = new Vector3();\n      var N = new Vector3(); // generate vertices, normals and uvs\n\n      for (var _i239 = 0; _i239 <= tubularSegments; ++_i239) {\n        // the radian \"u\" is used to calculate the position on the torus curve of the current tubular segement\n        var u = _i239 / tubularSegments * p * Math.PI * 2; // now we calculate two points. P1 is our current position on the curve, P2 is a little farther ahead.\n        // these points are used to create a special \"coordinate space\", which is necessary to calculate the correct vertex positions\n\n        calculatePositionOnCurve(u, p, q, radius, P1);\n        calculatePositionOnCurve(u + 0.01, p, q, radius, P2); // calculate orthonormal basis\n\n        T.subVectors(P2, P1);\n        N.addVectors(P2, P1);\n        B.crossVectors(T, N);\n        N.crossVectors(B, T); // normalize B, N. T can be ignored, we don't use it\n\n        B.normalize();\n        N.normalize();\n\n        for (var j = 0; j <= radialSegments; ++j) {\n          // now calculate the vertices. they are nothing more than an extrusion of the torus curve.\n          // because we extrude a shape in the xy-plane, there is no need to calculate a z-value.\n          var v = j / radialSegments * Math.PI * 2;\n          var cx = -tube * Math.cos(v);\n          var cy = tube * Math.sin(v); // now calculate the final vertex position.\n          // first we orient the extrusion with our basis vectos, then we add it to the current position on the curve\n\n          vertex.x = P1.x + (cx * N.x + cy * B.x);\n          vertex.y = P1.y + (cx * N.y + cy * B.y);\n          vertex.z = P1.z + (cx * N.z + cy * B.z);\n          vertices.push(vertex.x, vertex.y, vertex.z); // normal (P1 is always the center/origin of the extrusion, thus we can use it to calculate the normal)\n\n          normal.subVectors(vertex, P1).normalize();\n          normals.push(normal.x, normal.y, normal.z); // uv\n\n          uvs.push(_i239 / tubularSegments);\n          uvs.push(j / radialSegments);\n        }\n      } // generate indices\n\n\n      for (var _j12 = 1; _j12 <= tubularSegments; _j12++) {\n        for (var _i240 = 1; _i240 <= radialSegments; _i240++) {\n          // indices\n          var a = (radialSegments + 1) * (_j12 - 1) + (_i240 - 1);\n          var b = (radialSegments + 1) * _j12 + (_i240 - 1);\n          var c = (radialSegments + 1) * _j12 + _i240;\n          var d = (radialSegments + 1) * (_j12 - 1) + _i240; // faces\n\n          indices.push(a, b, d);\n          indices.push(b, c, d);\n        }\n      } // build geometry\n\n\n      _this75.setIndex(indices);\n\n      _this75.setAttribute('position', new Float32BufferAttribute(vertices, 3));\n\n      _this75.setAttribute('normal', new Float32BufferAttribute(normals, 3));\n\n      _this75.setAttribute('uv', new Float32BufferAttribute(uvs, 2)); // this function calculates the current position on the torus curve\n\n\n      function calculatePositionOnCurve(u, p, q, radius, position) {\n        var cu = Math.cos(u);\n        var su = Math.sin(u);\n        var quOverP = q / p * u;\n        var cs = Math.cos(quOverP);\n        position.x = radius * (2 + cs) * 0.5 * cu;\n        position.y = radius * (2 + cs) * su * 0.5;\n        position.z = radius * Math.sin(quOverP) * 0.5;\n      }\n\n      return _this75;\n    }\n\n    _createClass(TorusKnotGeometry, null, [{\n      key: \"fromJSON\",\n      value: function fromJSON(data) {\n        return new TorusKnotGeometry(data.radius, data.tube, data.tubularSegments, data.radialSegments, data.p, data.q);\n      }\n    }]);\n\n    return TorusKnotGeometry;\n  }(BufferGeometry);\n\n  var TubeGeometry = /*#__PURE__*/function (_BufferGeometry14) {\n    _inherits(TubeGeometry, _BufferGeometry14);\n\n    var _super86 = _createSuper(TubeGeometry);\n\n    function TubeGeometry() {\n      var _this76;\n\n      var path = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : new QuadraticBezierCurve3(new Vector3(-1, -1, 0), new Vector3(-1, 1, 0), new Vector3(1, 1, 0));\n      var tubularSegments = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 64;\n      var radius = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n      var radialSegments = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 8;\n      var closed = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : false;\n\n      _classCallCheck(this, TubeGeometry);\n\n      _this76 = _super86.call(this);\n      _this76.type = 'TubeGeometry';\n      _this76.parameters = {\n        path: path,\n        tubularSegments: tubularSegments,\n        radius: radius,\n        radialSegments: radialSegments,\n        closed: closed\n      };\n      var frames = path.computeFrenetFrames(tubularSegments, closed); // expose internals\n\n      _this76.tangents = frames.tangents;\n      _this76.normals = frames.normals;\n      _this76.binormals = frames.binormals; // helper variables\n\n      var vertex = new Vector3();\n      var normal = new Vector3();\n      var uv = new Vector2();\n      var P = new Vector3(); // buffer\n\n      var vertices = [];\n      var normals = [];\n      var uvs = [];\n      var indices = []; // create buffer data\n\n      generateBufferData(); // build geometry\n\n      _this76.setIndex(indices);\n\n      _this76.setAttribute('position', new Float32BufferAttribute(vertices, 3));\n\n      _this76.setAttribute('normal', new Float32BufferAttribute(normals, 3));\n\n      _this76.setAttribute('uv', new Float32BufferAttribute(uvs, 2)); // functions\n\n\n      function generateBufferData() {\n        for (var _i241 = 0; _i241 < tubularSegments; _i241++) {\n          generateSegment(_i241);\n        } // if the geometry is not closed, generate the last row of vertices and normals\n        // at the regular position on the given path\n        //\n        // if the geometry is closed, duplicate the first row of vertices and normals (uvs will differ)\n\n\n        generateSegment(closed === false ? tubularSegments : 0); // uvs are generated in a separate function.\n        // this makes it easy compute correct values for closed geometries\n\n        generateUVs(); // finally create faces\n\n        generateIndices();\n      }\n\n      function generateSegment(i) {\n        // we use getPointAt to sample evenly distributed points from the given path\n        P = path.getPointAt(i / tubularSegments, P); // retrieve corresponding normal and binormal\n\n        var N = frames.normals[i];\n        var B = frames.binormals[i]; // generate normals and vertices for the current segment\n\n        for (var j = 0; j <= radialSegments; j++) {\n          var v = j / radialSegments * Math.PI * 2;\n          var sin = Math.sin(v);\n          var cos = -Math.cos(v); // normal\n\n          normal.x = cos * N.x + sin * B.x;\n          normal.y = cos * N.y + sin * B.y;\n          normal.z = cos * N.z + sin * B.z;\n          normal.normalize();\n          normals.push(normal.x, normal.y, normal.z); // vertex\n\n          vertex.x = P.x + radius * normal.x;\n          vertex.y = P.y + radius * normal.y;\n          vertex.z = P.z + radius * normal.z;\n          vertices.push(vertex.x, vertex.y, vertex.z);\n        }\n      }\n\n      function generateIndices() {\n        for (var j = 1; j <= tubularSegments; j++) {\n          for (var _i242 = 1; _i242 <= radialSegments; _i242++) {\n            var a = (radialSegments + 1) * (j - 1) + (_i242 - 1);\n            var b = (radialSegments + 1) * j + (_i242 - 1);\n            var c = (radialSegments + 1) * j + _i242;\n            var d = (radialSegments + 1) * (j - 1) + _i242; // faces\n\n            indices.push(a, b, d);\n            indices.push(b, c, d);\n          }\n        }\n      }\n\n      function generateUVs() {\n        for (var _i243 = 0; _i243 <= tubularSegments; _i243++) {\n          for (var j = 0; j <= radialSegments; j++) {\n            uv.x = _i243 / tubularSegments;\n            uv.y = j / radialSegments;\n            uvs.push(uv.x, uv.y);\n          }\n        }\n      }\n\n      return _this76;\n    }\n\n    _createClass(TubeGeometry, [{\n      key: \"toJSON\",\n      value: function toJSON() {\n        var data = _get(_getPrototypeOf(TubeGeometry.prototype), \"toJSON\", this).call(this);\n\n        data.path = this.parameters.path.toJSON();\n        return data;\n      }\n    }], [{\n      key: \"fromJSON\",\n      value: function fromJSON(data) {\n        // This only works for built-in curves (e.g. CatmullRomCurve3).\n        // User defined curves or instances of CurvePath will not be deserialized.\n        return new TubeGeometry(new Curves[data.path.type]().fromJSON(data.path), data.tubularSegments, data.radius, data.radialSegments, data.closed);\n      }\n    }]);\n\n    return TubeGeometry;\n  }(BufferGeometry);\n\n  var WireframeGeometry = /*#__PURE__*/function (_BufferGeometry15) {\n    _inherits(WireframeGeometry, _BufferGeometry15);\n\n    var _super87 = _createSuper(WireframeGeometry);\n\n    function WireframeGeometry() {\n      var _this77;\n\n      var geometry = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n\n      _classCallCheck(this, WireframeGeometry);\n\n      _this77 = _super87.call(this);\n      _this77.type = 'WireframeGeometry';\n      _this77.parameters = {\n        geometry: geometry\n      };\n\n      if (geometry !== null) {\n        // buffer\n        var vertices = [];\n        var edges = new Set(); // helper variables\n\n        var start = new Vector3();\n        var end = new Vector3();\n\n        if (geometry.index !== null) {\n          // indexed BufferGeometry\n          var position = geometry.attributes.position;\n          var indices = geometry.index;\n          var groups = geometry.groups;\n\n          if (groups.length === 0) {\n            groups = [{\n              start: 0,\n              count: indices.count,\n              materialIndex: 0\n            }];\n          } // create a data structure that contains all eges without duplicates\n\n\n          for (var o = 0, ol = groups.length; o < ol; ++o) {\n            var group = groups[o];\n            var groupStart = group.start;\n            var groupCount = group.count;\n\n            for (var _i244 = groupStart, l = groupStart + groupCount; _i244 < l; _i244 += 3) {\n              for (var j = 0; j < 3; j++) {\n                var index1 = indices.getX(_i244 + j);\n                var index2 = indices.getX(_i244 + (j + 1) % 3);\n                start.fromBufferAttribute(position, index1);\n                end.fromBufferAttribute(position, index2);\n\n                if (isUniqueEdge(start, end, edges) === true) {\n                  vertices.push(start.x, start.y, start.z);\n                  vertices.push(end.x, end.y, end.z);\n                }\n              }\n            }\n          }\n        } else {\n          // non-indexed BufferGeometry\n          var _position2 = geometry.attributes.position;\n\n          for (var _i245 = 0, _l10 = _position2.count / 3; _i245 < _l10; _i245++) {\n            for (var _j13 = 0; _j13 < 3; _j13++) {\n              // three edges per triangle, an edge is represented as (index1, index2)\n              // e.g. the first triangle has the following edges: (0,1),(1,2),(2,0)\n              var _index = 3 * _i245 + _j13;\n\n              var _index2 = 3 * _i245 + (_j13 + 1) % 3;\n\n              start.fromBufferAttribute(_position2, _index);\n              end.fromBufferAttribute(_position2, _index2);\n\n              if (isUniqueEdge(start, end, edges) === true) {\n                vertices.push(start.x, start.y, start.z);\n                vertices.push(end.x, end.y, end.z);\n              }\n            }\n          }\n        } // build geometry\n\n\n        _this77.setAttribute('position', new Float32BufferAttribute(vertices, 3));\n      }\n\n      return _this77;\n    }\n\n    return WireframeGeometry;\n  }(BufferGeometry);\n\n  function isUniqueEdge(start, end, edges) {\n    var hash1 = \"\".concat(start.x, \",\").concat(start.y, \",\").concat(start.z, \"-\").concat(end.x, \",\").concat(end.y, \",\").concat(end.z);\n    var hash2 = \"\".concat(end.x, \",\").concat(end.y, \",\").concat(end.z, \"-\").concat(start.x, \",\").concat(start.y, \",\").concat(start.z); // coincident edge\n\n    if (edges.has(hash1) === true || edges.has(hash2) === true) {\n      return false;\n    } else {\n      edges.add(hash1, hash2);\n      return true;\n    }\n  }\n\n  var Geometries = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    BoxGeometry: BoxGeometry,\n    BoxBufferGeometry: BoxGeometry,\n    CircleGeometry: CircleGeometry,\n    CircleBufferGeometry: CircleGeometry,\n    ConeGeometry: ConeGeometry,\n    ConeBufferGeometry: ConeGeometry,\n    CylinderGeometry: CylinderGeometry,\n    CylinderBufferGeometry: CylinderGeometry,\n    DodecahedronGeometry: DodecahedronGeometry,\n    DodecahedronBufferGeometry: DodecahedronGeometry,\n    EdgesGeometry: EdgesGeometry,\n    ExtrudeGeometry: ExtrudeGeometry,\n    ExtrudeBufferGeometry: ExtrudeGeometry,\n    IcosahedronGeometry: IcosahedronGeometry,\n    IcosahedronBufferGeometry: IcosahedronGeometry,\n    LatheGeometry: LatheGeometry,\n    LatheBufferGeometry: LatheGeometry,\n    OctahedronGeometry: OctahedronGeometry,\n    OctahedronBufferGeometry: OctahedronGeometry,\n    PlaneGeometry: PlaneGeometry,\n    PlaneBufferGeometry: PlaneGeometry,\n    PolyhedronGeometry: PolyhedronGeometry,\n    PolyhedronBufferGeometry: PolyhedronGeometry,\n    RingGeometry: RingGeometry,\n    RingBufferGeometry: RingGeometry,\n    ShapeGeometry: ShapeGeometry,\n    ShapeBufferGeometry: ShapeGeometry,\n    SphereGeometry: SphereGeometry,\n    SphereBufferGeometry: SphereGeometry,\n    TetrahedronGeometry: TetrahedronGeometry,\n    TetrahedronBufferGeometry: TetrahedronGeometry,\n    TorusGeometry: TorusGeometry,\n    TorusBufferGeometry: TorusGeometry,\n    TorusKnotGeometry: TorusKnotGeometry,\n    TorusKnotBufferGeometry: TorusKnotGeometry,\n    TubeGeometry: TubeGeometry,\n    TubeBufferGeometry: TubeGeometry,\n    WireframeGeometry: WireframeGeometry\n  });\n  /**\n   * parameters = {\n   *\tcolor: <THREE.Color>\n   * }\n   */\n\n  var ShadowMaterial = /*#__PURE__*/function (_Material8) {\n    _inherits(ShadowMaterial, _Material8);\n\n    var _super88 = _createSuper(ShadowMaterial);\n\n    function ShadowMaterial(parameters) {\n      var _this78;\n\n      _classCallCheck(this, ShadowMaterial);\n\n      _this78 = _super88.call(this);\n      _this78.type = 'ShadowMaterial';\n      _this78.color = new Color(0x000000);\n      _this78.transparent = true;\n\n      _this78.setValues(parameters);\n\n      return _this78;\n    }\n\n    _createClass(ShadowMaterial, [{\n      key: \"copy\",\n      value: function copy(source) {\n        _get(_getPrototypeOf(ShadowMaterial.prototype), \"copy\", this).call(this, source);\n\n        this.color.copy(source.color);\n        return this;\n      }\n    }]);\n\n    return ShadowMaterial;\n  }(Material);\n\n  ShadowMaterial.prototype.isShadowMaterial = true;\n  /**\n   * parameters = {\n   *\tcolor: <hex>,\n   *\troughness: <float>,\n   *\tmetalness: <float>,\n   *\topacity: <float>,\n   *\n   *\tmap: new THREE.Texture( <Image> ),\n   *\n   *\tlightMap: new THREE.Texture( <Image> ),\n   *\tlightMapIntensity: <float>\n   *\n   *\taoMap: new THREE.Texture( <Image> ),\n   *\taoMapIntensity: <float>\n   *\n   *\temissive: <hex>,\n   *\temissiveIntensity: <float>\n   *\temissiveMap: new THREE.Texture( <Image> ),\n   *\n   *\tbumpMap: new THREE.Texture( <Image> ),\n   *\tbumpScale: <float>,\n   *\n   *\tnormalMap: new THREE.Texture( <Image> ),\n   *\tnormalMapType: THREE.TangentSpaceNormalMap,\n   *\tnormalScale: <Vector2>,\n   *\n   *\tdisplacementMap: new THREE.Texture( <Image> ),\n   *\tdisplacementScale: <float>,\n   *\tdisplacementBias: <float>,\n   *\n   *\troughnessMap: new THREE.Texture( <Image> ),\n   *\n   *\tmetalnessMap: new THREE.Texture( <Image> ),\n   *\n   *\talphaMap: new THREE.Texture( <Image> ),\n   *\n   *\tenvMap: new THREE.CubeTexture( [posx, negx, posy, negy, posz, negz] ),\n   *\tenvMapIntensity: <float>\n   *\n   *\trefractionRatio: <float>,\n   *\n   *\twireframe: <boolean>,\n   *\twireframeLinewidth: <float>,\n   *\n   *\tflatShading: <bool>\n   * }\n   */\n\n  var MeshStandardMaterial = /*#__PURE__*/function (_Material9) {\n    _inherits(MeshStandardMaterial, _Material9);\n\n    var _super89 = _createSuper(MeshStandardMaterial);\n\n    function MeshStandardMaterial(parameters) {\n      var _this79;\n\n      _classCallCheck(this, MeshStandardMaterial);\n\n      _this79 = _super89.call(this);\n      _this79.defines = {\n        'STANDARD': ''\n      };\n      _this79.type = 'MeshStandardMaterial';\n      _this79.color = new Color(0xffffff); // diffuse\n\n      _this79.roughness = 1.0;\n      _this79.metalness = 0.0;\n      _this79.map = null;\n      _this79.lightMap = null;\n      _this79.lightMapIntensity = 1.0;\n      _this79.aoMap = null;\n      _this79.aoMapIntensity = 1.0;\n      _this79.emissive = new Color(0x000000);\n      _this79.emissiveIntensity = 1.0;\n      _this79.emissiveMap = null;\n      _this79.bumpMap = null;\n      _this79.bumpScale = 1;\n      _this79.normalMap = null;\n      _this79.normalMapType = TangentSpaceNormalMap;\n      _this79.normalScale = new Vector2(1, 1);\n      _this79.displacementMap = null;\n      _this79.displacementScale = 1;\n      _this79.displacementBias = 0;\n      _this79.roughnessMap = null;\n      _this79.metalnessMap = null;\n      _this79.alphaMap = null;\n      _this79.envMap = null;\n      _this79.envMapIntensity = 1.0;\n      _this79.refractionRatio = 0.98;\n      _this79.wireframe = false;\n      _this79.wireframeLinewidth = 1;\n      _this79.wireframeLinecap = 'round';\n      _this79.wireframeLinejoin = 'round';\n      _this79.flatShading = false;\n\n      _this79.setValues(parameters);\n\n      return _this79;\n    }\n\n    _createClass(MeshStandardMaterial, [{\n      key: \"copy\",\n      value: function copy(source) {\n        _get(_getPrototypeOf(MeshStandardMaterial.prototype), \"copy\", this).call(this, source);\n\n        this.defines = {\n          'STANDARD': ''\n        };\n        this.color.copy(source.color);\n        this.roughness = source.roughness;\n        this.metalness = source.metalness;\n        this.map = source.map;\n        this.lightMap = source.lightMap;\n        this.lightMapIntensity = source.lightMapIntensity;\n        this.aoMap = source.aoMap;\n        this.aoMapIntensity = source.aoMapIntensity;\n        this.emissive.copy(source.emissive);\n        this.emissiveMap = source.emissiveMap;\n        this.emissiveIntensity = source.emissiveIntensity;\n        this.bumpMap = source.bumpMap;\n        this.bumpScale = source.bumpScale;\n        this.normalMap = source.normalMap;\n        this.normalMapType = source.normalMapType;\n        this.normalScale.copy(source.normalScale);\n        this.displacementMap = source.displacementMap;\n        this.displacementScale = source.displacementScale;\n        this.displacementBias = source.displacementBias;\n        this.roughnessMap = source.roughnessMap;\n        this.metalnessMap = source.metalnessMap;\n        this.alphaMap = source.alphaMap;\n        this.envMap = source.envMap;\n        this.envMapIntensity = source.envMapIntensity;\n        this.refractionRatio = source.refractionRatio;\n        this.wireframe = source.wireframe;\n        this.wireframeLinewidth = source.wireframeLinewidth;\n        this.wireframeLinecap = source.wireframeLinecap;\n        this.wireframeLinejoin = source.wireframeLinejoin;\n        this.flatShading = source.flatShading;\n        return this;\n      }\n    }]);\n\n    return MeshStandardMaterial;\n  }(Material);\n\n  MeshStandardMaterial.prototype.isMeshStandardMaterial = true;\n  /**\n   * parameters = {\n   *\tclearcoat: <float>,\n   *\tclearcoatMap: new THREE.Texture( <Image> ),\n   *\tclearcoatRoughness: <float>,\n   *\tclearcoatRoughnessMap: new THREE.Texture( <Image> ),\n   *\tclearcoatNormalScale: <Vector2>,\n   *\tclearcoatNormalMap: new THREE.Texture( <Image> ),\n   *\n   *\tior: <float>,\n   *\treflectivity: <float>,\n   *\n   *\tsheen: <float>,\n   *\tsheenColor: <Color>,\n   *\tsheenColorMap: new THREE.Texture( <Image> ),\n   *\tsheenRoughness: <float>,\n   *\tsheenRoughnessMap: new THREE.Texture( <Image> ),\n   *\n   *\ttransmission: <float>,\n   *\ttransmissionMap: new THREE.Texture( <Image> ),\n   *\n   *\tthickness: <float>,\n   *\tthicknessMap: new THREE.Texture( <Image> ),\n   *\tattenuationDistance: <float>,\n   *\tattenuationColor: <Color>,\n   *\n   *\tspecularIntensity: <float>,\n   *\tspecularIntensityMap: new THREE.Texture( <Image> ),\n   *\tspecularColor: <Color>,\n   *\tspecularColorMap: new THREE.Texture( <Image> )\n   * }\n   */\n\n  var MeshPhysicalMaterial = /*#__PURE__*/function (_MeshStandardMaterial) {\n    _inherits(MeshPhysicalMaterial, _MeshStandardMaterial);\n\n    var _super90 = _createSuper(MeshPhysicalMaterial);\n\n    function MeshPhysicalMaterial(parameters) {\n      var _this80;\n\n      _classCallCheck(this, MeshPhysicalMaterial);\n\n      _this80 = _super90.call(this);\n      _this80.defines = {\n        'STANDARD': '',\n        'PHYSICAL': ''\n      };\n      _this80.type = 'MeshPhysicalMaterial';\n      _this80.clearcoatMap = null;\n      _this80.clearcoatRoughness = 0.0;\n      _this80.clearcoatRoughnessMap = null;\n      _this80.clearcoatNormalScale = new Vector2(1, 1);\n      _this80.clearcoatNormalMap = null;\n      _this80.ior = 1.5;\n      Object.defineProperty(_assertThisInitialized(_this80), 'reflectivity', {\n        get: function get() {\n          return clamp(2.5 * (this.ior - 1) / (this.ior + 1), 0, 1);\n        },\n        set: function set(reflectivity) {\n          this.ior = (1 + 0.4 * reflectivity) / (1 - 0.4 * reflectivity);\n        }\n      });\n      _this80.sheenColor = new Color(0x000000);\n      _this80.sheenColorMap = null;\n      _this80.sheenRoughness = 1.0;\n      _this80.sheenRoughnessMap = null;\n      _this80.transmissionMap = null;\n      _this80.thickness = 0.01;\n      _this80.thicknessMap = null;\n      _this80.attenuationDistance = 0.0;\n      _this80.attenuationColor = new Color(1, 1, 1);\n      _this80.specularIntensity = 1.0;\n      _this80.specularIntensityMap = null;\n      _this80.specularColor = new Color(1, 1, 1);\n      _this80.specularColorMap = null;\n      _this80._sheen = 0.0;\n      _this80._clearcoat = 0;\n      _this80._transmission = 0;\n\n      _this80.setValues(parameters);\n\n      return _this80;\n    }\n\n    _createClass(MeshPhysicalMaterial, [{\n      key: \"sheen\",\n      get: function get() {\n        return this._sheen;\n      },\n      set: function set(value) {\n        if (this._sheen > 0 !== value > 0) {\n          this.version++;\n        }\n\n        this._sheen = value;\n      }\n    }, {\n      key: \"clearcoat\",\n      get: function get() {\n        return this._clearcoat;\n      },\n      set: function set(value) {\n        if (this._clearcoat > 0 !== value > 0) {\n          this.version++;\n        }\n\n        this._clearcoat = value;\n      }\n    }, {\n      key: \"transmission\",\n      get: function get() {\n        return this._transmission;\n      },\n      set: function set(value) {\n        if (this._transmission > 0 !== value > 0) {\n          this.version++;\n        }\n\n        this._transmission = value;\n      }\n    }, {\n      key: \"copy\",\n      value: function copy(source) {\n        _get(_getPrototypeOf(MeshPhysicalMaterial.prototype), \"copy\", this).call(this, source);\n\n        this.defines = {\n          'STANDARD': '',\n          'PHYSICAL': ''\n        };\n        this.clearcoat = source.clearcoat;\n        this.clearcoatMap = source.clearcoatMap;\n        this.clearcoatRoughness = source.clearcoatRoughness;\n        this.clearcoatRoughnessMap = source.clearcoatRoughnessMap;\n        this.clearcoatNormalMap = source.clearcoatNormalMap;\n        this.clearcoatNormalScale.copy(source.clearcoatNormalScale);\n        this.ior = source.ior;\n        this.sheen = source.sheen;\n        this.sheenColor.copy(source.sheenColor);\n        this.sheenColorMap = source.sheenColorMap;\n        this.sheenRoughness = source.sheenRoughness;\n        this.sheenRoughnessMap = source.sheenRoughnessMap;\n        this.transmission = source.transmission;\n        this.transmissionMap = source.transmissionMap;\n        this.thickness = source.thickness;\n        this.thicknessMap = source.thicknessMap;\n        this.attenuationDistance = source.attenuationDistance;\n        this.attenuationColor.copy(source.attenuationColor);\n        this.specularIntensity = source.specularIntensity;\n        this.specularIntensityMap = source.specularIntensityMap;\n        this.specularColor.copy(source.specularColor);\n        this.specularColorMap = source.specularColorMap;\n        return this;\n      }\n    }]);\n\n    return MeshPhysicalMaterial;\n  }(MeshStandardMaterial);\n\n  MeshPhysicalMaterial.prototype.isMeshPhysicalMaterial = true;\n  /**\n   * parameters = {\n   *\tcolor: <hex>,\n   *\tspecular: <hex>,\n   *\tshininess: <float>,\n   *\topacity: <float>,\n   *\n   *\tmap: new THREE.Texture( <Image> ),\n   *\n   *\tlightMap: new THREE.Texture( <Image> ),\n   *\tlightMapIntensity: <float>\n   *\n   *\taoMap: new THREE.Texture( <Image> ),\n   *\taoMapIntensity: <float>\n   *\n   *\temissive: <hex>,\n   *\temissiveIntensity: <float>\n   *\temissiveMap: new THREE.Texture( <Image> ),\n   *\n   *\tbumpMap: new THREE.Texture( <Image> ),\n   *\tbumpScale: <float>,\n   *\n   *\tnormalMap: new THREE.Texture( <Image> ),\n   *\tnormalMapType: THREE.TangentSpaceNormalMap,\n   *\tnormalScale: <Vector2>,\n   *\n   *\tdisplacementMap: new THREE.Texture( <Image> ),\n   *\tdisplacementScale: <float>,\n   *\tdisplacementBias: <float>,\n   *\n   *\tspecularMap: new THREE.Texture( <Image> ),\n   *\n   *\talphaMap: new THREE.Texture( <Image> ),\n   *\n   *\tenvMap: new THREE.CubeTexture( [posx, negx, posy, negy, posz, negz] ),\n   *\tcombine: THREE.MultiplyOperation,\n   *\treflectivity: <float>,\n   *\trefractionRatio: <float>,\n   *\n   *\twireframe: <boolean>,\n   *\twireframeLinewidth: <float>,\n   *\n   *\tflatShading: <bool>\n   * }\n   */\n\n  var MeshPhongMaterial = /*#__PURE__*/function (_Material10) {\n    _inherits(MeshPhongMaterial, _Material10);\n\n    var _super91 = _createSuper(MeshPhongMaterial);\n\n    function MeshPhongMaterial(parameters) {\n      var _this81;\n\n      _classCallCheck(this, MeshPhongMaterial);\n\n      _this81 = _super91.call(this);\n      _this81.type = 'MeshPhongMaterial';\n      _this81.color = new Color(0xffffff); // diffuse\n\n      _this81.specular = new Color(0x111111);\n      _this81.shininess = 30;\n      _this81.map = null;\n      _this81.lightMap = null;\n      _this81.lightMapIntensity = 1.0;\n      _this81.aoMap = null;\n      _this81.aoMapIntensity = 1.0;\n      _this81.emissive = new Color(0x000000);\n      _this81.emissiveIntensity = 1.0;\n      _this81.emissiveMap = null;\n      _this81.bumpMap = null;\n      _this81.bumpScale = 1;\n      _this81.normalMap = null;\n      _this81.normalMapType = TangentSpaceNormalMap;\n      _this81.normalScale = new Vector2(1, 1);\n      _this81.displacementMap = null;\n      _this81.displacementScale = 1;\n      _this81.displacementBias = 0;\n      _this81.specularMap = null;\n      _this81.alphaMap = null;\n      _this81.envMap = null;\n      _this81.combine = MultiplyOperation;\n      _this81.reflectivity = 1;\n      _this81.refractionRatio = 0.98;\n      _this81.wireframe = false;\n      _this81.wireframeLinewidth = 1;\n      _this81.wireframeLinecap = 'round';\n      _this81.wireframeLinejoin = 'round';\n      _this81.flatShading = false;\n\n      _this81.setValues(parameters);\n\n      return _this81;\n    }\n\n    _createClass(MeshPhongMaterial, [{\n      key: \"copy\",\n      value: function copy(source) {\n        _get(_getPrototypeOf(MeshPhongMaterial.prototype), \"copy\", this).call(this, source);\n\n        this.color.copy(source.color);\n        this.specular.copy(source.specular);\n        this.shininess = source.shininess;\n        this.map = source.map;\n        this.lightMap = source.lightMap;\n        this.lightMapIntensity = source.lightMapIntensity;\n        this.aoMap = source.aoMap;\n        this.aoMapIntensity = source.aoMapIntensity;\n        this.emissive.copy(source.emissive);\n        this.emissiveMap = source.emissiveMap;\n        this.emissiveIntensity = source.emissiveIntensity;\n        this.bumpMap = source.bumpMap;\n        this.bumpScale = source.bumpScale;\n        this.normalMap = source.normalMap;\n        this.normalMapType = source.normalMapType;\n        this.normalScale.copy(source.normalScale);\n        this.displacementMap = source.displacementMap;\n        this.displacementScale = source.displacementScale;\n        this.displacementBias = source.displacementBias;\n        this.specularMap = source.specularMap;\n        this.alphaMap = source.alphaMap;\n        this.envMap = source.envMap;\n        this.combine = source.combine;\n        this.reflectivity = source.reflectivity;\n        this.refractionRatio = source.refractionRatio;\n        this.wireframe = source.wireframe;\n        this.wireframeLinewidth = source.wireframeLinewidth;\n        this.wireframeLinecap = source.wireframeLinecap;\n        this.wireframeLinejoin = source.wireframeLinejoin;\n        this.flatShading = source.flatShading;\n        return this;\n      }\n    }]);\n\n    return MeshPhongMaterial;\n  }(Material);\n\n  MeshPhongMaterial.prototype.isMeshPhongMaterial = true;\n  /**\n   * parameters = {\n   *\tcolor: <hex>,\n   *\n   *\tmap: new THREE.Texture( <Image> ),\n   *\tgradientMap: new THREE.Texture( <Image> ),\n   *\n   *\tlightMap: new THREE.Texture( <Image> ),\n   *\tlightMapIntensity: <float>\n   *\n   *\taoMap: new THREE.Texture( <Image> ),\n   *\taoMapIntensity: <float>\n   *\n   *\temissive: <hex>,\n   *\temissiveIntensity: <float>\n   *\temissiveMap: new THREE.Texture( <Image> ),\n   *\n   *\tbumpMap: new THREE.Texture( <Image> ),\n   *\tbumpScale: <float>,\n   *\n   *\tnormalMap: new THREE.Texture( <Image> ),\n   *\tnormalMapType: THREE.TangentSpaceNormalMap,\n   *\tnormalScale: <Vector2>,\n   *\n   *\tdisplacementMap: new THREE.Texture( <Image> ),\n   *\tdisplacementScale: <float>,\n   *\tdisplacementBias: <float>,\n   *\n   *\talphaMap: new THREE.Texture( <Image> ),\n   *\n   *\twireframe: <boolean>,\n   *\twireframeLinewidth: <float>,\n   *\n   * }\n   */\n\n  var MeshToonMaterial = /*#__PURE__*/function (_Material11) {\n    _inherits(MeshToonMaterial, _Material11);\n\n    var _super92 = _createSuper(MeshToonMaterial);\n\n    function MeshToonMaterial(parameters) {\n      var _this82;\n\n      _classCallCheck(this, MeshToonMaterial);\n\n      _this82 = _super92.call(this);\n      _this82.defines = {\n        'TOON': ''\n      };\n      _this82.type = 'MeshToonMaterial';\n      _this82.color = new Color(0xffffff);\n      _this82.map = null;\n      _this82.gradientMap = null;\n      _this82.lightMap = null;\n      _this82.lightMapIntensity = 1.0;\n      _this82.aoMap = null;\n      _this82.aoMapIntensity = 1.0;\n      _this82.emissive = new Color(0x000000);\n      _this82.emissiveIntensity = 1.0;\n      _this82.emissiveMap = null;\n      _this82.bumpMap = null;\n      _this82.bumpScale = 1;\n      _this82.normalMap = null;\n      _this82.normalMapType = TangentSpaceNormalMap;\n      _this82.normalScale = new Vector2(1, 1);\n      _this82.displacementMap = null;\n      _this82.displacementScale = 1;\n      _this82.displacementBias = 0;\n      _this82.alphaMap = null;\n      _this82.wireframe = false;\n      _this82.wireframeLinewidth = 1;\n      _this82.wireframeLinecap = 'round';\n      _this82.wireframeLinejoin = 'round';\n\n      _this82.setValues(parameters);\n\n      return _this82;\n    }\n\n    _createClass(MeshToonMaterial, [{\n      key: \"copy\",\n      value: function copy(source) {\n        _get(_getPrototypeOf(MeshToonMaterial.prototype), \"copy\", this).call(this, source);\n\n        this.color.copy(source.color);\n        this.map = source.map;\n        this.gradientMap = source.gradientMap;\n        this.lightMap = source.lightMap;\n        this.lightMapIntensity = source.lightMapIntensity;\n        this.aoMap = source.aoMap;\n        this.aoMapIntensity = source.aoMapIntensity;\n        this.emissive.copy(source.emissive);\n        this.emissiveMap = source.emissiveMap;\n        this.emissiveIntensity = source.emissiveIntensity;\n        this.bumpMap = source.bumpMap;\n        this.bumpScale = source.bumpScale;\n        this.normalMap = source.normalMap;\n        this.normalMapType = source.normalMapType;\n        this.normalScale.copy(source.normalScale);\n        this.displacementMap = source.displacementMap;\n        this.displacementScale = source.displacementScale;\n        this.displacementBias = source.displacementBias;\n        this.alphaMap = source.alphaMap;\n        this.wireframe = source.wireframe;\n        this.wireframeLinewidth = source.wireframeLinewidth;\n        this.wireframeLinecap = source.wireframeLinecap;\n        this.wireframeLinejoin = source.wireframeLinejoin;\n        return this;\n      }\n    }]);\n\n    return MeshToonMaterial;\n  }(Material);\n\n  MeshToonMaterial.prototype.isMeshToonMaterial = true;\n  /**\n   * parameters = {\n   *\topacity: <float>,\n   *\n   *\tbumpMap: new THREE.Texture( <Image> ),\n   *\tbumpScale: <float>,\n   *\n   *\tnormalMap: new THREE.Texture( <Image> ),\n   *\tnormalMapType: THREE.TangentSpaceNormalMap,\n   *\tnormalScale: <Vector2>,\n   *\n   *\tdisplacementMap: new THREE.Texture( <Image> ),\n   *\tdisplacementScale: <float>,\n   *\tdisplacementBias: <float>,\n   *\n   *\twireframe: <boolean>,\n   *\twireframeLinewidth: <float>\n   *\n   *\tflatShading: <bool>\n   * }\n   */\n\n  var MeshNormalMaterial = /*#__PURE__*/function (_Material12) {\n    _inherits(MeshNormalMaterial, _Material12);\n\n    var _super93 = _createSuper(MeshNormalMaterial);\n\n    function MeshNormalMaterial(parameters) {\n      var _this83;\n\n      _classCallCheck(this, MeshNormalMaterial);\n\n      _this83 = _super93.call(this);\n      _this83.type = 'MeshNormalMaterial';\n      _this83.bumpMap = null;\n      _this83.bumpScale = 1;\n      _this83.normalMap = null;\n      _this83.normalMapType = TangentSpaceNormalMap;\n      _this83.normalScale = new Vector2(1, 1);\n      _this83.displacementMap = null;\n      _this83.displacementScale = 1;\n      _this83.displacementBias = 0;\n      _this83.wireframe = false;\n      _this83.wireframeLinewidth = 1;\n      _this83.fog = false;\n      _this83.flatShading = false;\n\n      _this83.setValues(parameters);\n\n      return _this83;\n    }\n\n    _createClass(MeshNormalMaterial, [{\n      key: \"copy\",\n      value: function copy(source) {\n        _get(_getPrototypeOf(MeshNormalMaterial.prototype), \"copy\", this).call(this, source);\n\n        this.bumpMap = source.bumpMap;\n        this.bumpScale = source.bumpScale;\n        this.normalMap = source.normalMap;\n        this.normalMapType = source.normalMapType;\n        this.normalScale.copy(source.normalScale);\n        this.displacementMap = source.displacementMap;\n        this.displacementScale = source.displacementScale;\n        this.displacementBias = source.displacementBias;\n        this.wireframe = source.wireframe;\n        this.wireframeLinewidth = source.wireframeLinewidth;\n        this.flatShading = source.flatShading;\n        return this;\n      }\n    }]);\n\n    return MeshNormalMaterial;\n  }(Material);\n\n  MeshNormalMaterial.prototype.isMeshNormalMaterial = true;\n  /**\n   * parameters = {\n   *\tcolor: <hex>,\n   *\topacity: <float>,\n   *\n   *\tmap: new THREE.Texture( <Image> ),\n   *\n   *\tlightMap: new THREE.Texture( <Image> ),\n   *\tlightMapIntensity: <float>\n   *\n   *\taoMap: new THREE.Texture( <Image> ),\n   *\taoMapIntensity: <float>\n   *\n   *\temissive: <hex>,\n   *\temissiveIntensity: <float>\n   *\temissiveMap: new THREE.Texture( <Image> ),\n   *\n   *\tspecularMap: new THREE.Texture( <Image> ),\n   *\n   *\talphaMap: new THREE.Texture( <Image> ),\n   *\n   *\tenvMap: new THREE.CubeTexture( [posx, negx, posy, negy, posz, negz] ),\n   *\tcombine: THREE.Multiply,\n   *\treflectivity: <float>,\n   *\trefractionRatio: <float>,\n   *\n   *\twireframe: <boolean>,\n   *\twireframeLinewidth: <float>,\n   *\n   * }\n   */\n\n  var MeshLambertMaterial = /*#__PURE__*/function (_Material13) {\n    _inherits(MeshLambertMaterial, _Material13);\n\n    var _super94 = _createSuper(MeshLambertMaterial);\n\n    function MeshLambertMaterial(parameters) {\n      var _this84;\n\n      _classCallCheck(this, MeshLambertMaterial);\n\n      _this84 = _super94.call(this);\n      _this84.type = 'MeshLambertMaterial';\n      _this84.color = new Color(0xffffff); // diffuse\n\n      _this84.map = null;\n      _this84.lightMap = null;\n      _this84.lightMapIntensity = 1.0;\n      _this84.aoMap = null;\n      _this84.aoMapIntensity = 1.0;\n      _this84.emissive = new Color(0x000000);\n      _this84.emissiveIntensity = 1.0;\n      _this84.emissiveMap = null;\n      _this84.specularMap = null;\n      _this84.alphaMap = null;\n      _this84.envMap = null;\n      _this84.combine = MultiplyOperation;\n      _this84.reflectivity = 1;\n      _this84.refractionRatio = 0.98;\n      _this84.wireframe = false;\n      _this84.wireframeLinewidth = 1;\n      _this84.wireframeLinecap = 'round';\n      _this84.wireframeLinejoin = 'round';\n\n      _this84.setValues(parameters);\n\n      return _this84;\n    }\n\n    _createClass(MeshLambertMaterial, [{\n      key: \"copy\",\n      value: function copy(source) {\n        _get(_getPrototypeOf(MeshLambertMaterial.prototype), \"copy\", this).call(this, source);\n\n        this.color.copy(source.color);\n        this.map = source.map;\n        this.lightMap = source.lightMap;\n        this.lightMapIntensity = source.lightMapIntensity;\n        this.aoMap = source.aoMap;\n        this.aoMapIntensity = source.aoMapIntensity;\n        this.emissive.copy(source.emissive);\n        this.emissiveMap = source.emissiveMap;\n        this.emissiveIntensity = source.emissiveIntensity;\n        this.specularMap = source.specularMap;\n        this.alphaMap = source.alphaMap;\n        this.envMap = source.envMap;\n        this.combine = source.combine;\n        this.reflectivity = source.reflectivity;\n        this.refractionRatio = source.refractionRatio;\n        this.wireframe = source.wireframe;\n        this.wireframeLinewidth = source.wireframeLinewidth;\n        this.wireframeLinecap = source.wireframeLinecap;\n        this.wireframeLinejoin = source.wireframeLinejoin;\n        return this;\n      }\n    }]);\n\n    return MeshLambertMaterial;\n  }(Material);\n\n  MeshLambertMaterial.prototype.isMeshLambertMaterial = true;\n  /**\n   * parameters = {\n   *\tcolor: <hex>,\n   *\topacity: <float>,\n   *\n   *\tmatcap: new THREE.Texture( <Image> ),\n   *\n   *\tmap: new THREE.Texture( <Image> ),\n   *\n   *\tbumpMap: new THREE.Texture( <Image> ),\n   *\tbumpScale: <float>,\n   *\n   *\tnormalMap: new THREE.Texture( <Image> ),\n   *\tnormalMapType: THREE.TangentSpaceNormalMap,\n   *\tnormalScale: <Vector2>,\n   *\n   *\tdisplacementMap: new THREE.Texture( <Image> ),\n   *\tdisplacementScale: <float>,\n   *\tdisplacementBias: <float>,\n   *\n   *\talphaMap: new THREE.Texture( <Image> ),\n   *\n   *\tflatShading: <bool>\n   * }\n   */\n\n  var MeshMatcapMaterial = /*#__PURE__*/function (_Material14) {\n    _inherits(MeshMatcapMaterial, _Material14);\n\n    var _super95 = _createSuper(MeshMatcapMaterial);\n\n    function MeshMatcapMaterial(parameters) {\n      var _this85;\n\n      _classCallCheck(this, MeshMatcapMaterial);\n\n      _this85 = _super95.call(this);\n      _this85.defines = {\n        'MATCAP': ''\n      };\n      _this85.type = 'MeshMatcapMaterial';\n      _this85.color = new Color(0xffffff); // diffuse\n\n      _this85.matcap = null;\n      _this85.map = null;\n      _this85.bumpMap = null;\n      _this85.bumpScale = 1;\n      _this85.normalMap = null;\n      _this85.normalMapType = TangentSpaceNormalMap;\n      _this85.normalScale = new Vector2(1, 1);\n      _this85.displacementMap = null;\n      _this85.displacementScale = 1;\n      _this85.displacementBias = 0;\n      _this85.alphaMap = null;\n      _this85.flatShading = false;\n\n      _this85.setValues(parameters);\n\n      return _this85;\n    }\n\n    _createClass(MeshMatcapMaterial, [{\n      key: \"copy\",\n      value: function copy(source) {\n        _get(_getPrototypeOf(MeshMatcapMaterial.prototype), \"copy\", this).call(this, source);\n\n        this.defines = {\n          'MATCAP': ''\n        };\n        this.color.copy(source.color);\n        this.matcap = source.matcap;\n        this.map = source.map;\n        this.bumpMap = source.bumpMap;\n        this.bumpScale = source.bumpScale;\n        this.normalMap = source.normalMap;\n        this.normalMapType = source.normalMapType;\n        this.normalScale.copy(source.normalScale);\n        this.displacementMap = source.displacementMap;\n        this.displacementScale = source.displacementScale;\n        this.displacementBias = source.displacementBias;\n        this.alphaMap = source.alphaMap;\n        this.flatShading = source.flatShading;\n        return this;\n      }\n    }]);\n\n    return MeshMatcapMaterial;\n  }(Material);\n\n  MeshMatcapMaterial.prototype.isMeshMatcapMaterial = true;\n  /**\n   * parameters = {\n   *\tcolor: <hex>,\n   *\topacity: <float>,\n   *\n   *\tlinewidth: <float>,\n   *\n   *\tscale: <float>,\n   *\tdashSize: <float>,\n   *\tgapSize: <float>\n   * }\n   */\n\n  var LineDashedMaterial = /*#__PURE__*/function (_LineBasicMaterial) {\n    _inherits(LineDashedMaterial, _LineBasicMaterial);\n\n    var _super96 = _createSuper(LineDashedMaterial);\n\n    function LineDashedMaterial(parameters) {\n      var _this86;\n\n      _classCallCheck(this, LineDashedMaterial);\n\n      _this86 = _super96.call(this);\n      _this86.type = 'LineDashedMaterial';\n      _this86.scale = 1;\n      _this86.dashSize = 3;\n      _this86.gapSize = 1;\n\n      _this86.setValues(parameters);\n\n      return _this86;\n    }\n\n    _createClass(LineDashedMaterial, [{\n      key: \"copy\",\n      value: function copy(source) {\n        _get(_getPrototypeOf(LineDashedMaterial.prototype), \"copy\", this).call(this, source);\n\n        this.scale = source.scale;\n        this.dashSize = source.dashSize;\n        this.gapSize = source.gapSize;\n        return this;\n      }\n    }]);\n\n    return LineDashedMaterial;\n  }(LineBasicMaterial);\n\n  LineDashedMaterial.prototype.isLineDashedMaterial = true;\n  var Materials = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    ShadowMaterial: ShadowMaterial,\n    SpriteMaterial: SpriteMaterial,\n    RawShaderMaterial: RawShaderMaterial,\n    ShaderMaterial: ShaderMaterial,\n    PointsMaterial: PointsMaterial,\n    MeshPhysicalMaterial: MeshPhysicalMaterial,\n    MeshStandardMaterial: MeshStandardMaterial,\n    MeshPhongMaterial: MeshPhongMaterial,\n    MeshToonMaterial: MeshToonMaterial,\n    MeshNormalMaterial: MeshNormalMaterial,\n    MeshLambertMaterial: MeshLambertMaterial,\n    MeshDepthMaterial: MeshDepthMaterial,\n    MeshDistanceMaterial: MeshDistanceMaterial,\n    MeshBasicMaterial: MeshBasicMaterial,\n    MeshMatcapMaterial: MeshMatcapMaterial,\n    LineDashedMaterial: LineDashedMaterial,\n    LineBasicMaterial: LineBasicMaterial,\n    Material: Material\n  });\n  var AnimationUtils = {\n    // same as Array.prototype.slice, but also works on typed arrays\n    arraySlice: function arraySlice(array, from, to) {\n      if (AnimationUtils.isTypedArray(array)) {\n        // in ios9 array.subarray(from, undefined) will return empty array\n        // but array.subarray(from) or array.subarray(from, len) is correct\n        return new array.constructor(array.subarray(from, to !== undefined ? to : array.length));\n      }\n\n      return array.slice(from, to);\n    },\n    // converts an array to a specific type\n    convertArray: function convertArray(array, type, forceClone) {\n      if (!array || // let 'undefined' and 'null' pass\n      !forceClone && array.constructor === type) return array;\n\n      if (typeof type.BYTES_PER_ELEMENT === 'number') {\n        return new type(array); // create typed array\n      }\n\n      return Array.prototype.slice.call(array); // create Array\n    },\n    isTypedArray: function isTypedArray(object) {\n      return ArrayBuffer.isView(object) && !(object instanceof DataView);\n    },\n    // returns an array by which times and values can be sorted\n    getKeyframeOrder: function getKeyframeOrder(times) {\n      function compareTime(i, j) {\n        return times[i] - times[j];\n      }\n\n      var n = times.length;\n      var result = new Array(n);\n\n      for (var _i246 = 0; _i246 !== n; ++_i246) {\n        result[_i246] = _i246;\n      }\n\n      result.sort(compareTime);\n      return result;\n    },\n    // uses the array previously returned by 'getKeyframeOrder' to sort data\n    sortedArray: function sortedArray(values, stride, order) {\n      var nValues = values.length;\n      var result = new values.constructor(nValues);\n\n      for (var _i247 = 0, dstOffset = 0; dstOffset !== nValues; ++_i247) {\n        var srcOffset = order[_i247] * stride;\n\n        for (var j = 0; j !== stride; ++j) {\n          result[dstOffset++] = values[srcOffset + j];\n        }\n      }\n\n      return result;\n    },\n    // function for parsing AOS keyframe formats\n    flattenJSON: function flattenJSON(jsonKeys, times, values, valuePropertyName) {\n      var i = 1,\n          key = jsonKeys[0];\n\n      while (key !== undefined && key[valuePropertyName] === undefined) {\n        key = jsonKeys[i++];\n      }\n\n      if (key === undefined) return; // no data\n\n      var value = key[valuePropertyName];\n      if (value === undefined) return; // no data\n\n      if (Array.isArray(value)) {\n        do {\n          value = key[valuePropertyName];\n\n          if (value !== undefined) {\n            times.push(key.time);\n            values.push.apply(values, value); // push all elements\n          }\n\n          key = jsonKeys[i++];\n        } while (key !== undefined);\n      } else if (value.toArray !== undefined) {\n        // ...assume THREE.Math-ish\n        do {\n          value = key[valuePropertyName];\n\n          if (value !== undefined) {\n            times.push(key.time);\n            value.toArray(values, values.length);\n          }\n\n          key = jsonKeys[i++];\n        } while (key !== undefined);\n      } else {\n        // otherwise push as-is\n        do {\n          value = key[valuePropertyName];\n\n          if (value !== undefined) {\n            times.push(key.time);\n            values.push(value);\n          }\n\n          key = jsonKeys[i++];\n        } while (key !== undefined);\n      }\n    },\n    subclip: function subclip(sourceClip, name, startFrame, endFrame) {\n      var fps = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 30;\n      var clip = sourceClip.clone();\n      clip.name = name;\n      var tracks = [];\n\n      for (var _i248 = 0; _i248 < clip.tracks.length; ++_i248) {\n        var track = clip.tracks[_i248];\n        var valueSize = track.getValueSize();\n        var times = [];\n        var values = [];\n\n        for (var j = 0; j < track.times.length; ++j) {\n          var frame = track.times[j] * fps;\n          if (frame < startFrame || frame >= endFrame) continue;\n          times.push(track.times[j]);\n\n          for (var k = 0; k < valueSize; ++k) {\n            values.push(track.values[j * valueSize + k]);\n          }\n        }\n\n        if (times.length === 0) continue;\n        track.times = AnimationUtils.convertArray(times, track.times.constructor);\n        track.values = AnimationUtils.convertArray(values, track.values.constructor);\n        tracks.push(track);\n      }\n\n      clip.tracks = tracks; // find minimum .times value across all tracks in the trimmed clip\n\n      var minStartTime = Infinity;\n\n      for (var _i249 = 0; _i249 < clip.tracks.length; ++_i249) {\n        if (minStartTime > clip.tracks[_i249].times[0]) {\n          minStartTime = clip.tracks[_i249].times[0];\n        }\n      } // shift all tracks such that clip begins at t=0\n\n\n      for (var _i250 = 0; _i250 < clip.tracks.length; ++_i250) {\n        clip.tracks[_i250].shift(-1 * minStartTime);\n      }\n\n      clip.resetDuration();\n      return clip;\n    },\n    makeClipAdditive: function makeClipAdditive(targetClip) {\n      var referenceFrame = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n      var referenceClip = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : targetClip;\n      var fps = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 30;\n      if (fps <= 0) fps = 30;\n      var numTracks = referenceClip.tracks.length;\n      var referenceTime = referenceFrame / fps; // Make each track's values relative to the values at the reference frame\n\n      var _loop = function _loop(_i251) {\n        var referenceTrack = referenceClip.tracks[_i251];\n        var referenceTrackType = referenceTrack.ValueTypeName; // Skip this track if it's non-numeric\n\n        if (referenceTrackType === 'bool' || referenceTrackType === 'string') return \"continue\"; // Find the track in the target clip whose name and type matches the reference track\n\n        var targetTrack = targetClip.tracks.find(function (track) {\n          return track.name === referenceTrack.name && track.ValueTypeName === referenceTrackType;\n        });\n        if (targetTrack === undefined) return \"continue\";\n        var referenceOffset = 0;\n        var referenceValueSize = referenceTrack.getValueSize();\n\n        if (referenceTrack.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline) {\n          referenceOffset = referenceValueSize / 3;\n        }\n\n        var targetOffset = 0;\n        var targetValueSize = targetTrack.getValueSize();\n\n        if (targetTrack.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline) {\n          targetOffset = targetValueSize / 3;\n        }\n\n        var lastIndex = referenceTrack.times.length - 1;\n        var referenceValue = void 0; // Find the value to subtract out of the track\n\n        if (referenceTime <= referenceTrack.times[0]) {\n          // Reference frame is earlier than the first keyframe, so just use the first keyframe\n          var startIndex = referenceOffset;\n          var endIndex = referenceValueSize - referenceOffset;\n          referenceValue = AnimationUtils.arraySlice(referenceTrack.values, startIndex, endIndex);\n        } else if (referenceTime >= referenceTrack.times[lastIndex]) {\n          // Reference frame is after the last keyframe, so just use the last keyframe\n          var _startIndex = lastIndex * referenceValueSize + referenceOffset;\n\n          var _endIndex = _startIndex + referenceValueSize - referenceOffset;\n\n          referenceValue = AnimationUtils.arraySlice(referenceTrack.values, _startIndex, _endIndex);\n        } else {\n          // Interpolate to the reference value\n          var interpolant = referenceTrack.createInterpolant();\n          var _startIndex2 = referenceOffset;\n\n          var _endIndex2 = referenceValueSize - referenceOffset;\n\n          interpolant.evaluate(referenceTime);\n          referenceValue = AnimationUtils.arraySlice(interpolant.resultBuffer, _startIndex2, _endIndex2);\n        } // Conjugate the quaternion\n\n\n        if (referenceTrackType === 'quaternion') {\n          var referenceQuat = new Quaternion().fromArray(referenceValue).normalize().conjugate();\n          referenceQuat.toArray(referenceValue);\n        } // Subtract the reference value from all of the track values\n\n\n        var numTimes = targetTrack.times.length;\n\n        for (var j = 0; j < numTimes; ++j) {\n          var valueStart = j * targetValueSize + targetOffset;\n\n          if (referenceTrackType === 'quaternion') {\n            // Multiply the conjugate for quaternion track types\n            Quaternion.multiplyQuaternionsFlat(targetTrack.values, valueStart, referenceValue, 0, targetTrack.values, valueStart);\n          } else {\n            var valueEnd = targetValueSize - targetOffset * 2; // Subtract each value for all other numeric track types\n\n            for (var k = 0; k < valueEnd; ++k) {\n              targetTrack.values[valueStart + k] -= referenceValue[k];\n            }\n          }\n        }\n      };\n\n      for (var _i251 = 0; _i251 < numTracks; ++_i251) {\n        var _ret = _loop(_i251);\n\n        if (_ret === \"continue\") continue;\n      }\n\n      targetClip.blendMode = AdditiveAnimationBlendMode;\n      return targetClip;\n    }\n  };\n  /**\n   * Abstract base class of interpolants over parametric samples.\n   *\n   * The parameter domain is one dimensional, typically the time or a path\n   * along a curve defined by the data.\n   *\n   * The sample values can have any dimensionality and derived classes may\n   * apply special interpretations to the data.\n   *\n   * This class provides the interval seek in a Template Method, deferring\n   * the actual interpolation to derived classes.\n   *\n   * Time complexity is O(1) for linear access crossing at most two points\n   * and O(log N) for random access, where N is the number of positions.\n   *\n   * References:\n   *\n   * \t\thttp://www.oodesign.com/template-method-pattern.html\n   *\n   */\n\n  var Interpolant = /*#__PURE__*/function () {\n    function Interpolant(parameterPositions, sampleValues, sampleSize, resultBuffer) {\n      _classCallCheck(this, Interpolant);\n\n      this.parameterPositions = parameterPositions;\n      this._cachedIndex = 0;\n      this.resultBuffer = resultBuffer !== undefined ? resultBuffer : new sampleValues.constructor(sampleSize);\n      this.sampleValues = sampleValues;\n      this.valueSize = sampleSize;\n      this.settings = null;\n      this.DefaultSettings_ = {};\n    }\n\n    _createClass(Interpolant, [{\n      key: \"evaluate\",\n      value: function evaluate(t) {\n        var pp = this.parameterPositions;\n        var i1 = this._cachedIndex,\n            t1 = pp[i1],\n            t0 = pp[i1 - 1];\n\n        validate_interval: {\n          seek: {\n            var right;\n\n            linear_scan: {\n              //- See http://jsperf.com/comparison-to-undefined/3\n              //- slower code:\n              //-\n              //- \t\t\t\tif ( t >= t1 || t1 === undefined ) {\n              forward_scan: if (!(t < t1)) {\n                for (var giveUpAt = i1 + 2;;) {\n                  if (t1 === undefined) {\n                    if (t < t0) break forward_scan; // after end\n\n                    i1 = pp.length;\n                    this._cachedIndex = i1;\n                    return this.afterEnd_(i1 - 1, t, t0);\n                  }\n\n                  if (i1 === giveUpAt) break; // this loop\n\n                  t0 = t1;\n                  t1 = pp[++i1];\n\n                  if (t < t1) {\n                    // we have arrived at the sought interval\n                    break seek;\n                  }\n                } // prepare binary search on the right side of the index\n\n\n                right = pp.length;\n                break linear_scan;\n              } //- slower code:\n              //-\t\t\t\t\tif ( t < t0 || t0 === undefined ) {\n\n\n              if (!(t >= t0)) {\n                // looping?\n                var t1global = pp[1];\n\n                if (t < t1global) {\n                  i1 = 2; // + 1, using the scan for the details\n\n                  t0 = t1global;\n                } // linear reverse scan\n\n\n                for (var _giveUpAt = i1 - 2;;) {\n                  if (t0 === undefined) {\n                    // before start\n                    this._cachedIndex = 0;\n                    return this.beforeStart_(0, t, t1);\n                  }\n\n                  if (i1 === _giveUpAt) break; // this loop\n\n                  t1 = t0;\n                  t0 = pp[--i1 - 1];\n\n                  if (t >= t0) {\n                    // we have arrived at the sought interval\n                    break seek;\n                  }\n                } // prepare binary search on the left side of the index\n\n\n                right = i1;\n                i1 = 0;\n                break linear_scan;\n              } // the interval is valid\n\n\n              break validate_interval;\n            } // linear scan\n            // binary search\n\n\n            while (i1 < right) {\n              var mid = i1 + right >>> 1;\n\n              if (t < pp[mid]) {\n                right = mid;\n              } else {\n                i1 = mid + 1;\n              }\n            }\n\n            t1 = pp[i1];\n            t0 = pp[i1 - 1]; // check boundary cases, again\n\n            if (t0 === undefined) {\n              this._cachedIndex = 0;\n              return this.beforeStart_(0, t, t1);\n            }\n\n            if (t1 === undefined) {\n              i1 = pp.length;\n              this._cachedIndex = i1;\n              return this.afterEnd_(i1 - 1, t0, t);\n            }\n          } // seek\n\n\n          this._cachedIndex = i1;\n          this.intervalChanged_(i1, t0, t1);\n        } // validate_interval\n\n\n        return this.interpolate_(i1, t0, t, t1);\n      }\n    }, {\n      key: \"getSettings_\",\n      value: function getSettings_() {\n        return this.settings || this.DefaultSettings_;\n      }\n    }, {\n      key: \"copySampleValue_\",\n      value: function copySampleValue_(index) {\n        // copies a sample value to the result buffer\n        var result = this.resultBuffer,\n            values = this.sampleValues,\n            stride = this.valueSize,\n            offset = index * stride;\n\n        for (var _i252 = 0; _i252 !== stride; ++_i252) {\n          result[_i252] = values[offset + _i252];\n        }\n\n        return result;\n      } // Template methods for derived classes:\n\n    }, {\n      key: \"interpolate_\",\n      value: function interpolate_() {\n        throw new Error('call to abstract method'); // implementations shall return this.resultBuffer\n      }\n    }, {\n      key: \"intervalChanged_\",\n      value: function intervalChanged_() {// empty\n      }\n    }]);\n\n    return Interpolant;\n  }(); // ALIAS DEFINITIONS\n\n\n  Interpolant.prototype.beforeStart_ = Interpolant.prototype.copySampleValue_;\n  Interpolant.prototype.afterEnd_ = Interpolant.prototype.copySampleValue_;\n  /**\n   * Fast and simple cubic spline interpolant.\n   *\n   * It was derived from a Hermitian construction setting the first derivative\n   * at each sample position to the linear slope between neighboring positions\n   * over their parameter interval.\n   */\n\n  var CubicInterpolant = /*#__PURE__*/function (_Interpolant) {\n    _inherits(CubicInterpolant, _Interpolant);\n\n    var _super97 = _createSuper(CubicInterpolant);\n\n    function CubicInterpolant(parameterPositions, sampleValues, sampleSize, resultBuffer) {\n      var _this87;\n\n      _classCallCheck(this, CubicInterpolant);\n\n      _this87 = _super97.call(this, parameterPositions, sampleValues, sampleSize, resultBuffer);\n      _this87._weightPrev = -0;\n      _this87._offsetPrev = -0;\n      _this87._weightNext = -0;\n      _this87._offsetNext = -0;\n      _this87.DefaultSettings_ = {\n        endingStart: ZeroCurvatureEnding,\n        endingEnd: ZeroCurvatureEnding\n      };\n      return _this87;\n    }\n\n    _createClass(CubicInterpolant, [{\n      key: \"intervalChanged_\",\n      value: function intervalChanged_(i1, t0, t1) {\n        var pp = this.parameterPositions;\n        var iPrev = i1 - 2,\n            iNext = i1 + 1,\n            tPrev = pp[iPrev],\n            tNext = pp[iNext];\n\n        if (tPrev === undefined) {\n          switch (this.getSettings_().endingStart) {\n            case ZeroSlopeEnding:\n              // f'(t0) = 0\n              iPrev = i1;\n              tPrev = 2 * t0 - t1;\n              break;\n\n            case WrapAroundEnding:\n              // use the other end of the curve\n              iPrev = pp.length - 2;\n              tPrev = t0 + pp[iPrev] - pp[iPrev + 1];\n              break;\n\n            default:\n              // ZeroCurvatureEnding\n              // f''(t0) = 0 a.k.a. Natural Spline\n              iPrev = i1;\n              tPrev = t1;\n          }\n        }\n\n        if (tNext === undefined) {\n          switch (this.getSettings_().endingEnd) {\n            case ZeroSlopeEnding:\n              // f'(tN) = 0\n              iNext = i1;\n              tNext = 2 * t1 - t0;\n              break;\n\n            case WrapAroundEnding:\n              // use the other end of the curve\n              iNext = 1;\n              tNext = t1 + pp[1] - pp[0];\n              break;\n\n            default:\n              // ZeroCurvatureEnding\n              // f''(tN) = 0, a.k.a. Natural Spline\n              iNext = i1 - 1;\n              tNext = t0;\n          }\n        }\n\n        var halfDt = (t1 - t0) * 0.5,\n            stride = this.valueSize;\n        this._weightPrev = halfDt / (t0 - tPrev);\n        this._weightNext = halfDt / (tNext - t1);\n        this._offsetPrev = iPrev * stride;\n        this._offsetNext = iNext * stride;\n      }\n    }, {\n      key: \"interpolate_\",\n      value: function interpolate_(i1, t0, t, t1) {\n        var result = this.resultBuffer,\n            values = this.sampleValues,\n            stride = this.valueSize,\n            o1 = i1 * stride,\n            o0 = o1 - stride,\n            oP = this._offsetPrev,\n            oN = this._offsetNext,\n            wP = this._weightPrev,\n            wN = this._weightNext,\n            p = (t - t0) / (t1 - t0),\n            pp = p * p,\n            ppp = pp * p; // evaluate polynomials\n\n        var sP = -wP * ppp + 2 * wP * pp - wP * p;\n        var s0 = (1 + wP) * ppp + (-1.5 - 2 * wP) * pp + (-0.5 + wP) * p + 1;\n        var s1 = (-1 - wN) * ppp + (1.5 + wN) * pp + 0.5 * p;\n        var sN = wN * ppp - wN * pp; // combine data linearly\n\n        for (var _i253 = 0; _i253 !== stride; ++_i253) {\n          result[_i253] = sP * values[oP + _i253] + s0 * values[o0 + _i253] + s1 * values[o1 + _i253] + sN * values[oN + _i253];\n        }\n\n        return result;\n      }\n    }]);\n\n    return CubicInterpolant;\n  }(Interpolant);\n\n  var LinearInterpolant = /*#__PURE__*/function (_Interpolant2) {\n    _inherits(LinearInterpolant, _Interpolant2);\n\n    var _super98 = _createSuper(LinearInterpolant);\n\n    function LinearInterpolant(parameterPositions, sampleValues, sampleSize, resultBuffer) {\n      _classCallCheck(this, LinearInterpolant);\n\n      return _super98.call(this, parameterPositions, sampleValues, sampleSize, resultBuffer);\n    }\n\n    _createClass(LinearInterpolant, [{\n      key: \"interpolate_\",\n      value: function interpolate_(i1, t0, t, t1) {\n        var result = this.resultBuffer,\n            values = this.sampleValues,\n            stride = this.valueSize,\n            offset1 = i1 * stride,\n            offset0 = offset1 - stride,\n            weight1 = (t - t0) / (t1 - t0),\n            weight0 = 1 - weight1;\n\n        for (var _i254 = 0; _i254 !== stride; ++_i254) {\n          result[_i254] = values[offset0 + _i254] * weight0 + values[offset1 + _i254] * weight1;\n        }\n\n        return result;\n      }\n    }]);\n\n    return LinearInterpolant;\n  }(Interpolant);\n  /**\n   *\n   * Interpolant that evaluates to the sample value at the position preceeding\n   * the parameter.\n   */\n\n\n  var DiscreteInterpolant = /*#__PURE__*/function (_Interpolant3) {\n    _inherits(DiscreteInterpolant, _Interpolant3);\n\n    var _super99 = _createSuper(DiscreteInterpolant);\n\n    function DiscreteInterpolant(parameterPositions, sampleValues, sampleSize, resultBuffer) {\n      _classCallCheck(this, DiscreteInterpolant);\n\n      return _super99.call(this, parameterPositions, sampleValues, sampleSize, resultBuffer);\n    }\n\n    _createClass(DiscreteInterpolant, [{\n      key: \"interpolate_\",\n      value: function interpolate_(i1\n      /*, t0, t, t1 */\n      ) {\n        return this.copySampleValue_(i1 - 1);\n      }\n    }]);\n\n    return DiscreteInterpolant;\n  }(Interpolant);\n\n  var KeyframeTrack = /*#__PURE__*/function () {\n    function KeyframeTrack(name, times, values, interpolation) {\n      _classCallCheck(this, KeyframeTrack);\n\n      if (name === undefined) throw new Error('THREE.KeyframeTrack: track name is undefined');\n      if (times === undefined || times.length === 0) throw new Error('THREE.KeyframeTrack: no keyframes in track named ' + name);\n      this.name = name;\n      this.times = AnimationUtils.convertArray(times, this.TimeBufferType);\n      this.values = AnimationUtils.convertArray(values, this.ValueBufferType);\n      this.setInterpolation(interpolation || this.DefaultInterpolation);\n    } // Serialization (in static context, because of constructor invocation\n    // and automatic invocation of .toJSON):\n\n\n    _createClass(KeyframeTrack, [{\n      key: \"InterpolantFactoryMethodDiscrete\",\n      value: function InterpolantFactoryMethodDiscrete(result) {\n        return new DiscreteInterpolant(this.times, this.values, this.getValueSize(), result);\n      }\n    }, {\n      key: \"InterpolantFactoryMethodLinear\",\n      value: function InterpolantFactoryMethodLinear(result) {\n        return new LinearInterpolant(this.times, this.values, this.getValueSize(), result);\n      }\n    }, {\n      key: \"InterpolantFactoryMethodSmooth\",\n      value: function InterpolantFactoryMethodSmooth(result) {\n        return new CubicInterpolant(this.times, this.values, this.getValueSize(), result);\n      }\n    }, {\n      key: \"setInterpolation\",\n      value: function setInterpolation(interpolation) {\n        var factoryMethod;\n\n        switch (interpolation) {\n          case InterpolateDiscrete:\n            factoryMethod = this.InterpolantFactoryMethodDiscrete;\n            break;\n\n          case InterpolateLinear:\n            factoryMethod = this.InterpolantFactoryMethodLinear;\n            break;\n\n          case InterpolateSmooth:\n            factoryMethod = this.InterpolantFactoryMethodSmooth;\n            break;\n        }\n\n        if (factoryMethod === undefined) {\n          var message = 'unsupported interpolation for ' + this.ValueTypeName + ' keyframe track named ' + this.name;\n\n          if (this.createInterpolant === undefined) {\n            // fall back to default, unless the default itself is messed up\n            if (interpolation !== this.DefaultInterpolation) {\n              this.setInterpolation(this.DefaultInterpolation);\n            } else {\n              throw new Error(message); // fatal, in this case\n            }\n          }\n\n          console.warn('THREE.KeyframeTrack:', message);\n          return this;\n        }\n\n        this.createInterpolant = factoryMethod;\n        return this;\n      }\n    }, {\n      key: \"getInterpolation\",\n      value: function getInterpolation() {\n        switch (this.createInterpolant) {\n          case this.InterpolantFactoryMethodDiscrete:\n            return InterpolateDiscrete;\n\n          case this.InterpolantFactoryMethodLinear:\n            return InterpolateLinear;\n\n          case this.InterpolantFactoryMethodSmooth:\n            return InterpolateSmooth;\n        }\n      }\n    }, {\n      key: \"getValueSize\",\n      value: function getValueSize() {\n        return this.values.length / this.times.length;\n      } // move all keyframes either forwards or backwards in time\n\n    }, {\n      key: \"shift\",\n      value: function shift(timeOffset) {\n        if (timeOffset !== 0.0) {\n          var times = this.times;\n\n          for (var _i255 = 0, n = times.length; _i255 !== n; ++_i255) {\n            times[_i255] += timeOffset;\n          }\n        }\n\n        return this;\n      } // scale all keyframe times by a factor (useful for frame <-> seconds conversions)\n\n    }, {\n      key: \"scale\",\n      value: function scale(timeScale) {\n        if (timeScale !== 1.0) {\n          var times = this.times;\n\n          for (var _i256 = 0, n = times.length; _i256 !== n; ++_i256) {\n            times[_i256] *= timeScale;\n          }\n        }\n\n        return this;\n      } // removes keyframes before and after animation without changing any values within the range [startTime, endTime].\n      // IMPORTANT: We do not shift around keys to the start of the track time, because for interpolated keys this will change their values\n\n    }, {\n      key: \"trim\",\n      value: function trim(startTime, endTime) {\n        var times = this.times,\n            nKeys = times.length;\n        var from = 0,\n            to = nKeys - 1;\n\n        while (from !== nKeys && times[from] < startTime) {\n          ++from;\n        }\n\n        while (to !== -1 && times[to] > endTime) {\n          --to;\n        }\n\n        ++to; // inclusive -> exclusive bound\n\n        if (from !== 0 || to !== nKeys) {\n          // empty tracks are forbidden, so keep at least one keyframe\n          if (from >= to) {\n            to = Math.max(to, 1);\n            from = to - 1;\n          }\n\n          var stride = this.getValueSize();\n          this.times = AnimationUtils.arraySlice(times, from, to);\n          this.values = AnimationUtils.arraySlice(this.values, from * stride, to * stride);\n        }\n\n        return this;\n      } // ensure we do not get a GarbageInGarbageOut situation, make sure tracks are at least minimally viable\n\n    }, {\n      key: \"validate\",\n      value: function validate() {\n        var valid = true;\n        var valueSize = this.getValueSize();\n\n        if (valueSize - Math.floor(valueSize) !== 0) {\n          console.error('THREE.KeyframeTrack: Invalid value size in track.', this);\n          valid = false;\n        }\n\n        var times = this.times,\n            values = this.values,\n            nKeys = times.length;\n\n        if (nKeys === 0) {\n          console.error('THREE.KeyframeTrack: Track is empty.', this);\n          valid = false;\n        }\n\n        var prevTime = null;\n\n        for (var _i257 = 0; _i257 !== nKeys; _i257++) {\n          var currTime = times[_i257];\n\n          if (typeof currTime === 'number' && isNaN(currTime)) {\n            console.error('THREE.KeyframeTrack: Time is not a valid number.', this, _i257, currTime);\n            valid = false;\n            break;\n          }\n\n          if (prevTime !== null && prevTime > currTime) {\n            console.error('THREE.KeyframeTrack: Out of order keys.', this, _i257, currTime, prevTime);\n            valid = false;\n            break;\n          }\n\n          prevTime = currTime;\n        }\n\n        if (values !== undefined) {\n          if (AnimationUtils.isTypedArray(values)) {\n            for (var _i258 = 0, n = values.length; _i258 !== n; ++_i258) {\n              var _value5 = values[_i258];\n\n              if (isNaN(_value5)) {\n                console.error('THREE.KeyframeTrack: Value is not a valid number.', this, _i258, _value5);\n                valid = false;\n                break;\n              }\n            }\n          }\n        }\n\n        return valid;\n      } // removes equivalent sequential keys as common in morph target sequences\n      // (0,0,0,0,1,1,1,0,0,0,0,0,0,0) --> (0,0,1,1,0,0)\n\n    }, {\n      key: \"optimize\",\n      value: function optimize() {\n        // times or values may be shared with other tracks, so overwriting is unsafe\n        var times = AnimationUtils.arraySlice(this.times),\n            values = AnimationUtils.arraySlice(this.values),\n            stride = this.getValueSize(),\n            smoothInterpolation = this.getInterpolation() === InterpolateSmooth,\n            lastIndex = times.length - 1;\n        var writeIndex = 1;\n\n        for (var _i259 = 1; _i259 < lastIndex; ++_i259) {\n          var keep = false;\n          var time = times[_i259];\n          var timeNext = times[_i259 + 1]; // remove adjacent keyframes scheduled at the same time\n\n          if (time !== timeNext && (_i259 !== 1 || time !== times[0])) {\n            if (!smoothInterpolation) {\n              // remove unnecessary keyframes same as their neighbors\n              var offset = _i259 * stride,\n                  offsetP = offset - stride,\n                  offsetN = offset + stride;\n\n              for (var j = 0; j !== stride; ++j) {\n                var _value6 = values[offset + j];\n\n                if (_value6 !== values[offsetP + j] || _value6 !== values[offsetN + j]) {\n                  keep = true;\n                  break;\n                }\n              }\n            } else {\n              keep = true;\n            }\n          } // in-place compaction\n\n\n          if (keep) {\n            if (_i259 !== writeIndex) {\n              times[writeIndex] = times[_i259];\n              var readOffset = _i259 * stride,\n                  writeOffset = writeIndex * stride;\n\n              for (var _j14 = 0; _j14 !== stride; ++_j14) {\n                values[writeOffset + _j14] = values[readOffset + _j14];\n              }\n            }\n\n            ++writeIndex;\n          }\n        } // flush last keyframe (compaction looks ahead)\n\n\n        if (lastIndex > 0) {\n          times[writeIndex] = times[lastIndex];\n\n          for (var _readOffset = lastIndex * stride, _writeOffset = writeIndex * stride, _j15 = 0; _j15 !== stride; ++_j15) {\n            values[_writeOffset + _j15] = values[_readOffset + _j15];\n          }\n\n          ++writeIndex;\n        }\n\n        if (writeIndex !== times.length) {\n          this.times = AnimationUtils.arraySlice(times, 0, writeIndex);\n          this.values = AnimationUtils.arraySlice(values, 0, writeIndex * stride);\n        } else {\n          this.times = times;\n          this.values = values;\n        }\n\n        return this;\n      }\n    }, {\n      key: \"clone\",\n      value: function clone() {\n        var times = AnimationUtils.arraySlice(this.times, 0);\n        var values = AnimationUtils.arraySlice(this.values, 0);\n        var TypedKeyframeTrack = this.constructor;\n        var track = new TypedKeyframeTrack(this.name, times, values); // Interpolant argument to constructor is not saved, so copy the factory method directly.\n\n        track.createInterpolant = this.createInterpolant;\n        return track;\n      }\n    }], [{\n      key: \"toJSON\",\n      value: function toJSON(track) {\n        var trackType = track.constructor;\n        var json; // derived classes can define a static toJSON method\n\n        if (trackType.toJSON !== this.toJSON) {\n          json = trackType.toJSON(track);\n        } else {\n          // by default, we assume the data can be serialized as-is\n          json = {\n            'name': track.name,\n            'times': AnimationUtils.convertArray(track.times, Array),\n            'values': AnimationUtils.convertArray(track.values, Array)\n          };\n          var interpolation = track.getInterpolation();\n\n          if (interpolation !== track.DefaultInterpolation) {\n            json.interpolation = interpolation;\n          }\n        }\n\n        json.type = track.ValueTypeName; // mandatory\n\n        return json;\n      }\n    }]);\n\n    return KeyframeTrack;\n  }();\n\n  KeyframeTrack.prototype.TimeBufferType = Float32Array;\n  KeyframeTrack.prototype.ValueBufferType = Float32Array;\n  KeyframeTrack.prototype.DefaultInterpolation = InterpolateLinear;\n  /**\n   * A Track of Boolean keyframe values.\n   */\n\n  var BooleanKeyframeTrack = /*#__PURE__*/function (_KeyframeTrack) {\n    _inherits(BooleanKeyframeTrack, _KeyframeTrack);\n\n    var _super100 = _createSuper(BooleanKeyframeTrack);\n\n    function BooleanKeyframeTrack() {\n      _classCallCheck(this, BooleanKeyframeTrack);\n\n      return _super100.apply(this, arguments);\n    }\n\n    return BooleanKeyframeTrack;\n  }(KeyframeTrack);\n\n  BooleanKeyframeTrack.prototype.ValueTypeName = 'bool';\n  BooleanKeyframeTrack.prototype.ValueBufferType = Array;\n  BooleanKeyframeTrack.prototype.DefaultInterpolation = InterpolateDiscrete;\n  BooleanKeyframeTrack.prototype.InterpolantFactoryMethodLinear = undefined;\n  BooleanKeyframeTrack.prototype.InterpolantFactoryMethodSmooth = undefined; // Note: Actually this track could have a optimized / compressed\n\n  /**\n   * A Track of keyframe values that represent color.\n   */\n\n  var ColorKeyframeTrack = /*#__PURE__*/function (_KeyframeTrack2) {\n    _inherits(ColorKeyframeTrack, _KeyframeTrack2);\n\n    var _super101 = _createSuper(ColorKeyframeTrack);\n\n    function ColorKeyframeTrack() {\n      _classCallCheck(this, ColorKeyframeTrack);\n\n      return _super101.apply(this, arguments);\n    }\n\n    return ColorKeyframeTrack;\n  }(KeyframeTrack);\n\n  ColorKeyframeTrack.prototype.ValueTypeName = 'color'; // ValueBufferType is inherited\n\n  /**\n   * A Track of numeric keyframe values.\n   */\n\n  var NumberKeyframeTrack = /*#__PURE__*/function (_KeyframeTrack3) {\n    _inherits(NumberKeyframeTrack, _KeyframeTrack3);\n\n    var _super102 = _createSuper(NumberKeyframeTrack);\n\n    function NumberKeyframeTrack() {\n      _classCallCheck(this, NumberKeyframeTrack);\n\n      return _super102.apply(this, arguments);\n    }\n\n    return NumberKeyframeTrack;\n  }(KeyframeTrack);\n\n  NumberKeyframeTrack.prototype.ValueTypeName = 'number'; // ValueBufferType is inherited\n\n  /**\n   * Spherical linear unit quaternion interpolant.\n   */\n\n  var QuaternionLinearInterpolant = /*#__PURE__*/function (_Interpolant4) {\n    _inherits(QuaternionLinearInterpolant, _Interpolant4);\n\n    var _super103 = _createSuper(QuaternionLinearInterpolant);\n\n    function QuaternionLinearInterpolant(parameterPositions, sampleValues, sampleSize, resultBuffer) {\n      _classCallCheck(this, QuaternionLinearInterpolant);\n\n      return _super103.call(this, parameterPositions, sampleValues, sampleSize, resultBuffer);\n    }\n\n    _createClass(QuaternionLinearInterpolant, [{\n      key: \"interpolate_\",\n      value: function interpolate_(i1, t0, t, t1) {\n        var result = this.resultBuffer,\n            values = this.sampleValues,\n            stride = this.valueSize,\n            alpha = (t - t0) / (t1 - t0);\n        var offset = i1 * stride;\n\n        for (var end = offset + stride; offset !== end; offset += 4) {\n          Quaternion.slerpFlat(result, 0, values, offset - stride, values, offset, alpha);\n        }\n\n        return result;\n      }\n    }]);\n\n    return QuaternionLinearInterpolant;\n  }(Interpolant);\n  /**\n   * A Track of quaternion keyframe values.\n   */\n\n\n  var QuaternionKeyframeTrack = /*#__PURE__*/function (_KeyframeTrack4) {\n    _inherits(QuaternionKeyframeTrack, _KeyframeTrack4);\n\n    var _super104 = _createSuper(QuaternionKeyframeTrack);\n\n    function QuaternionKeyframeTrack() {\n      _classCallCheck(this, QuaternionKeyframeTrack);\n\n      return _super104.apply(this, arguments);\n    }\n\n    _createClass(QuaternionKeyframeTrack, [{\n      key: \"InterpolantFactoryMethodLinear\",\n      value: function InterpolantFactoryMethodLinear(result) {\n        return new QuaternionLinearInterpolant(this.times, this.values, this.getValueSize(), result);\n      }\n    }]);\n\n    return QuaternionKeyframeTrack;\n  }(KeyframeTrack);\n\n  QuaternionKeyframeTrack.prototype.ValueTypeName = 'quaternion'; // ValueBufferType is inherited\n\n  QuaternionKeyframeTrack.prototype.DefaultInterpolation = InterpolateLinear;\n  QuaternionKeyframeTrack.prototype.InterpolantFactoryMethodSmooth = undefined;\n  /**\n   * A Track that interpolates Strings\n   */\n\n  var StringKeyframeTrack = /*#__PURE__*/function (_KeyframeTrack5) {\n    _inherits(StringKeyframeTrack, _KeyframeTrack5);\n\n    var _super105 = _createSuper(StringKeyframeTrack);\n\n    function StringKeyframeTrack() {\n      _classCallCheck(this, StringKeyframeTrack);\n\n      return _super105.apply(this, arguments);\n    }\n\n    return StringKeyframeTrack;\n  }(KeyframeTrack);\n\n  StringKeyframeTrack.prototype.ValueTypeName = 'string';\n  StringKeyframeTrack.prototype.ValueBufferType = Array;\n  StringKeyframeTrack.prototype.DefaultInterpolation = InterpolateDiscrete;\n  StringKeyframeTrack.prototype.InterpolantFactoryMethodLinear = undefined;\n  StringKeyframeTrack.prototype.InterpolantFactoryMethodSmooth = undefined;\n  /**\n   * A Track of vectored keyframe values.\n   */\n\n  var VectorKeyframeTrack = /*#__PURE__*/function (_KeyframeTrack6) {\n    _inherits(VectorKeyframeTrack, _KeyframeTrack6);\n\n    var _super106 = _createSuper(VectorKeyframeTrack);\n\n    function VectorKeyframeTrack() {\n      _classCallCheck(this, VectorKeyframeTrack);\n\n      return _super106.apply(this, arguments);\n    }\n\n    return VectorKeyframeTrack;\n  }(KeyframeTrack);\n\n  VectorKeyframeTrack.prototype.ValueTypeName = 'vector'; // ValueBufferType is inherited\n\n  var AnimationClip = /*#__PURE__*/function () {\n    function AnimationClip(name) {\n      var duration = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : -1;\n      var tracks = arguments.length > 2 ? arguments[2] : undefined;\n      var blendMode = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : NormalAnimationBlendMode;\n\n      _classCallCheck(this, AnimationClip);\n\n      this.name = name;\n      this.tracks = tracks;\n      this.duration = duration;\n      this.blendMode = blendMode;\n      this.uuid = generateUUID(); // this means it should figure out its duration by scanning the tracks\n\n      if (this.duration < 0) {\n        this.resetDuration();\n      }\n    }\n\n    _createClass(AnimationClip, [{\n      key: \"resetDuration\",\n      value: function resetDuration() {\n        var tracks = this.tracks;\n        var duration = 0;\n\n        for (var _i260 = 0, n = tracks.length; _i260 !== n; ++_i260) {\n          var track = this.tracks[_i260];\n          duration = Math.max(duration, track.times[track.times.length - 1]);\n        }\n\n        this.duration = duration;\n        return this;\n      }\n    }, {\n      key: \"trim\",\n      value: function trim() {\n        for (var _i261 = 0; _i261 < this.tracks.length; _i261++) {\n          this.tracks[_i261].trim(0, this.duration);\n        }\n\n        return this;\n      }\n    }, {\n      key: \"validate\",\n      value: function validate() {\n        var valid = true;\n\n        for (var _i262 = 0; _i262 < this.tracks.length; _i262++) {\n          valid = valid && this.tracks[_i262].validate();\n        }\n\n        return valid;\n      }\n    }, {\n      key: \"optimize\",\n      value: function optimize() {\n        for (var _i263 = 0; _i263 < this.tracks.length; _i263++) {\n          this.tracks[_i263].optimize();\n        }\n\n        return this;\n      }\n    }, {\n      key: \"clone\",\n      value: function clone() {\n        var tracks = [];\n\n        for (var _i264 = 0; _i264 < this.tracks.length; _i264++) {\n          tracks.push(this.tracks[_i264].clone());\n        }\n\n        return new this.constructor(this.name, this.duration, tracks, this.blendMode);\n      }\n    }, {\n      key: \"toJSON\",\n      value: function toJSON() {\n        return this.constructor.toJSON(this);\n      }\n    }], [{\n      key: \"parse\",\n      value: function parse(json) {\n        var tracks = [],\n            jsonTracks = json.tracks,\n            frameTime = 1.0 / (json.fps || 1.0);\n\n        for (var _i265 = 0, n = jsonTracks.length; _i265 !== n; ++_i265) {\n          tracks.push(parseKeyframeTrack(jsonTracks[_i265]).scale(frameTime));\n        }\n\n        var clip = new this(json.name, json.duration, tracks, json.blendMode);\n        clip.uuid = json.uuid;\n        return clip;\n      }\n    }, {\n      key: \"toJSON\",\n      value: function toJSON(clip) {\n        var tracks = [],\n            clipTracks = clip.tracks;\n        var json = {\n          'name': clip.name,\n          'duration': clip.duration,\n          'tracks': tracks,\n          'uuid': clip.uuid,\n          'blendMode': clip.blendMode\n        };\n\n        for (var _i266 = 0, n = clipTracks.length; _i266 !== n; ++_i266) {\n          tracks.push(KeyframeTrack.toJSON(clipTracks[_i266]));\n        }\n\n        return json;\n      }\n    }, {\n      key: \"CreateFromMorphTargetSequence\",\n      value: function CreateFromMorphTargetSequence(name, morphTargetSequence, fps, noLoop) {\n        var numMorphTargets = morphTargetSequence.length;\n        var tracks = [];\n\n        for (var _i267 = 0; _i267 < numMorphTargets; _i267++) {\n          var times = [];\n          var values = [];\n          times.push((_i267 + numMorphTargets - 1) % numMorphTargets, _i267, (_i267 + 1) % numMorphTargets);\n          values.push(0, 1, 0);\n          var order = AnimationUtils.getKeyframeOrder(times);\n          times = AnimationUtils.sortedArray(times, 1, order);\n          values = AnimationUtils.sortedArray(values, 1, order); // if there is a key at the first frame, duplicate it as the\n          // last frame as well for perfect loop.\n\n          if (!noLoop && times[0] === 0) {\n            times.push(numMorphTargets);\n            values.push(values[0]);\n          }\n\n          tracks.push(new NumberKeyframeTrack('.morphTargetInfluences[' + morphTargetSequence[_i267].name + ']', times, values).scale(1.0 / fps));\n        }\n\n        return new this(name, -1, tracks);\n      }\n    }, {\n      key: \"findByName\",\n      value: function findByName(objectOrClipArray, name) {\n        var clipArray = objectOrClipArray;\n\n        if (!Array.isArray(objectOrClipArray)) {\n          var o = objectOrClipArray;\n          clipArray = o.geometry && o.geometry.animations || o.animations;\n        }\n\n        for (var _i268 = 0; _i268 < clipArray.length; _i268++) {\n          if (clipArray[_i268].name === name) {\n            return clipArray[_i268];\n          }\n        }\n\n        return null;\n      }\n    }, {\n      key: \"CreateClipsFromMorphTargetSequences\",\n      value: function CreateClipsFromMorphTargetSequences(morphTargets, fps, noLoop) {\n        var animationToMorphTargets = {}; // tested with https://regex101.com/ on trick sequences\n        // such flamingo_flyA_003, flamingo_run1_003, crdeath0059\n\n        var pattern = /^([\\w-]*?)([\\d]+)$/; // sort morph target names into animation groups based\n        // patterns like Walk_001, Walk_002, Run_001, Run_002\n\n        for (var _i269 = 0, il = morphTargets.length; _i269 < il; _i269++) {\n          var morphTarget = morphTargets[_i269];\n          var parts = morphTarget.name.match(pattern);\n\n          if (parts && parts.length > 1) {\n            var name = parts[1];\n            var animationMorphTargets = animationToMorphTargets[name];\n\n            if (!animationMorphTargets) {\n              animationToMorphTargets[name] = animationMorphTargets = [];\n            }\n\n            animationMorphTargets.push(morphTarget);\n          }\n        }\n\n        var clips = [];\n\n        for (var _name4 in animationToMorphTargets) {\n          clips.push(this.CreateFromMorphTargetSequence(_name4, animationToMorphTargets[_name4], fps, noLoop));\n        }\n\n        return clips;\n      } // parse the animation.hierarchy format\n\n    }, {\n      key: \"parseAnimation\",\n      value: function parseAnimation(animation, bones) {\n        if (!animation) {\n          console.error('THREE.AnimationClip: No animation in JSONLoader data.');\n          return null;\n        }\n\n        var addNonemptyTrack = function addNonemptyTrack(trackType, trackName, animationKeys, propertyName, destTracks) {\n          // only return track if there are actually keys.\n          if (animationKeys.length !== 0) {\n            var times = [];\n            var values = [];\n            AnimationUtils.flattenJSON(animationKeys, times, values, propertyName); // empty keys are filtered out, so check again\n\n            if (times.length !== 0) {\n              destTracks.push(new trackType(trackName, times, values));\n            }\n          }\n        };\n\n        var tracks = [];\n        var clipName = animation.name || 'default';\n        var fps = animation.fps || 30;\n        var blendMode = animation.blendMode; // automatic length determination in AnimationClip.\n\n        var duration = animation.length || -1;\n        var hierarchyTracks = animation.hierarchy || [];\n\n        for (var h = 0; h < hierarchyTracks.length; h++) {\n          var animationKeys = hierarchyTracks[h].keys; // skip empty tracks\n\n          if (!animationKeys || animationKeys.length === 0) continue; // process morph targets\n\n          if (animationKeys[0].morphTargets) {\n            // figure out all morph targets used in this track\n            var morphTargetNames = {};\n            var k = void 0;\n\n            for (k = 0; k < animationKeys.length; k++) {\n              if (animationKeys[k].morphTargets) {\n                for (var m = 0; m < animationKeys[k].morphTargets.length; m++) {\n                  morphTargetNames[animationKeys[k].morphTargets[m]] = -1;\n                }\n              }\n            } // create a track for each morph target with all zero\n            // morphTargetInfluences except for the keys in which\n            // the morphTarget is named.\n\n\n            for (var morphTargetName in morphTargetNames) {\n              var times = [];\n              var values = [];\n\n              for (var _m = 0; _m !== animationKeys[k].morphTargets.length; ++_m) {\n                var animationKey = animationKeys[k];\n                times.push(animationKey.time);\n                values.push(animationKey.morphTarget === morphTargetName ? 1 : 0);\n              }\n\n              tracks.push(new NumberKeyframeTrack('.morphTargetInfluence[' + morphTargetName + ']', times, values));\n            }\n\n            duration = morphTargetNames.length * (fps || 1.0);\n          } else {\n            // ...assume skeletal animation\n            var boneName = '.bones[' + bones[h].name + ']';\n            addNonemptyTrack(VectorKeyframeTrack, boneName + '.position', animationKeys, 'pos', tracks);\n            addNonemptyTrack(QuaternionKeyframeTrack, boneName + '.quaternion', animationKeys, 'rot', tracks);\n            addNonemptyTrack(VectorKeyframeTrack, boneName + '.scale', animationKeys, 'scl', tracks);\n          }\n        }\n\n        if (tracks.length === 0) {\n          return null;\n        }\n\n        var clip = new this(clipName, duration, tracks, blendMode);\n        return clip;\n      }\n    }]);\n\n    return AnimationClip;\n  }();\n\n  function getTrackTypeForValueTypeName(typeName) {\n    switch (typeName.toLowerCase()) {\n      case 'scalar':\n      case 'double':\n      case 'float':\n      case 'number':\n      case 'integer':\n        return NumberKeyframeTrack;\n\n      case 'vector':\n      case 'vector2':\n      case 'vector3':\n      case 'vector4':\n        return VectorKeyframeTrack;\n\n      case 'color':\n        return ColorKeyframeTrack;\n\n      case 'quaternion':\n        return QuaternionKeyframeTrack;\n\n      case 'bool':\n      case 'boolean':\n        return BooleanKeyframeTrack;\n\n      case 'string':\n        return StringKeyframeTrack;\n    }\n\n    throw new Error('THREE.KeyframeTrack: Unsupported typeName: ' + typeName);\n  }\n\n  function parseKeyframeTrack(json) {\n    if (json.type === undefined) {\n      throw new Error('THREE.KeyframeTrack: track type undefined, can not parse');\n    }\n\n    var trackType = getTrackTypeForValueTypeName(json.type);\n\n    if (json.times === undefined) {\n      var times = [],\n          values = [];\n      AnimationUtils.flattenJSON(json.keys, times, values, 'value');\n      json.times = times;\n      json.values = values;\n    } // derived classes can define a static parse method\n\n\n    if (trackType.parse !== undefined) {\n      return trackType.parse(json);\n    } else {\n      // by default, we assume a constructor compatible with the base\n      return new trackType(json.name, json.times, json.values, json.interpolation);\n    }\n  }\n\n  var Cache = {\n    enabled: false,\n    files: {},\n    add: function add(key, file) {\n      if (this.enabled === false) return; // console.log( 'THREE.Cache', 'Adding key:', key );\n\n      this.files[key] = file;\n    },\n    get: function get(key) {\n      if (this.enabled === false) return; // console.log( 'THREE.Cache', 'Checking key:', key );\n\n      return this.files[key];\n    },\n    remove: function remove(key) {\n      delete this.files[key];\n    },\n    clear: function clear() {\n      this.files = {};\n    }\n  };\n\n  var LoadingManager = function LoadingManager(onLoad, onProgress, onError) {\n    _classCallCheck(this, LoadingManager);\n\n    var scope = this;\n    var isLoading = false;\n    var itemsLoaded = 0;\n    var itemsTotal = 0;\n    var urlModifier = undefined;\n    var handlers = []; // Refer to #5689 for the reason why we don't set .onStart\n    // in the constructor\n\n    this.onStart = undefined;\n    this.onLoad = onLoad;\n    this.onProgress = onProgress;\n    this.onError = onError;\n\n    this.itemStart = function (url) {\n      itemsTotal++;\n\n      if (isLoading === false) {\n        if (scope.onStart !== undefined) {\n          scope.onStart(url, itemsLoaded, itemsTotal);\n        }\n      }\n\n      isLoading = true;\n    };\n\n    this.itemEnd = function (url) {\n      itemsLoaded++;\n\n      if (scope.onProgress !== undefined) {\n        scope.onProgress(url, itemsLoaded, itemsTotal);\n      }\n\n      if (itemsLoaded === itemsTotal) {\n        isLoading = false;\n\n        if (scope.onLoad !== undefined) {\n          scope.onLoad();\n        }\n      }\n    };\n\n    this.itemError = function (url) {\n      if (scope.onError !== undefined) {\n        scope.onError(url);\n      }\n    };\n\n    this.resolveURL = function (url) {\n      if (urlModifier) {\n        return urlModifier(url);\n      }\n\n      return url;\n    };\n\n    this.setURLModifier = function (transform) {\n      urlModifier = transform;\n      return this;\n    };\n\n    this.addHandler = function (regex, loader) {\n      handlers.push(regex, loader);\n      return this;\n    };\n\n    this.removeHandler = function (regex) {\n      var index = handlers.indexOf(regex);\n\n      if (index !== -1) {\n        handlers.splice(index, 2);\n      }\n\n      return this;\n    };\n\n    this.getHandler = function (file) {\n      for (var _i270 = 0, l = handlers.length; _i270 < l; _i270 += 2) {\n        var regex = handlers[_i270];\n        var loader = handlers[_i270 + 1];\n        if (regex.global) regex.lastIndex = 0; // see #17920\n\n        if (regex.test(file)) {\n          return loader;\n        }\n      }\n\n      return null;\n    };\n  };\n\n  var DefaultLoadingManager = new LoadingManager();\n\n  var Loader = /*#__PURE__*/function () {\n    function Loader(manager) {\n      _classCallCheck(this, Loader);\n\n      this.manager = manager !== undefined ? manager : DefaultLoadingManager;\n      this.crossOrigin = 'anonymous';\n      this.withCredentials = false;\n      this.path = '';\n      this.resourcePath = '';\n      this.requestHeader = {};\n    }\n\n    _createClass(Loader, [{\n      key: \"load\",\n      value: function load() {}\n    }, {\n      key: \"loadAsync\",\n      value: function loadAsync(url, onProgress) {\n        var scope = this;\n        return new Promise(function (resolve, reject) {\n          scope.load(url, resolve, onProgress, reject);\n        });\n      }\n    }, {\n      key: \"parse\",\n      value: function parse() {}\n    }, {\n      key: \"setCrossOrigin\",\n      value: function setCrossOrigin(crossOrigin) {\n        this.crossOrigin = crossOrigin;\n        return this;\n      }\n    }, {\n      key: \"setWithCredentials\",\n      value: function setWithCredentials(value) {\n        this.withCredentials = value;\n        return this;\n      }\n    }, {\n      key: \"setPath\",\n      value: function setPath(path) {\n        this.path = path;\n        return this;\n      }\n    }, {\n      key: \"setResourcePath\",\n      value: function setResourcePath(resourcePath) {\n        this.resourcePath = resourcePath;\n        return this;\n      }\n    }, {\n      key: \"setRequestHeader\",\n      value: function setRequestHeader(requestHeader) {\n        this.requestHeader = requestHeader;\n        return this;\n      }\n    }]);\n\n    return Loader;\n  }();\n\n  var loading = {};\n\n  var FileLoader = /*#__PURE__*/function (_Loader) {\n    _inherits(FileLoader, _Loader);\n\n    var _super107 = _createSuper(FileLoader);\n\n    function FileLoader(manager) {\n      _classCallCheck(this, FileLoader);\n\n      return _super107.call(this, manager);\n    }\n\n    _createClass(FileLoader, [{\n      key: \"load\",\n      value: function load(url, onLoad, onProgress, onError) {\n        var _this88 = this;\n\n        if (url === undefined) url = '';\n        if (this.path !== undefined) url = this.path + url;\n        url = this.manager.resolveURL(url);\n        var cached = Cache.get(url);\n\n        if (cached !== undefined) {\n          this.manager.itemStart(url);\n          setTimeout(function () {\n            if (onLoad) onLoad(cached);\n\n            _this88.manager.itemEnd(url);\n          }, 0);\n          return cached;\n        } // Check if request is duplicate\n\n\n        if (loading[url] !== undefined) {\n          loading[url].push({\n            onLoad: onLoad,\n            onProgress: onProgress,\n            onError: onError\n          });\n          return;\n        } // Initialise array for duplicate requests\n\n\n        loading[url] = [];\n        loading[url].push({\n          onLoad: onLoad,\n          onProgress: onProgress,\n          onError: onError\n        }); // create request\n\n        var req = new Request(url, {\n          headers: new Headers(this.requestHeader),\n          credentials: this.withCredentials ? 'include' : 'same-origin' // An abort controller could be added within a future PR\n\n        }); // start the fetch\n\n        fetch(req).then(function (response) {\n          if (response.status === 200 || response.status === 0) {\n            // Some browsers return HTTP Status 0 when using non-http protocol\n            // e.g. 'file://' or 'data://'. Handle as success.\n            if (response.status === 0) {\n              console.warn('THREE.FileLoader: HTTP Status 0 received.');\n            }\n\n            var callbacks = loading[url];\n            var reader = response.body.getReader();\n            var contentLength = response.headers.get('Content-Length');\n            var total = contentLength ? parseInt(contentLength) : 0;\n            var lengthComputable = total !== 0;\n            var loaded = 0; // periodically read data into the new stream tracking while download progress\n\n            return new ReadableStream({\n              start: function start(controller) {\n                readData();\n\n                function readData() {\n                  reader.read().then(function (_ref2) {\n                    var done = _ref2.done,\n                        value = _ref2.value;\n\n                    if (done) {\n                      controller.close();\n                    } else {\n                      loaded += value.byteLength;\n                      var event = new ProgressEvent('progress', {\n                        lengthComputable: lengthComputable,\n                        loaded: loaded,\n                        total: total\n                      });\n\n                      for (var _i271 = 0, il = callbacks.length; _i271 < il; _i271++) {\n                        var callback = callbacks[_i271];\n                        if (callback.onProgress) callback.onProgress(event);\n                      }\n\n                      controller.enqueue(value);\n                      readData();\n                    }\n                  });\n                }\n              }\n            });\n          } else {\n            throw Error(\"fetch for \\\"\".concat(response.url, \"\\\" responded with \").concat(response.status, \": \").concat(response.statusText));\n          }\n        }).then(function (stream) {\n          var response = new Response(stream);\n\n          switch (_this88.responseType) {\n            case 'arraybuffer':\n              return response.arrayBuffer();\n\n            case 'blob':\n              return response.blob();\n\n            case 'document':\n              return response.text().then(function (text) {\n                var parser = new DOMParser();\n                return parser.parseFromString(text, _this88.mimeType);\n              });\n\n            case 'json':\n              return response.json();\n\n            default:\n              return response.text();\n          }\n        }).then(function (data) {\n          // Add to cache only on HTTP success, so that we do not cache\n          // error response bodies as proper responses to requests.\n          Cache.add(url, data);\n          var callbacks = loading[url];\n          delete loading[url];\n\n          for (var _i272 = 0, il = callbacks.length; _i272 < il; _i272++) {\n            var callback = callbacks[_i272];\n            if (callback.onLoad) callback.onLoad(data);\n          }\n\n          _this88.manager.itemEnd(url);\n        }).catch(function (err) {\n          // Abort errors and other errors are handled the same\n          var callbacks = loading[url];\n          delete loading[url];\n\n          for (var _i273 = 0, il = callbacks.length; _i273 < il; _i273++) {\n            var callback = callbacks[_i273];\n            if (callback.onError) callback.onError(err);\n          }\n\n          _this88.manager.itemError(url);\n\n          _this88.manager.itemEnd(url);\n        });\n        this.manager.itemStart(url);\n      }\n    }, {\n      key: \"setResponseType\",\n      value: function setResponseType(value) {\n        this.responseType = value;\n        return this;\n      }\n    }, {\n      key: \"setMimeType\",\n      value: function setMimeType(value) {\n        this.mimeType = value;\n        return this;\n      }\n    }]);\n\n    return FileLoader;\n  }(Loader);\n\n  var AnimationLoader = /*#__PURE__*/function (_Loader2) {\n    _inherits(AnimationLoader, _Loader2);\n\n    var _super108 = _createSuper(AnimationLoader);\n\n    function AnimationLoader(manager) {\n      _classCallCheck(this, AnimationLoader);\n\n      return _super108.call(this, manager);\n    }\n\n    _createClass(AnimationLoader, [{\n      key: \"load\",\n      value: function load(url, onLoad, onProgress, onError) {\n        var scope = this;\n        var loader = new FileLoader(this.manager);\n        loader.setPath(this.path);\n        loader.setRequestHeader(this.requestHeader);\n        loader.setWithCredentials(this.withCredentials);\n        loader.load(url, function (text) {\n          try {\n            onLoad(scope.parse(JSON.parse(text)));\n          } catch (e) {\n            if (onError) {\n              onError(e);\n            } else {\n              console.error(e);\n            }\n\n            scope.manager.itemError(url);\n          }\n        }, onProgress, onError);\n      }\n    }, {\n      key: \"parse\",\n      value: function parse(json) {\n        var animations = [];\n\n        for (var _i274 = 0; _i274 < json.length; _i274++) {\n          var clip = AnimationClip.parse(json[_i274]);\n          animations.push(clip);\n        }\n\n        return animations;\n      }\n    }]);\n\n    return AnimationLoader;\n  }(Loader);\n  /**\n   * Abstract Base class to block based textures loader (dds, pvr, ...)\n   *\n   * Sub classes have to implement the parse() method which will be used in load().\n   */\n\n\n  var CompressedTextureLoader = /*#__PURE__*/function (_Loader3) {\n    _inherits(CompressedTextureLoader, _Loader3);\n\n    var _super109 = _createSuper(CompressedTextureLoader);\n\n    function CompressedTextureLoader(manager) {\n      _classCallCheck(this, CompressedTextureLoader);\n\n      return _super109.call(this, manager);\n    }\n\n    _createClass(CompressedTextureLoader, [{\n      key: \"load\",\n      value: function load(url, onLoad, onProgress, onError) {\n        var scope = this;\n        var images = [];\n        var texture = new CompressedTexture();\n        var loader = new FileLoader(this.manager);\n        loader.setPath(this.path);\n        loader.setResponseType('arraybuffer');\n        loader.setRequestHeader(this.requestHeader);\n        loader.setWithCredentials(scope.withCredentials);\n        var loaded = 0;\n\n        function loadTexture(i) {\n          loader.load(url[i], function (buffer) {\n            var texDatas = scope.parse(buffer, true);\n            images[i] = {\n              width: texDatas.width,\n              height: texDatas.height,\n              format: texDatas.format,\n              mipmaps: texDatas.mipmaps\n            };\n            loaded += 1;\n\n            if (loaded === 6) {\n              if (texDatas.mipmapCount === 1) texture.minFilter = LinearFilter;\n              texture.image = images;\n              texture.format = texDatas.format;\n              texture.needsUpdate = true;\n              if (onLoad) onLoad(texture);\n            }\n          }, onProgress, onError);\n        }\n\n        if (Array.isArray(url)) {\n          for (var _i275 = 0, il = url.length; _i275 < il; ++_i275) {\n            loadTexture(_i275);\n          }\n        } else {\n          // compressed cubemap texture stored in a single DDS file\n          loader.load(url, function (buffer) {\n            var texDatas = scope.parse(buffer, true);\n\n            if (texDatas.isCubemap) {\n              var faces = texDatas.mipmaps.length / texDatas.mipmapCount;\n\n              for (var f = 0; f < faces; f++) {\n                images[f] = {\n                  mipmaps: []\n                };\n\n                for (var _i276 = 0; _i276 < texDatas.mipmapCount; _i276++) {\n                  images[f].mipmaps.push(texDatas.mipmaps[f * texDatas.mipmapCount + _i276]);\n                  images[f].format = texDatas.format;\n                  images[f].width = texDatas.width;\n                  images[f].height = texDatas.height;\n                }\n              }\n\n              texture.image = images;\n            } else {\n              texture.image.width = texDatas.width;\n              texture.image.height = texDatas.height;\n              texture.mipmaps = texDatas.mipmaps;\n            }\n\n            if (texDatas.mipmapCount === 1) {\n              texture.minFilter = LinearFilter;\n            }\n\n            texture.format = texDatas.format;\n            texture.needsUpdate = true;\n            if (onLoad) onLoad(texture);\n          }, onProgress, onError);\n        }\n\n        return texture;\n      }\n    }]);\n\n    return CompressedTextureLoader;\n  }(Loader);\n\n  var ImageLoader = /*#__PURE__*/function (_Loader4) {\n    _inherits(ImageLoader, _Loader4);\n\n    var _super110 = _createSuper(ImageLoader);\n\n    function ImageLoader(manager) {\n      _classCallCheck(this, ImageLoader);\n\n      return _super110.call(this, manager);\n    }\n\n    _createClass(ImageLoader, [{\n      key: \"load\",\n      value: function load(url, onLoad, onProgress, onError) {\n        if (this.path !== undefined) url = this.path + url;\n        url = this.manager.resolveURL(url);\n        var scope = this;\n        var cached = Cache.get(url);\n\n        if (cached !== undefined) {\n          scope.manager.itemStart(url);\n          setTimeout(function () {\n            if (onLoad) onLoad(cached);\n            scope.manager.itemEnd(url);\n          }, 0);\n          return cached;\n        }\n\n        var image = createElementNS('img');\n\n        function onImageLoad() {\n          removeEventListeners();\n          Cache.add(url, this);\n          if (onLoad) onLoad(this);\n          scope.manager.itemEnd(url);\n        }\n\n        function onImageError(event) {\n          removeEventListeners();\n          if (onError) onError(event);\n          scope.manager.itemError(url);\n          scope.manager.itemEnd(url);\n        }\n\n        function removeEventListeners() {\n          image.removeEventListener('load', onImageLoad, false);\n          image.removeEventListener('error', onImageError, false);\n        }\n\n        image.addEventListener('load', onImageLoad, false);\n        image.addEventListener('error', onImageError, false);\n\n        if (url.substr(0, 5) !== 'data:') {\n          if (this.crossOrigin !== undefined) image.crossOrigin = this.crossOrigin;\n        }\n\n        scope.manager.itemStart(url);\n        image.src = url;\n        return image;\n      }\n    }]);\n\n    return ImageLoader;\n  }(Loader);\n\n  var CubeTextureLoader = /*#__PURE__*/function (_Loader5) {\n    _inherits(CubeTextureLoader, _Loader5);\n\n    var _super111 = _createSuper(CubeTextureLoader);\n\n    function CubeTextureLoader(manager) {\n      _classCallCheck(this, CubeTextureLoader);\n\n      return _super111.call(this, manager);\n    }\n\n    _createClass(CubeTextureLoader, [{\n      key: \"load\",\n      value: function load(urls, onLoad, onProgress, onError) {\n        var texture = new CubeTexture();\n        var loader = new ImageLoader(this.manager);\n        loader.setCrossOrigin(this.crossOrigin);\n        loader.setPath(this.path);\n        var loaded = 0;\n\n        function loadTexture(i) {\n          loader.load(urls[i], function (image) {\n            texture.images[i] = image;\n            loaded++;\n\n            if (loaded === 6) {\n              texture.needsUpdate = true;\n              if (onLoad) onLoad(texture);\n            }\n          }, undefined, onError);\n        }\n\n        for (var _i277 = 0; _i277 < urls.length; ++_i277) {\n          loadTexture(_i277);\n        }\n\n        return texture;\n      }\n    }]);\n\n    return CubeTextureLoader;\n  }(Loader);\n  /**\n   * Abstract Base class to load generic binary textures formats (rgbe, hdr, ...)\n   *\n   * Sub classes have to implement the parse() method which will be used in load().\n   */\n\n\n  var DataTextureLoader = /*#__PURE__*/function (_Loader6) {\n    _inherits(DataTextureLoader, _Loader6);\n\n    var _super112 = _createSuper(DataTextureLoader);\n\n    function DataTextureLoader(manager) {\n      _classCallCheck(this, DataTextureLoader);\n\n      return _super112.call(this, manager);\n    }\n\n    _createClass(DataTextureLoader, [{\n      key: \"load\",\n      value: function load(url, onLoad, onProgress, onError) {\n        var scope = this;\n        var texture = new DataTexture();\n        var loader = new FileLoader(this.manager);\n        loader.setResponseType('arraybuffer');\n        loader.setRequestHeader(this.requestHeader);\n        loader.setPath(this.path);\n        loader.setWithCredentials(scope.withCredentials);\n        loader.load(url, function (buffer) {\n          var texData = scope.parse(buffer);\n          if (!texData) return;\n\n          if (texData.image !== undefined) {\n            texture.image = texData.image;\n          } else if (texData.data !== undefined) {\n            texture.image.width = texData.width;\n            texture.image.height = texData.height;\n            texture.image.data = texData.data;\n          }\n\n          texture.wrapS = texData.wrapS !== undefined ? texData.wrapS : ClampToEdgeWrapping;\n          texture.wrapT = texData.wrapT !== undefined ? texData.wrapT : ClampToEdgeWrapping;\n          texture.magFilter = texData.magFilter !== undefined ? texData.magFilter : LinearFilter;\n          texture.minFilter = texData.minFilter !== undefined ? texData.minFilter : LinearFilter;\n          texture.anisotropy = texData.anisotropy !== undefined ? texData.anisotropy : 1;\n\n          if (texData.encoding !== undefined) {\n            texture.encoding = texData.encoding;\n          }\n\n          if (texData.flipY !== undefined) {\n            texture.flipY = texData.flipY;\n          }\n\n          if (texData.format !== undefined) {\n            texture.format = texData.format;\n          }\n\n          if (texData.type !== undefined) {\n            texture.type = texData.type;\n          }\n\n          if (texData.mipmaps !== undefined) {\n            texture.mipmaps = texData.mipmaps;\n            texture.minFilter = LinearMipmapLinearFilter; // presumably...\n          }\n\n          if (texData.mipmapCount === 1) {\n            texture.minFilter = LinearFilter;\n          }\n\n          if (texData.generateMipmaps !== undefined) {\n            texture.generateMipmaps = texData.generateMipmaps;\n          }\n\n          texture.needsUpdate = true;\n          if (onLoad) onLoad(texture, texData);\n        }, onProgress, onError);\n        return texture;\n      }\n    }]);\n\n    return DataTextureLoader;\n  }(Loader);\n\n  var TextureLoader = /*#__PURE__*/function (_Loader7) {\n    _inherits(TextureLoader, _Loader7);\n\n    var _super113 = _createSuper(TextureLoader);\n\n    function TextureLoader(manager) {\n      _classCallCheck(this, TextureLoader);\n\n      return _super113.call(this, manager);\n    }\n\n    _createClass(TextureLoader, [{\n      key: \"load\",\n      value: function load(url, onLoad, onProgress, onError) {\n        var texture = new Texture();\n        var loader = new ImageLoader(this.manager);\n        loader.setCrossOrigin(this.crossOrigin);\n        loader.setPath(this.path);\n        loader.load(url, function (image) {\n          texture.image = image;\n          texture.needsUpdate = true;\n\n          if (onLoad !== undefined) {\n            onLoad(texture);\n          }\n        }, onProgress, onError);\n        return texture;\n      }\n    }]);\n\n    return TextureLoader;\n  }(Loader);\n\n  var Light = /*#__PURE__*/function (_Object3D11) {\n    _inherits(Light, _Object3D11);\n\n    var _super114 = _createSuper(Light);\n\n    function Light(color) {\n      var _this89;\n\n      var intensity = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n\n      _classCallCheck(this, Light);\n\n      _this89 = _super114.call(this);\n      _this89.type = 'Light';\n      _this89.color = new Color(color);\n      _this89.intensity = intensity;\n      return _this89;\n    }\n\n    _createClass(Light, [{\n      key: \"dispose\",\n      value: function dispose() {// Empty here in base class; some subclasses override.\n      }\n    }, {\n      key: \"copy\",\n      value: function copy(source) {\n        _get(_getPrototypeOf(Light.prototype), \"copy\", this).call(this, source);\n\n        this.color.copy(source.color);\n        this.intensity = source.intensity;\n        return this;\n      }\n    }, {\n      key: \"toJSON\",\n      value: function toJSON(meta) {\n        var data = _get(_getPrototypeOf(Light.prototype), \"toJSON\", this).call(this, meta);\n\n        data.object.color = this.color.getHex();\n        data.object.intensity = this.intensity;\n        if (this.groundColor !== undefined) data.object.groundColor = this.groundColor.getHex();\n        if (this.distance !== undefined) data.object.distance = this.distance;\n        if (this.angle !== undefined) data.object.angle = this.angle;\n        if (this.decay !== undefined) data.object.decay = this.decay;\n        if (this.penumbra !== undefined) data.object.penumbra = this.penumbra;\n        if (this.shadow !== undefined) data.object.shadow = this.shadow.toJSON();\n        return data;\n      }\n    }]);\n\n    return Light;\n  }(Object3D);\n\n  Light.prototype.isLight = true;\n\n  var HemisphereLight = /*#__PURE__*/function (_Light) {\n    _inherits(HemisphereLight, _Light);\n\n    var _super115 = _createSuper(HemisphereLight);\n\n    function HemisphereLight(skyColor, groundColor, intensity) {\n      var _this90;\n\n      _classCallCheck(this, HemisphereLight);\n\n      _this90 = _super115.call(this, skyColor, intensity);\n      _this90.type = 'HemisphereLight';\n\n      _this90.position.copy(Object3D.DefaultUp);\n\n      _this90.updateMatrix();\n\n      _this90.groundColor = new Color(groundColor);\n      return _this90;\n    }\n\n    _createClass(HemisphereLight, [{\n      key: \"copy\",\n      value: function copy(source) {\n        Light.prototype.copy.call(this, source);\n        this.groundColor.copy(source.groundColor);\n        return this;\n      }\n    }]);\n\n    return HemisphereLight;\n  }(Light);\n\n  HemisphereLight.prototype.isHemisphereLight = true;\n\n  var _projScreenMatrix$1 = /*@__PURE__*/new Matrix4();\n\n  var _lightPositionWorld$1 = /*@__PURE__*/new Vector3();\n\n  var _lookTarget$1 = /*@__PURE__*/new Vector3();\n\n  var LightShadow = /*#__PURE__*/function () {\n    function LightShadow(camera) {\n      _classCallCheck(this, LightShadow);\n\n      this.camera = camera;\n      this.bias = 0;\n      this.normalBias = 0;\n      this.radius = 1;\n      this.blurSamples = 8;\n      this.mapSize = new Vector2(512, 512);\n      this.map = null;\n      this.mapPass = null;\n      this.matrix = new Matrix4();\n      this.autoUpdate = true;\n      this.needsUpdate = false;\n      this._frustum = new Frustum();\n      this._frameExtents = new Vector2(1, 1);\n      this._viewportCount = 1;\n      this._viewports = [new Vector4(0, 0, 1, 1)];\n    }\n\n    _createClass(LightShadow, [{\n      key: \"getViewportCount\",\n      value: function getViewportCount() {\n        return this._viewportCount;\n      }\n    }, {\n      key: \"getFrustum\",\n      value: function getFrustum() {\n        return this._frustum;\n      }\n    }, {\n      key: \"updateMatrices\",\n      value: function updateMatrices(light) {\n        var shadowCamera = this.camera;\n        var shadowMatrix = this.matrix;\n\n        _lightPositionWorld$1.setFromMatrixPosition(light.matrixWorld);\n\n        shadowCamera.position.copy(_lightPositionWorld$1);\n\n        _lookTarget$1.setFromMatrixPosition(light.target.matrixWorld);\n\n        shadowCamera.lookAt(_lookTarget$1);\n        shadowCamera.updateMatrixWorld();\n\n        _projScreenMatrix$1.multiplyMatrices(shadowCamera.projectionMatrix, shadowCamera.matrixWorldInverse);\n\n        this._frustum.setFromProjectionMatrix(_projScreenMatrix$1);\n\n        shadowMatrix.set(0.5, 0.0, 0.0, 0.5, 0.0, 0.5, 0.0, 0.5, 0.0, 0.0, 0.5, 0.5, 0.0, 0.0, 0.0, 1.0);\n        shadowMatrix.multiply(shadowCamera.projectionMatrix);\n        shadowMatrix.multiply(shadowCamera.matrixWorldInverse);\n      }\n    }, {\n      key: \"getViewport\",\n      value: function getViewport(viewportIndex) {\n        return this._viewports[viewportIndex];\n      }\n    }, {\n      key: \"getFrameExtents\",\n      value: function getFrameExtents() {\n        return this._frameExtents;\n      }\n    }, {\n      key: \"dispose\",\n      value: function dispose() {\n        if (this.map) {\n          this.map.dispose();\n        }\n\n        if (this.mapPass) {\n          this.mapPass.dispose();\n        }\n      }\n    }, {\n      key: \"copy\",\n      value: function copy(source) {\n        this.camera = source.camera.clone();\n        this.bias = source.bias;\n        this.radius = source.radius;\n        this.mapSize.copy(source.mapSize);\n        return this;\n      }\n    }, {\n      key: \"clone\",\n      value: function clone() {\n        return new this.constructor().copy(this);\n      }\n    }, {\n      key: \"toJSON\",\n      value: function toJSON() {\n        var object = {};\n        if (this.bias !== 0) object.bias = this.bias;\n        if (this.normalBias !== 0) object.normalBias = this.normalBias;\n        if (this.radius !== 1) object.radius = this.radius;\n        if (this.mapSize.x !== 512 || this.mapSize.y !== 512) object.mapSize = this.mapSize.toArray();\n        object.camera = this.camera.toJSON(false).object;\n        delete object.camera.matrix;\n        return object;\n      }\n    }]);\n\n    return LightShadow;\n  }();\n\n  var SpotLightShadow = /*#__PURE__*/function (_LightShadow) {\n    _inherits(SpotLightShadow, _LightShadow);\n\n    var _super116 = _createSuper(SpotLightShadow);\n\n    function SpotLightShadow() {\n      var _this91;\n\n      _classCallCheck(this, SpotLightShadow);\n\n      _this91 = _super116.call(this, new PerspectiveCamera(50, 1, 0.5, 500));\n      _this91.focus = 1;\n      return _this91;\n    }\n\n    _createClass(SpotLightShadow, [{\n      key: \"updateMatrices\",\n      value: function updateMatrices(light) {\n        var camera = this.camera;\n        var fov = RAD2DEG * 2 * light.angle * this.focus;\n        var aspect = this.mapSize.width / this.mapSize.height;\n        var far = light.distance || camera.far;\n\n        if (fov !== camera.fov || aspect !== camera.aspect || far !== camera.far) {\n          camera.fov = fov;\n          camera.aspect = aspect;\n          camera.far = far;\n          camera.updateProjectionMatrix();\n        }\n\n        _get(_getPrototypeOf(SpotLightShadow.prototype), \"updateMatrices\", this).call(this, light);\n      }\n    }, {\n      key: \"copy\",\n      value: function copy(source) {\n        _get(_getPrototypeOf(SpotLightShadow.prototype), \"copy\", this).call(this, source);\n\n        this.focus = source.focus;\n        return this;\n      }\n    }]);\n\n    return SpotLightShadow;\n  }(LightShadow);\n\n  SpotLightShadow.prototype.isSpotLightShadow = true;\n\n  var SpotLight = /*#__PURE__*/function (_Light2) {\n    _inherits(SpotLight, _Light2);\n\n    var _super117 = _createSuper(SpotLight);\n\n    function SpotLight(color, intensity) {\n      var _this92;\n\n      var distance = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n      var angle = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : Math.PI / 3;\n      var penumbra = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 0;\n      var decay = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : 1;\n\n      _classCallCheck(this, SpotLight);\n\n      _this92 = _super117.call(this, color, intensity);\n      _this92.type = 'SpotLight';\n\n      _this92.position.copy(Object3D.DefaultUp);\n\n      _this92.updateMatrix();\n\n      _this92.target = new Object3D();\n      _this92.distance = distance;\n      _this92.angle = angle;\n      _this92.penumbra = penumbra;\n      _this92.decay = decay; // for physically correct lights, should be 2.\n\n      _this92.shadow = new SpotLightShadow();\n      return _this92;\n    }\n\n    _createClass(SpotLight, [{\n      key: \"power\",\n      get: function get() {\n        // compute the light's luminous power (in lumens) from its intensity (in candela)\n        // by convention for a spotlight, luminous power (lm) = π * luminous intensity (cd)\n        return this.intensity * Math.PI;\n      },\n      set: function set(power) {\n        // set the light's intensity (in candela) from the desired luminous power (in lumens)\n        this.intensity = power / Math.PI;\n      }\n    }, {\n      key: \"dispose\",\n      value: function dispose() {\n        this.shadow.dispose();\n      }\n    }, {\n      key: \"copy\",\n      value: function copy(source) {\n        _get(_getPrototypeOf(SpotLight.prototype), \"copy\", this).call(this, source);\n\n        this.distance = source.distance;\n        this.angle = source.angle;\n        this.penumbra = source.penumbra;\n        this.decay = source.decay;\n        this.target = source.target.clone();\n        this.shadow = source.shadow.clone();\n        return this;\n      }\n    }]);\n\n    return SpotLight;\n  }(Light);\n\n  SpotLight.prototype.isSpotLight = true;\n\n  var _projScreenMatrix = /*@__PURE__*/new Matrix4();\n\n  var _lightPositionWorld = /*@__PURE__*/new Vector3();\n\n  var _lookTarget = /*@__PURE__*/new Vector3();\n\n  var PointLightShadow = /*#__PURE__*/function (_LightShadow2) {\n    _inherits(PointLightShadow, _LightShadow2);\n\n    var _super118 = _createSuper(PointLightShadow);\n\n    function PointLightShadow() {\n      var _this93;\n\n      _classCallCheck(this, PointLightShadow);\n\n      _this93 = _super118.call(this, new PerspectiveCamera(90, 1, 0.5, 500));\n      _this93._frameExtents = new Vector2(4, 2);\n      _this93._viewportCount = 6;\n      _this93._viewports = [// These viewports map a cube-map onto a 2D texture with the\n      // following orientation:\n      //\n      //\txzXZ\n      //\t y Y\n      //\n      // X - Positive x direction\n      // x - Negative x direction\n      // Y - Positive y direction\n      // y - Negative y direction\n      // Z - Positive z direction\n      // z - Negative z direction\n      // positive X\n      new Vector4(2, 1, 1, 1), // negative X\n      new Vector4(0, 1, 1, 1), // positive Z\n      new Vector4(3, 1, 1, 1), // negative Z\n      new Vector4(1, 1, 1, 1), // positive Y\n      new Vector4(3, 0, 1, 1), // negative Y\n      new Vector4(1, 0, 1, 1)];\n      _this93._cubeDirections = [new Vector3(1, 0, 0), new Vector3(-1, 0, 0), new Vector3(0, 0, 1), new Vector3(0, 0, -1), new Vector3(0, 1, 0), new Vector3(0, -1, 0)];\n      _this93._cubeUps = [new Vector3(0, 1, 0), new Vector3(0, 1, 0), new Vector3(0, 1, 0), new Vector3(0, 1, 0), new Vector3(0, 0, 1), new Vector3(0, 0, -1)];\n      return _this93;\n    }\n\n    _createClass(PointLightShadow, [{\n      key: \"updateMatrices\",\n      value: function updateMatrices(light) {\n        var viewportIndex = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n        var camera = this.camera;\n        var shadowMatrix = this.matrix;\n        var far = light.distance || camera.far;\n\n        if (far !== camera.far) {\n          camera.far = far;\n          camera.updateProjectionMatrix();\n        }\n\n        _lightPositionWorld.setFromMatrixPosition(light.matrixWorld);\n\n        camera.position.copy(_lightPositionWorld);\n\n        _lookTarget.copy(camera.position);\n\n        _lookTarget.add(this._cubeDirections[viewportIndex]);\n\n        camera.up.copy(this._cubeUps[viewportIndex]);\n        camera.lookAt(_lookTarget);\n        camera.updateMatrixWorld();\n        shadowMatrix.makeTranslation(-_lightPositionWorld.x, -_lightPositionWorld.y, -_lightPositionWorld.z);\n\n        _projScreenMatrix.multiplyMatrices(camera.projectionMatrix, camera.matrixWorldInverse);\n\n        this._frustum.setFromProjectionMatrix(_projScreenMatrix);\n      }\n    }]);\n\n    return PointLightShadow;\n  }(LightShadow);\n\n  PointLightShadow.prototype.isPointLightShadow = true;\n\n  var PointLight = /*#__PURE__*/function (_Light3) {\n    _inherits(PointLight, _Light3);\n\n    var _super119 = _createSuper(PointLight);\n\n    function PointLight(color, intensity) {\n      var _this94;\n\n      var distance = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n      var decay = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 1;\n\n      _classCallCheck(this, PointLight);\n\n      _this94 = _super119.call(this, color, intensity);\n      _this94.type = 'PointLight';\n      _this94.distance = distance;\n      _this94.decay = decay; // for physically correct lights, should be 2.\n\n      _this94.shadow = new PointLightShadow();\n      return _this94;\n    }\n\n    _createClass(PointLight, [{\n      key: \"power\",\n      get: function get() {\n        // compute the light's luminous power (in lumens) from its intensity (in candela)\n        // for an isotropic light source, luminous power (lm) = 4 π luminous intensity (cd)\n        return this.intensity * 4 * Math.PI;\n      },\n      set: function set(power) {\n        // set the light's intensity (in candela) from the desired luminous power (in lumens)\n        this.intensity = power / (4 * Math.PI);\n      }\n    }, {\n      key: \"dispose\",\n      value: function dispose() {\n        this.shadow.dispose();\n      }\n    }, {\n      key: \"copy\",\n      value: function copy(source) {\n        _get(_getPrototypeOf(PointLight.prototype), \"copy\", this).call(this, source);\n\n        this.distance = source.distance;\n        this.decay = source.decay;\n        this.shadow = source.shadow.clone();\n        return this;\n      }\n    }]);\n\n    return PointLight;\n  }(Light);\n\n  PointLight.prototype.isPointLight = true;\n\n  var DirectionalLightShadow = /*#__PURE__*/function (_LightShadow3) {\n    _inherits(DirectionalLightShadow, _LightShadow3);\n\n    var _super120 = _createSuper(DirectionalLightShadow);\n\n    function DirectionalLightShadow() {\n      _classCallCheck(this, DirectionalLightShadow);\n\n      return _super120.call(this, new OrthographicCamera(-5, 5, 5, -5, 0.5, 500));\n    }\n\n    return DirectionalLightShadow;\n  }(LightShadow);\n\n  DirectionalLightShadow.prototype.isDirectionalLightShadow = true;\n\n  var DirectionalLight = /*#__PURE__*/function (_Light4) {\n    _inherits(DirectionalLight, _Light4);\n\n    var _super121 = _createSuper(DirectionalLight);\n\n    function DirectionalLight(color, intensity) {\n      var _this95;\n\n      _classCallCheck(this, DirectionalLight);\n\n      _this95 = _super121.call(this, color, intensity);\n      _this95.type = 'DirectionalLight';\n\n      _this95.position.copy(Object3D.DefaultUp);\n\n      _this95.updateMatrix();\n\n      _this95.target = new Object3D();\n      _this95.shadow = new DirectionalLightShadow();\n      return _this95;\n    }\n\n    _createClass(DirectionalLight, [{\n      key: \"dispose\",\n      value: function dispose() {\n        this.shadow.dispose();\n      }\n    }, {\n      key: \"copy\",\n      value: function copy(source) {\n        _get(_getPrototypeOf(DirectionalLight.prototype), \"copy\", this).call(this, source);\n\n        this.target = source.target.clone();\n        this.shadow = source.shadow.clone();\n        return this;\n      }\n    }]);\n\n    return DirectionalLight;\n  }(Light);\n\n  DirectionalLight.prototype.isDirectionalLight = true;\n\n  var AmbientLight = /*#__PURE__*/function (_Light5) {\n    _inherits(AmbientLight, _Light5);\n\n    var _super122 = _createSuper(AmbientLight);\n\n    function AmbientLight(color, intensity) {\n      var _this96;\n\n      _classCallCheck(this, AmbientLight);\n\n      _this96 = _super122.call(this, color, intensity);\n      _this96.type = 'AmbientLight';\n      return _this96;\n    }\n\n    return AmbientLight;\n  }(Light);\n\n  AmbientLight.prototype.isAmbientLight = true;\n\n  var RectAreaLight = /*#__PURE__*/function (_Light6) {\n    _inherits(RectAreaLight, _Light6);\n\n    var _super123 = _createSuper(RectAreaLight);\n\n    function RectAreaLight(color, intensity) {\n      var _this97;\n\n      var width = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 10;\n      var height = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 10;\n\n      _classCallCheck(this, RectAreaLight);\n\n      _this97 = _super123.call(this, color, intensity);\n      _this97.type = 'RectAreaLight';\n      _this97.width = width;\n      _this97.height = height;\n      return _this97;\n    }\n\n    _createClass(RectAreaLight, [{\n      key: \"power\",\n      get: function get() {\n        // compute the light's luminous power (in lumens) from its intensity (in nits)\n        return this.intensity * this.width * this.height * Math.PI;\n      },\n      set: function set(power) {\n        // set the light's intensity (in nits) from the desired luminous power (in lumens)\n        this.intensity = power / (this.width * this.height * Math.PI);\n      }\n    }, {\n      key: \"copy\",\n      value: function copy(source) {\n        _get(_getPrototypeOf(RectAreaLight.prototype), \"copy\", this).call(this, source);\n\n        this.width = source.width;\n        this.height = source.height;\n        return this;\n      }\n    }, {\n      key: \"toJSON\",\n      value: function toJSON(meta) {\n        var data = _get(_getPrototypeOf(RectAreaLight.prototype), \"toJSON\", this).call(this, meta);\n\n        data.object.width = this.width;\n        data.object.height = this.height;\n        return data;\n      }\n    }]);\n\n    return RectAreaLight;\n  }(Light);\n\n  RectAreaLight.prototype.isRectAreaLight = true;\n  /**\n   * Primary reference:\n   *\t https://graphics.stanford.edu/papers/envmap/envmap.pdf\n   *\n   * Secondary reference:\n   *\t https://www.ppsloan.org/publications/StupidSH36.pdf\n   */\n  // 3-band SH defined by 9 coefficients\n\n  var SphericalHarmonics3 = /*#__PURE__*/function () {\n    function SphericalHarmonics3() {\n      _classCallCheck(this, SphericalHarmonics3);\n\n      this.coefficients = [];\n\n      for (var _i278 = 0; _i278 < 9; _i278++) {\n        this.coefficients.push(new Vector3());\n      }\n    }\n\n    _createClass(SphericalHarmonics3, [{\n      key: \"set\",\n      value: function set(coefficients) {\n        for (var _i279 = 0; _i279 < 9; _i279++) {\n          this.coefficients[_i279].copy(coefficients[_i279]);\n        }\n\n        return this;\n      }\n    }, {\n      key: \"zero\",\n      value: function zero() {\n        for (var _i280 = 0; _i280 < 9; _i280++) {\n          this.coefficients[_i280].set(0, 0, 0);\n        }\n\n        return this;\n      } // get the radiance in the direction of the normal\n      // target is a Vector3\n\n    }, {\n      key: \"getAt\",\n      value: function getAt(normal, target) {\n        // normal is assumed to be unit length\n        var x = normal.x,\n            y = normal.y,\n            z = normal.z;\n        var coeff = this.coefficients; // band 0\n\n        target.copy(coeff[0]).multiplyScalar(0.282095); // band 1\n\n        target.addScaledVector(coeff[1], 0.488603 * y);\n        target.addScaledVector(coeff[2], 0.488603 * z);\n        target.addScaledVector(coeff[3], 0.488603 * x); // band 2\n\n        target.addScaledVector(coeff[4], 1.092548 * (x * y));\n        target.addScaledVector(coeff[5], 1.092548 * (y * z));\n        target.addScaledVector(coeff[6], 0.315392 * (3.0 * z * z - 1.0));\n        target.addScaledVector(coeff[7], 1.092548 * (x * z));\n        target.addScaledVector(coeff[8], 0.546274 * (x * x - y * y));\n        return target;\n      } // get the irradiance (radiance convolved with cosine lobe) in the direction of the normal\n      // target is a Vector3\n      // https://graphics.stanford.edu/papers/envmap/envmap.pdf\n\n    }, {\n      key: \"getIrradianceAt\",\n      value: function getIrradianceAt(normal, target) {\n        // normal is assumed to be unit length\n        var x = normal.x,\n            y = normal.y,\n            z = normal.z;\n        var coeff = this.coefficients; // band 0\n\n        target.copy(coeff[0]).multiplyScalar(0.886227); // π * 0.282095\n        // band 1\n\n        target.addScaledVector(coeff[1], 2.0 * 0.511664 * y); // ( 2 * π / 3 ) * 0.488603\n\n        target.addScaledVector(coeff[2], 2.0 * 0.511664 * z);\n        target.addScaledVector(coeff[3], 2.0 * 0.511664 * x); // band 2\n\n        target.addScaledVector(coeff[4], 2.0 * 0.429043 * x * y); // ( π / 4 ) * 1.092548\n\n        target.addScaledVector(coeff[5], 2.0 * 0.429043 * y * z);\n        target.addScaledVector(coeff[6], 0.743125 * z * z - 0.247708); // ( π / 4 ) * 0.315392 * 3\n\n        target.addScaledVector(coeff[7], 2.0 * 0.429043 * x * z);\n        target.addScaledVector(coeff[8], 0.429043 * (x * x - y * y)); // ( π / 4 ) * 0.546274\n\n        return target;\n      }\n    }, {\n      key: \"add\",\n      value: function add(sh) {\n        for (var _i281 = 0; _i281 < 9; _i281++) {\n          this.coefficients[_i281].add(sh.coefficients[_i281]);\n        }\n\n        return this;\n      }\n    }, {\n      key: \"addScaledSH\",\n      value: function addScaledSH(sh, s) {\n        for (var _i282 = 0; _i282 < 9; _i282++) {\n          this.coefficients[_i282].addScaledVector(sh.coefficients[_i282], s);\n        }\n\n        return this;\n      }\n    }, {\n      key: \"scale\",\n      value: function scale(s) {\n        for (var _i283 = 0; _i283 < 9; _i283++) {\n          this.coefficients[_i283].multiplyScalar(s);\n        }\n\n        return this;\n      }\n    }, {\n      key: \"lerp\",\n      value: function lerp(sh, alpha) {\n        for (var _i284 = 0; _i284 < 9; _i284++) {\n          this.coefficients[_i284].lerp(sh.coefficients[_i284], alpha);\n        }\n\n        return this;\n      }\n    }, {\n      key: \"equals\",\n      value: function equals(sh) {\n        for (var _i285 = 0; _i285 < 9; _i285++) {\n          if (!this.coefficients[_i285].equals(sh.coefficients[_i285])) {\n            return false;\n          }\n        }\n\n        return true;\n      }\n    }, {\n      key: \"copy\",\n      value: function copy(sh) {\n        return this.set(sh.coefficients);\n      }\n    }, {\n      key: \"clone\",\n      value: function clone() {\n        return new this.constructor().copy(this);\n      }\n    }, {\n      key: \"fromArray\",\n      value: function fromArray(array) {\n        var offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n        var coefficients = this.coefficients;\n\n        for (var _i286 = 0; _i286 < 9; _i286++) {\n          coefficients[_i286].fromArray(array, offset + _i286 * 3);\n        }\n\n        return this;\n      }\n    }, {\n      key: \"toArray\",\n      value: function toArray() {\n        var array = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n        var offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n        var coefficients = this.coefficients;\n\n        for (var _i287 = 0; _i287 < 9; _i287++) {\n          coefficients[_i287].toArray(array, offset + _i287 * 3);\n        }\n\n        return array;\n      } // evaluate the basis functions\n      // shBasis is an Array[ 9 ]\n\n    }], [{\n      key: \"getBasisAt\",\n      value: function getBasisAt(normal, shBasis) {\n        // normal is assumed to be unit length\n        var x = normal.x,\n            y = normal.y,\n            z = normal.z; // band 0\n\n        shBasis[0] = 0.282095; // band 1\n\n        shBasis[1] = 0.488603 * y;\n        shBasis[2] = 0.488603 * z;\n        shBasis[3] = 0.488603 * x; // band 2\n\n        shBasis[4] = 1.092548 * x * y;\n        shBasis[5] = 1.092548 * y * z;\n        shBasis[6] = 0.315392 * (3 * z * z - 1);\n        shBasis[7] = 1.092548 * x * z;\n        shBasis[8] = 0.546274 * (x * x - y * y);\n      }\n    }]);\n\n    return SphericalHarmonics3;\n  }();\n\n  SphericalHarmonics3.prototype.isSphericalHarmonics3 = true;\n\n  var LightProbe = /*#__PURE__*/function (_Light7) {\n    _inherits(LightProbe, _Light7);\n\n    var _super124 = _createSuper(LightProbe);\n\n    function LightProbe() {\n      var _this98;\n\n      var sh = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : new SphericalHarmonics3();\n      var intensity = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n\n      _classCallCheck(this, LightProbe);\n\n      _this98 = _super124.call(this, undefined, intensity);\n      _this98.sh = sh;\n      return _this98;\n    }\n\n    _createClass(LightProbe, [{\n      key: \"copy\",\n      value: function copy(source) {\n        _get(_getPrototypeOf(LightProbe.prototype), \"copy\", this).call(this, source);\n\n        this.sh.copy(source.sh);\n        return this;\n      }\n    }, {\n      key: \"fromJSON\",\n      value: function fromJSON(json) {\n        this.intensity = json.intensity; // TODO: Move this bit to Light.fromJSON();\n\n        this.sh.fromArray(json.sh);\n        return this;\n      }\n    }, {\n      key: \"toJSON\",\n      value: function toJSON(meta) {\n        var data = _get(_getPrototypeOf(LightProbe.prototype), \"toJSON\", this).call(this, meta);\n\n        data.object.sh = this.sh.toArray();\n        return data;\n      }\n    }]);\n\n    return LightProbe;\n  }(Light);\n\n  LightProbe.prototype.isLightProbe = true;\n\n  var MaterialLoader = /*#__PURE__*/function (_Loader8) {\n    _inherits(MaterialLoader, _Loader8);\n\n    var _super125 = _createSuper(MaterialLoader);\n\n    function MaterialLoader(manager) {\n      var _this99;\n\n      _classCallCheck(this, MaterialLoader);\n\n      _this99 = _super125.call(this, manager);\n      _this99.textures = {};\n      return _this99;\n    }\n\n    _createClass(MaterialLoader, [{\n      key: \"load\",\n      value: function load(url, onLoad, onProgress, onError) {\n        var scope = this;\n        var loader = new FileLoader(scope.manager);\n        loader.setPath(scope.path);\n        loader.setRequestHeader(scope.requestHeader);\n        loader.setWithCredentials(scope.withCredentials);\n        loader.load(url, function (text) {\n          try {\n            onLoad(scope.parse(JSON.parse(text)));\n          } catch (e) {\n            if (onError) {\n              onError(e);\n            } else {\n              console.error(e);\n            }\n\n            scope.manager.itemError(url);\n          }\n        }, onProgress, onError);\n      }\n    }, {\n      key: \"parse\",\n      value: function parse(json) {\n        var textures = this.textures;\n\n        function getTexture(name) {\n          if (textures[name] === undefined) {\n            console.warn('THREE.MaterialLoader: Undefined texture', name);\n          }\n\n          return textures[name];\n        }\n\n        var material = new Materials[json.type]();\n        if (json.uuid !== undefined) material.uuid = json.uuid;\n        if (json.name !== undefined) material.name = json.name;\n        if (json.color !== undefined && material.color !== undefined) material.color.setHex(json.color);\n        if (json.roughness !== undefined) material.roughness = json.roughness;\n        if (json.metalness !== undefined) material.metalness = json.metalness;\n        if (json.sheen !== undefined) material.sheen = json.sheen;\n        if (json.sheenColor !== undefined) material.sheenColor = new Color().setHex(json.sheenColor);\n        if (json.sheenRoughness !== undefined) material.sheenRoughness = json.sheenRoughness;\n        if (json.emissive !== undefined && material.emissive !== undefined) material.emissive.setHex(json.emissive);\n        if (json.specular !== undefined && material.specular !== undefined) material.specular.setHex(json.specular);\n        if (json.specularIntensity !== undefined) material.specularIntensity = json.specularIntensity;\n        if (json.specularColor !== undefined && material.specularColor !== undefined) material.specularColor.setHex(json.specularColor);\n        if (json.shininess !== undefined) material.shininess = json.shininess;\n        if (json.clearcoat !== undefined) material.clearcoat = json.clearcoat;\n        if (json.clearcoatRoughness !== undefined) material.clearcoatRoughness = json.clearcoatRoughness;\n        if (json.transmission !== undefined) material.transmission = json.transmission;\n        if (json.thickness !== undefined) material.thickness = json.thickness;\n        if (json.attenuationDistance !== undefined) material.attenuationDistance = json.attenuationDistance;\n        if (json.attenuationColor !== undefined && material.attenuationColor !== undefined) material.attenuationColor.setHex(json.attenuationColor);\n        if (json.fog !== undefined) material.fog = json.fog;\n        if (json.flatShading !== undefined) material.flatShading = json.flatShading;\n        if (json.blending !== undefined) material.blending = json.blending;\n        if (json.combine !== undefined) material.combine = json.combine;\n        if (json.side !== undefined) material.side = json.side;\n        if (json.shadowSide !== undefined) material.shadowSide = json.shadowSide;\n        if (json.opacity !== undefined) material.opacity = json.opacity;\n        if (json.format !== undefined) material.format = json.format;\n        if (json.transparent !== undefined) material.transparent = json.transparent;\n        if (json.alphaTest !== undefined) material.alphaTest = json.alphaTest;\n        if (json.depthTest !== undefined) material.depthTest = json.depthTest;\n        if (json.depthWrite !== undefined) material.depthWrite = json.depthWrite;\n        if (json.colorWrite !== undefined) material.colorWrite = json.colorWrite;\n        if (json.stencilWrite !== undefined) material.stencilWrite = json.stencilWrite;\n        if (json.stencilWriteMask !== undefined) material.stencilWriteMask = json.stencilWriteMask;\n        if (json.stencilFunc !== undefined) material.stencilFunc = json.stencilFunc;\n        if (json.stencilRef !== undefined) material.stencilRef = json.stencilRef;\n        if (json.stencilFuncMask !== undefined) material.stencilFuncMask = json.stencilFuncMask;\n        if (json.stencilFail !== undefined) material.stencilFail = json.stencilFail;\n        if (json.stencilZFail !== undefined) material.stencilZFail = json.stencilZFail;\n        if (json.stencilZPass !== undefined) material.stencilZPass = json.stencilZPass;\n        if (json.wireframe !== undefined) material.wireframe = json.wireframe;\n        if (json.wireframeLinewidth !== undefined) material.wireframeLinewidth = json.wireframeLinewidth;\n        if (json.wireframeLinecap !== undefined) material.wireframeLinecap = json.wireframeLinecap;\n        if (json.wireframeLinejoin !== undefined) material.wireframeLinejoin = json.wireframeLinejoin;\n        if (json.rotation !== undefined) material.rotation = json.rotation;\n        if (json.linewidth !== 1) material.linewidth = json.linewidth;\n        if (json.dashSize !== undefined) material.dashSize = json.dashSize;\n        if (json.gapSize !== undefined) material.gapSize = json.gapSize;\n        if (json.scale !== undefined) material.scale = json.scale;\n        if (json.polygonOffset !== undefined) material.polygonOffset = json.polygonOffset;\n        if (json.polygonOffsetFactor !== undefined) material.polygonOffsetFactor = json.polygonOffsetFactor;\n        if (json.polygonOffsetUnits !== undefined) material.polygonOffsetUnits = json.polygonOffsetUnits;\n        if (json.dithering !== undefined) material.dithering = json.dithering;\n        if (json.alphaToCoverage !== undefined) material.alphaToCoverage = json.alphaToCoverage;\n        if (json.premultipliedAlpha !== undefined) material.premultipliedAlpha = json.premultipliedAlpha;\n        if (json.visible !== undefined) material.visible = json.visible;\n        if (json.toneMapped !== undefined) material.toneMapped = json.toneMapped;\n        if (json.userData !== undefined) material.userData = json.userData;\n\n        if (json.vertexColors !== undefined) {\n          if (typeof json.vertexColors === 'number') {\n            material.vertexColors = json.vertexColors > 0 ? true : false;\n          } else {\n            material.vertexColors = json.vertexColors;\n          }\n        } // Shader Material\n\n\n        if (json.uniforms !== undefined) {\n          for (var name in json.uniforms) {\n            var uniform = json.uniforms[name];\n            material.uniforms[name] = {};\n\n            switch (uniform.type) {\n              case 't':\n                material.uniforms[name].value = getTexture(uniform.value);\n                break;\n\n              case 'c':\n                material.uniforms[name].value = new Color().setHex(uniform.value);\n                break;\n\n              case 'v2':\n                material.uniforms[name].value = new Vector2().fromArray(uniform.value);\n                break;\n\n              case 'v3':\n                material.uniforms[name].value = new Vector3().fromArray(uniform.value);\n                break;\n\n              case 'v4':\n                material.uniforms[name].value = new Vector4().fromArray(uniform.value);\n                break;\n\n              case 'm3':\n                material.uniforms[name].value = new Matrix3().fromArray(uniform.value);\n                break;\n\n              case 'm4':\n                material.uniforms[name].value = new Matrix4().fromArray(uniform.value);\n                break;\n\n              default:\n                material.uniforms[name].value = uniform.value;\n            }\n          }\n        }\n\n        if (json.defines !== undefined) material.defines = json.defines;\n        if (json.vertexShader !== undefined) material.vertexShader = json.vertexShader;\n        if (json.fragmentShader !== undefined) material.fragmentShader = json.fragmentShader;\n\n        if (json.extensions !== undefined) {\n          for (var key in json.extensions) {\n            material.extensions[key] = json.extensions[key];\n          }\n        } // Deprecated\n\n\n        if (json.shading !== undefined) material.flatShading = json.shading === 1; // THREE.FlatShading\n        // for PointsMaterial\n\n        if (json.size !== undefined) material.size = json.size;\n        if (json.sizeAttenuation !== undefined) material.sizeAttenuation = json.sizeAttenuation; // maps\n\n        if (json.map !== undefined) material.map = getTexture(json.map);\n        if (json.matcap !== undefined) material.matcap = getTexture(json.matcap);\n        if (json.alphaMap !== undefined) material.alphaMap = getTexture(json.alphaMap);\n        if (json.bumpMap !== undefined) material.bumpMap = getTexture(json.bumpMap);\n        if (json.bumpScale !== undefined) material.bumpScale = json.bumpScale;\n        if (json.normalMap !== undefined) material.normalMap = getTexture(json.normalMap);\n        if (json.normalMapType !== undefined) material.normalMapType = json.normalMapType;\n\n        if (json.normalScale !== undefined) {\n          var normalScale = json.normalScale;\n\n          if (Array.isArray(normalScale) === false) {\n            // Blender exporter used to export a scalar. See #7459\n            normalScale = [normalScale, normalScale];\n          }\n\n          material.normalScale = new Vector2().fromArray(normalScale);\n        }\n\n        if (json.displacementMap !== undefined) material.displacementMap = getTexture(json.displacementMap);\n        if (json.displacementScale !== undefined) material.displacementScale = json.displacementScale;\n        if (json.displacementBias !== undefined) material.displacementBias = json.displacementBias;\n        if (json.roughnessMap !== undefined) material.roughnessMap = getTexture(json.roughnessMap);\n        if (json.metalnessMap !== undefined) material.metalnessMap = getTexture(json.metalnessMap);\n        if (json.emissiveMap !== undefined) material.emissiveMap = getTexture(json.emissiveMap);\n        if (json.emissiveIntensity !== undefined) material.emissiveIntensity = json.emissiveIntensity;\n        if (json.specularMap !== undefined) material.specularMap = getTexture(json.specularMap);\n        if (json.specularIntensityMap !== undefined) material.specularIntensityMap = getTexture(json.specularIntensityMap);\n        if (json.specularColorMap !== undefined) material.specularColorMap = getTexture(json.specularColorMap);\n        if (json.envMap !== undefined) material.envMap = getTexture(json.envMap);\n        if (json.envMapIntensity !== undefined) material.envMapIntensity = json.envMapIntensity;\n        if (json.reflectivity !== undefined) material.reflectivity = json.reflectivity;\n        if (json.refractionRatio !== undefined) material.refractionRatio = json.refractionRatio;\n        if (json.lightMap !== undefined) material.lightMap = getTexture(json.lightMap);\n        if (json.lightMapIntensity !== undefined) material.lightMapIntensity = json.lightMapIntensity;\n        if (json.aoMap !== undefined) material.aoMap = getTexture(json.aoMap);\n        if (json.aoMapIntensity !== undefined) material.aoMapIntensity = json.aoMapIntensity;\n        if (json.gradientMap !== undefined) material.gradientMap = getTexture(json.gradientMap);\n        if (json.clearcoatMap !== undefined) material.clearcoatMap = getTexture(json.clearcoatMap);\n        if (json.clearcoatRoughnessMap !== undefined) material.clearcoatRoughnessMap = getTexture(json.clearcoatRoughnessMap);\n        if (json.clearcoatNormalMap !== undefined) material.clearcoatNormalMap = getTexture(json.clearcoatNormalMap);\n        if (json.clearcoatNormalScale !== undefined) material.clearcoatNormalScale = new Vector2().fromArray(json.clearcoatNormalScale);\n        if (json.transmissionMap !== undefined) material.transmissionMap = getTexture(json.transmissionMap);\n        if (json.thicknessMap !== undefined) material.thicknessMap = getTexture(json.thicknessMap);\n        if (json.sheenColorMap !== undefined) material.sheenColorMap = getTexture(json.sheenColorMap);\n        if (json.sheenRoughnessMap !== undefined) material.sheenRoughnessMap = getTexture(json.sheenRoughnessMap);\n        return material;\n      }\n    }, {\n      key: \"setTextures\",\n      value: function setTextures(value) {\n        this.textures = value;\n        return this;\n      }\n    }]);\n\n    return MaterialLoader;\n  }(Loader);\n\n  var LoaderUtils = /*#__PURE__*/function () {\n    function LoaderUtils() {\n      _classCallCheck(this, LoaderUtils);\n    }\n\n    _createClass(LoaderUtils, null, [{\n      key: \"decodeText\",\n      value: function decodeText(array) {\n        if (typeof TextDecoder !== 'undefined') {\n          return new TextDecoder().decode(array);\n        } // Avoid the String.fromCharCode.apply(null, array) shortcut, which\n        // throws a \"maximum call stack size exceeded\" error for large arrays.\n\n\n        var s = '';\n\n        for (var _i288 = 0, il = array.length; _i288 < il; _i288++) {\n          // Implicitly assumes little-endian.\n          s += String.fromCharCode(array[_i288]);\n        }\n\n        try {\n          // merges multi-byte utf-8 characters.\n          return decodeURIComponent(escape(s));\n        } catch (e) {\n          // see #16358\n          return s;\n        }\n      }\n    }, {\n      key: \"extractUrlBase\",\n      value: function extractUrlBase(url) {\n        var index = url.lastIndexOf('/');\n        if (index === -1) return './';\n        return url.substr(0, index + 1);\n      }\n    }, {\n      key: \"resolveURL\",\n      value: function resolveURL(url, path) {\n        // Invalid URL\n        if (typeof url !== 'string' || url === '') return ''; // Host Relative URL\n\n        if (/^https?:\\/\\//i.test(path) && /^\\//.test(url)) {\n          path = path.replace(/(^https?:\\/\\/[^\\/]+).*/i, '$1');\n        } // Absolute URL http://,https://,//\n\n\n        if (/^(https?:)?\\/\\//i.test(url)) return url; // Data URI\n\n        if (/^data:.*,.*$/i.test(url)) return url; // Blob URL\n\n        if (/^blob:.*$/i.test(url)) return url; // Relative URL\n\n        return path + url;\n      }\n    }]);\n\n    return LoaderUtils;\n  }();\n\n  var InstancedBufferGeometry = /*#__PURE__*/function (_BufferGeometry16) {\n    _inherits(InstancedBufferGeometry, _BufferGeometry16);\n\n    var _super126 = _createSuper(InstancedBufferGeometry);\n\n    function InstancedBufferGeometry() {\n      var _this100;\n\n      _classCallCheck(this, InstancedBufferGeometry);\n\n      _this100 = _super126.call(this);\n      _this100.type = 'InstancedBufferGeometry';\n      _this100.instanceCount = Infinity;\n      return _this100;\n    }\n\n    _createClass(InstancedBufferGeometry, [{\n      key: \"copy\",\n      value: function copy(source) {\n        _get(_getPrototypeOf(InstancedBufferGeometry.prototype), \"copy\", this).call(this, source);\n\n        this.instanceCount = source.instanceCount;\n        return this;\n      }\n    }, {\n      key: \"clone\",\n      value: function clone() {\n        return new this.constructor().copy(this);\n      }\n    }, {\n      key: \"toJSON\",\n      value: function toJSON() {\n        var data = _get(_getPrototypeOf(InstancedBufferGeometry.prototype), \"toJSON\", this).call(this, this);\n\n        data.instanceCount = this.instanceCount;\n        data.isInstancedBufferGeometry = true;\n        return data;\n      }\n    }]);\n\n    return InstancedBufferGeometry;\n  }(BufferGeometry);\n\n  InstancedBufferGeometry.prototype.isInstancedBufferGeometry = true;\n\n  var BufferGeometryLoader = /*#__PURE__*/function (_Loader9) {\n    _inherits(BufferGeometryLoader, _Loader9);\n\n    var _super127 = _createSuper(BufferGeometryLoader);\n\n    function BufferGeometryLoader(manager) {\n      _classCallCheck(this, BufferGeometryLoader);\n\n      return _super127.call(this, manager);\n    }\n\n    _createClass(BufferGeometryLoader, [{\n      key: \"load\",\n      value: function load(url, onLoad, onProgress, onError) {\n        var scope = this;\n        var loader = new FileLoader(scope.manager);\n        loader.setPath(scope.path);\n        loader.setRequestHeader(scope.requestHeader);\n        loader.setWithCredentials(scope.withCredentials);\n        loader.load(url, function (text) {\n          try {\n            onLoad(scope.parse(JSON.parse(text)));\n          } catch (e) {\n            if (onError) {\n              onError(e);\n            } else {\n              console.error(e);\n            }\n\n            scope.manager.itemError(url);\n          }\n        }, onProgress, onError);\n      }\n    }, {\n      key: \"parse\",\n      value: function parse(json) {\n        var interleavedBufferMap = {};\n        var arrayBufferMap = {};\n\n        function getInterleavedBuffer(json, uuid) {\n          if (interleavedBufferMap[uuid] !== undefined) return interleavedBufferMap[uuid];\n          var interleavedBuffers = json.interleavedBuffers;\n          var interleavedBuffer = interleavedBuffers[uuid];\n          var buffer = getArrayBuffer(json, interleavedBuffer.buffer);\n          var array = getTypedArray(interleavedBuffer.type, buffer);\n          var ib = new InterleavedBuffer(array, interleavedBuffer.stride);\n          ib.uuid = interleavedBuffer.uuid;\n          interleavedBufferMap[uuid] = ib;\n          return ib;\n        }\n\n        function getArrayBuffer(json, uuid) {\n          if (arrayBufferMap[uuid] !== undefined) return arrayBufferMap[uuid];\n          var arrayBuffers = json.arrayBuffers;\n          var arrayBuffer = arrayBuffers[uuid];\n          var ab = new Uint32Array(arrayBuffer).buffer;\n          arrayBufferMap[uuid] = ab;\n          return ab;\n        }\n\n        var geometry = json.isInstancedBufferGeometry ? new InstancedBufferGeometry() : new BufferGeometry();\n        var index = json.data.index;\n\n        if (index !== undefined) {\n          var typedArray = getTypedArray(index.type, index.array);\n          geometry.setIndex(new BufferAttribute(typedArray, 1));\n        }\n\n        var attributes = json.data.attributes;\n\n        for (var key in attributes) {\n          var attribute = attributes[key];\n          var bufferAttribute = void 0;\n\n          if (attribute.isInterleavedBufferAttribute) {\n            var interleavedBuffer = getInterleavedBuffer(json.data, attribute.data);\n            bufferAttribute = new InterleavedBufferAttribute(interleavedBuffer, attribute.itemSize, attribute.offset, attribute.normalized);\n          } else {\n            var _typedArray = getTypedArray(attribute.type, attribute.array);\n\n            var bufferAttributeConstr = attribute.isInstancedBufferAttribute ? InstancedBufferAttribute : BufferAttribute;\n            bufferAttribute = new bufferAttributeConstr(_typedArray, attribute.itemSize, attribute.normalized);\n          }\n\n          if (attribute.name !== undefined) bufferAttribute.name = attribute.name;\n          if (attribute.usage !== undefined) bufferAttribute.setUsage(attribute.usage);\n\n          if (attribute.updateRange !== undefined) {\n            bufferAttribute.updateRange.offset = attribute.updateRange.offset;\n            bufferAttribute.updateRange.count = attribute.updateRange.count;\n          }\n\n          geometry.setAttribute(key, bufferAttribute);\n        }\n\n        var morphAttributes = json.data.morphAttributes;\n\n        if (morphAttributes) {\n          for (var _key3 in morphAttributes) {\n            var attributeArray = morphAttributes[_key3];\n            var array = [];\n\n            for (var _i289 = 0, il = attributeArray.length; _i289 < il; _i289++) {\n              var _attribute3 = attributeArray[_i289];\n\n              var _bufferAttribute = void 0;\n\n              if (_attribute3.isInterleavedBufferAttribute) {\n                var _interleavedBuffer = getInterleavedBuffer(json.data, _attribute3.data);\n\n                _bufferAttribute = new InterleavedBufferAttribute(_interleavedBuffer, _attribute3.itemSize, _attribute3.offset, _attribute3.normalized);\n              } else {\n                var _typedArray2 = getTypedArray(_attribute3.type, _attribute3.array);\n\n                _bufferAttribute = new BufferAttribute(_typedArray2, _attribute3.itemSize, _attribute3.normalized);\n              }\n\n              if (_attribute3.name !== undefined) _bufferAttribute.name = _attribute3.name;\n              array.push(_bufferAttribute);\n            }\n\n            geometry.morphAttributes[_key3] = array;\n          }\n        }\n\n        var morphTargetsRelative = json.data.morphTargetsRelative;\n\n        if (morphTargetsRelative) {\n          geometry.morphTargetsRelative = true;\n        }\n\n        var groups = json.data.groups || json.data.drawcalls || json.data.offsets;\n\n        if (groups !== undefined) {\n          for (var _i290 = 0, n = groups.length; _i290 !== n; ++_i290) {\n            var group = groups[_i290];\n            geometry.addGroup(group.start, group.count, group.materialIndex);\n          }\n        }\n\n        var boundingSphere = json.data.boundingSphere;\n\n        if (boundingSphere !== undefined) {\n          var center = new Vector3();\n\n          if (boundingSphere.center !== undefined) {\n            center.fromArray(boundingSphere.center);\n          }\n\n          geometry.boundingSphere = new Sphere(center, boundingSphere.radius);\n        }\n\n        if (json.name) geometry.name = json.name;\n        if (json.userData) geometry.userData = json.userData;\n        return geometry;\n      }\n    }]);\n\n    return BufferGeometryLoader;\n  }(Loader);\n\n  var ObjectLoader = /*#__PURE__*/function (_Loader10) {\n    _inherits(ObjectLoader, _Loader10);\n\n    var _super128 = _createSuper(ObjectLoader);\n\n    function ObjectLoader(manager) {\n      _classCallCheck(this, ObjectLoader);\n\n      return _super128.call(this, manager);\n    }\n\n    _createClass(ObjectLoader, [{\n      key: \"load\",\n      value: function load(url, onLoad, onProgress, onError) {\n        var scope = this;\n        var path = this.path === '' ? LoaderUtils.extractUrlBase(url) : this.path;\n        this.resourcePath = this.resourcePath || path;\n        var loader = new FileLoader(this.manager);\n        loader.setPath(this.path);\n        loader.setRequestHeader(this.requestHeader);\n        loader.setWithCredentials(this.withCredentials);\n        loader.load(url, function (text) {\n          var json = null;\n\n          try {\n            json = JSON.parse(text);\n          } catch (error) {\n            if (onError !== undefined) onError(error);\n            console.error('THREE:ObjectLoader: Can\\'t parse ' + url + '.', error.message);\n            return;\n          }\n\n          var metadata = json.metadata;\n\n          if (metadata === undefined || metadata.type === undefined || metadata.type.toLowerCase() === 'geometry') {\n            console.error('THREE.ObjectLoader: Can\\'t load ' + url);\n            return;\n          }\n\n          scope.parse(json, onLoad);\n        }, onProgress, onError);\n      }\n    }, {\n      key: \"loadAsync\",\n      value: function () {\n        var _loadAsync = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(url, onProgress) {\n          var scope, path, loader, text, json, metadata;\n          return _regeneratorRuntime.wrap(function _callee2$(_context6) {\n            while (1) {\n              switch (_context6.prev = _context6.next) {\n                case 0:\n                  scope = this;\n                  path = this.path === '' ? LoaderUtils.extractUrlBase(url) : this.path;\n                  this.resourcePath = this.resourcePath || path;\n                  loader = new FileLoader(this.manager);\n                  loader.setPath(this.path);\n                  loader.setRequestHeader(this.requestHeader);\n                  loader.setWithCredentials(this.withCredentials);\n                  _context6.next = 9;\n                  return loader.loadAsync(url, onProgress);\n\n                case 9:\n                  text = _context6.sent;\n                  json = JSON.parse(text);\n                  metadata = json.metadata;\n\n                  if (!(metadata === undefined || metadata.type === undefined || metadata.type.toLowerCase() === 'geometry')) {\n                    _context6.next = 14;\n                    break;\n                  }\n\n                  throw new Error('THREE.ObjectLoader: Can\\'t load ' + url);\n\n                case 14:\n                  _context6.next = 16;\n                  return scope.parseAsync(json);\n\n                case 16:\n                  return _context6.abrupt(\"return\", _context6.sent);\n\n                case 17:\n                case \"end\":\n                  return _context6.stop();\n              }\n            }\n          }, _callee2, this);\n        }));\n\n        function loadAsync(_x7, _x8) {\n          return _loadAsync.apply(this, arguments);\n        }\n\n        return loadAsync;\n      }()\n    }, {\n      key: \"parse\",\n      value: function parse(json, onLoad) {\n        var animations = this.parseAnimations(json.animations);\n        var shapes = this.parseShapes(json.shapes);\n        var geometries = this.parseGeometries(json.geometries, shapes);\n        var images = this.parseImages(json.images, function () {\n          if (onLoad !== undefined) onLoad(object);\n        });\n        var textures = this.parseTextures(json.textures, images);\n        var materials = this.parseMaterials(json.materials, textures);\n        var object = this.parseObject(json.object, geometries, materials, textures, animations);\n        var skeletons = this.parseSkeletons(json.skeletons, object);\n        this.bindSkeletons(object, skeletons); //\n\n        if (onLoad !== undefined) {\n          var hasImages = false;\n\n          for (var uuid in images) {\n            if (images[uuid] instanceof HTMLImageElement) {\n              hasImages = true;\n              break;\n            }\n          }\n\n          if (hasImages === false) onLoad(object);\n        }\n\n        return object;\n      }\n    }, {\n      key: \"parseAsync\",\n      value: function () {\n        var _parseAsync = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(json) {\n          var animations, shapes, geometries, images, textures, materials, object, skeletons;\n          return _regeneratorRuntime.wrap(function _callee3$(_context7) {\n            while (1) {\n              switch (_context7.prev = _context7.next) {\n                case 0:\n                  animations = this.parseAnimations(json.animations);\n                  shapes = this.parseShapes(json.shapes);\n                  geometries = this.parseGeometries(json.geometries, shapes);\n                  _context7.next = 5;\n                  return this.parseImagesAsync(json.images);\n\n                case 5:\n                  images = _context7.sent;\n                  textures = this.parseTextures(json.textures, images);\n                  materials = this.parseMaterials(json.materials, textures);\n                  object = this.parseObject(json.object, geometries, materials, textures, animations);\n                  skeletons = this.parseSkeletons(json.skeletons, object);\n                  this.bindSkeletons(object, skeletons);\n                  return _context7.abrupt(\"return\", object);\n\n                case 12:\n                case \"end\":\n                  return _context7.stop();\n              }\n            }\n          }, _callee3, this);\n        }));\n\n        function parseAsync(_x9) {\n          return _parseAsync.apply(this, arguments);\n        }\n\n        return parseAsync;\n      }()\n    }, {\n      key: \"parseShapes\",\n      value: function parseShapes(json) {\n        var shapes = {};\n\n        if (json !== undefined) {\n          for (var _i291 = 0, l = json.length; _i291 < l; _i291++) {\n            var shape = new Shape().fromJSON(json[_i291]);\n            shapes[shape.uuid] = shape;\n          }\n        }\n\n        return shapes;\n      }\n    }, {\n      key: \"parseSkeletons\",\n      value: function parseSkeletons(json, object) {\n        var skeletons = {};\n        var bones = {}; // generate bone lookup table\n\n        object.traverse(function (child) {\n          if (child.isBone) bones[child.uuid] = child;\n        }); // create skeletons\n\n        if (json !== undefined) {\n          for (var _i292 = 0, l = json.length; _i292 < l; _i292++) {\n            var skeleton = new Skeleton().fromJSON(json[_i292], bones);\n            skeletons[skeleton.uuid] = skeleton;\n          }\n        }\n\n        return skeletons;\n      }\n    }, {\n      key: \"parseGeometries\",\n      value: function parseGeometries(json, shapes) {\n        var geometries = {};\n\n        if (json !== undefined) {\n          var bufferGeometryLoader = new BufferGeometryLoader();\n\n          for (var _i293 = 0, l = json.length; _i293 < l; _i293++) {\n            var geometry = void 0;\n            var data = json[_i293];\n\n            switch (data.type) {\n              case 'BufferGeometry':\n              case 'InstancedBufferGeometry':\n                geometry = bufferGeometryLoader.parse(data);\n                break;\n\n              case 'Geometry':\n                console.error('THREE.ObjectLoader: The legacy Geometry type is no longer supported.');\n                break;\n\n              default:\n                if (data.type in Geometries) {\n                  geometry = Geometries[data.type].fromJSON(data, shapes);\n                } else {\n                  console.warn(\"THREE.ObjectLoader: Unsupported geometry type \\\"\".concat(data.type, \"\\\"\"));\n                }\n\n            }\n\n            geometry.uuid = data.uuid;\n            if (data.name !== undefined) geometry.name = data.name;\n            if (geometry.isBufferGeometry === true && data.userData !== undefined) geometry.userData = data.userData;\n            geometries[data.uuid] = geometry;\n          }\n        }\n\n        return geometries;\n      }\n    }, {\n      key: \"parseMaterials\",\n      value: function parseMaterials(json, textures) {\n        var cache = {}; // MultiMaterial\n\n        var materials = {};\n\n        if (json !== undefined) {\n          var loader = new MaterialLoader();\n          loader.setTextures(textures);\n\n          for (var _i294 = 0, l = json.length; _i294 < l; _i294++) {\n            var data = json[_i294];\n\n            if (data.type === 'MultiMaterial') {\n              // Deprecated\n              var array = [];\n\n              for (var j = 0; j < data.materials.length; j++) {\n                var material = data.materials[j];\n\n                if (cache[material.uuid] === undefined) {\n                  cache[material.uuid] = loader.parse(material);\n                }\n\n                array.push(cache[material.uuid]);\n              }\n\n              materials[data.uuid] = array;\n            } else {\n              if (cache[data.uuid] === undefined) {\n                cache[data.uuid] = loader.parse(data);\n              }\n\n              materials[data.uuid] = cache[data.uuid];\n            }\n          }\n        }\n\n        return materials;\n      }\n    }, {\n      key: \"parseAnimations\",\n      value: function parseAnimations(json) {\n        var animations = {};\n\n        if (json !== undefined) {\n          for (var _i295 = 0; _i295 < json.length; _i295++) {\n            var data = json[_i295];\n            var clip = AnimationClip.parse(data);\n            animations[clip.uuid] = clip;\n          }\n        }\n\n        return animations;\n      }\n    }, {\n      key: \"parseImages\",\n      value: function parseImages(json, onLoad) {\n        var scope = this;\n        var images = {};\n        var loader;\n\n        function loadImage(url) {\n          scope.manager.itemStart(url);\n          return loader.load(url, function () {\n            scope.manager.itemEnd(url);\n          }, undefined, function () {\n            scope.manager.itemError(url);\n            scope.manager.itemEnd(url);\n          });\n        }\n\n        function deserializeImage(image) {\n          if (typeof image === 'string') {\n            var url = image;\n            var path = /^(\\/\\/)|([a-z]+:(\\/\\/)?)/i.test(url) ? url : scope.resourcePath + url;\n            return loadImage(path);\n          } else {\n            if (image.data) {\n              return {\n                data: getTypedArray(image.type, image.data),\n                width: image.width,\n                height: image.height\n              };\n            } else {\n              return null;\n            }\n          }\n        }\n\n        if (json !== undefined && json.length > 0) {\n          var manager = new LoadingManager(onLoad);\n          loader = new ImageLoader(manager);\n          loader.setCrossOrigin(this.crossOrigin);\n\n          for (var _i296 = 0, il = json.length; _i296 < il; _i296++) {\n            var image = json[_i296];\n            var url = image.url;\n\n            if (Array.isArray(url)) {\n              // load array of images e.g CubeTexture\n              images[image.uuid] = [];\n\n              for (var j = 0, jl = url.length; j < jl; j++) {\n                var currentUrl = url[j];\n                var deserializedImage = deserializeImage(currentUrl);\n\n                if (deserializedImage !== null) {\n                  if (deserializedImage instanceof HTMLImageElement) {\n                    images[image.uuid].push(deserializedImage);\n                  } else {\n                    // special case: handle array of data textures for cube textures\n                    images[image.uuid].push(new DataTexture(deserializedImage.data, deserializedImage.width, deserializedImage.height));\n                  }\n                }\n              }\n            } else {\n              // load single image\n              var _deserializedImage = deserializeImage(image.url);\n\n              if (_deserializedImage !== null) {\n                images[image.uuid] = _deserializedImage;\n              }\n            }\n          }\n        }\n\n        return images;\n      }\n    }, {\n      key: \"parseImagesAsync\",\n      value: function () {\n        var _parseImagesAsync = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5(json) {\n          var scope, images, loader, deserializeImage, _deserializeImage, _i297, il, image, url, j, jl, currentUrl, deserializedImage, _deserializedImage2;\n\n          return _regeneratorRuntime.wrap(function _callee5$(_context9) {\n            while (1) {\n              switch (_context9.prev = _context9.next) {\n                case 0:\n                  _deserializeImage = function _deserializeImage3() {\n                    _deserializeImage = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(image) {\n                      var _url, path;\n\n                      return _regeneratorRuntime.wrap(function _callee4$(_context8) {\n                        while (1) {\n                          switch (_context8.prev = _context8.next) {\n                            case 0:\n                              if (!(typeof image === 'string')) {\n                                _context8.next = 8;\n                                break;\n                              }\n\n                              _url = image;\n                              path = /^(\\/\\/)|([a-z]+:(\\/\\/)?)/i.test(_url) ? _url : scope.resourcePath + _url;\n                              _context8.next = 5;\n                              return loader.loadAsync(path);\n\n                            case 5:\n                              return _context8.abrupt(\"return\", _context8.sent);\n\n                            case 8:\n                              if (!image.data) {\n                                _context8.next = 12;\n                                break;\n                              }\n\n                              return _context8.abrupt(\"return\", {\n                                data: getTypedArray(image.type, image.data),\n                                width: image.width,\n                                height: image.height\n                              });\n\n                            case 12:\n                              return _context8.abrupt(\"return\", null);\n\n                            case 13:\n                            case \"end\":\n                              return _context8.stop();\n                          }\n                        }\n                      }, _callee4);\n                    }));\n                    return _deserializeImage.apply(this, arguments);\n                  };\n\n                  deserializeImage = function _deserializeImage2(_x11) {\n                    return _deserializeImage.apply(this, arguments);\n                  };\n\n                  scope = this;\n                  images = {};\n\n                  if (!(json !== undefined && json.length > 0)) {\n                    _context9.next = 32;\n                    break;\n                  }\n\n                  loader = new ImageLoader(this.manager);\n                  loader.setCrossOrigin(this.crossOrigin);\n                  _i297 = 0, il = json.length;\n\n                case 8:\n                  if (!(_i297 < il)) {\n                    _context9.next = 32;\n                    break;\n                  }\n\n                  image = json[_i297];\n                  url = image.url;\n\n                  if (!Array.isArray(url)) {\n                    _context9.next = 25;\n                    break;\n                  }\n\n                  // load array of images e.g CubeTexture\n                  images[image.uuid] = [];\n                  j = 0, jl = url.length;\n\n                case 14:\n                  if (!(j < jl)) {\n                    _context9.next = 23;\n                    break;\n                  }\n\n                  currentUrl = url[j];\n                  _context9.next = 18;\n                  return deserializeImage(currentUrl);\n\n                case 18:\n                  deserializedImage = _context9.sent;\n\n                  if (deserializedImage !== null) {\n                    if (deserializedImage instanceof HTMLImageElement) {\n                      images[image.uuid].push(deserializedImage);\n                    } else {\n                      // special case: handle array of data textures for cube textures\n                      images[image.uuid].push(new DataTexture(deserializedImage.data, deserializedImage.width, deserializedImage.height));\n                    }\n                  }\n\n                case 20:\n                  j++;\n                  _context9.next = 14;\n                  break;\n\n                case 23:\n                  _context9.next = 29;\n                  break;\n\n                case 25:\n                  _context9.next = 27;\n                  return deserializeImage(image.url);\n\n                case 27:\n                  _deserializedImage2 = _context9.sent;\n\n                  if (_deserializedImage2 !== null) {\n                    images[image.uuid] = _deserializedImage2;\n                  }\n\n                case 29:\n                  _i297++;\n                  _context9.next = 8;\n                  break;\n\n                case 32:\n                  return _context9.abrupt(\"return\", images);\n\n                case 33:\n                case \"end\":\n                  return _context9.stop();\n              }\n            }\n          }, _callee5, this);\n        }));\n\n        function parseImagesAsync(_x10) {\n          return _parseImagesAsync.apply(this, arguments);\n        }\n\n        return parseImagesAsync;\n      }()\n    }, {\n      key: \"parseTextures\",\n      value: function parseTextures(json, images) {\n        function parseConstant(value, type) {\n          if (typeof value === 'number') return value;\n          console.warn('THREE.ObjectLoader.parseTexture: Constant should be in numeric form.', value);\n          return type[value];\n        }\n\n        var textures = {};\n\n        if (json !== undefined) {\n          for (var _i298 = 0, l = json.length; _i298 < l; _i298++) {\n            var data = json[_i298];\n\n            if (data.image === undefined) {\n              console.warn('THREE.ObjectLoader: No \"image\" specified for', data.uuid);\n            }\n\n            if (images[data.image] === undefined) {\n              console.warn('THREE.ObjectLoader: Undefined image', data.image);\n            }\n\n            var texture = void 0;\n            var image = images[data.image];\n\n            if (Array.isArray(image)) {\n              texture = new CubeTexture(image);\n              if (image.length === 6) texture.needsUpdate = true;\n            } else {\n              if (image && image.data) {\n                texture = new DataTexture(image.data, image.width, image.height);\n              } else {\n                texture = new Texture(image);\n              }\n\n              if (image) texture.needsUpdate = true; // textures can have undefined image data\n            }\n\n            texture.uuid = data.uuid;\n            if (data.name !== undefined) texture.name = data.name;\n            if (data.mapping !== undefined) texture.mapping = parseConstant(data.mapping, TEXTURE_MAPPING);\n            if (data.offset !== undefined) texture.offset.fromArray(data.offset);\n            if (data.repeat !== undefined) texture.repeat.fromArray(data.repeat);\n            if (data.center !== undefined) texture.center.fromArray(data.center);\n            if (data.rotation !== undefined) texture.rotation = data.rotation;\n\n            if (data.wrap !== undefined) {\n              texture.wrapS = parseConstant(data.wrap[0], TEXTURE_WRAPPING);\n              texture.wrapT = parseConstant(data.wrap[1], TEXTURE_WRAPPING);\n            }\n\n            if (data.format !== undefined) texture.format = data.format;\n            if (data.type !== undefined) texture.type = data.type;\n            if (data.encoding !== undefined) texture.encoding = data.encoding;\n            if (data.minFilter !== undefined) texture.minFilter = parseConstant(data.minFilter, TEXTURE_FILTER);\n            if (data.magFilter !== undefined) texture.magFilter = parseConstant(data.magFilter, TEXTURE_FILTER);\n            if (data.anisotropy !== undefined) texture.anisotropy = data.anisotropy;\n            if (data.flipY !== undefined) texture.flipY = data.flipY;\n            if (data.premultiplyAlpha !== undefined) texture.premultiplyAlpha = data.premultiplyAlpha;\n            if (data.unpackAlignment !== undefined) texture.unpackAlignment = data.unpackAlignment;\n            if (data.userData !== undefined) texture.userData = data.userData;\n            textures[data.uuid] = texture;\n          }\n        }\n\n        return textures;\n      }\n    }, {\n      key: \"parseObject\",\n      value: function parseObject(data, geometries, materials, textures, animations) {\n        var object;\n\n        function getGeometry(name) {\n          if (geometries[name] === undefined) {\n            console.warn('THREE.ObjectLoader: Undefined geometry', name);\n          }\n\n          return geometries[name];\n        }\n\n        function getMaterial(name) {\n          if (name === undefined) return undefined;\n\n          if (Array.isArray(name)) {\n            var array = [];\n\n            for (var _i299 = 0, l = name.length; _i299 < l; _i299++) {\n              var uuid = name[_i299];\n\n              if (materials[uuid] === undefined) {\n                console.warn('THREE.ObjectLoader: Undefined material', uuid);\n              }\n\n              array.push(materials[uuid]);\n            }\n\n            return array;\n          }\n\n          if (materials[name] === undefined) {\n            console.warn('THREE.ObjectLoader: Undefined material', name);\n          }\n\n          return materials[name];\n        }\n\n        function getTexture(uuid) {\n          if (textures[uuid] === undefined) {\n            console.warn('THREE.ObjectLoader: Undefined texture', uuid);\n          }\n\n          return textures[uuid];\n        }\n\n        var geometry, material;\n\n        switch (data.type) {\n          case 'Scene':\n            object = new Scene();\n\n            if (data.background !== undefined) {\n              if (Number.isInteger(data.background)) {\n                object.background = new Color(data.background);\n              } else {\n                object.background = getTexture(data.background);\n              }\n            }\n\n            if (data.environment !== undefined) {\n              object.environment = getTexture(data.environment);\n            }\n\n            if (data.fog !== undefined) {\n              if (data.fog.type === 'Fog') {\n                object.fog = new Fog(data.fog.color, data.fog.near, data.fog.far);\n              } else if (data.fog.type === 'FogExp2') {\n                object.fog = new FogExp2(data.fog.color, data.fog.density);\n              }\n            }\n\n            break;\n\n          case 'PerspectiveCamera':\n            object = new PerspectiveCamera(data.fov, data.aspect, data.near, data.far);\n            if (data.focus !== undefined) object.focus = data.focus;\n            if (data.zoom !== undefined) object.zoom = data.zoom;\n            if (data.filmGauge !== undefined) object.filmGauge = data.filmGauge;\n            if (data.filmOffset !== undefined) object.filmOffset = data.filmOffset;\n            if (data.view !== undefined) object.view = Object.assign({}, data.view);\n            break;\n\n          case 'OrthographicCamera':\n            object = new OrthographicCamera(data.left, data.right, data.top, data.bottom, data.near, data.far);\n            if (data.zoom !== undefined) object.zoom = data.zoom;\n            if (data.view !== undefined) object.view = Object.assign({}, data.view);\n            break;\n\n          case 'AmbientLight':\n            object = new AmbientLight(data.color, data.intensity);\n            break;\n\n          case 'DirectionalLight':\n            object = new DirectionalLight(data.color, data.intensity);\n            break;\n\n          case 'PointLight':\n            object = new PointLight(data.color, data.intensity, data.distance, data.decay);\n            break;\n\n          case 'RectAreaLight':\n            object = new RectAreaLight(data.color, data.intensity, data.width, data.height);\n            break;\n\n          case 'SpotLight':\n            object = new SpotLight(data.color, data.intensity, data.distance, data.angle, data.penumbra, data.decay);\n            break;\n\n          case 'HemisphereLight':\n            object = new HemisphereLight(data.color, data.groundColor, data.intensity);\n            break;\n\n          case 'LightProbe':\n            object = new LightProbe().fromJSON(data);\n            break;\n\n          case 'SkinnedMesh':\n            geometry = getGeometry(data.geometry);\n            material = getMaterial(data.material);\n            object = new SkinnedMesh(geometry, material);\n            if (data.bindMode !== undefined) object.bindMode = data.bindMode;\n            if (data.bindMatrix !== undefined) object.bindMatrix.fromArray(data.bindMatrix);\n            if (data.skeleton !== undefined) object.skeleton = data.skeleton;\n            break;\n\n          case 'Mesh':\n            geometry = getGeometry(data.geometry);\n            material = getMaterial(data.material);\n            object = new Mesh(geometry, material);\n            break;\n\n          case 'InstancedMesh':\n            geometry = getGeometry(data.geometry);\n            material = getMaterial(data.material);\n            var count = data.count;\n            var instanceMatrix = data.instanceMatrix;\n            var instanceColor = data.instanceColor;\n            object = new InstancedMesh(geometry, material, count);\n            object.instanceMatrix = new InstancedBufferAttribute(new Float32Array(instanceMatrix.array), 16);\n            if (instanceColor !== undefined) object.instanceColor = new InstancedBufferAttribute(new Float32Array(instanceColor.array), instanceColor.itemSize);\n            break;\n\n          case 'LOD':\n            object = new LOD();\n            break;\n\n          case 'Line':\n            object = new Line(getGeometry(data.geometry), getMaterial(data.material));\n            break;\n\n          case 'LineLoop':\n            object = new LineLoop(getGeometry(data.geometry), getMaterial(data.material));\n            break;\n\n          case 'LineSegments':\n            object = new LineSegments(getGeometry(data.geometry), getMaterial(data.material));\n            break;\n\n          case 'PointCloud':\n          case 'Points':\n            object = new Points(getGeometry(data.geometry), getMaterial(data.material));\n            break;\n\n          case 'Sprite':\n            object = new Sprite(getMaterial(data.material));\n            break;\n\n          case 'Group':\n            object = new Group();\n            break;\n\n          case 'Bone':\n            object = new Bone();\n            break;\n\n          default:\n            object = new Object3D();\n        }\n\n        object.uuid = data.uuid;\n        if (data.name !== undefined) object.name = data.name;\n\n        if (data.matrix !== undefined) {\n          object.matrix.fromArray(data.matrix);\n          if (data.matrixAutoUpdate !== undefined) object.matrixAutoUpdate = data.matrixAutoUpdate;\n          if (object.matrixAutoUpdate) object.matrix.decompose(object.position, object.quaternion, object.scale);\n        } else {\n          if (data.position !== undefined) object.position.fromArray(data.position);\n          if (data.rotation !== undefined) object.rotation.fromArray(data.rotation);\n          if (data.quaternion !== undefined) object.quaternion.fromArray(data.quaternion);\n          if (data.scale !== undefined) object.scale.fromArray(data.scale);\n        }\n\n        if (data.castShadow !== undefined) object.castShadow = data.castShadow;\n        if (data.receiveShadow !== undefined) object.receiveShadow = data.receiveShadow;\n\n        if (data.shadow) {\n          if (data.shadow.bias !== undefined) object.shadow.bias = data.shadow.bias;\n          if (data.shadow.normalBias !== undefined) object.shadow.normalBias = data.shadow.normalBias;\n          if (data.shadow.radius !== undefined) object.shadow.radius = data.shadow.radius;\n          if (data.shadow.mapSize !== undefined) object.shadow.mapSize.fromArray(data.shadow.mapSize);\n          if (data.shadow.camera !== undefined) object.shadow.camera = this.parseObject(data.shadow.camera);\n        }\n\n        if (data.visible !== undefined) object.visible = data.visible;\n        if (data.frustumCulled !== undefined) object.frustumCulled = data.frustumCulled;\n        if (data.renderOrder !== undefined) object.renderOrder = data.renderOrder;\n        if (data.userData !== undefined) object.userData = data.userData;\n        if (data.layers !== undefined) object.layers.mask = data.layers;\n\n        if (data.children !== undefined) {\n          var children = data.children;\n\n          for (var _i300 = 0; _i300 < children.length; _i300++) {\n            object.add(this.parseObject(children[_i300], geometries, materials, textures, animations));\n          }\n        }\n\n        if (data.animations !== undefined) {\n          var objectAnimations = data.animations;\n\n          for (var _i301 = 0; _i301 < objectAnimations.length; _i301++) {\n            var uuid = objectAnimations[_i301];\n            object.animations.push(animations[uuid]);\n          }\n        }\n\n        if (data.type === 'LOD') {\n          if (data.autoUpdate !== undefined) object.autoUpdate = data.autoUpdate;\n          var levels = data.levels;\n\n          for (var l = 0; l < levels.length; l++) {\n            var level = levels[l];\n            var child = object.getObjectByProperty('uuid', level.object);\n\n            if (child !== undefined) {\n              object.addLevel(child, level.distance);\n            }\n          }\n        }\n\n        return object;\n      }\n    }, {\n      key: \"bindSkeletons\",\n      value: function bindSkeletons(object, skeletons) {\n        if (Object.keys(skeletons).length === 0) return;\n        object.traverse(function (child) {\n          if (child.isSkinnedMesh === true && child.skeleton !== undefined) {\n            var skeleton = skeletons[child.skeleton];\n\n            if (skeleton === undefined) {\n              console.warn('THREE.ObjectLoader: No skeleton found with UUID:', child.skeleton);\n            } else {\n              child.bind(skeleton, child.bindMatrix);\n            }\n          }\n        });\n      }\n      /* DEPRECATED */\n\n    }, {\n      key: \"setTexturePath\",\n      value: function setTexturePath(value) {\n        console.warn('THREE.ObjectLoader: .setTexturePath() has been renamed to .setResourcePath().');\n        return this.setResourcePath(value);\n      }\n    }]);\n\n    return ObjectLoader;\n  }(Loader);\n\n  var TEXTURE_MAPPING = {\n    UVMapping: UVMapping,\n    CubeReflectionMapping: CubeReflectionMapping,\n    CubeRefractionMapping: CubeRefractionMapping,\n    EquirectangularReflectionMapping: EquirectangularReflectionMapping,\n    EquirectangularRefractionMapping: EquirectangularRefractionMapping,\n    CubeUVReflectionMapping: CubeUVReflectionMapping,\n    CubeUVRefractionMapping: CubeUVRefractionMapping\n  };\n  var TEXTURE_WRAPPING = {\n    RepeatWrapping: RepeatWrapping,\n    ClampToEdgeWrapping: ClampToEdgeWrapping,\n    MirroredRepeatWrapping: MirroredRepeatWrapping\n  };\n  var TEXTURE_FILTER = {\n    NearestFilter: NearestFilter,\n    NearestMipmapNearestFilter: NearestMipmapNearestFilter,\n    NearestMipmapLinearFilter: NearestMipmapLinearFilter,\n    LinearFilter: LinearFilter,\n    LinearMipmapNearestFilter: LinearMipmapNearestFilter,\n    LinearMipmapLinearFilter: LinearMipmapLinearFilter\n  };\n\n  var ImageBitmapLoader = /*#__PURE__*/function (_Loader11) {\n    _inherits(ImageBitmapLoader, _Loader11);\n\n    var _super129 = _createSuper(ImageBitmapLoader);\n\n    function ImageBitmapLoader(manager) {\n      var _this101;\n\n      _classCallCheck(this, ImageBitmapLoader);\n\n      _this101 = _super129.call(this, manager);\n\n      if (typeof createImageBitmap === 'undefined') {\n        console.warn('THREE.ImageBitmapLoader: createImageBitmap() not supported.');\n      }\n\n      if (typeof fetch === 'undefined') {\n        console.warn('THREE.ImageBitmapLoader: fetch() not supported.');\n      }\n\n      _this101.options = {\n        premultiplyAlpha: 'none'\n      };\n      return _this101;\n    }\n\n    _createClass(ImageBitmapLoader, [{\n      key: \"setOptions\",\n      value: function setOptions(options) {\n        this.options = options;\n        return this;\n      }\n    }, {\n      key: \"load\",\n      value: function load(url, onLoad, onProgress, onError) {\n        if (url === undefined) url = '';\n        if (this.path !== undefined) url = this.path + url;\n        url = this.manager.resolveURL(url);\n        var scope = this;\n        var cached = Cache.get(url);\n\n        if (cached !== undefined) {\n          scope.manager.itemStart(url);\n          setTimeout(function () {\n            if (onLoad) onLoad(cached);\n            scope.manager.itemEnd(url);\n          }, 0);\n          return cached;\n        }\n\n        var fetchOptions = {};\n        fetchOptions.credentials = this.crossOrigin === 'anonymous' ? 'same-origin' : 'include';\n        fetchOptions.headers = this.requestHeader;\n        fetch(url, fetchOptions).then(function (res) {\n          return res.blob();\n        }).then(function (blob) {\n          return createImageBitmap(blob, Object.assign(scope.options, {\n            colorSpaceConversion: 'none'\n          }));\n        }).then(function (imageBitmap) {\n          Cache.add(url, imageBitmap);\n          if (onLoad) onLoad(imageBitmap);\n          scope.manager.itemEnd(url);\n        }).catch(function (e) {\n          if (onError) onError(e);\n          scope.manager.itemError(url);\n          scope.manager.itemEnd(url);\n        });\n        scope.manager.itemStart(url);\n      }\n    }]);\n\n    return ImageBitmapLoader;\n  }(Loader);\n\n  ImageBitmapLoader.prototype.isImageBitmapLoader = true;\n\n  var _context;\n\n  var AudioContext = {\n    getContext: function getContext() {\n      if (_context === undefined) {\n        _context = new (window.AudioContext || window.webkitAudioContext)();\n      }\n\n      return _context;\n    },\n    setContext: function setContext(value) {\n      _context = value;\n    }\n  };\n\n  var AudioLoader = /*#__PURE__*/function (_Loader12) {\n    _inherits(AudioLoader, _Loader12);\n\n    var _super130 = _createSuper(AudioLoader);\n\n    function AudioLoader(manager) {\n      _classCallCheck(this, AudioLoader);\n\n      return _super130.call(this, manager);\n    }\n\n    _createClass(AudioLoader, [{\n      key: \"load\",\n      value: function load(url, onLoad, onProgress, onError) {\n        var scope = this;\n        var loader = new FileLoader(this.manager);\n        loader.setResponseType('arraybuffer');\n        loader.setPath(this.path);\n        loader.setRequestHeader(this.requestHeader);\n        loader.setWithCredentials(this.withCredentials);\n        loader.load(url, function (buffer) {\n          try {\n            // Create a copy of the buffer. The `decodeAudioData` method\n            // detaches the buffer when complete, preventing reuse.\n            var bufferCopy = buffer.slice(0);\n            var context = AudioContext.getContext();\n            context.decodeAudioData(bufferCopy, function (audioBuffer) {\n              onLoad(audioBuffer);\n            });\n          } catch (e) {\n            if (onError) {\n              onError(e);\n            } else {\n              console.error(e);\n            }\n\n            scope.manager.itemError(url);\n          }\n        }, onProgress, onError);\n      }\n    }]);\n\n    return AudioLoader;\n  }(Loader);\n\n  var HemisphereLightProbe = /*#__PURE__*/function (_LightProbe) {\n    _inherits(HemisphereLightProbe, _LightProbe);\n\n    var _super131 = _createSuper(HemisphereLightProbe);\n\n    function HemisphereLightProbe(skyColor, groundColor) {\n      var _this102;\n\n      var intensity = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n\n      _classCallCheck(this, HemisphereLightProbe);\n\n      _this102 = _super131.call(this, undefined, intensity);\n      var color1 = new Color().set(skyColor);\n      var color2 = new Color().set(groundColor);\n      var sky = new Vector3(color1.r, color1.g, color1.b);\n      var ground = new Vector3(color2.r, color2.g, color2.b); // without extra factor of PI in the shader, should = 1 / Math.sqrt( Math.PI );\n\n      var c0 = Math.sqrt(Math.PI);\n      var c1 = c0 * Math.sqrt(0.75);\n\n      _this102.sh.coefficients[0].copy(sky).add(ground).multiplyScalar(c0);\n\n      _this102.sh.coefficients[1].copy(sky).sub(ground).multiplyScalar(c1);\n\n      return _this102;\n    }\n\n    return HemisphereLightProbe;\n  }(LightProbe);\n\n  HemisphereLightProbe.prototype.isHemisphereLightProbe = true;\n\n  var AmbientLightProbe = /*#__PURE__*/function (_LightProbe2) {\n    _inherits(AmbientLightProbe, _LightProbe2);\n\n    var _super132 = _createSuper(AmbientLightProbe);\n\n    function AmbientLightProbe(color) {\n      var _this103;\n\n      var intensity = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n\n      _classCallCheck(this, AmbientLightProbe);\n\n      _this103 = _super132.call(this, undefined, intensity);\n      var color1 = new Color().set(color); // without extra factor of PI in the shader, would be 2 / Math.sqrt( Math.PI );\n\n      _this103.sh.coefficients[0].set(color1.r, color1.g, color1.b).multiplyScalar(2 * Math.sqrt(Math.PI));\n\n      return _this103;\n    }\n\n    return AmbientLightProbe;\n  }(LightProbe);\n\n  AmbientLightProbe.prototype.isAmbientLightProbe = true;\n\n  var _eyeRight = /*@__PURE__*/new Matrix4();\n\n  var _eyeLeft = /*@__PURE__*/new Matrix4();\n\n  var StereoCamera = /*#__PURE__*/function () {\n    function StereoCamera() {\n      _classCallCheck(this, StereoCamera);\n\n      this.type = 'StereoCamera';\n      this.aspect = 1;\n      this.eyeSep = 0.064;\n      this.cameraL = new PerspectiveCamera();\n      this.cameraL.layers.enable(1);\n      this.cameraL.matrixAutoUpdate = false;\n      this.cameraR = new PerspectiveCamera();\n      this.cameraR.layers.enable(2);\n      this.cameraR.matrixAutoUpdate = false;\n      this._cache = {\n        focus: null,\n        fov: null,\n        aspect: null,\n        near: null,\n        far: null,\n        zoom: null,\n        eyeSep: null\n      };\n    }\n\n    _createClass(StereoCamera, [{\n      key: \"update\",\n      value: function update(camera) {\n        var cache = this._cache;\n        var needsUpdate = cache.focus !== camera.focus || cache.fov !== camera.fov || cache.aspect !== camera.aspect * this.aspect || cache.near !== camera.near || cache.far !== camera.far || cache.zoom !== camera.zoom || cache.eyeSep !== this.eyeSep;\n\n        if (needsUpdate) {\n          cache.focus = camera.focus;\n          cache.fov = camera.fov;\n          cache.aspect = camera.aspect * this.aspect;\n          cache.near = camera.near;\n          cache.far = camera.far;\n          cache.zoom = camera.zoom;\n          cache.eyeSep = this.eyeSep; // Off-axis stereoscopic effect based on\n          // http://paulbourke.net/stereographics/stereorender/\n\n          var projectionMatrix = camera.projectionMatrix.clone();\n          var eyeSepHalf = cache.eyeSep / 2;\n          var eyeSepOnProjection = eyeSepHalf * cache.near / cache.focus;\n          var ymax = cache.near * Math.tan(DEG2RAD * cache.fov * 0.5) / cache.zoom;\n          var xmin, xmax; // translate xOffset\n\n          _eyeLeft.elements[12] = -eyeSepHalf;\n          _eyeRight.elements[12] = eyeSepHalf; // for left eye\n\n          xmin = -ymax * cache.aspect + eyeSepOnProjection;\n          xmax = ymax * cache.aspect + eyeSepOnProjection;\n          projectionMatrix.elements[0] = 2 * cache.near / (xmax - xmin);\n          projectionMatrix.elements[8] = (xmax + xmin) / (xmax - xmin);\n          this.cameraL.projectionMatrix.copy(projectionMatrix); // for right eye\n\n          xmin = -ymax * cache.aspect - eyeSepOnProjection;\n          xmax = ymax * cache.aspect - eyeSepOnProjection;\n          projectionMatrix.elements[0] = 2 * cache.near / (xmax - xmin);\n          projectionMatrix.elements[8] = (xmax + xmin) / (xmax - xmin);\n          this.cameraR.projectionMatrix.copy(projectionMatrix);\n        }\n\n        this.cameraL.matrixWorld.copy(camera.matrixWorld).multiply(_eyeLeft);\n        this.cameraR.matrixWorld.copy(camera.matrixWorld).multiply(_eyeRight);\n      }\n    }]);\n\n    return StereoCamera;\n  }();\n\n  var Clock = /*#__PURE__*/function () {\n    function Clock() {\n      var autoStart = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n\n      _classCallCheck(this, Clock);\n\n      this.autoStart = autoStart;\n      this.startTime = 0;\n      this.oldTime = 0;\n      this.elapsedTime = 0;\n      this.running = false;\n    }\n\n    _createClass(Clock, [{\n      key: \"start\",\n      value: function start() {\n        this.startTime = now();\n        this.oldTime = this.startTime;\n        this.elapsedTime = 0;\n        this.running = true;\n      }\n    }, {\n      key: \"stop\",\n      value: function stop() {\n        this.getElapsedTime();\n        this.running = false;\n        this.autoStart = false;\n      }\n    }, {\n      key: \"getElapsedTime\",\n      value: function getElapsedTime() {\n        this.getDelta();\n        return this.elapsedTime;\n      }\n    }, {\n      key: \"getDelta\",\n      value: function getDelta() {\n        var diff = 0;\n\n        if (this.autoStart && !this.running) {\n          this.start();\n          return 0;\n        }\n\n        if (this.running) {\n          var newTime = now();\n          diff = (newTime - this.oldTime) / 1000;\n          this.oldTime = newTime;\n          this.elapsedTime += diff;\n        }\n\n        return diff;\n      }\n    }]);\n\n    return Clock;\n  }();\n\n  function now() {\n    return (typeof performance === 'undefined' ? Date : performance).now(); // see #10732\n  }\n\n  var _position$1 = /*@__PURE__*/new Vector3();\n\n  var _quaternion$1 = /*@__PURE__*/new Quaternion();\n\n  var _scale$1 = /*@__PURE__*/new Vector3();\n\n  var _orientation$1 = /*@__PURE__*/new Vector3();\n\n  var AudioListener = /*#__PURE__*/function (_Object3D12) {\n    _inherits(AudioListener, _Object3D12);\n\n    var _super133 = _createSuper(AudioListener);\n\n    function AudioListener() {\n      var _this104;\n\n      _classCallCheck(this, AudioListener);\n\n      _this104 = _super133.call(this);\n      _this104.type = 'AudioListener';\n      _this104.context = AudioContext.getContext();\n      _this104.gain = _this104.context.createGain();\n\n      _this104.gain.connect(_this104.context.destination);\n\n      _this104.filter = null;\n      _this104.timeDelta = 0; // private\n\n      _this104._clock = new Clock();\n      return _this104;\n    }\n\n    _createClass(AudioListener, [{\n      key: \"getInput\",\n      value: function getInput() {\n        return this.gain;\n      }\n    }, {\n      key: \"removeFilter\",\n      value: function removeFilter() {\n        if (this.filter !== null) {\n          this.gain.disconnect(this.filter);\n          this.filter.disconnect(this.context.destination);\n          this.gain.connect(this.context.destination);\n          this.filter = null;\n        }\n\n        return this;\n      }\n    }, {\n      key: \"getFilter\",\n      value: function getFilter() {\n        return this.filter;\n      }\n    }, {\n      key: \"setFilter\",\n      value: function setFilter(value) {\n        if (this.filter !== null) {\n          this.gain.disconnect(this.filter);\n          this.filter.disconnect(this.context.destination);\n        } else {\n          this.gain.disconnect(this.context.destination);\n        }\n\n        this.filter = value;\n        this.gain.connect(this.filter);\n        this.filter.connect(this.context.destination);\n        return this;\n      }\n    }, {\n      key: \"getMasterVolume\",\n      value: function getMasterVolume() {\n        return this.gain.gain.value;\n      }\n    }, {\n      key: \"setMasterVolume\",\n      value: function setMasterVolume(value) {\n        this.gain.gain.setTargetAtTime(value, this.context.currentTime, 0.01);\n        return this;\n      }\n    }, {\n      key: \"updateMatrixWorld\",\n      value: function updateMatrixWorld(force) {\n        _get(_getPrototypeOf(AudioListener.prototype), \"updateMatrixWorld\", this).call(this, force);\n\n        var listener = this.context.listener;\n        var up = this.up;\n        this.timeDelta = this._clock.getDelta();\n        this.matrixWorld.decompose(_position$1, _quaternion$1, _scale$1);\n\n        _orientation$1.set(0, 0, -1).applyQuaternion(_quaternion$1);\n\n        if (listener.positionX) {\n          // code path for Chrome (see #14393)\n          var endTime = this.context.currentTime + this.timeDelta;\n          listener.positionX.linearRampToValueAtTime(_position$1.x, endTime);\n          listener.positionY.linearRampToValueAtTime(_position$1.y, endTime);\n          listener.positionZ.linearRampToValueAtTime(_position$1.z, endTime);\n          listener.forwardX.linearRampToValueAtTime(_orientation$1.x, endTime);\n          listener.forwardY.linearRampToValueAtTime(_orientation$1.y, endTime);\n          listener.forwardZ.linearRampToValueAtTime(_orientation$1.z, endTime);\n          listener.upX.linearRampToValueAtTime(up.x, endTime);\n          listener.upY.linearRampToValueAtTime(up.y, endTime);\n          listener.upZ.linearRampToValueAtTime(up.z, endTime);\n        } else {\n          listener.setPosition(_position$1.x, _position$1.y, _position$1.z);\n          listener.setOrientation(_orientation$1.x, _orientation$1.y, _orientation$1.z, up.x, up.y, up.z);\n        }\n      }\n    }]);\n\n    return AudioListener;\n  }(Object3D);\n\n  var Audio = /*#__PURE__*/function (_Object3D13) {\n    _inherits(Audio, _Object3D13);\n\n    var _super134 = _createSuper(Audio);\n\n    function Audio(listener) {\n      var _this105;\n\n      _classCallCheck(this, Audio);\n\n      _this105 = _super134.call(this);\n      _this105.type = 'Audio';\n      _this105.listener = listener;\n      _this105.context = listener.context;\n      _this105.gain = _this105.context.createGain();\n\n      _this105.gain.connect(listener.getInput());\n\n      _this105.autoplay = false;\n      _this105.buffer = null;\n      _this105.detune = 0;\n      _this105.loop = false;\n      _this105.loopStart = 0;\n      _this105.loopEnd = 0;\n      _this105.offset = 0;\n      _this105.duration = undefined;\n      _this105.playbackRate = 1;\n      _this105.isPlaying = false;\n      _this105.hasPlaybackControl = true;\n      _this105.source = null;\n      _this105.sourceType = 'empty';\n      _this105._startedAt = 0;\n      _this105._progress = 0;\n      _this105._connected = false;\n      _this105.filters = [];\n      return _this105;\n    }\n\n    _createClass(Audio, [{\n      key: \"getOutput\",\n      value: function getOutput() {\n        return this.gain;\n      }\n    }, {\n      key: \"setNodeSource\",\n      value: function setNodeSource(audioNode) {\n        this.hasPlaybackControl = false;\n        this.sourceType = 'audioNode';\n        this.source = audioNode;\n        this.connect();\n        return this;\n      }\n    }, {\n      key: \"setMediaElementSource\",\n      value: function setMediaElementSource(mediaElement) {\n        this.hasPlaybackControl = false;\n        this.sourceType = 'mediaNode';\n        this.source = this.context.createMediaElementSource(mediaElement);\n        this.connect();\n        return this;\n      }\n    }, {\n      key: \"setMediaStreamSource\",\n      value: function setMediaStreamSource(mediaStream) {\n        this.hasPlaybackControl = false;\n        this.sourceType = 'mediaStreamNode';\n        this.source = this.context.createMediaStreamSource(mediaStream);\n        this.connect();\n        return this;\n      }\n    }, {\n      key: \"setBuffer\",\n      value: function setBuffer(audioBuffer) {\n        this.buffer = audioBuffer;\n        this.sourceType = 'buffer';\n        if (this.autoplay) this.play();\n        return this;\n      }\n    }, {\n      key: \"play\",\n      value: function play() {\n        var delay = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n\n        if (this.isPlaying === true) {\n          console.warn('THREE.Audio: Audio is already playing.');\n          return;\n        }\n\n        if (this.hasPlaybackControl === false) {\n          console.warn('THREE.Audio: this Audio has no playback control.');\n          return;\n        }\n\n        this._startedAt = this.context.currentTime + delay;\n        var source = this.context.createBufferSource();\n        source.buffer = this.buffer;\n        source.loop = this.loop;\n        source.loopStart = this.loopStart;\n        source.loopEnd = this.loopEnd;\n        source.onended = this.onEnded.bind(this);\n        source.start(this._startedAt, this._progress + this.offset, this.duration);\n        this.isPlaying = true;\n        this.source = source;\n        this.setDetune(this.detune);\n        this.setPlaybackRate(this.playbackRate);\n        return this.connect();\n      }\n    }, {\n      key: \"pause\",\n      value: function pause() {\n        if (this.hasPlaybackControl === false) {\n          console.warn('THREE.Audio: this Audio has no playback control.');\n          return;\n        }\n\n        if (this.isPlaying === true) {\n          // update current progress\n          this._progress += Math.max(this.context.currentTime - this._startedAt, 0) * this.playbackRate;\n\n          if (this.loop === true) {\n            // ensure _progress does not exceed duration with looped audios\n            this._progress = this._progress % (this.duration || this.buffer.duration);\n          }\n\n          this.source.stop();\n          this.source.onended = null;\n          this.isPlaying = false;\n        }\n\n        return this;\n      }\n    }, {\n      key: \"stop\",\n      value: function stop() {\n        if (this.hasPlaybackControl === false) {\n          console.warn('THREE.Audio: this Audio has no playback control.');\n          return;\n        }\n\n        this._progress = 0;\n        this.source.stop();\n        this.source.onended = null;\n        this.isPlaying = false;\n        return this;\n      }\n    }, {\n      key: \"connect\",\n      value: function connect() {\n        if (this.filters.length > 0) {\n          this.source.connect(this.filters[0]);\n\n          for (var _i302 = 1, l = this.filters.length; _i302 < l; _i302++) {\n            this.filters[_i302 - 1].connect(this.filters[_i302]);\n          }\n\n          this.filters[this.filters.length - 1].connect(this.getOutput());\n        } else {\n          this.source.connect(this.getOutput());\n        }\n\n        this._connected = true;\n        return this;\n      }\n    }, {\n      key: \"disconnect\",\n      value: function disconnect() {\n        if (this.filters.length > 0) {\n          this.source.disconnect(this.filters[0]);\n\n          for (var _i303 = 1, l = this.filters.length; _i303 < l; _i303++) {\n            this.filters[_i303 - 1].disconnect(this.filters[_i303]);\n          }\n\n          this.filters[this.filters.length - 1].disconnect(this.getOutput());\n        } else {\n          this.source.disconnect(this.getOutput());\n        }\n\n        this._connected = false;\n        return this;\n      }\n    }, {\n      key: \"getFilters\",\n      value: function getFilters() {\n        return this.filters;\n      }\n    }, {\n      key: \"setFilters\",\n      value: function setFilters(value) {\n        if (!value) value = [];\n\n        if (this._connected === true) {\n          this.disconnect();\n          this.filters = value.slice();\n          this.connect();\n        } else {\n          this.filters = value.slice();\n        }\n\n        return this;\n      }\n    }, {\n      key: \"setDetune\",\n      value: function setDetune(value) {\n        this.detune = value;\n        if (this.source.detune === undefined) return; // only set detune when available\n\n        if (this.isPlaying === true) {\n          this.source.detune.setTargetAtTime(this.detune, this.context.currentTime, 0.01);\n        }\n\n        return this;\n      }\n    }, {\n      key: \"getDetune\",\n      value: function getDetune() {\n        return this.detune;\n      }\n    }, {\n      key: \"getFilter\",\n      value: function getFilter() {\n        return this.getFilters()[0];\n      }\n    }, {\n      key: \"setFilter\",\n      value: function setFilter(filter) {\n        return this.setFilters(filter ? [filter] : []);\n      }\n    }, {\n      key: \"setPlaybackRate\",\n      value: function setPlaybackRate(value) {\n        if (this.hasPlaybackControl === false) {\n          console.warn('THREE.Audio: this Audio has no playback control.');\n          return;\n        }\n\n        this.playbackRate = value;\n\n        if (this.isPlaying === true) {\n          this.source.playbackRate.setTargetAtTime(this.playbackRate, this.context.currentTime, 0.01);\n        }\n\n        return this;\n      }\n    }, {\n      key: \"getPlaybackRate\",\n      value: function getPlaybackRate() {\n        return this.playbackRate;\n      }\n    }, {\n      key: \"onEnded\",\n      value: function onEnded() {\n        this.isPlaying = false;\n      }\n    }, {\n      key: \"getLoop\",\n      value: function getLoop() {\n        if (this.hasPlaybackControl === false) {\n          console.warn('THREE.Audio: this Audio has no playback control.');\n          return false;\n        }\n\n        return this.loop;\n      }\n    }, {\n      key: \"setLoop\",\n      value: function setLoop(value) {\n        if (this.hasPlaybackControl === false) {\n          console.warn('THREE.Audio: this Audio has no playback control.');\n          return;\n        }\n\n        this.loop = value;\n\n        if (this.isPlaying === true) {\n          this.source.loop = this.loop;\n        }\n\n        return this;\n      }\n    }, {\n      key: \"setLoopStart\",\n      value: function setLoopStart(value) {\n        this.loopStart = value;\n        return this;\n      }\n    }, {\n      key: \"setLoopEnd\",\n      value: function setLoopEnd(value) {\n        this.loopEnd = value;\n        return this;\n      }\n    }, {\n      key: \"getVolume\",\n      value: function getVolume() {\n        return this.gain.gain.value;\n      }\n    }, {\n      key: \"setVolume\",\n      value: function setVolume(value) {\n        this.gain.gain.setTargetAtTime(value, this.context.currentTime, 0.01);\n        return this;\n      }\n    }]);\n\n    return Audio;\n  }(Object3D);\n\n  var _position = /*@__PURE__*/new Vector3();\n\n  var _quaternion = /*@__PURE__*/new Quaternion();\n\n  var _scale = /*@__PURE__*/new Vector3();\n\n  var _orientation = /*@__PURE__*/new Vector3();\n\n  var PositionalAudio = /*#__PURE__*/function (_Audio) {\n    _inherits(PositionalAudio, _Audio);\n\n    var _super135 = _createSuper(PositionalAudio);\n\n    function PositionalAudio(listener) {\n      var _this106;\n\n      _classCallCheck(this, PositionalAudio);\n\n      _this106 = _super135.call(this, listener);\n      _this106.panner = _this106.context.createPanner();\n      _this106.panner.panningModel = 'HRTF';\n\n      _this106.panner.connect(_this106.gain);\n\n      return _this106;\n    }\n\n    _createClass(PositionalAudio, [{\n      key: \"getOutput\",\n      value: function getOutput() {\n        return this.panner;\n      }\n    }, {\n      key: \"getRefDistance\",\n      value: function getRefDistance() {\n        return this.panner.refDistance;\n      }\n    }, {\n      key: \"setRefDistance\",\n      value: function setRefDistance(value) {\n        this.panner.refDistance = value;\n        return this;\n      }\n    }, {\n      key: \"getRolloffFactor\",\n      value: function getRolloffFactor() {\n        return this.panner.rolloffFactor;\n      }\n    }, {\n      key: \"setRolloffFactor\",\n      value: function setRolloffFactor(value) {\n        this.panner.rolloffFactor = value;\n        return this;\n      }\n    }, {\n      key: \"getDistanceModel\",\n      value: function getDistanceModel() {\n        return this.panner.distanceModel;\n      }\n    }, {\n      key: \"setDistanceModel\",\n      value: function setDistanceModel(value) {\n        this.panner.distanceModel = value;\n        return this;\n      }\n    }, {\n      key: \"getMaxDistance\",\n      value: function getMaxDistance() {\n        return this.panner.maxDistance;\n      }\n    }, {\n      key: \"setMaxDistance\",\n      value: function setMaxDistance(value) {\n        this.panner.maxDistance = value;\n        return this;\n      }\n    }, {\n      key: \"setDirectionalCone\",\n      value: function setDirectionalCone(coneInnerAngle, coneOuterAngle, coneOuterGain) {\n        this.panner.coneInnerAngle = coneInnerAngle;\n        this.panner.coneOuterAngle = coneOuterAngle;\n        this.panner.coneOuterGain = coneOuterGain;\n        return this;\n      }\n    }, {\n      key: \"updateMatrixWorld\",\n      value: function updateMatrixWorld(force) {\n        _get(_getPrototypeOf(PositionalAudio.prototype), \"updateMatrixWorld\", this).call(this, force);\n\n        if (this.hasPlaybackControl === true && this.isPlaying === false) return;\n        this.matrixWorld.decompose(_position, _quaternion, _scale);\n\n        _orientation.set(0, 0, 1).applyQuaternion(_quaternion);\n\n        var panner = this.panner;\n\n        if (panner.positionX) {\n          // code path for Chrome and Firefox (see #14393)\n          var endTime = this.context.currentTime + this.listener.timeDelta;\n          panner.positionX.linearRampToValueAtTime(_position.x, endTime);\n          panner.positionY.linearRampToValueAtTime(_position.y, endTime);\n          panner.positionZ.linearRampToValueAtTime(_position.z, endTime);\n          panner.orientationX.linearRampToValueAtTime(_orientation.x, endTime);\n          panner.orientationY.linearRampToValueAtTime(_orientation.y, endTime);\n          panner.orientationZ.linearRampToValueAtTime(_orientation.z, endTime);\n        } else {\n          panner.setPosition(_position.x, _position.y, _position.z);\n          panner.setOrientation(_orientation.x, _orientation.y, _orientation.z);\n        }\n      }\n    }]);\n\n    return PositionalAudio;\n  }(Audio);\n\n  var AudioAnalyser = /*#__PURE__*/function () {\n    function AudioAnalyser(audio) {\n      var fftSize = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 2048;\n\n      _classCallCheck(this, AudioAnalyser);\n\n      this.analyser = audio.context.createAnalyser();\n      this.analyser.fftSize = fftSize;\n      this.data = new Uint8Array(this.analyser.frequencyBinCount);\n      audio.getOutput().connect(this.analyser);\n    }\n\n    _createClass(AudioAnalyser, [{\n      key: \"getFrequencyData\",\n      value: function getFrequencyData() {\n        this.analyser.getByteFrequencyData(this.data);\n        return this.data;\n      }\n    }, {\n      key: \"getAverageFrequency\",\n      value: function getAverageFrequency() {\n        var value = 0;\n        var data = this.getFrequencyData();\n\n        for (var _i304 = 0; _i304 < data.length; _i304++) {\n          value += data[_i304];\n        }\n\n        return value / data.length;\n      }\n    }]);\n\n    return AudioAnalyser;\n  }();\n\n  var PropertyMixer = /*#__PURE__*/function () {\n    function PropertyMixer(binding, typeName, valueSize) {\n      _classCallCheck(this, PropertyMixer);\n\n      this.binding = binding;\n      this.valueSize = valueSize;\n      var mixFunction, mixFunctionAdditive, setIdentity; // buffer layout: [ incoming | accu0 | accu1 | orig | addAccu | (optional work) ]\n      //\n      // interpolators can use .buffer as their .result\n      // the data then goes to 'incoming'\n      //\n      // 'accu0' and 'accu1' are used frame-interleaved for\n      // the cumulative result and are compared to detect\n      // changes\n      //\n      // 'orig' stores the original state of the property\n      //\n      // 'add' is used for additive cumulative results\n      //\n      // 'work' is optional and is only present for quaternion types. It is used\n      // to store intermediate quaternion multiplication results\n\n      switch (typeName) {\n        case 'quaternion':\n          mixFunction = this._slerp;\n          mixFunctionAdditive = this._slerpAdditive;\n          setIdentity = this._setAdditiveIdentityQuaternion;\n          this.buffer = new Float64Array(valueSize * 6);\n          this._workIndex = 5;\n          break;\n\n        case 'string':\n        case 'bool':\n          mixFunction = this._select; // Use the regular mix function and for additive on these types,\n          // additive is not relevant for non-numeric types\n\n          mixFunctionAdditive = this._select;\n          setIdentity = this._setAdditiveIdentityOther;\n          this.buffer = new Array(valueSize * 5);\n          break;\n\n        default:\n          mixFunction = this._lerp;\n          mixFunctionAdditive = this._lerpAdditive;\n          setIdentity = this._setAdditiveIdentityNumeric;\n          this.buffer = new Float64Array(valueSize * 5);\n      }\n\n      this._mixBufferRegion = mixFunction;\n      this._mixBufferRegionAdditive = mixFunctionAdditive;\n      this._setIdentity = setIdentity;\n      this._origIndex = 3;\n      this._addIndex = 4;\n      this.cumulativeWeight = 0;\n      this.cumulativeWeightAdditive = 0;\n      this.useCount = 0;\n      this.referenceCount = 0;\n    } // accumulate data in the 'incoming' region into 'accu<i>'\n\n\n    _createClass(PropertyMixer, [{\n      key: \"accumulate\",\n      value: function accumulate(accuIndex, weight) {\n        // note: happily accumulating nothing when weight = 0, the caller knows\n        // the weight and shouldn't have made the call in the first place\n        var buffer = this.buffer,\n            stride = this.valueSize,\n            offset = accuIndex * stride + stride;\n        var currentWeight = this.cumulativeWeight;\n\n        if (currentWeight === 0) {\n          // accuN := incoming * weight\n          for (var _i305 = 0; _i305 !== stride; ++_i305) {\n            buffer[offset + _i305] = buffer[_i305];\n          }\n\n          currentWeight = weight;\n        } else {\n          // accuN := accuN + incoming * weight\n          currentWeight += weight;\n          var mix = weight / currentWeight;\n\n          this._mixBufferRegion(buffer, offset, 0, mix, stride);\n        }\n\n        this.cumulativeWeight = currentWeight;\n      } // accumulate data in the 'incoming' region into 'add'\n\n    }, {\n      key: \"accumulateAdditive\",\n      value: function accumulateAdditive(weight) {\n        var buffer = this.buffer,\n            stride = this.valueSize,\n            offset = stride * this._addIndex;\n\n        if (this.cumulativeWeightAdditive === 0) {\n          // add = identity\n          this._setIdentity();\n        } // add := add + incoming * weight\n\n\n        this._mixBufferRegionAdditive(buffer, offset, 0, weight, stride);\n\n        this.cumulativeWeightAdditive += weight;\n      } // apply the state of 'accu<i>' to the binding when accus differ\n\n    }, {\n      key: \"apply\",\n      value: function apply(accuIndex) {\n        var stride = this.valueSize,\n            buffer = this.buffer,\n            offset = accuIndex * stride + stride,\n            weight = this.cumulativeWeight,\n            weightAdditive = this.cumulativeWeightAdditive,\n            binding = this.binding;\n        this.cumulativeWeight = 0;\n        this.cumulativeWeightAdditive = 0;\n\n        if (weight < 1) {\n          // accuN := accuN + original * ( 1 - cumulativeWeight )\n          var originalValueOffset = stride * this._origIndex;\n\n          this._mixBufferRegion(buffer, offset, originalValueOffset, 1 - weight, stride);\n        }\n\n        if (weightAdditive > 0) {\n          // accuN := accuN + additive accuN\n          this._mixBufferRegionAdditive(buffer, offset, this._addIndex * stride, 1, stride);\n        }\n\n        for (var _i306 = stride, e = stride + stride; _i306 !== e; ++_i306) {\n          if (buffer[_i306] !== buffer[_i306 + stride]) {\n            // value has changed -> update scene graph\n            binding.setValue(buffer, offset);\n            break;\n          }\n        }\n      } // remember the state of the bound property and copy it to both accus\n\n    }, {\n      key: \"saveOriginalState\",\n      value: function saveOriginalState() {\n        var binding = this.binding;\n        var buffer = this.buffer,\n            stride = this.valueSize,\n            originalValueOffset = stride * this._origIndex;\n        binding.getValue(buffer, originalValueOffset); // accu[0..1] := orig -- initially detect changes against the original\n\n        for (var _i307 = stride, e = originalValueOffset; _i307 !== e; ++_i307) {\n          buffer[_i307] = buffer[originalValueOffset + _i307 % stride];\n        } // Add to identity for additive\n\n\n        this._setIdentity();\n\n        this.cumulativeWeight = 0;\n        this.cumulativeWeightAdditive = 0;\n      } // apply the state previously taken via 'saveOriginalState' to the binding\n\n    }, {\n      key: \"restoreOriginalState\",\n      value: function restoreOriginalState() {\n        var originalValueOffset = this.valueSize * 3;\n        this.binding.setValue(this.buffer, originalValueOffset);\n      }\n    }, {\n      key: \"_setAdditiveIdentityNumeric\",\n      value: function _setAdditiveIdentityNumeric() {\n        var startIndex = this._addIndex * this.valueSize;\n        var endIndex = startIndex + this.valueSize;\n\n        for (var _i308 = startIndex; _i308 < endIndex; _i308++) {\n          this.buffer[_i308] = 0;\n        }\n      }\n    }, {\n      key: \"_setAdditiveIdentityQuaternion\",\n      value: function _setAdditiveIdentityQuaternion() {\n        this._setAdditiveIdentityNumeric();\n\n        this.buffer[this._addIndex * this.valueSize + 3] = 1;\n      }\n    }, {\n      key: \"_setAdditiveIdentityOther\",\n      value: function _setAdditiveIdentityOther() {\n        var startIndex = this._origIndex * this.valueSize;\n        var targetIndex = this._addIndex * this.valueSize;\n\n        for (var _i309 = 0; _i309 < this.valueSize; _i309++) {\n          this.buffer[targetIndex + _i309] = this.buffer[startIndex + _i309];\n        }\n      } // mix functions\n\n    }, {\n      key: \"_select\",\n      value: function _select(buffer, dstOffset, srcOffset, t, stride) {\n        if (t >= 0.5) {\n          for (var _i310 = 0; _i310 !== stride; ++_i310) {\n            buffer[dstOffset + _i310] = buffer[srcOffset + _i310];\n          }\n        }\n      }\n    }, {\n      key: \"_slerp\",\n      value: function _slerp(buffer, dstOffset, srcOffset, t) {\n        Quaternion.slerpFlat(buffer, dstOffset, buffer, dstOffset, buffer, srcOffset, t);\n      }\n    }, {\n      key: \"_slerpAdditive\",\n      value: function _slerpAdditive(buffer, dstOffset, srcOffset, t, stride) {\n        var workOffset = this._workIndex * stride; // Store result in intermediate buffer offset\n\n        Quaternion.multiplyQuaternionsFlat(buffer, workOffset, buffer, dstOffset, buffer, srcOffset); // Slerp to the intermediate result\n\n        Quaternion.slerpFlat(buffer, dstOffset, buffer, dstOffset, buffer, workOffset, t);\n      }\n    }, {\n      key: \"_lerp\",\n      value: function _lerp(buffer, dstOffset, srcOffset, t, stride) {\n        var s = 1 - t;\n\n        for (var _i311 = 0; _i311 !== stride; ++_i311) {\n          var j = dstOffset + _i311;\n          buffer[j] = buffer[j] * s + buffer[srcOffset + _i311] * t;\n        }\n      }\n    }, {\n      key: \"_lerpAdditive\",\n      value: function _lerpAdditive(buffer, dstOffset, srcOffset, t, stride) {\n        for (var _i312 = 0; _i312 !== stride; ++_i312) {\n          var j = dstOffset + _i312;\n          buffer[j] = buffer[j] + buffer[srcOffset + _i312] * t;\n        }\n      }\n    }]);\n\n    return PropertyMixer;\n  }(); // Characters [].:/ are reserved for track binding syntax.\n\n\n  var _RESERVED_CHARS_RE = '\\\\[\\\\]\\\\.:\\\\/';\n\n  var _reservedRe = new RegExp('[' + _RESERVED_CHARS_RE + ']', 'g'); // Attempts to allow node names from any language. ES5's `\\w` regexp matches\n  // only latin characters, and the unicode \\p{L} is not yet supported. So\n  // instead, we exclude reserved characters and match everything else.\n\n\n  var _wordChar = '[^' + _RESERVED_CHARS_RE + ']';\n\n  var _wordCharOrDot = '[^' + _RESERVED_CHARS_RE.replace('\\\\.', '') + ']'; // Parent directories, delimited by '/' or ':'. Currently unused, but must\n  // be matched to parse the rest of the track name.\n\n\n  var _directoryRe = /((?:WC+[\\/:])*)/.source.replace('WC', _wordChar); // Target node. May contain word characters (a-zA-Z0-9_) and '.' or '-'.\n\n\n  var _nodeRe = /(WCOD+)?/.source.replace('WCOD', _wordCharOrDot); // Object on target node, and accessor. May not contain reserved\n  // characters. Accessor may contain any character except closing bracket.\n\n\n  var _objectRe = /(?:\\.(WC+)(?:\\[(.+)\\])?)?/.source.replace('WC', _wordChar); // Property and accessor. May not contain reserved characters. Accessor may\n  // contain any non-bracket characters.\n\n\n  var _propertyRe = /\\.(WC+)(?:\\[(.+)\\])?/.source.replace('WC', _wordChar);\n\n  var _trackRe = new RegExp('' + '^' + _directoryRe + _nodeRe + _objectRe + _propertyRe + '$');\n\n  var _supportedObjectNames = ['material', 'materials', 'bones'];\n\n  var Composite = /*#__PURE__*/function () {\n    function Composite(targetGroup, path, optionalParsedPath) {\n      _classCallCheck(this, Composite);\n\n      var parsedPath = optionalParsedPath || PropertyBinding.parseTrackName(path);\n      this._targetGroup = targetGroup;\n      this._bindings = targetGroup.subscribe_(path, parsedPath);\n    }\n\n    _createClass(Composite, [{\n      key: \"getValue\",\n      value: function getValue(array, offset) {\n        this.bind(); // bind all binding\n\n        var firstValidIndex = this._targetGroup.nCachedObjects_,\n            binding = this._bindings[firstValidIndex]; // and only call .getValue on the first\n\n        if (binding !== undefined) binding.getValue(array, offset);\n      }\n    }, {\n      key: \"setValue\",\n      value: function setValue(array, offset) {\n        var bindings = this._bindings;\n\n        for (var _i313 = this._targetGroup.nCachedObjects_, n = bindings.length; _i313 !== n; ++_i313) {\n          bindings[_i313].setValue(array, offset);\n        }\n      }\n    }, {\n      key: \"bind\",\n      value: function bind() {\n        var bindings = this._bindings;\n\n        for (var _i314 = this._targetGroup.nCachedObjects_, n = bindings.length; _i314 !== n; ++_i314) {\n          bindings[_i314].bind();\n        }\n      }\n    }, {\n      key: \"unbind\",\n      value: function unbind() {\n        var bindings = this._bindings;\n\n        for (var _i315 = this._targetGroup.nCachedObjects_, n = bindings.length; _i315 !== n; ++_i315) {\n          bindings[_i315].unbind();\n        }\n      }\n    }]);\n\n    return Composite;\n  }(); // Note: This class uses a State pattern on a per-method basis:\n  // 'bind' sets 'this.getValue' / 'setValue' and shadows the\n  // prototype version of these methods with one that represents\n  // the bound state. When the property is not found, the methods\n  // become no-ops.\n\n\n  var PropertyBinding = /*#__PURE__*/function () {\n    function PropertyBinding(rootNode, path, parsedPath) {\n      _classCallCheck(this, PropertyBinding);\n\n      this.path = path;\n      this.parsedPath = parsedPath || PropertyBinding.parseTrackName(path);\n      this.node = PropertyBinding.findNode(rootNode, this.parsedPath.nodeName) || rootNode;\n      this.rootNode = rootNode; // initial state of these methods that calls 'bind'\n\n      this.getValue = this._getValue_unbound;\n      this.setValue = this._setValue_unbound;\n    }\n\n    _createClass(PropertyBinding, [{\n      key: \"_getValue_unavailable\",\n      value: // these are used to \"bind\" a nonexistent property\n      function _getValue_unavailable() {}\n    }, {\n      key: \"_setValue_unavailable\",\n      value: function _setValue_unavailable() {} // Getters\n\n    }, {\n      key: \"_getValue_direct\",\n      value: function _getValue_direct(buffer, offset) {\n        buffer[offset] = this.targetObject[this.propertyName];\n      }\n    }, {\n      key: \"_getValue_array\",\n      value: function _getValue_array(buffer, offset) {\n        var source = this.resolvedProperty;\n\n        for (var _i316 = 0, n = source.length; _i316 !== n; ++_i316) {\n          buffer[offset++] = source[_i316];\n        }\n      }\n    }, {\n      key: \"_getValue_arrayElement\",\n      value: function _getValue_arrayElement(buffer, offset) {\n        buffer[offset] = this.resolvedProperty[this.propertyIndex];\n      }\n    }, {\n      key: \"_getValue_toArray\",\n      value: function _getValue_toArray(buffer, offset) {\n        this.resolvedProperty.toArray(buffer, offset);\n      } // Direct\n\n    }, {\n      key: \"_setValue_direct\",\n      value: function _setValue_direct(buffer, offset) {\n        this.targetObject[this.propertyName] = buffer[offset];\n      }\n    }, {\n      key: \"_setValue_direct_setNeedsUpdate\",\n      value: function _setValue_direct_setNeedsUpdate(buffer, offset) {\n        this.targetObject[this.propertyName] = buffer[offset];\n        this.targetObject.needsUpdate = true;\n      }\n    }, {\n      key: \"_setValue_direct_setMatrixWorldNeedsUpdate\",\n      value: function _setValue_direct_setMatrixWorldNeedsUpdate(buffer, offset) {\n        this.targetObject[this.propertyName] = buffer[offset];\n        this.targetObject.matrixWorldNeedsUpdate = true;\n      } // EntireArray\n\n    }, {\n      key: \"_setValue_array\",\n      value: function _setValue_array(buffer, offset) {\n        var dest = this.resolvedProperty;\n\n        for (var _i317 = 0, n = dest.length; _i317 !== n; ++_i317) {\n          dest[_i317] = buffer[offset++];\n        }\n      }\n    }, {\n      key: \"_setValue_array_setNeedsUpdate\",\n      value: function _setValue_array_setNeedsUpdate(buffer, offset) {\n        var dest = this.resolvedProperty;\n\n        for (var _i318 = 0, n = dest.length; _i318 !== n; ++_i318) {\n          dest[_i318] = buffer[offset++];\n        }\n\n        this.targetObject.needsUpdate = true;\n      }\n    }, {\n      key: \"_setValue_array_setMatrixWorldNeedsUpdate\",\n      value: function _setValue_array_setMatrixWorldNeedsUpdate(buffer, offset) {\n        var dest = this.resolvedProperty;\n\n        for (var _i319 = 0, n = dest.length; _i319 !== n; ++_i319) {\n          dest[_i319] = buffer[offset++];\n        }\n\n        this.targetObject.matrixWorldNeedsUpdate = true;\n      } // ArrayElement\n\n    }, {\n      key: \"_setValue_arrayElement\",\n      value: function _setValue_arrayElement(buffer, offset) {\n        this.resolvedProperty[this.propertyIndex] = buffer[offset];\n      }\n    }, {\n      key: \"_setValue_arrayElement_setNeedsUpdate\",\n      value: function _setValue_arrayElement_setNeedsUpdate(buffer, offset) {\n        this.resolvedProperty[this.propertyIndex] = buffer[offset];\n        this.targetObject.needsUpdate = true;\n      }\n    }, {\n      key: \"_setValue_arrayElement_setMatrixWorldNeedsUpdate\",\n      value: function _setValue_arrayElement_setMatrixWorldNeedsUpdate(buffer, offset) {\n        this.resolvedProperty[this.propertyIndex] = buffer[offset];\n        this.targetObject.matrixWorldNeedsUpdate = true;\n      } // HasToFromArray\n\n    }, {\n      key: \"_setValue_fromArray\",\n      value: function _setValue_fromArray(buffer, offset) {\n        this.resolvedProperty.fromArray(buffer, offset);\n      }\n    }, {\n      key: \"_setValue_fromArray_setNeedsUpdate\",\n      value: function _setValue_fromArray_setNeedsUpdate(buffer, offset) {\n        this.resolvedProperty.fromArray(buffer, offset);\n        this.targetObject.needsUpdate = true;\n      }\n    }, {\n      key: \"_setValue_fromArray_setMatrixWorldNeedsUpdate\",\n      value: function _setValue_fromArray_setMatrixWorldNeedsUpdate(buffer, offset) {\n        this.resolvedProperty.fromArray(buffer, offset);\n        this.targetObject.matrixWorldNeedsUpdate = true;\n      }\n    }, {\n      key: \"_getValue_unbound\",\n      value: function _getValue_unbound(targetArray, offset) {\n        this.bind();\n        this.getValue(targetArray, offset);\n      }\n    }, {\n      key: \"_setValue_unbound\",\n      value: function _setValue_unbound(sourceArray, offset) {\n        this.bind();\n        this.setValue(sourceArray, offset);\n      } // create getter / setter pair for a property in the scene graph\n\n    }, {\n      key: \"bind\",\n      value: function bind() {\n        var targetObject = this.node;\n        var parsedPath = this.parsedPath;\n        var objectName = parsedPath.objectName;\n        var propertyName = parsedPath.propertyName;\n        var propertyIndex = parsedPath.propertyIndex;\n\n        if (!targetObject) {\n          targetObject = PropertyBinding.findNode(this.rootNode, parsedPath.nodeName) || this.rootNode;\n          this.node = targetObject;\n        } // set fail state so we can just 'return' on error\n\n\n        this.getValue = this._getValue_unavailable;\n        this.setValue = this._setValue_unavailable; // ensure there is a value node\n\n        if (!targetObject) {\n          console.error('THREE.PropertyBinding: Trying to update node for track: ' + this.path + ' but it wasn\\'t found.');\n          return;\n        }\n\n        if (objectName) {\n          var objectIndex = parsedPath.objectIndex; // special cases were we need to reach deeper into the hierarchy to get the face materials....\n\n          switch (objectName) {\n            case 'materials':\n              if (!targetObject.material) {\n                console.error('THREE.PropertyBinding: Can not bind to material as node does not have a material.', this);\n                return;\n              }\n\n              if (!targetObject.material.materials) {\n                console.error('THREE.PropertyBinding: Can not bind to material.materials as node.material does not have a materials array.', this);\n                return;\n              }\n\n              targetObject = targetObject.material.materials;\n              break;\n\n            case 'bones':\n              if (!targetObject.skeleton) {\n                console.error('THREE.PropertyBinding: Can not bind to bones as node does not have a skeleton.', this);\n                return;\n              } // potential future optimization: skip this if propertyIndex is already an integer\n              // and convert the integer string to a true integer.\n\n\n              targetObject = targetObject.skeleton.bones; // support resolving morphTarget names into indices.\n\n              for (var _i320 = 0; _i320 < targetObject.length; _i320++) {\n                if (targetObject[_i320].name === objectIndex) {\n                  objectIndex = _i320;\n                  break;\n                }\n              }\n\n              break;\n\n            default:\n              if (targetObject[objectName] === undefined) {\n                console.error('THREE.PropertyBinding: Can not bind to objectName of node undefined.', this);\n                return;\n              }\n\n              targetObject = targetObject[objectName];\n          }\n\n          if (objectIndex !== undefined) {\n            if (targetObject[objectIndex] === undefined) {\n              console.error('THREE.PropertyBinding: Trying to bind to objectIndex of objectName, but is undefined.', this, targetObject);\n              return;\n            }\n\n            targetObject = targetObject[objectIndex];\n          }\n        } // resolve property\n\n\n        var nodeProperty = targetObject[propertyName];\n\n        if (nodeProperty === undefined) {\n          var nodeName = parsedPath.nodeName;\n          console.error('THREE.PropertyBinding: Trying to update property for track: ' + nodeName + '.' + propertyName + ' but it wasn\\'t found.', targetObject);\n          return;\n        } // determine versioning scheme\n\n\n        var versioning = this.Versioning.None;\n        this.targetObject = targetObject;\n\n        if (targetObject.needsUpdate !== undefined) {\n          // material\n          versioning = this.Versioning.NeedsUpdate;\n        } else if (targetObject.matrixWorldNeedsUpdate !== undefined) {\n          // node transform\n          versioning = this.Versioning.MatrixWorldNeedsUpdate;\n        } // determine how the property gets bound\n\n\n        var bindingType = this.BindingType.Direct;\n\n        if (propertyIndex !== undefined) {\n          // access a sub element of the property array (only primitives are supported right now)\n          if (propertyName === 'morphTargetInfluences') {\n            // potential optimization, skip this if propertyIndex is already an integer, and convert the integer string to a true integer.\n            // support resolving morphTarget names into indices.\n            if (!targetObject.geometry) {\n              console.error('THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.', this);\n              return;\n            }\n\n            if (targetObject.geometry.isBufferGeometry) {\n              if (!targetObject.geometry.morphAttributes) {\n                console.error('THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphAttributes.', this);\n                return;\n              }\n\n              if (targetObject.morphTargetDictionary[propertyIndex] !== undefined) {\n                propertyIndex = targetObject.morphTargetDictionary[propertyIndex];\n              }\n            } else {\n              console.error('THREE.PropertyBinding: Can not bind to morphTargetInfluences on THREE.Geometry. Use THREE.BufferGeometry instead.', this);\n              return;\n            }\n          }\n\n          bindingType = this.BindingType.ArrayElement;\n          this.resolvedProperty = nodeProperty;\n          this.propertyIndex = propertyIndex;\n        } else if (nodeProperty.fromArray !== undefined && nodeProperty.toArray !== undefined) {\n          // must use copy for Object3D.Euler/Quaternion\n          bindingType = this.BindingType.HasFromToArray;\n          this.resolvedProperty = nodeProperty;\n        } else if (Array.isArray(nodeProperty)) {\n          bindingType = this.BindingType.EntireArray;\n          this.resolvedProperty = nodeProperty;\n        } else {\n          this.propertyName = propertyName;\n        } // select getter / setter\n\n\n        this.getValue = this.GetterByBindingType[bindingType];\n        this.setValue = this.SetterByBindingTypeAndVersioning[bindingType][versioning];\n      }\n    }, {\n      key: \"unbind\",\n      value: function unbind() {\n        this.node = null; // back to the prototype version of getValue / setValue\n        // note: avoiding to mutate the shape of 'this' via 'delete'\n\n        this.getValue = this._getValue_unbound;\n        this.setValue = this._setValue_unbound;\n      }\n    }], [{\n      key: \"create\",\n      value: function create(root, path, parsedPath) {\n        if (!(root && root.isAnimationObjectGroup)) {\n          return new PropertyBinding(root, path, parsedPath);\n        } else {\n          return new PropertyBinding.Composite(root, path, parsedPath);\n        }\n      }\n      /**\n       * Replaces spaces with underscores and removes unsupported characters from\n       * node names, to ensure compatibility with parseTrackName().\n       *\n       * @param {string} name Node name to be sanitized.\n       * @return {string}\n       */\n\n    }, {\n      key: \"sanitizeNodeName\",\n      value: function sanitizeNodeName(name) {\n        return name.replace(/\\s/g, '_').replace(_reservedRe, '');\n      }\n    }, {\n      key: \"parseTrackName\",\n      value: function parseTrackName(trackName) {\n        var matches = _trackRe.exec(trackName);\n\n        if (!matches) {\n          throw new Error('PropertyBinding: Cannot parse trackName: ' + trackName);\n        }\n\n        var results = {\n          // directoryName: matches[ 1 ], // (tschw) currently unused\n          nodeName: matches[2],\n          objectName: matches[3],\n          objectIndex: matches[4],\n          propertyName: matches[5],\n          // required\n          propertyIndex: matches[6]\n        };\n        var lastDot = results.nodeName && results.nodeName.lastIndexOf('.');\n\n        if (lastDot !== undefined && lastDot !== -1) {\n          var objectName = results.nodeName.substring(lastDot + 1); // Object names must be checked against an allowlist. Otherwise, there\n          // is no way to parse 'foo.bar.baz': 'baz' must be a property, but\n          // 'bar' could be the objectName, or part of a nodeName (which can\n          // include '.' characters).\n\n          if (_supportedObjectNames.indexOf(objectName) !== -1) {\n            results.nodeName = results.nodeName.substring(0, lastDot);\n            results.objectName = objectName;\n          }\n        }\n\n        if (results.propertyName === null || results.propertyName.length === 0) {\n          throw new Error('PropertyBinding: can not parse propertyName from trackName: ' + trackName);\n        }\n\n        return results;\n      }\n    }, {\n      key: \"findNode\",\n      value: function findNode(root, nodeName) {\n        if (!nodeName || nodeName === '' || nodeName === '.' || nodeName === -1 || nodeName === root.name || nodeName === root.uuid) {\n          return root;\n        } // search into skeleton bones.\n\n\n        if (root.skeleton) {\n          var bone = root.skeleton.getBoneByName(nodeName);\n\n          if (bone !== undefined) {\n            return bone;\n          }\n        } // search into node subtree.\n\n\n        if (root.children) {\n          var searchNodeSubtree = function searchNodeSubtree(children) {\n            for (var _i321 = 0; _i321 < children.length; _i321++) {\n              var childNode = children[_i321];\n\n              if (childNode.name === nodeName || childNode.uuid === nodeName) {\n                return childNode;\n              }\n\n              var result = searchNodeSubtree(childNode.children);\n              if (result) return result;\n            }\n\n            return null;\n          };\n\n          var subTreeNode = searchNodeSubtree(root.children);\n\n          if (subTreeNode) {\n            return subTreeNode;\n          }\n        }\n\n        return null;\n      }\n    }]);\n\n    return PropertyBinding;\n  }();\n\n  PropertyBinding.Composite = Composite;\n  PropertyBinding.prototype.BindingType = {\n    Direct: 0,\n    EntireArray: 1,\n    ArrayElement: 2,\n    HasFromToArray: 3\n  };\n  PropertyBinding.prototype.Versioning = {\n    None: 0,\n    NeedsUpdate: 1,\n    MatrixWorldNeedsUpdate: 2\n  };\n  PropertyBinding.prototype.GetterByBindingType = [PropertyBinding.prototype._getValue_direct, PropertyBinding.prototype._getValue_array, PropertyBinding.prototype._getValue_arrayElement, PropertyBinding.prototype._getValue_toArray];\n  PropertyBinding.prototype.SetterByBindingTypeAndVersioning = [[// Direct\n  PropertyBinding.prototype._setValue_direct, PropertyBinding.prototype._setValue_direct_setNeedsUpdate, PropertyBinding.prototype._setValue_direct_setMatrixWorldNeedsUpdate], [// EntireArray\n  PropertyBinding.prototype._setValue_array, PropertyBinding.prototype._setValue_array_setNeedsUpdate, PropertyBinding.prototype._setValue_array_setMatrixWorldNeedsUpdate], [// ArrayElement\n  PropertyBinding.prototype._setValue_arrayElement, PropertyBinding.prototype._setValue_arrayElement_setNeedsUpdate, PropertyBinding.prototype._setValue_arrayElement_setMatrixWorldNeedsUpdate], [// HasToFromArray\n  PropertyBinding.prototype._setValue_fromArray, PropertyBinding.prototype._setValue_fromArray_setNeedsUpdate, PropertyBinding.prototype._setValue_fromArray_setMatrixWorldNeedsUpdate]];\n  /**\n   *\n   * A group of objects that receives a shared animation state.\n   *\n   * Usage:\n   *\n   *\t- Add objects you would otherwise pass as 'root' to the\n   *\t\tconstructor or the .clipAction method of AnimationMixer.\n   *\n   *\t- Instead pass this object as 'root'.\n   *\n   *\t- You can also add and remove objects later when the mixer\n   *\t\tis running.\n   *\n   * Note:\n   *\n   *\t\tObjects of this class appear as one object to the mixer,\n   *\t\tso cache control of the individual objects must be done\n   *\t\ton the group.\n   *\n   * Limitation:\n   *\n   *\t- The animated properties must be compatible among the\n   *\t\tall objects in the group.\n   *\n   *\t- A single property can either be controlled through a\n   *\t\ttarget group or directly, but not both.\n   */\n\n  var AnimationObjectGroup = /*#__PURE__*/function () {\n    function AnimationObjectGroup() {\n      _classCallCheck(this, AnimationObjectGroup);\n\n      this.uuid = generateUUID(); // cached objects followed by the active ones\n\n      this._objects = Array.prototype.slice.call(arguments);\n      this.nCachedObjects_ = 0; // threshold\n      // note: read by PropertyBinding.Composite\n\n      var indices = {};\n      this._indicesByUUID = indices; // for bookkeeping\n\n      for (var _i322 = 0, n = arguments.length; _i322 !== n; ++_i322) {\n        indices[arguments[_i322].uuid] = _i322;\n      }\n\n      this._paths = []; // inside: string\n\n      this._parsedPaths = []; // inside: { we don't care, here }\n\n      this._bindings = []; // inside: Array< PropertyBinding >\n\n      this._bindingsIndicesByPath = {}; // inside: indices in these arrays\n\n      var scope = this;\n      this.stats = {\n        objects: {\n          get total() {\n            return scope._objects.length;\n          },\n\n          get inUse() {\n            return this.total - scope.nCachedObjects_;\n          }\n\n        },\n\n        get bindingsPerObject() {\n          return scope._bindings.length;\n        }\n\n      };\n    }\n\n    _createClass(AnimationObjectGroup, [{\n      key: \"add\",\n      value: function add() {\n        var objects = this._objects,\n            indicesByUUID = this._indicesByUUID,\n            paths = this._paths,\n            parsedPaths = this._parsedPaths,\n            bindings = this._bindings,\n            nBindings = bindings.length;\n        var knownObject = undefined,\n            nObjects = objects.length,\n            nCachedObjects = this.nCachedObjects_;\n\n        for (var _i323 = 0, n = arguments.length; _i323 !== n; ++_i323) {\n          var object = arguments[_i323],\n              uuid = object.uuid;\n          var index = indicesByUUID[uuid];\n\n          if (index === undefined) {\n            // unknown object -> add it to the ACTIVE region\n            index = nObjects++;\n            indicesByUUID[uuid] = index;\n            objects.push(object); // accounting is done, now do the same for all bindings\n\n            for (var j = 0, m = nBindings; j !== m; ++j) {\n              bindings[j].push(new PropertyBinding(object, paths[j], parsedPaths[j]));\n            }\n          } else if (index < nCachedObjects) {\n            knownObject = objects[index]; // move existing object to the ACTIVE region\n\n            var firstActiveIndex = --nCachedObjects,\n                lastCachedObject = objects[firstActiveIndex];\n            indicesByUUID[lastCachedObject.uuid] = index;\n            objects[index] = lastCachedObject;\n            indicesByUUID[uuid] = firstActiveIndex;\n            objects[firstActiveIndex] = object; // accounting is done, now do the same for all bindings\n\n            for (var _j16 = 0, _m2 = nBindings; _j16 !== _m2; ++_j16) {\n              var bindingsForPath = bindings[_j16],\n                  lastCached = bindingsForPath[firstActiveIndex];\n              var binding = bindingsForPath[index];\n              bindingsForPath[index] = lastCached;\n\n              if (binding === undefined) {\n                // since we do not bother to create new bindings\n                // for objects that are cached, the binding may\n                // or may not exist\n                binding = new PropertyBinding(object, paths[_j16], parsedPaths[_j16]);\n              }\n\n              bindingsForPath[firstActiveIndex] = binding;\n            }\n          } else if (objects[index] !== knownObject) {\n            console.error('THREE.AnimationObjectGroup: Different objects with the same UUID ' + 'detected. Clean the caches or recreate your infrastructure when reloading scenes.');\n          } // else the object is already where we want it to be\n\n        } // for arguments\n\n\n        this.nCachedObjects_ = nCachedObjects;\n      }\n    }, {\n      key: \"remove\",\n      value: function remove() {\n        var objects = this._objects,\n            indicesByUUID = this._indicesByUUID,\n            bindings = this._bindings,\n            nBindings = bindings.length;\n        var nCachedObjects = this.nCachedObjects_;\n\n        for (var _i324 = 0, n = arguments.length; _i324 !== n; ++_i324) {\n          var object = arguments[_i324],\n              uuid = object.uuid,\n              index = indicesByUUID[uuid];\n\n          if (index !== undefined && index >= nCachedObjects) {\n            // move existing object into the CACHED region\n            var lastCachedIndex = nCachedObjects++,\n                firstActiveObject = objects[lastCachedIndex];\n            indicesByUUID[firstActiveObject.uuid] = index;\n            objects[index] = firstActiveObject;\n            indicesByUUID[uuid] = lastCachedIndex;\n            objects[lastCachedIndex] = object; // accounting is done, now do the same for all bindings\n\n            for (var j = 0, m = nBindings; j !== m; ++j) {\n              var bindingsForPath = bindings[j],\n                  firstActive = bindingsForPath[lastCachedIndex],\n                  binding = bindingsForPath[index];\n              bindingsForPath[index] = firstActive;\n              bindingsForPath[lastCachedIndex] = binding;\n            }\n          }\n        } // for arguments\n\n\n        this.nCachedObjects_ = nCachedObjects;\n      } // remove & forget\n\n    }, {\n      key: \"uncache\",\n      value: function uncache() {\n        var objects = this._objects,\n            indicesByUUID = this._indicesByUUID,\n            bindings = this._bindings,\n            nBindings = bindings.length;\n        var nCachedObjects = this.nCachedObjects_,\n            nObjects = objects.length;\n\n        for (var _i325 = 0, n = arguments.length; _i325 !== n; ++_i325) {\n          var object = arguments[_i325],\n              uuid = object.uuid,\n              index = indicesByUUID[uuid];\n\n          if (index !== undefined) {\n            delete indicesByUUID[uuid];\n\n            if (index < nCachedObjects) {\n              // object is cached, shrink the CACHED region\n              var firstActiveIndex = --nCachedObjects,\n                  lastCachedObject = objects[firstActiveIndex],\n                  lastIndex = --nObjects,\n                  lastObject = objects[lastIndex]; // last cached object takes this object's place\n\n              indicesByUUID[lastCachedObject.uuid] = index;\n              objects[index] = lastCachedObject; // last object goes to the activated slot and pop\n\n              indicesByUUID[lastObject.uuid] = firstActiveIndex;\n              objects[firstActiveIndex] = lastObject;\n              objects.pop(); // accounting is done, now do the same for all bindings\n\n              for (var j = 0, m = nBindings; j !== m; ++j) {\n                var bindingsForPath = bindings[j],\n                    lastCached = bindingsForPath[firstActiveIndex],\n                    last = bindingsForPath[lastIndex];\n                bindingsForPath[index] = lastCached;\n                bindingsForPath[firstActiveIndex] = last;\n                bindingsForPath.pop();\n              }\n            } else {\n              // object is active, just swap with the last and pop\n              var _lastIndex = --nObjects,\n                  _lastObject = objects[_lastIndex];\n\n              if (_lastIndex > 0) {\n                indicesByUUID[_lastObject.uuid] = index;\n              }\n\n              objects[index] = _lastObject;\n              objects.pop(); // accounting is done, now do the same for all bindings\n\n              for (var _j17 = 0, _m3 = nBindings; _j17 !== _m3; ++_j17) {\n                var _bindingsForPath = bindings[_j17];\n                _bindingsForPath[index] = _bindingsForPath[_lastIndex];\n\n                _bindingsForPath.pop();\n              }\n            } // cached or active\n\n          } // if object is known\n\n        } // for arguments\n\n\n        this.nCachedObjects_ = nCachedObjects;\n      } // Internal interface used by befriended PropertyBinding.Composite:\n\n    }, {\n      key: \"subscribe_\",\n      value: function subscribe_(path, parsedPath) {\n        // returns an array of bindings for the given path that is changed\n        // according to the contained objects in the group\n        var indicesByPath = this._bindingsIndicesByPath;\n        var index = indicesByPath[path];\n        var bindings = this._bindings;\n        if (index !== undefined) return bindings[index];\n        var paths = this._paths,\n            parsedPaths = this._parsedPaths,\n            objects = this._objects,\n            nObjects = objects.length,\n            nCachedObjects = this.nCachedObjects_,\n            bindingsForPath = new Array(nObjects);\n        index = bindings.length;\n        indicesByPath[path] = index;\n        paths.push(path);\n        parsedPaths.push(parsedPath);\n        bindings.push(bindingsForPath);\n\n        for (var _i326 = nCachedObjects, n = objects.length; _i326 !== n; ++_i326) {\n          var object = objects[_i326];\n          bindingsForPath[_i326] = new PropertyBinding(object, path, parsedPath);\n        }\n\n        return bindingsForPath;\n      }\n    }, {\n      key: \"unsubscribe_\",\n      value: function unsubscribe_(path) {\n        // tells the group to forget about a property path and no longer\n        // update the array previously obtained with 'subscribe_'\n        var indicesByPath = this._bindingsIndicesByPath,\n            index = indicesByPath[path];\n\n        if (index !== undefined) {\n          var paths = this._paths,\n              parsedPaths = this._parsedPaths,\n              bindings = this._bindings,\n              lastBindingsIndex = bindings.length - 1,\n              lastBindings = bindings[lastBindingsIndex],\n              lastBindingsPath = path[lastBindingsIndex];\n          indicesByPath[lastBindingsPath] = index;\n          bindings[index] = lastBindings;\n          bindings.pop();\n          parsedPaths[index] = parsedPaths[lastBindingsIndex];\n          parsedPaths.pop();\n          paths[index] = paths[lastBindingsIndex];\n          paths.pop();\n        }\n      }\n    }]);\n\n    return AnimationObjectGroup;\n  }();\n\n  AnimationObjectGroup.prototype.isAnimationObjectGroup = true;\n\n  var AnimationAction = /*#__PURE__*/function () {\n    function AnimationAction(mixer, clip) {\n      var localRoot = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n      var blendMode = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : clip.blendMode;\n\n      _classCallCheck(this, AnimationAction);\n\n      this._mixer = mixer;\n      this._clip = clip;\n      this._localRoot = localRoot;\n      this.blendMode = blendMode;\n      var tracks = clip.tracks,\n          nTracks = tracks.length,\n          interpolants = new Array(nTracks);\n      var interpolantSettings = {\n        endingStart: ZeroCurvatureEnding,\n        endingEnd: ZeroCurvatureEnding\n      };\n\n      for (var _i327 = 0; _i327 !== nTracks; ++_i327) {\n        var interpolant = tracks[_i327].createInterpolant(null);\n\n        interpolants[_i327] = interpolant;\n        interpolant.settings = interpolantSettings;\n      }\n\n      this._interpolantSettings = interpolantSettings;\n      this._interpolants = interpolants; // bound by the mixer\n      // inside: PropertyMixer (managed by the mixer)\n\n      this._propertyBindings = new Array(nTracks);\n      this._cacheIndex = null; // for the memory manager\n\n      this._byClipCacheIndex = null; // for the memory manager\n\n      this._timeScaleInterpolant = null;\n      this._weightInterpolant = null;\n      this.loop = LoopRepeat;\n      this._loopCount = -1; // global mixer time when the action is to be started\n      // it's set back to 'null' upon start of the action\n\n      this._startTime = null; // scaled local time of the action\n      // gets clamped or wrapped to 0..clip.duration according to loop\n\n      this.time = 0;\n      this.timeScale = 1;\n      this._effectiveTimeScale = 1;\n      this.weight = 1;\n      this._effectiveWeight = 1;\n      this.repetitions = Infinity; // no. of repetitions when looping\n\n      this.paused = false; // true -> zero effective time scale\n\n      this.enabled = true; // false -> zero effective weight\n\n      this.clampWhenFinished = false; // keep feeding the last frame?\n\n      this.zeroSlopeAtStart = true; // for smooth interpolation w/o separate\n\n      this.zeroSlopeAtEnd = true; // clips for start, loop and end\n    } // State & Scheduling\n\n\n    _createClass(AnimationAction, [{\n      key: \"play\",\n      value: function play() {\n        this._mixer._activateAction(this);\n\n        return this;\n      }\n    }, {\n      key: \"stop\",\n      value: function stop() {\n        this._mixer._deactivateAction(this);\n\n        return this.reset();\n      }\n    }, {\n      key: \"reset\",\n      value: function reset() {\n        this.paused = false;\n        this.enabled = true;\n        this.time = 0; // restart clip\n\n        this._loopCount = -1; // forget previous loops\n\n        this._startTime = null; // forget scheduling\n\n        return this.stopFading().stopWarping();\n      }\n    }, {\n      key: \"isRunning\",\n      value: function isRunning() {\n        return this.enabled && !this.paused && this.timeScale !== 0 && this._startTime === null && this._mixer._isActiveAction(this);\n      } // return true when play has been called\n\n    }, {\n      key: \"isScheduled\",\n      value: function isScheduled() {\n        return this._mixer._isActiveAction(this);\n      }\n    }, {\n      key: \"startAt\",\n      value: function startAt(time) {\n        this._startTime = time;\n        return this;\n      }\n    }, {\n      key: \"setLoop\",\n      value: function setLoop(mode, repetitions) {\n        this.loop = mode;\n        this.repetitions = repetitions;\n        return this;\n      } // Weight\n      // set the weight stopping any scheduled fading\n      // although .enabled = false yields an effective weight of zero, this\n      // method does *not* change .enabled, because it would be confusing\n\n    }, {\n      key: \"setEffectiveWeight\",\n      value: function setEffectiveWeight(weight) {\n        this.weight = weight; // note: same logic as when updated at runtime\n\n        this._effectiveWeight = this.enabled ? weight : 0;\n        return this.stopFading();\n      } // return the weight considering fading and .enabled\n\n    }, {\n      key: \"getEffectiveWeight\",\n      value: function getEffectiveWeight() {\n        return this._effectiveWeight;\n      }\n    }, {\n      key: \"fadeIn\",\n      value: function fadeIn(duration) {\n        return this._scheduleFading(duration, 0, 1);\n      }\n    }, {\n      key: \"fadeOut\",\n      value: function fadeOut(duration) {\n        return this._scheduleFading(duration, 1, 0);\n      }\n    }, {\n      key: \"crossFadeFrom\",\n      value: function crossFadeFrom(fadeOutAction, duration, warp) {\n        fadeOutAction.fadeOut(duration);\n        this.fadeIn(duration);\n\n        if (warp) {\n          var fadeInDuration = this._clip.duration,\n              fadeOutDuration = fadeOutAction._clip.duration,\n              startEndRatio = fadeOutDuration / fadeInDuration,\n              endStartRatio = fadeInDuration / fadeOutDuration;\n          fadeOutAction.warp(1.0, startEndRatio, duration);\n          this.warp(endStartRatio, 1.0, duration);\n        }\n\n        return this;\n      }\n    }, {\n      key: \"crossFadeTo\",\n      value: function crossFadeTo(fadeInAction, duration, warp) {\n        return fadeInAction.crossFadeFrom(this, duration, warp);\n      }\n    }, {\n      key: \"stopFading\",\n      value: function stopFading() {\n        var weightInterpolant = this._weightInterpolant;\n\n        if (weightInterpolant !== null) {\n          this._weightInterpolant = null;\n\n          this._mixer._takeBackControlInterpolant(weightInterpolant);\n        }\n\n        return this;\n      } // Time Scale Control\n      // set the time scale stopping any scheduled warping\n      // although .paused = true yields an effective time scale of zero, this\n      // method does *not* change .paused, because it would be confusing\n\n    }, {\n      key: \"setEffectiveTimeScale\",\n      value: function setEffectiveTimeScale(timeScale) {\n        this.timeScale = timeScale;\n        this._effectiveTimeScale = this.paused ? 0 : timeScale;\n        return this.stopWarping();\n      } // return the time scale considering warping and .paused\n\n    }, {\n      key: \"getEffectiveTimeScale\",\n      value: function getEffectiveTimeScale() {\n        return this._effectiveTimeScale;\n      }\n    }, {\n      key: \"setDuration\",\n      value: function setDuration(duration) {\n        this.timeScale = this._clip.duration / duration;\n        return this.stopWarping();\n      }\n    }, {\n      key: \"syncWith\",\n      value: function syncWith(action) {\n        this.time = action.time;\n        this.timeScale = action.timeScale;\n        return this.stopWarping();\n      }\n    }, {\n      key: \"halt\",\n      value: function halt(duration) {\n        return this.warp(this._effectiveTimeScale, 0, duration);\n      }\n    }, {\n      key: \"warp\",\n      value: function warp(startTimeScale, endTimeScale, duration) {\n        var mixer = this._mixer,\n            now = mixer.time,\n            timeScale = this.timeScale;\n        var interpolant = this._timeScaleInterpolant;\n\n        if (interpolant === null) {\n          interpolant = mixer._lendControlInterpolant();\n          this._timeScaleInterpolant = interpolant;\n        }\n\n        var times = interpolant.parameterPositions,\n            values = interpolant.sampleValues;\n        times[0] = now;\n        times[1] = now + duration;\n        values[0] = startTimeScale / timeScale;\n        values[1] = endTimeScale / timeScale;\n        return this;\n      }\n    }, {\n      key: \"stopWarping\",\n      value: function stopWarping() {\n        var timeScaleInterpolant = this._timeScaleInterpolant;\n\n        if (timeScaleInterpolant !== null) {\n          this._timeScaleInterpolant = null;\n\n          this._mixer._takeBackControlInterpolant(timeScaleInterpolant);\n        }\n\n        return this;\n      } // Object Accessors\n\n    }, {\n      key: \"getMixer\",\n      value: function getMixer() {\n        return this._mixer;\n      }\n    }, {\n      key: \"getClip\",\n      value: function getClip() {\n        return this._clip;\n      }\n    }, {\n      key: \"getRoot\",\n      value: function getRoot() {\n        return this._localRoot || this._mixer._root;\n      } // Interna\n\n    }, {\n      key: \"_update\",\n      value: function _update(time, deltaTime, timeDirection, accuIndex) {\n        // called by the mixer\n        if (!this.enabled) {\n          // call ._updateWeight() to update ._effectiveWeight\n          this._updateWeight(time);\n\n          return;\n        }\n\n        var startTime = this._startTime;\n\n        if (startTime !== null) {\n          // check for scheduled start of action\n          var timeRunning = (time - startTime) * timeDirection;\n\n          if (timeRunning < 0 || timeDirection === 0) {\n            return; // yet to come / don't decide when delta = 0\n          } // start\n\n\n          this._startTime = null; // unschedule\n\n          deltaTime = timeDirection * timeRunning;\n        } // apply time scale and advance time\n\n\n        deltaTime *= this._updateTimeScale(time);\n\n        var clipTime = this._updateTime(deltaTime); // note: _updateTime may disable the action resulting in\n        // an effective weight of 0\n\n\n        var weight = this._updateWeight(time);\n\n        if (weight > 0) {\n          var interpolants = this._interpolants;\n          var propertyMixers = this._propertyBindings;\n\n          switch (this.blendMode) {\n            case AdditiveAnimationBlendMode:\n              for (var j = 0, m = interpolants.length; j !== m; ++j) {\n                interpolants[j].evaluate(clipTime);\n                propertyMixers[j].accumulateAdditive(weight);\n              }\n\n              break;\n\n            case NormalAnimationBlendMode:\n            default:\n              for (var _j18 = 0, _m4 = interpolants.length; _j18 !== _m4; ++_j18) {\n                interpolants[_j18].evaluate(clipTime);\n\n                propertyMixers[_j18].accumulate(accuIndex, weight);\n              }\n\n          }\n        }\n      }\n    }, {\n      key: \"_updateWeight\",\n      value: function _updateWeight(time) {\n        var weight = 0;\n\n        if (this.enabled) {\n          weight = this.weight;\n          var interpolant = this._weightInterpolant;\n\n          if (interpolant !== null) {\n            var interpolantValue = interpolant.evaluate(time)[0];\n            weight *= interpolantValue;\n\n            if (time > interpolant.parameterPositions[1]) {\n              this.stopFading();\n\n              if (interpolantValue === 0) {\n                // faded out, disable\n                this.enabled = false;\n              }\n            }\n          }\n        }\n\n        this._effectiveWeight = weight;\n        return weight;\n      }\n    }, {\n      key: \"_updateTimeScale\",\n      value: function _updateTimeScale(time) {\n        var timeScale = 0;\n\n        if (!this.paused) {\n          timeScale = this.timeScale;\n          var interpolant = this._timeScaleInterpolant;\n\n          if (interpolant !== null) {\n            var interpolantValue = interpolant.evaluate(time)[0];\n            timeScale *= interpolantValue;\n\n            if (time > interpolant.parameterPositions[1]) {\n              this.stopWarping();\n\n              if (timeScale === 0) {\n                // motion has halted, pause\n                this.paused = true;\n              } else {\n                // warp done - apply final time scale\n                this.timeScale = timeScale;\n              }\n            }\n          }\n        }\n\n        this._effectiveTimeScale = timeScale;\n        return timeScale;\n      }\n    }, {\n      key: \"_updateTime\",\n      value: function _updateTime(deltaTime) {\n        var duration = this._clip.duration;\n        var loop = this.loop;\n        var time = this.time + deltaTime;\n        var loopCount = this._loopCount;\n        var pingPong = loop === LoopPingPong;\n\n        if (deltaTime === 0) {\n          if (loopCount === -1) return time;\n          return pingPong && (loopCount & 1) === 1 ? duration - time : time;\n        }\n\n        if (loop === LoopOnce) {\n          if (loopCount === -1) {\n            // just started\n            this._loopCount = 0;\n\n            this._setEndings(true, true, false);\n          }\n\n          handle_stop: {\n            if (time >= duration) {\n              time = duration;\n            } else if (time < 0) {\n              time = 0;\n            } else {\n              this.time = time;\n              break handle_stop;\n            }\n\n            if (this.clampWhenFinished) this.paused = true;else this.enabled = false;\n            this.time = time;\n\n            this._mixer.dispatchEvent({\n              type: 'finished',\n              action: this,\n              direction: deltaTime < 0 ? -1 : 1\n            });\n          }\n        } else {\n          // repetitive Repeat or PingPong\n          if (loopCount === -1) {\n            // just started\n            if (deltaTime >= 0) {\n              loopCount = 0;\n\n              this._setEndings(true, this.repetitions === 0, pingPong);\n            } else {\n              // when looping in reverse direction, the initial\n              // transition through zero counts as a repetition,\n              // so leave loopCount at -1\n              this._setEndings(this.repetitions === 0, true, pingPong);\n            }\n          }\n\n          if (time >= duration || time < 0) {\n            // wrap around\n            var loopDelta = Math.floor(time / duration); // signed\n\n            time -= duration * loopDelta;\n            loopCount += Math.abs(loopDelta);\n            var pending = this.repetitions - loopCount;\n\n            if (pending <= 0) {\n              // have to stop (switch state, clamp time, fire event)\n              if (this.clampWhenFinished) this.paused = true;else this.enabled = false;\n              time = deltaTime > 0 ? duration : 0;\n              this.time = time;\n\n              this._mixer.dispatchEvent({\n                type: 'finished',\n                action: this,\n                direction: deltaTime > 0 ? 1 : -1\n              });\n            } else {\n              // keep running\n              if (pending === 1) {\n                // entering the last round\n                var atStart = deltaTime < 0;\n\n                this._setEndings(atStart, !atStart, pingPong);\n              } else {\n                this._setEndings(false, false, pingPong);\n              }\n\n              this._loopCount = loopCount;\n              this.time = time;\n\n              this._mixer.dispatchEvent({\n                type: 'loop',\n                action: this,\n                loopDelta: loopDelta\n              });\n            }\n          } else {\n            this.time = time;\n          }\n\n          if (pingPong && (loopCount & 1) === 1) {\n            // invert time for the \"pong round\"\n            return duration - time;\n          }\n        }\n\n        return time;\n      }\n    }, {\n      key: \"_setEndings\",\n      value: function _setEndings(atStart, atEnd, pingPong) {\n        var settings = this._interpolantSettings;\n\n        if (pingPong) {\n          settings.endingStart = ZeroSlopeEnding;\n          settings.endingEnd = ZeroSlopeEnding;\n        } else {\n          // assuming for LoopOnce atStart == atEnd == true\n          if (atStart) {\n            settings.endingStart = this.zeroSlopeAtStart ? ZeroSlopeEnding : ZeroCurvatureEnding;\n          } else {\n            settings.endingStart = WrapAroundEnding;\n          }\n\n          if (atEnd) {\n            settings.endingEnd = this.zeroSlopeAtEnd ? ZeroSlopeEnding : ZeroCurvatureEnding;\n          } else {\n            settings.endingEnd = WrapAroundEnding;\n          }\n        }\n      }\n    }, {\n      key: \"_scheduleFading\",\n      value: function _scheduleFading(duration, weightNow, weightThen) {\n        var mixer = this._mixer,\n            now = mixer.time;\n        var interpolant = this._weightInterpolant;\n\n        if (interpolant === null) {\n          interpolant = mixer._lendControlInterpolant();\n          this._weightInterpolant = interpolant;\n        }\n\n        var times = interpolant.parameterPositions,\n            values = interpolant.sampleValues;\n        times[0] = now;\n        values[0] = weightNow;\n        times[1] = now + duration;\n        values[1] = weightThen;\n        return this;\n      }\n    }]);\n\n    return AnimationAction;\n  }();\n\n  var AnimationMixer = /*#__PURE__*/function (_EventDispatcher7) {\n    _inherits(AnimationMixer, _EventDispatcher7);\n\n    var _super136 = _createSuper(AnimationMixer);\n\n    function AnimationMixer(root) {\n      var _this107;\n\n      _classCallCheck(this, AnimationMixer);\n\n      _this107 = _super136.call(this);\n      _this107._root = root;\n\n      _this107._initMemoryManager();\n\n      _this107._accuIndex = 0;\n      _this107.time = 0;\n      _this107.timeScale = 1.0;\n      return _this107;\n    }\n\n    _createClass(AnimationMixer, [{\n      key: \"_bindAction\",\n      value: function _bindAction(action, prototypeAction) {\n        var root = action._localRoot || this._root,\n            tracks = action._clip.tracks,\n            nTracks = tracks.length,\n            bindings = action._propertyBindings,\n            interpolants = action._interpolants,\n            rootUuid = root.uuid,\n            bindingsByRoot = this._bindingsByRootAndName;\n        var bindingsByName = bindingsByRoot[rootUuid];\n\n        if (bindingsByName === undefined) {\n          bindingsByName = {};\n          bindingsByRoot[rootUuid] = bindingsByName;\n        }\n\n        for (var _i328 = 0; _i328 !== nTracks; ++_i328) {\n          var track = tracks[_i328],\n              trackName = track.name;\n          var binding = bindingsByName[trackName];\n\n          if (binding !== undefined) {\n            bindings[_i328] = binding;\n          } else {\n            binding = bindings[_i328];\n\n            if (binding !== undefined) {\n              // existing binding, make sure the cache knows\n              if (binding._cacheIndex === null) {\n                ++binding.referenceCount;\n\n                this._addInactiveBinding(binding, rootUuid, trackName);\n              }\n\n              continue;\n            }\n\n            var path = prototypeAction && prototypeAction._propertyBindings[_i328].binding.parsedPath;\n            binding = new PropertyMixer(PropertyBinding.create(root, trackName, path), track.ValueTypeName, track.getValueSize());\n            ++binding.referenceCount;\n\n            this._addInactiveBinding(binding, rootUuid, trackName);\n\n            bindings[_i328] = binding;\n          }\n\n          interpolants[_i328].resultBuffer = binding.buffer;\n        }\n      }\n    }, {\n      key: \"_activateAction\",\n      value: function _activateAction(action) {\n        if (!this._isActiveAction(action)) {\n          if (action._cacheIndex === null) {\n            // this action has been forgotten by the cache, but the user\n            // appears to be still using it -> rebind\n            var rootUuid = (action._localRoot || this._root).uuid,\n                clipUuid = action._clip.uuid,\n                actionsForClip = this._actionsByClip[clipUuid];\n\n            this._bindAction(action, actionsForClip && actionsForClip.knownActions[0]);\n\n            this._addInactiveAction(action, clipUuid, rootUuid);\n          }\n\n          var bindings = action._propertyBindings; // increment reference counts / sort out state\n\n          for (var _i329 = 0, n = bindings.length; _i329 !== n; ++_i329) {\n            var binding = bindings[_i329];\n\n            if (binding.useCount++ === 0) {\n              this._lendBinding(binding);\n\n              binding.saveOriginalState();\n            }\n          }\n\n          this._lendAction(action);\n        }\n      }\n    }, {\n      key: \"_deactivateAction\",\n      value: function _deactivateAction(action) {\n        if (this._isActiveAction(action)) {\n          var bindings = action._propertyBindings; // decrement reference counts / sort out state\n\n          for (var _i330 = 0, n = bindings.length; _i330 !== n; ++_i330) {\n            var binding = bindings[_i330];\n\n            if (--binding.useCount === 0) {\n              binding.restoreOriginalState();\n\n              this._takeBackBinding(binding);\n            }\n          }\n\n          this._takeBackAction(action);\n        }\n      } // Memory manager\n\n    }, {\n      key: \"_initMemoryManager\",\n      value: function _initMemoryManager() {\n        this._actions = []; // 'nActiveActions' followed by inactive ones\n\n        this._nActiveActions = 0;\n        this._actionsByClip = {}; // inside:\n        // {\n        // \tknownActions: Array< AnimationAction > - used as prototypes\n        // \tactionByRoot: AnimationAction - lookup\n        // }\n\n        this._bindings = []; // 'nActiveBindings' followed by inactive ones\n\n        this._nActiveBindings = 0;\n        this._bindingsByRootAndName = {}; // inside: Map< name, PropertyMixer >\n\n        this._controlInterpolants = []; // same game as above\n\n        this._nActiveControlInterpolants = 0;\n        var scope = this;\n        this.stats = {\n          actions: {\n            get total() {\n              return scope._actions.length;\n            },\n\n            get inUse() {\n              return scope._nActiveActions;\n            }\n\n          },\n          bindings: {\n            get total() {\n              return scope._bindings.length;\n            },\n\n            get inUse() {\n              return scope._nActiveBindings;\n            }\n\n          },\n          controlInterpolants: {\n            get total() {\n              return scope._controlInterpolants.length;\n            },\n\n            get inUse() {\n              return scope._nActiveControlInterpolants;\n            }\n\n          }\n        };\n      } // Memory management for AnimationAction objects\n\n    }, {\n      key: \"_isActiveAction\",\n      value: function _isActiveAction(action) {\n        var index = action._cacheIndex;\n        return index !== null && index < this._nActiveActions;\n      }\n    }, {\n      key: \"_addInactiveAction\",\n      value: function _addInactiveAction(action, clipUuid, rootUuid) {\n        var actions = this._actions,\n            actionsByClip = this._actionsByClip;\n        var actionsForClip = actionsByClip[clipUuid];\n\n        if (actionsForClip === undefined) {\n          actionsForClip = {\n            knownActions: [action],\n            actionByRoot: {}\n          };\n          action._byClipCacheIndex = 0;\n          actionsByClip[clipUuid] = actionsForClip;\n        } else {\n          var knownActions = actionsForClip.knownActions;\n          action._byClipCacheIndex = knownActions.length;\n          knownActions.push(action);\n        }\n\n        action._cacheIndex = actions.length;\n        actions.push(action);\n        actionsForClip.actionByRoot[rootUuid] = action;\n      }\n    }, {\n      key: \"_removeInactiveAction\",\n      value: function _removeInactiveAction(action) {\n        var actions = this._actions,\n            lastInactiveAction = actions[actions.length - 1],\n            cacheIndex = action._cacheIndex;\n        lastInactiveAction._cacheIndex = cacheIndex;\n        actions[cacheIndex] = lastInactiveAction;\n        actions.pop();\n        action._cacheIndex = null;\n        var clipUuid = action._clip.uuid,\n            actionsByClip = this._actionsByClip,\n            actionsForClip = actionsByClip[clipUuid],\n            knownActionsForClip = actionsForClip.knownActions,\n            lastKnownAction = knownActionsForClip[knownActionsForClip.length - 1],\n            byClipCacheIndex = action._byClipCacheIndex;\n        lastKnownAction._byClipCacheIndex = byClipCacheIndex;\n        knownActionsForClip[byClipCacheIndex] = lastKnownAction;\n        knownActionsForClip.pop();\n        action._byClipCacheIndex = null;\n        var actionByRoot = actionsForClip.actionByRoot,\n            rootUuid = (action._localRoot || this._root).uuid;\n        delete actionByRoot[rootUuid];\n\n        if (knownActionsForClip.length === 0) {\n          delete actionsByClip[clipUuid];\n        }\n\n        this._removeInactiveBindingsForAction(action);\n      }\n    }, {\n      key: \"_removeInactiveBindingsForAction\",\n      value: function _removeInactiveBindingsForAction(action) {\n        var bindings = action._propertyBindings;\n\n        for (var _i331 = 0, n = bindings.length; _i331 !== n; ++_i331) {\n          var binding = bindings[_i331];\n\n          if (--binding.referenceCount === 0) {\n            this._removeInactiveBinding(binding);\n          }\n        }\n      }\n    }, {\n      key: \"_lendAction\",\n      value: function _lendAction(action) {\n        // [ active actions |\tinactive actions\t]\n        // [\tactive actions >| inactive actions ]\n        //\t\t\t\t\t\t\t\t s\t\t\t\ta\n        //\t\t\t\t\t\t\t\t\t<-swap->\n        //\t\t\t\t\t\t\t\t a\t\t\t\ts\n        var actions = this._actions,\n            prevIndex = action._cacheIndex,\n            lastActiveIndex = this._nActiveActions++,\n            firstInactiveAction = actions[lastActiveIndex];\n        action._cacheIndex = lastActiveIndex;\n        actions[lastActiveIndex] = action;\n        firstInactiveAction._cacheIndex = prevIndex;\n        actions[prevIndex] = firstInactiveAction;\n      }\n    }, {\n      key: \"_takeBackAction\",\n      value: function _takeBackAction(action) {\n        // [\tactive actions\t| inactive actions ]\n        // [ active actions |< inactive actions\t]\n        //\t\t\t\ta\t\t\t\ts\n        //\t\t\t\t <-swap->\n        //\t\t\t\ts\t\t\t\ta\n        var actions = this._actions,\n            prevIndex = action._cacheIndex,\n            firstInactiveIndex = --this._nActiveActions,\n            lastActiveAction = actions[firstInactiveIndex];\n        action._cacheIndex = firstInactiveIndex;\n        actions[firstInactiveIndex] = action;\n        lastActiveAction._cacheIndex = prevIndex;\n        actions[prevIndex] = lastActiveAction;\n      } // Memory management for PropertyMixer objects\n\n    }, {\n      key: \"_addInactiveBinding\",\n      value: function _addInactiveBinding(binding, rootUuid, trackName) {\n        var bindingsByRoot = this._bindingsByRootAndName,\n            bindings = this._bindings;\n        var bindingByName = bindingsByRoot[rootUuid];\n\n        if (bindingByName === undefined) {\n          bindingByName = {};\n          bindingsByRoot[rootUuid] = bindingByName;\n        }\n\n        bindingByName[trackName] = binding;\n        binding._cacheIndex = bindings.length;\n        bindings.push(binding);\n      }\n    }, {\n      key: \"_removeInactiveBinding\",\n      value: function _removeInactiveBinding(binding) {\n        var bindings = this._bindings,\n            propBinding = binding.binding,\n            rootUuid = propBinding.rootNode.uuid,\n            trackName = propBinding.path,\n            bindingsByRoot = this._bindingsByRootAndName,\n            bindingByName = bindingsByRoot[rootUuid],\n            lastInactiveBinding = bindings[bindings.length - 1],\n            cacheIndex = binding._cacheIndex;\n        lastInactiveBinding._cacheIndex = cacheIndex;\n        bindings[cacheIndex] = lastInactiveBinding;\n        bindings.pop();\n        delete bindingByName[trackName];\n\n        if (Object.keys(bindingByName).length === 0) {\n          delete bindingsByRoot[rootUuid];\n        }\n      }\n    }, {\n      key: \"_lendBinding\",\n      value: function _lendBinding(binding) {\n        var bindings = this._bindings,\n            prevIndex = binding._cacheIndex,\n            lastActiveIndex = this._nActiveBindings++,\n            firstInactiveBinding = bindings[lastActiveIndex];\n        binding._cacheIndex = lastActiveIndex;\n        bindings[lastActiveIndex] = binding;\n        firstInactiveBinding._cacheIndex = prevIndex;\n        bindings[prevIndex] = firstInactiveBinding;\n      }\n    }, {\n      key: \"_takeBackBinding\",\n      value: function _takeBackBinding(binding) {\n        var bindings = this._bindings,\n            prevIndex = binding._cacheIndex,\n            firstInactiveIndex = --this._nActiveBindings,\n            lastActiveBinding = bindings[firstInactiveIndex];\n        binding._cacheIndex = firstInactiveIndex;\n        bindings[firstInactiveIndex] = binding;\n        lastActiveBinding._cacheIndex = prevIndex;\n        bindings[prevIndex] = lastActiveBinding;\n      } // Memory management of Interpolants for weight and time scale\n\n    }, {\n      key: \"_lendControlInterpolant\",\n      value: function _lendControlInterpolant() {\n        var interpolants = this._controlInterpolants,\n            lastActiveIndex = this._nActiveControlInterpolants++;\n        var interpolant = interpolants[lastActiveIndex];\n\n        if (interpolant === undefined) {\n          interpolant = new LinearInterpolant(new Float32Array(2), new Float32Array(2), 1, this._controlInterpolantsResultBuffer);\n          interpolant.__cacheIndex = lastActiveIndex;\n          interpolants[lastActiveIndex] = interpolant;\n        }\n\n        return interpolant;\n      }\n    }, {\n      key: \"_takeBackControlInterpolant\",\n      value: function _takeBackControlInterpolant(interpolant) {\n        var interpolants = this._controlInterpolants,\n            prevIndex = interpolant.__cacheIndex,\n            firstInactiveIndex = --this._nActiveControlInterpolants,\n            lastActiveInterpolant = interpolants[firstInactiveIndex];\n        interpolant.__cacheIndex = firstInactiveIndex;\n        interpolants[firstInactiveIndex] = interpolant;\n        lastActiveInterpolant.__cacheIndex = prevIndex;\n        interpolants[prevIndex] = lastActiveInterpolant;\n      } // return an action for a clip optionally using a custom root target\n      // object (this method allocates a lot of dynamic memory in case a\n      // previously unknown clip/root combination is specified)\n\n    }, {\n      key: \"clipAction\",\n      value: function clipAction(clip, optionalRoot, blendMode) {\n        var root = optionalRoot || this._root,\n            rootUuid = root.uuid;\n        var clipObject = typeof clip === 'string' ? AnimationClip.findByName(root, clip) : clip;\n        var clipUuid = clipObject !== null ? clipObject.uuid : clip;\n        var actionsForClip = this._actionsByClip[clipUuid];\n        var prototypeAction = null;\n\n        if (blendMode === undefined) {\n          if (clipObject !== null) {\n            blendMode = clipObject.blendMode;\n          } else {\n            blendMode = NormalAnimationBlendMode;\n          }\n        }\n\n        if (actionsForClip !== undefined) {\n          var existingAction = actionsForClip.actionByRoot[rootUuid];\n\n          if (existingAction !== undefined && existingAction.blendMode === blendMode) {\n            return existingAction;\n          } // we know the clip, so we don't have to parse all\n          // the bindings again but can just copy\n\n\n          prototypeAction = actionsForClip.knownActions[0]; // also, take the clip from the prototype action\n\n          if (clipObject === null) clipObject = prototypeAction._clip;\n        } // clip must be known when specified via string\n\n\n        if (clipObject === null) return null; // allocate all resources required to run it\n\n        var newAction = new AnimationAction(this, clipObject, optionalRoot, blendMode);\n\n        this._bindAction(newAction, prototypeAction); // and make the action known to the memory manager\n\n\n        this._addInactiveAction(newAction, clipUuid, rootUuid);\n\n        return newAction;\n      } // get an existing action\n\n    }, {\n      key: \"existingAction\",\n      value: function existingAction(clip, optionalRoot) {\n        var root = optionalRoot || this._root,\n            rootUuid = root.uuid,\n            clipObject = typeof clip === 'string' ? AnimationClip.findByName(root, clip) : clip,\n            clipUuid = clipObject ? clipObject.uuid : clip,\n            actionsForClip = this._actionsByClip[clipUuid];\n\n        if (actionsForClip !== undefined) {\n          return actionsForClip.actionByRoot[rootUuid] || null;\n        }\n\n        return null;\n      } // deactivates all previously scheduled actions\n\n    }, {\n      key: \"stopAllAction\",\n      value: function stopAllAction() {\n        var actions = this._actions,\n            nActions = this._nActiveActions;\n\n        for (var _i332 = nActions - 1; _i332 >= 0; --_i332) {\n          actions[_i332].stop();\n        }\n\n        return this;\n      } // advance the time and update apply the animation\n\n    }, {\n      key: \"update\",\n      value: function update(deltaTime) {\n        deltaTime *= this.timeScale;\n        var actions = this._actions,\n            nActions = this._nActiveActions,\n            time = this.time += deltaTime,\n            timeDirection = Math.sign(deltaTime),\n            accuIndex = this._accuIndex ^= 1; // run active actions\n\n        for (var _i333 = 0; _i333 !== nActions; ++_i333) {\n          var action = actions[_i333];\n\n          action._update(time, deltaTime, timeDirection, accuIndex);\n        } // update scene graph\n\n\n        var bindings = this._bindings,\n            nBindings = this._nActiveBindings;\n\n        for (var _i334 = 0; _i334 !== nBindings; ++_i334) {\n          bindings[_i334].apply(accuIndex);\n        }\n\n        return this;\n      } // Allows you to seek to a specific time in an animation.\n\n    }, {\n      key: \"setTime\",\n      value: function setTime(timeInSeconds) {\n        this.time = 0; // Zero out time attribute for AnimationMixer object;\n\n        for (var _i335 = 0; _i335 < this._actions.length; _i335++) {\n          this._actions[_i335].time = 0; // Zero out time attribute for all associated AnimationAction objects.\n        }\n\n        return this.update(timeInSeconds); // Update used to set exact time. Returns \"this\" AnimationMixer object.\n      } // return this mixer's root target object\n\n    }, {\n      key: \"getRoot\",\n      value: function getRoot() {\n        return this._root;\n      } // free all resources specific to a particular clip\n\n    }, {\n      key: \"uncacheClip\",\n      value: function uncacheClip(clip) {\n        var actions = this._actions,\n            clipUuid = clip.uuid,\n            actionsByClip = this._actionsByClip,\n            actionsForClip = actionsByClip[clipUuid];\n\n        if (actionsForClip !== undefined) {\n          // note: just calling _removeInactiveAction would mess up the\n          // iteration state and also require updating the state we can\n          // just throw away\n          var actionsToRemove = actionsForClip.knownActions;\n\n          for (var _i336 = 0, n = actionsToRemove.length; _i336 !== n; ++_i336) {\n            var action = actionsToRemove[_i336];\n\n            this._deactivateAction(action);\n\n            var cacheIndex = action._cacheIndex,\n                lastInactiveAction = actions[actions.length - 1];\n            action._cacheIndex = null;\n            action._byClipCacheIndex = null;\n            lastInactiveAction._cacheIndex = cacheIndex;\n            actions[cacheIndex] = lastInactiveAction;\n            actions.pop();\n\n            this._removeInactiveBindingsForAction(action);\n          }\n\n          delete actionsByClip[clipUuid];\n        }\n      } // free all resources specific to a particular root target object\n\n    }, {\n      key: \"uncacheRoot\",\n      value: function uncacheRoot(root) {\n        var rootUuid = root.uuid,\n            actionsByClip = this._actionsByClip;\n\n        for (var clipUuid in actionsByClip) {\n          var actionByRoot = actionsByClip[clipUuid].actionByRoot,\n              action = actionByRoot[rootUuid];\n\n          if (action !== undefined) {\n            this._deactivateAction(action);\n\n            this._removeInactiveAction(action);\n          }\n        }\n\n        var bindingsByRoot = this._bindingsByRootAndName,\n            bindingByName = bindingsByRoot[rootUuid];\n\n        if (bindingByName !== undefined) {\n          for (var trackName in bindingByName) {\n            var binding = bindingByName[trackName];\n            binding.restoreOriginalState();\n\n            this._removeInactiveBinding(binding);\n          }\n        }\n      } // remove a targeted clip from the cache\n\n    }, {\n      key: \"uncacheAction\",\n      value: function uncacheAction(clip, optionalRoot) {\n        var action = this.existingAction(clip, optionalRoot);\n\n        if (action !== null) {\n          this._deactivateAction(action);\n\n          this._removeInactiveAction(action);\n        }\n      }\n    }]);\n\n    return AnimationMixer;\n  }(EventDispatcher);\n\n  AnimationMixer.prototype._controlInterpolantsResultBuffer = new Float32Array(1);\n\n  var Uniform = /*#__PURE__*/function () {\n    function Uniform(value) {\n      _classCallCheck(this, Uniform);\n\n      if (typeof value === 'string') {\n        console.warn('THREE.Uniform: Type parameter is no longer needed.');\n        value = arguments[1];\n      }\n\n      this.value = value;\n    }\n\n    _createClass(Uniform, [{\n      key: \"clone\",\n      value: function clone() {\n        return new Uniform(this.value.clone === undefined ? this.value : this.value.clone());\n      }\n    }]);\n\n    return Uniform;\n  }();\n\n  var InstancedInterleavedBuffer = /*#__PURE__*/function (_InterleavedBuffer) {\n    _inherits(InstancedInterleavedBuffer, _InterleavedBuffer);\n\n    var _super137 = _createSuper(InstancedInterleavedBuffer);\n\n    function InstancedInterleavedBuffer(array, stride) {\n      var _this108;\n\n      var meshPerAttribute = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n\n      _classCallCheck(this, InstancedInterleavedBuffer);\n\n      _this108 = _super137.call(this, array, stride);\n      _this108.meshPerAttribute = meshPerAttribute;\n      return _this108;\n    }\n\n    _createClass(InstancedInterleavedBuffer, [{\n      key: \"copy\",\n      value: function copy(source) {\n        _get(_getPrototypeOf(InstancedInterleavedBuffer.prototype), \"copy\", this).call(this, source);\n\n        this.meshPerAttribute = source.meshPerAttribute;\n        return this;\n      }\n    }, {\n      key: \"clone\",\n      value: function clone(data) {\n        var ib = _get(_getPrototypeOf(InstancedInterleavedBuffer.prototype), \"clone\", this).call(this, data);\n\n        ib.meshPerAttribute = this.meshPerAttribute;\n        return ib;\n      }\n    }, {\n      key: \"toJSON\",\n      value: function toJSON(data) {\n        var json = _get(_getPrototypeOf(InstancedInterleavedBuffer.prototype), \"toJSON\", this).call(this, data);\n\n        json.isInstancedInterleavedBuffer = true;\n        json.meshPerAttribute = this.meshPerAttribute;\n        return json;\n      }\n    }]);\n\n    return InstancedInterleavedBuffer;\n  }(InterleavedBuffer);\n\n  InstancedInterleavedBuffer.prototype.isInstancedInterleavedBuffer = true;\n\n  var GLBufferAttribute = /*#__PURE__*/function () {\n    function GLBufferAttribute(buffer, type, itemSize, elementSize, count) {\n      _classCallCheck(this, GLBufferAttribute);\n\n      this.buffer = buffer;\n      this.type = type;\n      this.itemSize = itemSize;\n      this.elementSize = elementSize;\n      this.count = count;\n      this.version = 0;\n    }\n\n    _createClass(GLBufferAttribute, [{\n      key: \"needsUpdate\",\n      set: function set(value) {\n        if (value === true) this.version++;\n      }\n    }, {\n      key: \"setBuffer\",\n      value: function setBuffer(buffer) {\n        this.buffer = buffer;\n        return this;\n      }\n    }, {\n      key: \"setType\",\n      value: function setType(type, elementSize) {\n        this.type = type;\n        this.elementSize = elementSize;\n        return this;\n      }\n    }, {\n      key: \"setItemSize\",\n      value: function setItemSize(itemSize) {\n        this.itemSize = itemSize;\n        return this;\n      }\n    }, {\n      key: \"setCount\",\n      value: function setCount(count) {\n        this.count = count;\n        return this;\n      }\n    }]);\n\n    return GLBufferAttribute;\n  }();\n\n  GLBufferAttribute.prototype.isGLBufferAttribute = true;\n\n  var Raycaster = /*#__PURE__*/function () {\n    function Raycaster(origin, direction) {\n      var near = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n      var far = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : Infinity;\n\n      _classCallCheck(this, Raycaster);\n\n      this.ray = new Ray(origin, direction); // direction is assumed to be normalized (for accurate distance calculations)\n\n      this.near = near;\n      this.far = far;\n      this.camera = null;\n      this.layers = new Layers();\n      this.params = {\n        Mesh: {},\n        Line: {\n          threshold: 1\n        },\n        LOD: {},\n        Points: {\n          threshold: 1\n        },\n        Sprite: {}\n      };\n    }\n\n    _createClass(Raycaster, [{\n      key: \"set\",\n      value: function set(origin, direction) {\n        // direction is assumed to be normalized (for accurate distance calculations)\n        this.ray.set(origin, direction);\n      }\n    }, {\n      key: \"setFromCamera\",\n      value: function setFromCamera(coords, camera) {\n        if (camera && camera.isPerspectiveCamera) {\n          this.ray.origin.setFromMatrixPosition(camera.matrixWorld);\n          this.ray.direction.set(coords.x, coords.y, 0.5).unproject(camera).sub(this.ray.origin).normalize();\n          this.camera = camera;\n        } else if (camera && camera.isOrthographicCamera) {\n          this.ray.origin.set(coords.x, coords.y, (camera.near + camera.far) / (camera.near - camera.far)).unproject(camera); // set origin in plane of camera\n\n          this.ray.direction.set(0, 0, -1).transformDirection(camera.matrixWorld);\n          this.camera = camera;\n        } else {\n          console.error('THREE.Raycaster: Unsupported camera type: ' + camera.type);\n        }\n      }\n    }, {\n      key: \"intersectObject\",\n      value: function intersectObject(object) {\n        var recursive = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n        var intersects = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];\n\n        _intersectObject(object, this, intersects, recursive);\n\n        intersects.sort(ascSort);\n        return intersects;\n      }\n    }, {\n      key: \"intersectObjects\",\n      value: function intersectObjects(objects) {\n        var recursive = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n        var intersects = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];\n\n        for (var _i337 = 0, l = objects.length; _i337 < l; _i337++) {\n          _intersectObject(objects[_i337], this, intersects, recursive);\n        }\n\n        intersects.sort(ascSort);\n        return intersects;\n      }\n    }]);\n\n    return Raycaster;\n  }();\n\n  function ascSort(a, b) {\n    return a.distance - b.distance;\n  }\n\n  function _intersectObject(object, raycaster, intersects, recursive) {\n    if (object.layers.test(raycaster.layers)) {\n      object.raycast(raycaster, intersects);\n    }\n\n    if (recursive === true) {\n      var children = object.children;\n\n      for (var _i338 = 0, l = children.length; _i338 < l; _i338++) {\n        _intersectObject(children[_i338], raycaster, intersects, true);\n      }\n    }\n  }\n  /**\n   * Ref: https://en.wikipedia.org/wiki/Spherical_coordinate_system\n   *\n   * The polar angle (phi) is measured from the positive y-axis. The positive y-axis is up.\n   * The azimuthal angle (theta) is measured from the positive z-axis.\n   */\n\n\n  var Spherical = /*#__PURE__*/function () {\n    function Spherical() {\n      var radius = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n      var phi = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n      var theta = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n\n      _classCallCheck(this, Spherical);\n\n      this.radius = radius;\n      this.phi = phi; // polar angle\n\n      this.theta = theta; // azimuthal angle\n\n      return this;\n    }\n\n    _createClass(Spherical, [{\n      key: \"set\",\n      value: function set(radius, phi, theta) {\n        this.radius = radius;\n        this.phi = phi;\n        this.theta = theta;\n        return this;\n      }\n    }, {\n      key: \"copy\",\n      value: function copy(other) {\n        this.radius = other.radius;\n        this.phi = other.phi;\n        this.theta = other.theta;\n        return this;\n      } // restrict phi to be betwee EPS and PI-EPS\n\n    }, {\n      key: \"makeSafe\",\n      value: function makeSafe() {\n        var EPS = 0.000001;\n        this.phi = Math.max(EPS, Math.min(Math.PI - EPS, this.phi));\n        return this;\n      }\n    }, {\n      key: \"setFromVector3\",\n      value: function setFromVector3(v) {\n        return this.setFromCartesianCoords(v.x, v.y, v.z);\n      }\n    }, {\n      key: \"setFromCartesianCoords\",\n      value: function setFromCartesianCoords(x, y, z) {\n        this.radius = Math.sqrt(x * x + y * y + z * z);\n\n        if (this.radius === 0) {\n          this.theta = 0;\n          this.phi = 0;\n        } else {\n          this.theta = Math.atan2(x, z);\n          this.phi = Math.acos(clamp(y / this.radius, -1, 1));\n        }\n\n        return this;\n      }\n    }, {\n      key: \"clone\",\n      value: function clone() {\n        return new this.constructor().copy(this);\n      }\n    }]);\n\n    return Spherical;\n  }();\n  /**\n   * Ref: https://en.wikipedia.org/wiki/Cylindrical_coordinate_system\n   */\n\n\n  var Cylindrical = /*#__PURE__*/function () {\n    function Cylindrical() {\n      var radius = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n      var theta = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n      var y = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n\n      _classCallCheck(this, Cylindrical);\n\n      this.radius = radius; // distance from the origin to a point in the x-z plane\n\n      this.theta = theta; // counterclockwise angle in the x-z plane measured in radians from the positive z-axis\n\n      this.y = y; // height above the x-z plane\n\n      return this;\n    }\n\n    _createClass(Cylindrical, [{\n      key: \"set\",\n      value: function set(radius, theta, y) {\n        this.radius = radius;\n        this.theta = theta;\n        this.y = y;\n        return this;\n      }\n    }, {\n      key: \"copy\",\n      value: function copy(other) {\n        this.radius = other.radius;\n        this.theta = other.theta;\n        this.y = other.y;\n        return this;\n      }\n    }, {\n      key: \"setFromVector3\",\n      value: function setFromVector3(v) {\n        return this.setFromCartesianCoords(v.x, v.y, v.z);\n      }\n    }, {\n      key: \"setFromCartesianCoords\",\n      value: function setFromCartesianCoords(x, y, z) {\n        this.radius = Math.sqrt(x * x + z * z);\n        this.theta = Math.atan2(x, z);\n        this.y = y;\n        return this;\n      }\n    }, {\n      key: \"clone\",\n      value: function clone() {\n        return new this.constructor().copy(this);\n      }\n    }]);\n\n    return Cylindrical;\n  }();\n\n  var _vector$4 = /*@__PURE__*/new Vector2();\n\n  var Box2 = /*#__PURE__*/function () {\n    function Box2() {\n      var min = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : new Vector2(+Infinity, +Infinity);\n      var max = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : new Vector2(-Infinity, -Infinity);\n\n      _classCallCheck(this, Box2);\n\n      this.min = min;\n      this.max = max;\n    }\n\n    _createClass(Box2, [{\n      key: \"set\",\n      value: function set(min, max) {\n        this.min.copy(min);\n        this.max.copy(max);\n        return this;\n      }\n    }, {\n      key: \"setFromPoints\",\n      value: function setFromPoints(points) {\n        this.makeEmpty();\n\n        for (var _i339 = 0, il = points.length; _i339 < il; _i339++) {\n          this.expandByPoint(points[_i339]);\n        }\n\n        return this;\n      }\n    }, {\n      key: \"setFromCenterAndSize\",\n      value: function setFromCenterAndSize(center, size) {\n        var halfSize = _vector$4.copy(size).multiplyScalar(0.5);\n\n        this.min.copy(center).sub(halfSize);\n        this.max.copy(center).add(halfSize);\n        return this;\n      }\n    }, {\n      key: \"clone\",\n      value: function clone() {\n        return new this.constructor().copy(this);\n      }\n    }, {\n      key: \"copy\",\n      value: function copy(box) {\n        this.min.copy(box.min);\n        this.max.copy(box.max);\n        return this;\n      }\n    }, {\n      key: \"makeEmpty\",\n      value: function makeEmpty() {\n        this.min.x = this.min.y = +Infinity;\n        this.max.x = this.max.y = -Infinity;\n        return this;\n      }\n    }, {\n      key: \"isEmpty\",\n      value: function isEmpty() {\n        // this is a more robust check for empty than ( volume <= 0 ) because volume can get positive with two negative axes\n        return this.max.x < this.min.x || this.max.y < this.min.y;\n      }\n    }, {\n      key: \"getCenter\",\n      value: function getCenter(target) {\n        return this.isEmpty() ? target.set(0, 0) : target.addVectors(this.min, this.max).multiplyScalar(0.5);\n      }\n    }, {\n      key: \"getSize\",\n      value: function getSize(target) {\n        return this.isEmpty() ? target.set(0, 0) : target.subVectors(this.max, this.min);\n      }\n    }, {\n      key: \"expandByPoint\",\n      value: function expandByPoint(point) {\n        this.min.min(point);\n        this.max.max(point);\n        return this;\n      }\n    }, {\n      key: \"expandByVector\",\n      value: function expandByVector(vector) {\n        this.min.sub(vector);\n        this.max.add(vector);\n        return this;\n      }\n    }, {\n      key: \"expandByScalar\",\n      value: function expandByScalar(scalar) {\n        this.min.addScalar(-scalar);\n        this.max.addScalar(scalar);\n        return this;\n      }\n    }, {\n      key: \"containsPoint\",\n      value: function containsPoint(point) {\n        return point.x < this.min.x || point.x > this.max.x || point.y < this.min.y || point.y > this.max.y ? false : true;\n      }\n    }, {\n      key: \"containsBox\",\n      value: function containsBox(box) {\n        return this.min.x <= box.min.x && box.max.x <= this.max.x && this.min.y <= box.min.y && box.max.y <= this.max.y;\n      }\n    }, {\n      key: \"getParameter\",\n      value: function getParameter(point, target) {\n        // This can potentially have a divide by zero if the box\n        // has a size dimension of 0.\n        return target.set((point.x - this.min.x) / (this.max.x - this.min.x), (point.y - this.min.y) / (this.max.y - this.min.y));\n      }\n    }, {\n      key: \"intersectsBox\",\n      value: function intersectsBox(box) {\n        // using 4 splitting planes to rule out intersections\n        return box.max.x < this.min.x || box.min.x > this.max.x || box.max.y < this.min.y || box.min.y > this.max.y ? false : true;\n      }\n    }, {\n      key: \"clampPoint\",\n      value: function clampPoint(point, target) {\n        return target.copy(point).clamp(this.min, this.max);\n      }\n    }, {\n      key: \"distanceToPoint\",\n      value: function distanceToPoint(point) {\n        var clampedPoint = _vector$4.copy(point).clamp(this.min, this.max);\n\n        return clampedPoint.sub(point).length();\n      }\n    }, {\n      key: \"intersect\",\n      value: function intersect(box) {\n        this.min.max(box.min);\n        this.max.min(box.max);\n        return this;\n      }\n    }, {\n      key: \"union\",\n      value: function union(box) {\n        this.min.min(box.min);\n        this.max.max(box.max);\n        return this;\n      }\n    }, {\n      key: \"translate\",\n      value: function translate(offset) {\n        this.min.add(offset);\n        this.max.add(offset);\n        return this;\n      }\n    }, {\n      key: \"equals\",\n      value: function equals(box) {\n        return box.min.equals(this.min) && box.max.equals(this.max);\n      }\n    }]);\n\n    return Box2;\n  }();\n\n  Box2.prototype.isBox2 = true;\n\n  var _startP = /*@__PURE__*/new Vector3();\n\n  var _startEnd = /*@__PURE__*/new Vector3();\n\n  var Line3 = /*#__PURE__*/function () {\n    function Line3() {\n      var start = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : new Vector3();\n      var end = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : new Vector3();\n\n      _classCallCheck(this, Line3);\n\n      this.start = start;\n      this.end = end;\n    }\n\n    _createClass(Line3, [{\n      key: \"set\",\n      value: function set(start, end) {\n        this.start.copy(start);\n        this.end.copy(end);\n        return this;\n      }\n    }, {\n      key: \"copy\",\n      value: function copy(line) {\n        this.start.copy(line.start);\n        this.end.copy(line.end);\n        return this;\n      }\n    }, {\n      key: \"getCenter\",\n      value: function getCenter(target) {\n        return target.addVectors(this.start, this.end).multiplyScalar(0.5);\n      }\n    }, {\n      key: \"delta\",\n      value: function delta(target) {\n        return target.subVectors(this.end, this.start);\n      }\n    }, {\n      key: \"distanceSq\",\n      value: function distanceSq() {\n        return this.start.distanceToSquared(this.end);\n      }\n    }, {\n      key: \"distance\",\n      value: function distance() {\n        return this.start.distanceTo(this.end);\n      }\n    }, {\n      key: \"at\",\n      value: function at(t, target) {\n        return this.delta(target).multiplyScalar(t).add(this.start);\n      }\n    }, {\n      key: \"closestPointToPointParameter\",\n      value: function closestPointToPointParameter(point, clampToLine) {\n        _startP.subVectors(point, this.start);\n\n        _startEnd.subVectors(this.end, this.start);\n\n        var startEnd2 = _startEnd.dot(_startEnd);\n\n        var startEnd_startP = _startEnd.dot(_startP);\n\n        var t = startEnd_startP / startEnd2;\n\n        if (clampToLine) {\n          t = clamp(t, 0, 1);\n        }\n\n        return t;\n      }\n    }, {\n      key: \"closestPointToPoint\",\n      value: function closestPointToPoint(point, clampToLine, target) {\n        var t = this.closestPointToPointParameter(point, clampToLine);\n        return this.delta(target).multiplyScalar(t).add(this.start);\n      }\n    }, {\n      key: \"applyMatrix4\",\n      value: function applyMatrix4(matrix) {\n        this.start.applyMatrix4(matrix);\n        this.end.applyMatrix4(matrix);\n        return this;\n      }\n    }, {\n      key: \"equals\",\n      value: function equals(line) {\n        return line.start.equals(this.start) && line.end.equals(this.end);\n      }\n    }, {\n      key: \"clone\",\n      value: function clone() {\n        return new this.constructor().copy(this);\n      }\n    }]);\n\n    return Line3;\n  }();\n\n  var _vector$3 = /*@__PURE__*/new Vector3();\n\n  var SpotLightHelper = /*#__PURE__*/function (_Object3D14) {\n    _inherits(SpotLightHelper, _Object3D14);\n\n    var _super138 = _createSuper(SpotLightHelper);\n\n    function SpotLightHelper(light, color) {\n      var _this109;\n\n      _classCallCheck(this, SpotLightHelper);\n\n      _this109 = _super138.call(this);\n      _this109.light = light;\n\n      _this109.light.updateMatrixWorld();\n\n      _this109.matrix = light.matrixWorld;\n      _this109.matrixAutoUpdate = false;\n      _this109.color = color;\n      var geometry = new BufferGeometry();\n      var positions = [0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, -1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, -1, 1];\n\n      for (var _i340 = 0, j = 1, l = 32; _i340 < l; _i340++, j++) {\n        var p1 = _i340 / l * Math.PI * 2;\n        var p2 = j / l * Math.PI * 2;\n        positions.push(Math.cos(p1), Math.sin(p1), 1, Math.cos(p2), Math.sin(p2), 1);\n      }\n\n      geometry.setAttribute('position', new Float32BufferAttribute(positions, 3));\n      var material = new LineBasicMaterial({\n        fog: false,\n        toneMapped: false\n      });\n      _this109.cone = new LineSegments(geometry, material);\n\n      _this109.add(_this109.cone);\n\n      _this109.update();\n\n      return _this109;\n    }\n\n    _createClass(SpotLightHelper, [{\n      key: \"dispose\",\n      value: function dispose() {\n        this.cone.geometry.dispose();\n        this.cone.material.dispose();\n      }\n    }, {\n      key: \"update\",\n      value: function update() {\n        this.light.updateMatrixWorld();\n        var coneLength = this.light.distance ? this.light.distance : 1000;\n        var coneWidth = coneLength * Math.tan(this.light.angle);\n        this.cone.scale.set(coneWidth, coneWidth, coneLength);\n\n        _vector$3.setFromMatrixPosition(this.light.target.matrixWorld);\n\n        this.cone.lookAt(_vector$3);\n\n        if (this.color !== undefined) {\n          this.cone.material.color.set(this.color);\n        } else {\n          this.cone.material.color.copy(this.light.color);\n        }\n      }\n    }]);\n\n    return SpotLightHelper;\n  }(Object3D);\n\n  var _vector$2 = /*@__PURE__*/new Vector3();\n\n  var _boneMatrix = /*@__PURE__*/new Matrix4();\n\n  var _matrixWorldInv = /*@__PURE__*/new Matrix4();\n\n  var SkeletonHelper = /*#__PURE__*/function (_LineSegments) {\n    _inherits(SkeletonHelper, _LineSegments);\n\n    var _super139 = _createSuper(SkeletonHelper);\n\n    function SkeletonHelper(object) {\n      var _this110;\n\n      _classCallCheck(this, SkeletonHelper);\n\n      var bones = getBoneList(object);\n      var geometry = new BufferGeometry();\n      var vertices = [];\n      var colors = [];\n      var color1 = new Color(0, 0, 1);\n      var color2 = new Color(0, 1, 0);\n\n      for (var _i341 = 0; _i341 < bones.length; _i341++) {\n        var bone = bones[_i341];\n\n        if (bone.parent && bone.parent.isBone) {\n          vertices.push(0, 0, 0);\n          vertices.push(0, 0, 0);\n          colors.push(color1.r, color1.g, color1.b);\n          colors.push(color2.r, color2.g, color2.b);\n        }\n      }\n\n      geometry.setAttribute('position', new Float32BufferAttribute(vertices, 3));\n      geometry.setAttribute('color', new Float32BufferAttribute(colors, 3));\n      var material = new LineBasicMaterial({\n        vertexColors: true,\n        depthTest: false,\n        depthWrite: false,\n        toneMapped: false,\n        transparent: true\n      });\n      _this110 = _super139.call(this, geometry, material);\n      _this110.type = 'SkeletonHelper';\n      _this110.isSkeletonHelper = true;\n      _this110.root = object;\n      _this110.bones = bones;\n      _this110.matrix = object.matrixWorld;\n      _this110.matrixAutoUpdate = false;\n      return _this110;\n    }\n\n    _createClass(SkeletonHelper, [{\n      key: \"updateMatrixWorld\",\n      value: function updateMatrixWorld(force) {\n        var bones = this.bones;\n        var geometry = this.geometry;\n        var position = geometry.getAttribute('position');\n\n        _matrixWorldInv.copy(this.root.matrixWorld).invert();\n\n        for (var _i342 = 0, j = 0; _i342 < bones.length; _i342++) {\n          var bone = bones[_i342];\n\n          if (bone.parent && bone.parent.isBone) {\n            _boneMatrix.multiplyMatrices(_matrixWorldInv, bone.matrixWorld);\n\n            _vector$2.setFromMatrixPosition(_boneMatrix);\n\n            position.setXYZ(j, _vector$2.x, _vector$2.y, _vector$2.z);\n\n            _boneMatrix.multiplyMatrices(_matrixWorldInv, bone.parent.matrixWorld);\n\n            _vector$2.setFromMatrixPosition(_boneMatrix);\n\n            position.setXYZ(j + 1, _vector$2.x, _vector$2.y, _vector$2.z);\n            j += 2;\n          }\n        }\n\n        geometry.getAttribute('position').needsUpdate = true;\n\n        _get(_getPrototypeOf(SkeletonHelper.prototype), \"updateMatrixWorld\", this).call(this, force);\n      }\n    }]);\n\n    return SkeletonHelper;\n  }(LineSegments);\n\n  function getBoneList(object) {\n    var boneList = [];\n\n    if (object && object.isBone) {\n      boneList.push(object);\n    }\n\n    for (var _i343 = 0; _i343 < object.children.length; _i343++) {\n      boneList.push.apply(boneList, getBoneList(object.children[_i343]));\n    }\n\n    return boneList;\n  }\n\n  var PointLightHelper = /*#__PURE__*/function (_Mesh3) {\n    _inherits(PointLightHelper, _Mesh3);\n\n    var _super140 = _createSuper(PointLightHelper);\n\n    function PointLightHelper(light, sphereSize, color) {\n      var _this111;\n\n      _classCallCheck(this, PointLightHelper);\n\n      var geometry = new SphereGeometry(sphereSize, 4, 2);\n      var material = new MeshBasicMaterial({\n        wireframe: true,\n        fog: false,\n        toneMapped: false\n      });\n      _this111 = _super140.call(this, geometry, material);\n      _this111.light = light;\n\n      _this111.light.updateMatrixWorld();\n\n      _this111.color = color;\n      _this111.type = 'PointLightHelper';\n      _this111.matrix = _this111.light.matrixWorld;\n      _this111.matrixAutoUpdate = false;\n\n      _this111.update();\n      /*\n      // TODO: delete this comment?\n      const distanceGeometry = new THREE.IcosahedronBufferGeometry( 1, 2 );\n      const distanceMaterial = new THREE.MeshBasicMaterial( { color: hexColor, fog: false, wireframe: true, opacity: 0.1, transparent: true } );\n      this.lightSphere = new THREE.Mesh( bulbGeometry, bulbMaterial );\n      this.lightDistance = new THREE.Mesh( distanceGeometry, distanceMaterial );\n      const d = light.distance;\n      if ( d === 0.0 ) {\n      \tthis.lightDistance.visible = false;\n      } else {\n      \tthis.lightDistance.scale.set( d, d, d );\n      }\n      this.add( this.lightDistance );\n      */\n\n\n      return _this111;\n    }\n\n    _createClass(PointLightHelper, [{\n      key: \"dispose\",\n      value: function dispose() {\n        this.geometry.dispose();\n        this.material.dispose();\n      }\n    }, {\n      key: \"update\",\n      value: function update() {\n        if (this.color !== undefined) {\n          this.material.color.set(this.color);\n        } else {\n          this.material.color.copy(this.light.color);\n        }\n        /*\n        const d = this.light.distance;\n        \tif ( d === 0.0 ) {\n        \t\tthis.lightDistance.visible = false;\n        \t} else {\n        \t\tthis.lightDistance.visible = true;\n        \tthis.lightDistance.scale.set( d, d, d );\n        \t}\n        */\n\n      }\n    }]);\n\n    return PointLightHelper;\n  }(Mesh);\n\n  var _vector$1 = /*@__PURE__*/new Vector3();\n\n  var _color1 = /*@__PURE__*/new Color();\n\n  var _color2 = /*@__PURE__*/new Color();\n\n  var HemisphereLightHelper = /*#__PURE__*/function (_Object3D15) {\n    _inherits(HemisphereLightHelper, _Object3D15);\n\n    var _super141 = _createSuper(HemisphereLightHelper);\n\n    function HemisphereLightHelper(light, size, color) {\n      var _this112;\n\n      _classCallCheck(this, HemisphereLightHelper);\n\n      _this112 = _super141.call(this);\n      _this112.light = light;\n\n      _this112.light.updateMatrixWorld();\n\n      _this112.matrix = light.matrixWorld;\n      _this112.matrixAutoUpdate = false;\n      _this112.color = color;\n      var geometry = new OctahedronGeometry(size);\n      geometry.rotateY(Math.PI * 0.5);\n      _this112.material = new MeshBasicMaterial({\n        wireframe: true,\n        fog: false,\n        toneMapped: false\n      });\n      if (_this112.color === undefined) _this112.material.vertexColors = true;\n      var position = geometry.getAttribute('position');\n      var colors = new Float32Array(position.count * 3);\n      geometry.setAttribute('color', new BufferAttribute(colors, 3));\n\n      _this112.add(new Mesh(geometry, _this112.material));\n\n      _this112.update();\n\n      return _this112;\n    }\n\n    _createClass(HemisphereLightHelper, [{\n      key: \"dispose\",\n      value: function dispose() {\n        this.children[0].geometry.dispose();\n        this.children[0].material.dispose();\n      }\n    }, {\n      key: \"update\",\n      value: function update() {\n        var mesh = this.children[0];\n\n        if (this.color !== undefined) {\n          this.material.color.set(this.color);\n        } else {\n          var colors = mesh.geometry.getAttribute('color');\n\n          _color1.copy(this.light.color);\n\n          _color2.copy(this.light.groundColor);\n\n          for (var _i344 = 0, l = colors.count; _i344 < l; _i344++) {\n            var color = _i344 < l / 2 ? _color1 : _color2;\n            colors.setXYZ(_i344, color.r, color.g, color.b);\n          }\n\n          colors.needsUpdate = true;\n        }\n\n        mesh.lookAt(_vector$1.setFromMatrixPosition(this.light.matrixWorld).negate());\n      }\n    }]);\n\n    return HemisphereLightHelper;\n  }(Object3D);\n\n  var GridHelper = /*#__PURE__*/function (_LineSegments2) {\n    _inherits(GridHelper, _LineSegments2);\n\n    var _super142 = _createSuper(GridHelper);\n\n    function GridHelper() {\n      var _this113;\n\n      var size = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 10;\n      var divisions = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 10;\n      var color1 = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0x444444;\n      var color2 = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0x888888;\n\n      _classCallCheck(this, GridHelper);\n\n      color1 = new Color(color1);\n      color2 = new Color(color2);\n      var center = divisions / 2;\n      var step = size / divisions;\n      var halfSize = size / 2;\n      var vertices = [],\n          colors = [];\n\n      for (var _i345 = 0, j = 0, k = -halfSize; _i345 <= divisions; _i345++, k += step) {\n        vertices.push(-halfSize, 0, k, halfSize, 0, k);\n        vertices.push(k, 0, -halfSize, k, 0, halfSize);\n        var color = _i345 === center ? color1 : color2;\n        color.toArray(colors, j);\n        j += 3;\n        color.toArray(colors, j);\n        j += 3;\n        color.toArray(colors, j);\n        j += 3;\n        color.toArray(colors, j);\n        j += 3;\n      }\n\n      var geometry = new BufferGeometry();\n      geometry.setAttribute('position', new Float32BufferAttribute(vertices, 3));\n      geometry.setAttribute('color', new Float32BufferAttribute(colors, 3));\n      var material = new LineBasicMaterial({\n        vertexColors: true,\n        toneMapped: false\n      });\n      _this113 = _super142.call(this, geometry, material);\n      _this113.type = 'GridHelper';\n      return _this113;\n    }\n\n    return GridHelper;\n  }(LineSegments);\n\n  var PolarGridHelper = /*#__PURE__*/function (_LineSegments3) {\n    _inherits(PolarGridHelper, _LineSegments3);\n\n    var _super143 = _createSuper(PolarGridHelper);\n\n    function PolarGridHelper() {\n      var _this114;\n\n      var radius = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 10;\n      var radials = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 16;\n      var circles = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 8;\n      var divisions = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 64;\n      var color1 = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 0x444444;\n      var color2 = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : 0x888888;\n\n      _classCallCheck(this, PolarGridHelper);\n\n      color1 = new Color(color1);\n      color2 = new Color(color2);\n      var vertices = [];\n      var colors = []; // create the radials\n\n      for (var _i346 = 0; _i346 <= radials; _i346++) {\n        var v = _i346 / radials * (Math.PI * 2);\n        var x = Math.sin(v) * radius;\n        var z = Math.cos(v) * radius;\n        vertices.push(0, 0, 0);\n        vertices.push(x, 0, z);\n        var color = _i346 & 1 ? color1 : color2;\n        colors.push(color.r, color.g, color.b);\n        colors.push(color.r, color.g, color.b);\n      } // create the circles\n\n\n      for (var _i347 = 0; _i347 <= circles; _i347++) {\n        var _color = _i347 & 1 ? color1 : color2;\n\n        var r = radius - radius / circles * _i347;\n\n        for (var j = 0; j < divisions; j++) {\n          // first vertex\n          var _v = j / divisions * (Math.PI * 2);\n\n          var _x12 = Math.sin(_v) * r;\n\n          var _z3 = Math.cos(_v) * r;\n\n          vertices.push(_x12, 0, _z3);\n          colors.push(_color.r, _color.g, _color.b); // second vertex\n\n          _v = (j + 1) / divisions * (Math.PI * 2);\n          _x12 = Math.sin(_v) * r;\n          _z3 = Math.cos(_v) * r;\n          vertices.push(_x12, 0, _z3);\n          colors.push(_color.r, _color.g, _color.b);\n        }\n      }\n\n      var geometry = new BufferGeometry();\n      geometry.setAttribute('position', new Float32BufferAttribute(vertices, 3));\n      geometry.setAttribute('color', new Float32BufferAttribute(colors, 3));\n      var material = new LineBasicMaterial({\n        vertexColors: true,\n        toneMapped: false\n      });\n      _this114 = _super143.call(this, geometry, material);\n      _this114.type = 'PolarGridHelper';\n      return _this114;\n    }\n\n    return PolarGridHelper;\n  }(LineSegments);\n\n  var _v1 = /*@__PURE__*/new Vector3();\n\n  var _v2 = /*@__PURE__*/new Vector3();\n\n  var _v3 = /*@__PURE__*/new Vector3();\n\n  var DirectionalLightHelper = /*#__PURE__*/function (_Object3D16) {\n    _inherits(DirectionalLightHelper, _Object3D16);\n\n    var _super144 = _createSuper(DirectionalLightHelper);\n\n    function DirectionalLightHelper(light, size, color) {\n      var _this115;\n\n      _classCallCheck(this, DirectionalLightHelper);\n\n      _this115 = _super144.call(this);\n      _this115.light = light;\n\n      _this115.light.updateMatrixWorld();\n\n      _this115.matrix = light.matrixWorld;\n      _this115.matrixAutoUpdate = false;\n      _this115.color = color;\n      if (size === undefined) size = 1;\n      var geometry = new BufferGeometry();\n      geometry.setAttribute('position', new Float32BufferAttribute([-size, size, 0, size, size, 0, size, -size, 0, -size, -size, 0, -size, size, 0], 3));\n      var material = new LineBasicMaterial({\n        fog: false,\n        toneMapped: false\n      });\n      _this115.lightPlane = new Line(geometry, material);\n\n      _this115.add(_this115.lightPlane);\n\n      geometry = new BufferGeometry();\n      geometry.setAttribute('position', new Float32BufferAttribute([0, 0, 0, 0, 0, 1], 3));\n      _this115.targetLine = new Line(geometry, material);\n\n      _this115.add(_this115.targetLine);\n\n      _this115.update();\n\n      return _this115;\n    }\n\n    _createClass(DirectionalLightHelper, [{\n      key: \"dispose\",\n      value: function dispose() {\n        this.lightPlane.geometry.dispose();\n        this.lightPlane.material.dispose();\n        this.targetLine.geometry.dispose();\n        this.targetLine.material.dispose();\n      }\n    }, {\n      key: \"update\",\n      value: function update() {\n        _v1.setFromMatrixPosition(this.light.matrixWorld);\n\n        _v2.setFromMatrixPosition(this.light.target.matrixWorld);\n\n        _v3.subVectors(_v2, _v1);\n\n        this.lightPlane.lookAt(_v2);\n\n        if (this.color !== undefined) {\n          this.lightPlane.material.color.set(this.color);\n          this.targetLine.material.color.set(this.color);\n        } else {\n          this.lightPlane.material.color.copy(this.light.color);\n          this.targetLine.material.color.copy(this.light.color);\n        }\n\n        this.targetLine.lookAt(_v2);\n        this.targetLine.scale.z = _v3.length();\n      }\n    }]);\n\n    return DirectionalLightHelper;\n  }(Object3D);\n\n  var _vector = /*@__PURE__*/new Vector3();\n\n  var _camera = /*@__PURE__*/new Camera();\n  /**\n   *\t- shows frustum, line of sight and up of the camera\n   *\t- suitable for fast updates\n   * \t- based on frustum visualization in lightgl.js shadowmap example\n   *\t\thttp://evanw.github.com/lightgl.js/tests/shadowmap.html\n   */\n\n\n  var CameraHelper = /*#__PURE__*/function (_LineSegments4) {\n    _inherits(CameraHelper, _LineSegments4);\n\n    var _super145 = _createSuper(CameraHelper);\n\n    function CameraHelper(camera) {\n      var _this116;\n\n      _classCallCheck(this, CameraHelper);\n\n      var geometry = new BufferGeometry();\n      var material = new LineBasicMaterial({\n        color: 0xffffff,\n        vertexColors: true,\n        toneMapped: false\n      });\n      var vertices = [];\n      var colors = [];\n      var pointMap = {}; // colors\n\n      var colorFrustum = new Color(0xffaa00);\n      var colorCone = new Color(0xff0000);\n      var colorUp = new Color(0x00aaff);\n      var colorTarget = new Color(0xffffff);\n      var colorCross = new Color(0x333333); // near\n\n      addLine('n1', 'n2', colorFrustum);\n      addLine('n2', 'n4', colorFrustum);\n      addLine('n4', 'n3', colorFrustum);\n      addLine('n3', 'n1', colorFrustum); // far\n\n      addLine('f1', 'f2', colorFrustum);\n      addLine('f2', 'f4', colorFrustum);\n      addLine('f4', 'f3', colorFrustum);\n      addLine('f3', 'f1', colorFrustum); // sides\n\n      addLine('n1', 'f1', colorFrustum);\n      addLine('n2', 'f2', colorFrustum);\n      addLine('n3', 'f3', colorFrustum);\n      addLine('n4', 'f4', colorFrustum); // cone\n\n      addLine('p', 'n1', colorCone);\n      addLine('p', 'n2', colorCone);\n      addLine('p', 'n3', colorCone);\n      addLine('p', 'n4', colorCone); // up\n\n      addLine('u1', 'u2', colorUp);\n      addLine('u2', 'u3', colorUp);\n      addLine('u3', 'u1', colorUp); // target\n\n      addLine('c', 't', colorTarget);\n      addLine('p', 'c', colorCross); // cross\n\n      addLine('cn1', 'cn2', colorCross);\n      addLine('cn3', 'cn4', colorCross);\n      addLine('cf1', 'cf2', colorCross);\n      addLine('cf3', 'cf4', colorCross);\n\n      function addLine(a, b, color) {\n        addPoint(a, color);\n        addPoint(b, color);\n      }\n\n      function addPoint(id, color) {\n        vertices.push(0, 0, 0);\n        colors.push(color.r, color.g, color.b);\n\n        if (pointMap[id] === undefined) {\n          pointMap[id] = [];\n        }\n\n        pointMap[id].push(vertices.length / 3 - 1);\n      }\n\n      geometry.setAttribute('position', new Float32BufferAttribute(vertices, 3));\n      geometry.setAttribute('color', new Float32BufferAttribute(colors, 3));\n      _this116 = _super145.call(this, geometry, material);\n      _this116.type = 'CameraHelper';\n      _this116.camera = camera;\n      if (_this116.camera.updateProjectionMatrix) _this116.camera.updateProjectionMatrix();\n      _this116.matrix = camera.matrixWorld;\n      _this116.matrixAutoUpdate = false;\n      _this116.pointMap = pointMap;\n\n      _this116.update();\n\n      return _this116;\n    }\n\n    _createClass(CameraHelper, [{\n      key: \"update\",\n      value: function update() {\n        var geometry = this.geometry;\n        var pointMap = this.pointMap;\n        var w = 1,\n            h = 1; // we need just camera projection matrix inverse\n        // world matrix must be identity\n\n        _camera.projectionMatrixInverse.copy(this.camera.projectionMatrixInverse); // center / target\n\n\n        setPoint('c', pointMap, geometry, _camera, 0, 0, -1);\n        setPoint('t', pointMap, geometry, _camera, 0, 0, 1); // near\n\n        setPoint('n1', pointMap, geometry, _camera, -w, -h, -1);\n        setPoint('n2', pointMap, geometry, _camera, w, -h, -1);\n        setPoint('n3', pointMap, geometry, _camera, -w, h, -1);\n        setPoint('n4', pointMap, geometry, _camera, w, h, -1); // far\n\n        setPoint('f1', pointMap, geometry, _camera, -w, -h, 1);\n        setPoint('f2', pointMap, geometry, _camera, w, -h, 1);\n        setPoint('f3', pointMap, geometry, _camera, -w, h, 1);\n        setPoint('f4', pointMap, geometry, _camera, w, h, 1); // up\n\n        setPoint('u1', pointMap, geometry, _camera, w * 0.7, h * 1.1, -1);\n        setPoint('u2', pointMap, geometry, _camera, -w * 0.7, h * 1.1, -1);\n        setPoint('u3', pointMap, geometry, _camera, 0, h * 2, -1); // cross\n\n        setPoint('cf1', pointMap, geometry, _camera, -w, 0, 1);\n        setPoint('cf2', pointMap, geometry, _camera, w, 0, 1);\n        setPoint('cf3', pointMap, geometry, _camera, 0, -h, 1);\n        setPoint('cf4', pointMap, geometry, _camera, 0, h, 1);\n        setPoint('cn1', pointMap, geometry, _camera, -w, 0, -1);\n        setPoint('cn2', pointMap, geometry, _camera, w, 0, -1);\n        setPoint('cn3', pointMap, geometry, _camera, 0, -h, -1);\n        setPoint('cn4', pointMap, geometry, _camera, 0, h, -1);\n        geometry.getAttribute('position').needsUpdate = true;\n      }\n    }, {\n      key: \"dispose\",\n      value: function dispose() {\n        this.geometry.dispose();\n        this.material.dispose();\n      }\n    }]);\n\n    return CameraHelper;\n  }(LineSegments);\n\n  function setPoint(point, pointMap, geometry, camera, x, y, z) {\n    _vector.set(x, y, z).unproject(camera);\n\n    var points = pointMap[point];\n\n    if (points !== undefined) {\n      var position = geometry.getAttribute('position');\n\n      for (var _i348 = 0, l = points.length; _i348 < l; _i348++) {\n        position.setXYZ(points[_i348], _vector.x, _vector.y, _vector.z);\n      }\n    }\n  }\n\n  var _box = /*@__PURE__*/new Box3();\n\n  var BoxHelper = /*#__PURE__*/function (_LineSegments5) {\n    _inherits(BoxHelper, _LineSegments5);\n\n    var _super146 = _createSuper(BoxHelper);\n\n    function BoxHelper(object) {\n      var _this117;\n\n      var color = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0xffff00;\n\n      _classCallCheck(this, BoxHelper);\n\n      var indices = new Uint16Array([0, 1, 1, 2, 2, 3, 3, 0, 4, 5, 5, 6, 6, 7, 7, 4, 0, 4, 1, 5, 2, 6, 3, 7]);\n      var positions = new Float32Array(8 * 3);\n      var geometry = new BufferGeometry();\n      geometry.setIndex(new BufferAttribute(indices, 1));\n      geometry.setAttribute('position', new BufferAttribute(positions, 3));\n      _this117 = _super146.call(this, geometry, new LineBasicMaterial({\n        color: color,\n        toneMapped: false\n      }));\n      _this117.object = object;\n      _this117.type = 'BoxHelper';\n      _this117.matrixAutoUpdate = false;\n\n      _this117.update();\n\n      return _this117;\n    }\n\n    _createClass(BoxHelper, [{\n      key: \"update\",\n      value: function update(object) {\n        if (object !== undefined) {\n          console.warn('THREE.BoxHelper: .update() has no longer arguments.');\n        }\n\n        if (this.object !== undefined) {\n          _box.setFromObject(this.object);\n        }\n\n        if (_box.isEmpty()) return;\n        var min = _box.min;\n        var max = _box.max;\n        /*\n        \t5____4\n        1/___0/|\n        | 6__|_7\n        2/___3/\n        \t0: max.x, max.y, max.z\n        1: min.x, max.y, max.z\n        2: min.x, min.y, max.z\n        3: max.x, min.y, max.z\n        4: max.x, max.y, min.z\n        5: min.x, max.y, min.z\n        6: min.x, min.y, min.z\n        7: max.x, min.y, min.z\n        */\n\n        var position = this.geometry.attributes.position;\n        var array = position.array;\n        array[0] = max.x;\n        array[1] = max.y;\n        array[2] = max.z;\n        array[3] = min.x;\n        array[4] = max.y;\n        array[5] = max.z;\n        array[6] = min.x;\n        array[7] = min.y;\n        array[8] = max.z;\n        array[9] = max.x;\n        array[10] = min.y;\n        array[11] = max.z;\n        array[12] = max.x;\n        array[13] = max.y;\n        array[14] = min.z;\n        array[15] = min.x;\n        array[16] = max.y;\n        array[17] = min.z;\n        array[18] = min.x;\n        array[19] = min.y;\n        array[20] = min.z;\n        array[21] = max.x;\n        array[22] = min.y;\n        array[23] = min.z;\n        position.needsUpdate = true;\n        this.geometry.computeBoundingSphere();\n      }\n    }, {\n      key: \"setFromObject\",\n      value: function setFromObject(object) {\n        this.object = object;\n        this.update();\n        return this;\n      }\n    }, {\n      key: \"copy\",\n      value: function copy(source) {\n        LineSegments.prototype.copy.call(this, source);\n        this.object = source.object;\n        return this;\n      }\n    }]);\n\n    return BoxHelper;\n  }(LineSegments);\n\n  var Box3Helper = /*#__PURE__*/function (_LineSegments6) {\n    _inherits(Box3Helper, _LineSegments6);\n\n    var _super147 = _createSuper(Box3Helper);\n\n    function Box3Helper(box) {\n      var _this118;\n\n      var color = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0xffff00;\n\n      _classCallCheck(this, Box3Helper);\n\n      var indices = new Uint16Array([0, 1, 1, 2, 2, 3, 3, 0, 4, 5, 5, 6, 6, 7, 7, 4, 0, 4, 1, 5, 2, 6, 3, 7]);\n      var positions = [1, 1, 1, -1, 1, 1, -1, -1, 1, 1, -1, 1, 1, 1, -1, -1, 1, -1, -1, -1, -1, 1, -1, -1];\n      var geometry = new BufferGeometry();\n      geometry.setIndex(new BufferAttribute(indices, 1));\n      geometry.setAttribute('position', new Float32BufferAttribute(positions, 3));\n      _this118 = _super147.call(this, geometry, new LineBasicMaterial({\n        color: color,\n        toneMapped: false\n      }));\n      _this118.box = box;\n      _this118.type = 'Box3Helper';\n\n      _this118.geometry.computeBoundingSphere();\n\n      return _this118;\n    }\n\n    _createClass(Box3Helper, [{\n      key: \"updateMatrixWorld\",\n      value: function updateMatrixWorld(force) {\n        var box = this.box;\n        if (box.isEmpty()) return;\n        box.getCenter(this.position);\n        box.getSize(this.scale);\n        this.scale.multiplyScalar(0.5);\n\n        _get(_getPrototypeOf(Box3Helper.prototype), \"updateMatrixWorld\", this).call(this, force);\n      }\n    }]);\n\n    return Box3Helper;\n  }(LineSegments);\n\n  var PlaneHelper = /*#__PURE__*/function (_Line3) {\n    _inherits(PlaneHelper, _Line3);\n\n    var _super148 = _createSuper(PlaneHelper);\n\n    function PlaneHelper(plane) {\n      var _this119;\n\n      var size = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n      var hex = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0xffff00;\n\n      _classCallCheck(this, PlaneHelper);\n\n      var color = hex;\n      var positions = [1, -1, 1, -1, 1, 1, -1, -1, 1, 1, 1, 1, -1, 1, 1, -1, -1, 1, 1, -1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0];\n      var geometry = new BufferGeometry();\n      geometry.setAttribute('position', new Float32BufferAttribute(positions, 3));\n      geometry.computeBoundingSphere();\n      _this119 = _super148.call(this, geometry, new LineBasicMaterial({\n        color: color,\n        toneMapped: false\n      }));\n      _this119.type = 'PlaneHelper';\n      _this119.plane = plane;\n      _this119.size = size;\n      var positions2 = [1, 1, 1, -1, 1, 1, -1, -1, 1, 1, 1, 1, -1, -1, 1, 1, -1, 1];\n      var geometry2 = new BufferGeometry();\n      geometry2.setAttribute('position', new Float32BufferAttribute(positions2, 3));\n      geometry2.computeBoundingSphere();\n\n      _this119.add(new Mesh(geometry2, new MeshBasicMaterial({\n        color: color,\n        opacity: 0.2,\n        transparent: true,\n        depthWrite: false,\n        toneMapped: false\n      })));\n\n      return _this119;\n    }\n\n    _createClass(PlaneHelper, [{\n      key: \"updateMatrixWorld\",\n      value: function updateMatrixWorld(force) {\n        var scale = -this.plane.constant;\n        if (Math.abs(scale) < 1e-8) scale = 1e-8; // sign does not matter\n\n        this.scale.set(0.5 * this.size, 0.5 * this.size, scale);\n        this.children[0].material.side = scale < 0 ? BackSide : FrontSide; // renderer flips side when determinant < 0; flipping not wanted here\n\n        this.lookAt(this.plane.normal);\n\n        _get(_getPrototypeOf(PlaneHelper.prototype), \"updateMatrixWorld\", this).call(this, force);\n      }\n    }]);\n\n    return PlaneHelper;\n  }(Line);\n\n  var _axis = /*@__PURE__*/new Vector3();\n\n  var _lineGeometry, _coneGeometry;\n\n  var ArrowHelper = /*#__PURE__*/function (_Object3D17) {\n    _inherits(ArrowHelper, _Object3D17);\n\n    var _super149 = _createSuper(ArrowHelper);\n\n    // dir is assumed to be normalized\n    function ArrowHelper() {\n      var _this120;\n\n      var dir = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : new Vector3(0, 0, 1);\n      var origin = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : new Vector3(0, 0, 0);\n      var length = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n      var color = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0xffff00;\n      var headLength = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : length * 0.2;\n      var headWidth = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : headLength * 0.2;\n\n      _classCallCheck(this, ArrowHelper);\n\n      _this120 = _super149.call(this);\n      _this120.type = 'ArrowHelper';\n\n      if (_lineGeometry === undefined) {\n        _lineGeometry = new BufferGeometry();\n\n        _lineGeometry.setAttribute('position', new Float32BufferAttribute([0, 0, 0, 0, 1, 0], 3));\n\n        _coneGeometry = new CylinderGeometry(0, 0.5, 1, 5, 1);\n\n        _coneGeometry.translate(0, -0.5, 0);\n      }\n\n      _this120.position.copy(origin);\n\n      _this120.line = new Line(_lineGeometry, new LineBasicMaterial({\n        color: color,\n        toneMapped: false\n      }));\n      _this120.line.matrixAutoUpdate = false;\n\n      _this120.add(_this120.line);\n\n      _this120.cone = new Mesh(_coneGeometry, new MeshBasicMaterial({\n        color: color,\n        toneMapped: false\n      }));\n      _this120.cone.matrixAutoUpdate = false;\n\n      _this120.add(_this120.cone);\n\n      _this120.setDirection(dir);\n\n      _this120.setLength(length, headLength, headWidth);\n\n      return _this120;\n    }\n\n    _createClass(ArrowHelper, [{\n      key: \"setDirection\",\n      value: function setDirection(dir) {\n        // dir is assumed to be normalized\n        if (dir.y > 0.99999) {\n          this.quaternion.set(0, 0, 0, 1);\n        } else if (dir.y < -0.99999) {\n          this.quaternion.set(1, 0, 0, 0);\n        } else {\n          _axis.set(dir.z, 0, -dir.x).normalize();\n\n          var radians = Math.acos(dir.y);\n          this.quaternion.setFromAxisAngle(_axis, radians);\n        }\n      }\n    }, {\n      key: \"setLength\",\n      value: function setLength(length) {\n        var headLength = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : length * 0.2;\n        var headWidth = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : headLength * 0.2;\n        this.line.scale.set(1, Math.max(0.0001, length - headLength), 1); // see #17458\n\n        this.line.updateMatrix();\n        this.cone.scale.set(headWidth, headLength, headWidth);\n        this.cone.position.y = length;\n        this.cone.updateMatrix();\n      }\n    }, {\n      key: \"setColor\",\n      value: function setColor(color) {\n        this.line.material.color.set(color);\n        this.cone.material.color.set(color);\n      }\n    }, {\n      key: \"copy\",\n      value: function copy(source) {\n        _get(_getPrototypeOf(ArrowHelper.prototype), \"copy\", this).call(this, source, false);\n\n        this.line.copy(source.line);\n        this.cone.copy(source.cone);\n        return this;\n      }\n    }]);\n\n    return ArrowHelper;\n  }(Object3D);\n\n  var AxesHelper = /*#__PURE__*/function (_LineSegments7) {\n    _inherits(AxesHelper, _LineSegments7);\n\n    var _super150 = _createSuper(AxesHelper);\n\n    function AxesHelper() {\n      var _this121;\n\n      var size = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n\n      _classCallCheck(this, AxesHelper);\n\n      var vertices = [0, 0, 0, size, 0, 0, 0, 0, 0, 0, size, 0, 0, 0, 0, 0, 0, size];\n      var colors = [1, 0, 0, 1, 0.6, 0, 0, 1, 0, 0.6, 1, 0, 0, 0, 1, 0, 0.6, 1];\n      var geometry = new BufferGeometry();\n      geometry.setAttribute('position', new Float32BufferAttribute(vertices, 3));\n      geometry.setAttribute('color', new Float32BufferAttribute(colors, 3));\n      var material = new LineBasicMaterial({\n        vertexColors: true,\n        toneMapped: false\n      });\n      _this121 = _super150.call(this, geometry, material);\n      _this121.type = 'AxesHelper';\n      return _this121;\n    }\n\n    _createClass(AxesHelper, [{\n      key: \"setColors\",\n      value: function setColors(xAxisColor, yAxisColor, zAxisColor) {\n        var color = new Color();\n        var array = this.geometry.attributes.color.array;\n        color.set(xAxisColor);\n        color.toArray(array, 0);\n        color.toArray(array, 3);\n        color.set(yAxisColor);\n        color.toArray(array, 6);\n        color.toArray(array, 9);\n        color.set(zAxisColor);\n        color.toArray(array, 12);\n        color.toArray(array, 15);\n        this.geometry.attributes.color.needsUpdate = true;\n        return this;\n      }\n    }, {\n      key: \"dispose\",\n      value: function dispose() {\n        this.geometry.dispose();\n        this.material.dispose();\n      }\n    }]);\n\n    return AxesHelper;\n  }(LineSegments);\n\n  var ShapePath = /*#__PURE__*/function () {\n    function ShapePath() {\n      _classCallCheck(this, ShapePath);\n\n      this.type = 'ShapePath';\n      this.color = new Color();\n      this.subPaths = [];\n      this.currentPath = null;\n    }\n\n    _createClass(ShapePath, [{\n      key: \"moveTo\",\n      value: function moveTo(x, y) {\n        this.currentPath = new Path();\n        this.subPaths.push(this.currentPath);\n        this.currentPath.moveTo(x, y);\n        return this;\n      }\n    }, {\n      key: \"lineTo\",\n      value: function lineTo(x, y) {\n        this.currentPath.lineTo(x, y);\n        return this;\n      }\n    }, {\n      key: \"quadraticCurveTo\",\n      value: function quadraticCurveTo(aCPx, aCPy, aX, aY) {\n        this.currentPath.quadraticCurveTo(aCPx, aCPy, aX, aY);\n        return this;\n      }\n    }, {\n      key: \"bezierCurveTo\",\n      value: function bezierCurveTo(aCP1x, aCP1y, aCP2x, aCP2y, aX, aY) {\n        this.currentPath.bezierCurveTo(aCP1x, aCP1y, aCP2x, aCP2y, aX, aY);\n        return this;\n      }\n    }, {\n      key: \"splineThru\",\n      value: function splineThru(pts) {\n        this.currentPath.splineThru(pts);\n        return this;\n      }\n    }, {\n      key: \"toShapes\",\n      value: function toShapes(isCCW, noHoles) {\n        function toShapesNoHoles(inSubpaths) {\n          var shapes = [];\n\n          for (var _i349 = 0, l = inSubpaths.length; _i349 < l; _i349++) {\n            var _tmpPath = inSubpaths[_i349];\n\n            var _tmpShape = new Shape();\n\n            _tmpShape.curves = _tmpPath.curves;\n            shapes.push(_tmpShape);\n          }\n\n          return shapes;\n        }\n\n        function isPointInsidePolygon(inPt, inPolygon) {\n          var polyLen = inPolygon.length; // inPt on polygon contour => immediate success\t\tor\n          // toggling of inside/outside at every single! intersection point of an edge\n          //\twith the horizontal line through inPt, left of inPt\n          //\tnot counting lowerY endpoints of edges and whole edges on that line\n\n          var inside = false;\n\n          for (var p = polyLen - 1, q = 0; q < polyLen; p = q++) {\n            var edgeLowPt = inPolygon[p];\n            var edgeHighPt = inPolygon[q];\n            var edgeDx = edgeHighPt.x - edgeLowPt.x;\n            var edgeDy = edgeHighPt.y - edgeLowPt.y;\n\n            if (Math.abs(edgeDy) > Number.EPSILON) {\n              // not parallel\n              if (edgeDy < 0) {\n                edgeLowPt = inPolygon[q];\n                edgeDx = -edgeDx;\n                edgeHighPt = inPolygon[p];\n                edgeDy = -edgeDy;\n              }\n\n              if (inPt.y < edgeLowPt.y || inPt.y > edgeHighPt.y) continue;\n\n              if (inPt.y === edgeLowPt.y) {\n                if (inPt.x === edgeLowPt.x) return true; // inPt is on contour ?\n                // continue;\t\t\t\t// no intersection or edgeLowPt => doesn't count !!!\n              } else {\n                var perpEdge = edgeDy * (inPt.x - edgeLowPt.x) - edgeDx * (inPt.y - edgeLowPt.y);\n                if (perpEdge === 0) return true; // inPt is on contour ?\n\n                if (perpEdge < 0) continue;\n                inside = !inside; // true intersection left of inPt\n              }\n            } else {\n              // parallel or collinear\n              if (inPt.y !== edgeLowPt.y) continue; // parallel\n              // edge lies on the same horizontal line as inPt\n\n              if (edgeHighPt.x <= inPt.x && inPt.x <= edgeLowPt.x || edgeLowPt.x <= inPt.x && inPt.x <= edgeHighPt.x) return true; // inPt: Point on contour !\n              // continue;\n            }\n          }\n\n          return inside;\n        }\n\n        var isClockWise = ShapeUtils.isClockWise;\n        var subPaths = this.subPaths;\n        if (subPaths.length === 0) return [];\n        if (noHoles === true) return toShapesNoHoles(subPaths);\n        var solid, tmpPath, tmpShape;\n        var shapes = [];\n\n        if (subPaths.length === 1) {\n          tmpPath = subPaths[0];\n          tmpShape = new Shape();\n          tmpShape.curves = tmpPath.curves;\n          shapes.push(tmpShape);\n          return shapes;\n        }\n\n        var holesFirst = !isClockWise(subPaths[0].getPoints());\n        holesFirst = isCCW ? !holesFirst : holesFirst; // console.log(\"Holes first\", holesFirst);\n\n        var betterShapeHoles = [];\n        var newShapes = [];\n        var newShapeHoles = [];\n        var mainIdx = 0;\n        var tmpPoints;\n        newShapes[mainIdx] = undefined;\n        newShapeHoles[mainIdx] = [];\n\n        for (var _i350 = 0, l = subPaths.length; _i350 < l; _i350++) {\n          tmpPath = subPaths[_i350];\n          tmpPoints = tmpPath.getPoints();\n          solid = isClockWise(tmpPoints);\n          solid = isCCW ? !solid : solid;\n\n          if (solid) {\n            if (!holesFirst && newShapes[mainIdx]) mainIdx++;\n            newShapes[mainIdx] = {\n              s: new Shape(),\n              p: tmpPoints\n            };\n            newShapes[mainIdx].s.curves = tmpPath.curves;\n            if (holesFirst) mainIdx++;\n            newShapeHoles[mainIdx] = []; //console.log('cw', i);\n          } else {\n            newShapeHoles[mainIdx].push({\n              h: tmpPath,\n              p: tmpPoints[0]\n            }); //console.log('ccw', i);\n          }\n        } // only Holes? -> probably all Shapes with wrong orientation\n\n\n        if (!newShapes[0]) return toShapesNoHoles(subPaths);\n\n        if (newShapes.length > 1) {\n          var ambiguous = false;\n          var toChange = [];\n\n          for (var sIdx = 0, sLen = newShapes.length; sIdx < sLen; sIdx++) {\n            betterShapeHoles[sIdx] = [];\n          }\n\n          for (var _sIdx = 0, _sLen = newShapes.length; _sIdx < _sLen; _sIdx++) {\n            var sho = newShapeHoles[_sIdx];\n\n            for (var hIdx = 0; hIdx < sho.length; hIdx++) {\n              var ho = sho[hIdx];\n              var hole_unassigned = true;\n\n              for (var s2Idx = 0; s2Idx < newShapes.length; s2Idx++) {\n                if (isPointInsidePolygon(ho.p, newShapes[s2Idx].p)) {\n                  if (_sIdx !== s2Idx) toChange.push({\n                    froms: _sIdx,\n                    tos: s2Idx,\n                    hole: hIdx\n                  });\n\n                  if (hole_unassigned) {\n                    hole_unassigned = false;\n                    betterShapeHoles[s2Idx].push(ho);\n                  } else {\n                    ambiguous = true;\n                  }\n                }\n              }\n\n              if (hole_unassigned) {\n                betterShapeHoles[_sIdx].push(ho);\n              }\n            }\n          } // console.log(\"ambiguous: \", ambiguous);\n\n\n          if (toChange.length > 0) {\n            // console.log(\"to change: \", toChange);\n            if (!ambiguous) newShapeHoles = betterShapeHoles;\n          }\n        }\n\n        var tmpHoles;\n\n        for (var _i351 = 0, il = newShapes.length; _i351 < il; _i351++) {\n          tmpShape = newShapes[_i351].s;\n          shapes.push(tmpShape);\n          tmpHoles = newShapeHoles[_i351];\n\n          for (var j = 0, jl = tmpHoles.length; j < jl; j++) {\n            tmpShape.holes.push(tmpHoles[j].h);\n          }\n        } //console.log(\"shape\", shapes);\n\n\n        return shapes;\n      }\n    }]);\n\n    return ShapePath;\n  }();\n\n  var _floatView = new Float32Array(1);\n\n  var _int32View = new Int32Array(_floatView.buffer);\n\n  var DataUtils = /*#__PURE__*/function () {\n    function DataUtils() {\n      _classCallCheck(this, DataUtils);\n    }\n\n    _createClass(DataUtils, null, [{\n      key: \"toHalfFloat\",\n      value: // Converts float32 to float16 (stored as uint16 value).\n      function toHalfFloat(val) {\n        if (val > 65504) {\n          console.warn('THREE.DataUtils.toHalfFloat(): value exceeds 65504.');\n          val = 65504; // maximum representable value in float16\n        } // Source: http://gamedev.stackexchange.com/questions/17326/conversion-of-a-number-from-single-precision-floating-point-representation-to-a/17410#17410\n\n        /* This method is faster than the OpenEXR implementation (very often\n        * used, eg. in Ogre), with the additional benefit of rounding, inspired\n        * by James Tursa?s half-precision code. */\n\n\n        _floatView[0] = val;\n        var x = _int32View[0];\n        var bits = x >> 16 & 0x8000;\n        /* Get the sign */\n\n        var m = x >> 12 & 0x07ff;\n        /* Keep one extra bit for rounding */\n\n        var e = x >> 23 & 0xff;\n        /* Using int is faster here */\n\n        /* If zero, or denormal, or exponent underflows too much for a denormal\n        \t* half, return signed zero. */\n\n        if (e < 103) return bits;\n        /* If NaN, return NaN. If Inf or exponent overflow, return Inf. */\n\n        if (e > 142) {\n          bits |= 0x7c00;\n          /* If exponent was 0xff and one mantissa bit was set, it means NaN,\n          \t\t\t* not Inf, so make sure we set one mantissa bit too. */\n\n          bits |= (e == 255 ? 0 : 1) && x & 0x007fffff;\n          return bits;\n        }\n        /* If exponent underflows but not too much, return a denormal */\n\n\n        if (e < 113) {\n          m |= 0x0800;\n          /* Extra rounding may overflow and set mantissa to 0 and exponent\n          \t* to 1, which is OK. */\n\n          bits |= (m >> 114 - e) + (m >> 113 - e & 1);\n          return bits;\n        }\n\n        bits |= e - 112 << 10 | m >> 1;\n        /* Extra rounding. An overflow will set mantissa to 0 and increment\n        \t* the exponent, which is OK. */\n\n        bits += m & 1;\n        return bits;\n      }\n    }]);\n\n    return DataUtils;\n  }();\n\n  var LineStrip = 0;\n  var LinePieces = 1;\n  var NoColors = 0;\n  var FaceColors = 1;\n  var VertexColors = 2;\n\n  function MeshFaceMaterial(materials) {\n    console.warn('THREE.MeshFaceMaterial has been removed. Use an Array instead.');\n    return materials;\n  }\n\n  function MultiMaterial() {\n    var materials = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n    console.warn('THREE.MultiMaterial has been removed. Use an Array instead.');\n    materials.isMultiMaterial = true;\n    materials.materials = materials;\n\n    materials.clone = function () {\n      return materials.slice();\n    };\n\n    return materials;\n  }\n\n  function PointCloud(geometry, material) {\n    console.warn('THREE.PointCloud has been renamed to THREE.Points.');\n    return new Points(geometry, material);\n  }\n\n  function Particle(material) {\n    console.warn('THREE.Particle has been renamed to THREE.Sprite.');\n    return new Sprite(material);\n  }\n\n  function ParticleSystem(geometry, material) {\n    console.warn('THREE.ParticleSystem has been renamed to THREE.Points.');\n    return new Points(geometry, material);\n  }\n\n  function PointCloudMaterial(parameters) {\n    console.warn('THREE.PointCloudMaterial has been renamed to THREE.PointsMaterial.');\n    return new PointsMaterial(parameters);\n  }\n\n  function ParticleBasicMaterial(parameters) {\n    console.warn('THREE.ParticleBasicMaterial has been renamed to THREE.PointsMaterial.');\n    return new PointsMaterial(parameters);\n  }\n\n  function ParticleSystemMaterial(parameters) {\n    console.warn('THREE.ParticleSystemMaterial has been renamed to THREE.PointsMaterial.');\n    return new PointsMaterial(parameters);\n  }\n\n  function Vertex(x, y, z) {\n    console.warn('THREE.Vertex has been removed. Use THREE.Vector3 instead.');\n    return new Vector3(x, y, z);\n  } //\n\n\n  function DynamicBufferAttribute(array, itemSize) {\n    console.warn('THREE.DynamicBufferAttribute has been removed. Use new THREE.BufferAttribute().setUsage( THREE.DynamicDrawUsage ) instead.');\n    return new BufferAttribute(array, itemSize).setUsage(DynamicDrawUsage);\n  }\n\n  function Int8Attribute(array, itemSize) {\n    console.warn('THREE.Int8Attribute has been removed. Use new THREE.Int8BufferAttribute() instead.');\n    return new Int8BufferAttribute(array, itemSize);\n  }\n\n  function Uint8Attribute(array, itemSize) {\n    console.warn('THREE.Uint8Attribute has been removed. Use new THREE.Uint8BufferAttribute() instead.');\n    return new Uint8BufferAttribute(array, itemSize);\n  }\n\n  function Uint8ClampedAttribute(array, itemSize) {\n    console.warn('THREE.Uint8ClampedAttribute has been removed. Use new THREE.Uint8ClampedBufferAttribute() instead.');\n    return new Uint8ClampedBufferAttribute(array, itemSize);\n  }\n\n  function Int16Attribute(array, itemSize) {\n    console.warn('THREE.Int16Attribute has been removed. Use new THREE.Int16BufferAttribute() instead.');\n    return new Int16BufferAttribute(array, itemSize);\n  }\n\n  function Uint16Attribute(array, itemSize) {\n    console.warn('THREE.Uint16Attribute has been removed. Use new THREE.Uint16BufferAttribute() instead.');\n    return new Uint16BufferAttribute(array, itemSize);\n  }\n\n  function Int32Attribute(array, itemSize) {\n    console.warn('THREE.Int32Attribute has been removed. Use new THREE.Int32BufferAttribute() instead.');\n    return new Int32BufferAttribute(array, itemSize);\n  }\n\n  function Uint32Attribute(array, itemSize) {\n    console.warn('THREE.Uint32Attribute has been removed. Use new THREE.Uint32BufferAttribute() instead.');\n    return new Uint32BufferAttribute(array, itemSize);\n  }\n\n  function Float32Attribute(array, itemSize) {\n    console.warn('THREE.Float32Attribute has been removed. Use new THREE.Float32BufferAttribute() instead.');\n    return new Float32BufferAttribute(array, itemSize);\n  }\n\n  function Float64Attribute(array, itemSize) {\n    console.warn('THREE.Float64Attribute has been removed. Use new THREE.Float64BufferAttribute() instead.');\n    return new Float64BufferAttribute(array, itemSize);\n  } //\n\n\n  Curve.create = function (construct, getPoint) {\n    console.log('THREE.Curve.create() has been deprecated');\n    construct.prototype = Object.create(Curve.prototype);\n    construct.prototype.constructor = construct;\n    construct.prototype.getPoint = getPoint;\n    return construct;\n  }; //\n\n\n  Path.prototype.fromPoints = function (points) {\n    console.warn('THREE.Path: .fromPoints() has been renamed to .setFromPoints().');\n    return this.setFromPoints(points);\n  }; //\n\n\n  function AxisHelper(size) {\n    console.warn('THREE.AxisHelper has been renamed to THREE.AxesHelper.');\n    return new AxesHelper(size);\n  }\n\n  function BoundingBoxHelper(object, color) {\n    console.warn('THREE.BoundingBoxHelper has been deprecated. Creating a THREE.BoxHelper instead.');\n    return new BoxHelper(object, color);\n  }\n\n  function EdgesHelper(object, hex) {\n    console.warn('THREE.EdgesHelper has been removed. Use THREE.EdgesGeometry instead.');\n    return new LineSegments(new EdgesGeometry(object.geometry), new LineBasicMaterial({\n      color: hex !== undefined ? hex : 0xffffff\n    }));\n  }\n\n  GridHelper.prototype.setColors = function () {\n    console.error('THREE.GridHelper: setColors() has been deprecated, pass them in the constructor instead.');\n  };\n\n  SkeletonHelper.prototype.update = function () {\n    console.error('THREE.SkeletonHelper: update() no longer needs to be called.');\n  };\n\n  function WireframeHelper(object, hex) {\n    console.warn('THREE.WireframeHelper has been removed. Use THREE.WireframeGeometry instead.');\n    return new LineSegments(new WireframeGeometry(object.geometry), new LineBasicMaterial({\n      color: hex !== undefined ? hex : 0xffffff\n    }));\n  } //\n\n\n  Loader.prototype.extractUrlBase = function (url) {\n    console.warn('THREE.Loader: .extractUrlBase() has been deprecated. Use THREE.LoaderUtils.extractUrlBase() instead.');\n    return LoaderUtils.extractUrlBase(url);\n  };\n\n  Loader.Handlers = {\n    add: function add() {\n      console.error('THREE.Loader: Handlers.add() has been removed. Use LoadingManager.addHandler() instead.');\n    },\n    get: function get() {\n      console.error('THREE.Loader: Handlers.get() has been removed. Use LoadingManager.getHandler() instead.');\n    }\n  };\n\n  function XHRLoader(manager) {\n    console.warn('THREE.XHRLoader has been renamed to THREE.FileLoader.');\n    return new FileLoader(manager);\n  }\n\n  function BinaryTextureLoader(manager) {\n    console.warn('THREE.BinaryTextureLoader has been renamed to THREE.DataTextureLoader.');\n    return new DataTextureLoader(manager);\n  } //\n\n\n  Box2.prototype.center = function (optionalTarget) {\n    console.warn('THREE.Box2: .center() has been renamed to .getCenter().');\n    return this.getCenter(optionalTarget);\n  };\n\n  Box2.prototype.empty = function () {\n    console.warn('THREE.Box2: .empty() has been renamed to .isEmpty().');\n    return this.isEmpty();\n  };\n\n  Box2.prototype.isIntersectionBox = function (box) {\n    console.warn('THREE.Box2: .isIntersectionBox() has been renamed to .intersectsBox().');\n    return this.intersectsBox(box);\n  };\n\n  Box2.prototype.size = function (optionalTarget) {\n    console.warn('THREE.Box2: .size() has been renamed to .getSize().');\n    return this.getSize(optionalTarget);\n  }; //\n\n\n  Box3.prototype.center = function (optionalTarget) {\n    console.warn('THREE.Box3: .center() has been renamed to .getCenter().');\n    return this.getCenter(optionalTarget);\n  };\n\n  Box3.prototype.empty = function () {\n    console.warn('THREE.Box3: .empty() has been renamed to .isEmpty().');\n    return this.isEmpty();\n  };\n\n  Box3.prototype.isIntersectionBox = function (box) {\n    console.warn('THREE.Box3: .isIntersectionBox() has been renamed to .intersectsBox().');\n    return this.intersectsBox(box);\n  };\n\n  Box3.prototype.isIntersectionSphere = function (sphere) {\n    console.warn('THREE.Box3: .isIntersectionSphere() has been renamed to .intersectsSphere().');\n    return this.intersectsSphere(sphere);\n  };\n\n  Box3.prototype.size = function (optionalTarget) {\n    console.warn('THREE.Box3: .size() has been renamed to .getSize().');\n    return this.getSize(optionalTarget);\n  }; //\n\n\n  Sphere.prototype.empty = function () {\n    console.warn('THREE.Sphere: .empty() has been renamed to .isEmpty().');\n    return this.isEmpty();\n  }; //\n\n\n  Frustum.prototype.setFromMatrix = function (m) {\n    console.warn('THREE.Frustum: .setFromMatrix() has been renamed to .setFromProjectionMatrix().');\n    return this.setFromProjectionMatrix(m);\n  }; //\n\n\n  Line3.prototype.center = function (optionalTarget) {\n    console.warn('THREE.Line3: .center() has been renamed to .getCenter().');\n    return this.getCenter(optionalTarget);\n  }; //\n\n\n  Matrix3.prototype.flattenToArrayOffset = function (array, offset) {\n    console.warn('THREE.Matrix3: .flattenToArrayOffset() has been deprecated. Use .toArray() instead.');\n    return this.toArray(array, offset);\n  };\n\n  Matrix3.prototype.multiplyVector3 = function (vector) {\n    console.warn('THREE.Matrix3: .multiplyVector3() has been removed. Use vector.applyMatrix3( matrix ) instead.');\n    return vector.applyMatrix3(this);\n  };\n\n  Matrix3.prototype.multiplyVector3Array = function () {\n    console.error('THREE.Matrix3: .multiplyVector3Array() has been removed.');\n  };\n\n  Matrix3.prototype.applyToBufferAttribute = function (attribute) {\n    console.warn('THREE.Matrix3: .applyToBufferAttribute() has been removed. Use attribute.applyMatrix3( matrix ) instead.');\n    return attribute.applyMatrix3(this);\n  };\n\n  Matrix3.prototype.applyToVector3Array = function () {\n    console.error('THREE.Matrix3: .applyToVector3Array() has been removed.');\n  };\n\n  Matrix3.prototype.getInverse = function (matrix) {\n    console.warn('THREE.Matrix3: .getInverse() has been removed. Use matrixInv.copy( matrix ).invert(); instead.');\n    return this.copy(matrix).invert();\n  }; //\n\n\n  Matrix4.prototype.extractPosition = function (m) {\n    console.warn('THREE.Matrix4: .extractPosition() has been renamed to .copyPosition().');\n    return this.copyPosition(m);\n  };\n\n  Matrix4.prototype.flattenToArrayOffset = function (array, offset) {\n    console.warn('THREE.Matrix4: .flattenToArrayOffset() has been deprecated. Use .toArray() instead.');\n    return this.toArray(array, offset);\n  };\n\n  Matrix4.prototype.getPosition = function () {\n    console.warn('THREE.Matrix4: .getPosition() has been removed. Use Vector3.setFromMatrixPosition( matrix ) instead.');\n    return new Vector3().setFromMatrixColumn(this, 3);\n  };\n\n  Matrix4.prototype.setRotationFromQuaternion = function (q) {\n    console.warn('THREE.Matrix4: .setRotationFromQuaternion() has been renamed to .makeRotationFromQuaternion().');\n    return this.makeRotationFromQuaternion(q);\n  };\n\n  Matrix4.prototype.multiplyToArray = function () {\n    console.warn('THREE.Matrix4: .multiplyToArray() has been removed.');\n  };\n\n  Matrix4.prototype.multiplyVector3 = function (vector) {\n    console.warn('THREE.Matrix4: .multiplyVector3() has been removed. Use vector.applyMatrix4( matrix ) instead.');\n    return vector.applyMatrix4(this);\n  };\n\n  Matrix4.prototype.multiplyVector4 = function (vector) {\n    console.warn('THREE.Matrix4: .multiplyVector4() has been removed. Use vector.applyMatrix4( matrix ) instead.');\n    return vector.applyMatrix4(this);\n  };\n\n  Matrix4.prototype.multiplyVector3Array = function () {\n    console.error('THREE.Matrix4: .multiplyVector3Array() has been removed.');\n  };\n\n  Matrix4.prototype.rotateAxis = function (v) {\n    console.warn('THREE.Matrix4: .rotateAxis() has been removed. Use Vector3.transformDirection( matrix ) instead.');\n    v.transformDirection(this);\n  };\n\n  Matrix4.prototype.crossVector = function (vector) {\n    console.warn('THREE.Matrix4: .crossVector() has been removed. Use vector.applyMatrix4( matrix ) instead.');\n    return vector.applyMatrix4(this);\n  };\n\n  Matrix4.prototype.translate = function () {\n    console.error('THREE.Matrix4: .translate() has been removed.');\n  };\n\n  Matrix4.prototype.rotateX = function () {\n    console.error('THREE.Matrix4: .rotateX() has been removed.');\n  };\n\n  Matrix4.prototype.rotateY = function () {\n    console.error('THREE.Matrix4: .rotateY() has been removed.');\n  };\n\n  Matrix4.prototype.rotateZ = function () {\n    console.error('THREE.Matrix4: .rotateZ() has been removed.');\n  };\n\n  Matrix4.prototype.rotateByAxis = function () {\n    console.error('THREE.Matrix4: .rotateByAxis() has been removed.');\n  };\n\n  Matrix4.prototype.applyToBufferAttribute = function (attribute) {\n    console.warn('THREE.Matrix4: .applyToBufferAttribute() has been removed. Use attribute.applyMatrix4( matrix ) instead.');\n    return attribute.applyMatrix4(this);\n  };\n\n  Matrix4.prototype.applyToVector3Array = function () {\n    console.error('THREE.Matrix4: .applyToVector3Array() has been removed.');\n  };\n\n  Matrix4.prototype.makeFrustum = function (left, right, bottom, top, near, far) {\n    console.warn('THREE.Matrix4: .makeFrustum() has been removed. Use .makePerspective( left, right, top, bottom, near, far ) instead.');\n    return this.makePerspective(left, right, top, bottom, near, far);\n  };\n\n  Matrix4.prototype.getInverse = function (matrix) {\n    console.warn('THREE.Matrix4: .getInverse() has been removed. Use matrixInv.copy( matrix ).invert(); instead.');\n    return this.copy(matrix).invert();\n  }; //\n\n\n  Plane.prototype.isIntersectionLine = function (line) {\n    console.warn('THREE.Plane: .isIntersectionLine() has been renamed to .intersectsLine().');\n    return this.intersectsLine(line);\n  }; //\n\n\n  Quaternion.prototype.multiplyVector3 = function (vector) {\n    console.warn('THREE.Quaternion: .multiplyVector3() has been removed. Use is now vector.applyQuaternion( quaternion ) instead.');\n    return vector.applyQuaternion(this);\n  };\n\n  Quaternion.prototype.inverse = function () {\n    console.warn('THREE.Quaternion: .inverse() has been renamed to invert().');\n    return this.invert();\n  }; //\n\n\n  Ray.prototype.isIntersectionBox = function (box) {\n    console.warn('THREE.Ray: .isIntersectionBox() has been renamed to .intersectsBox().');\n    return this.intersectsBox(box);\n  };\n\n  Ray.prototype.isIntersectionPlane = function (plane) {\n    console.warn('THREE.Ray: .isIntersectionPlane() has been renamed to .intersectsPlane().');\n    return this.intersectsPlane(plane);\n  };\n\n  Ray.prototype.isIntersectionSphere = function (sphere) {\n    console.warn('THREE.Ray: .isIntersectionSphere() has been renamed to .intersectsSphere().');\n    return this.intersectsSphere(sphere);\n  }; //\n\n\n  Triangle.prototype.area = function () {\n    console.warn('THREE.Triangle: .area() has been renamed to .getArea().');\n    return this.getArea();\n  };\n\n  Triangle.prototype.barycoordFromPoint = function (point, target) {\n    console.warn('THREE.Triangle: .barycoordFromPoint() has been renamed to .getBarycoord().');\n    return this.getBarycoord(point, target);\n  };\n\n  Triangle.prototype.midpoint = function (target) {\n    console.warn('THREE.Triangle: .midpoint() has been renamed to .getMidpoint().');\n    return this.getMidpoint(target);\n  };\n\n  Triangle.prototypenormal = function (target) {\n    console.warn('THREE.Triangle: .normal() has been renamed to .getNormal().');\n    return this.getNormal(target);\n  };\n\n  Triangle.prototype.plane = function (target) {\n    console.warn('THREE.Triangle: .plane() has been renamed to .getPlane().');\n    return this.getPlane(target);\n  };\n\n  Triangle.barycoordFromPoint = function (point, a, b, c, target) {\n    console.warn('THREE.Triangle: .barycoordFromPoint() has been renamed to .getBarycoord().');\n    return Triangle.getBarycoord(point, a, b, c, target);\n  };\n\n  Triangle.normal = function (a, b, c, target) {\n    console.warn('THREE.Triangle: .normal() has been renamed to .getNormal().');\n    return Triangle.getNormal(a, b, c, target);\n  }; //\n\n\n  Shape.prototype.extractAllPoints = function (divisions) {\n    console.warn('THREE.Shape: .extractAllPoints() has been removed. Use .extractPoints() instead.');\n    return this.extractPoints(divisions);\n  };\n\n  Shape.prototype.extrude = function (options) {\n    console.warn('THREE.Shape: .extrude() has been removed. Use ExtrudeGeometry() instead.');\n    return new ExtrudeGeometry(this, options);\n  };\n\n  Shape.prototype.makeGeometry = function (options) {\n    console.warn('THREE.Shape: .makeGeometry() has been removed. Use ShapeGeometry() instead.');\n    return new ShapeGeometry(this, options);\n  }; //\n\n\n  Vector2.prototype.fromAttribute = function (attribute, index, offset) {\n    console.warn('THREE.Vector2: .fromAttribute() has been renamed to .fromBufferAttribute().');\n    return this.fromBufferAttribute(attribute, index, offset);\n  };\n\n  Vector2.prototype.distanceToManhattan = function (v) {\n    console.warn('THREE.Vector2: .distanceToManhattan() has been renamed to .manhattanDistanceTo().');\n    return this.manhattanDistanceTo(v);\n  };\n\n  Vector2.prototype.lengthManhattan = function () {\n    console.warn('THREE.Vector2: .lengthManhattan() has been renamed to .manhattanLength().');\n    return this.manhattanLength();\n  }; //\n\n\n  Vector3.prototype.setEulerFromRotationMatrix = function () {\n    console.error('THREE.Vector3: .setEulerFromRotationMatrix() has been removed. Use Euler.setFromRotationMatrix() instead.');\n  };\n\n  Vector3.prototype.setEulerFromQuaternion = function () {\n    console.error('THREE.Vector3: .setEulerFromQuaternion() has been removed. Use Euler.setFromQuaternion() instead.');\n  };\n\n  Vector3.prototype.getPositionFromMatrix = function (m) {\n    console.warn('THREE.Vector3: .getPositionFromMatrix() has been renamed to .setFromMatrixPosition().');\n    return this.setFromMatrixPosition(m);\n  };\n\n  Vector3.prototype.getScaleFromMatrix = function (m) {\n    console.warn('THREE.Vector3: .getScaleFromMatrix() has been renamed to .setFromMatrixScale().');\n    return this.setFromMatrixScale(m);\n  };\n\n  Vector3.prototype.getColumnFromMatrix = function (index, matrix) {\n    console.warn('THREE.Vector3: .getColumnFromMatrix() has been renamed to .setFromMatrixColumn().');\n    return this.setFromMatrixColumn(matrix, index);\n  };\n\n  Vector3.prototype.applyProjection = function (m) {\n    console.warn('THREE.Vector3: .applyProjection() has been removed. Use .applyMatrix4( m ) instead.');\n    return this.applyMatrix4(m);\n  };\n\n  Vector3.prototype.fromAttribute = function (attribute, index, offset) {\n    console.warn('THREE.Vector3: .fromAttribute() has been renamed to .fromBufferAttribute().');\n    return this.fromBufferAttribute(attribute, index, offset);\n  };\n\n  Vector3.prototype.distanceToManhattan = function (v) {\n    console.warn('THREE.Vector3: .distanceToManhattan() has been renamed to .manhattanDistanceTo().');\n    return this.manhattanDistanceTo(v);\n  };\n\n  Vector3.prototype.lengthManhattan = function () {\n    console.warn('THREE.Vector3: .lengthManhattan() has been renamed to .manhattanLength().');\n    return this.manhattanLength();\n  }; //\n\n\n  Vector4.prototype.fromAttribute = function (attribute, index, offset) {\n    console.warn('THREE.Vector4: .fromAttribute() has been renamed to .fromBufferAttribute().');\n    return this.fromBufferAttribute(attribute, index, offset);\n  };\n\n  Vector4.prototype.lengthManhattan = function () {\n    console.warn('THREE.Vector4: .lengthManhattan() has been renamed to .manhattanLength().');\n    return this.manhattanLength();\n  }; //\n\n\n  Object3D.prototype.getChildByName = function (name) {\n    console.warn('THREE.Object3D: .getChildByName() has been renamed to .getObjectByName().');\n    return this.getObjectByName(name);\n  };\n\n  Object3D.prototype.renderDepth = function () {\n    console.warn('THREE.Object3D: .renderDepth has been removed. Use .renderOrder, instead.');\n  };\n\n  Object3D.prototype.translate = function (distance, axis) {\n    console.warn('THREE.Object3D: .translate() has been removed. Use .translateOnAxis( axis, distance ) instead.');\n    return this.translateOnAxis(axis, distance);\n  };\n\n  Object3D.prototype.getWorldRotation = function () {\n    console.error('THREE.Object3D: .getWorldRotation() has been removed. Use THREE.Object3D.getWorldQuaternion( target ) instead.');\n  };\n\n  Object3D.prototype.applyMatrix = function (matrix) {\n    console.warn('THREE.Object3D: .applyMatrix() has been renamed to .applyMatrix4().');\n    return this.applyMatrix4(matrix);\n  };\n\n  Object.defineProperties(Object3D.prototype, {\n    eulerOrder: {\n      get: function get() {\n        console.warn('THREE.Object3D: .eulerOrder is now .rotation.order.');\n        return this.rotation.order;\n      },\n      set: function set(value) {\n        console.warn('THREE.Object3D: .eulerOrder is now .rotation.order.');\n        this.rotation.order = value;\n      }\n    },\n    useQuaternion: {\n      get: function get() {\n        console.warn('THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.');\n      },\n      set: function set() {\n        console.warn('THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.');\n      }\n    }\n  });\n\n  Mesh.prototype.setDrawMode = function () {\n    console.error('THREE.Mesh: .setDrawMode() has been removed. The renderer now always assumes THREE.TrianglesDrawMode. Transform your geometry via BufferGeometryUtils.toTrianglesDrawMode() if necessary.');\n  };\n\n  Object.defineProperties(Mesh.prototype, {\n    drawMode: {\n      get: function get() {\n        console.error('THREE.Mesh: .drawMode has been removed. The renderer now always assumes THREE.TrianglesDrawMode.');\n        return TrianglesDrawMode;\n      },\n      set: function set() {\n        console.error('THREE.Mesh: .drawMode has been removed. The renderer now always assumes THREE.TrianglesDrawMode. Transform your geometry via BufferGeometryUtils.toTrianglesDrawMode() if necessary.');\n      }\n    }\n  });\n\n  SkinnedMesh.prototype.initBones = function () {\n    console.error('THREE.SkinnedMesh: initBones() has been removed.');\n  }; //\n\n\n  PerspectiveCamera.prototype.setLens = function (focalLength, filmGauge) {\n    console.warn('THREE.PerspectiveCamera.setLens is deprecated. ' + 'Use .setFocalLength and .filmGauge for a photographic setup.');\n    if (filmGauge !== undefined) this.filmGauge = filmGauge;\n    this.setFocalLength(focalLength);\n  }; //\n\n\n  Object.defineProperties(Light.prototype, {\n    onlyShadow: {\n      set: function set() {\n        console.warn('THREE.Light: .onlyShadow has been removed.');\n      }\n    },\n    shadowCameraFov: {\n      set: function set(value) {\n        console.warn('THREE.Light: .shadowCameraFov is now .shadow.camera.fov.');\n        this.shadow.camera.fov = value;\n      }\n    },\n    shadowCameraLeft: {\n      set: function set(value) {\n        console.warn('THREE.Light: .shadowCameraLeft is now .shadow.camera.left.');\n        this.shadow.camera.left = value;\n      }\n    },\n    shadowCameraRight: {\n      set: function set(value) {\n        console.warn('THREE.Light: .shadowCameraRight is now .shadow.camera.right.');\n        this.shadow.camera.right = value;\n      }\n    },\n    shadowCameraTop: {\n      set: function set(value) {\n        console.warn('THREE.Light: .shadowCameraTop is now .shadow.camera.top.');\n        this.shadow.camera.top = value;\n      }\n    },\n    shadowCameraBottom: {\n      set: function set(value) {\n        console.warn('THREE.Light: .shadowCameraBottom is now .shadow.camera.bottom.');\n        this.shadow.camera.bottom = value;\n      }\n    },\n    shadowCameraNear: {\n      set: function set(value) {\n        console.warn('THREE.Light: .shadowCameraNear is now .shadow.camera.near.');\n        this.shadow.camera.near = value;\n      }\n    },\n    shadowCameraFar: {\n      set: function set(value) {\n        console.warn('THREE.Light: .shadowCameraFar is now .shadow.camera.far.');\n        this.shadow.camera.far = value;\n      }\n    },\n    shadowCameraVisible: {\n      set: function set() {\n        console.warn('THREE.Light: .shadowCameraVisible has been removed. Use new THREE.CameraHelper( light.shadow.camera ) instead.');\n      }\n    },\n    shadowBias: {\n      set: function set(value) {\n        console.warn('THREE.Light: .shadowBias is now .shadow.bias.');\n        this.shadow.bias = value;\n      }\n    },\n    shadowDarkness: {\n      set: function set() {\n        console.warn('THREE.Light: .shadowDarkness has been removed.');\n      }\n    },\n    shadowMapWidth: {\n      set: function set(value) {\n        console.warn('THREE.Light: .shadowMapWidth is now .shadow.mapSize.width.');\n        this.shadow.mapSize.width = value;\n      }\n    },\n    shadowMapHeight: {\n      set: function set(value) {\n        console.warn('THREE.Light: .shadowMapHeight is now .shadow.mapSize.height.');\n        this.shadow.mapSize.height = value;\n      }\n    }\n  }); //\n\n  Object.defineProperties(BufferAttribute.prototype, {\n    length: {\n      get: function get() {\n        console.warn('THREE.BufferAttribute: .length has been deprecated. Use .count instead.');\n        return this.array.length;\n      }\n    },\n    dynamic: {\n      get: function get() {\n        console.warn('THREE.BufferAttribute: .dynamic has been deprecated. Use .usage instead.');\n        return this.usage === DynamicDrawUsage;\n      },\n      set: function set() {\n        console.warn('THREE.BufferAttribute: .dynamic has been deprecated. Use .usage instead.');\n        this.setUsage(DynamicDrawUsage);\n      }\n    }\n  });\n\n  BufferAttribute.prototype.setDynamic = function (value) {\n    console.warn('THREE.BufferAttribute: .setDynamic() has been deprecated. Use .setUsage() instead.');\n    this.setUsage(value === true ? DynamicDrawUsage : StaticDrawUsage);\n    return this;\n  };\n\n  BufferAttribute.prototype.copyIndicesArray = function () {\n    console.error('THREE.BufferAttribute: .copyIndicesArray() has been removed.');\n  }, BufferAttribute.prototype.setArray = function () {\n    console.error('THREE.BufferAttribute: .setArray has been removed. Use BufferGeometry .setAttribute to replace/resize attribute buffers');\n  }; //\n\n  BufferGeometry.prototype.addIndex = function (index) {\n    console.warn('THREE.BufferGeometry: .addIndex() has been renamed to .setIndex().');\n    this.setIndex(index);\n  };\n\n  BufferGeometry.prototype.addAttribute = function (name, attribute) {\n    console.warn('THREE.BufferGeometry: .addAttribute() has been renamed to .setAttribute().');\n\n    if (!(attribute && attribute.isBufferAttribute) && !(attribute && attribute.isInterleavedBufferAttribute)) {\n      console.warn('THREE.BufferGeometry: .addAttribute() now expects ( name, attribute ).');\n      return this.setAttribute(name, new BufferAttribute(arguments[1], arguments[2]));\n    }\n\n    if (name === 'index') {\n      console.warn('THREE.BufferGeometry.addAttribute: Use .setIndex() for index attribute.');\n      this.setIndex(attribute);\n      return this;\n    }\n\n    return this.setAttribute(name, attribute);\n  };\n\n  BufferGeometry.prototype.addDrawCall = function (start, count, indexOffset) {\n    if (indexOffset !== undefined) {\n      console.warn('THREE.BufferGeometry: .addDrawCall() no longer supports indexOffset.');\n    }\n\n    console.warn('THREE.BufferGeometry: .addDrawCall() is now .addGroup().');\n    this.addGroup(start, count);\n  };\n\n  BufferGeometry.prototype.clearDrawCalls = function () {\n    console.warn('THREE.BufferGeometry: .clearDrawCalls() is now .clearGroups().');\n    this.clearGroups();\n  };\n\n  BufferGeometry.prototype.computeOffsets = function () {\n    console.warn('THREE.BufferGeometry: .computeOffsets() has been removed.');\n  };\n\n  BufferGeometry.prototype.removeAttribute = function (name) {\n    console.warn('THREE.BufferGeometry: .removeAttribute() has been renamed to .deleteAttribute().');\n    return this.deleteAttribute(name);\n  };\n\n  BufferGeometry.prototype.applyMatrix = function (matrix) {\n    console.warn('THREE.BufferGeometry: .applyMatrix() has been renamed to .applyMatrix4().');\n    return this.applyMatrix4(matrix);\n  };\n\n  Object.defineProperties(BufferGeometry.prototype, {\n    drawcalls: {\n      get: function get() {\n        console.error('THREE.BufferGeometry: .drawcalls has been renamed to .groups.');\n        return this.groups;\n      }\n    },\n    offsets: {\n      get: function get() {\n        console.warn('THREE.BufferGeometry: .offsets has been renamed to .groups.');\n        return this.groups;\n      }\n    }\n  });\n\n  InterleavedBuffer.prototype.setDynamic = function (value) {\n    console.warn('THREE.InterleavedBuffer: .setDynamic() has been deprecated. Use .setUsage() instead.');\n    this.setUsage(value === true ? DynamicDrawUsage : StaticDrawUsage);\n    return this;\n  };\n\n  InterleavedBuffer.prototype.setArray = function () {\n    console.error('THREE.InterleavedBuffer: .setArray has been removed. Use BufferGeometry .setAttribute to replace/resize attribute buffers');\n  }; //\n\n\n  ExtrudeGeometry.prototype.getArrays = function () {\n    console.error('THREE.ExtrudeGeometry: .getArrays() has been removed.');\n  };\n\n  ExtrudeGeometry.prototype.addShapeList = function () {\n    console.error('THREE.ExtrudeGeometry: .addShapeList() has been removed.');\n  };\n\n  ExtrudeGeometry.prototype.addShape = function () {\n    console.error('THREE.ExtrudeGeometry: .addShape() has been removed.');\n  }; //\n\n\n  Scene.prototype.dispose = function () {\n    console.error('THREE.Scene: .dispose() has been removed.');\n  }; //\n\n\n  Uniform.prototype.onUpdate = function () {\n    console.warn('THREE.Uniform: .onUpdate() has been removed. Use object.onBeforeRender() instead.');\n    return this;\n  }; //\n\n\n  Object.defineProperties(Material.prototype, {\n    wrapAround: {\n      get: function get() {\n        console.warn('THREE.Material: .wrapAround has been removed.');\n      },\n      set: function set() {\n        console.warn('THREE.Material: .wrapAround has been removed.');\n      }\n    },\n    overdraw: {\n      get: function get() {\n        console.warn('THREE.Material: .overdraw has been removed.');\n      },\n      set: function set() {\n        console.warn('THREE.Material: .overdraw has been removed.');\n      }\n    },\n    wrapRGB: {\n      get: function get() {\n        console.warn('THREE.Material: .wrapRGB has been removed.');\n        return new Color();\n      }\n    },\n    shading: {\n      get: function get() {\n        console.error('THREE.' + this.type + ': .shading has been removed. Use the boolean .flatShading instead.');\n      },\n      set: function set(value) {\n        console.warn('THREE.' + this.type + ': .shading has been removed. Use the boolean .flatShading instead.');\n        this.flatShading = value === FlatShading;\n      }\n    },\n    stencilMask: {\n      get: function get() {\n        console.warn('THREE.' + this.type + ': .stencilMask has been removed. Use .stencilFuncMask instead.');\n        return this.stencilFuncMask;\n      },\n      set: function set(value) {\n        console.warn('THREE.' + this.type + ': .stencilMask has been removed. Use .stencilFuncMask instead.');\n        this.stencilFuncMask = value;\n      }\n    },\n    vertexTangents: {\n      get: function get() {\n        console.warn('THREE.' + this.type + ': .vertexTangents has been removed.');\n      },\n      set: function set() {\n        console.warn('THREE.' + this.type + ': .vertexTangents has been removed.');\n      }\n    }\n  });\n  Object.defineProperties(ShaderMaterial.prototype, {\n    derivatives: {\n      get: function get() {\n        console.warn('THREE.ShaderMaterial: .derivatives has been moved to .extensions.derivatives.');\n        return this.extensions.derivatives;\n      },\n      set: function set(value) {\n        console.warn('THREE. ShaderMaterial: .derivatives has been moved to .extensions.derivatives.');\n        this.extensions.derivatives = value;\n      }\n    }\n  }); //\n\n  WebGLRenderer.prototype.clearTarget = function (renderTarget, color, depth, stencil) {\n    console.warn('THREE.WebGLRenderer: .clearTarget() has been deprecated. Use .setRenderTarget() and .clear() instead.');\n    this.setRenderTarget(renderTarget);\n    this.clear(color, depth, stencil);\n  };\n\n  WebGLRenderer.prototype.animate = function (callback) {\n    console.warn('THREE.WebGLRenderer: .animate() is now .setAnimationLoop().');\n    this.setAnimationLoop(callback);\n  };\n\n  WebGLRenderer.prototype.getCurrentRenderTarget = function () {\n    console.warn('THREE.WebGLRenderer: .getCurrentRenderTarget() is now .getRenderTarget().');\n    return this.getRenderTarget();\n  };\n\n  WebGLRenderer.prototype.getMaxAnisotropy = function () {\n    console.warn('THREE.WebGLRenderer: .getMaxAnisotropy() is now .capabilities.getMaxAnisotropy().');\n    return this.capabilities.getMaxAnisotropy();\n  };\n\n  WebGLRenderer.prototype.getPrecision = function () {\n    console.warn('THREE.WebGLRenderer: .getPrecision() is now .capabilities.precision.');\n    return this.capabilities.precision;\n  };\n\n  WebGLRenderer.prototype.resetGLState = function () {\n    console.warn('THREE.WebGLRenderer: .resetGLState() is now .state.reset().');\n    return this.state.reset();\n  };\n\n  WebGLRenderer.prototype.supportsFloatTextures = function () {\n    console.warn('THREE.WebGLRenderer: .supportsFloatTextures() is now .extensions.get( \\'OES_texture_float\\' ).');\n    return this.extensions.get('OES_texture_float');\n  };\n\n  WebGLRenderer.prototype.supportsHalfFloatTextures = function () {\n    console.warn('THREE.WebGLRenderer: .supportsHalfFloatTextures() is now .extensions.get( \\'OES_texture_half_float\\' ).');\n    return this.extensions.get('OES_texture_half_float');\n  };\n\n  WebGLRenderer.prototype.supportsStandardDerivatives = function () {\n    console.warn('THREE.WebGLRenderer: .supportsStandardDerivatives() is now .extensions.get( \\'OES_standard_derivatives\\' ).');\n    return this.extensions.get('OES_standard_derivatives');\n  };\n\n  WebGLRenderer.prototype.supportsCompressedTextureS3TC = function () {\n    console.warn('THREE.WebGLRenderer: .supportsCompressedTextureS3TC() is now .extensions.get( \\'WEBGL_compressed_texture_s3tc\\' ).');\n    return this.extensions.get('WEBGL_compressed_texture_s3tc');\n  };\n\n  WebGLRenderer.prototype.supportsCompressedTexturePVRTC = function () {\n    console.warn('THREE.WebGLRenderer: .supportsCompressedTexturePVRTC() is now .extensions.get( \\'WEBGL_compressed_texture_pvrtc\\' ).');\n    return this.extensions.get('WEBGL_compressed_texture_pvrtc');\n  };\n\n  WebGLRenderer.prototype.supportsBlendMinMax = function () {\n    console.warn('THREE.WebGLRenderer: .supportsBlendMinMax() is now .extensions.get( \\'EXT_blend_minmax\\' ).');\n    return this.extensions.get('EXT_blend_minmax');\n  };\n\n  WebGLRenderer.prototype.supportsVertexTextures = function () {\n    console.warn('THREE.WebGLRenderer: .supportsVertexTextures() is now .capabilities.vertexTextures.');\n    return this.capabilities.vertexTextures;\n  };\n\n  WebGLRenderer.prototype.supportsInstancedArrays = function () {\n    console.warn('THREE.WebGLRenderer: .supportsInstancedArrays() is now .extensions.get( \\'ANGLE_instanced_arrays\\' ).');\n    return this.extensions.get('ANGLE_instanced_arrays');\n  };\n\n  WebGLRenderer.prototype.enableScissorTest = function (boolean) {\n    console.warn('THREE.WebGLRenderer: .enableScissorTest() is now .setScissorTest().');\n    this.setScissorTest(boolean);\n  };\n\n  WebGLRenderer.prototype.initMaterial = function () {\n    console.warn('THREE.WebGLRenderer: .initMaterial() has been removed.');\n  };\n\n  WebGLRenderer.prototype.addPrePlugin = function () {\n    console.warn('THREE.WebGLRenderer: .addPrePlugin() has been removed.');\n  };\n\n  WebGLRenderer.prototype.addPostPlugin = function () {\n    console.warn('THREE.WebGLRenderer: .addPostPlugin() has been removed.');\n  };\n\n  WebGLRenderer.prototype.updateShadowMap = function () {\n    console.warn('THREE.WebGLRenderer: .updateShadowMap() has been removed.');\n  };\n\n  WebGLRenderer.prototype.setFaceCulling = function () {\n    console.warn('THREE.WebGLRenderer: .setFaceCulling() has been removed.');\n  };\n\n  WebGLRenderer.prototype.allocTextureUnit = function () {\n    console.warn('THREE.WebGLRenderer: .allocTextureUnit() has been removed.');\n  };\n\n  WebGLRenderer.prototype.setTexture = function () {\n    console.warn('THREE.WebGLRenderer: .setTexture() has been removed.');\n  };\n\n  WebGLRenderer.prototype.setTexture2D = function () {\n    console.warn('THREE.WebGLRenderer: .setTexture2D() has been removed.');\n  };\n\n  WebGLRenderer.prototype.setTextureCube = function () {\n    console.warn('THREE.WebGLRenderer: .setTextureCube() has been removed.');\n  };\n\n  WebGLRenderer.prototype.getActiveMipMapLevel = function () {\n    console.warn('THREE.WebGLRenderer: .getActiveMipMapLevel() is now .getActiveMipmapLevel().');\n    return this.getActiveMipmapLevel();\n  };\n\n  Object.defineProperties(WebGLRenderer.prototype, {\n    shadowMapEnabled: {\n      get: function get() {\n        return this.shadowMap.enabled;\n      },\n      set: function set(value) {\n        console.warn('THREE.WebGLRenderer: .shadowMapEnabled is now .shadowMap.enabled.');\n        this.shadowMap.enabled = value;\n      }\n    },\n    shadowMapType: {\n      get: function get() {\n        return this.shadowMap.type;\n      },\n      set: function set(value) {\n        console.warn('THREE.WebGLRenderer: .shadowMapType is now .shadowMap.type.');\n        this.shadowMap.type = value;\n      }\n    },\n    shadowMapCullFace: {\n      get: function get() {\n        console.warn('THREE.WebGLRenderer: .shadowMapCullFace has been removed. Set Material.shadowSide instead.');\n        return undefined;\n      },\n      set: function set() {\n        console.warn('THREE.WebGLRenderer: .shadowMapCullFace has been removed. Set Material.shadowSide instead.');\n      }\n    },\n    context: {\n      get: function get() {\n        console.warn('THREE.WebGLRenderer: .context has been removed. Use .getContext() instead.');\n        return this.getContext();\n      }\n    },\n    vr: {\n      get: function get() {\n        console.warn('THREE.WebGLRenderer: .vr has been renamed to .xr');\n        return this.xr;\n      }\n    },\n    gammaInput: {\n      get: function get() {\n        console.warn('THREE.WebGLRenderer: .gammaInput has been removed. Set the encoding for textures via Texture.encoding instead.');\n        return false;\n      },\n      set: function set() {\n        console.warn('THREE.WebGLRenderer: .gammaInput has been removed. Set the encoding for textures via Texture.encoding instead.');\n      }\n    },\n    gammaOutput: {\n      get: function get() {\n        console.warn('THREE.WebGLRenderer: .gammaOutput has been removed. Set WebGLRenderer.outputEncoding instead.');\n        return false;\n      },\n      set: function set(value) {\n        console.warn('THREE.WebGLRenderer: .gammaOutput has been removed. Set WebGLRenderer.outputEncoding instead.');\n        this.outputEncoding = value === true ? sRGBEncoding : LinearEncoding;\n      }\n    },\n    toneMappingWhitePoint: {\n      get: function get() {\n        console.warn('THREE.WebGLRenderer: .toneMappingWhitePoint has been removed.');\n        return 1.0;\n      },\n      set: function set() {\n        console.warn('THREE.WebGLRenderer: .toneMappingWhitePoint has been removed.');\n      }\n    }\n  });\n  Object.defineProperties(WebGLShadowMap.prototype, {\n    cullFace: {\n      get: function get() {\n        console.warn('THREE.WebGLRenderer: .shadowMap.cullFace has been removed. Set Material.shadowSide instead.');\n        return undefined;\n      },\n      set: function set() {\n        console.warn('THREE.WebGLRenderer: .shadowMap.cullFace has been removed. Set Material.shadowSide instead.');\n      }\n    },\n    renderReverseSided: {\n      get: function get() {\n        console.warn('THREE.WebGLRenderer: .shadowMap.renderReverseSided has been removed. Set Material.shadowSide instead.');\n        return undefined;\n      },\n      set: function set() {\n        console.warn('THREE.WebGLRenderer: .shadowMap.renderReverseSided has been removed. Set Material.shadowSide instead.');\n      }\n    },\n    renderSingleSided: {\n      get: function get() {\n        console.warn('THREE.WebGLRenderer: .shadowMap.renderSingleSided has been removed. Set Material.shadowSide instead.');\n        return undefined;\n      },\n      set: function set() {\n        console.warn('THREE.WebGLRenderer: .shadowMap.renderSingleSided has been removed. Set Material.shadowSide instead.');\n      }\n    }\n  });\n\n  function WebGLRenderTargetCube(width, height, options) {\n    console.warn('THREE.WebGLRenderTargetCube( width, height, options ) is now WebGLCubeRenderTarget( size, options ).');\n    return new WebGLCubeRenderTarget(width, options);\n  } //\n\n\n  Object.defineProperties(WebGLRenderTarget.prototype, {\n    wrapS: {\n      get: function get() {\n        console.warn('THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS.');\n        return this.texture.wrapS;\n      },\n      set: function set(value) {\n        console.warn('THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS.');\n        this.texture.wrapS = value;\n      }\n    },\n    wrapT: {\n      get: function get() {\n        console.warn('THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT.');\n        return this.texture.wrapT;\n      },\n      set: function set(value) {\n        console.warn('THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT.');\n        this.texture.wrapT = value;\n      }\n    },\n    magFilter: {\n      get: function get() {\n        console.warn('THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter.');\n        return this.texture.magFilter;\n      },\n      set: function set(value) {\n        console.warn('THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter.');\n        this.texture.magFilter = value;\n      }\n    },\n    minFilter: {\n      get: function get() {\n        console.warn('THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter.');\n        return this.texture.minFilter;\n      },\n      set: function set(value) {\n        console.warn('THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter.');\n        this.texture.minFilter = value;\n      }\n    },\n    anisotropy: {\n      get: function get() {\n        console.warn('THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy.');\n        return this.texture.anisotropy;\n      },\n      set: function set(value) {\n        console.warn('THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy.');\n        this.texture.anisotropy = value;\n      }\n    },\n    offset: {\n      get: function get() {\n        console.warn('THREE.WebGLRenderTarget: .offset is now .texture.offset.');\n        return this.texture.offset;\n      },\n      set: function set(value) {\n        console.warn('THREE.WebGLRenderTarget: .offset is now .texture.offset.');\n        this.texture.offset = value;\n      }\n    },\n    repeat: {\n      get: function get() {\n        console.warn('THREE.WebGLRenderTarget: .repeat is now .texture.repeat.');\n        return this.texture.repeat;\n      },\n      set: function set(value) {\n        console.warn('THREE.WebGLRenderTarget: .repeat is now .texture.repeat.');\n        this.texture.repeat = value;\n      }\n    },\n    format: {\n      get: function get() {\n        console.warn('THREE.WebGLRenderTarget: .format is now .texture.format.');\n        return this.texture.format;\n      },\n      set: function set(value) {\n        console.warn('THREE.WebGLRenderTarget: .format is now .texture.format.');\n        this.texture.format = value;\n      }\n    },\n    type: {\n      get: function get() {\n        console.warn('THREE.WebGLRenderTarget: .type is now .texture.type.');\n        return this.texture.type;\n      },\n      set: function set(value) {\n        console.warn('THREE.WebGLRenderTarget: .type is now .texture.type.');\n        this.texture.type = value;\n      }\n    },\n    generateMipmaps: {\n      get: function get() {\n        console.warn('THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps.');\n        return this.texture.generateMipmaps;\n      },\n      set: function set(value) {\n        console.warn('THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps.');\n        this.texture.generateMipmaps = value;\n      }\n    }\n  }); //\n\n  Audio.prototype.load = function (file) {\n    console.warn('THREE.Audio: .load has been deprecated. Use THREE.AudioLoader instead.');\n    var scope = this;\n    var audioLoader = new AudioLoader();\n    audioLoader.load(file, function (buffer) {\n      scope.setBuffer(buffer);\n    });\n    return this;\n  };\n\n  AudioAnalyser.prototype.getData = function () {\n    console.warn('THREE.AudioAnalyser: .getData() is now .getFrequencyData().');\n    return this.getFrequencyData();\n  }; //\n\n\n  CubeCamera.prototype.updateCubeMap = function (renderer, scene) {\n    console.warn('THREE.CubeCamera: .updateCubeMap() is now .update().');\n    return this.update(renderer, scene);\n  };\n\n  CubeCamera.prototype.clear = function (renderer, color, depth, stencil) {\n    console.warn('THREE.CubeCamera: .clear() is now .renderTarget.clear().');\n    return this.renderTarget.clear(renderer, color, depth, stencil);\n  };\n\n  ImageUtils.crossOrigin = undefined;\n\n  ImageUtils.loadTexture = function (url, mapping, onLoad, onError) {\n    console.warn('THREE.ImageUtils.loadTexture has been deprecated. Use THREE.TextureLoader() instead.');\n    var loader = new TextureLoader();\n    loader.setCrossOrigin(this.crossOrigin);\n    var texture = loader.load(url, onLoad, undefined, onError);\n    if (mapping) texture.mapping = mapping;\n    return texture;\n  };\n\n  ImageUtils.loadTextureCube = function (urls, mapping, onLoad, onError) {\n    console.warn('THREE.ImageUtils.loadTextureCube has been deprecated. Use THREE.CubeTextureLoader() instead.');\n    var loader = new CubeTextureLoader();\n    loader.setCrossOrigin(this.crossOrigin);\n    var texture = loader.load(urls, onLoad, undefined, onError);\n    if (mapping) texture.mapping = mapping;\n    return texture;\n  };\n\n  ImageUtils.loadCompressedTexture = function () {\n    console.error('THREE.ImageUtils.loadCompressedTexture has been removed. Use THREE.DDSLoader instead.');\n  };\n\n  ImageUtils.loadCompressedTextureCube = function () {\n    console.error('THREE.ImageUtils.loadCompressedTextureCube has been removed. Use THREE.DDSLoader instead.');\n  }; //\n\n\n  function CanvasRenderer() {\n    console.error('THREE.CanvasRenderer has been removed');\n  } //\n\n\n  function JSONLoader() {\n    console.error('THREE.JSONLoader has been removed.');\n  } //\n\n\n  var SceneUtils = {\n    createMultiMaterialObject: function createMultiMaterialObject() {\n      console.error('THREE.SceneUtils has been moved to /examples/jsm/utils/SceneUtils.js');\n    },\n    detach: function detach() {\n      console.error('THREE.SceneUtils has been moved to /examples/jsm/utils/SceneUtils.js');\n    },\n    attach: function attach() {\n      console.error('THREE.SceneUtils has been moved to /examples/jsm/utils/SceneUtils.js');\n    }\n  }; //\n\n  function LensFlare() {\n    console.error('THREE.LensFlare has been moved to /examples/jsm/objects/Lensflare.js');\n  } //\n\n\n  function ParametricGeometry() {\n    console.error('THREE.ParametricGeometry has been moved to /examples/jsm/geometries/ParametricGeometry.js');\n    return new BufferGeometry();\n  }\n\n  function TextGeometry() {\n    console.error('THREE.TextGeometry has been moved to /examples/jsm/geometries/TextGeometry.js');\n    return new BufferGeometry();\n  }\n\n  function FontLoader() {\n    console.error('THREE.FontLoader has been moved to /examples/jsm/loaders/FontLoader.js');\n  }\n\n  function Font() {\n    console.error('THREE.Font has been moved to /examples/jsm/loaders/FontLoader.js');\n  }\n\n  function ImmediateRenderObject() {\n    console.error('THREE.ImmediateRenderObject has been removed.');\n  }\n\n  if (typeof __THREE_DEVTOOLS__ !== 'undefined') {\n    /* eslint-disable no-undef */\n    __THREE_DEVTOOLS__.dispatchEvent(new CustomEvent('register', {\n      detail: {\n        revision: REVISION\n      }\n    }));\n    /* eslint-enable no-undef */\n\n  }\n\n  if (typeof window !== 'undefined') {\n    if (window.__THREE__) {\n      console.warn('WARNING: Multiple instances of Three.js being imported.');\n    } else {\n      window.__THREE__ = REVISION;\n    }\n  }\n\n  exports.ACESFilmicToneMapping = ACESFilmicToneMapping;\n  exports.AddEquation = AddEquation;\n  exports.AddOperation = AddOperation;\n  exports.AdditiveAnimationBlendMode = AdditiveAnimationBlendMode;\n  exports.AdditiveBlending = AdditiveBlending;\n  exports.AlphaFormat = AlphaFormat;\n  exports.AlwaysDepth = AlwaysDepth;\n  exports.AlwaysStencilFunc = AlwaysStencilFunc;\n  exports.AmbientLight = AmbientLight;\n  exports.AmbientLightProbe = AmbientLightProbe;\n  exports.AnimationClip = AnimationClip;\n  exports.AnimationLoader = AnimationLoader;\n  exports.AnimationMixer = AnimationMixer;\n  exports.AnimationObjectGroup = AnimationObjectGroup;\n  exports.AnimationUtils = AnimationUtils;\n  exports.ArcCurve = ArcCurve;\n  exports.ArrayCamera = ArrayCamera;\n  exports.ArrowHelper = ArrowHelper;\n  exports.Audio = Audio;\n  exports.AudioAnalyser = AudioAnalyser;\n  exports.AudioContext = AudioContext;\n  exports.AudioListener = AudioListener;\n  exports.AudioLoader = AudioLoader;\n  exports.AxesHelper = AxesHelper;\n  exports.AxisHelper = AxisHelper;\n  exports.BackSide = BackSide;\n  exports.BasicDepthPacking = BasicDepthPacking;\n  exports.BasicShadowMap = BasicShadowMap;\n  exports.BinaryTextureLoader = BinaryTextureLoader;\n  exports.Bone = Bone;\n  exports.BooleanKeyframeTrack = BooleanKeyframeTrack;\n  exports.BoundingBoxHelper = BoundingBoxHelper;\n  exports.Box2 = Box2;\n  exports.Box3 = Box3;\n  exports.Box3Helper = Box3Helper;\n  exports.BoxBufferGeometry = BoxGeometry;\n  exports.BoxGeometry = BoxGeometry;\n  exports.BoxHelper = BoxHelper;\n  exports.BufferAttribute = BufferAttribute;\n  exports.BufferGeometry = BufferGeometry;\n  exports.BufferGeometryLoader = BufferGeometryLoader;\n  exports.ByteType = ByteType;\n  exports.Cache = Cache;\n  exports.Camera = Camera;\n  exports.CameraHelper = CameraHelper;\n  exports.CanvasRenderer = CanvasRenderer;\n  exports.CanvasTexture = CanvasTexture;\n  exports.CatmullRomCurve3 = CatmullRomCurve3;\n  exports.CineonToneMapping = CineonToneMapping;\n  exports.CircleBufferGeometry = CircleGeometry;\n  exports.CircleGeometry = CircleGeometry;\n  exports.ClampToEdgeWrapping = ClampToEdgeWrapping;\n  exports.Clock = Clock;\n  exports.Color = Color;\n  exports.ColorKeyframeTrack = ColorKeyframeTrack;\n  exports.CompressedTexture = CompressedTexture;\n  exports.CompressedTextureLoader = CompressedTextureLoader;\n  exports.ConeBufferGeometry = ConeGeometry;\n  exports.ConeGeometry = ConeGeometry;\n  exports.CubeCamera = CubeCamera;\n  exports.CubeReflectionMapping = CubeReflectionMapping;\n  exports.CubeRefractionMapping = CubeRefractionMapping;\n  exports.CubeTexture = CubeTexture;\n  exports.CubeTextureLoader = CubeTextureLoader;\n  exports.CubeUVReflectionMapping = CubeUVReflectionMapping;\n  exports.CubeUVRefractionMapping = CubeUVRefractionMapping;\n  exports.CubicBezierCurve = CubicBezierCurve;\n  exports.CubicBezierCurve3 = CubicBezierCurve3;\n  exports.CubicInterpolant = CubicInterpolant;\n  exports.CullFaceBack = CullFaceBack;\n  exports.CullFaceFront = CullFaceFront;\n  exports.CullFaceFrontBack = CullFaceFrontBack;\n  exports.CullFaceNone = CullFaceNone;\n  exports.Curve = Curve;\n  exports.CurvePath = CurvePath;\n  exports.CustomBlending = CustomBlending;\n  exports.CustomToneMapping = CustomToneMapping;\n  exports.CylinderBufferGeometry = CylinderGeometry;\n  exports.CylinderGeometry = CylinderGeometry;\n  exports.Cylindrical = Cylindrical;\n  exports.DataTexture = DataTexture;\n  exports.DataTexture2DArray = DataTexture2DArray;\n  exports.DataTexture3D = DataTexture3D;\n  exports.DataTextureLoader = DataTextureLoader;\n  exports.DataUtils = DataUtils;\n  exports.DecrementStencilOp = DecrementStencilOp;\n  exports.DecrementWrapStencilOp = DecrementWrapStencilOp;\n  exports.DefaultLoadingManager = DefaultLoadingManager;\n  exports.DepthFormat = DepthFormat;\n  exports.DepthStencilFormat = DepthStencilFormat;\n  exports.DepthTexture = DepthTexture;\n  exports.DirectionalLight = DirectionalLight;\n  exports.DirectionalLightHelper = DirectionalLightHelper;\n  exports.DiscreteInterpolant = DiscreteInterpolant;\n  exports.DodecahedronBufferGeometry = DodecahedronGeometry;\n  exports.DodecahedronGeometry = DodecahedronGeometry;\n  exports.DoubleSide = DoubleSide;\n  exports.DstAlphaFactor = DstAlphaFactor;\n  exports.DstColorFactor = DstColorFactor;\n  exports.DynamicBufferAttribute = DynamicBufferAttribute;\n  exports.DynamicCopyUsage = DynamicCopyUsage;\n  exports.DynamicDrawUsage = DynamicDrawUsage;\n  exports.DynamicReadUsage = DynamicReadUsage;\n  exports.EdgesGeometry = EdgesGeometry;\n  exports.EdgesHelper = EdgesHelper;\n  exports.EllipseCurve = EllipseCurve;\n  exports.EqualDepth = EqualDepth;\n  exports.EqualStencilFunc = EqualStencilFunc;\n  exports.EquirectangularReflectionMapping = EquirectangularReflectionMapping;\n  exports.EquirectangularRefractionMapping = EquirectangularRefractionMapping;\n  exports.Euler = Euler;\n  exports.EventDispatcher = EventDispatcher;\n  exports.ExtrudeBufferGeometry = ExtrudeGeometry;\n  exports.ExtrudeGeometry = ExtrudeGeometry;\n  exports.FaceColors = FaceColors;\n  exports.FileLoader = FileLoader;\n  exports.FlatShading = FlatShading;\n  exports.Float16BufferAttribute = Float16BufferAttribute;\n  exports.Float32Attribute = Float32Attribute;\n  exports.Float32BufferAttribute = Float32BufferAttribute;\n  exports.Float64Attribute = Float64Attribute;\n  exports.Float64BufferAttribute = Float64BufferAttribute;\n  exports.FloatType = FloatType;\n  exports.Fog = Fog;\n  exports.FogExp2 = FogExp2;\n  exports.Font = Font;\n  exports.FontLoader = FontLoader;\n  exports.FrontSide = FrontSide;\n  exports.Frustum = Frustum;\n  exports.GLBufferAttribute = GLBufferAttribute;\n  exports.GLSL1 = GLSL1;\n  exports.GLSL3 = GLSL3;\n  exports.GammaEncoding = GammaEncoding;\n  exports.GreaterDepth = GreaterDepth;\n  exports.GreaterEqualDepth = GreaterEqualDepth;\n  exports.GreaterEqualStencilFunc = GreaterEqualStencilFunc;\n  exports.GreaterStencilFunc = GreaterStencilFunc;\n  exports.GridHelper = GridHelper;\n  exports.Group = Group;\n  exports.HalfFloatType = HalfFloatType;\n  exports.HemisphereLight = HemisphereLight;\n  exports.HemisphereLightHelper = HemisphereLightHelper;\n  exports.HemisphereLightProbe = HemisphereLightProbe;\n  exports.IcosahedronBufferGeometry = IcosahedronGeometry;\n  exports.IcosahedronGeometry = IcosahedronGeometry;\n  exports.ImageBitmapLoader = ImageBitmapLoader;\n  exports.ImageLoader = ImageLoader;\n  exports.ImageUtils = ImageUtils;\n  exports.ImmediateRenderObject = ImmediateRenderObject;\n  exports.IncrementStencilOp = IncrementStencilOp;\n  exports.IncrementWrapStencilOp = IncrementWrapStencilOp;\n  exports.InstancedBufferAttribute = InstancedBufferAttribute;\n  exports.InstancedBufferGeometry = InstancedBufferGeometry;\n  exports.InstancedInterleavedBuffer = InstancedInterleavedBuffer;\n  exports.InstancedMesh = InstancedMesh;\n  exports.Int16Attribute = Int16Attribute;\n  exports.Int16BufferAttribute = Int16BufferAttribute;\n  exports.Int32Attribute = Int32Attribute;\n  exports.Int32BufferAttribute = Int32BufferAttribute;\n  exports.Int8Attribute = Int8Attribute;\n  exports.Int8BufferAttribute = Int8BufferAttribute;\n  exports.IntType = IntType;\n  exports.InterleavedBuffer = InterleavedBuffer;\n  exports.InterleavedBufferAttribute = InterleavedBufferAttribute;\n  exports.Interpolant = Interpolant;\n  exports.InterpolateDiscrete = InterpolateDiscrete;\n  exports.InterpolateLinear = InterpolateLinear;\n  exports.InterpolateSmooth = InterpolateSmooth;\n  exports.InvertStencilOp = InvertStencilOp;\n  exports.JSONLoader = JSONLoader;\n  exports.KeepStencilOp = KeepStencilOp;\n  exports.KeyframeTrack = KeyframeTrack;\n  exports.LOD = LOD;\n  exports.LatheBufferGeometry = LatheGeometry;\n  exports.LatheGeometry = LatheGeometry;\n  exports.Layers = Layers;\n  exports.LensFlare = LensFlare;\n  exports.LessDepth = LessDepth;\n  exports.LessEqualDepth = LessEqualDepth;\n  exports.LessEqualStencilFunc = LessEqualStencilFunc;\n  exports.LessStencilFunc = LessStencilFunc;\n  exports.Light = Light;\n  exports.LightProbe = LightProbe;\n  exports.Line = Line;\n  exports.Line3 = Line3;\n  exports.LineBasicMaterial = LineBasicMaterial;\n  exports.LineCurve = LineCurve;\n  exports.LineCurve3 = LineCurve3;\n  exports.LineDashedMaterial = LineDashedMaterial;\n  exports.LineLoop = LineLoop;\n  exports.LinePieces = LinePieces;\n  exports.LineSegments = LineSegments;\n  exports.LineStrip = LineStrip;\n  exports.LinearEncoding = LinearEncoding;\n  exports.LinearFilter = LinearFilter;\n  exports.LinearInterpolant = LinearInterpolant;\n  exports.LinearMipMapLinearFilter = LinearMipMapLinearFilter;\n  exports.LinearMipMapNearestFilter = LinearMipMapNearestFilter;\n  exports.LinearMipmapLinearFilter = LinearMipmapLinearFilter;\n  exports.LinearMipmapNearestFilter = LinearMipmapNearestFilter;\n  exports.LinearToneMapping = LinearToneMapping;\n  exports.Loader = Loader;\n  exports.LoaderUtils = LoaderUtils;\n  exports.LoadingManager = LoadingManager;\n  exports.LogLuvEncoding = LogLuvEncoding;\n  exports.LoopOnce = LoopOnce;\n  exports.LoopPingPong = LoopPingPong;\n  exports.LoopRepeat = LoopRepeat;\n  exports.LuminanceAlphaFormat = LuminanceAlphaFormat;\n  exports.LuminanceFormat = LuminanceFormat;\n  exports.MOUSE = MOUSE;\n  exports.Material = Material;\n  exports.MaterialLoader = MaterialLoader;\n  exports.Math = MathUtils;\n  exports.MathUtils = MathUtils;\n  exports.Matrix3 = Matrix3;\n  exports.Matrix4 = Matrix4;\n  exports.MaxEquation = MaxEquation;\n  exports.Mesh = Mesh;\n  exports.MeshBasicMaterial = MeshBasicMaterial;\n  exports.MeshDepthMaterial = MeshDepthMaterial;\n  exports.MeshDistanceMaterial = MeshDistanceMaterial;\n  exports.MeshFaceMaterial = MeshFaceMaterial;\n  exports.MeshLambertMaterial = MeshLambertMaterial;\n  exports.MeshMatcapMaterial = MeshMatcapMaterial;\n  exports.MeshNormalMaterial = MeshNormalMaterial;\n  exports.MeshPhongMaterial = MeshPhongMaterial;\n  exports.MeshPhysicalMaterial = MeshPhysicalMaterial;\n  exports.MeshStandardMaterial = MeshStandardMaterial;\n  exports.MeshToonMaterial = MeshToonMaterial;\n  exports.MinEquation = MinEquation;\n  exports.MirroredRepeatWrapping = MirroredRepeatWrapping;\n  exports.MixOperation = MixOperation;\n  exports.MultiMaterial = MultiMaterial;\n  exports.MultiplyBlending = MultiplyBlending;\n  exports.MultiplyOperation = MultiplyOperation;\n  exports.NearestFilter = NearestFilter;\n  exports.NearestMipMapLinearFilter = NearestMipMapLinearFilter;\n  exports.NearestMipMapNearestFilter = NearestMipMapNearestFilter;\n  exports.NearestMipmapLinearFilter = NearestMipmapLinearFilter;\n  exports.NearestMipmapNearestFilter = NearestMipmapNearestFilter;\n  exports.NeverDepth = NeverDepth;\n  exports.NeverStencilFunc = NeverStencilFunc;\n  exports.NoBlending = NoBlending;\n  exports.NoColors = NoColors;\n  exports.NoToneMapping = NoToneMapping;\n  exports.NormalAnimationBlendMode = NormalAnimationBlendMode;\n  exports.NormalBlending = NormalBlending;\n  exports.NotEqualDepth = NotEqualDepth;\n  exports.NotEqualStencilFunc = NotEqualStencilFunc;\n  exports.NumberKeyframeTrack = NumberKeyframeTrack;\n  exports.Object3D = Object3D;\n  exports.ObjectLoader = ObjectLoader;\n  exports.ObjectSpaceNormalMap = ObjectSpaceNormalMap;\n  exports.OctahedronBufferGeometry = OctahedronGeometry;\n  exports.OctahedronGeometry = OctahedronGeometry;\n  exports.OneFactor = OneFactor;\n  exports.OneMinusDstAlphaFactor = OneMinusDstAlphaFactor;\n  exports.OneMinusDstColorFactor = OneMinusDstColorFactor;\n  exports.OneMinusSrcAlphaFactor = OneMinusSrcAlphaFactor;\n  exports.OneMinusSrcColorFactor = OneMinusSrcColorFactor;\n  exports.OrthographicCamera = OrthographicCamera;\n  exports.PCFShadowMap = PCFShadowMap;\n  exports.PCFSoftShadowMap = PCFSoftShadowMap;\n  exports.PMREMGenerator = PMREMGenerator;\n  exports.ParametricGeometry = ParametricGeometry;\n  exports.Particle = Particle;\n  exports.ParticleBasicMaterial = ParticleBasicMaterial;\n  exports.ParticleSystem = ParticleSystem;\n  exports.ParticleSystemMaterial = ParticleSystemMaterial;\n  exports.Path = Path;\n  exports.PerspectiveCamera = PerspectiveCamera;\n  exports.Plane = Plane;\n  exports.PlaneBufferGeometry = PlaneGeometry;\n  exports.PlaneGeometry = PlaneGeometry;\n  exports.PlaneHelper = PlaneHelper;\n  exports.PointCloud = PointCloud;\n  exports.PointCloudMaterial = PointCloudMaterial;\n  exports.PointLight = PointLight;\n  exports.PointLightHelper = PointLightHelper;\n  exports.Points = Points;\n  exports.PointsMaterial = PointsMaterial;\n  exports.PolarGridHelper = PolarGridHelper;\n  exports.PolyhedronBufferGeometry = PolyhedronGeometry;\n  exports.PolyhedronGeometry = PolyhedronGeometry;\n  exports.PositionalAudio = PositionalAudio;\n  exports.PropertyBinding = PropertyBinding;\n  exports.PropertyMixer = PropertyMixer;\n  exports.QuadraticBezierCurve = QuadraticBezierCurve;\n  exports.QuadraticBezierCurve3 = QuadraticBezierCurve3;\n  exports.Quaternion = Quaternion;\n  exports.QuaternionKeyframeTrack = QuaternionKeyframeTrack;\n  exports.QuaternionLinearInterpolant = QuaternionLinearInterpolant;\n  exports.REVISION = REVISION;\n  exports.RGBADepthPacking = RGBADepthPacking;\n  exports.RGBAFormat = RGBAFormat;\n  exports.RGBAIntegerFormat = RGBAIntegerFormat;\n  exports.RGBA_ASTC_10x10_Format = RGBA_ASTC_10x10_Format;\n  exports.RGBA_ASTC_10x5_Format = RGBA_ASTC_10x5_Format;\n  exports.RGBA_ASTC_10x6_Format = RGBA_ASTC_10x6_Format;\n  exports.RGBA_ASTC_10x8_Format = RGBA_ASTC_10x8_Format;\n  exports.RGBA_ASTC_12x10_Format = RGBA_ASTC_12x10_Format;\n  exports.RGBA_ASTC_12x12_Format = RGBA_ASTC_12x12_Format;\n  exports.RGBA_ASTC_4x4_Format = RGBA_ASTC_4x4_Format;\n  exports.RGBA_ASTC_5x4_Format = RGBA_ASTC_5x4_Format;\n  exports.RGBA_ASTC_5x5_Format = RGBA_ASTC_5x5_Format;\n  exports.RGBA_ASTC_6x5_Format = RGBA_ASTC_6x5_Format;\n  exports.RGBA_ASTC_6x6_Format = RGBA_ASTC_6x6_Format;\n  exports.RGBA_ASTC_8x5_Format = RGBA_ASTC_8x5_Format;\n  exports.RGBA_ASTC_8x6_Format = RGBA_ASTC_8x6_Format;\n  exports.RGBA_ASTC_8x8_Format = RGBA_ASTC_8x8_Format;\n  exports.RGBA_BPTC_Format = RGBA_BPTC_Format;\n  exports.RGBA_ETC2_EAC_Format = RGBA_ETC2_EAC_Format;\n  exports.RGBA_PVRTC_2BPPV1_Format = RGBA_PVRTC_2BPPV1_Format;\n  exports.RGBA_PVRTC_4BPPV1_Format = RGBA_PVRTC_4BPPV1_Format;\n  exports.RGBA_S3TC_DXT1_Format = RGBA_S3TC_DXT1_Format;\n  exports.RGBA_S3TC_DXT3_Format = RGBA_S3TC_DXT3_Format;\n  exports.RGBA_S3TC_DXT5_Format = RGBA_S3TC_DXT5_Format;\n  exports.RGBDEncoding = RGBDEncoding;\n  exports.RGBEEncoding = RGBEEncoding;\n  exports.RGBEFormat = RGBEFormat;\n  exports.RGBFormat = RGBFormat;\n  exports.RGBIntegerFormat = RGBIntegerFormat;\n  exports.RGBM16Encoding = RGBM16Encoding;\n  exports.RGBM7Encoding = RGBM7Encoding;\n  exports.RGB_ETC1_Format = RGB_ETC1_Format;\n  exports.RGB_ETC2_Format = RGB_ETC2_Format;\n  exports.RGB_PVRTC_2BPPV1_Format = RGB_PVRTC_2BPPV1_Format;\n  exports.RGB_PVRTC_4BPPV1_Format = RGB_PVRTC_4BPPV1_Format;\n  exports.RGB_S3TC_DXT1_Format = RGB_S3TC_DXT1_Format;\n  exports.RGFormat = RGFormat;\n  exports.RGIntegerFormat = RGIntegerFormat;\n  exports.RawShaderMaterial = RawShaderMaterial;\n  exports.Ray = Ray;\n  exports.Raycaster = Raycaster;\n  exports.RectAreaLight = RectAreaLight;\n  exports.RedFormat = RedFormat;\n  exports.RedIntegerFormat = RedIntegerFormat;\n  exports.ReinhardToneMapping = ReinhardToneMapping;\n  exports.RepeatWrapping = RepeatWrapping;\n  exports.ReplaceStencilOp = ReplaceStencilOp;\n  exports.ReverseSubtractEquation = ReverseSubtractEquation;\n  exports.RingBufferGeometry = RingGeometry;\n  exports.RingGeometry = RingGeometry;\n  exports.SRGB8_ALPHA8_ASTC_10x10_Format = SRGB8_ALPHA8_ASTC_10x10_Format;\n  exports.SRGB8_ALPHA8_ASTC_10x5_Format = SRGB8_ALPHA8_ASTC_10x5_Format;\n  exports.SRGB8_ALPHA8_ASTC_10x6_Format = SRGB8_ALPHA8_ASTC_10x6_Format;\n  exports.SRGB8_ALPHA8_ASTC_10x8_Format = SRGB8_ALPHA8_ASTC_10x8_Format;\n  exports.SRGB8_ALPHA8_ASTC_12x10_Format = SRGB8_ALPHA8_ASTC_12x10_Format;\n  exports.SRGB8_ALPHA8_ASTC_12x12_Format = SRGB8_ALPHA8_ASTC_12x12_Format;\n  exports.SRGB8_ALPHA8_ASTC_4x4_Format = SRGB8_ALPHA8_ASTC_4x4_Format;\n  exports.SRGB8_ALPHA8_ASTC_5x4_Format = SRGB8_ALPHA8_ASTC_5x4_Format;\n  exports.SRGB8_ALPHA8_ASTC_5x5_Format = SRGB8_ALPHA8_ASTC_5x5_Format;\n  exports.SRGB8_ALPHA8_ASTC_6x5_Format = SRGB8_ALPHA8_ASTC_6x5_Format;\n  exports.SRGB8_ALPHA8_ASTC_6x6_Format = SRGB8_ALPHA8_ASTC_6x6_Format;\n  exports.SRGB8_ALPHA8_ASTC_8x5_Format = SRGB8_ALPHA8_ASTC_8x5_Format;\n  exports.SRGB8_ALPHA8_ASTC_8x6_Format = SRGB8_ALPHA8_ASTC_8x6_Format;\n  exports.SRGB8_ALPHA8_ASTC_8x8_Format = SRGB8_ALPHA8_ASTC_8x8_Format;\n  exports.Scene = Scene;\n  exports.SceneUtils = SceneUtils;\n  exports.ShaderChunk = ShaderChunk;\n  exports.ShaderLib = ShaderLib;\n  exports.ShaderMaterial = ShaderMaterial;\n  exports.ShadowMaterial = ShadowMaterial;\n  exports.Shape = Shape;\n  exports.ShapeBufferGeometry = ShapeGeometry;\n  exports.ShapeGeometry = ShapeGeometry;\n  exports.ShapePath = ShapePath;\n  exports.ShapeUtils = ShapeUtils;\n  exports.ShortType = ShortType;\n  exports.Skeleton = Skeleton;\n  exports.SkeletonHelper = SkeletonHelper;\n  exports.SkinnedMesh = SkinnedMesh;\n  exports.SmoothShading = SmoothShading;\n  exports.Sphere = Sphere;\n  exports.SphereBufferGeometry = SphereGeometry;\n  exports.SphereGeometry = SphereGeometry;\n  exports.Spherical = Spherical;\n  exports.SphericalHarmonics3 = SphericalHarmonics3;\n  exports.SplineCurve = SplineCurve;\n  exports.SpotLight = SpotLight;\n  exports.SpotLightHelper = SpotLightHelper;\n  exports.Sprite = Sprite;\n  exports.SpriteMaterial = SpriteMaterial;\n  exports.SrcAlphaFactor = SrcAlphaFactor;\n  exports.SrcAlphaSaturateFactor = SrcAlphaSaturateFactor;\n  exports.SrcColorFactor = SrcColorFactor;\n  exports.StaticCopyUsage = StaticCopyUsage;\n  exports.StaticDrawUsage = StaticDrawUsage;\n  exports.StaticReadUsage = StaticReadUsage;\n  exports.StereoCamera = StereoCamera;\n  exports.StreamCopyUsage = StreamCopyUsage;\n  exports.StreamDrawUsage = StreamDrawUsage;\n  exports.StreamReadUsage = StreamReadUsage;\n  exports.StringKeyframeTrack = StringKeyframeTrack;\n  exports.SubtractEquation = SubtractEquation;\n  exports.SubtractiveBlending = SubtractiveBlending;\n  exports.TOUCH = TOUCH;\n  exports.TangentSpaceNormalMap = TangentSpaceNormalMap;\n  exports.TetrahedronBufferGeometry = TetrahedronGeometry;\n  exports.TetrahedronGeometry = TetrahedronGeometry;\n  exports.TextGeometry = TextGeometry;\n  exports.Texture = Texture;\n  exports.TextureLoader = TextureLoader;\n  exports.TorusBufferGeometry = TorusGeometry;\n  exports.TorusGeometry = TorusGeometry;\n  exports.TorusKnotBufferGeometry = TorusKnotGeometry;\n  exports.TorusKnotGeometry = TorusKnotGeometry;\n  exports.Triangle = Triangle;\n  exports.TriangleFanDrawMode = TriangleFanDrawMode;\n  exports.TriangleStripDrawMode = TriangleStripDrawMode;\n  exports.TrianglesDrawMode = TrianglesDrawMode;\n  exports.TubeBufferGeometry = TubeGeometry;\n  exports.TubeGeometry = TubeGeometry;\n  exports.UVMapping = UVMapping;\n  exports.Uint16Attribute = Uint16Attribute;\n  exports.Uint16BufferAttribute = Uint16BufferAttribute;\n  exports.Uint32Attribute = Uint32Attribute;\n  exports.Uint32BufferAttribute = Uint32BufferAttribute;\n  exports.Uint8Attribute = Uint8Attribute;\n  exports.Uint8BufferAttribute = Uint8BufferAttribute;\n  exports.Uint8ClampedAttribute = Uint8ClampedAttribute;\n  exports.Uint8ClampedBufferAttribute = Uint8ClampedBufferAttribute;\n  exports.Uniform = Uniform;\n  exports.UniformsLib = UniformsLib;\n  exports.UniformsUtils = UniformsUtils;\n  exports.UnsignedByteType = UnsignedByteType;\n  exports.UnsignedInt248Type = UnsignedInt248Type;\n  exports.UnsignedIntType = UnsignedIntType;\n  exports.UnsignedShort4444Type = UnsignedShort4444Type;\n  exports.UnsignedShort5551Type = UnsignedShort5551Type;\n  exports.UnsignedShort565Type = UnsignedShort565Type;\n  exports.UnsignedShortType = UnsignedShortType;\n  exports.VSMShadowMap = VSMShadowMap;\n  exports.Vector2 = Vector2;\n  exports.Vector3 = Vector3;\n  exports.Vector4 = Vector4;\n  exports.VectorKeyframeTrack = VectorKeyframeTrack;\n  exports.Vertex = Vertex;\n  exports.VertexColors = VertexColors;\n  exports.VideoTexture = VideoTexture;\n  exports.WebGL1Renderer = WebGL1Renderer;\n  exports.WebGLCubeRenderTarget = WebGLCubeRenderTarget;\n  exports.WebGLMultipleRenderTargets = WebGLMultipleRenderTargets;\n  exports.WebGLMultisampleRenderTarget = WebGLMultisampleRenderTarget;\n  exports.WebGLRenderTarget = WebGLRenderTarget;\n  exports.WebGLRenderTargetCube = WebGLRenderTargetCube;\n  exports.WebGLRenderer = WebGLRenderer;\n  exports.WebGLUtils = WebGLUtils;\n  exports.WireframeGeometry = WireframeGeometry;\n  exports.WireframeHelper = WireframeHelper;\n  exports.WrapAroundEnding = WrapAroundEnding;\n  exports.XHRLoader = XHRLoader;\n  exports.ZeroCurvatureEnding = ZeroCurvatureEnding;\n  exports.ZeroFactor = ZeroFactor;\n  exports.ZeroSlopeEnding = ZeroSlopeEnding;\n  exports.ZeroStencilOp = ZeroStencilOp;\n  exports.sRGBEncoding = sRGBEncoding;\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n});","map":{"version":3,"sources":["/Users/arnaudavocatgros/Documents/GitHub/arnaud18o5.github.io/node_modules/three/build/three.js"],"names":["global","factory","exports","module","define","amd","globalThis","self","THREE","REVISION","MOUSE","LEFT","MIDDLE","RIGHT","ROTATE","DOLLY","PAN","TOUCH","DOLLY_PAN","DOLLY_ROTATE","CullFaceNone","CullFaceBack","CullFaceFront","CullFaceFrontBack","BasicShadowMap","PCFShadowMap","PCFSoftShadowMap","VSMShadowMap","FrontSide","BackSide","DoubleSide","FlatShading","SmoothShading","NoBlending","NormalBlending","AdditiveBlending","SubtractiveBlending","MultiplyBlending","CustomBlending","AddEquation","SubtractEquation","ReverseSubtractEquation","MinEquation","MaxEquation","ZeroFactor","OneFactor","SrcColorFactor","OneMinusSrcColorFactor","SrcAlphaFactor","OneMinusSrcAlphaFactor","DstAlphaFactor","OneMinusDstAlphaFactor","DstColorFactor","OneMinusDstColorFactor","SrcAlphaSaturateFactor","NeverDepth","AlwaysDepth","LessDepth","LessEqualDepth","EqualDepth","GreaterEqualDepth","GreaterDepth","NotEqualDepth","MultiplyOperation","MixOperation","AddOperation","NoToneMapping","LinearToneMapping","ReinhardToneMapping","CineonToneMapping","ACESFilmicToneMapping","CustomToneMapping","UVMapping","CubeReflectionMapping","CubeRefractionMapping","EquirectangularReflectionMapping","EquirectangularRefractionMapping","CubeUVReflectionMapping","CubeUVRefractionMapping","RepeatWrapping","ClampToEdgeWrapping","MirroredRepeatWrapping","NearestFilter","NearestMipmapNearestFilter","NearestMipMapNearestFilter","NearestMipmapLinearFilter","NearestMipMapLinearFilter","LinearFilter","LinearMipmapNearestFilter","LinearMipMapNearestFilter","LinearMipmapLinearFilter","LinearMipMapLinearFilter","UnsignedByteType","ByteType","ShortType","UnsignedShortType","IntType","UnsignedIntType","FloatType","HalfFloatType","UnsignedShort4444Type","UnsignedShort5551Type","UnsignedShort565Type","UnsignedInt248Type","AlphaFormat","RGBFormat","RGBAFormat","LuminanceFormat","LuminanceAlphaFormat","RGBEFormat","DepthFormat","DepthStencilFormat","RedFormat","RedIntegerFormat","RGFormat","RGIntegerFormat","RGBIntegerFormat","RGBAIntegerFormat","RGB_S3TC_DXT1_Format","RGBA_S3TC_DXT1_Format","RGBA_S3TC_DXT3_Format","RGBA_S3TC_DXT5_Format","RGB_PVRTC_4BPPV1_Format","RGB_PVRTC_2BPPV1_Format","RGBA_PVRTC_4BPPV1_Format","RGBA_PVRTC_2BPPV1_Format","RGB_ETC1_Format","RGB_ETC2_Format","RGBA_ETC2_EAC_Format","RGBA_ASTC_4x4_Format","RGBA_ASTC_5x4_Format","RGBA_ASTC_5x5_Format","RGBA_ASTC_6x5_Format","RGBA_ASTC_6x6_Format","RGBA_ASTC_8x5_Format","RGBA_ASTC_8x6_Format","RGBA_ASTC_8x8_Format","RGBA_ASTC_10x5_Format","RGBA_ASTC_10x6_Format","RGBA_ASTC_10x8_Format","RGBA_ASTC_10x10_Format","RGBA_ASTC_12x10_Format","RGBA_ASTC_12x12_Format","RGBA_BPTC_Format","SRGB8_ALPHA8_ASTC_4x4_Format","SRGB8_ALPHA8_ASTC_5x4_Format","SRGB8_ALPHA8_ASTC_5x5_Format","SRGB8_ALPHA8_ASTC_6x5_Format","SRGB8_ALPHA8_ASTC_6x6_Format","SRGB8_ALPHA8_ASTC_8x5_Format","SRGB8_ALPHA8_ASTC_8x6_Format","SRGB8_ALPHA8_ASTC_8x8_Format","SRGB8_ALPHA8_ASTC_10x5_Format","SRGB8_ALPHA8_ASTC_10x6_Format","SRGB8_ALPHA8_ASTC_10x8_Format","SRGB8_ALPHA8_ASTC_10x10_Format","SRGB8_ALPHA8_ASTC_12x10_Format","SRGB8_ALPHA8_ASTC_12x12_Format","LoopOnce","LoopRepeat","LoopPingPong","InterpolateDiscrete","InterpolateLinear","InterpolateSmooth","ZeroCurvatureEnding","ZeroSlopeEnding","WrapAroundEnding","NormalAnimationBlendMode","AdditiveAnimationBlendMode","TrianglesDrawMode","TriangleStripDrawMode","TriangleFanDrawMode","LinearEncoding","sRGBEncoding","GammaEncoding","RGBEEncoding","LogLuvEncoding","RGBM7Encoding","RGBM16Encoding","RGBDEncoding","BasicDepthPacking","RGBADepthPacking","TangentSpaceNormalMap","ObjectSpaceNormalMap","ZeroStencilOp","KeepStencilOp","ReplaceStencilOp","IncrementStencilOp","DecrementStencilOp","IncrementWrapStencilOp","DecrementWrapStencilOp","InvertStencilOp","NeverStencilFunc","LessStencilFunc","EqualStencilFunc","LessEqualStencilFunc","GreaterStencilFunc","NotEqualStencilFunc","GreaterEqualStencilFunc","AlwaysStencilFunc","StaticDrawUsage","DynamicDrawUsage","StreamDrawUsage","StaticReadUsage","DynamicReadUsage","StreamReadUsage","StaticCopyUsage","DynamicCopyUsage","StreamCopyUsage","GLSL1","GLSL3","EventDispatcher","type","listener","_listeners","undefined","listeners","indexOf","push","listenerArray","index","splice","event","target","array","slice","i","l","length","call","_seed","DEG2RAD","Math","PI","RAD2DEG","_lut","toString","hasRandomUUID","crypto","generateUUID","randomUUID","toUpperCase","d0","random","d1","d2","d3","uuid","clamp","value","min","max","euclideanModulo","n","m","mapLinear","x","a1","a2","b1","b2","inverseLerp","y","lerp","t","damp","lambda","dt","exp","pingpong","abs","smoothstep","smootherstep","randInt","low","high","floor","randFloat","randFloatSpread","range","seededRandom","s","degToRad","degrees","radToDeg","radians","isPowerOfTwo","ceilPowerOfTwo","pow","ceil","log","LN2","floorPowerOfTwo","setQuaternionFromProperEuler","q","a","b","c","order","cos","sin","c2","s2","c13","s13","c1_3","s1_3","c3_1","s3_1","set","console","warn","MathUtils","Object","freeze","__proto__","Vector2","scalar","Error","constructor","v","w","addVectors","subVectors","multiplyScalar","e","elements","minVal","maxVal","divideScalar","round","sqrt","angle","atan2","distanceToSquared","dx","dy","normalize","alpha","v1","v2","offset","attribute","getX","getY","center","Symbol","iterator","prototype","isVector2","Matrix3","arguments","error","n11","n12","n13","n21","n22","n23","n31","n32","n33","te","me","xAxis","yAxis","zAxis","setFromMatrix3Column","multiplyMatrices","ae","be","a11","a12","a13","a21","a22","a23","a31","a32","a33","b11","b12","b13","b21","b22","b23","b31","b32","b33","d","f","g","h","t11","t12","t13","det","detInv","tmp","matrix4","setFromMatrix4","invert","transpose","r","tx","ty","sx","sy","rotation","cx","cy","theta","matrix","fromArray","isMatrix3","arrayMax","Infinity","TYPED_ARRAYS","Int8Array","Uint8Array","Uint8ClampedArray","Int16Array","Uint16Array","Int32Array","Uint32Array","Float32Array","Float64Array","getTypedArray","buffer","createElementNS","name","document","hashString","str","seed","h1","h2","ch","charCodeAt","imul","_canvas","ImageUtils","image","test","src","HTMLCanvasElement","canvas","width","height","context","getContext","ImageData","putImageData","drawImage","toDataURL","textureId","Texture","DEFAULT_IMAGE","mapping","DEFAULT_MAPPING","wrapS","wrapT","magFilter","minFilter","format","anisotropy","encoding","defineProperty","mipmaps","internalFormat","repeat","matrixAutoUpdate","generateMipmaps","premultiplyAlpha","flipY","unpackAlignment","userData","version","onUpdate","isRenderTargetTexture","setUvTransform","copy","source","JSON","parse","stringify","meta","isRootObject","textures","output","metadata","generator","wrap","images","url","Array","isArray","isDataTexture","serializeImage","dispatchEvent","uv","applyMatrix3","isTexture","HTMLImageElement","ImageBitmap","getDataURL","data","Vector4","z","acos","epsilon","epsilon2","m11","m12","m13","m21","m22","m23","m31","m32","m33","xx","yy","zz","xy","xz","yz","getZ","getW","isVector4","WebGLRenderTarget","options","depth","scissor","scissorTest","viewport","texture","depthBuffer","stencilBuffer","depthTexture","dispose","clone","isWebGLRenderTarget","WebGLMultipleRenderTargets","count","il","isWebGLMultipleRenderTargets","WebGLMultisampleRenderTarget","samples","isWebGLMultisampleRenderTarget","Quaternion","_x","_y","_z","_w","_onChangeCallback","quaternion","euler","update","isEuler","_order","c1","c3","s1","s3","axis","halfAngle","trace","vFrom","vTo","dot","Number","EPSILON","step","angleTo","slerp","conjugate","p","multiplyQuaternions","qax","qay","qaz","qaw","qbx","qby","qbz","qbw","qb","cosHalfTheta","sqrSinHalfTheta","sinHalfTheta","halfTheta","ratioA","ratioB","qa","u1","sqrt1u1","sqrtu1","u2","u3","callback","qm","slerpQuaternions","dst","dstOffset","src0","srcOffset0","src1","srcOffset1","x0","y0","z0","w0","x1","y1","z1","w1","dir","sqrSin","len","tDir","isQuaternion","Vector3","multiplyVectors","applyQuaternion","_quaternion$4","setFromEuler","setFromAxisAngle","qx","qy","qz","qw","ix","iy","iz","iw","camera","applyMatrix4","matrixWorldInverse","projectionMatrix","projectionMatrixInverse","matrixWorld","crossVectors","ax","ay","az","bx","by","bz","denominator","lengthSq","planeNormal","_vector$c","projectOnVector","sub","normal","dz","setFromSphericalCoords","radius","phi","sinPhiRadius","setFromCylindricalCoords","setFromMatrixColumn","sz","u","isVector3","Box3","minX","minY","minZ","maxX","maxY","maxZ","points","makeEmpty","expandByPoint","size","halfSize","_vector$b","add","object","expandByObject","box","isEmpty","point","vector","addScalar","updateWorldMatrix","geometry","boundingBox","computeBoundingBox","_box$3","union","children","sphere","clampPoint","plane","constant","triangle","getCenter","_center","_extents","_v0$2","_v1$7","_v2$3","_f0","_f1","_f2","axes","satForAxes","_triangleNormal","clampedPoint","getSize","_points","setFromPoints","equals","isBox3","_testAxis","v0","extents","j","p0","p1","p2","_box$2","_v1$6","_toFarthestPoint","_toPoint","Sphere","optionalCenter","maxRadiusSq","distanceTo","radiusSum","intersectsSphere","distanceToPoint","deltaLengthSq","expandByScalar","getMaxScaleOnAxis","missingRadiusHalf","_vector$a","_segCenter","_segDir","_diff","_edge1","_edge2","_normal$1","Ray","origin","direction","ray","at","directionDistance","distanceSqToPoint","optionalPointOnRay","optionalPointOnSegment","segExtent","a01","b0","s0","sqrDist","extDet","invDet","tca","radius2","thc","t0","t1","distanceToPlane","distToPoint","tmin","tmax","tymin","tymax","tzmin","tzmax","invdirx","invdiry","invdirz","intersectBox","backfaceCulling","DdN","sign","DdQxE2","DdE1xQ","cross","QdN","transformDirection","Matrix4","n14","n24","n34","n41","n42","n43","n44","scaleX","_v1$5","scaleY","scaleZ","af","bf","ce","cf","de","df","ac","ad","bc","bd","compose","_zero","_one","eye","up","a14","a24","a34","a41","a42","a43","a44","b14","b24","b34","b41","b42","b43","b44","t14","scaleXSq","scaleYSq","scaleZSq","yx","zx","zy","position","scale","x2","y2","z2","wx","wy","wz","determinant","_m1$2","invSX","invSY","invSZ","setFromRotationMatrix","left","right","top","bottom","near","far","isMatrix4","_matrix$1","_quaternion$3","Euler","DefaultOrder","asin","makeRotationFromQuaternion","newOrder","setFromQuaternion","optionalResult","RotationOrders","Layers","mask","channel","layers","_object3DId","_v1$4","_q1","_m1$1","_target","_position$3","_scale$2","_quaternion$2","_xAxis","_yAxis","_zAxis","_addedEvent","_removedEvent","Object3D","parent","DefaultUp","onRotationChange","onQuaternionChange","_onChange","defineProperties","configurable","enumerable","modelViewMatrix","normalMatrix","DefaultMatrixAutoUpdate","matrixWorldNeedsUpdate","visible","castShadow","receiveShadow","frustumCulled","renderOrder","animations","updateMatrix","premultiply","decompose","multiply","rotateOnAxis","distance","translateOnAxis","setFromMatrixPosition","isCamera","isLight","lookAt","extractRotation","isObject3D","remove","id","getObjectByProperty","child","traverse","traverseVisible","traverseAncestors","force","updateMatrixWorld","updateParents","updateChildren","geometries","materials","shapes","skeletons","toArray","isInstancedMesh","instanceMatrix","toJSON","instanceColor","serialize","library","element","isScene","background","isColor","environment","isMesh","isLine","isPoints","parameters","shape","isSkinnedMesh","bindMode","bindMatrix","skeleton","material","uuids","animation","extractFromCache","cache","values","key","recursive","_v0$1","_v1$3","_v2$2","_v3$1","_vab","_vac","_vbc","_vap","_vbp","_vcp","Triangle","i0","i1","i2","fromBufferAttribute","getNormal","setFromCoplanarPoints","getBarycoord","uv1","uv2","uv3","getUV","containsPoint","isFrontFacing","intersectsTriangle","d4","vc","addScaledVector","d5","d6","vb","va","denom","targetLengthSq","dot00","dot01","dot02","dot11","dot12","invDenom","p3","materialId","Material","fog","blending","side","vertexColors","opacity","transparent","blendSrc","blendDst","blendEquation","blendSrcAlpha","blendDstAlpha","blendEquationAlpha","depthFunc","depthTest","depthWrite","stencilWriteMask","stencilFunc","stencilRef","stencilFuncMask","stencilFail","stencilZFail","stencilZPass","stencilWrite","clippingPlanes","clipIntersection","clipShadows","shadowSide","colorWrite","precision","polygonOffset","polygonOffsetFactor","polygonOffsetUnits","dithering","alphaToCoverage","premultipliedAlpha","toneMapped","_alphaTest","onBeforeCompile","newValue","flatShading","currentValue","isRoot","color","getHex","roughness","metalness","sheen","sheenColor","sheenRoughness","emissive","emissiveIntensity","specular","specularIntensity","specularColor","shininess","clearcoat","clearcoatRoughness","clearcoatMap","clearcoatRoughnessMap","clearcoatNormalMap","clearcoatNormalScale","map","matcap","alphaMap","lightMap","lightMapIntensity","aoMap","aoMapIntensity","bumpMap","bumpScale","normalMap","normalMapType","normalScale","displacementMap","displacementScale","displacementBias","roughnessMap","metalnessMap","emissiveMap","specularMap","specularIntensityMap","specularColorMap","envMap","combine","envMapIntensity","reflectivity","refractionRatio","gradientMap","transmission","transmissionMap","thickness","thicknessMap","attenuationDistance","attenuationColor","sizeAttenuation","linewidth","dashSize","gapSize","alphaTest","wireframe","wireframeLinewidth","wireframeLinecap","wireframeLinejoin","srcPlanes","dstPlanes","isMaterial","_colorKeywords","_hslA","_hslB","hue2rgb","SRGBToLinear","LinearToSRGB","Color","setRGB","setHex","setStyle","hex","style","handleAlpha","string","parseFloat","exec","components","parseInt","setHSL","charAt","setColorName","toLowerCase","gammaFactor","safeInverse","copyGammaToLinear","copyLinearToGamma","copySRGBToLinear","copyLinearToSRGB","hue","saturation","lightness","delta","getHSL","color1","color2","normalized","NAMES","MeshBasicMaterial","setValues","isMeshBasicMaterial","_vector$9","_vector2$1","BufferAttribute","itemSize","TypeError","usage","updateRange","index1","index2","colors","vectors","setXY","setXYZ","applyNormalMatrix","onUploadCallback","isBufferAttribute","Int8BufferAttribute","Uint8BufferAttribute","Uint8ClampedBufferAttribute","Int16BufferAttribute","Uint16BufferAttribute","Int32BufferAttribute","Uint32BufferAttribute","Float16BufferAttribute","isFloat16BufferAttribute","Float32BufferAttribute","Float64BufferAttribute","_id","_m1","_obj","_offset","_box$1","_boxMorphTargets","_vector$8","BufferGeometry","attributes","morphAttributes","morphTargetsRelative","groups","boundingSphere","drawRange","start","materialIndex","needsUpdate","getNormalMatrix","tangent","computeBoundingSphere","makeRotationX","makeRotationY","makeRotationZ","makeTranslation","makeScale","negate","translate","setAttribute","morphAttributesPosition","isGLBufferAttribute","setFromBufferAttribute","morphAttribute","isNaN","jl","indices","positions","normals","uvs","nVertices","tangents","tan1","tan2","vA","vB","vC","uvA","uvB","uvC","sdir","tdir","handleTriangle","isFinite","group","tmp2","n2","handleVertex","positionAttribute","getAttribute","normalAttribute","pA","pB","pC","nA","nB","nC","cb","ab","normalizeNormals","isBufferGeometry","attribute1","attributeArray1","attribute2","attributeArray2","attributeOffset","convertBufferAttribute","array2","isInterleavedBufferAttribute","stride","geometry2","newAttribute","morphArray","addGroup","keys","hasMorphAttributes","attributeArray","setIndex","assign","_inverseMatrix$2","_ray$2","_sphere$3","_vA$1","_vB$1","_vC$1","_tempA","_tempB","_tempC","_morphA","_morphB","_morphC","_uvA$1","_uvB$1","_uvC$1","_intersectionPoint","_intersectionPointWorld","Mesh","updateMorphTargets","morphTargetInfluences","morphTargetDictionary","ml","String","morphTargets","raycaster","intersects","intersectsBox","intersection","morphPosition","groupMaterial","end","checkBufferGeometryIntersection","faceIndex","face","isGeometry","checkIntersection","intersect","intersectTriangle","morphInfluences","influence","boneTransform","BoxGeometry","widthSegments","heightSegments","depthSegments","scope","vertices","numberOfVertices","groupStart","buildPlane","udir","vdir","gridX","gridY","segmentWidth","segmentHeight","widthHalf","heightHalf","depthHalf","gridX1","gridY1","vertexCounter","groupCount","cloneUniforms","property","mergeUniforms","uniforms","merged","UniformsUtils","merge","default_vertex","default_fragment","ShaderMaterial","defines","vertexShader","fragmentShader","lights","clipping","extensions","derivatives","fragDepth","drawBuffers","shaderTextureLOD","defaultAttributeValues","index0AttributeName","uniformsNeedUpdate","glslVersion","uniform","isShaderMaterial","Camera","PerspectiveCamera","fov","aspect","zoom","focus","view","filmGauge","filmOffset","updateProjectionMatrix","focalLength","vExtentSlope","getFilmHeight","atan","tan","fullWidth","fullHeight","enabled","offsetX","offsetY","skew","getFilmWidth","makePerspective","isPerspectiveCamera","CubeCamera","renderTarget","isWebGLCubeRenderTarget","cameraPX","cameraNX","cameraPY","cameraNY","cameraPZ","cameraNZ","renderer","scene","currentXrEnabled","xr","currentRenderTarget","getRenderTarget","setRenderTarget","render","CubeTexture","isCubeTexture","WebGLCubeRenderTarget","dummy","isInteger","_needsFlipEnvMap","shader","tEquirect","mesh","currentMinFilter","stencil","clear","_vector1","_vector2","_normalMatrix","Plane","setFromNormalAndCoplanarPoint","inverseNormalLength","line","startSign","endSign","intersectsPlane","optionalNormalMatrix","referencePoint","coplanarPoint","isPlane","_sphere$2","_vector$7","Frustum","p4","p5","planes","frustum","me0","me1","me2","me3","me4","me5","me6","me7","me8","me9","me10","me11","me12","me13","me14","me15","setComponents","sprite","negRadius","WebGLAnimation","isAnimating","animationLoop","requestId","onAnimationFrame","time","frame","requestAnimationFrame","stop","cancelAnimationFrame","setAnimationLoop","setContext","WebGLAttributes","gl","capabilities","isWebGL2","buffers","WeakMap","createBuffer","bufferType","bindBuffer","bufferData","FLOAT","HALF_FLOAT","UNSIGNED_SHORT","SHORT","UNSIGNED_INT","INT","BYTE","UNSIGNED_BYTE","bytesPerElement","BYTES_PER_ELEMENT","updateBuffer","bufferSubData","subarray","get","deleteBuffer","delete","cached","elementSize","PlaneGeometry","width_half","height_half","segment_width","segment_height","alphamap_fragment","alphamap_pars_fragment","alphatest_fragment","alphatest_pars_fragment","aomap_fragment","aomap_pars_fragment","begin_vertex","beginnormal_vertex","bsdfs","bumpmap_pars_fragment","clipping_planes_fragment","clipping_planes_pars_fragment","clipping_planes_pars_vertex","clipping_planes_vertex","color_fragment","color_pars_fragment","color_pars_vertex","color_vertex","common","cube_uv_reflection_fragment","defaultnormal_vertex","displacementmap_pars_vertex","displacementmap_vertex","emissivemap_fragment","emissivemap_pars_fragment","encodings_fragment","encodings_pars_fragment","envmap_fragment","envmap_common_pars_fragment","envmap_pars_fragment","envmap_pars_vertex","envmap_vertex","fog_vertex","fog_pars_vertex","fog_fragment","fog_pars_fragment","gradientmap_pars_fragment","lightmap_fragment","lightmap_pars_fragment","lights_lambert_vertex","lights_pars_begin","envmap_physical_pars_fragment","lights_toon_fragment","lights_toon_pars_fragment","lights_phong_fragment","lights_phong_pars_fragment","lights_physical_fragment","lights_physical_pars_fragment","lights_fragment_begin","lights_fragment_maps","lights_fragment_end","logdepthbuf_fragment","logdepthbuf_pars_fragment","logdepthbuf_pars_vertex","logdepthbuf_vertex","map_fragment","map_pars_fragment","map_particle_fragment","map_particle_pars_fragment","metalnessmap_fragment","metalnessmap_pars_fragment","morphnormal_vertex","morphtarget_pars_vertex","morphtarget_vertex","normal_fragment_begin","normal_fragment_maps","normal_pars_fragment","normal_pars_vertex","normal_vertex","normalmap_pars_fragment","clearcoat_normal_fragment_begin","clearcoat_normal_fragment_maps","clearcoat_pars_fragment","output_fragment","packing","premultiplied_alpha_fragment","project_vertex","dithering_fragment","dithering_pars_fragment","roughnessmap_fragment","roughnessmap_pars_fragment","shadowmap_pars_fragment","shadowmap_pars_vertex","shadowmap_vertex","shadowmask_pars_fragment","skinbase_vertex","skinning_pars_vertex","skinning_vertex","skinnormal_vertex","specularmap_fragment","specularmap_pars_fragment","tonemapping_fragment","tonemapping_pars_fragment","transmission_fragment","transmission_pars_fragment","uv_pars_fragment","uv_pars_vertex","uv_vertex","uv2_pars_fragment","uv2_pars_vertex","uv2_vertex","worldpos_vertex","vertex$g","fragment$g","vertex$f","fragment$f","vertex$e","fragment$e","vertex$d","fragment$d","vertex$c","fragment$c","vertex$b","fragment$b","vertex$a","fragment$a","vertex$9","fragment$9","vertex$8","fragment$8","vertex$7","fragment$7","vertex$6","fragment$6","vertex$5","fragment$5","vertex$4","fragment$4","vertex$3","fragment$3","vertex$2","fragment$2","vertex$1","fragment$1","ShaderChunk","background_vert","background_frag","cube_vert","cube_frag","depth_vert","depth_frag","distanceRGBA_vert","distanceRGBA_frag","equirect_vert","equirect_frag","linedashed_vert","linedashed_frag","meshbasic_vert","meshbasic_frag","meshlambert_vert","meshlambert_frag","meshmatcap_vert","meshmatcap_frag","meshnormal_vert","meshnormal_frag","meshphong_vert","meshphong_frag","meshphysical_vert","meshphysical_frag","meshtoon_vert","meshtoon_frag","points_vert","points_frag","shadow_vert","shadow_frag","sprite_vert","sprite_frag","UniformsLib","diffuse","uvTransform","uv2Transform","specularmap","envmap","flipEnvMap","ior","maxMipLevel","aomap","lightmap","emissivemap","bumpmap","normalmap","displacementmap","roughnessmap","metalnessmap","gradientmap","fogDensity","fogNear","fogFar","fogColor","ambientLightColor","lightProbe","directionalLights","properties","directionalLightShadows","shadowBias","shadowNormalBias","shadowRadius","shadowMapSize","directionalShadowMap","directionalShadowMatrix","spotLights","coneCos","penumbraCos","decay","spotLightShadows","spotShadowMap","spotShadowMatrix","pointLights","pointLightShadows","shadowCameraNear","shadowCameraFar","pointShadowMap","pointShadowMatrix","hemisphereLights","skyColor","groundColor","rectAreaLights","ltc_1","ltc_2","ShaderLib","basic","lambert","phong","standard","toon","dashed","totalSize","t2D","cube","equirect","distanceRGBA","referencePosition","nearDistance","farDistance","shadow","physical","sheenColorMap","sheenRoughnessMap","transmissionSamplerSize","transmissionSamplerMap","WebGLBackground","cubemaps","state","objects","clearColor","clearAlpha","planeMesh","boxMesh","currentBackground","currentBackgroundVersion","currentTonemapping","renderList","forceClear","session","getSession","environmentBlendMode","setClear","autoClear","autoClearColor","autoClearDepth","autoClearStencil","deleteAttribute","onBeforeRender","copyPosition","toneMapping","unshift","getClearColor","setClearColor","getClearAlpha","setClearAlpha","WebGLBindingStates","maxVertexAttributes","getParameter","MAX_VERTEX_ATTRIBS","extension","vaoAvailable","bindingStates","defaultState","createBindingState","currentState","setup","program","updateBuffers","getBindingState","bindVertexArrayObject","saveCache","ELEMENT_ARRAY_BUFFER","setupVertexAttributes","createVertexArrayObject","createVertexArray","createVertexArrayOES","vao","bindVertexArray","bindVertexArrayOES","deleteVertexArrayObject","deleteVertexArray","deleteVertexArrayOES","programMap","stateMap","newAttributes","enabledAttributes","attributeDivisors","cachedAttributes","geometryAttributes","attributesNum","cachedAttribute","geometryAttribute","initAttributes","enableAttribute","enableAttributeAndDivisor","meshPerAttribute","enableVertexAttribArray","disableUnusedAttributes","disableVertexAttribArray","vertexAttribPointer","vertexAttribIPointer","isInstancedBufferGeometry","programAttributes","getAttributes","materialDefaultAttributeValues","programAttribute","location","isInstancedInterleavedBuffer","locationSize","_maxInstanceCount","ARRAY_BUFFER","isInstancedBufferAttribute","vertexAttrib2fv","vertexAttrib3fv","vertexAttrib4fv","vertexAttrib1fv","reset","geometryId","programId","releaseStatesOfGeometry","releaseStatesOfProgram","resetDefaultState","WebGLBufferRenderer","info","mode","setMode","drawArrays","renderInstances","primcount","methodName","WebGLCapabilities","maxAnisotropy","getMaxAnisotropy","has","MAX_TEXTURE_MAX_ANISOTROPY_EXT","getMaxPrecision","getShaderPrecisionFormat","VERTEX_SHADER","HIGH_FLOAT","FRAGMENT_SHADER","MEDIUM_FLOAT","WebGL2RenderingContext","WebGL2ComputeRenderingContext","maxPrecision","logarithmicDepthBuffer","maxTextures","MAX_TEXTURE_IMAGE_UNITS","maxVertexTextures","MAX_VERTEX_TEXTURE_IMAGE_UNITS","maxTextureSize","MAX_TEXTURE_SIZE","maxCubemapSize","MAX_CUBE_MAP_TEXTURE_SIZE","maxAttributes","maxVertexUniforms","MAX_VERTEX_UNIFORM_VECTORS","maxVaryings","MAX_VARYING_VECTORS","maxFragmentUniforms","MAX_FRAGMENT_UNIFORM_VECTORS","vertexTextures","floatFragmentTextures","floatVertexTextures","maxSamples","MAX_SAMPLES","WebGLClipping","globalState","numGlobalPlanes","localClippingEnabled","renderingShadows","viewNormalMatrix","numPlanes","numIntersection","init","enableLocalClipping","projectPlanes","beginShadows","endShadows","resetGlobalState","setState","useCache","materialProperties","nGlobal","lGlobal","dstArray","clippingState","skipTransform","nPlanes","flatSize","viewMatrix","i4","WebGLCubeMaps","mapTextureMapping","cubemap","fromEquirectangularTexture","addEventListener","onTextureDispose","removeEventListener","OrthographicCamera","scaleW","scaleH","makeOrthographic","isOrthographicCamera","RawShaderMaterial","isRawShaderMaterial","LOD_MIN","LOD_MAX","SIZE_MAX","EXTRA_LOD_SIGMA","TOTAL_LODS","ENCODINGS","_flatCamera","_createPlanes","_lodPlanes","_sizeLods","_sigmas","_clearColor","_oldTarget","PHI","INV_PHI","_axisDirections","PMREMGenerator","_renderer","_pingPongRenderTarget","_blurMaterial","_getBlurShader","_equirectShader","_cubemapShader","_compileMaterial","sigma","cubeUVRenderTarget","_allocateTargets","_sceneToCubeUV","_blur","_applyPMREM","_cleanup","equirectangular","_fromTexture","_getCubemapShader","_getEquirectShader","outputTarget","_setViewport","_textureToCubeUV","params","_isLDR","_createRenderTarget","tmpMesh","compile","cubeCamera","upSign","forwardSign","originalAutoClear","outputEncoding","backgroundMaterial","backgroundBox","useSolidColor","col","_setEncoding","poleAxis","lodIn","lodOut","pingPongRenderTarget","_halfBlur","targetIn","targetOut","sigmaRadians","blurMaterial","STANDARD_DEVIATIONS","blurMesh","blurUniforms","pixels","radiansPerPixel","sigmaPixels","weights","sum","weight","outputSize","lod","sizeLod","texelSize","cubeFaces","positionSize","uvSize","faceIndexSize","coordinates","fill","shaderMaterial","_getCommonVertexShader","_getEncodings","WebGLCubeUVMaps","cubeUVmaps","pmremGenerator","isEquirectMap","isCubeMap","isCubeTextureComplete","fromEquirectangular","fromCubemap","cubemapUV","WebGLExtensions","getExtension","WebGLGeometries","wireframeAttributes","onGeometryDispose","memory","updateWireframeAttribute","geometryIndex","geometryPosition","previousAttribute","getWireframeAttribute","currentAttribute","WebGLIndexedBufferRenderer","drawElements","WebGLInfo","calls","triangles","lines","instanceCount","TRIANGLES","LINES","LINE_STRIP","LINE_LOOP","POINTS","programs","autoReset","DataTexture2DArray","wrapR","isDataTexture2DArray","numericalSort","absNumericalSort","denormalize","morph","WebGLMorphtargets","influencesList","morphTextures","workInfluences","objectInfluences","numberOfMorphTargets","entry","hasMorphNormals","morphNormals","numberOfVertexData","vertexDataStride","morphTarget","morphNormal","morphInfluencesSum","morphBaseInfluence","getUniforms","setValue","influences","sort","MAX_SAFE_INTEGER","hasAttribute","WebGLObjects","updateMap","buffergeometry","hasEventListener","onInstancedMeshDispose","instancedMesh","DataTexture3D","isDataTexture3D","emptyTexture","emptyTexture2dArray","emptyTexture3d","emptyCubeTexture","arrayCacheF32","arrayCacheI32","mat4array","mat3array","mat2array","flatten","nBlocks","blockSize","firstElem","arraysEqual","copyArray","allocTexUnits","allocateTextureUnit","setValueV1f","uniform1f","addr","setValueV2f","uniform2f","uniform2fv","setValueV3f","uniform3f","uniform3fv","setValueV4f","uniform4f","uniform4fv","setValueM2","uniformMatrix2fv","setValueM3","uniformMatrix3fv","setValueM4","uniformMatrix4fv","setValueV1i","uniform1i","setValueV2i","uniform2iv","setValueV3i","uniform3iv","setValueV4i","uniform4iv","setValueV1ui","uniform1ui","setValueV2ui","uniform2uiv","setValueV3ui","uniform3uiv","setValueV4ui","uniform4uiv","setValueT1","unit","safeSetTexture2D","setValueT3D1","setTexture3D","setValueT6","safeSetTextureCube","setValueT2DArray1","setTexture2DArray","getSingularSetter","setValueV1fArray","uniform1fv","setValueV2fArray","setValueV3fArray","setValueV4fArray","setValueM2Array","setValueM3Array","setValueM4Array","setValueV1iArray","uniform1iv","setValueV2iArray","setValueV3iArray","setValueV4iArray","setValueV1uiArray","uniform1uiv","setValueV2uiArray","setValueV3uiArray","setValueV4uiArray","setValueT1Array","units","setValueT6Array","getPureArraySetter","SingleUniform","activeInfo","PureArrayUniform","updateCache","StructuredUniform","seq","RePathPart","addUniform","container","uniformObject","parseUniform","path","pathLength","lastIndex","match","matchEnd","idIsIndex","subscript","next","WebGLUniforms","getProgramParameter","ACTIVE_UNIFORMS","getActiveUniform","getUniformLocation","setOptional","upload","seqWithValue","WebGLShader","createShader","shaderSource","compileShader","programIdCount","addLineNumbers","split","join","getEncodingComponents","getShaderErrors","status","getShaderParameter","COMPILE_STATUS","errors","getShaderInfoLog","trim","getShaderSource","getTexelDecodingFunction","functionName","getTexelEncodingFunction","getToneMappingFunction","toneMappingName","generateExtensions","chunks","extensionDerivatives","envMapCubeUV","tangentSpaceNormalMap","shaderID","extensionFragDepth","rendererExtensionFragDepth","extensionDrawBuffers","rendererExtensionDrawBuffers","extensionShaderTextureLOD","rendererExtensionShaderTextureLod","filter","filterEmptyLine","generateDefines","fetchAttributeLocations","ACTIVE_ATTRIBUTES","getActiveAttrib","FLOAT_MAT2","FLOAT_MAT3","FLOAT_MAT4","getAttribLocation","replaceLightNums","replace","numDirLights","numSpotLights","numRectAreaLights","numPointLights","numHemiLights","numDirLightShadows","numSpotLightShadows","numPointLightShadows","replaceClippingPlaneNums","numClippingPlanes","numClipIntersection","includePattern","resolveIncludes","includeReplacer","include","deprecatedUnrollLoopPattern","unrollLoopPattern","unrollLoops","loopReplacer","deprecatedLoopReplacer","snippet","generatePrecision","precisionstring","generateShadowMapTypeDefine","shadowMapTypeDefine","shadowMapType","generateEnvMapTypeDefine","envMapTypeDefine","envMapMode","generateEnvMapModeDefine","envMapModeDefine","generateEnvMapBlendingDefine","envMapBlendingDefine","WebGLProgram","cacheKey","gammaFactorDefine","customExtensions","customDefines","createProgram","prefixVertex","prefixFragment","versionString","shaderName","instancing","instancingColor","supportsVertexTextures","maxBones","useFog","fogExp2","objectSpaceNormalMap","vertexTangents","vertexAlphas","vertexUvs","uvsVertexOnly","skinning","useVertexTexture","morphTargetsCount","doubleSided","flipSided","shadowMapEnabled","physicallyCorrectLights","mapEncoding","matcapEncoding","envMapEncoding","emissiveMapEncoding","specularColorMapEncoding","sheenColorMapEncoding","lightMapEncoding","depthPacking","vertexGlsl","fragmentGlsl","glVertexShader","glFragmentShader","attachShader","bindAttribLocation","linkProgram","debug","checkShaderErrors","programLog","getProgramInfoLog","vertexLog","fragmentLog","runnable","haveDiagnostics","LINK_STATUS","vertexErrors","fragmentErrors","getError","VALIDATE_STATUS","diagnostics","prefix","deleteShader","cachedUniforms","destroy","deleteProgram","usedTimes","WebGLPrograms","cubeuvmaps","shaderIDs","MeshDepthMaterial","MeshDistanceMaterial","MeshNormalMaterial","MeshLambertMaterial","MeshPhongMaterial","MeshToonMaterial","MeshStandardMaterial","MeshPhysicalMaterial","MeshMatcapMaterial","LineBasicMaterial","LineDashedMaterial","PointsMaterial","ShadowMaterial","SpriteMaterial","parameterNames","getMaxBones","bones","nVertexUniforms","nVertexMatrices","getTextureEncodingFromMap","getParameters","shadows","isMeshStandardMaterial","useAlphaTest","useClearcoat","isFogExp2","directional","spot","rectArea","hemi","shadowMap","customProgramCacheKey","getProgramCacheKey","acquireProgram","pl","preexistingProgram","releaseProgram","pop","WebGLProperties","painterSortStable","groupOrder","reversePainterSortStable","WebGLRenderList","renderItems","renderItemsIndex","opaque","transmissive","defaultProgram","getNextRenderItem","renderItem","customOpaqueSort","customTransparentSort","finish","WebGLRenderLists","lists","renderCallDepth","list","UniformsCache","light","halfWidth","halfHeight","ShadowUniformsCache","nextVersion","shadowCastingLightsFirst","lightA","lightB","WebGLLights","shadowCache","hash","directionalLength","pointLength","spotLength","rectAreaLength","hemiLength","numDirectionalShadows","numPointShadows","numSpotShadows","ambient","probe","directionalShadow","spotShadow","rectAreaLTC1","rectAreaLTC2","pointShadow","vector3","matrix42","scaleFactor","intensity","isAmbientLight","isLightProbe","sh","coefficients","isDirectionalLight","shadowUniforms","bias","normalBias","mapSize","isSpotLight","penumbra","isRectAreaLight","isPointLight","isHemisphereLight","LTC_FLOAT_1","LTC_FLOAT_2","LTC_HALF_1","LTC_HALF_2","setupView","identity","WebGLRenderState","lightsArray","shadowsArray","pushLight","pushShadow","shadowLight","setupLights","setupLightsView","WebGLRenderStates","renderStates","renderState","isMeshDepthMaterial","isMeshDistanceMaterial","vertex","fragment","WebGLShadowMap","_objects","_capabilities","_frustum","_shadowMapSize","_viewportSize","_viewport","_depthMaterial","_distanceMaterial","_materialCache","_maxTextureSize","shadowMaterialVertical","VSM_SAMPLES","shadow_pass","resolution","shadowMaterialHorizontal","HORIZONTAL_PASS","fullScreenTri","fullScreenMesh","autoUpdate","activeCubeFace","getActiveCubeFace","activeMipmapLevel","getActiveMipmapLevel","_state","setBlending","setTest","setScissorTest","shadowFrameExtents","getFrameExtents","isPointLightShadow","pars","mapPass","viewportCount","getViewportCount","vp","getViewport","updateMatrices","getFrustum","renderObject","VSMPass","blurSamples","renderBufferDirect","getDepthMaterial","result","customMaterial","customDistanceMaterial","customDepthMaterial","keyA","keyB","materialsForVariant","cachedMaterial","shadowCamera","intersectsObject","k","kl","depthMaterial","WebGLState","ColorBuffer","locked","currentColorMask","currentColorClear","setMask","colorMask","setLocked","lock","DepthBuffer","currentDepthMask","currentDepthFunc","currentDepthClear","enable","DEPTH_TEST","disable","depthMask","setFunc","NEVER","ALWAYS","LESS","LEQUAL","EQUAL","GEQUAL","GREATER","NOTEQUAL","clearDepth","StencilBuffer","currentStencilMask","currentStencilFunc","currentStencilRef","currentStencilFuncMask","currentStencilFail","currentStencilZFail","currentStencilZPass","currentStencilClear","stencilTest","STENCIL_TEST","stencilMask","setOp","stencilOp","clearStencil","colorBuffer","enabledCapabilities","xrFramebuffer","currentBoundFramebuffers","currentProgram","currentBlendingEnabled","currentBlending","currentBlendEquation","currentBlendSrc","currentBlendDst","currentBlendEquationAlpha","currentBlendSrcAlpha","currentBlendDstAlpha","currentPremultipledAlpha","currentFlipSided","currentCullFace","currentLineWidth","currentPolygonOffsetFactor","currentPolygonOffsetUnits","MAX_COMBINED_TEXTURE_IMAGE_UNITS","lineWidthAvailable","glVersion","VERSION","currentTextureSlot","currentBoundTextures","scissorParam","SCISSOR_BOX","viewportParam","VIEWPORT","currentScissor","currentViewport","createTexture","bindTexture","texParameteri","TEXTURE_MIN_FILTER","NEAREST","TEXTURE_MAG_FILTER","texImage2D","RGBA","emptyTextures","TEXTURE_2D","TEXTURE_CUBE_MAP","TEXTURE_CUBE_MAP_POSITIVE_X","setFlipSided","setCullFace","CULL_FACE","bindXRFramebuffer","framebuffer","bindFramebuffer","FRAMEBUFFER","DRAW_FRAMEBUFFER","useProgram","equationToGL","FUNC_ADD","FUNC_SUBTRACT","FUNC_REVERSE_SUBTRACT","MIN","MAX","MIN_EXT","MAX_EXT","factorToGL","ZERO","ONE","SRC_COLOR","SRC_ALPHA","SRC_ALPHA_SATURATE","DST_COLOR","DST_ALPHA","ONE_MINUS_SRC_COLOR","ONE_MINUS_SRC_ALPHA","ONE_MINUS_DST_COLOR","ONE_MINUS_DST_ALPHA","BLEND","blendFuncSeparate","blendFunc","blendEquationSeparate","setMaterial","frontFaceCW","setPolygonOffset","SAMPLE_ALPHA_TO_COVERAGE","frontFace","CW","CCW","cullFace","BACK","FRONT","FRONT_AND_BACK","setLineWidth","lineWidth","factor","POLYGON_OFFSET_FILL","SCISSOR_TEST","activeTexture","webglSlot","TEXTURE0","webglType","webglTexture","boundTexture","unbindTexture","compressedTexImage2D","apply","texImage3D","KEEP","READ_FRAMEBUFFER","WebGLTextures","_gl","utils","_videoTextures","useOffscreenCanvas","OffscreenCanvas","err","createCanvas","resizeImage","needsPowerOfTwo","needsNewCanvas","maxSize","isPowerOfTwo$1","textureNeedsPowerOfTwo","textureNeedsGenerateMipmaps","supportsMips","generateMipmap","textureProperties","__maxMipLevel","log2","getInternalFormat","internalFormatName","glFormat","glType","RED","R32F","R16F","R8","RGB","RGB32F","RGB16F","RGB8","RGBA32F","RGBA16F","SRGB8_ALPHA8","RGBA8","filterFallback","LINEAR","deallocateTexture","isVideoTexture","onRenderTargetDispose","deallocateRenderTarget","__webglInit","deleteTexture","__webglTexture","renderTargetProperties","deleteFramebuffer","__webglFramebuffer","__webglDepthbuffer","deleteRenderbuffer","__webglMultisampledFramebuffer","__webglColorRenderbuffer","__webglDepthRenderbuffer","attachmentProperties","textureUnits","resetTextureUnits","textureUnit","setTexture2D","slot","updateVideoTexture","__version","complete","uploadTexture","TEXTURE_2D_ARRAY","TEXTURE_3D","setTextureCube","uploadCubeTexture","wrappingToGL","REPEAT","CLAMP_TO_EDGE","MIRRORED_REPEAT","filterToGL","NEAREST_MIPMAP_NEAREST","NEAREST_MIPMAP_LINEAR","LINEAR_MIPMAP_NEAREST","LINEAR_MIPMAP_LINEAR","setTextureParameters","textureType","TEXTURE_WRAP_S","TEXTURE_WRAP_T","TEXTURE_WRAP_R","__currentAnisotropy","texParameterf","TEXTURE_MAX_ANISOTROPY_EXT","initTexture","pixelStorei","UNPACK_FLIP_Y_WEBGL","UNPACK_PREMULTIPLY_ALPHA_WEBGL","UNPACK_ALIGNMENT","UNPACK_COLORSPACE_CONVERSION_WEBGL","NONE","convert","glInternalFormat","mipmap","isDepthTexture","DEPTH_COMPONENT","DEPTH_COMPONENT32F","DEPTH_COMPONENT24","DEPTH24_STENCIL8","DEPTH_COMPONENT16","DEPTH_STENCIL","isCompressedTexture","isCompressed","cubeImage","mipmapImage","setupFrameBufferTexture","attachment","textureTarget","framebufferTexture2D","setupRenderBufferStorage","renderbuffer","isMultisample","bindRenderbuffer","RENDERBUFFER","getRenderTargetSamples","renderbufferStorageMultisample","renderbufferStorage","framebufferRenderbuffer","DEPTH_ATTACHMENT","DEPTH_STENCIL_ATTACHMENT","setupDepthTexture","isCube","webglDepthTexture","setupDepthRenderbuffer","createRenderbuffer","setupRenderTarget","isMultipleRenderTargets","isRenderTarget3D","createFramebuffer","COLOR_ATTACHMENT0","glTextureType","isTexture3D","updateRenderTargetMipmap","updateMultisampleRenderTarget","COLOR_BUFFER_BIT","DEPTH_BUFFER_BIT","STENCIL_BUFFER_BIT","blitFramebuffer","warnedTexture2D","warnedTextureCube","WebGLUtils","UNSIGNED_SHORT_4_4_4_4","UNSIGNED_SHORT_5_5_5_1","UNSIGNED_SHORT_5_6_5","HALF_FLOAT_OES","ALPHA","LUMINANCE","LUMINANCE_ALPHA","RED_INTEGER","RG","RG_INTEGER","RGB_INTEGER","RGBA_INTEGER","COMPRESSED_RGB_S3TC_DXT1_EXT","COMPRESSED_RGBA_S3TC_DXT1_EXT","COMPRESSED_RGBA_S3TC_DXT3_EXT","COMPRESSED_RGBA_S3TC_DXT5_EXT","COMPRESSED_RGB_PVRTC_4BPPV1_IMG","COMPRESSED_RGB_PVRTC_2BPPV1_IMG","COMPRESSED_RGBA_PVRTC_4BPPV1_IMG","COMPRESSED_RGBA_PVRTC_2BPPV1_IMG","COMPRESSED_RGB_ETC1_WEBGL","COMPRESSED_RGB8_ETC2","COMPRESSED_RGBA8_ETC2_EAC","UNSIGNED_INT_24_8","UNSIGNED_INT_24_8_WEBGL","ArrayCamera","cameras","isArrayCamera","Group","isGroup","_moveEvent","WebXRController","_targetRay","_grip","_hand","joints","inputState","pinching","hasLinearVelocity","linearVelocity","hasAngularVelocity","angularVelocity","inputSource","referenceSpace","inputPose","gripPose","handPose","targetRay","grip","hand","visibilityState","getPose","targetRaySpace","transform","inputjoint","jointPose","getJointPose","jointName","joint","jointRadius","indexTip","thumbTip","distanceToPinch","threshold","handedness","gripSpace","WebXRManager","framebufferScaleFactor","referenceSpaceType","pose","glBinding","glFramebuffer","glProjLayer","glBaseLayer","glMultisampledFramebuffer","glColorRenderbuffer","glDepthRenderbuffer","xrFrame","depthStyle","clearStyle","controllers","inputSourcesMap","Map","cameraL","cameraR","cameraVR","_currentDepthNear","_currentDepthFar","cameraAutoUpdate","isPresenting","getController","controller","getTargetRaySpace","getControllerGrip","getGripSpace","getHand","getHandSpace","onSessionEvent","onSessionEnd","forEach","disconnect","setFramebufferScaleFactor","setReferenceSpaceType","getReferenceSpace","getBaseLayer","getBinding","getFrame","setSession","onInputSourcesChange","getContextAttributes","xrCompatible","makeXRCompatible","layerInit","antialias","XRWebGLLayer","updateRenderState","baseLayer","WebGLRenderingContext","depthFormat","projectionlayerInit","colorFormat","XRWebGLBinding","createProjectionLayer","textureWidth","textureHeight","requestReferenceSpace","inputSources","removed","added","cameraLPos","cameraRPos","setProjectionFromUnion","ipd","projL","projR","topFov","bottomFov","leftFov","rightFov","zOffset","xOffset","translateX","translateZ","near2","far2","left2","right2","top2","bottom2","updateCamera","depthNear","depthFar","getCamera","getFoveation","fixedFoveation","setFoveation","foveation","onAnimationFrameCallback","getViewerPose","views","cameraVRNeedsUpdate","glSubImage","getViewSubImage","depthStencilTexture","colorTexture","invalidateFramebuffer","WebGLMaterials","refreshFogUniforms","isFog","density","refreshMaterialUniforms","pixelRatio","transmissionRenderTarget","refreshUniformsCommon","isMeshLambertMaterial","refreshUniformsLambert","isMeshToonMaterial","refreshUniformsToon","isMeshPhongMaterial","refreshUniformsPhong","isMeshPhysicalMaterial","refreshUniformsPhysical","refreshUniformsStandard","isMeshMatcapMaterial","refreshUniformsMatcap","refreshUniformsDepth","refreshUniformsDistance","isMeshNormalMaterial","refreshUniformsNormal","isLineBasicMaterial","refreshUniformsLine","isLineDashedMaterial","refreshUniformsDash","isPointsMaterial","refreshUniformsPoints","isSpriteMaterial","refreshUniformsSprites","isShadowMaterial","uvScaleMap","uv2ScaleMap","createCanvasElement","display","WebGLRenderer","_context","_alpha","_depth","_stencil","_antialias","_premultipliedAlpha","_preserveDrawingBuffer","preserveDrawingBuffer","_powerPreference","powerPreference","_failIfMajorPerformanceCaveat","failIfMajorPerformanceCaveat","currentRenderList","currentRenderState","renderListStack","renderStateStack","domElement","sortObjects","toneMappingExposure","_this","_isContextLost","_currentActiveCubeFace","_currentActiveMipmapLevel","_currentRenderTarget","_currentMaterialId","_currentCamera","_currentViewport","_currentScissor","_currentScissorTest","_width","_height","_pixelRatio","_opaqueSort","_transparentSort","_scissor","_scissorTest","_currentDrawBuffers","_clippingEnabled","_localClippingEnabled","_transmissionRenderTarget","_projScreenMatrix","_vector3","_emptyScene","overrideMaterial","getTargetPixelRatio","contextNames","contextAttributes","contextName","onContextLost","onContextRestore","isWebGL1Renderer","shift","message","programCache","renderLists","morphtargets","bufferRenderer","indexedBufferRenderer","initGLContext","forceContextLoss","loseContext","forceContextRestore","restoreContext","getPixelRatio","setPixelRatio","setSize","updateStyle","setViewport","getDrawingBufferSize","setDrawingBufferSize","getCurrentViewport","getScissor","setScissor","getScissorTest","boolean","setOpaqueSort","method","setTransparentSort","bits","onXRSessionStart","onXRSessionEnd","preventDefault","infoAutoReset","shadowMapAutoUpdate","shadowMapNeedsUpdate","onMaterialDispose","deallocateMaterial","releaseMaterialProgramReferences","setProgram","rangeFactor","dataCount","rangeStart","rangeCount","drawStart","drawEnd","drawCount","isLineSegments","isLineLoop","isSprite","material2","getProgram","window","setFromProjectionMatrix","projectObject","camera2","renderScene","onAfterRender","isLOD","intersectsSprite","opaqueObjects","transmissiveObjects","transparentObjects","renderTransmissionPass","renderObjects","needsAntialias","renderTargetType","currentToneMapping","lightsStateVersion","programCacheKey","updateCommonMaterialProperties","onBuild","needsLights","materialNeedsLights","progUniforms","uniformsList","needsProgramChange","refreshProgram","refreshMaterial","refreshLights","p_uniforms","m_uniforms","uCamPos","cameraPosition","boneTexture","computeBoneTexture","boneTextureSize","markUniformsLightsNeedsUpdate","framebufferBound","drawBuffersWEBGL","layer","framebufferTextureLayer","readRenderTargetPixels","activeCubeFaceIndex","textureFormat","IMPLEMENTATION_COLOR_READ_FORMAT","halfFloatSupportedByExt","IMPLEMENTATION_COLOR_READ_TYPE","checkFramebufferStatus","FRAMEBUFFER_COMPLETE","readPixels","copyFramebufferToTexture","level","levelScale","copyTexImage2D","copyTextureToTexture","srcTexture","dstTexture","texSubImage2D","compressedTexSubImage2D","copyTextureToTexture3D","sourceBox","glTarget","unpackRowLen","UNPACK_ROW_LENGTH","unpackImageHeight","UNPACK_IMAGE_HEIGHT","unpackSkipPixels","UNPACK_SKIP_PIXELS","unpackSkipRows","UNPACK_SKIP_ROWS","unpackSkipImages","UNPACK_SKIP_IMAGES","texSubImage3D","compressedTexSubImage3D","resetState","__THREE_DEVTOOLS__","CustomEvent","detail","isWebGLRenderer","WebGL1Renderer","FogExp2","Fog","Scene","InterleavedBuffer","arrayBuffers","_uuid","ib","setUsage","isInterleavedBuffer","_vector$6","InterleavedBufferAttribute","interleavedBuffer","interleavedBuffers","_geometry","_intersectPoint","_worldScale","_mvPosition","_alignedPosition","_rotatedPosition","_viewWorldMatrix","_vA","_vB","_vC","_uvA","_uvB","_uvC","Sprite","float32Array","setFromMatrixScale","transformVertex","vertexPosition","mvPosition","_v1$2","_v2$1","LOD","_currentLevel","levels","addLevel","getObjectForDistance","raycast","_basePosition","_skinIndex","_skinWeight","_vector$5","_matrix","SkinnedMesh","bindMatrixInverse","calculateInverses","skinWeight","manhattanLength","setXYZW","skinIndex","getComponent","boneIndex","boneInverses","Bone","isBone","DataTexture","_offsetMatrix","_identityMatrix","Skeleton","boneMatrices","inverse","bone","json","boneInverse","InstancedBufferAttribute","_instanceLocalMatrix","_instanceWorldMatrix","_instanceIntersects","_mesh","InstancedMesh","raycastTimes","instanceId","getMatrixAt","linecap","linejoin","_start$1","_end$1","_inverseMatrix$1","_ray$1","_sphere$1","Line","lineDistances","localThreshold","localThresholdSq","vStart","vEnd","interSegment","interRay","distSq","distanceSqToSegment","_start","_end","LineSegments","LineLoop","_inverseMatrix","_ray","_sphere","_position$2","Points","testPoint","rayPointDistanceSq","intersectPoint","closestPointToPoint","distanceToRay","VideoTexture","video","updateVideo","requestVideoFrameCallback","hasVideoFrameCallback","readyState","HAVE_CURRENT_DATA","CompressedTexture","CanvasTexture","isCanvasTexture","DepthTexture","CircleGeometry","segments","thetaStart","thetaLength","segment","CylinderGeometry","radiusTop","radiusBottom","radialSegments","openEnded","indexArray","generateTorso","generateCap","slope","indexRow","sinTheta","cosTheta","centerIndexStart","centerIndexEnd","ConeGeometry","PolyhedronGeometry","vertexBuffer","uvBuffer","subdivide","applyRadius","generateUVs","computeVertexNormals","getVertexByIndex","subdivideFace","cols","aj","bj","rows","pushVertex","azimuth","inclination","correctUVs","correctSeam","centroid","azi","correctUV","details","DodecahedronGeometry","_v0","_v1$1","_normal","_triangle","EdgesGeometry","thresholdAngle","precisionPoints","thresholdDot","indexAttr","getIndex","positionAttr","indexCount","indexArr","vertKeys","hashes","edgeData","jNext","vecHash0","vecHash1","reverseHash","index0","Curve","arcLengthDivisions","optionalTarget","getUtoTmapping","getPoint","divisions","getPointAt","lengths","getLengths","cacheArcLengths","current","last","arcLengths","targetArcLength","comparison","lengthBefore","lengthAfter","segmentLength","segmentFraction","t2","pt1","pt2","getTangent","closed","binormals","vec","mat","getTangentAt","MAX_VALUE","tz","makeRotationAxis","EllipseCurve","aX","aY","xRadius","yRadius","aStartAngle","aEndAngle","aClockwise","aRotation","twoPi","deltaAngle","samePoints","isEllipseCurve","ArcCurve","aRadius","isArcCurve","CubicPoly","c0","initCatmullRom","x3","tension","initNonuniformCatmullRom","dt0","dt1","dt2","calc","t3","px","py","pz","CatmullRomCurve3","curveType","intPoint","isCatmullRomCurve3","CatmullRom","QuadraticBezierP0","QuadraticBezierP1","QuadraticBezierP2","QuadraticBezier","CubicBezierP0","CubicBezierP1","CubicBezierP2","CubicBezierP3","CubicBezier","CubicBezierCurve","v3","isCubicBezierCurve","CubicBezierCurve3","isCubicBezierCurve3","LineCurve","isLineCurve","LineCurve3","isLineCurve3","QuadraticBezierCurve","isQuadraticBezierCurve","QuadraticBezierCurve3","isQuadraticBezierCurve3","SplineCurve","isSplineCurve","Curves","CurvePath","curves","autoClose","curve","startPoint","endPoint","getLength","curveLengths","getCurveLengths","diff","lens","cacheLengths","sums","pts","getPoints","fromJSON","Path","currentPoint","moveTo","lineTo","aCPx","aCPy","aCP1x","aCP1y","aCP2x","aCP2y","npts","concat","absarc","absellipse","firstPoint","lastPoint","Shape","holes","holesPts","getPointsHoles","hole","Earcut","triangulate","holeIndices","dim","hasHoles","outerLen","outerNode","linkedList","prev","invSize","eliminateHoles","earcutLinked","clockwise","signedArea","insertNode","removeNode","filterPoints","again","steiner","area","ear","pass","indexCurve","isEarHashed","isEar","cureLocalIntersections","splitEarcut","pointInTriangle","minTX","minTY","maxTX","maxTY","zOrder","prevZ","nextZ","locallyInside","isValidDiagonal","splitPolygon","queue","getLeftmost","compareX","eliminateHole","findHoleBridge","hx","hy","mx","my","tanMin","sectorContainsSector","sortLinked","tail","numMerges","pSize","qSize","inSize","leftmost","intersectsPolygon","middleInside","q1","q2","o1","o2","o3","o4","onSegment","num","inside","Node","an","bp","ShapeUtils","contour","faces","removeDupEndPts","addContour","holeIndex","ExtrudeGeometry","verticesArray","uvArray","addShape","placeholder","curveSegments","steps","bevelEnabled","bevelThickness","bevelSize","bevelOffset","bevelSegments","extrudePath","uvgen","UVGenerator","WorldUVGenerator","amount","extrudePts","extrudeByPath","splineTube","binormal","position2","getSpacedPoints","computeFrenetFrames","shapePoints","extractPoints","reverse","isClockWise","hl","ahole","triangulateShape","scalePt2","pt","vlen","flen","getBevelVec","inPt","inPrev","inNext","v_trans_x","v_trans_y","shrink_by","v_prev_x","v_prev_y","v_next_x","v_next_y","v_prev_lensq","collinear0","v_prev_len","v_next_len","ptPrevShift_x","ptPrevShift_y","ptNextShift_x","ptNextShift_y","sf","v_trans_lensq","direction_eq","contourMovements","holesMovements","oneHoleMovements","verticesMovements","bs","vert","buildLidFaces","buildSideFaces","f3","layeroffset","sidewalls","sl","slen1","slen2","f4","addVertex","nextIndex","generateTopUV","addUV","generateSideWallUV","vector2","toJSON$1","geometryShapes","indexA","indexB","indexC","a_x","a_y","b_x","b_y","c_x","c_y","indexD","a_z","b_z","c_z","d_x","d_y","d_z","IcosahedronGeometry","LatheGeometry","phiStart","phiLength","inverseSegments","base","n1","OctahedronGeometry","RingGeometry","innerRadius","outerRadius","thetaSegments","phiSegments","radiusStep","thetaSegmentLevel","ShapeGeometry","indexOffset","shapeVertices","shapeHoles","shapeHole","SphereGeometry","thetaEnd","grid","verticesRow","uOffset","TetrahedronGeometry","TorusGeometry","tube","tubularSegments","arc","TorusKnotGeometry","P1","P2","B","T","N","calculatePositionOnCurve","cu","su","quOverP","cs","TubeGeometry","frames","P","generateBufferData","generateSegment","generateIndices","WireframeGeometry","edges","Set","o","ol","isUniqueEdge","hash1","hash2","Geometries","BoxBufferGeometry","CircleBufferGeometry","ConeBufferGeometry","CylinderBufferGeometry","DodecahedronBufferGeometry","ExtrudeBufferGeometry","IcosahedronBufferGeometry","LatheBufferGeometry","OctahedronBufferGeometry","PlaneBufferGeometry","PolyhedronBufferGeometry","RingBufferGeometry","ShapeBufferGeometry","SphereBufferGeometry","TetrahedronBufferGeometry","TorusBufferGeometry","TorusKnotBufferGeometry","TubeBufferGeometry","_sheen","_clearcoat","_transmission","Materials","AnimationUtils","arraySlice","from","to","isTypedArray","convertArray","forceClone","ArrayBuffer","isView","DataView","getKeyframeOrder","times","compareTime","sortedArray","nValues","srcOffset","flattenJSON","jsonKeys","valuePropertyName","subclip","sourceClip","startFrame","endFrame","fps","clip","tracks","track","valueSize","getValueSize","minStartTime","resetDuration","makeClipAdditive","targetClip","referenceFrame","referenceClip","numTracks","referenceTime","referenceTrack","referenceTrackType","ValueTypeName","targetTrack","find","referenceOffset","referenceValueSize","createInterpolant","isInterpolantFactoryMethodGLTFCubicSpline","targetOffset","targetValueSize","referenceValue","startIndex","endIndex","interpolant","evaluate","resultBuffer","referenceQuat","numTimes","valueStart","multiplyQuaternionsFlat","valueEnd","blendMode","Interpolant","parameterPositions","sampleValues","sampleSize","_cachedIndex","settings","DefaultSettings_","pp","validate_interval","seek","linear_scan","forward_scan","giveUpAt","afterEnd_","t1global","beforeStart_","mid","intervalChanged_","interpolate_","copySampleValue_","CubicInterpolant","_weightPrev","_offsetPrev","_weightNext","_offsetNext","endingStart","endingEnd","iPrev","iNext","tPrev","tNext","getSettings_","halfDt","o0","oP","oN","wP","wN","ppp","sP","sN","LinearInterpolant","offset1","offset0","weight1","weight0","DiscreteInterpolant","KeyframeTrack","interpolation","TimeBufferType","ValueBufferType","setInterpolation","DefaultInterpolation","factoryMethod","InterpolantFactoryMethodDiscrete","InterpolantFactoryMethodLinear","InterpolantFactoryMethodSmooth","timeOffset","timeScale","startTime","endTime","nKeys","valid","prevTime","currTime","smoothInterpolation","getInterpolation","writeIndex","keep","timeNext","offsetP","offsetN","readOffset","writeOffset","TypedKeyframeTrack","trackType","BooleanKeyframeTrack","ColorKeyframeTrack","NumberKeyframeTrack","QuaternionLinearInterpolant","slerpFlat","QuaternionKeyframeTrack","StringKeyframeTrack","VectorKeyframeTrack","AnimationClip","duration","validate","optimize","jsonTracks","frameTime","parseKeyframeTrack","clipTracks","morphTargetSequence","noLoop","numMorphTargets","objectOrClipArray","clipArray","animationToMorphTargets","pattern","parts","animationMorphTargets","clips","CreateFromMorphTargetSequence","addNonemptyTrack","trackName","animationKeys","propertyName","destTracks","clipName","hierarchyTracks","hierarchy","morphTargetNames","morphTargetName","animationKey","boneName","getTrackTypeForValueTypeName","typeName","Cache","files","file","LoadingManager","onLoad","onProgress","onError","isLoading","itemsLoaded","itemsTotal","urlModifier","handlers","onStart","itemStart","itemEnd","itemError","resolveURL","setURLModifier","addHandler","regex","loader","removeHandler","getHandler","DefaultLoadingManager","Loader","manager","crossOrigin","withCredentials","resourcePath","requestHeader","Promise","resolve","reject","load","loading","FileLoader","setTimeout","req","Request","headers","Headers","credentials","fetch","then","response","callbacks","reader","body","getReader","contentLength","total","lengthComputable","loaded","ReadableStream","readData","read","done","close","byteLength","ProgressEvent","enqueue","statusText","stream","Response","responseType","arrayBuffer","blob","text","parser","DOMParser","parseFromString","mimeType","catch","AnimationLoader","setPath","setRequestHeader","setWithCredentials","CompressedTextureLoader","setResponseType","loadTexture","texDatas","mipmapCount","isCubemap","ImageLoader","onImageLoad","removeEventListeners","onImageError","substr","CubeTextureLoader","urls","setCrossOrigin","DataTextureLoader","texData","TextureLoader","Light","HemisphereLight","_projScreenMatrix$1","_lightPositionWorld$1","_lookTarget$1","LightShadow","_frameExtents","_viewportCount","_viewports","shadowMatrix","viewportIndex","SpotLightShadow","isSpotLightShadow","SpotLight","power","_lightPositionWorld","_lookTarget","PointLightShadow","_cubeDirections","_cubeUps","PointLight","DirectionalLightShadow","isDirectionalLightShadow","DirectionalLight","AmbientLight","RectAreaLight","SphericalHarmonics3","coeff","shBasis","isSphericalHarmonics3","LightProbe","MaterialLoader","getTexture","shading","LoaderUtils","TextDecoder","decode","fromCharCode","decodeURIComponent","escape","lastIndexOf","InstancedBufferGeometry","BufferGeometryLoader","interleavedBufferMap","arrayBufferMap","getInterleavedBuffer","getArrayBuffer","typedArray","bufferAttribute","bufferAttributeConstr","drawcalls","offsets","ObjectLoader","extractUrlBase","loadAsync","parseAsync","parseAnimations","parseShapes","parseGeometries","parseImages","parseTextures","parseMaterials","parseObject","parseSkeletons","bindSkeletons","hasImages","parseImagesAsync","bufferGeometryLoader","setTextures","loadImage","deserializeImage","currentUrl","deserializedImage","parseConstant","TEXTURE_MAPPING","TEXTURE_WRAPPING","TEXTURE_FILTER","getGeometry","getMaterial","objectAnimations","bind","setResourcePath","ImageBitmapLoader","createImageBitmap","fetchOptions","res","colorSpaceConversion","imageBitmap","isImageBitmapLoader","AudioContext","webkitAudioContext","AudioLoader","bufferCopy","decodeAudioData","audioBuffer","HemisphereLightProbe","sky","ground","isHemisphereLightProbe","AmbientLightProbe","isAmbientLightProbe","_eyeRight","_eyeLeft","StereoCamera","eyeSep","_cache","eyeSepHalf","eyeSepOnProjection","ymax","xmin","xmax","Clock","autoStart","oldTime","elapsedTime","running","now","getElapsedTime","getDelta","newTime","performance","Date","_position$1","_quaternion$1","_scale$1","_orientation$1","AudioListener","gain","createGain","connect","destination","timeDelta","_clock","setTargetAtTime","currentTime","positionX","linearRampToValueAtTime","positionY","positionZ","forwardX","forwardY","forwardZ","upX","upY","upZ","setPosition","setOrientation","Audio","getInput","autoplay","detune","loop","loopStart","loopEnd","playbackRate","isPlaying","hasPlaybackControl","sourceType","_startedAt","_progress","_connected","filters","audioNode","mediaElement","createMediaElementSource","mediaStream","createMediaStreamSource","play","delay","createBufferSource","onended","onEnded","setDetune","setPlaybackRate","getOutput","getFilters","setFilters","_position","_quaternion","_scale","_orientation","PositionalAudio","panner","createPanner","panningModel","refDistance","rolloffFactor","distanceModel","maxDistance","coneInnerAngle","coneOuterAngle","coneOuterGain","orientationX","orientationY","orientationZ","AudioAnalyser","audio","fftSize","analyser","createAnalyser","frequencyBinCount","getByteFrequencyData","getFrequencyData","PropertyMixer","binding","mixFunction","mixFunctionAdditive","setIdentity","_slerp","_slerpAdditive","_setAdditiveIdentityQuaternion","_workIndex","_select","_setAdditiveIdentityOther","_lerp","_lerpAdditive","_setAdditiveIdentityNumeric","_mixBufferRegion","_mixBufferRegionAdditive","_setIdentity","_origIndex","_addIndex","cumulativeWeight","cumulativeWeightAdditive","useCount","referenceCount","accuIndex","currentWeight","mix","weightAdditive","originalValueOffset","getValue","targetIndex","workOffset","_RESERVED_CHARS_RE","_reservedRe","RegExp","_wordChar","_wordCharOrDot","_directoryRe","_nodeRe","_objectRe","_propertyRe","_trackRe","_supportedObjectNames","Composite","targetGroup","optionalParsedPath","parsedPath","PropertyBinding","parseTrackName","_targetGroup","_bindings","subscribe_","firstValidIndex","nCachedObjects_","bindings","unbind","rootNode","node","findNode","nodeName","_getValue_unbound","_setValue_unbound","targetObject","resolvedProperty","propertyIndex","dest","targetArray","sourceArray","objectName","_getValue_unavailable","_setValue_unavailable","objectIndex","nodeProperty","versioning","Versioning","None","NeedsUpdate","MatrixWorldNeedsUpdate","bindingType","BindingType","Direct","ArrayElement","HasFromToArray","EntireArray","GetterByBindingType","SetterByBindingTypeAndVersioning","root","isAnimationObjectGroup","matches","results","lastDot","substring","getBoneByName","searchNodeSubtree","childNode","subTreeNode","_getValue_direct","_getValue_array","_getValue_arrayElement","_getValue_toArray","_setValue_direct","_setValue_direct_setNeedsUpdate","_setValue_direct_setMatrixWorldNeedsUpdate","_setValue_array","_setValue_array_setNeedsUpdate","_setValue_array_setMatrixWorldNeedsUpdate","_setValue_arrayElement","_setValue_arrayElement_setNeedsUpdate","_setValue_arrayElement_setMatrixWorldNeedsUpdate","_setValue_fromArray","_setValue_fromArray_setNeedsUpdate","_setValue_fromArray_setMatrixWorldNeedsUpdate","AnimationObjectGroup","_indicesByUUID","_paths","_parsedPaths","_bindingsIndicesByPath","stats","inUse","bindingsPerObject","indicesByUUID","paths","parsedPaths","nBindings","knownObject","nObjects","nCachedObjects","firstActiveIndex","lastCachedObject","bindingsForPath","lastCached","lastCachedIndex","firstActiveObject","firstActive","lastObject","indicesByPath","lastBindingsIndex","lastBindings","lastBindingsPath","AnimationAction","mixer","localRoot","_mixer","_clip","_localRoot","nTracks","interpolants","interpolantSettings","_interpolantSettings","_interpolants","_propertyBindings","_cacheIndex","_byClipCacheIndex","_timeScaleInterpolant","_weightInterpolant","_loopCount","_startTime","_effectiveTimeScale","_effectiveWeight","repetitions","paused","clampWhenFinished","zeroSlopeAtStart","zeroSlopeAtEnd","_activateAction","_deactivateAction","stopFading","stopWarping","_isActiveAction","_scheduleFading","fadeOutAction","warp","fadeOut","fadeIn","fadeInDuration","fadeOutDuration","startEndRatio","endStartRatio","fadeInAction","crossFadeFrom","weightInterpolant","_takeBackControlInterpolant","action","startTimeScale","endTimeScale","_lendControlInterpolant","timeScaleInterpolant","_root","deltaTime","timeDirection","_updateWeight","timeRunning","_updateTimeScale","clipTime","_updateTime","propertyMixers","accumulateAdditive","accumulate","interpolantValue","loopCount","pingPong","_setEndings","handle_stop","loopDelta","pending","atStart","atEnd","weightNow","weightThen","AnimationMixer","_initMemoryManager","_accuIndex","prototypeAction","rootUuid","bindingsByRoot","_bindingsByRootAndName","bindingsByName","_addInactiveBinding","create","clipUuid","actionsForClip","_actionsByClip","_bindAction","knownActions","_addInactiveAction","_lendBinding","saveOriginalState","_lendAction","restoreOriginalState","_takeBackBinding","_takeBackAction","_actions","_nActiveActions","_nActiveBindings","_controlInterpolants","_nActiveControlInterpolants","actions","controlInterpolants","actionsByClip","actionByRoot","lastInactiveAction","cacheIndex","knownActionsForClip","lastKnownAction","byClipCacheIndex","_removeInactiveBindingsForAction","_removeInactiveBinding","prevIndex","lastActiveIndex","firstInactiveAction","firstInactiveIndex","lastActiveAction","bindingByName","propBinding","lastInactiveBinding","firstInactiveBinding","lastActiveBinding","_controlInterpolantsResultBuffer","__cacheIndex","lastActiveInterpolant","optionalRoot","clipObject","findByName","existingAction","newAction","nActions","_update","timeInSeconds","actionsToRemove","_removeInactiveAction","Uniform","InstancedInterleavedBuffer","GLBufferAttribute","Raycaster","coords","unproject","intersectObject","ascSort","Spherical","other","EPS","setFromCartesianCoords","Cylindrical","_vector$4","Box2","isBox2","_startP","_startEnd","Line3","clampToLine","startEnd2","startEnd_startP","closestPointToPointParameter","_vector$3","SpotLightHelper","cone","coneLength","coneWidth","_vector$2","_boneMatrix","_matrixWorldInv","SkeletonHelper","getBoneList","isSkeletonHelper","boneList","PointLightHelper","sphereSize","_vector$1","_color1","_color2","HemisphereLightHelper","rotateY","GridHelper","PolarGridHelper","radials","circles","_v1","_v2","_v3","DirectionalLightHelper","lightPlane","targetLine","_vector","_camera","CameraHelper","pointMap","colorFrustum","colorCone","colorUp","colorTarget","colorCross","addLine","addPoint","setPoint","_box","BoxHelper","setFromObject","Box3Helper","PlaneHelper","positions2","_axis","_lineGeometry","_coneGeometry","ArrowHelper","headLength","headWidth","setDirection","setLength","AxesHelper","xAxisColor","yAxisColor","zAxisColor","ShapePath","subPaths","currentPath","quadraticCurveTo","bezierCurveTo","splineThru","isCCW","noHoles","toShapesNoHoles","inSubpaths","tmpPath","tmpShape","isPointInsidePolygon","inPolygon","polyLen","edgeLowPt","edgeHighPt","edgeDx","edgeDy","perpEdge","solid","holesFirst","betterShapeHoles","newShapes","newShapeHoles","mainIdx","tmpPoints","ambiguous","toChange","sIdx","sLen","sho","hIdx","ho","hole_unassigned","s2Idx","froms","tos","tmpHoles","_floatView","_int32View","DataUtils","val","LineStrip","LinePieces","NoColors","FaceColors","VertexColors","MeshFaceMaterial","MultiMaterial","isMultiMaterial","PointCloud","Particle","ParticleSystem","PointCloudMaterial","ParticleBasicMaterial","ParticleSystemMaterial","Vertex","DynamicBufferAttribute","Int8Attribute","Uint8Attribute","Uint8ClampedAttribute","Int16Attribute","Uint16Attribute","Int32Attribute","Uint32Attribute","Float32Attribute","Float64Attribute","construct","fromPoints","AxisHelper","BoundingBoxHelper","EdgesHelper","setColors","WireframeHelper","Handlers","XHRLoader","BinaryTextureLoader","empty","isIntersectionBox","isIntersectionSphere","setFromMatrix","flattenToArrayOffset","multiplyVector3","multiplyVector3Array","applyToBufferAttribute","applyToVector3Array","getInverse","extractPosition","getPosition","setRotationFromQuaternion","multiplyToArray","multiplyVector4","rotateAxis","crossVector","rotateX","rotateZ","rotateByAxis","makeFrustum","isIntersectionLine","intersectsLine","isIntersectionPlane","getArea","barycoordFromPoint","midpoint","getMidpoint","prototypenormal","getPlane","extractAllPoints","extrude","makeGeometry","fromAttribute","distanceToManhattan","manhattanDistanceTo","lengthManhattan","setEulerFromRotationMatrix","setEulerFromQuaternion","getPositionFromMatrix","getScaleFromMatrix","getColumnFromMatrix","applyProjection","getChildByName","getObjectByName","renderDepth","getWorldRotation","applyMatrix","eulerOrder","useQuaternion","setDrawMode","drawMode","initBones","setLens","setFocalLength","onlyShadow","shadowCameraFov","shadowCameraLeft","shadowCameraRight","shadowCameraTop","shadowCameraBottom","shadowCameraVisible","shadowDarkness","shadowMapWidth","shadowMapHeight","dynamic","setDynamic","copyIndicesArray","setArray","addIndex","addAttribute","addDrawCall","clearDrawCalls","clearGroups","computeOffsets","removeAttribute","getArrays","addShapeList","wrapAround","overdraw","wrapRGB","clearTarget","animate","getCurrentRenderTarget","getPrecision","resetGLState","supportsFloatTextures","supportsHalfFloatTextures","supportsStandardDerivatives","supportsCompressedTextureS3TC","supportsCompressedTexturePVRTC","supportsBlendMinMax","supportsInstancedArrays","enableScissorTest","initMaterial","addPrePlugin","addPostPlugin","updateShadowMap","setFaceCulling","allocTextureUnit","setTexture","getActiveMipMapLevel","shadowMapCullFace","vr","gammaInput","gammaOutput","toneMappingWhitePoint","renderReverseSided","renderSingleSided","WebGLRenderTargetCube","audioLoader","setBuffer","getData","updateCubeMap","loadTextureCube","loadCompressedTexture","loadCompressedTextureCube","CanvasRenderer","JSONLoader","SceneUtils","createMultiMaterialObject","detach","attach","LensFlare","ParametricGeometry","TextGeometry","FontLoader","Font","ImmediateRenderObject","revision","__THREE__"],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright 2010-2021 Three.js Authors\n * SPDX-License-Identifier: MIT\n */\n(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n\ttypeof define === 'function' && define.amd ? define(['exports'], factory) :\n\t(global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory(global.THREE = {}));\n})(this, (function (exports) { 'use strict';\n\n\tconst REVISION = '134';\n\tconst MOUSE = {\n\t\tLEFT: 0,\n\t\tMIDDLE: 1,\n\t\tRIGHT: 2,\n\t\tROTATE: 0,\n\t\tDOLLY: 1,\n\t\tPAN: 2\n\t};\n\tconst TOUCH = {\n\t\tROTATE: 0,\n\t\tPAN: 1,\n\t\tDOLLY_PAN: 2,\n\t\tDOLLY_ROTATE: 3\n\t};\n\tconst CullFaceNone = 0;\n\tconst CullFaceBack = 1;\n\tconst CullFaceFront = 2;\n\tconst CullFaceFrontBack = 3;\n\tconst BasicShadowMap = 0;\n\tconst PCFShadowMap = 1;\n\tconst PCFSoftShadowMap = 2;\n\tconst VSMShadowMap = 3;\n\tconst FrontSide = 0;\n\tconst BackSide = 1;\n\tconst DoubleSide = 2;\n\tconst FlatShading = 1;\n\tconst SmoothShading = 2;\n\tconst NoBlending = 0;\n\tconst NormalBlending = 1;\n\tconst AdditiveBlending = 2;\n\tconst SubtractiveBlending = 3;\n\tconst MultiplyBlending = 4;\n\tconst CustomBlending = 5;\n\tconst AddEquation = 100;\n\tconst SubtractEquation = 101;\n\tconst ReverseSubtractEquation = 102;\n\tconst MinEquation = 103;\n\tconst MaxEquation = 104;\n\tconst ZeroFactor = 200;\n\tconst OneFactor = 201;\n\tconst SrcColorFactor = 202;\n\tconst OneMinusSrcColorFactor = 203;\n\tconst SrcAlphaFactor = 204;\n\tconst OneMinusSrcAlphaFactor = 205;\n\tconst DstAlphaFactor = 206;\n\tconst OneMinusDstAlphaFactor = 207;\n\tconst DstColorFactor = 208;\n\tconst OneMinusDstColorFactor = 209;\n\tconst SrcAlphaSaturateFactor = 210;\n\tconst NeverDepth = 0;\n\tconst AlwaysDepth = 1;\n\tconst LessDepth = 2;\n\tconst LessEqualDepth = 3;\n\tconst EqualDepth = 4;\n\tconst GreaterEqualDepth = 5;\n\tconst GreaterDepth = 6;\n\tconst NotEqualDepth = 7;\n\tconst MultiplyOperation = 0;\n\tconst MixOperation = 1;\n\tconst AddOperation = 2;\n\tconst NoToneMapping = 0;\n\tconst LinearToneMapping = 1;\n\tconst ReinhardToneMapping = 2;\n\tconst CineonToneMapping = 3;\n\tconst ACESFilmicToneMapping = 4;\n\tconst CustomToneMapping = 5;\n\tconst UVMapping = 300;\n\tconst CubeReflectionMapping = 301;\n\tconst CubeRefractionMapping = 302;\n\tconst EquirectangularReflectionMapping = 303;\n\tconst EquirectangularRefractionMapping = 304;\n\tconst CubeUVReflectionMapping = 306;\n\tconst CubeUVRefractionMapping = 307;\n\tconst RepeatWrapping = 1000;\n\tconst ClampToEdgeWrapping = 1001;\n\tconst MirroredRepeatWrapping = 1002;\n\tconst NearestFilter = 1003;\n\tconst NearestMipmapNearestFilter = 1004;\n\tconst NearestMipMapNearestFilter = 1004;\n\tconst NearestMipmapLinearFilter = 1005;\n\tconst NearestMipMapLinearFilter = 1005;\n\tconst LinearFilter = 1006;\n\tconst LinearMipmapNearestFilter = 1007;\n\tconst LinearMipMapNearestFilter = 1007;\n\tconst LinearMipmapLinearFilter = 1008;\n\tconst LinearMipMapLinearFilter = 1008;\n\tconst UnsignedByteType = 1009;\n\tconst ByteType = 1010;\n\tconst ShortType = 1011;\n\tconst UnsignedShortType = 1012;\n\tconst IntType = 1013;\n\tconst UnsignedIntType = 1014;\n\tconst FloatType = 1015;\n\tconst HalfFloatType = 1016;\n\tconst UnsignedShort4444Type = 1017;\n\tconst UnsignedShort5551Type = 1018;\n\tconst UnsignedShort565Type = 1019;\n\tconst UnsignedInt248Type = 1020;\n\tconst AlphaFormat = 1021;\n\tconst RGBFormat = 1022;\n\tconst RGBAFormat = 1023;\n\tconst LuminanceFormat = 1024;\n\tconst LuminanceAlphaFormat = 1025;\n\tconst RGBEFormat = RGBAFormat;\n\tconst DepthFormat = 1026;\n\tconst DepthStencilFormat = 1027;\n\tconst RedFormat = 1028;\n\tconst RedIntegerFormat = 1029;\n\tconst RGFormat = 1030;\n\tconst RGIntegerFormat = 1031;\n\tconst RGBIntegerFormat = 1032;\n\tconst RGBAIntegerFormat = 1033;\n\tconst RGB_S3TC_DXT1_Format = 33776;\n\tconst RGBA_S3TC_DXT1_Format = 33777;\n\tconst RGBA_S3TC_DXT3_Format = 33778;\n\tconst RGBA_S3TC_DXT5_Format = 33779;\n\tconst RGB_PVRTC_4BPPV1_Format = 35840;\n\tconst RGB_PVRTC_2BPPV1_Format = 35841;\n\tconst RGBA_PVRTC_4BPPV1_Format = 35842;\n\tconst RGBA_PVRTC_2BPPV1_Format = 35843;\n\tconst RGB_ETC1_Format = 36196;\n\tconst RGB_ETC2_Format = 37492;\n\tconst RGBA_ETC2_EAC_Format = 37496;\n\tconst RGBA_ASTC_4x4_Format = 37808;\n\tconst RGBA_ASTC_5x4_Format = 37809;\n\tconst RGBA_ASTC_5x5_Format = 37810;\n\tconst RGBA_ASTC_6x5_Format = 37811;\n\tconst RGBA_ASTC_6x6_Format = 37812;\n\tconst RGBA_ASTC_8x5_Format = 37813;\n\tconst RGBA_ASTC_8x6_Format = 37814;\n\tconst RGBA_ASTC_8x8_Format = 37815;\n\tconst RGBA_ASTC_10x5_Format = 37816;\n\tconst RGBA_ASTC_10x6_Format = 37817;\n\tconst RGBA_ASTC_10x8_Format = 37818;\n\tconst RGBA_ASTC_10x10_Format = 37819;\n\tconst RGBA_ASTC_12x10_Format = 37820;\n\tconst RGBA_ASTC_12x12_Format = 37821;\n\tconst RGBA_BPTC_Format = 36492;\n\tconst SRGB8_ALPHA8_ASTC_4x4_Format = 37840;\n\tconst SRGB8_ALPHA8_ASTC_5x4_Format = 37841;\n\tconst SRGB8_ALPHA8_ASTC_5x5_Format = 37842;\n\tconst SRGB8_ALPHA8_ASTC_6x5_Format = 37843;\n\tconst SRGB8_ALPHA8_ASTC_6x6_Format = 37844;\n\tconst SRGB8_ALPHA8_ASTC_8x5_Format = 37845;\n\tconst SRGB8_ALPHA8_ASTC_8x6_Format = 37846;\n\tconst SRGB8_ALPHA8_ASTC_8x8_Format = 37847;\n\tconst SRGB8_ALPHA8_ASTC_10x5_Format = 37848;\n\tconst SRGB8_ALPHA8_ASTC_10x6_Format = 37849;\n\tconst SRGB8_ALPHA8_ASTC_10x8_Format = 37850;\n\tconst SRGB8_ALPHA8_ASTC_10x10_Format = 37851;\n\tconst SRGB8_ALPHA8_ASTC_12x10_Format = 37852;\n\tconst SRGB8_ALPHA8_ASTC_12x12_Format = 37853;\n\tconst LoopOnce = 2200;\n\tconst LoopRepeat = 2201;\n\tconst LoopPingPong = 2202;\n\tconst InterpolateDiscrete = 2300;\n\tconst InterpolateLinear = 2301;\n\tconst InterpolateSmooth = 2302;\n\tconst ZeroCurvatureEnding = 2400;\n\tconst ZeroSlopeEnding = 2401;\n\tconst WrapAroundEnding = 2402;\n\tconst NormalAnimationBlendMode = 2500;\n\tconst AdditiveAnimationBlendMode = 2501;\n\tconst TrianglesDrawMode = 0;\n\tconst TriangleStripDrawMode = 1;\n\tconst TriangleFanDrawMode = 2;\n\tconst LinearEncoding = 3000;\n\tconst sRGBEncoding = 3001;\n\tconst GammaEncoding = 3007;\n\tconst RGBEEncoding = 3002;\n\tconst LogLuvEncoding = 3003;\n\tconst RGBM7Encoding = 3004;\n\tconst RGBM16Encoding = 3005;\n\tconst RGBDEncoding = 3006;\n\tconst BasicDepthPacking = 3200;\n\tconst RGBADepthPacking = 3201;\n\tconst TangentSpaceNormalMap = 0;\n\tconst ObjectSpaceNormalMap = 1;\n\tconst ZeroStencilOp = 0;\n\tconst KeepStencilOp = 7680;\n\tconst ReplaceStencilOp = 7681;\n\tconst IncrementStencilOp = 7682;\n\tconst DecrementStencilOp = 7683;\n\tconst IncrementWrapStencilOp = 34055;\n\tconst DecrementWrapStencilOp = 34056;\n\tconst InvertStencilOp = 5386;\n\tconst NeverStencilFunc = 512;\n\tconst LessStencilFunc = 513;\n\tconst EqualStencilFunc = 514;\n\tconst LessEqualStencilFunc = 515;\n\tconst GreaterStencilFunc = 516;\n\tconst NotEqualStencilFunc = 517;\n\tconst GreaterEqualStencilFunc = 518;\n\tconst AlwaysStencilFunc = 519;\n\tconst StaticDrawUsage = 35044;\n\tconst DynamicDrawUsage = 35048;\n\tconst StreamDrawUsage = 35040;\n\tconst StaticReadUsage = 35045;\n\tconst DynamicReadUsage = 35049;\n\tconst StreamReadUsage = 35041;\n\tconst StaticCopyUsage = 35046;\n\tconst DynamicCopyUsage = 35050;\n\tconst StreamCopyUsage = 35042;\n\tconst GLSL1 = '100';\n\tconst GLSL3 = '300 es';\n\n\t/**\n\t * https://github.com/mrdoob/eventdispatcher.js/\n\t */\n\tclass EventDispatcher {\n\t\taddEventListener(type, listener) {\n\t\t\tif (this._listeners === undefined) this._listeners = {};\n\t\t\tconst listeners = this._listeners;\n\n\t\t\tif (listeners[type] === undefined) {\n\t\t\t\tlisteners[type] = [];\n\t\t\t}\n\n\t\t\tif (listeners[type].indexOf(listener) === -1) {\n\t\t\t\tlisteners[type].push(listener);\n\t\t\t}\n\t\t}\n\n\t\thasEventListener(type, listener) {\n\t\t\tif (this._listeners === undefined) return false;\n\t\t\tconst listeners = this._listeners;\n\t\t\treturn listeners[type] !== undefined && listeners[type].indexOf(listener) !== -1;\n\t\t}\n\n\t\tremoveEventListener(type, listener) {\n\t\t\tif (this._listeners === undefined) return;\n\t\t\tconst listeners = this._listeners;\n\t\t\tconst listenerArray = listeners[type];\n\n\t\t\tif (listenerArray !== undefined) {\n\t\t\t\tconst index = listenerArray.indexOf(listener);\n\n\t\t\t\tif (index !== -1) {\n\t\t\t\t\tlistenerArray.splice(index, 1);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tdispatchEvent(event) {\n\t\t\tif (this._listeners === undefined) return;\n\t\t\tconst listeners = this._listeners;\n\t\t\tconst listenerArray = listeners[event.type];\n\n\t\t\tif (listenerArray !== undefined) {\n\t\t\t\tevent.target = this; // Make a copy, in case listeners are removed while iterating.\n\n\t\t\t\tconst array = listenerArray.slice(0);\n\n\t\t\t\tfor (let i = 0, l = array.length; i < l; i++) {\n\t\t\t\t\tarray[i].call(this, event);\n\t\t\t\t}\n\n\t\t\t\tevent.target = null;\n\t\t\t}\n\t\t}\n\n\t}\n\n\tlet _seed = 1234567;\n\tconst DEG2RAD = Math.PI / 180;\n\tconst RAD2DEG = 180 / Math.PI; //\n\n\tconst _lut = [];\n\n\tfor (let i = 0; i < 256; i++) {\n\t\t_lut[i] = (i < 16 ? '0' : '') + i.toString(16);\n\t}\n\n\tconst hasRandomUUID = typeof crypto !== 'undefined' && 'randomUUID' in crypto;\n\n\tfunction generateUUID() {\n\t\tif (hasRandomUUID) {\n\t\t\treturn crypto.randomUUID().toUpperCase();\n\t\t} // TODO Remove this code when crypto.randomUUID() is available everywhere\n\t\t// http://stackoverflow.com/questions/105034/how-to-create-a-guid-uuid-in-javascript/21963136#21963136\n\n\n\t\tconst d0 = Math.random() * 0xffffffff | 0;\n\t\tconst d1 = Math.random() * 0xffffffff | 0;\n\t\tconst d2 = Math.random() * 0xffffffff | 0;\n\t\tconst d3 = Math.random() * 0xffffffff | 0;\n\t\tconst uuid = _lut[d0 & 0xff] + _lut[d0 >> 8 & 0xff] + _lut[d0 >> 16 & 0xff] + _lut[d0 >> 24 & 0xff] + '-' + _lut[d1 & 0xff] + _lut[d1 >> 8 & 0xff] + '-' + _lut[d1 >> 16 & 0x0f | 0x40] + _lut[d1 >> 24 & 0xff] + '-' + _lut[d2 & 0x3f | 0x80] + _lut[d2 >> 8 & 0xff] + '-' + _lut[d2 >> 16 & 0xff] + _lut[d2 >> 24 & 0xff] + _lut[d3 & 0xff] + _lut[d3 >> 8 & 0xff] + _lut[d3 >> 16 & 0xff] + _lut[d3 >> 24 & 0xff]; // .toUpperCase() here flattens concatenated strings to save heap memory space.\n\n\t\treturn uuid.toUpperCase();\n\t}\n\n\tfunction clamp(value, min, max) {\n\t\treturn Math.max(min, Math.min(max, value));\n\t} // compute euclidian modulo of m % n\n\t// https://en.wikipedia.org/wiki/Modulo_operation\n\n\n\tfunction euclideanModulo(n, m) {\n\t\treturn (n % m + m) % m;\n\t} // Linear mapping from range <a1, a2> to range <b1, b2>\n\n\n\tfunction mapLinear(x, a1, a2, b1, b2) {\n\t\treturn b1 + (x - a1) * (b2 - b1) / (a2 - a1);\n\t} // https://www.gamedev.net/tutorials/programming/general-and-gameplay-programming/inverse-lerp-a-super-useful-yet-often-overlooked-function-r5230/\n\n\n\tfunction inverseLerp(x, y, value) {\n\t\tif (x !== y) {\n\t\t\treturn (value - x) / (y - x);\n\t\t} else {\n\t\t\treturn 0;\n\t\t}\n\t} // https://en.wikipedia.org/wiki/Linear_interpolation\n\n\n\tfunction lerp(x, y, t) {\n\t\treturn (1 - t) * x + t * y;\n\t} // http://www.rorydriscoll.com/2016/03/07/frame-rate-independent-damping-using-lerp/\n\n\n\tfunction damp(x, y, lambda, dt) {\n\t\treturn lerp(x, y, 1 - Math.exp(-lambda * dt));\n\t} // https://www.desmos.com/calculator/vcsjnyz7x4\n\n\n\tfunction pingpong(x, length = 1) {\n\t\treturn length - Math.abs(euclideanModulo(x, length * 2) - length);\n\t} // http://en.wikipedia.org/wiki/Smoothstep\n\n\n\tfunction smoothstep(x, min, max) {\n\t\tif (x <= min) return 0;\n\t\tif (x >= max) return 1;\n\t\tx = (x - min) / (max - min);\n\t\treturn x * x * (3 - 2 * x);\n\t}\n\n\tfunction smootherstep(x, min, max) {\n\t\tif (x <= min) return 0;\n\t\tif (x >= max) return 1;\n\t\tx = (x - min) / (max - min);\n\t\treturn x * x * x * (x * (x * 6 - 15) + 10);\n\t} // Random integer from <low, high> interval\n\n\n\tfunction randInt(low, high) {\n\t\treturn low + Math.floor(Math.random() * (high - low + 1));\n\t} // Random float from <low, high> interval\n\n\n\tfunction randFloat(low, high) {\n\t\treturn low + Math.random() * (high - low);\n\t} // Random float from <-range/2, range/2> interval\n\n\n\tfunction randFloatSpread(range) {\n\t\treturn range * (0.5 - Math.random());\n\t} // Deterministic pseudo-random float in the interval [ 0, 1 ]\n\n\n\tfunction seededRandom(s) {\n\t\tif (s !== undefined) _seed = s % 2147483647; // Park-Miller algorithm\n\n\t\t_seed = _seed * 16807 % 2147483647;\n\t\treturn (_seed - 1) / 2147483646;\n\t}\n\n\tfunction degToRad(degrees) {\n\t\treturn degrees * DEG2RAD;\n\t}\n\n\tfunction radToDeg(radians) {\n\t\treturn radians * RAD2DEG;\n\t}\n\n\tfunction isPowerOfTwo(value) {\n\t\treturn (value & value - 1) === 0 && value !== 0;\n\t}\n\n\tfunction ceilPowerOfTwo(value) {\n\t\treturn Math.pow(2, Math.ceil(Math.log(value) / Math.LN2));\n\t}\n\n\tfunction floorPowerOfTwo(value) {\n\t\treturn Math.pow(2, Math.floor(Math.log(value) / Math.LN2));\n\t}\n\n\tfunction setQuaternionFromProperEuler(q, a, b, c, order) {\n\t\t// Intrinsic Proper Euler Angles - see https://en.wikipedia.org/wiki/Euler_angles\n\t\t// rotations are applied to the axes in the order specified by 'order'\n\t\t// rotation by angle 'a' is applied first, then by angle 'b', then by angle 'c'\n\t\t// angles are in radians\n\t\tconst cos = Math.cos;\n\t\tconst sin = Math.sin;\n\t\tconst c2 = cos(b / 2);\n\t\tconst s2 = sin(b / 2);\n\t\tconst c13 = cos((a + c) / 2);\n\t\tconst s13 = sin((a + c) / 2);\n\t\tconst c1_3 = cos((a - c) / 2);\n\t\tconst s1_3 = sin((a - c) / 2);\n\t\tconst c3_1 = cos((c - a) / 2);\n\t\tconst s3_1 = sin((c - a) / 2);\n\n\t\tswitch (order) {\n\t\t\tcase 'XYX':\n\t\t\t\tq.set(c2 * s13, s2 * c1_3, s2 * s1_3, c2 * c13);\n\t\t\t\tbreak;\n\n\t\t\tcase 'YZY':\n\t\t\t\tq.set(s2 * s1_3, c2 * s13, s2 * c1_3, c2 * c13);\n\t\t\t\tbreak;\n\n\t\t\tcase 'ZXZ':\n\t\t\t\tq.set(s2 * c1_3, s2 * s1_3, c2 * s13, c2 * c13);\n\t\t\t\tbreak;\n\n\t\t\tcase 'XZX':\n\t\t\t\tq.set(c2 * s13, s2 * s3_1, s2 * c3_1, c2 * c13);\n\t\t\t\tbreak;\n\n\t\t\tcase 'YXY':\n\t\t\t\tq.set(s2 * c3_1, c2 * s13, s2 * s3_1, c2 * c13);\n\t\t\t\tbreak;\n\n\t\t\tcase 'ZYZ':\n\t\t\t\tq.set(s2 * s3_1, s2 * c3_1, c2 * s13, c2 * c13);\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tconsole.warn('THREE.MathUtils: .setQuaternionFromProperEuler() encountered an unknown order: ' + order);\n\t\t}\n\t}\n\n\tvar MathUtils = /*#__PURE__*/Object.freeze({\n\t\t__proto__: null,\n\t\tDEG2RAD: DEG2RAD,\n\t\tRAD2DEG: RAD2DEG,\n\t\tgenerateUUID: generateUUID,\n\t\tclamp: clamp,\n\t\teuclideanModulo: euclideanModulo,\n\t\tmapLinear: mapLinear,\n\t\tinverseLerp: inverseLerp,\n\t\tlerp: lerp,\n\t\tdamp: damp,\n\t\tpingpong: pingpong,\n\t\tsmoothstep: smoothstep,\n\t\tsmootherstep: smootherstep,\n\t\trandInt: randInt,\n\t\trandFloat: randFloat,\n\t\trandFloatSpread: randFloatSpread,\n\t\tseededRandom: seededRandom,\n\t\tdegToRad: degToRad,\n\t\tradToDeg: radToDeg,\n\t\tisPowerOfTwo: isPowerOfTwo,\n\t\tceilPowerOfTwo: ceilPowerOfTwo,\n\t\tfloorPowerOfTwo: floorPowerOfTwo,\n\t\tsetQuaternionFromProperEuler: setQuaternionFromProperEuler\n\t});\n\n\tclass Vector2 {\n\t\tconstructor(x = 0, y = 0) {\n\t\t\tthis.x = x;\n\t\t\tthis.y = y;\n\t\t}\n\n\t\tget width() {\n\t\t\treturn this.x;\n\t\t}\n\n\t\tset width(value) {\n\t\t\tthis.x = value;\n\t\t}\n\n\t\tget height() {\n\t\t\treturn this.y;\n\t\t}\n\n\t\tset height(value) {\n\t\t\tthis.y = value;\n\t\t}\n\n\t\tset(x, y) {\n\t\t\tthis.x = x;\n\t\t\tthis.y = y;\n\t\t\treturn this;\n\t\t}\n\n\t\tsetScalar(scalar) {\n\t\t\tthis.x = scalar;\n\t\t\tthis.y = scalar;\n\t\t\treturn this;\n\t\t}\n\n\t\tsetX(x) {\n\t\t\tthis.x = x;\n\t\t\treturn this;\n\t\t}\n\n\t\tsetY(y) {\n\t\t\tthis.y = y;\n\t\t\treturn this;\n\t\t}\n\n\t\tsetComponent(index, value) {\n\t\t\tswitch (index) {\n\t\t\t\tcase 0:\n\t\t\t\t\tthis.x = value;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 1:\n\t\t\t\t\tthis.y = value;\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new Error('index is out of range: ' + index);\n\t\t\t}\n\n\t\t\treturn this;\n\t\t}\n\n\t\tgetComponent(index) {\n\t\t\tswitch (index) {\n\t\t\t\tcase 0:\n\t\t\t\t\treturn this.x;\n\n\t\t\t\tcase 1:\n\t\t\t\t\treturn this.y;\n\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new Error('index is out of range: ' + index);\n\t\t\t}\n\t\t}\n\n\t\tclone() {\n\t\t\treturn new this.constructor(this.x, this.y);\n\t\t}\n\n\t\tcopy(v) {\n\t\t\tthis.x = v.x;\n\t\t\tthis.y = v.y;\n\t\t\treturn this;\n\t\t}\n\n\t\tadd(v, w) {\n\t\t\tif (w !== undefined) {\n\t\t\t\tconsole.warn('THREE.Vector2: .add() now only accepts one argument. Use .addVectors( a, b ) instead.');\n\t\t\t\treturn this.addVectors(v, w);\n\t\t\t}\n\n\t\t\tthis.x += v.x;\n\t\t\tthis.y += v.y;\n\t\t\treturn this;\n\t\t}\n\n\t\taddScalar(s) {\n\t\t\tthis.x += s;\n\t\t\tthis.y += s;\n\t\t\treturn this;\n\t\t}\n\n\t\taddVectors(a, b) {\n\t\t\tthis.x = a.x + b.x;\n\t\t\tthis.y = a.y + b.y;\n\t\t\treturn this;\n\t\t}\n\n\t\taddScaledVector(v, s) {\n\t\t\tthis.x += v.x * s;\n\t\t\tthis.y += v.y * s;\n\t\t\treturn this;\n\t\t}\n\n\t\tsub(v, w) {\n\t\t\tif (w !== undefined) {\n\t\t\t\tconsole.warn('THREE.Vector2: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.');\n\t\t\t\treturn this.subVectors(v, w);\n\t\t\t}\n\n\t\t\tthis.x -= v.x;\n\t\t\tthis.y -= v.y;\n\t\t\treturn this;\n\t\t}\n\n\t\tsubScalar(s) {\n\t\t\tthis.x -= s;\n\t\t\tthis.y -= s;\n\t\t\treturn this;\n\t\t}\n\n\t\tsubVectors(a, b) {\n\t\t\tthis.x = a.x - b.x;\n\t\t\tthis.y = a.y - b.y;\n\t\t\treturn this;\n\t\t}\n\n\t\tmultiply(v) {\n\t\t\tthis.x *= v.x;\n\t\t\tthis.y *= v.y;\n\t\t\treturn this;\n\t\t}\n\n\t\tmultiplyScalar(scalar) {\n\t\t\tthis.x *= scalar;\n\t\t\tthis.y *= scalar;\n\t\t\treturn this;\n\t\t}\n\n\t\tdivide(v) {\n\t\t\tthis.x /= v.x;\n\t\t\tthis.y /= v.y;\n\t\t\treturn this;\n\t\t}\n\n\t\tdivideScalar(scalar) {\n\t\t\treturn this.multiplyScalar(1 / scalar);\n\t\t}\n\n\t\tapplyMatrix3(m) {\n\t\t\tconst x = this.x,\n\t\t\t\t\t\ty = this.y;\n\t\t\tconst e = m.elements;\n\t\t\tthis.x = e[0] * x + e[3] * y + e[6];\n\t\t\tthis.y = e[1] * x + e[4] * y + e[7];\n\t\t\treturn this;\n\t\t}\n\n\t\tmin(v) {\n\t\t\tthis.x = Math.min(this.x, v.x);\n\t\t\tthis.y = Math.min(this.y, v.y);\n\t\t\treturn this;\n\t\t}\n\n\t\tmax(v) {\n\t\t\tthis.x = Math.max(this.x, v.x);\n\t\t\tthis.y = Math.max(this.y, v.y);\n\t\t\treturn this;\n\t\t}\n\n\t\tclamp(min, max) {\n\t\t\t// assumes min < max, componentwise\n\t\t\tthis.x = Math.max(min.x, Math.min(max.x, this.x));\n\t\t\tthis.y = Math.max(min.y, Math.min(max.y, this.y));\n\t\t\treturn this;\n\t\t}\n\n\t\tclampScalar(minVal, maxVal) {\n\t\t\tthis.x = Math.max(minVal, Math.min(maxVal, this.x));\n\t\t\tthis.y = Math.max(minVal, Math.min(maxVal, this.y));\n\t\t\treturn this;\n\t\t}\n\n\t\tclampLength(min, max) {\n\t\t\tconst length = this.length();\n\t\t\treturn this.divideScalar(length || 1).multiplyScalar(Math.max(min, Math.min(max, length)));\n\t\t}\n\n\t\tfloor() {\n\t\t\tthis.x = Math.floor(this.x);\n\t\t\tthis.y = Math.floor(this.y);\n\t\t\treturn this;\n\t\t}\n\n\t\tceil() {\n\t\t\tthis.x = Math.ceil(this.x);\n\t\t\tthis.y = Math.ceil(this.y);\n\t\t\treturn this;\n\t\t}\n\n\t\tround() {\n\t\t\tthis.x = Math.round(this.x);\n\t\t\tthis.y = Math.round(this.y);\n\t\t\treturn this;\n\t\t}\n\n\t\troundToZero() {\n\t\t\tthis.x = this.x < 0 ? Math.ceil(this.x) : Math.floor(this.x);\n\t\t\tthis.y = this.y < 0 ? Math.ceil(this.y) : Math.floor(this.y);\n\t\t\treturn this;\n\t\t}\n\n\t\tnegate() {\n\t\t\tthis.x = -this.x;\n\t\t\tthis.y = -this.y;\n\t\t\treturn this;\n\t\t}\n\n\t\tdot(v) {\n\t\t\treturn this.x * v.x + this.y * v.y;\n\t\t}\n\n\t\tcross(v) {\n\t\t\treturn this.x * v.y - this.y * v.x;\n\t\t}\n\n\t\tlengthSq() {\n\t\t\treturn this.x * this.x + this.y * this.y;\n\t\t}\n\n\t\tlength() {\n\t\t\treturn Math.sqrt(this.x * this.x + this.y * this.y);\n\t\t}\n\n\t\tmanhattanLength() {\n\t\t\treturn Math.abs(this.x) + Math.abs(this.y);\n\t\t}\n\n\t\tnormalize() {\n\t\t\treturn this.divideScalar(this.length() || 1);\n\t\t}\n\n\t\tangle() {\n\t\t\t// computes the angle in radians with respect to the positive x-axis\n\t\t\tconst angle = Math.atan2(-this.y, -this.x) + Math.PI;\n\t\t\treturn angle;\n\t\t}\n\n\t\tdistanceTo(v) {\n\t\t\treturn Math.sqrt(this.distanceToSquared(v));\n\t\t}\n\n\t\tdistanceToSquared(v) {\n\t\t\tconst dx = this.x - v.x,\n\t\t\t\t\t\tdy = this.y - v.y;\n\t\t\treturn dx * dx + dy * dy;\n\t\t}\n\n\t\tmanhattanDistanceTo(v) {\n\t\t\treturn Math.abs(this.x - v.x) + Math.abs(this.y - v.y);\n\t\t}\n\n\t\tsetLength(length) {\n\t\t\treturn this.normalize().multiplyScalar(length);\n\t\t}\n\n\t\tlerp(v, alpha) {\n\t\t\tthis.x += (v.x - this.x) * alpha;\n\t\t\tthis.y += (v.y - this.y) * alpha;\n\t\t\treturn this;\n\t\t}\n\n\t\tlerpVectors(v1, v2, alpha) {\n\t\t\tthis.x = v1.x + (v2.x - v1.x) * alpha;\n\t\t\tthis.y = v1.y + (v2.y - v1.y) * alpha;\n\t\t\treturn this;\n\t\t}\n\n\t\tequals(v) {\n\t\t\treturn v.x === this.x && v.y === this.y;\n\t\t}\n\n\t\tfromArray(array, offset = 0) {\n\t\t\tthis.x = array[offset];\n\t\t\tthis.y = array[offset + 1];\n\t\t\treturn this;\n\t\t}\n\n\t\ttoArray(array = [], offset = 0) {\n\t\t\tarray[offset] = this.x;\n\t\t\tarray[offset + 1] = this.y;\n\t\t\treturn array;\n\t\t}\n\n\t\tfromBufferAttribute(attribute, index, offset) {\n\t\t\tif (offset !== undefined) {\n\t\t\t\tconsole.warn('THREE.Vector2: offset has been removed from .fromBufferAttribute().');\n\t\t\t}\n\n\t\t\tthis.x = attribute.getX(index);\n\t\t\tthis.y = attribute.getY(index);\n\t\t\treturn this;\n\t\t}\n\n\t\trotateAround(center, angle) {\n\t\t\tconst c = Math.cos(angle),\n\t\t\t\t\t\ts = Math.sin(angle);\n\t\t\tconst x = this.x - center.x;\n\t\t\tconst y = this.y - center.y;\n\t\t\tthis.x = x * c - y * s + center.x;\n\t\t\tthis.y = x * s + y * c + center.y;\n\t\t\treturn this;\n\t\t}\n\n\t\trandom() {\n\t\t\tthis.x = Math.random();\n\t\t\tthis.y = Math.random();\n\t\t\treturn this;\n\t\t}\n\n\t\t*[Symbol.iterator]() {\n\t\t\tyield this.x;\n\t\t\tyield this.y;\n\t\t}\n\n\t}\n\n\tVector2.prototype.isVector2 = true;\n\n\tclass Matrix3 {\n\t\tconstructor() {\n\t\t\tthis.elements = [1, 0, 0, 0, 1, 0, 0, 0, 1];\n\n\t\t\tif (arguments.length > 0) {\n\t\t\t\tconsole.error('THREE.Matrix3: the constructor no longer reads arguments. use .set() instead.');\n\t\t\t}\n\t\t}\n\n\t\tset(n11, n12, n13, n21, n22, n23, n31, n32, n33) {\n\t\t\tconst te = this.elements;\n\t\t\tte[0] = n11;\n\t\t\tte[1] = n21;\n\t\t\tte[2] = n31;\n\t\t\tte[3] = n12;\n\t\t\tte[4] = n22;\n\t\t\tte[5] = n32;\n\t\t\tte[6] = n13;\n\t\t\tte[7] = n23;\n\t\t\tte[8] = n33;\n\t\t\treturn this;\n\t\t}\n\n\t\tidentity() {\n\t\t\tthis.set(1, 0, 0, 0, 1, 0, 0, 0, 1);\n\t\t\treturn this;\n\t\t}\n\n\t\tcopy(m) {\n\t\t\tconst te = this.elements;\n\t\t\tconst me = m.elements;\n\t\t\tte[0] = me[0];\n\t\t\tte[1] = me[1];\n\t\t\tte[2] = me[2];\n\t\t\tte[3] = me[3];\n\t\t\tte[4] = me[4];\n\t\t\tte[5] = me[5];\n\t\t\tte[6] = me[6];\n\t\t\tte[7] = me[7];\n\t\t\tte[8] = me[8];\n\t\t\treturn this;\n\t\t}\n\n\t\textractBasis(xAxis, yAxis, zAxis) {\n\t\t\txAxis.setFromMatrix3Column(this, 0);\n\t\t\tyAxis.setFromMatrix3Column(this, 1);\n\t\t\tzAxis.setFromMatrix3Column(this, 2);\n\t\t\treturn this;\n\t\t}\n\n\t\tsetFromMatrix4(m) {\n\t\t\tconst me = m.elements;\n\t\t\tthis.set(me[0], me[4], me[8], me[1], me[5], me[9], me[2], me[6], me[10]);\n\t\t\treturn this;\n\t\t}\n\n\t\tmultiply(m) {\n\t\t\treturn this.multiplyMatrices(this, m);\n\t\t}\n\n\t\tpremultiply(m) {\n\t\t\treturn this.multiplyMatrices(m, this);\n\t\t}\n\n\t\tmultiplyMatrices(a, b) {\n\t\t\tconst ae = a.elements;\n\t\t\tconst be = b.elements;\n\t\t\tconst te = this.elements;\n\t\t\tconst a11 = ae[0],\n\t\t\t\t\t\ta12 = ae[3],\n\t\t\t\t\t\ta13 = ae[6];\n\t\t\tconst a21 = ae[1],\n\t\t\t\t\t\ta22 = ae[4],\n\t\t\t\t\t\ta23 = ae[7];\n\t\t\tconst a31 = ae[2],\n\t\t\t\t\t\ta32 = ae[5],\n\t\t\t\t\t\ta33 = ae[8];\n\t\t\tconst b11 = be[0],\n\t\t\t\t\t\tb12 = be[3],\n\t\t\t\t\t\tb13 = be[6];\n\t\t\tconst b21 = be[1],\n\t\t\t\t\t\tb22 = be[4],\n\t\t\t\t\t\tb23 = be[7];\n\t\t\tconst b31 = be[2],\n\t\t\t\t\t\tb32 = be[5],\n\t\t\t\t\t\tb33 = be[8];\n\t\t\tte[0] = a11 * b11 + a12 * b21 + a13 * b31;\n\t\t\tte[3] = a11 * b12 + a12 * b22 + a13 * b32;\n\t\t\tte[6] = a11 * b13 + a12 * b23 + a13 * b33;\n\t\t\tte[1] = a21 * b11 + a22 * b21 + a23 * b31;\n\t\t\tte[4] = a21 * b12 + a22 * b22 + a23 * b32;\n\t\t\tte[7] = a21 * b13 + a22 * b23 + a23 * b33;\n\t\t\tte[2] = a31 * b11 + a32 * b21 + a33 * b31;\n\t\t\tte[5] = a31 * b12 + a32 * b22 + a33 * b32;\n\t\t\tte[8] = a31 * b13 + a32 * b23 + a33 * b33;\n\t\t\treturn this;\n\t\t}\n\n\t\tmultiplyScalar(s) {\n\t\t\tconst te = this.elements;\n\t\t\tte[0] *= s;\n\t\t\tte[3] *= s;\n\t\t\tte[6] *= s;\n\t\t\tte[1] *= s;\n\t\t\tte[4] *= s;\n\t\t\tte[7] *= s;\n\t\t\tte[2] *= s;\n\t\t\tte[5] *= s;\n\t\t\tte[8] *= s;\n\t\t\treturn this;\n\t\t}\n\n\t\tdeterminant() {\n\t\t\tconst te = this.elements;\n\t\t\tconst a = te[0],\n\t\t\t\t\t\tb = te[1],\n\t\t\t\t\t\tc = te[2],\n\t\t\t\t\t\td = te[3],\n\t\t\t\t\t\te = te[4],\n\t\t\t\t\t\tf = te[5],\n\t\t\t\t\t\tg = te[6],\n\t\t\t\t\t\th = te[7],\n\t\t\t\t\t\ti = te[8];\n\t\t\treturn a * e * i - a * f * h - b * d * i + b * f * g + c * d * h - c * e * g;\n\t\t}\n\n\t\tinvert() {\n\t\t\tconst te = this.elements,\n\t\t\t\t\t\tn11 = te[0],\n\t\t\t\t\t\tn21 = te[1],\n\t\t\t\t\t\tn31 = te[2],\n\t\t\t\t\t\tn12 = te[3],\n\t\t\t\t\t\tn22 = te[4],\n\t\t\t\t\t\tn32 = te[5],\n\t\t\t\t\t\tn13 = te[6],\n\t\t\t\t\t\tn23 = te[7],\n\t\t\t\t\t\tn33 = te[8],\n\t\t\t\t\t\tt11 = n33 * n22 - n32 * n23,\n\t\t\t\t\t\tt12 = n32 * n13 - n33 * n12,\n\t\t\t\t\t\tt13 = n23 * n12 - n22 * n13,\n\t\t\t\t\t\tdet = n11 * t11 + n21 * t12 + n31 * t13;\n\t\t\tif (det === 0) return this.set(0, 0, 0, 0, 0, 0, 0, 0, 0);\n\t\t\tconst detInv = 1 / det;\n\t\t\tte[0] = t11 * detInv;\n\t\t\tte[1] = (n31 * n23 - n33 * n21) * detInv;\n\t\t\tte[2] = (n32 * n21 - n31 * n22) * detInv;\n\t\t\tte[3] = t12 * detInv;\n\t\t\tte[4] = (n33 * n11 - n31 * n13) * detInv;\n\t\t\tte[5] = (n31 * n12 - n32 * n11) * detInv;\n\t\t\tte[6] = t13 * detInv;\n\t\t\tte[7] = (n21 * n13 - n23 * n11) * detInv;\n\t\t\tte[8] = (n22 * n11 - n21 * n12) * detInv;\n\t\t\treturn this;\n\t\t}\n\n\t\ttranspose() {\n\t\t\tlet tmp;\n\t\t\tconst m = this.elements;\n\t\t\ttmp = m[1];\n\t\t\tm[1] = m[3];\n\t\t\tm[3] = tmp;\n\t\t\ttmp = m[2];\n\t\t\tm[2] = m[6];\n\t\t\tm[6] = tmp;\n\t\t\ttmp = m[5];\n\t\t\tm[5] = m[7];\n\t\t\tm[7] = tmp;\n\t\t\treturn this;\n\t\t}\n\n\t\tgetNormalMatrix(matrix4) {\n\t\t\treturn this.setFromMatrix4(matrix4).invert().transpose();\n\t\t}\n\n\t\ttransposeIntoArray(r) {\n\t\t\tconst m = this.elements;\n\t\t\tr[0] = m[0];\n\t\t\tr[1] = m[3];\n\t\t\tr[2] = m[6];\n\t\t\tr[3] = m[1];\n\t\t\tr[4] = m[4];\n\t\t\tr[5] = m[7];\n\t\t\tr[6] = m[2];\n\t\t\tr[7] = m[5];\n\t\t\tr[8] = m[8];\n\t\t\treturn this;\n\t\t}\n\n\t\tsetUvTransform(tx, ty, sx, sy, rotation, cx, cy) {\n\t\t\tconst c = Math.cos(rotation);\n\t\t\tconst s = Math.sin(rotation);\n\t\t\tthis.set(sx * c, sx * s, -sx * (c * cx + s * cy) + cx + tx, -sy * s, sy * c, -sy * (-s * cx + c * cy) + cy + ty, 0, 0, 1);\n\t\t\treturn this;\n\t\t}\n\n\t\tscale(sx, sy) {\n\t\t\tconst te = this.elements;\n\t\t\tte[0] *= sx;\n\t\t\tte[3] *= sx;\n\t\t\tte[6] *= sx;\n\t\t\tte[1] *= sy;\n\t\t\tte[4] *= sy;\n\t\t\tte[7] *= sy;\n\t\t\treturn this;\n\t\t}\n\n\t\trotate(theta) {\n\t\t\tconst c = Math.cos(theta);\n\t\t\tconst s = Math.sin(theta);\n\t\t\tconst te = this.elements;\n\t\t\tconst a11 = te[0],\n\t\t\t\t\t\ta12 = te[3],\n\t\t\t\t\t\ta13 = te[6];\n\t\t\tconst a21 = te[1],\n\t\t\t\t\t\ta22 = te[4],\n\t\t\t\t\t\ta23 = te[7];\n\t\t\tte[0] = c * a11 + s * a21;\n\t\t\tte[3] = c * a12 + s * a22;\n\t\t\tte[6] = c * a13 + s * a23;\n\t\t\tte[1] = -s * a11 + c * a21;\n\t\t\tte[4] = -s * a12 + c * a22;\n\t\t\tte[7] = -s * a13 + c * a23;\n\t\t\treturn this;\n\t\t}\n\n\t\ttranslate(tx, ty) {\n\t\t\tconst te = this.elements;\n\t\t\tte[0] += tx * te[2];\n\t\t\tte[3] += tx * te[5];\n\t\t\tte[6] += tx * te[8];\n\t\t\tte[1] += ty * te[2];\n\t\t\tte[4] += ty * te[5];\n\t\t\tte[7] += ty * te[8];\n\t\t\treturn this;\n\t\t}\n\n\t\tequals(matrix) {\n\t\t\tconst te = this.elements;\n\t\t\tconst me = matrix.elements;\n\n\t\t\tfor (let i = 0; i < 9; i++) {\n\t\t\t\tif (te[i] !== me[i]) return false;\n\t\t\t}\n\n\t\t\treturn true;\n\t\t}\n\n\t\tfromArray(array, offset = 0) {\n\t\t\tfor (let i = 0; i < 9; i++) {\n\t\t\t\tthis.elements[i] = array[i + offset];\n\t\t\t}\n\n\t\t\treturn this;\n\t\t}\n\n\t\ttoArray(array = [], offset = 0) {\n\t\t\tconst te = this.elements;\n\t\t\tarray[offset] = te[0];\n\t\t\tarray[offset + 1] = te[1];\n\t\t\tarray[offset + 2] = te[2];\n\t\t\tarray[offset + 3] = te[3];\n\t\t\tarray[offset + 4] = te[4];\n\t\t\tarray[offset + 5] = te[5];\n\t\t\tarray[offset + 6] = te[6];\n\t\t\tarray[offset + 7] = te[7];\n\t\t\tarray[offset + 8] = te[8];\n\t\t\treturn array;\n\t\t}\n\n\t\tclone() {\n\t\t\treturn new this.constructor().fromArray(this.elements);\n\t\t}\n\n\t}\n\n\tMatrix3.prototype.isMatrix3 = true;\n\n\tfunction arrayMax(array) {\n\t\tif (array.length === 0) return -Infinity;\n\t\tlet max = array[0];\n\n\t\tfor (let i = 1, l = array.length; i < l; ++i) {\n\t\t\tif (array[i] > max) max = array[i];\n\t\t}\n\n\t\treturn max;\n\t}\n\n\tconst TYPED_ARRAYS = {\n\t\tInt8Array: Int8Array,\n\t\tUint8Array: Uint8Array,\n\t\tUint8ClampedArray: Uint8ClampedArray,\n\t\tInt16Array: Int16Array,\n\t\tUint16Array: Uint16Array,\n\t\tInt32Array: Int32Array,\n\t\tUint32Array: Uint32Array,\n\t\tFloat32Array: Float32Array,\n\t\tFloat64Array: Float64Array\n\t};\n\n\tfunction getTypedArray(type, buffer) {\n\t\treturn new TYPED_ARRAYS[type](buffer);\n\t}\n\n\tfunction createElementNS(name) {\n\t\treturn document.createElementNS('http://www.w3.org/1999/xhtml', name);\n\t}\n\t/**\n\t\t* cyrb53 hash for string from: https://stackoverflow.com/a/52171480\n\t\t*\n\t\t* Public Domain, @bryc - https://stackoverflow.com/users/815680/bryc\n\t\t*\n\t\t* It is roughly similar to the well-known MurmurHash/xxHash algorithms. It uses a combination\n\t\t* of multiplication and Xorshift to generate the hash, but not as thorough. As a result it's\n\t\t* faster than either would be in JavaScript and significantly simpler to implement. Keep in\n\t\t* mind this is not a secure algorithm, if privacy/security is a concern, this is not for you.\n\t\t*\n\t\t* @param {string} str\n\t\t* @param {number} seed, default 0\n\t\t* @returns number\n\t\t*/\n\n\n\tfunction hashString(str, seed = 0) {\n\t\tlet h1 = 0xdeadbeef ^ seed,\n\t\t\t\th2 = 0x41c6ce57 ^ seed;\n\n\t\tfor (let i = 0, ch; i < str.length; i++) {\n\t\t\tch = str.charCodeAt(i);\n\t\t\th1 = Math.imul(h1 ^ ch, 2654435761);\n\t\t\th2 = Math.imul(h2 ^ ch, 1597334677);\n\t\t}\n\n\t\th1 = Math.imul(h1 ^ h1 >>> 16, 2246822507) ^ Math.imul(h2 ^ h2 >>> 13, 3266489909);\n\t\th2 = Math.imul(h2 ^ h2 >>> 16, 2246822507) ^ Math.imul(h1 ^ h1 >>> 13, 3266489909);\n\t\treturn 4294967296 * (2097151 & h2) + (h1 >>> 0);\n\t}\n\n\tlet _canvas;\n\n\tclass ImageUtils {\n\t\tstatic getDataURL(image) {\n\t\t\tif (/^data:/i.test(image.src)) {\n\t\t\t\treturn image.src;\n\t\t\t}\n\n\t\t\tif (typeof HTMLCanvasElement == 'undefined') {\n\t\t\t\treturn image.src;\n\t\t\t}\n\n\t\t\tlet canvas;\n\n\t\t\tif (image instanceof HTMLCanvasElement) {\n\t\t\t\tcanvas = image;\n\t\t\t} else {\n\t\t\t\tif (_canvas === undefined) _canvas = createElementNS('canvas');\n\t\t\t\t_canvas.width = image.width;\n\t\t\t\t_canvas.height = image.height;\n\n\t\t\t\tconst context = _canvas.getContext('2d');\n\n\t\t\t\tif (image instanceof ImageData) {\n\t\t\t\t\tcontext.putImageData(image, 0, 0);\n\t\t\t\t} else {\n\t\t\t\t\tcontext.drawImage(image, 0, 0, image.width, image.height);\n\t\t\t\t}\n\n\t\t\t\tcanvas = _canvas;\n\t\t\t}\n\n\t\t\tif (canvas.width > 2048 || canvas.height > 2048) {\n\t\t\t\tconsole.warn('THREE.ImageUtils.getDataURL: Image converted to jpg for performance reasons', image);\n\t\t\t\treturn canvas.toDataURL('image/jpeg', 0.6);\n\t\t\t} else {\n\t\t\t\treturn canvas.toDataURL('image/png');\n\t\t\t}\n\t\t}\n\n\t}\n\n\tlet textureId = 0;\n\n\tclass Texture extends EventDispatcher {\n\t\tconstructor(image = Texture.DEFAULT_IMAGE, mapping = Texture.DEFAULT_MAPPING, wrapS = ClampToEdgeWrapping, wrapT = ClampToEdgeWrapping, magFilter = LinearFilter, minFilter = LinearMipmapLinearFilter, format = RGBAFormat, type = UnsignedByteType, anisotropy = 1, encoding = LinearEncoding) {\n\t\t\tsuper();\n\t\t\tObject.defineProperty(this, 'id', {\n\t\t\t\tvalue: textureId++\n\t\t\t});\n\t\t\tthis.uuid = generateUUID();\n\t\t\tthis.name = '';\n\t\t\tthis.image = image;\n\t\t\tthis.mipmaps = [];\n\t\t\tthis.mapping = mapping;\n\t\t\tthis.wrapS = wrapS;\n\t\t\tthis.wrapT = wrapT;\n\t\t\tthis.magFilter = magFilter;\n\t\t\tthis.minFilter = minFilter;\n\t\t\tthis.anisotropy = anisotropy;\n\t\t\tthis.format = format;\n\t\t\tthis.internalFormat = null;\n\t\t\tthis.type = type;\n\t\t\tthis.offset = new Vector2(0, 0);\n\t\t\tthis.repeat = new Vector2(1, 1);\n\t\t\tthis.center = new Vector2(0, 0);\n\t\t\tthis.rotation = 0;\n\t\t\tthis.matrixAutoUpdate = true;\n\t\t\tthis.matrix = new Matrix3();\n\t\t\tthis.generateMipmaps = true;\n\t\t\tthis.premultiplyAlpha = false;\n\t\t\tthis.flipY = true;\n\t\t\tthis.unpackAlignment = 4; // valid values: 1, 2, 4, 8 (see http://www.khronos.org/opengles/sdk/docs/man/xhtml/glPixelStorei.xml)\n\t\t\t// Values of encoding !== THREE.LinearEncoding only supported on map, envMap and emissiveMap.\n\t\t\t//\n\t\t\t// Also changing the encoding after already used by a Material will not automatically make the Material\n\t\t\t// update. You need to explicitly call Material.needsUpdate to trigger it to recompile.\n\n\t\t\tthis.encoding = encoding;\n\t\t\tthis.userData = {};\n\t\t\tthis.version = 0;\n\t\t\tthis.onUpdate = null;\n\t\t\tthis.isRenderTargetTexture = false;\n\t\t}\n\n\t\tupdateMatrix() {\n\t\t\tthis.matrix.setUvTransform(this.offset.x, this.offset.y, this.repeat.x, this.repeat.y, this.rotation, this.center.x, this.center.y);\n\t\t}\n\n\t\tclone() {\n\t\t\treturn new this.constructor().copy(this);\n\t\t}\n\n\t\tcopy(source) {\n\t\t\tthis.name = source.name;\n\t\t\tthis.image = source.image;\n\t\t\tthis.mipmaps = source.mipmaps.slice(0);\n\t\t\tthis.mapping = source.mapping;\n\t\t\tthis.wrapS = source.wrapS;\n\t\t\tthis.wrapT = source.wrapT;\n\t\t\tthis.magFilter = source.magFilter;\n\t\t\tthis.minFilter = source.minFilter;\n\t\t\tthis.anisotropy = source.anisotropy;\n\t\t\tthis.format = source.format;\n\t\t\tthis.internalFormat = source.internalFormat;\n\t\t\tthis.type = source.type;\n\t\t\tthis.offset.copy(source.offset);\n\t\t\tthis.repeat.copy(source.repeat);\n\t\t\tthis.center.copy(source.center);\n\t\t\tthis.rotation = source.rotation;\n\t\t\tthis.matrixAutoUpdate = source.matrixAutoUpdate;\n\t\t\tthis.matrix.copy(source.matrix);\n\t\t\tthis.generateMipmaps = source.generateMipmaps;\n\t\t\tthis.premultiplyAlpha = source.premultiplyAlpha;\n\t\t\tthis.flipY = source.flipY;\n\t\t\tthis.unpackAlignment = source.unpackAlignment;\n\t\t\tthis.encoding = source.encoding;\n\t\t\tthis.userData = JSON.parse(JSON.stringify(source.userData));\n\t\t\treturn this;\n\t\t}\n\n\t\ttoJSON(meta) {\n\t\t\tconst isRootObject = meta === undefined || typeof meta === 'string';\n\n\t\t\tif (!isRootObject && meta.textures[this.uuid] !== undefined) {\n\t\t\t\treturn meta.textures[this.uuid];\n\t\t\t}\n\n\t\t\tconst output = {\n\t\t\t\tmetadata: {\n\t\t\t\t\tversion: 4.5,\n\t\t\t\t\ttype: 'Texture',\n\t\t\t\t\tgenerator: 'Texture.toJSON'\n\t\t\t\t},\n\t\t\t\tuuid: this.uuid,\n\t\t\t\tname: this.name,\n\t\t\t\tmapping: this.mapping,\n\t\t\t\trepeat: [this.repeat.x, this.repeat.y],\n\t\t\t\toffset: [this.offset.x, this.offset.y],\n\t\t\t\tcenter: [this.center.x, this.center.y],\n\t\t\t\trotation: this.rotation,\n\t\t\t\twrap: [this.wrapS, this.wrapT],\n\t\t\t\tformat: this.format,\n\t\t\t\ttype: this.type,\n\t\t\t\tencoding: this.encoding,\n\t\t\t\tminFilter: this.minFilter,\n\t\t\t\tmagFilter: this.magFilter,\n\t\t\t\tanisotropy: this.anisotropy,\n\t\t\t\tflipY: this.flipY,\n\t\t\t\tpremultiplyAlpha: this.premultiplyAlpha,\n\t\t\t\tunpackAlignment: this.unpackAlignment\n\t\t\t};\n\n\t\t\tif (this.image !== undefined) {\n\t\t\t\t// TODO: Move to THREE.Image\n\t\t\t\tconst image = this.image;\n\n\t\t\t\tif (image.uuid === undefined) {\n\t\t\t\t\timage.uuid = generateUUID(); // UGH\n\t\t\t\t}\n\n\t\t\t\tif (!isRootObject && meta.images[image.uuid] === undefined) {\n\t\t\t\t\tlet url;\n\n\t\t\t\t\tif (Array.isArray(image)) {\n\t\t\t\t\t\t// process array of images e.g. CubeTexture\n\t\t\t\t\t\turl = [];\n\n\t\t\t\t\t\tfor (let i = 0, l = image.length; i < l; i++) {\n\t\t\t\t\t\t\t// check cube texture with data textures\n\t\t\t\t\t\t\tif (image[i].isDataTexture) {\n\t\t\t\t\t\t\t\turl.push(serializeImage(image[i].image));\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\turl.push(serializeImage(image[i]));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// process single image\n\t\t\t\t\t\turl = serializeImage(image);\n\t\t\t\t\t}\n\n\t\t\t\t\tmeta.images[image.uuid] = {\n\t\t\t\t\t\tuuid: image.uuid,\n\t\t\t\t\t\turl: url\n\t\t\t\t\t};\n\t\t\t\t}\n\n\t\t\t\toutput.image = image.uuid;\n\t\t\t}\n\n\t\t\tif (JSON.stringify(this.userData) !== '{}') output.userData = this.userData;\n\n\t\t\tif (!isRootObject) {\n\t\t\t\tmeta.textures[this.uuid] = output;\n\t\t\t}\n\n\t\t\treturn output;\n\t\t}\n\n\t\tdispose() {\n\t\t\tthis.dispatchEvent({\n\t\t\t\ttype: 'dispose'\n\t\t\t});\n\t\t}\n\n\t\ttransformUv(uv) {\n\t\t\tif (this.mapping !== UVMapping) return uv;\n\t\t\tuv.applyMatrix3(this.matrix);\n\n\t\t\tif (uv.x < 0 || uv.x > 1) {\n\t\t\t\tswitch (this.wrapS) {\n\t\t\t\t\tcase RepeatWrapping:\n\t\t\t\t\t\tuv.x = uv.x - Math.floor(uv.x);\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase ClampToEdgeWrapping:\n\t\t\t\t\t\tuv.x = uv.x < 0 ? 0 : 1;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase MirroredRepeatWrapping:\n\t\t\t\t\t\tif (Math.abs(Math.floor(uv.x) % 2) === 1) {\n\t\t\t\t\t\t\tuv.x = Math.ceil(uv.x) - uv.x;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tuv.x = uv.x - Math.floor(uv.x);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (uv.y < 0 || uv.y > 1) {\n\t\t\t\tswitch (this.wrapT) {\n\t\t\t\t\tcase RepeatWrapping:\n\t\t\t\t\t\tuv.y = uv.y - Math.floor(uv.y);\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase ClampToEdgeWrapping:\n\t\t\t\t\t\tuv.y = uv.y < 0 ? 0 : 1;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase MirroredRepeatWrapping:\n\t\t\t\t\t\tif (Math.abs(Math.floor(uv.y) % 2) === 1) {\n\t\t\t\t\t\t\tuv.y = Math.ceil(uv.y) - uv.y;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tuv.y = uv.y - Math.floor(uv.y);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (this.flipY) {\n\t\t\t\tuv.y = 1 - uv.y;\n\t\t\t}\n\n\t\t\treturn uv;\n\t\t}\n\n\t\tset needsUpdate(value) {\n\t\t\tif (value === true) this.version++;\n\t\t}\n\n\t}\n\n\tTexture.DEFAULT_IMAGE = undefined;\n\tTexture.DEFAULT_MAPPING = UVMapping;\n\tTexture.prototype.isTexture = true;\n\n\tfunction serializeImage(image) {\n\t\tif (typeof HTMLImageElement !== 'undefined' && image instanceof HTMLImageElement || typeof HTMLCanvasElement !== 'undefined' && image instanceof HTMLCanvasElement || typeof ImageBitmap !== 'undefined' && image instanceof ImageBitmap) {\n\t\t\t// default images\n\t\t\treturn ImageUtils.getDataURL(image);\n\t\t} else {\n\t\t\tif (image.data) {\n\t\t\t\t// images of DataTexture\n\t\t\t\treturn {\n\t\t\t\t\tdata: Array.prototype.slice.call(image.data),\n\t\t\t\t\twidth: image.width,\n\t\t\t\t\theight: image.height,\n\t\t\t\t\ttype: image.data.constructor.name\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\tconsole.warn('THREE.Texture: Unable to serialize Texture.');\n\t\t\t\treturn {};\n\t\t\t}\n\t\t}\n\t}\n\n\tclass Vector4 {\n\t\tconstructor(x = 0, y = 0, z = 0, w = 1) {\n\t\t\tthis.x = x;\n\t\t\tthis.y = y;\n\t\t\tthis.z = z;\n\t\t\tthis.w = w;\n\t\t}\n\n\t\tget width() {\n\t\t\treturn this.z;\n\t\t}\n\n\t\tset width(value) {\n\t\t\tthis.z = value;\n\t\t}\n\n\t\tget height() {\n\t\t\treturn this.w;\n\t\t}\n\n\t\tset height(value) {\n\t\t\tthis.w = value;\n\t\t}\n\n\t\tset(x, y, z, w) {\n\t\t\tthis.x = x;\n\t\t\tthis.y = y;\n\t\t\tthis.z = z;\n\t\t\tthis.w = w;\n\t\t\treturn this;\n\t\t}\n\n\t\tsetScalar(scalar) {\n\t\t\tthis.x = scalar;\n\t\t\tthis.y = scalar;\n\t\t\tthis.z = scalar;\n\t\t\tthis.w = scalar;\n\t\t\treturn this;\n\t\t}\n\n\t\tsetX(x) {\n\t\t\tthis.x = x;\n\t\t\treturn this;\n\t\t}\n\n\t\tsetY(y) {\n\t\t\tthis.y = y;\n\t\t\treturn this;\n\t\t}\n\n\t\tsetZ(z) {\n\t\t\tthis.z = z;\n\t\t\treturn this;\n\t\t}\n\n\t\tsetW(w) {\n\t\t\tthis.w = w;\n\t\t\treturn this;\n\t\t}\n\n\t\tsetComponent(index, value) {\n\t\t\tswitch (index) {\n\t\t\t\tcase 0:\n\t\t\t\t\tthis.x = value;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 1:\n\t\t\t\t\tthis.y = value;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 2:\n\t\t\t\t\tthis.z = value;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 3:\n\t\t\t\t\tthis.w = value;\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new Error('index is out of range: ' + index);\n\t\t\t}\n\n\t\t\treturn this;\n\t\t}\n\n\t\tgetComponent(index) {\n\t\t\tswitch (index) {\n\t\t\t\tcase 0:\n\t\t\t\t\treturn this.x;\n\n\t\t\t\tcase 1:\n\t\t\t\t\treturn this.y;\n\n\t\t\t\tcase 2:\n\t\t\t\t\treturn this.z;\n\n\t\t\t\tcase 3:\n\t\t\t\t\treturn this.w;\n\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new Error('index is out of range: ' + index);\n\t\t\t}\n\t\t}\n\n\t\tclone() {\n\t\t\treturn new this.constructor(this.x, this.y, this.z, this.w);\n\t\t}\n\n\t\tcopy(v) {\n\t\t\tthis.x = v.x;\n\t\t\tthis.y = v.y;\n\t\t\tthis.z = v.z;\n\t\t\tthis.w = v.w !== undefined ? v.w : 1;\n\t\t\treturn this;\n\t\t}\n\n\t\tadd(v, w) {\n\t\t\tif (w !== undefined) {\n\t\t\t\tconsole.warn('THREE.Vector4: .add() now only accepts one argument. Use .addVectors( a, b ) instead.');\n\t\t\t\treturn this.addVectors(v, w);\n\t\t\t}\n\n\t\t\tthis.x += v.x;\n\t\t\tthis.y += v.y;\n\t\t\tthis.z += v.z;\n\t\t\tthis.w += v.w;\n\t\t\treturn this;\n\t\t}\n\n\t\taddScalar(s) {\n\t\t\tthis.x += s;\n\t\t\tthis.y += s;\n\t\t\tthis.z += s;\n\t\t\tthis.w += s;\n\t\t\treturn this;\n\t\t}\n\n\t\taddVectors(a, b) {\n\t\t\tthis.x = a.x + b.x;\n\t\t\tthis.y = a.y + b.y;\n\t\t\tthis.z = a.z + b.z;\n\t\t\tthis.w = a.w + b.w;\n\t\t\treturn this;\n\t\t}\n\n\t\taddScaledVector(v, s) {\n\t\t\tthis.x += v.x * s;\n\t\t\tthis.y += v.y * s;\n\t\t\tthis.z += v.z * s;\n\t\t\tthis.w += v.w * s;\n\t\t\treturn this;\n\t\t}\n\n\t\tsub(v, w) {\n\t\t\tif (w !== undefined) {\n\t\t\t\tconsole.warn('THREE.Vector4: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.');\n\t\t\t\treturn this.subVectors(v, w);\n\t\t\t}\n\n\t\t\tthis.x -= v.x;\n\t\t\tthis.y -= v.y;\n\t\t\tthis.z -= v.z;\n\t\t\tthis.w -= v.w;\n\t\t\treturn this;\n\t\t}\n\n\t\tsubScalar(s) {\n\t\t\tthis.x -= s;\n\t\t\tthis.y -= s;\n\t\t\tthis.z -= s;\n\t\t\tthis.w -= s;\n\t\t\treturn this;\n\t\t}\n\n\t\tsubVectors(a, b) {\n\t\t\tthis.x = a.x - b.x;\n\t\t\tthis.y = a.y - b.y;\n\t\t\tthis.z = a.z - b.z;\n\t\t\tthis.w = a.w - b.w;\n\t\t\treturn this;\n\t\t}\n\n\t\tmultiply(v) {\n\t\t\tthis.x *= v.x;\n\t\t\tthis.y *= v.y;\n\t\t\tthis.z *= v.z;\n\t\t\tthis.w *= v.w;\n\t\t\treturn this;\n\t\t}\n\n\t\tmultiplyScalar(scalar) {\n\t\t\tthis.x *= scalar;\n\t\t\tthis.y *= scalar;\n\t\t\tthis.z *= scalar;\n\t\t\tthis.w *= scalar;\n\t\t\treturn this;\n\t\t}\n\n\t\tapplyMatrix4(m) {\n\t\t\tconst x = this.x,\n\t\t\t\t\t\ty = this.y,\n\t\t\t\t\t\tz = this.z,\n\t\t\t\t\t\tw = this.w;\n\t\t\tconst e = m.elements;\n\t\t\tthis.x = e[0] * x + e[4] * y + e[8] * z + e[12] * w;\n\t\t\tthis.y = e[1] * x + e[5] * y + e[9] * z + e[13] * w;\n\t\t\tthis.z = e[2] * x + e[6] * y + e[10] * z + e[14] * w;\n\t\t\tthis.w = e[3] * x + e[7] * y + e[11] * z + e[15] * w;\n\t\t\treturn this;\n\t\t}\n\n\t\tdivideScalar(scalar) {\n\t\t\treturn this.multiplyScalar(1 / scalar);\n\t\t}\n\n\t\tsetAxisAngleFromQuaternion(q) {\n\t\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/quaternionToAngle/index.htm\n\t\t\t// q is assumed to be normalized\n\t\t\tthis.w = 2 * Math.acos(q.w);\n\t\t\tconst s = Math.sqrt(1 - q.w * q.w);\n\n\t\t\tif (s < 0.0001) {\n\t\t\t\tthis.x = 1;\n\t\t\t\tthis.y = 0;\n\t\t\t\tthis.z = 0;\n\t\t\t} else {\n\t\t\t\tthis.x = q.x / s;\n\t\t\t\tthis.y = q.y / s;\n\t\t\t\tthis.z = q.z / s;\n\t\t\t}\n\n\t\t\treturn this;\n\t\t}\n\n\t\tsetAxisAngleFromRotationMatrix(m) {\n\t\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToAngle/index.htm\n\t\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\t\t\tlet angle, x, y, z; // variables for result\n\n\t\t\tconst epsilon = 0.01,\n\t\t\t\t\t\t// margin to allow for rounding errors\n\t\t\tepsilon2 = 0.1,\n\t\t\t\t\t\t// margin to distinguish between 0 and 180 degrees\n\t\t\tte = m.elements,\n\t\t\t\t\t\tm11 = te[0],\n\t\t\t\t\t\tm12 = te[4],\n\t\t\t\t\t\tm13 = te[8],\n\t\t\t\t\t\tm21 = te[1],\n\t\t\t\t\t\tm22 = te[5],\n\t\t\t\t\t\tm23 = te[9],\n\t\t\t\t\t\tm31 = te[2],\n\t\t\t\t\t\tm32 = te[6],\n\t\t\t\t\t\tm33 = te[10];\n\n\t\t\tif (Math.abs(m12 - m21) < epsilon && Math.abs(m13 - m31) < epsilon && Math.abs(m23 - m32) < epsilon) {\n\t\t\t\t// singularity found\n\t\t\t\t// first check for identity matrix which must have +1 for all terms\n\t\t\t\t// in leading diagonal and zero in other terms\n\t\t\t\tif (Math.abs(m12 + m21) < epsilon2 && Math.abs(m13 + m31) < epsilon2 && Math.abs(m23 + m32) < epsilon2 && Math.abs(m11 + m22 + m33 - 3) < epsilon2) {\n\t\t\t\t\t// this singularity is identity matrix so angle = 0\n\t\t\t\t\tthis.set(1, 0, 0, 0);\n\t\t\t\t\treturn this; // zero angle, arbitrary axis\n\t\t\t\t} // otherwise this singularity is angle = 180\n\n\n\t\t\t\tangle = Math.PI;\n\t\t\t\tconst xx = (m11 + 1) / 2;\n\t\t\t\tconst yy = (m22 + 1) / 2;\n\t\t\t\tconst zz = (m33 + 1) / 2;\n\t\t\t\tconst xy = (m12 + m21) / 4;\n\t\t\t\tconst xz = (m13 + m31) / 4;\n\t\t\t\tconst yz = (m23 + m32) / 4;\n\n\t\t\t\tif (xx > yy && xx > zz) {\n\t\t\t\t\t// m11 is the largest diagonal term\n\t\t\t\t\tif (xx < epsilon) {\n\t\t\t\t\t\tx = 0;\n\t\t\t\t\t\ty = 0.707106781;\n\t\t\t\t\t\tz = 0.707106781;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tx = Math.sqrt(xx);\n\t\t\t\t\t\ty = xy / x;\n\t\t\t\t\t\tz = xz / x;\n\t\t\t\t\t}\n\t\t\t\t} else if (yy > zz) {\n\t\t\t\t\t// m22 is the largest diagonal term\n\t\t\t\t\tif (yy < epsilon) {\n\t\t\t\t\t\tx = 0.707106781;\n\t\t\t\t\t\ty = 0;\n\t\t\t\t\t\tz = 0.707106781;\n\t\t\t\t\t} else {\n\t\t\t\t\t\ty = Math.sqrt(yy);\n\t\t\t\t\t\tx = xy / y;\n\t\t\t\t\t\tz = yz / y;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\t// m33 is the largest diagonal term so base result on this\n\t\t\t\t\tif (zz < epsilon) {\n\t\t\t\t\t\tx = 0.707106781;\n\t\t\t\t\t\ty = 0.707106781;\n\t\t\t\t\t\tz = 0;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tz = Math.sqrt(zz);\n\t\t\t\t\t\tx = xz / z;\n\t\t\t\t\t\ty = yz / z;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tthis.set(x, y, z, angle);\n\t\t\t\treturn this; // return 180 deg rotation\n\t\t\t} // as we have reached here there are no singularities so we can handle normally\n\n\n\t\t\tlet s = Math.sqrt((m32 - m23) * (m32 - m23) + (m13 - m31) * (m13 - m31) + (m21 - m12) * (m21 - m12)); // used to normalize\n\n\t\t\tif (Math.abs(s) < 0.001) s = 1; // prevent divide by zero, should not happen if matrix is orthogonal and should be\n\t\t\t// caught by singularity test above, but I've left it in just in case\n\n\t\t\tthis.x = (m32 - m23) / s;\n\t\t\tthis.y = (m13 - m31) / s;\n\t\t\tthis.z = (m21 - m12) / s;\n\t\t\tthis.w = Math.acos((m11 + m22 + m33 - 1) / 2);\n\t\t\treturn this;\n\t\t}\n\n\t\tmin(v) {\n\t\t\tthis.x = Math.min(this.x, v.x);\n\t\t\tthis.y = Math.min(this.y, v.y);\n\t\t\tthis.z = Math.min(this.z, v.z);\n\t\t\tthis.w = Math.min(this.w, v.w);\n\t\t\treturn this;\n\t\t}\n\n\t\tmax(v) {\n\t\t\tthis.x = Math.max(this.x, v.x);\n\t\t\tthis.y = Math.max(this.y, v.y);\n\t\t\tthis.z = Math.max(this.z, v.z);\n\t\t\tthis.w = Math.max(this.w, v.w);\n\t\t\treturn this;\n\t\t}\n\n\t\tclamp(min, max) {\n\t\t\t// assumes min < max, componentwise\n\t\t\tthis.x = Math.max(min.x, Math.min(max.x, this.x));\n\t\t\tthis.y = Math.max(min.y, Math.min(max.y, this.y));\n\t\t\tthis.z = Math.max(min.z, Math.min(max.z, this.z));\n\t\t\tthis.w = Math.max(min.w, Math.min(max.w, this.w));\n\t\t\treturn this;\n\t\t}\n\n\t\tclampScalar(minVal, maxVal) {\n\t\t\tthis.x = Math.max(minVal, Math.min(maxVal, this.x));\n\t\t\tthis.y = Math.max(minVal, Math.min(maxVal, this.y));\n\t\t\tthis.z = Math.max(minVal, Math.min(maxVal, this.z));\n\t\t\tthis.w = Math.max(minVal, Math.min(maxVal, this.w));\n\t\t\treturn this;\n\t\t}\n\n\t\tclampLength(min, max) {\n\t\t\tconst length = this.length();\n\t\t\treturn this.divideScalar(length || 1).multiplyScalar(Math.max(min, Math.min(max, length)));\n\t\t}\n\n\t\tfloor() {\n\t\t\tthis.x = Math.floor(this.x);\n\t\t\tthis.y = Math.floor(this.y);\n\t\t\tthis.z = Math.floor(this.z);\n\t\t\tthis.w = Math.floor(this.w);\n\t\t\treturn this;\n\t\t}\n\n\t\tceil() {\n\t\t\tthis.x = Math.ceil(this.x);\n\t\t\tthis.y = Math.ceil(this.y);\n\t\t\tthis.z = Math.ceil(this.z);\n\t\t\tthis.w = Math.ceil(this.w);\n\t\t\treturn this;\n\t\t}\n\n\t\tround() {\n\t\t\tthis.x = Math.round(this.x);\n\t\t\tthis.y = Math.round(this.y);\n\t\t\tthis.z = Math.round(this.z);\n\t\t\tthis.w = Math.round(this.w);\n\t\t\treturn this;\n\t\t}\n\n\t\troundToZero() {\n\t\t\tthis.x = this.x < 0 ? Math.ceil(this.x) : Math.floor(this.x);\n\t\t\tthis.y = this.y < 0 ? Math.ceil(this.y) : Math.floor(this.y);\n\t\t\tthis.z = this.z < 0 ? Math.ceil(this.z) : Math.floor(this.z);\n\t\t\tthis.w = this.w < 0 ? Math.ceil(this.w) : Math.floor(this.w);\n\t\t\treturn this;\n\t\t}\n\n\t\tnegate() {\n\t\t\tthis.x = -this.x;\n\t\t\tthis.y = -this.y;\n\t\t\tthis.z = -this.z;\n\t\t\tthis.w = -this.w;\n\t\t\treturn this;\n\t\t}\n\n\t\tdot(v) {\n\t\t\treturn this.x * v.x + this.y * v.y + this.z * v.z + this.w * v.w;\n\t\t}\n\n\t\tlengthSq() {\n\t\t\treturn this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w;\n\t\t}\n\n\t\tlength() {\n\t\t\treturn Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w);\n\t\t}\n\n\t\tmanhattanLength() {\n\t\t\treturn Math.abs(this.x) + Math.abs(this.y) + Math.abs(this.z) + Math.abs(this.w);\n\t\t}\n\n\t\tnormalize() {\n\t\t\treturn this.divideScalar(this.length() || 1);\n\t\t}\n\n\t\tsetLength(length) {\n\t\t\treturn this.normalize().multiplyScalar(length);\n\t\t}\n\n\t\tlerp(v, alpha) {\n\t\t\tthis.x += (v.x - this.x) * alpha;\n\t\t\tthis.y += (v.y - this.y) * alpha;\n\t\t\tthis.z += (v.z - this.z) * alpha;\n\t\t\tthis.w += (v.w - this.w) * alpha;\n\t\t\treturn this;\n\t\t}\n\n\t\tlerpVectors(v1, v2, alpha) {\n\t\t\tthis.x = v1.x + (v2.x - v1.x) * alpha;\n\t\t\tthis.y = v1.y + (v2.y - v1.y) * alpha;\n\t\t\tthis.z = v1.z + (v2.z - v1.z) * alpha;\n\t\t\tthis.w = v1.w + (v2.w - v1.w) * alpha;\n\t\t\treturn this;\n\t\t}\n\n\t\tequals(v) {\n\t\t\treturn v.x === this.x && v.y === this.y && v.z === this.z && v.w === this.w;\n\t\t}\n\n\t\tfromArray(array, offset = 0) {\n\t\t\tthis.x = array[offset];\n\t\t\tthis.y = array[offset + 1];\n\t\t\tthis.z = array[offset + 2];\n\t\t\tthis.w = array[offset + 3];\n\t\t\treturn this;\n\t\t}\n\n\t\ttoArray(array = [], offset = 0) {\n\t\t\tarray[offset] = this.x;\n\t\t\tarray[offset + 1] = this.y;\n\t\t\tarray[offset + 2] = this.z;\n\t\t\tarray[offset + 3] = this.w;\n\t\t\treturn array;\n\t\t}\n\n\t\tfromBufferAttribute(attribute, index, offset) {\n\t\t\tif (offset !== undefined) {\n\t\t\t\tconsole.warn('THREE.Vector4: offset has been removed from .fromBufferAttribute().');\n\t\t\t}\n\n\t\t\tthis.x = attribute.getX(index);\n\t\t\tthis.y = attribute.getY(index);\n\t\t\tthis.z = attribute.getZ(index);\n\t\t\tthis.w = attribute.getW(index);\n\t\t\treturn this;\n\t\t}\n\n\t\trandom() {\n\t\t\tthis.x = Math.random();\n\t\t\tthis.y = Math.random();\n\t\t\tthis.z = Math.random();\n\t\t\tthis.w = Math.random();\n\t\t\treturn this;\n\t\t}\n\n\t\t*[Symbol.iterator]() {\n\t\t\tyield this.x;\n\t\t\tyield this.y;\n\t\t\tyield this.z;\n\t\t\tyield this.w;\n\t\t}\n\n\t}\n\n\tVector4.prototype.isVector4 = true;\n\n\t/*\n\t In options, we can specify:\n\t * Texture parameters for an auto-generated target texture\n\t * depthBuffer/stencilBuffer: Booleans to indicate if we should generate these buffers\n\t*/\n\n\tclass WebGLRenderTarget extends EventDispatcher {\n\t\tconstructor(width, height, options = {}) {\n\t\t\tsuper();\n\t\t\tthis.width = width;\n\t\t\tthis.height = height;\n\t\t\tthis.depth = 1;\n\t\t\tthis.scissor = new Vector4(0, 0, width, height);\n\t\t\tthis.scissorTest = false;\n\t\t\tthis.viewport = new Vector4(0, 0, width, height);\n\t\t\tthis.texture = new Texture(undefined, options.mapping, options.wrapS, options.wrapT, options.magFilter, options.minFilter, options.format, options.type, options.anisotropy, options.encoding);\n\t\t\tthis.texture.isRenderTargetTexture = true;\n\t\t\tthis.texture.image = {\n\t\t\t\twidth: width,\n\t\t\t\theight: height,\n\t\t\t\tdepth: 1\n\t\t\t};\n\t\t\tthis.texture.generateMipmaps = options.generateMipmaps !== undefined ? options.generateMipmaps : false;\n\t\t\tthis.texture.internalFormat = options.internalFormat !== undefined ? options.internalFormat : null;\n\t\t\tthis.texture.minFilter = options.minFilter !== undefined ? options.minFilter : LinearFilter;\n\t\t\tthis.depthBuffer = options.depthBuffer !== undefined ? options.depthBuffer : true;\n\t\t\tthis.stencilBuffer = options.stencilBuffer !== undefined ? options.stencilBuffer : false;\n\t\t\tthis.depthTexture = options.depthTexture !== undefined ? options.depthTexture : null;\n\t\t}\n\n\t\tsetTexture(texture) {\n\t\t\ttexture.image = {\n\t\t\t\twidth: this.width,\n\t\t\t\theight: this.height,\n\t\t\t\tdepth: this.depth\n\t\t\t};\n\t\t\tthis.texture = texture;\n\t\t}\n\n\t\tsetSize(width, height, depth = 1) {\n\t\t\tif (this.width !== width || this.height !== height || this.depth !== depth) {\n\t\t\t\tthis.width = width;\n\t\t\t\tthis.height = height;\n\t\t\t\tthis.depth = depth;\n\t\t\t\tthis.texture.image.width = width;\n\t\t\t\tthis.texture.image.height = height;\n\t\t\t\tthis.texture.image.depth = depth;\n\t\t\t\tthis.dispose();\n\t\t\t}\n\n\t\t\tthis.viewport.set(0, 0, width, height);\n\t\t\tthis.scissor.set(0, 0, width, height);\n\t\t}\n\n\t\tclone() {\n\t\t\treturn new this.constructor().copy(this);\n\t\t}\n\n\t\tcopy(source) {\n\t\t\tthis.width = source.width;\n\t\t\tthis.height = source.height;\n\t\t\tthis.depth = source.depth;\n\t\t\tthis.viewport.copy(source.viewport);\n\t\t\tthis.texture = source.texture.clone();\n\t\t\tthis.texture.image = { ...this.texture.image\n\t\t\t}; // See #20328.\n\n\t\t\tthis.depthBuffer = source.depthBuffer;\n\t\t\tthis.stencilBuffer = source.stencilBuffer;\n\t\t\tthis.depthTexture = source.depthTexture;\n\t\t\treturn this;\n\t\t}\n\n\t\tdispose() {\n\t\t\tthis.dispatchEvent({\n\t\t\t\ttype: 'dispose'\n\t\t\t});\n\t\t}\n\n\t}\n\n\tWebGLRenderTarget.prototype.isWebGLRenderTarget = true;\n\n\tclass WebGLMultipleRenderTargets extends WebGLRenderTarget {\n\t\tconstructor(width, height, count) {\n\t\t\tsuper(width, height);\n\t\t\tconst texture = this.texture;\n\t\t\tthis.texture = [];\n\n\t\t\tfor (let i = 0; i < count; i++) {\n\t\t\t\tthis.texture[i] = texture.clone();\n\t\t\t}\n\t\t}\n\n\t\tsetSize(width, height, depth = 1) {\n\t\t\tif (this.width !== width || this.height !== height || this.depth !== depth) {\n\t\t\t\tthis.width = width;\n\t\t\t\tthis.height = height;\n\t\t\t\tthis.depth = depth;\n\n\t\t\t\tfor (let i = 0, il = this.texture.length; i < il; i++) {\n\t\t\t\t\tthis.texture[i].image.width = width;\n\t\t\t\t\tthis.texture[i].image.height = height;\n\t\t\t\t\tthis.texture[i].image.depth = depth;\n\t\t\t\t}\n\n\t\t\t\tthis.dispose();\n\t\t\t}\n\n\t\t\tthis.viewport.set(0, 0, width, height);\n\t\t\tthis.scissor.set(0, 0, width, height);\n\t\t\treturn this;\n\t\t}\n\n\t\tcopy(source) {\n\t\t\tthis.dispose();\n\t\t\tthis.width = source.width;\n\t\t\tthis.height = source.height;\n\t\t\tthis.depth = source.depth;\n\t\t\tthis.viewport.set(0, 0, this.width, this.height);\n\t\t\tthis.scissor.set(0, 0, this.width, this.height);\n\t\t\tthis.depthBuffer = source.depthBuffer;\n\t\t\tthis.stencilBuffer = source.stencilBuffer;\n\t\t\tthis.depthTexture = source.depthTexture;\n\t\t\tthis.texture.length = 0;\n\n\t\t\tfor (let i = 0, il = source.texture.length; i < il; i++) {\n\t\t\t\tthis.texture[i] = source.texture[i].clone();\n\t\t\t}\n\n\t\t\treturn this;\n\t\t}\n\n\t}\n\n\tWebGLMultipleRenderTargets.prototype.isWebGLMultipleRenderTargets = true;\n\n\tclass WebGLMultisampleRenderTarget extends WebGLRenderTarget {\n\t\tconstructor(width, height, options) {\n\t\t\tsuper(width, height, options);\n\t\t\tthis.samples = 4;\n\t\t}\n\n\t\tcopy(source) {\n\t\t\tsuper.copy.call(this, source);\n\t\t\tthis.samples = source.samples;\n\t\t\treturn this;\n\t\t}\n\n\t}\n\n\tWebGLMultisampleRenderTarget.prototype.isWebGLMultisampleRenderTarget = true;\n\n\tclass Quaternion {\n\t\tconstructor(x = 0, y = 0, z = 0, w = 1) {\n\t\t\tthis._x = x;\n\t\t\tthis._y = y;\n\t\t\tthis._z = z;\n\t\t\tthis._w = w;\n\t\t}\n\n\t\tstatic slerp(qa, qb, qm, t) {\n\t\t\tconsole.warn('THREE.Quaternion: Static .slerp() has been deprecated. Use qm.slerpQuaternions( qa, qb, t ) instead.');\n\t\t\treturn qm.slerpQuaternions(qa, qb, t);\n\t\t}\n\n\t\tstatic slerpFlat(dst, dstOffset, src0, srcOffset0, src1, srcOffset1, t) {\n\t\t\t// fuzz-free, array-based Quaternion SLERP operation\n\t\t\tlet x0 = src0[srcOffset0 + 0],\n\t\t\t\t\ty0 = src0[srcOffset0 + 1],\n\t\t\t\t\tz0 = src0[srcOffset0 + 2],\n\t\t\t\t\tw0 = src0[srcOffset0 + 3];\n\t\t\tconst x1 = src1[srcOffset1 + 0],\n\t\t\t\t\t\ty1 = src1[srcOffset1 + 1],\n\t\t\t\t\t\tz1 = src1[srcOffset1 + 2],\n\t\t\t\t\t\tw1 = src1[srcOffset1 + 3];\n\n\t\t\tif (t === 0) {\n\t\t\t\tdst[dstOffset + 0] = x0;\n\t\t\t\tdst[dstOffset + 1] = y0;\n\t\t\t\tdst[dstOffset + 2] = z0;\n\t\t\t\tdst[dstOffset + 3] = w0;\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (t === 1) {\n\t\t\t\tdst[dstOffset + 0] = x1;\n\t\t\t\tdst[dstOffset + 1] = y1;\n\t\t\t\tdst[dstOffset + 2] = z1;\n\t\t\t\tdst[dstOffset + 3] = w1;\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (w0 !== w1 || x0 !== x1 || y0 !== y1 || z0 !== z1) {\n\t\t\t\tlet s = 1 - t;\n\t\t\t\tconst cos = x0 * x1 + y0 * y1 + z0 * z1 + w0 * w1,\n\t\t\t\t\t\t\tdir = cos >= 0 ? 1 : -1,\n\t\t\t\t\t\t\tsqrSin = 1 - cos * cos; // Skip the Slerp for tiny steps to avoid numeric problems:\n\n\t\t\t\tif (sqrSin > Number.EPSILON) {\n\t\t\t\t\tconst sin = Math.sqrt(sqrSin),\n\t\t\t\t\t\t\t\tlen = Math.atan2(sin, cos * dir);\n\t\t\t\t\ts = Math.sin(s * len) / sin;\n\t\t\t\t\tt = Math.sin(t * len) / sin;\n\t\t\t\t}\n\n\t\t\t\tconst tDir = t * dir;\n\t\t\t\tx0 = x0 * s + x1 * tDir;\n\t\t\t\ty0 = y0 * s + y1 * tDir;\n\t\t\t\tz0 = z0 * s + z1 * tDir;\n\t\t\t\tw0 = w0 * s + w1 * tDir; // Normalize in case we just did a lerp:\n\n\t\t\t\tif (s === 1 - t) {\n\t\t\t\t\tconst f = 1 / Math.sqrt(x0 * x0 + y0 * y0 + z0 * z0 + w0 * w0);\n\t\t\t\t\tx0 *= f;\n\t\t\t\t\ty0 *= f;\n\t\t\t\t\tz0 *= f;\n\t\t\t\t\tw0 *= f;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tdst[dstOffset] = x0;\n\t\t\tdst[dstOffset + 1] = y0;\n\t\t\tdst[dstOffset + 2] = z0;\n\t\t\tdst[dstOffset + 3] = w0;\n\t\t}\n\n\t\tstatic multiplyQuaternionsFlat(dst, dstOffset, src0, srcOffset0, src1, srcOffset1) {\n\t\t\tconst x0 = src0[srcOffset0];\n\t\t\tconst y0 = src0[srcOffset0 + 1];\n\t\t\tconst z0 = src0[srcOffset0 + 2];\n\t\t\tconst w0 = src0[srcOffset0 + 3];\n\t\t\tconst x1 = src1[srcOffset1];\n\t\t\tconst y1 = src1[srcOffset1 + 1];\n\t\t\tconst z1 = src1[srcOffset1 + 2];\n\t\t\tconst w1 = src1[srcOffset1 + 3];\n\t\t\tdst[dstOffset] = x0 * w1 + w0 * x1 + y0 * z1 - z0 * y1;\n\t\t\tdst[dstOffset + 1] = y0 * w1 + w0 * y1 + z0 * x1 - x0 * z1;\n\t\t\tdst[dstOffset + 2] = z0 * w1 + w0 * z1 + x0 * y1 - y0 * x1;\n\t\t\tdst[dstOffset + 3] = w0 * w1 - x0 * x1 - y0 * y1 - z0 * z1;\n\t\t\treturn dst;\n\t\t}\n\n\t\tget x() {\n\t\t\treturn this._x;\n\t\t}\n\n\t\tset x(value) {\n\t\t\tthis._x = value;\n\n\t\t\tthis._onChangeCallback();\n\t\t}\n\n\t\tget y() {\n\t\t\treturn this._y;\n\t\t}\n\n\t\tset y(value) {\n\t\t\tthis._y = value;\n\n\t\t\tthis._onChangeCallback();\n\t\t}\n\n\t\tget z() {\n\t\t\treturn this._z;\n\t\t}\n\n\t\tset z(value) {\n\t\t\tthis._z = value;\n\n\t\t\tthis._onChangeCallback();\n\t\t}\n\n\t\tget w() {\n\t\t\treturn this._w;\n\t\t}\n\n\t\tset w(value) {\n\t\t\tthis._w = value;\n\n\t\t\tthis._onChangeCallback();\n\t\t}\n\n\t\tset(x, y, z, w) {\n\t\t\tthis._x = x;\n\t\t\tthis._y = y;\n\t\t\tthis._z = z;\n\t\t\tthis._w = w;\n\n\t\t\tthis._onChangeCallback();\n\n\t\t\treturn this;\n\t\t}\n\n\t\tclone() {\n\t\t\treturn new this.constructor(this._x, this._y, this._z, this._w);\n\t\t}\n\n\t\tcopy(quaternion) {\n\t\t\tthis._x = quaternion.x;\n\t\t\tthis._y = quaternion.y;\n\t\t\tthis._z = quaternion.z;\n\t\t\tthis._w = quaternion.w;\n\n\t\t\tthis._onChangeCallback();\n\n\t\t\treturn this;\n\t\t}\n\n\t\tsetFromEuler(euler, update) {\n\t\t\tif (!(euler && euler.isEuler)) {\n\t\t\t\tthrow new Error('THREE.Quaternion: .setFromEuler() now expects an Euler rotation rather than a Vector3 and order.');\n\t\t\t}\n\n\t\t\tconst x = euler._x,\n\t\t\t\t\t\ty = euler._y,\n\t\t\t\t\t\tz = euler._z,\n\t\t\t\t\t\torder = euler._order; // http://www.mathworks.com/matlabcentral/fileexchange/\n\t\t\t// \t20696-function-to-convert-between-dcm-euler-angles-quaternions-and-euler-vectors/\n\t\t\t//\tcontent/SpinCalc.m\n\n\t\t\tconst cos = Math.cos;\n\t\t\tconst sin = Math.sin;\n\t\t\tconst c1 = cos(x / 2);\n\t\t\tconst c2 = cos(y / 2);\n\t\t\tconst c3 = cos(z / 2);\n\t\t\tconst s1 = sin(x / 2);\n\t\t\tconst s2 = sin(y / 2);\n\t\t\tconst s3 = sin(z / 2);\n\n\t\t\tswitch (order) {\n\t\t\t\tcase 'XYZ':\n\t\t\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\n\t\t\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\n\t\t\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\n\t\t\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'YXZ':\n\t\t\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\n\t\t\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\n\t\t\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\n\t\t\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'ZXY':\n\t\t\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\n\t\t\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\n\t\t\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\n\t\t\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'ZYX':\n\t\t\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\n\t\t\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\n\t\t\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\n\t\t\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'YZX':\n\t\t\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\n\t\t\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\n\t\t\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\n\t\t\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'XZY':\n\t\t\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\n\t\t\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\n\t\t\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\n\t\t\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\t\t\t\t\tconsole.warn('THREE.Quaternion: .setFromEuler() encountered an unknown order: ' + order);\n\t\t\t}\n\n\t\t\tif (update !== false) this._onChangeCallback();\n\t\t\treturn this;\n\t\t}\n\n\t\tsetFromAxisAngle(axis, angle) {\n\t\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/angleToQuaternion/index.htm\n\t\t\t// assumes axis is normalized\n\t\t\tconst halfAngle = angle / 2,\n\t\t\t\t\t\ts = Math.sin(halfAngle);\n\t\t\tthis._x = axis.x * s;\n\t\t\tthis._y = axis.y * s;\n\t\t\tthis._z = axis.z * s;\n\t\t\tthis._w = Math.cos(halfAngle);\n\n\t\t\tthis._onChangeCallback();\n\n\t\t\treturn this;\n\t\t}\n\n\t\tsetFromRotationMatrix(m) {\n\t\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToQuaternion/index.htm\n\t\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\t\t\tconst te = m.elements,\n\t\t\t\t\t\tm11 = te[0],\n\t\t\t\t\t\tm12 = te[4],\n\t\t\t\t\t\tm13 = te[8],\n\t\t\t\t\t\tm21 = te[1],\n\t\t\t\t\t\tm22 = te[5],\n\t\t\t\t\t\tm23 = te[9],\n\t\t\t\t\t\tm31 = te[2],\n\t\t\t\t\t\tm32 = te[6],\n\t\t\t\t\t\tm33 = te[10],\n\t\t\t\t\t\ttrace = m11 + m22 + m33;\n\n\t\t\tif (trace > 0) {\n\t\t\t\tconst s = 0.5 / Math.sqrt(trace + 1.0);\n\t\t\t\tthis._w = 0.25 / s;\n\t\t\t\tthis._x = (m32 - m23) * s;\n\t\t\t\tthis._y = (m13 - m31) * s;\n\t\t\t\tthis._z = (m21 - m12) * s;\n\t\t\t} else if (m11 > m22 && m11 > m33) {\n\t\t\t\tconst s = 2.0 * Math.sqrt(1.0 + m11 - m22 - m33);\n\t\t\t\tthis._w = (m32 - m23) / s;\n\t\t\t\tthis._x = 0.25 * s;\n\t\t\t\tthis._y = (m12 + m21) / s;\n\t\t\t\tthis._z = (m13 + m31) / s;\n\t\t\t} else if (m22 > m33) {\n\t\t\t\tconst s = 2.0 * Math.sqrt(1.0 + m22 - m11 - m33);\n\t\t\t\tthis._w = (m13 - m31) / s;\n\t\t\t\tthis._x = (m12 + m21) / s;\n\t\t\t\tthis._y = 0.25 * s;\n\t\t\t\tthis._z = (m23 + m32) / s;\n\t\t\t} else {\n\t\t\t\tconst s = 2.0 * Math.sqrt(1.0 + m33 - m11 - m22);\n\t\t\t\tthis._w = (m21 - m12) / s;\n\t\t\t\tthis._x = (m13 + m31) / s;\n\t\t\t\tthis._y = (m23 + m32) / s;\n\t\t\t\tthis._z = 0.25 * s;\n\t\t\t}\n\n\t\t\tthis._onChangeCallback();\n\n\t\t\treturn this;\n\t\t}\n\n\t\tsetFromUnitVectors(vFrom, vTo) {\n\t\t\t// assumes direction vectors vFrom and vTo are normalized\n\t\t\tlet r = vFrom.dot(vTo) + 1;\n\n\t\t\tif (r < Number.EPSILON) {\n\t\t\t\t// vFrom and vTo point in opposite directions\n\t\t\t\tr = 0;\n\n\t\t\t\tif (Math.abs(vFrom.x) > Math.abs(vFrom.z)) {\n\t\t\t\t\tthis._x = -vFrom.y;\n\t\t\t\t\tthis._y = vFrom.x;\n\t\t\t\t\tthis._z = 0;\n\t\t\t\t\tthis._w = r;\n\t\t\t\t} else {\n\t\t\t\t\tthis._x = 0;\n\t\t\t\t\tthis._y = -vFrom.z;\n\t\t\t\t\tthis._z = vFrom.y;\n\t\t\t\t\tthis._w = r;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// crossVectors( vFrom, vTo ); // inlined to avoid cyclic dependency on Vector3\n\t\t\t\tthis._x = vFrom.y * vTo.z - vFrom.z * vTo.y;\n\t\t\t\tthis._y = vFrom.z * vTo.x - vFrom.x * vTo.z;\n\t\t\t\tthis._z = vFrom.x * vTo.y - vFrom.y * vTo.x;\n\t\t\t\tthis._w = r;\n\t\t\t}\n\n\t\t\treturn this.normalize();\n\t\t}\n\n\t\tangleTo(q) {\n\t\t\treturn 2 * Math.acos(Math.abs(clamp(this.dot(q), -1, 1)));\n\t\t}\n\n\t\trotateTowards(q, step) {\n\t\t\tconst angle = this.angleTo(q);\n\t\t\tif (angle === 0) return this;\n\t\t\tconst t = Math.min(1, step / angle);\n\t\t\tthis.slerp(q, t);\n\t\t\treturn this;\n\t\t}\n\n\t\tidentity() {\n\t\t\treturn this.set(0, 0, 0, 1);\n\t\t}\n\n\t\tinvert() {\n\t\t\t// quaternion is assumed to have unit length\n\t\t\treturn this.conjugate();\n\t\t}\n\n\t\tconjugate() {\n\t\t\tthis._x *= -1;\n\t\t\tthis._y *= -1;\n\t\t\tthis._z *= -1;\n\n\t\t\tthis._onChangeCallback();\n\n\t\t\treturn this;\n\t\t}\n\n\t\tdot(v) {\n\t\t\treturn this._x * v._x + this._y * v._y + this._z * v._z + this._w * v._w;\n\t\t}\n\n\t\tlengthSq() {\n\t\t\treturn this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w;\n\t\t}\n\n\t\tlength() {\n\t\t\treturn Math.sqrt(this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w);\n\t\t}\n\n\t\tnormalize() {\n\t\t\tlet l = this.length();\n\n\t\t\tif (l === 0) {\n\t\t\t\tthis._x = 0;\n\t\t\t\tthis._y = 0;\n\t\t\t\tthis._z = 0;\n\t\t\t\tthis._w = 1;\n\t\t\t} else {\n\t\t\t\tl = 1 / l;\n\t\t\t\tthis._x = this._x * l;\n\t\t\t\tthis._y = this._y * l;\n\t\t\t\tthis._z = this._z * l;\n\t\t\t\tthis._w = this._w * l;\n\t\t\t}\n\n\t\t\tthis._onChangeCallback();\n\n\t\t\treturn this;\n\t\t}\n\n\t\tmultiply(q, p) {\n\t\t\tif (p !== undefined) {\n\t\t\t\tconsole.warn('THREE.Quaternion: .multiply() now only accepts one argument. Use .multiplyQuaternions( a, b ) instead.');\n\t\t\t\treturn this.multiplyQuaternions(q, p);\n\t\t\t}\n\n\t\t\treturn this.multiplyQuaternions(this, q);\n\t\t}\n\n\t\tpremultiply(q) {\n\t\t\treturn this.multiplyQuaternions(q, this);\n\t\t}\n\n\t\tmultiplyQuaternions(a, b) {\n\t\t\t// from http://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/code/index.htm\n\t\t\tconst qax = a._x,\n\t\t\t\t\t\tqay = a._y,\n\t\t\t\t\t\tqaz = a._z,\n\t\t\t\t\t\tqaw = a._w;\n\t\t\tconst qbx = b._x,\n\t\t\t\t\t\tqby = b._y,\n\t\t\t\t\t\tqbz = b._z,\n\t\t\t\t\t\tqbw = b._w;\n\t\t\tthis._x = qax * qbw + qaw * qbx + qay * qbz - qaz * qby;\n\t\t\tthis._y = qay * qbw + qaw * qby + qaz * qbx - qax * qbz;\n\t\t\tthis._z = qaz * qbw + qaw * qbz + qax * qby - qay * qbx;\n\t\t\tthis._w = qaw * qbw - qax * qbx - qay * qby - qaz * qbz;\n\n\t\t\tthis._onChangeCallback();\n\n\t\t\treturn this;\n\t\t}\n\n\t\tslerp(qb, t) {\n\t\t\tif (t === 0) return this;\n\t\t\tif (t === 1) return this.copy(qb);\n\t\t\tconst x = this._x,\n\t\t\t\t\t\ty = this._y,\n\t\t\t\t\t\tz = this._z,\n\t\t\t\t\t\tw = this._w; // http://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/slerp/\n\n\t\t\tlet cosHalfTheta = w * qb._w + x * qb._x + y * qb._y + z * qb._z;\n\n\t\t\tif (cosHalfTheta < 0) {\n\t\t\t\tthis._w = -qb._w;\n\t\t\t\tthis._x = -qb._x;\n\t\t\t\tthis._y = -qb._y;\n\t\t\t\tthis._z = -qb._z;\n\t\t\t\tcosHalfTheta = -cosHalfTheta;\n\t\t\t} else {\n\t\t\t\tthis.copy(qb);\n\t\t\t}\n\n\t\t\tif (cosHalfTheta >= 1.0) {\n\t\t\t\tthis._w = w;\n\t\t\t\tthis._x = x;\n\t\t\t\tthis._y = y;\n\t\t\t\tthis._z = z;\n\t\t\t\treturn this;\n\t\t\t}\n\n\t\t\tconst sqrSinHalfTheta = 1.0 - cosHalfTheta * cosHalfTheta;\n\n\t\t\tif (sqrSinHalfTheta <= Number.EPSILON) {\n\t\t\t\tconst s = 1 - t;\n\t\t\t\tthis._w = s * w + t * this._w;\n\t\t\t\tthis._x = s * x + t * this._x;\n\t\t\t\tthis._y = s * y + t * this._y;\n\t\t\t\tthis._z = s * z + t * this._z;\n\t\t\t\tthis.normalize();\n\n\t\t\t\tthis._onChangeCallback();\n\n\t\t\t\treturn this;\n\t\t\t}\n\n\t\t\tconst sinHalfTheta = Math.sqrt(sqrSinHalfTheta);\n\t\t\tconst halfTheta = Math.atan2(sinHalfTheta, cosHalfTheta);\n\t\t\tconst ratioA = Math.sin((1 - t) * halfTheta) / sinHalfTheta,\n\t\t\t\t\t\tratioB = Math.sin(t * halfTheta) / sinHalfTheta;\n\t\t\tthis._w = w * ratioA + this._w * ratioB;\n\t\t\tthis._x = x * ratioA + this._x * ratioB;\n\t\t\tthis._y = y * ratioA + this._y * ratioB;\n\t\t\tthis._z = z * ratioA + this._z * ratioB;\n\n\t\t\tthis._onChangeCallback();\n\n\t\t\treturn this;\n\t\t}\n\n\t\tslerpQuaternions(qa, qb, t) {\n\t\t\tthis.copy(qa).slerp(qb, t);\n\t\t}\n\n\t\trandom() {\n\t\t\t// Derived from http://planning.cs.uiuc.edu/node198.html\n\t\t\t// Note, this source uses w, x, y, z ordering,\n\t\t\t// so we swap the order below.\n\t\t\tconst u1 = Math.random();\n\t\t\tconst sqrt1u1 = Math.sqrt(1 - u1);\n\t\t\tconst sqrtu1 = Math.sqrt(u1);\n\t\t\tconst u2 = 2 * Math.PI * Math.random();\n\t\t\tconst u3 = 2 * Math.PI * Math.random();\n\t\t\treturn this.set(sqrt1u1 * Math.cos(u2), sqrtu1 * Math.sin(u3), sqrtu1 * Math.cos(u3), sqrt1u1 * Math.sin(u2));\n\t\t}\n\n\t\tequals(quaternion) {\n\t\t\treturn quaternion._x === this._x && quaternion._y === this._y && quaternion._z === this._z && quaternion._w === this._w;\n\t\t}\n\n\t\tfromArray(array, offset = 0) {\n\t\t\tthis._x = array[offset];\n\t\t\tthis._y = array[offset + 1];\n\t\t\tthis._z = array[offset + 2];\n\t\t\tthis._w = array[offset + 3];\n\n\t\t\tthis._onChangeCallback();\n\n\t\t\treturn this;\n\t\t}\n\n\t\ttoArray(array = [], offset = 0) {\n\t\t\tarray[offset] = this._x;\n\t\t\tarray[offset + 1] = this._y;\n\t\t\tarray[offset + 2] = this._z;\n\t\t\tarray[offset + 3] = this._w;\n\t\t\treturn array;\n\t\t}\n\n\t\tfromBufferAttribute(attribute, index) {\n\t\t\tthis._x = attribute.getX(index);\n\t\t\tthis._y = attribute.getY(index);\n\t\t\tthis._z = attribute.getZ(index);\n\t\t\tthis._w = attribute.getW(index);\n\t\t\treturn this;\n\t\t}\n\n\t\t_onChange(callback) {\n\t\t\tthis._onChangeCallback = callback;\n\t\t\treturn this;\n\t\t}\n\n\t\t_onChangeCallback() {}\n\n\t}\n\n\tQuaternion.prototype.isQuaternion = true;\n\n\tclass Vector3 {\n\t\tconstructor(x = 0, y = 0, z = 0) {\n\t\t\tthis.x = x;\n\t\t\tthis.y = y;\n\t\t\tthis.z = z;\n\t\t}\n\n\t\tset(x, y, z) {\n\t\t\tif (z === undefined) z = this.z; // sprite.scale.set(x,y)\n\n\t\t\tthis.x = x;\n\t\t\tthis.y = y;\n\t\t\tthis.z = z;\n\t\t\treturn this;\n\t\t}\n\n\t\tsetScalar(scalar) {\n\t\t\tthis.x = scalar;\n\t\t\tthis.y = scalar;\n\t\t\tthis.z = scalar;\n\t\t\treturn this;\n\t\t}\n\n\t\tsetX(x) {\n\t\t\tthis.x = x;\n\t\t\treturn this;\n\t\t}\n\n\t\tsetY(y) {\n\t\t\tthis.y = y;\n\t\t\treturn this;\n\t\t}\n\n\t\tsetZ(z) {\n\t\t\tthis.z = z;\n\t\t\treturn this;\n\t\t}\n\n\t\tsetComponent(index, value) {\n\t\t\tswitch (index) {\n\t\t\t\tcase 0:\n\t\t\t\t\tthis.x = value;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 1:\n\t\t\t\t\tthis.y = value;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 2:\n\t\t\t\t\tthis.z = value;\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new Error('index is out of range: ' + index);\n\t\t\t}\n\n\t\t\treturn this;\n\t\t}\n\n\t\tgetComponent(index) {\n\t\t\tswitch (index) {\n\t\t\t\tcase 0:\n\t\t\t\t\treturn this.x;\n\n\t\t\t\tcase 1:\n\t\t\t\t\treturn this.y;\n\n\t\t\t\tcase 2:\n\t\t\t\t\treturn this.z;\n\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new Error('index is out of range: ' + index);\n\t\t\t}\n\t\t}\n\n\t\tclone() {\n\t\t\treturn new this.constructor(this.x, this.y, this.z);\n\t\t}\n\n\t\tcopy(v) {\n\t\t\tthis.x = v.x;\n\t\t\tthis.y = v.y;\n\t\t\tthis.z = v.z;\n\t\t\treturn this;\n\t\t}\n\n\t\tadd(v, w) {\n\t\t\tif (w !== undefined) {\n\t\t\t\tconsole.warn('THREE.Vector3: .add() now only accepts one argument. Use .addVectors( a, b ) instead.');\n\t\t\t\treturn this.addVectors(v, w);\n\t\t\t}\n\n\t\t\tthis.x += v.x;\n\t\t\tthis.y += v.y;\n\t\t\tthis.z += v.z;\n\t\t\treturn this;\n\t\t}\n\n\t\taddScalar(s) {\n\t\t\tthis.x += s;\n\t\t\tthis.y += s;\n\t\t\tthis.z += s;\n\t\t\treturn this;\n\t\t}\n\n\t\taddVectors(a, b) {\n\t\t\tthis.x = a.x + b.x;\n\t\t\tthis.y = a.y + b.y;\n\t\t\tthis.z = a.z + b.z;\n\t\t\treturn this;\n\t\t}\n\n\t\taddScaledVector(v, s) {\n\t\t\tthis.x += v.x * s;\n\t\t\tthis.y += v.y * s;\n\t\t\tthis.z += v.z * s;\n\t\t\treturn this;\n\t\t}\n\n\t\tsub(v, w) {\n\t\t\tif (w !== undefined) {\n\t\t\t\tconsole.warn('THREE.Vector3: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.');\n\t\t\t\treturn this.subVectors(v, w);\n\t\t\t}\n\n\t\t\tthis.x -= v.x;\n\t\t\tthis.y -= v.y;\n\t\t\tthis.z -= v.z;\n\t\t\treturn this;\n\t\t}\n\n\t\tsubScalar(s) {\n\t\t\tthis.x -= s;\n\t\t\tthis.y -= s;\n\t\t\tthis.z -= s;\n\t\t\treturn this;\n\t\t}\n\n\t\tsubVectors(a, b) {\n\t\t\tthis.x = a.x - b.x;\n\t\t\tthis.y = a.y - b.y;\n\t\t\tthis.z = a.z - b.z;\n\t\t\treturn this;\n\t\t}\n\n\t\tmultiply(v, w) {\n\t\t\tif (w !== undefined) {\n\t\t\t\tconsole.warn('THREE.Vector3: .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead.');\n\t\t\t\treturn this.multiplyVectors(v, w);\n\t\t\t}\n\n\t\t\tthis.x *= v.x;\n\t\t\tthis.y *= v.y;\n\t\t\tthis.z *= v.z;\n\t\t\treturn this;\n\t\t}\n\n\t\tmultiplyScalar(scalar) {\n\t\t\tthis.x *= scalar;\n\t\t\tthis.y *= scalar;\n\t\t\tthis.z *= scalar;\n\t\t\treturn this;\n\t\t}\n\n\t\tmultiplyVectors(a, b) {\n\t\t\tthis.x = a.x * b.x;\n\t\t\tthis.y = a.y * b.y;\n\t\t\tthis.z = a.z * b.z;\n\t\t\treturn this;\n\t\t}\n\n\t\tapplyEuler(euler) {\n\t\t\tif (!(euler && euler.isEuler)) {\n\t\t\t\tconsole.error('THREE.Vector3: .applyEuler() now expects an Euler rotation rather than a Vector3 and order.');\n\t\t\t}\n\n\t\t\treturn this.applyQuaternion(_quaternion$4.setFromEuler(euler));\n\t\t}\n\n\t\tapplyAxisAngle(axis, angle) {\n\t\t\treturn this.applyQuaternion(_quaternion$4.setFromAxisAngle(axis, angle));\n\t\t}\n\n\t\tapplyMatrix3(m) {\n\t\t\tconst x = this.x,\n\t\t\t\t\t\ty = this.y,\n\t\t\t\t\t\tz = this.z;\n\t\t\tconst e = m.elements;\n\t\t\tthis.x = e[0] * x + e[3] * y + e[6] * z;\n\t\t\tthis.y = e[1] * x + e[4] * y + e[7] * z;\n\t\t\tthis.z = e[2] * x + e[5] * y + e[8] * z;\n\t\t\treturn this;\n\t\t}\n\n\t\tapplyNormalMatrix(m) {\n\t\t\treturn this.applyMatrix3(m).normalize();\n\t\t}\n\n\t\tapplyMatrix4(m) {\n\t\t\tconst x = this.x,\n\t\t\t\t\t\ty = this.y,\n\t\t\t\t\t\tz = this.z;\n\t\t\tconst e = m.elements;\n\t\t\tconst w = 1 / (e[3] * x + e[7] * y + e[11] * z + e[15]);\n\t\t\tthis.x = (e[0] * x + e[4] * y + e[8] * z + e[12]) * w;\n\t\t\tthis.y = (e[1] * x + e[5] * y + e[9] * z + e[13]) * w;\n\t\t\tthis.z = (e[2] * x + e[6] * y + e[10] * z + e[14]) * w;\n\t\t\treturn this;\n\t\t}\n\n\t\tapplyQuaternion(q) {\n\t\t\tconst x = this.x,\n\t\t\t\t\t\ty = this.y,\n\t\t\t\t\t\tz = this.z;\n\t\t\tconst qx = q.x,\n\t\t\t\t\t\tqy = q.y,\n\t\t\t\t\t\tqz = q.z,\n\t\t\t\t\t\tqw = q.w; // calculate quat * vector\n\n\t\t\tconst ix = qw * x + qy * z - qz * y;\n\t\t\tconst iy = qw * y + qz * x - qx * z;\n\t\t\tconst iz = qw * z + qx * y - qy * x;\n\t\t\tconst iw = -qx * x - qy * y - qz * z; // calculate result * inverse quat\n\n\t\t\tthis.x = ix * qw + iw * -qx + iy * -qz - iz * -qy;\n\t\t\tthis.y = iy * qw + iw * -qy + iz * -qx - ix * -qz;\n\t\t\tthis.z = iz * qw + iw * -qz + ix * -qy - iy * -qx;\n\t\t\treturn this;\n\t\t}\n\n\t\tproject(camera) {\n\t\t\treturn this.applyMatrix4(camera.matrixWorldInverse).applyMatrix4(camera.projectionMatrix);\n\t\t}\n\n\t\tunproject(camera) {\n\t\t\treturn this.applyMatrix4(camera.projectionMatrixInverse).applyMatrix4(camera.matrixWorld);\n\t\t}\n\n\t\ttransformDirection(m) {\n\t\t\t// input: THREE.Matrix4 affine matrix\n\t\t\t// vector interpreted as a direction\n\t\t\tconst x = this.x,\n\t\t\t\t\t\ty = this.y,\n\t\t\t\t\t\tz = this.z;\n\t\t\tconst e = m.elements;\n\t\t\tthis.x = e[0] * x + e[4] * y + e[8] * z;\n\t\t\tthis.y = e[1] * x + e[5] * y + e[9] * z;\n\t\t\tthis.z = e[2] * x + e[6] * y + e[10] * z;\n\t\t\treturn this.normalize();\n\t\t}\n\n\t\tdivide(v) {\n\t\t\tthis.x /= v.x;\n\t\t\tthis.y /= v.y;\n\t\t\tthis.z /= v.z;\n\t\t\treturn this;\n\t\t}\n\n\t\tdivideScalar(scalar) {\n\t\t\treturn this.multiplyScalar(1 / scalar);\n\t\t}\n\n\t\tmin(v) {\n\t\t\tthis.x = Math.min(this.x, v.x);\n\t\t\tthis.y = Math.min(this.y, v.y);\n\t\t\tthis.z = Math.min(this.z, v.z);\n\t\t\treturn this;\n\t\t}\n\n\t\tmax(v) {\n\t\t\tthis.x = Math.max(this.x, v.x);\n\t\t\tthis.y = Math.max(this.y, v.y);\n\t\t\tthis.z = Math.max(this.z, v.z);\n\t\t\treturn this;\n\t\t}\n\n\t\tclamp(min, max) {\n\t\t\t// assumes min < max, componentwise\n\t\t\tthis.x = Math.max(min.x, Math.min(max.x, this.x));\n\t\t\tthis.y = Math.max(min.y, Math.min(max.y, this.y));\n\t\t\tthis.z = Math.max(min.z, Math.min(max.z, this.z));\n\t\t\treturn this;\n\t\t}\n\n\t\tclampScalar(minVal, maxVal) {\n\t\t\tthis.x = Math.max(minVal, Math.min(maxVal, this.x));\n\t\t\tthis.y = Math.max(minVal, Math.min(maxVal, this.y));\n\t\t\tthis.z = Math.max(minVal, Math.min(maxVal, this.z));\n\t\t\treturn this;\n\t\t}\n\n\t\tclampLength(min, max) {\n\t\t\tconst length = this.length();\n\t\t\treturn this.divideScalar(length || 1).multiplyScalar(Math.max(min, Math.min(max, length)));\n\t\t}\n\n\t\tfloor() {\n\t\t\tthis.x = Math.floor(this.x);\n\t\t\tthis.y = Math.floor(this.y);\n\t\t\tthis.z = Math.floor(this.z);\n\t\t\treturn this;\n\t\t}\n\n\t\tceil() {\n\t\t\tthis.x = Math.ceil(this.x);\n\t\t\tthis.y = Math.ceil(this.y);\n\t\t\tthis.z = Math.ceil(this.z);\n\t\t\treturn this;\n\t\t}\n\n\t\tround() {\n\t\t\tthis.x = Math.round(this.x);\n\t\t\tthis.y = Math.round(this.y);\n\t\t\tthis.z = Math.round(this.z);\n\t\t\treturn this;\n\t\t}\n\n\t\troundToZero() {\n\t\t\tthis.x = this.x < 0 ? Math.ceil(this.x) : Math.floor(this.x);\n\t\t\tthis.y = this.y < 0 ? Math.ceil(this.y) : Math.floor(this.y);\n\t\t\tthis.z = this.z < 0 ? Math.ceil(this.z) : Math.floor(this.z);\n\t\t\treturn this;\n\t\t}\n\n\t\tnegate() {\n\t\t\tthis.x = -this.x;\n\t\t\tthis.y = -this.y;\n\t\t\tthis.z = -this.z;\n\t\t\treturn this;\n\t\t}\n\n\t\tdot(v) {\n\t\t\treturn this.x * v.x + this.y * v.y + this.z * v.z;\n\t\t} // TODO lengthSquared?\n\n\n\t\tlengthSq() {\n\t\t\treturn this.x * this.x + this.y * this.y + this.z * this.z;\n\t\t}\n\n\t\tlength() {\n\t\t\treturn Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z);\n\t\t}\n\n\t\tmanhattanLength() {\n\t\t\treturn Math.abs(this.x) + Math.abs(this.y) + Math.abs(this.z);\n\t\t}\n\n\t\tnormalize() {\n\t\t\treturn this.divideScalar(this.length() || 1);\n\t\t}\n\n\t\tsetLength(length) {\n\t\t\treturn this.normalize().multiplyScalar(length);\n\t\t}\n\n\t\tlerp(v, alpha) {\n\t\t\tthis.x += (v.x - this.x) * alpha;\n\t\t\tthis.y += (v.y - this.y) * alpha;\n\t\t\tthis.z += (v.z - this.z) * alpha;\n\t\t\treturn this;\n\t\t}\n\n\t\tlerpVectors(v1, v2, alpha) {\n\t\t\tthis.x = v1.x + (v2.x - v1.x) * alpha;\n\t\t\tthis.y = v1.y + (v2.y - v1.y) * alpha;\n\t\t\tthis.z = v1.z + (v2.z - v1.z) * alpha;\n\t\t\treturn this;\n\t\t}\n\n\t\tcross(v, w) {\n\t\t\tif (w !== undefined) {\n\t\t\t\tconsole.warn('THREE.Vector3: .cross() now only accepts one argument. Use .crossVectors( a, b ) instead.');\n\t\t\t\treturn this.crossVectors(v, w);\n\t\t\t}\n\n\t\t\treturn this.crossVectors(this, v);\n\t\t}\n\n\t\tcrossVectors(a, b) {\n\t\t\tconst ax = a.x,\n\t\t\t\t\t\tay = a.y,\n\t\t\t\t\t\taz = a.z;\n\t\t\tconst bx = b.x,\n\t\t\t\t\t\tby = b.y,\n\t\t\t\t\t\tbz = b.z;\n\t\t\tthis.x = ay * bz - az * by;\n\t\t\tthis.y = az * bx - ax * bz;\n\t\t\tthis.z = ax * by - ay * bx;\n\t\t\treturn this;\n\t\t}\n\n\t\tprojectOnVector(v) {\n\t\t\tconst denominator = v.lengthSq();\n\t\t\tif (denominator === 0) return this.set(0, 0, 0);\n\t\t\tconst scalar = v.dot(this) / denominator;\n\t\t\treturn this.copy(v).multiplyScalar(scalar);\n\t\t}\n\n\t\tprojectOnPlane(planeNormal) {\n\t\t\t_vector$c.copy(this).projectOnVector(planeNormal);\n\n\t\t\treturn this.sub(_vector$c);\n\t\t}\n\n\t\treflect(normal) {\n\t\t\t// reflect incident vector off plane orthogonal to normal\n\t\t\t// normal is assumed to have unit length\n\t\t\treturn this.sub(_vector$c.copy(normal).multiplyScalar(2 * this.dot(normal)));\n\t\t}\n\n\t\tangleTo(v) {\n\t\t\tconst denominator = Math.sqrt(this.lengthSq() * v.lengthSq());\n\t\t\tif (denominator === 0) return Math.PI / 2;\n\t\t\tconst theta = this.dot(v) / denominator; // clamp, to handle numerical problems\n\n\t\t\treturn Math.acos(clamp(theta, -1, 1));\n\t\t}\n\n\t\tdistanceTo(v) {\n\t\t\treturn Math.sqrt(this.distanceToSquared(v));\n\t\t}\n\n\t\tdistanceToSquared(v) {\n\t\t\tconst dx = this.x - v.x,\n\t\t\t\t\t\tdy = this.y - v.y,\n\t\t\t\t\t\tdz = this.z - v.z;\n\t\t\treturn dx * dx + dy * dy + dz * dz;\n\t\t}\n\n\t\tmanhattanDistanceTo(v) {\n\t\t\treturn Math.abs(this.x - v.x) + Math.abs(this.y - v.y) + Math.abs(this.z - v.z);\n\t\t}\n\n\t\tsetFromSpherical(s) {\n\t\t\treturn this.setFromSphericalCoords(s.radius, s.phi, s.theta);\n\t\t}\n\n\t\tsetFromSphericalCoords(radius, phi, theta) {\n\t\t\tconst sinPhiRadius = Math.sin(phi) * radius;\n\t\t\tthis.x = sinPhiRadius * Math.sin(theta);\n\t\t\tthis.y = Math.cos(phi) * radius;\n\t\t\tthis.z = sinPhiRadius * Math.cos(theta);\n\t\t\treturn this;\n\t\t}\n\n\t\tsetFromCylindrical(c) {\n\t\t\treturn this.setFromCylindricalCoords(c.radius, c.theta, c.y);\n\t\t}\n\n\t\tsetFromCylindricalCoords(radius, theta, y) {\n\t\t\tthis.x = radius * Math.sin(theta);\n\t\t\tthis.y = y;\n\t\t\tthis.z = radius * Math.cos(theta);\n\t\t\treturn this;\n\t\t}\n\n\t\tsetFromMatrixPosition(m) {\n\t\t\tconst e = m.elements;\n\t\t\tthis.x = e[12];\n\t\t\tthis.y = e[13];\n\t\t\tthis.z = e[14];\n\t\t\treturn this;\n\t\t}\n\n\t\tsetFromMatrixScale(m) {\n\t\t\tconst sx = this.setFromMatrixColumn(m, 0).length();\n\t\t\tconst sy = this.setFromMatrixColumn(m, 1).length();\n\t\t\tconst sz = this.setFromMatrixColumn(m, 2).length();\n\t\t\tthis.x = sx;\n\t\t\tthis.y = sy;\n\t\t\tthis.z = sz;\n\t\t\treturn this;\n\t\t}\n\n\t\tsetFromMatrixColumn(m, index) {\n\t\t\treturn this.fromArray(m.elements, index * 4);\n\t\t}\n\n\t\tsetFromMatrix3Column(m, index) {\n\t\t\treturn this.fromArray(m.elements, index * 3);\n\t\t}\n\n\t\tequals(v) {\n\t\t\treturn v.x === this.x && v.y === this.y && v.z === this.z;\n\t\t}\n\n\t\tfromArray(array, offset = 0) {\n\t\t\tthis.x = array[offset];\n\t\t\tthis.y = array[offset + 1];\n\t\t\tthis.z = array[offset + 2];\n\t\t\treturn this;\n\t\t}\n\n\t\ttoArray(array = [], offset = 0) {\n\t\t\tarray[offset] = this.x;\n\t\t\tarray[offset + 1] = this.y;\n\t\t\tarray[offset + 2] = this.z;\n\t\t\treturn array;\n\t\t}\n\n\t\tfromBufferAttribute(attribute, index, offset) {\n\t\t\tif (offset !== undefined) {\n\t\t\t\tconsole.warn('THREE.Vector3: offset has been removed from .fromBufferAttribute().');\n\t\t\t}\n\n\t\t\tthis.x = attribute.getX(index);\n\t\t\tthis.y = attribute.getY(index);\n\t\t\tthis.z = attribute.getZ(index);\n\t\t\treturn this;\n\t\t}\n\n\t\trandom() {\n\t\t\tthis.x = Math.random();\n\t\t\tthis.y = Math.random();\n\t\t\tthis.z = Math.random();\n\t\t\treturn this;\n\t\t}\n\n\t\trandomDirection() {\n\t\t\t// Derived from https://mathworld.wolfram.com/SpherePointPicking.html\n\t\t\tconst u = (Math.random() - 0.5) * 2;\n\t\t\tconst t = Math.random() * Math.PI * 2;\n\t\t\tconst f = Math.sqrt(1 - u ** 2);\n\t\t\tthis.x = f * Math.cos(t);\n\t\t\tthis.y = f * Math.sin(t);\n\t\t\tthis.z = u;\n\t\t\treturn this;\n\t\t}\n\n\t\t*[Symbol.iterator]() {\n\t\t\tyield this.x;\n\t\t\tyield this.y;\n\t\t\tyield this.z;\n\t\t}\n\n\t}\n\n\tVector3.prototype.isVector3 = true;\n\n\tconst _vector$c = /*@__PURE__*/new Vector3();\n\n\tconst _quaternion$4 = /*@__PURE__*/new Quaternion();\n\n\tclass Box3 {\n\t\tconstructor(min = new Vector3(+Infinity, +Infinity, +Infinity), max = new Vector3(-Infinity, -Infinity, -Infinity)) {\n\t\t\tthis.min = min;\n\t\t\tthis.max = max;\n\t\t}\n\n\t\tset(min, max) {\n\t\t\tthis.min.copy(min);\n\t\t\tthis.max.copy(max);\n\t\t\treturn this;\n\t\t}\n\n\t\tsetFromArray(array) {\n\t\t\tlet minX = +Infinity;\n\t\t\tlet minY = +Infinity;\n\t\t\tlet minZ = +Infinity;\n\t\t\tlet maxX = -Infinity;\n\t\t\tlet maxY = -Infinity;\n\t\t\tlet maxZ = -Infinity;\n\n\t\t\tfor (let i = 0, l = array.length; i < l; i += 3) {\n\t\t\t\tconst x = array[i];\n\t\t\t\tconst y = array[i + 1];\n\t\t\t\tconst z = array[i + 2];\n\t\t\t\tif (x < minX) minX = x;\n\t\t\t\tif (y < minY) minY = y;\n\t\t\t\tif (z < minZ) minZ = z;\n\t\t\t\tif (x > maxX) maxX = x;\n\t\t\t\tif (y > maxY) maxY = y;\n\t\t\t\tif (z > maxZ) maxZ = z;\n\t\t\t}\n\n\t\t\tthis.min.set(minX, minY, minZ);\n\t\t\tthis.max.set(maxX, maxY, maxZ);\n\t\t\treturn this;\n\t\t}\n\n\t\tsetFromBufferAttribute(attribute) {\n\t\t\tlet minX = +Infinity;\n\t\t\tlet minY = +Infinity;\n\t\t\tlet minZ = +Infinity;\n\t\t\tlet maxX = -Infinity;\n\t\t\tlet maxY = -Infinity;\n\t\t\tlet maxZ = -Infinity;\n\n\t\t\tfor (let i = 0, l = attribute.count; i < l; i++) {\n\t\t\t\tconst x = attribute.getX(i);\n\t\t\t\tconst y = attribute.getY(i);\n\t\t\t\tconst z = attribute.getZ(i);\n\t\t\t\tif (x < minX) minX = x;\n\t\t\t\tif (y < minY) minY = y;\n\t\t\t\tif (z < minZ) minZ = z;\n\t\t\t\tif (x > maxX) maxX = x;\n\t\t\t\tif (y > maxY) maxY = y;\n\t\t\t\tif (z > maxZ) maxZ = z;\n\t\t\t}\n\n\t\t\tthis.min.set(minX, minY, minZ);\n\t\t\tthis.max.set(maxX, maxY, maxZ);\n\t\t\treturn this;\n\t\t}\n\n\t\tsetFromPoints(points) {\n\t\t\tthis.makeEmpty();\n\n\t\t\tfor (let i = 0, il = points.length; i < il; i++) {\n\t\t\t\tthis.expandByPoint(points[i]);\n\t\t\t}\n\n\t\t\treturn this;\n\t\t}\n\n\t\tsetFromCenterAndSize(center, size) {\n\t\t\tconst halfSize = _vector$b.copy(size).multiplyScalar(0.5);\n\n\t\t\tthis.min.copy(center).sub(halfSize);\n\t\t\tthis.max.copy(center).add(halfSize);\n\t\t\treturn this;\n\t\t}\n\n\t\tsetFromObject(object) {\n\t\t\tthis.makeEmpty();\n\t\t\treturn this.expandByObject(object);\n\t\t}\n\n\t\tclone() {\n\t\t\treturn new this.constructor().copy(this);\n\t\t}\n\n\t\tcopy(box) {\n\t\t\tthis.min.copy(box.min);\n\t\t\tthis.max.copy(box.max);\n\t\t\treturn this;\n\t\t}\n\n\t\tmakeEmpty() {\n\t\t\tthis.min.x = this.min.y = this.min.z = +Infinity;\n\t\t\tthis.max.x = this.max.y = this.max.z = -Infinity;\n\t\t\treturn this;\n\t\t}\n\n\t\tisEmpty() {\n\t\t\t// this is a more robust check for empty than ( volume <= 0 ) because volume can get positive with two negative axes\n\t\t\treturn this.max.x < this.min.x || this.max.y < this.min.y || this.max.z < this.min.z;\n\t\t}\n\n\t\tgetCenter(target) {\n\t\t\treturn this.isEmpty() ? target.set(0, 0, 0) : target.addVectors(this.min, this.max).multiplyScalar(0.5);\n\t\t}\n\n\t\tgetSize(target) {\n\t\t\treturn this.isEmpty() ? target.set(0, 0, 0) : target.subVectors(this.max, this.min);\n\t\t}\n\n\t\texpandByPoint(point) {\n\t\t\tthis.min.min(point);\n\t\t\tthis.max.max(point);\n\t\t\treturn this;\n\t\t}\n\n\t\texpandByVector(vector) {\n\t\t\tthis.min.sub(vector);\n\t\t\tthis.max.add(vector);\n\t\t\treturn this;\n\t\t}\n\n\t\texpandByScalar(scalar) {\n\t\t\tthis.min.addScalar(-scalar);\n\t\t\tthis.max.addScalar(scalar);\n\t\t\treturn this;\n\t\t}\n\n\t\texpandByObject(object) {\n\t\t\t// Computes the world-axis-aligned bounding box of an object (including its children),\n\t\t\t// accounting for both the object's, and children's, world transforms\n\t\t\tobject.updateWorldMatrix(false, false);\n\t\t\tconst geometry = object.geometry;\n\n\t\t\tif (geometry !== undefined) {\n\t\t\t\tif (geometry.boundingBox === null) {\n\t\t\t\t\tgeometry.computeBoundingBox();\n\t\t\t\t}\n\n\t\t\t\t_box$3.copy(geometry.boundingBox);\n\n\t\t\t\t_box$3.applyMatrix4(object.matrixWorld);\n\n\t\t\t\tthis.union(_box$3);\n\t\t\t}\n\n\t\t\tconst children = object.children;\n\n\t\t\tfor (let i = 0, l = children.length; i < l; i++) {\n\t\t\t\tthis.expandByObject(children[i]);\n\t\t\t}\n\n\t\t\treturn this;\n\t\t}\n\n\t\tcontainsPoint(point) {\n\t\t\treturn point.x < this.min.x || point.x > this.max.x || point.y < this.min.y || point.y > this.max.y || point.z < this.min.z || point.z > this.max.z ? false : true;\n\t\t}\n\n\t\tcontainsBox(box) {\n\t\t\treturn this.min.x <= box.min.x && box.max.x <= this.max.x && this.min.y <= box.min.y && box.max.y <= this.max.y && this.min.z <= box.min.z && box.max.z <= this.max.z;\n\t\t}\n\n\t\tgetParameter(point, target) {\n\t\t\t// This can potentially have a divide by zero if the box\n\t\t\t// has a size dimension of 0.\n\t\t\treturn target.set((point.x - this.min.x) / (this.max.x - this.min.x), (point.y - this.min.y) / (this.max.y - this.min.y), (point.z - this.min.z) / (this.max.z - this.min.z));\n\t\t}\n\n\t\tintersectsBox(box) {\n\t\t\t// using 6 splitting planes to rule out intersections.\n\t\t\treturn box.max.x < this.min.x || box.min.x > this.max.x || box.max.y < this.min.y || box.min.y > this.max.y || box.max.z < this.min.z || box.min.z > this.max.z ? false : true;\n\t\t}\n\n\t\tintersectsSphere(sphere) {\n\t\t\t// Find the point on the AABB closest to the sphere center.\n\t\t\tthis.clampPoint(sphere.center, _vector$b); // If that point is inside the sphere, the AABB and sphere intersect.\n\n\t\t\treturn _vector$b.distanceToSquared(sphere.center) <= sphere.radius * sphere.radius;\n\t\t}\n\n\t\tintersectsPlane(plane) {\n\t\t\t// We compute the minimum and maximum dot product values. If those values\n\t\t\t// are on the same side (back or front) of the plane, then there is no intersection.\n\t\t\tlet min, max;\n\n\t\t\tif (plane.normal.x > 0) {\n\t\t\t\tmin = plane.normal.x * this.min.x;\n\t\t\t\tmax = plane.normal.x * this.max.x;\n\t\t\t} else {\n\t\t\t\tmin = plane.normal.x * this.max.x;\n\t\t\t\tmax = plane.normal.x * this.min.x;\n\t\t\t}\n\n\t\t\tif (plane.normal.y > 0) {\n\t\t\t\tmin += plane.normal.y * this.min.y;\n\t\t\t\tmax += plane.normal.y * this.max.y;\n\t\t\t} else {\n\t\t\t\tmin += plane.normal.y * this.max.y;\n\t\t\t\tmax += plane.normal.y * this.min.y;\n\t\t\t}\n\n\t\t\tif (plane.normal.z > 0) {\n\t\t\t\tmin += plane.normal.z * this.min.z;\n\t\t\t\tmax += plane.normal.z * this.max.z;\n\t\t\t} else {\n\t\t\t\tmin += plane.normal.z * this.max.z;\n\t\t\t\tmax += plane.normal.z * this.min.z;\n\t\t\t}\n\n\t\t\treturn min <= -plane.constant && max >= -plane.constant;\n\t\t}\n\n\t\tintersectsTriangle(triangle) {\n\t\t\tif (this.isEmpty()) {\n\t\t\t\treturn false;\n\t\t\t} // compute box center and extents\n\n\n\t\t\tthis.getCenter(_center);\n\n\t\t\t_extents.subVectors(this.max, _center); // translate triangle to aabb origin\n\n\n\t\t\t_v0$2.subVectors(triangle.a, _center);\n\n\t\t\t_v1$7.subVectors(triangle.b, _center);\n\n\t\t\t_v2$3.subVectors(triangle.c, _center); // compute edge vectors for triangle\n\n\n\t\t\t_f0.subVectors(_v1$7, _v0$2);\n\n\t\t\t_f1.subVectors(_v2$3, _v1$7);\n\n\t\t\t_f2.subVectors(_v0$2, _v2$3); // test against axes that are given by cross product combinations of the edges of the triangle and the edges of the aabb\n\t\t\t// make an axis testing of each of the 3 sides of the aabb against each of the 3 sides of the triangle = 9 axis of separation\n\t\t\t// axis_ij = u_i x f_j (u0, u1, u2 = face normals of aabb = x,y,z axes vectors since aabb is axis aligned)\n\n\n\t\t\tlet axes = [0, -_f0.z, _f0.y, 0, -_f1.z, _f1.y, 0, -_f2.z, _f2.y, _f0.z, 0, -_f0.x, _f1.z, 0, -_f1.x, _f2.z, 0, -_f2.x, -_f0.y, _f0.x, 0, -_f1.y, _f1.x, 0, -_f2.y, _f2.x, 0];\n\n\t\t\tif (!satForAxes(axes, _v0$2, _v1$7, _v2$3, _extents)) {\n\t\t\t\treturn false;\n\t\t\t} // test 3 face normals from the aabb\n\n\n\t\t\taxes = [1, 0, 0, 0, 1, 0, 0, 0, 1];\n\n\t\t\tif (!satForAxes(axes, _v0$2, _v1$7, _v2$3, _extents)) {\n\t\t\t\treturn false;\n\t\t\t} // finally testing the face normal of the triangle\n\t\t\t// use already existing triangle edge vectors here\n\n\n\t\t\t_triangleNormal.crossVectors(_f0, _f1);\n\n\t\t\taxes = [_triangleNormal.x, _triangleNormal.y, _triangleNormal.z];\n\t\t\treturn satForAxes(axes, _v0$2, _v1$7, _v2$3, _extents);\n\t\t}\n\n\t\tclampPoint(point, target) {\n\t\t\treturn target.copy(point).clamp(this.min, this.max);\n\t\t}\n\n\t\tdistanceToPoint(point) {\n\t\t\tconst clampedPoint = _vector$b.copy(point).clamp(this.min, this.max);\n\n\t\t\treturn clampedPoint.sub(point).length();\n\t\t}\n\n\t\tgetBoundingSphere(target) {\n\t\t\tthis.getCenter(target.center);\n\t\t\ttarget.radius = this.getSize(_vector$b).length() * 0.5;\n\t\t\treturn target;\n\t\t}\n\n\t\tintersect(box) {\n\t\t\tthis.min.max(box.min);\n\t\t\tthis.max.min(box.max); // ensure that if there is no overlap, the result is fully empty, not slightly empty with non-inf/+inf values that will cause subsequence intersects to erroneously return valid values.\n\n\t\t\tif (this.isEmpty()) this.makeEmpty();\n\t\t\treturn this;\n\t\t}\n\n\t\tunion(box) {\n\t\t\tthis.min.min(box.min);\n\t\t\tthis.max.max(box.max);\n\t\t\treturn this;\n\t\t}\n\n\t\tapplyMatrix4(matrix) {\n\t\t\t// transform of empty box is an empty box.\n\t\t\tif (this.isEmpty()) return this; // NOTE: I am using a binary pattern to specify all 2^3 combinations below\n\n\t\t\t_points[0].set(this.min.x, this.min.y, this.min.z).applyMatrix4(matrix); // 000\n\n\n\t\t\t_points[1].set(this.min.x, this.min.y, this.max.z).applyMatrix4(matrix); // 001\n\n\n\t\t\t_points[2].set(this.min.x, this.max.y, this.min.z).applyMatrix4(matrix); // 010\n\n\n\t\t\t_points[3].set(this.min.x, this.max.y, this.max.z).applyMatrix4(matrix); // 011\n\n\n\t\t\t_points[4].set(this.max.x, this.min.y, this.min.z).applyMatrix4(matrix); // 100\n\n\n\t\t\t_points[5].set(this.max.x, this.min.y, this.max.z).applyMatrix4(matrix); // 101\n\n\n\t\t\t_points[6].set(this.max.x, this.max.y, this.min.z).applyMatrix4(matrix); // 110\n\n\n\t\t\t_points[7].set(this.max.x, this.max.y, this.max.z).applyMatrix4(matrix); // 111\n\n\n\t\t\tthis.setFromPoints(_points);\n\t\t\treturn this;\n\t\t}\n\n\t\ttranslate(offset) {\n\t\t\tthis.min.add(offset);\n\t\t\tthis.max.add(offset);\n\t\t\treturn this;\n\t\t}\n\n\t\tequals(box) {\n\t\t\treturn box.min.equals(this.min) && box.max.equals(this.max);\n\t\t}\n\n\t}\n\n\tBox3.prototype.isBox3 = true;\n\tconst _points = [/*@__PURE__*/new Vector3(), /*@__PURE__*/new Vector3(), /*@__PURE__*/new Vector3(), /*@__PURE__*/new Vector3(), /*@__PURE__*/new Vector3(), /*@__PURE__*/new Vector3(), /*@__PURE__*/new Vector3(), /*@__PURE__*/new Vector3()];\n\n\tconst _vector$b = /*@__PURE__*/new Vector3();\n\n\tconst _box$3 = /*@__PURE__*/new Box3(); // triangle centered vertices\n\n\n\tconst _v0$2 = /*@__PURE__*/new Vector3();\n\n\tconst _v1$7 = /*@__PURE__*/new Vector3();\n\n\tconst _v2$3 = /*@__PURE__*/new Vector3(); // triangle edge vectors\n\n\n\tconst _f0 = /*@__PURE__*/new Vector3();\n\n\tconst _f1 = /*@__PURE__*/new Vector3();\n\n\tconst _f2 = /*@__PURE__*/new Vector3();\n\n\tconst _center = /*@__PURE__*/new Vector3();\n\n\tconst _extents = /*@__PURE__*/new Vector3();\n\n\tconst _triangleNormal = /*@__PURE__*/new Vector3();\n\n\tconst _testAxis = /*@__PURE__*/new Vector3();\n\n\tfunction satForAxes(axes, v0, v1, v2, extents) {\n\t\tfor (let i = 0, j = axes.length - 3; i <= j; i += 3) {\n\t\t\t_testAxis.fromArray(axes, i); // project the aabb onto the seperating axis\n\n\n\t\t\tconst r = extents.x * Math.abs(_testAxis.x) + extents.y * Math.abs(_testAxis.y) + extents.z * Math.abs(_testAxis.z); // project all 3 vertices of the triangle onto the seperating axis\n\n\t\t\tconst p0 = v0.dot(_testAxis);\n\t\t\tconst p1 = v1.dot(_testAxis);\n\t\t\tconst p2 = v2.dot(_testAxis); // actual test, basically see if either of the most extreme of the triangle points intersects r\n\n\t\t\tif (Math.max(-Math.max(p0, p1, p2), Math.min(p0, p1, p2)) > r) {\n\t\t\t\t// points of the projected triangle are outside the projected half-length of the aabb\n\t\t\t\t// the axis is seperating and we can exit\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\treturn true;\n\t}\n\n\tconst _box$2 = /*@__PURE__*/new Box3();\n\n\tconst _v1$6 = /*@__PURE__*/new Vector3();\n\n\tconst _toFarthestPoint = /*@__PURE__*/new Vector3();\n\n\tconst _toPoint = /*@__PURE__*/new Vector3();\n\n\tclass Sphere {\n\t\tconstructor(center = new Vector3(), radius = -1) {\n\t\t\tthis.center = center;\n\t\t\tthis.radius = radius;\n\t\t}\n\n\t\tset(center, radius) {\n\t\t\tthis.center.copy(center);\n\t\t\tthis.radius = radius;\n\t\t\treturn this;\n\t\t}\n\n\t\tsetFromPoints(points, optionalCenter) {\n\t\t\tconst center = this.center;\n\n\t\t\tif (optionalCenter !== undefined) {\n\t\t\t\tcenter.copy(optionalCenter);\n\t\t\t} else {\n\t\t\t\t_box$2.setFromPoints(points).getCenter(center);\n\t\t\t}\n\n\t\t\tlet maxRadiusSq = 0;\n\n\t\t\tfor (let i = 0, il = points.length; i < il; i++) {\n\t\t\t\tmaxRadiusSq = Math.max(maxRadiusSq, center.distanceToSquared(points[i]));\n\t\t\t}\n\n\t\t\tthis.radius = Math.sqrt(maxRadiusSq);\n\t\t\treturn this;\n\t\t}\n\n\t\tcopy(sphere) {\n\t\t\tthis.center.copy(sphere.center);\n\t\t\tthis.radius = sphere.radius;\n\t\t\treturn this;\n\t\t}\n\n\t\tisEmpty() {\n\t\t\treturn this.radius < 0;\n\t\t}\n\n\t\tmakeEmpty() {\n\t\t\tthis.center.set(0, 0, 0);\n\t\t\tthis.radius = -1;\n\t\t\treturn this;\n\t\t}\n\n\t\tcontainsPoint(point) {\n\t\t\treturn point.distanceToSquared(this.center) <= this.radius * this.radius;\n\t\t}\n\n\t\tdistanceToPoint(point) {\n\t\t\treturn point.distanceTo(this.center) - this.radius;\n\t\t}\n\n\t\tintersectsSphere(sphere) {\n\t\t\tconst radiusSum = this.radius + sphere.radius;\n\t\t\treturn sphere.center.distanceToSquared(this.center) <= radiusSum * radiusSum;\n\t\t}\n\n\t\tintersectsBox(box) {\n\t\t\treturn box.intersectsSphere(this);\n\t\t}\n\n\t\tintersectsPlane(plane) {\n\t\t\treturn Math.abs(plane.distanceToPoint(this.center)) <= this.radius;\n\t\t}\n\n\t\tclampPoint(point, target) {\n\t\t\tconst deltaLengthSq = this.center.distanceToSquared(point);\n\t\t\ttarget.copy(point);\n\n\t\t\tif (deltaLengthSq > this.radius * this.radius) {\n\t\t\t\ttarget.sub(this.center).normalize();\n\t\t\t\ttarget.multiplyScalar(this.radius).add(this.center);\n\t\t\t}\n\n\t\t\treturn target;\n\t\t}\n\n\t\tgetBoundingBox(target) {\n\t\t\tif (this.isEmpty()) {\n\t\t\t\t// Empty sphere produces empty bounding box\n\t\t\t\ttarget.makeEmpty();\n\t\t\t\treturn target;\n\t\t\t}\n\n\t\t\ttarget.set(this.center, this.center);\n\t\t\ttarget.expandByScalar(this.radius);\n\t\t\treturn target;\n\t\t}\n\n\t\tapplyMatrix4(matrix) {\n\t\t\tthis.center.applyMatrix4(matrix);\n\t\t\tthis.radius = this.radius * matrix.getMaxScaleOnAxis();\n\t\t\treturn this;\n\t\t}\n\n\t\ttranslate(offset) {\n\t\t\tthis.center.add(offset);\n\t\t\treturn this;\n\t\t}\n\n\t\texpandByPoint(point) {\n\t\t\t// from https://github.com/juj/MathGeoLib/blob/2940b99b99cfe575dd45103ef20f4019dee15b54/src/Geometry/Sphere.cpp#L649-L671\n\t\t\t_toPoint.subVectors(point, this.center);\n\n\t\t\tconst lengthSq = _toPoint.lengthSq();\n\n\t\t\tif (lengthSq > this.radius * this.radius) {\n\t\t\t\tconst length = Math.sqrt(lengthSq);\n\t\t\t\tconst missingRadiusHalf = (length - this.radius) * 0.5; // Nudge this sphere towards the target point. Add half the missing distance to radius,\n\t\t\t\t// and the other half to position. This gives a tighter enclosure, instead of if\n\t\t\t\t// the whole missing distance were just added to radius.\n\n\t\t\t\tthis.center.add(_toPoint.multiplyScalar(missingRadiusHalf / length));\n\t\t\t\tthis.radius += missingRadiusHalf;\n\t\t\t}\n\n\t\t\treturn this;\n\t\t}\n\n\t\tunion(sphere) {\n\t\t\t// from https://github.com/juj/MathGeoLib/blob/2940b99b99cfe575dd45103ef20f4019dee15b54/src/Geometry/Sphere.cpp#L759-L769\n\t\t\t// To enclose another sphere into this sphere, we only need to enclose two points:\n\t\t\t// 1) Enclose the farthest point on the other sphere into this sphere.\n\t\t\t// 2) Enclose the opposite point of the farthest point into this sphere.\n\t\t\t_toFarthestPoint.subVectors(sphere.center, this.center).normalize().multiplyScalar(sphere.radius);\n\n\t\t\tthis.expandByPoint(_v1$6.copy(sphere.center).add(_toFarthestPoint));\n\t\t\tthis.expandByPoint(_v1$6.copy(sphere.center).sub(_toFarthestPoint));\n\t\t\treturn this;\n\t\t}\n\n\t\tequals(sphere) {\n\t\t\treturn sphere.center.equals(this.center) && sphere.radius === this.radius;\n\t\t}\n\n\t\tclone() {\n\t\t\treturn new this.constructor().copy(this);\n\t\t}\n\n\t}\n\n\tconst _vector$a = /*@__PURE__*/new Vector3();\n\n\tconst _segCenter = /*@__PURE__*/new Vector3();\n\n\tconst _segDir = /*@__PURE__*/new Vector3();\n\n\tconst _diff = /*@__PURE__*/new Vector3();\n\n\tconst _edge1 = /*@__PURE__*/new Vector3();\n\n\tconst _edge2 = /*@__PURE__*/new Vector3();\n\n\tconst _normal$1 = /*@__PURE__*/new Vector3();\n\n\tclass Ray {\n\t\tconstructor(origin = new Vector3(), direction = new Vector3(0, 0, -1)) {\n\t\t\tthis.origin = origin;\n\t\t\tthis.direction = direction;\n\t\t}\n\n\t\tset(origin, direction) {\n\t\t\tthis.origin.copy(origin);\n\t\t\tthis.direction.copy(direction);\n\t\t\treturn this;\n\t\t}\n\n\t\tcopy(ray) {\n\t\t\tthis.origin.copy(ray.origin);\n\t\t\tthis.direction.copy(ray.direction);\n\t\t\treturn this;\n\t\t}\n\n\t\tat(t, target) {\n\t\t\treturn target.copy(this.direction).multiplyScalar(t).add(this.origin);\n\t\t}\n\n\t\tlookAt(v) {\n\t\t\tthis.direction.copy(v).sub(this.origin).normalize();\n\t\t\treturn this;\n\t\t}\n\n\t\trecast(t) {\n\t\t\tthis.origin.copy(this.at(t, _vector$a));\n\t\t\treturn this;\n\t\t}\n\n\t\tclosestPointToPoint(point, target) {\n\t\t\ttarget.subVectors(point, this.origin);\n\t\t\tconst directionDistance = target.dot(this.direction);\n\n\t\t\tif (directionDistance < 0) {\n\t\t\t\treturn target.copy(this.origin);\n\t\t\t}\n\n\t\t\treturn target.copy(this.direction).multiplyScalar(directionDistance).add(this.origin);\n\t\t}\n\n\t\tdistanceToPoint(point) {\n\t\t\treturn Math.sqrt(this.distanceSqToPoint(point));\n\t\t}\n\n\t\tdistanceSqToPoint(point) {\n\t\t\tconst directionDistance = _vector$a.subVectors(point, this.origin).dot(this.direction); // point behind the ray\n\n\n\t\t\tif (directionDistance < 0) {\n\t\t\t\treturn this.origin.distanceToSquared(point);\n\t\t\t}\n\n\t\t\t_vector$a.copy(this.direction).multiplyScalar(directionDistance).add(this.origin);\n\n\t\t\treturn _vector$a.distanceToSquared(point);\n\t\t}\n\n\t\tdistanceSqToSegment(v0, v1, optionalPointOnRay, optionalPointOnSegment) {\n\t\t\t// from http://www.geometrictools.com/GTEngine/Include/Mathematics/GteDistRaySegment.h\n\t\t\t// It returns the min distance between the ray and the segment\n\t\t\t// defined by v0 and v1\n\t\t\t// It can also set two optional targets :\n\t\t\t// - The closest point on the ray\n\t\t\t// - The closest point on the segment\n\t\t\t_segCenter.copy(v0).add(v1).multiplyScalar(0.5);\n\n\t\t\t_segDir.copy(v1).sub(v0).normalize();\n\n\t\t\t_diff.copy(this.origin).sub(_segCenter);\n\n\t\t\tconst segExtent = v0.distanceTo(v1) * 0.5;\n\t\t\tconst a01 = -this.direction.dot(_segDir);\n\n\t\t\tconst b0 = _diff.dot(this.direction);\n\n\t\t\tconst b1 = -_diff.dot(_segDir);\n\n\t\t\tconst c = _diff.lengthSq();\n\n\t\t\tconst det = Math.abs(1 - a01 * a01);\n\t\t\tlet s0, s1, sqrDist, extDet;\n\n\t\t\tif (det > 0) {\n\t\t\t\t// The ray and segment are not parallel.\n\t\t\t\ts0 = a01 * b1 - b0;\n\t\t\t\ts1 = a01 * b0 - b1;\n\t\t\t\textDet = segExtent * det;\n\n\t\t\t\tif (s0 >= 0) {\n\t\t\t\t\tif (s1 >= -extDet) {\n\t\t\t\t\t\tif (s1 <= extDet) {\n\t\t\t\t\t\t\t// region 0\n\t\t\t\t\t\t\t// Minimum at interior points of ray and segment.\n\t\t\t\t\t\t\tconst invDet = 1 / det;\n\t\t\t\t\t\t\ts0 *= invDet;\n\t\t\t\t\t\t\ts1 *= invDet;\n\t\t\t\t\t\t\tsqrDist = s0 * (s0 + a01 * s1 + 2 * b0) + s1 * (a01 * s0 + s1 + 2 * b1) + c;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// region 1\n\t\t\t\t\t\t\ts1 = segExtent;\n\t\t\t\t\t\t\ts0 = Math.max(0, -(a01 * s1 + b0));\n\t\t\t\t\t\t\tsqrDist = -s0 * s0 + s1 * (s1 + 2 * b1) + c;\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// region 5\n\t\t\t\t\t\ts1 = -segExtent;\n\t\t\t\t\t\ts0 = Math.max(0, -(a01 * s1 + b0));\n\t\t\t\t\t\tsqrDist = -s0 * s0 + s1 * (s1 + 2 * b1) + c;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif (s1 <= -extDet) {\n\t\t\t\t\t\t// region 4\n\t\t\t\t\t\ts0 = Math.max(0, -(-a01 * segExtent + b0));\n\t\t\t\t\t\ts1 = s0 > 0 ? -segExtent : Math.min(Math.max(-segExtent, -b1), segExtent);\n\t\t\t\t\t\tsqrDist = -s0 * s0 + s1 * (s1 + 2 * b1) + c;\n\t\t\t\t\t} else if (s1 <= extDet) {\n\t\t\t\t\t\t// region 3\n\t\t\t\t\t\ts0 = 0;\n\t\t\t\t\t\ts1 = Math.min(Math.max(-segExtent, -b1), segExtent);\n\t\t\t\t\t\tsqrDist = s1 * (s1 + 2 * b1) + c;\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// region 2\n\t\t\t\t\t\ts0 = Math.max(0, -(a01 * segExtent + b0));\n\t\t\t\t\t\ts1 = s0 > 0 ? segExtent : Math.min(Math.max(-segExtent, -b1), segExtent);\n\t\t\t\t\t\tsqrDist = -s0 * s0 + s1 * (s1 + 2 * b1) + c;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// Ray and segment are parallel.\n\t\t\t\ts1 = a01 > 0 ? -segExtent : segExtent;\n\t\t\t\ts0 = Math.max(0, -(a01 * s1 + b0));\n\t\t\t\tsqrDist = -s0 * s0 + s1 * (s1 + 2 * b1) + c;\n\t\t\t}\n\n\t\t\tif (optionalPointOnRay) {\n\t\t\t\toptionalPointOnRay.copy(this.direction).multiplyScalar(s0).add(this.origin);\n\t\t\t}\n\n\t\t\tif (optionalPointOnSegment) {\n\t\t\t\toptionalPointOnSegment.copy(_segDir).multiplyScalar(s1).add(_segCenter);\n\t\t\t}\n\n\t\t\treturn sqrDist;\n\t\t}\n\n\t\tintersectSphere(sphere, target) {\n\t\t\t_vector$a.subVectors(sphere.center, this.origin);\n\n\t\t\tconst tca = _vector$a.dot(this.direction);\n\n\t\t\tconst d2 = _vector$a.dot(_vector$a) - tca * tca;\n\t\t\tconst radius2 = sphere.radius * sphere.radius;\n\t\t\tif (d2 > radius2) return null;\n\t\t\tconst thc = Math.sqrt(radius2 - d2); // t0 = first intersect point - entrance on front of sphere\n\n\t\t\tconst t0 = tca - thc; // t1 = second intersect point - exit point on back of sphere\n\n\t\t\tconst t1 = tca + thc; // test to see if both t0 and t1 are behind the ray - if so, return null\n\n\t\t\tif (t0 < 0 && t1 < 0) return null; // test to see if t0 is behind the ray:\n\t\t\t// if it is, the ray is inside the sphere, so return the second exit point scaled by t1,\n\t\t\t// in order to always return an intersect point that is in front of the ray.\n\n\t\t\tif (t0 < 0) return this.at(t1, target); // else t0 is in front of the ray, so return the first collision point scaled by t0\n\n\t\t\treturn this.at(t0, target);\n\t\t}\n\n\t\tintersectsSphere(sphere) {\n\t\t\treturn this.distanceSqToPoint(sphere.center) <= sphere.radius * sphere.radius;\n\t\t}\n\n\t\tdistanceToPlane(plane) {\n\t\t\tconst denominator = plane.normal.dot(this.direction);\n\n\t\t\tif (denominator === 0) {\n\t\t\t\t// line is coplanar, return origin\n\t\t\t\tif (plane.distanceToPoint(this.origin) === 0) {\n\t\t\t\t\treturn 0;\n\t\t\t\t} // Null is preferable to undefined since undefined means.... it is undefined\n\n\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tconst t = -(this.origin.dot(plane.normal) + plane.constant) / denominator; // Return if the ray never intersects the plane\n\n\t\t\treturn t >= 0 ? t : null;\n\t\t}\n\n\t\tintersectPlane(plane, target) {\n\t\t\tconst t = this.distanceToPlane(plane);\n\n\t\t\tif (t === null) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\treturn this.at(t, target);\n\t\t}\n\n\t\tintersectsPlane(plane) {\n\t\t\t// check if the ray lies on the plane first\n\t\t\tconst distToPoint = plane.distanceToPoint(this.origin);\n\n\t\t\tif (distToPoint === 0) {\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\tconst denominator = plane.normal.dot(this.direction);\n\n\t\t\tif (denominator * distToPoint < 0) {\n\t\t\t\treturn true;\n\t\t\t} // ray origin is behind the plane (and is pointing behind it)\n\n\n\t\t\treturn false;\n\t\t}\n\n\t\tintersectBox(box, target) {\n\t\t\tlet tmin, tmax, tymin, tymax, tzmin, tzmax;\n\t\t\tconst invdirx = 1 / this.direction.x,\n\t\t\t\t\t\tinvdiry = 1 / this.direction.y,\n\t\t\t\t\t\tinvdirz = 1 / this.direction.z;\n\t\t\tconst origin = this.origin;\n\n\t\t\tif (invdirx >= 0) {\n\t\t\t\ttmin = (box.min.x - origin.x) * invdirx;\n\t\t\t\ttmax = (box.max.x - origin.x) * invdirx;\n\t\t\t} else {\n\t\t\t\ttmin = (box.max.x - origin.x) * invdirx;\n\t\t\t\ttmax = (box.min.x - origin.x) * invdirx;\n\t\t\t}\n\n\t\t\tif (invdiry >= 0) {\n\t\t\t\ttymin = (box.min.y - origin.y) * invdiry;\n\t\t\t\ttymax = (box.max.y - origin.y) * invdiry;\n\t\t\t} else {\n\t\t\t\ttymin = (box.max.y - origin.y) * invdiry;\n\t\t\t\ttymax = (box.min.y - origin.y) * invdiry;\n\t\t\t}\n\n\t\t\tif (tmin > tymax || tymin > tmax) return null; // These lines also handle the case where tmin or tmax is NaN\n\t\t\t// (result of 0 * Infinity). x !== x returns true if x is NaN\n\n\t\t\tif (tymin > tmin || tmin !== tmin) tmin = tymin;\n\t\t\tif (tymax < tmax || tmax !== tmax) tmax = tymax;\n\n\t\t\tif (invdirz >= 0) {\n\t\t\t\ttzmin = (box.min.z - origin.z) * invdirz;\n\t\t\t\ttzmax = (box.max.z - origin.z) * invdirz;\n\t\t\t} else {\n\t\t\t\ttzmin = (box.max.z - origin.z) * invdirz;\n\t\t\t\ttzmax = (box.min.z - origin.z) * invdirz;\n\t\t\t}\n\n\t\t\tif (tmin > tzmax || tzmin > tmax) return null;\n\t\t\tif (tzmin > tmin || tmin !== tmin) tmin = tzmin;\n\t\t\tif (tzmax < tmax || tmax !== tmax) tmax = tzmax; //return point closest to the ray (positive side)\n\n\t\t\tif (tmax < 0) return null;\n\t\t\treturn this.at(tmin >= 0 ? tmin : tmax, target);\n\t\t}\n\n\t\tintersectsBox(box) {\n\t\t\treturn this.intersectBox(box, _vector$a) !== null;\n\t\t}\n\n\t\tintersectTriangle(a, b, c, backfaceCulling, target) {\n\t\t\t// Compute the offset origin, edges, and normal.\n\t\t\t// from http://www.geometrictools.com/GTEngine/Include/Mathematics/GteIntrRay3Triangle3.h\n\t\t\t_edge1.subVectors(b, a);\n\n\t\t\t_edge2.subVectors(c, a);\n\n\t\t\t_normal$1.crossVectors(_edge1, _edge2); // Solve Q + t*D = b1*E1 + b2*E2 (Q = kDiff, D = ray direction,\n\t\t\t// E1 = kEdge1, E2 = kEdge2, N = Cross(E1,E2)) by\n\t\t\t//\t |Dot(D,N)|*b1 = sign(Dot(D,N))*Dot(D,Cross(Q,E2))\n\t\t\t//\t |Dot(D,N)|*b2 = sign(Dot(D,N))*Dot(D,Cross(E1,Q))\n\t\t\t//\t |Dot(D,N)|*t = -sign(Dot(D,N))*Dot(Q,N)\n\n\n\t\t\tlet DdN = this.direction.dot(_normal$1);\n\t\t\tlet sign;\n\n\t\t\tif (DdN > 0) {\n\t\t\t\tif (backfaceCulling) return null;\n\t\t\t\tsign = 1;\n\t\t\t} else if (DdN < 0) {\n\t\t\t\tsign = -1;\n\t\t\t\tDdN = -DdN;\n\t\t\t} else {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\t_diff.subVectors(this.origin, a);\n\n\t\t\tconst DdQxE2 = sign * this.direction.dot(_edge2.crossVectors(_diff, _edge2)); // b1 < 0, no intersection\n\n\t\t\tif (DdQxE2 < 0) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tconst DdE1xQ = sign * this.direction.dot(_edge1.cross(_diff)); // b2 < 0, no intersection\n\n\t\t\tif (DdE1xQ < 0) {\n\t\t\t\treturn null;\n\t\t\t} // b1+b2 > 1, no intersection\n\n\n\t\t\tif (DdQxE2 + DdE1xQ > DdN) {\n\t\t\t\treturn null;\n\t\t\t} // Line intersects triangle, check if ray does.\n\n\n\t\t\tconst QdN = -sign * _diff.dot(_normal$1); // t < 0, no intersection\n\n\n\t\t\tif (QdN < 0) {\n\t\t\t\treturn null;\n\t\t\t} // Ray intersects triangle.\n\n\n\t\t\treturn this.at(QdN / DdN, target);\n\t\t}\n\n\t\tapplyMatrix4(matrix4) {\n\t\t\tthis.origin.applyMatrix4(matrix4);\n\t\t\tthis.direction.transformDirection(matrix4);\n\t\t\treturn this;\n\t\t}\n\n\t\tequals(ray) {\n\t\t\treturn ray.origin.equals(this.origin) && ray.direction.equals(this.direction);\n\t\t}\n\n\t\tclone() {\n\t\t\treturn new this.constructor().copy(this);\n\t\t}\n\n\t}\n\n\tclass Matrix4 {\n\t\tconstructor() {\n\t\t\tthis.elements = [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1];\n\n\t\t\tif (arguments.length > 0) {\n\t\t\t\tconsole.error('THREE.Matrix4: the constructor no longer reads arguments. use .set() instead.');\n\t\t\t}\n\t\t}\n\n\t\tset(n11, n12, n13, n14, n21, n22, n23, n24, n31, n32, n33, n34, n41, n42, n43, n44) {\n\t\t\tconst te = this.elements;\n\t\t\tte[0] = n11;\n\t\t\tte[4] = n12;\n\t\t\tte[8] = n13;\n\t\t\tte[12] = n14;\n\t\t\tte[1] = n21;\n\t\t\tte[5] = n22;\n\t\t\tte[9] = n23;\n\t\t\tte[13] = n24;\n\t\t\tte[2] = n31;\n\t\t\tte[6] = n32;\n\t\t\tte[10] = n33;\n\t\t\tte[14] = n34;\n\t\t\tte[3] = n41;\n\t\t\tte[7] = n42;\n\t\t\tte[11] = n43;\n\t\t\tte[15] = n44;\n\t\t\treturn this;\n\t\t}\n\n\t\tidentity() {\n\t\t\tthis.set(1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1);\n\t\t\treturn this;\n\t\t}\n\n\t\tclone() {\n\t\t\treturn new Matrix4().fromArray(this.elements);\n\t\t}\n\n\t\tcopy(m) {\n\t\t\tconst te = this.elements;\n\t\t\tconst me = m.elements;\n\t\t\tte[0] = me[0];\n\t\t\tte[1] = me[1];\n\t\t\tte[2] = me[2];\n\t\t\tte[3] = me[3];\n\t\t\tte[4] = me[4];\n\t\t\tte[5] = me[5];\n\t\t\tte[6] = me[6];\n\t\t\tte[7] = me[7];\n\t\t\tte[8] = me[8];\n\t\t\tte[9] = me[9];\n\t\t\tte[10] = me[10];\n\t\t\tte[11] = me[11];\n\t\t\tte[12] = me[12];\n\t\t\tte[13] = me[13];\n\t\t\tte[14] = me[14];\n\t\t\tte[15] = me[15];\n\t\t\treturn this;\n\t\t}\n\n\t\tcopyPosition(m) {\n\t\t\tconst te = this.elements,\n\t\t\t\t\t\tme = m.elements;\n\t\t\tte[12] = me[12];\n\t\t\tte[13] = me[13];\n\t\t\tte[14] = me[14];\n\t\t\treturn this;\n\t\t}\n\n\t\tsetFromMatrix3(m) {\n\t\t\tconst me = m.elements;\n\t\t\tthis.set(me[0], me[3], me[6], 0, me[1], me[4], me[7], 0, me[2], me[5], me[8], 0, 0, 0, 0, 1);\n\t\t\treturn this;\n\t\t}\n\n\t\textractBasis(xAxis, yAxis, zAxis) {\n\t\t\txAxis.setFromMatrixColumn(this, 0);\n\t\t\tyAxis.setFromMatrixColumn(this, 1);\n\t\t\tzAxis.setFromMatrixColumn(this, 2);\n\t\t\treturn this;\n\t\t}\n\n\t\tmakeBasis(xAxis, yAxis, zAxis) {\n\t\t\tthis.set(xAxis.x, yAxis.x, zAxis.x, 0, xAxis.y, yAxis.y, zAxis.y, 0, xAxis.z, yAxis.z, zAxis.z, 0, 0, 0, 0, 1);\n\t\t\treturn this;\n\t\t}\n\n\t\textractRotation(m) {\n\t\t\t// this method does not support reflection matrices\n\t\t\tconst te = this.elements;\n\t\t\tconst me = m.elements;\n\n\t\t\tconst scaleX = 1 / _v1$5.setFromMatrixColumn(m, 0).length();\n\n\t\t\tconst scaleY = 1 / _v1$5.setFromMatrixColumn(m, 1).length();\n\n\t\t\tconst scaleZ = 1 / _v1$5.setFromMatrixColumn(m, 2).length();\n\n\t\t\tte[0] = me[0] * scaleX;\n\t\t\tte[1] = me[1] * scaleX;\n\t\t\tte[2] = me[2] * scaleX;\n\t\t\tte[3] = 0;\n\t\t\tte[4] = me[4] * scaleY;\n\t\t\tte[5] = me[5] * scaleY;\n\t\t\tte[6] = me[6] * scaleY;\n\t\t\tte[7] = 0;\n\t\t\tte[8] = me[8] * scaleZ;\n\t\t\tte[9] = me[9] * scaleZ;\n\t\t\tte[10] = me[10] * scaleZ;\n\t\t\tte[11] = 0;\n\t\t\tte[12] = 0;\n\t\t\tte[13] = 0;\n\t\t\tte[14] = 0;\n\t\t\tte[15] = 1;\n\t\t\treturn this;\n\t\t}\n\n\t\tmakeRotationFromEuler(euler) {\n\t\t\tif (!(euler && euler.isEuler)) {\n\t\t\t\tconsole.error('THREE.Matrix4: .makeRotationFromEuler() now expects a Euler rotation rather than a Vector3 and order.');\n\t\t\t}\n\n\t\t\tconst te = this.elements;\n\t\t\tconst x = euler.x,\n\t\t\t\t\t\ty = euler.y,\n\t\t\t\t\t\tz = euler.z;\n\t\t\tconst a = Math.cos(x),\n\t\t\t\t\t\tb = Math.sin(x);\n\t\t\tconst c = Math.cos(y),\n\t\t\t\t\t\td = Math.sin(y);\n\t\t\tconst e = Math.cos(z),\n\t\t\t\t\t\tf = Math.sin(z);\n\n\t\t\tif (euler.order === 'XYZ') {\n\t\t\t\tconst ae = a * e,\n\t\t\t\t\t\t\taf = a * f,\n\t\t\t\t\t\t\tbe = b * e,\n\t\t\t\t\t\t\tbf = b * f;\n\t\t\t\tte[0] = c * e;\n\t\t\t\tte[4] = -c * f;\n\t\t\t\tte[8] = d;\n\t\t\t\tte[1] = af + be * d;\n\t\t\t\tte[5] = ae - bf * d;\n\t\t\t\tte[9] = -b * c;\n\t\t\t\tte[2] = bf - ae * d;\n\t\t\t\tte[6] = be + af * d;\n\t\t\t\tte[10] = a * c;\n\t\t\t} else if (euler.order === 'YXZ') {\n\t\t\t\tconst ce = c * e,\n\t\t\t\t\t\t\tcf = c * f,\n\t\t\t\t\t\t\tde = d * e,\n\t\t\t\t\t\t\tdf = d * f;\n\t\t\t\tte[0] = ce + df * b;\n\t\t\t\tte[4] = de * b - cf;\n\t\t\t\tte[8] = a * d;\n\t\t\t\tte[1] = a * f;\n\t\t\t\tte[5] = a * e;\n\t\t\t\tte[9] = -b;\n\t\t\t\tte[2] = cf * b - de;\n\t\t\t\tte[6] = df + ce * b;\n\t\t\t\tte[10] = a * c;\n\t\t\t} else if (euler.order === 'ZXY') {\n\t\t\t\tconst ce = c * e,\n\t\t\t\t\t\t\tcf = c * f,\n\t\t\t\t\t\t\tde = d * e,\n\t\t\t\t\t\t\tdf = d * f;\n\t\t\t\tte[0] = ce - df * b;\n\t\t\t\tte[4] = -a * f;\n\t\t\t\tte[8] = de + cf * b;\n\t\t\t\tte[1] = cf + de * b;\n\t\t\t\tte[5] = a * e;\n\t\t\t\tte[9] = df - ce * b;\n\t\t\t\tte[2] = -a * d;\n\t\t\t\tte[6] = b;\n\t\t\t\tte[10] = a * c;\n\t\t\t} else if (euler.order === 'ZYX') {\n\t\t\t\tconst ae = a * e,\n\t\t\t\t\t\t\taf = a * f,\n\t\t\t\t\t\t\tbe = b * e,\n\t\t\t\t\t\t\tbf = b * f;\n\t\t\t\tte[0] = c * e;\n\t\t\t\tte[4] = be * d - af;\n\t\t\t\tte[8] = ae * d + bf;\n\t\t\t\tte[1] = c * f;\n\t\t\t\tte[5] = bf * d + ae;\n\t\t\t\tte[9] = af * d - be;\n\t\t\t\tte[2] = -d;\n\t\t\t\tte[6] = b * c;\n\t\t\t\tte[10] = a * c;\n\t\t\t} else if (euler.order === 'YZX') {\n\t\t\t\tconst ac = a * c,\n\t\t\t\t\t\t\tad = a * d,\n\t\t\t\t\t\t\tbc = b * c,\n\t\t\t\t\t\t\tbd = b * d;\n\t\t\t\tte[0] = c * e;\n\t\t\t\tte[4] = bd - ac * f;\n\t\t\t\tte[8] = bc * f + ad;\n\t\t\t\tte[1] = f;\n\t\t\t\tte[5] = a * e;\n\t\t\t\tte[9] = -b * e;\n\t\t\t\tte[2] = -d * e;\n\t\t\t\tte[6] = ad * f + bc;\n\t\t\t\tte[10] = ac - bd * f;\n\t\t\t} else if (euler.order === 'XZY') {\n\t\t\t\tconst ac = a * c,\n\t\t\t\t\t\t\tad = a * d,\n\t\t\t\t\t\t\tbc = b * c,\n\t\t\t\t\t\t\tbd = b * d;\n\t\t\t\tte[0] = c * e;\n\t\t\t\tte[4] = -f;\n\t\t\t\tte[8] = d * e;\n\t\t\t\tte[1] = ac * f + bd;\n\t\t\t\tte[5] = a * e;\n\t\t\t\tte[9] = ad * f - bc;\n\t\t\t\tte[2] = bc * f - ad;\n\t\t\t\tte[6] = b * e;\n\t\t\t\tte[10] = bd * f + ac;\n\t\t\t} // bottom row\n\n\n\t\t\tte[3] = 0;\n\t\t\tte[7] = 0;\n\t\t\tte[11] = 0; // last column\n\n\t\t\tte[12] = 0;\n\t\t\tte[13] = 0;\n\t\t\tte[14] = 0;\n\t\t\tte[15] = 1;\n\t\t\treturn this;\n\t\t}\n\n\t\tmakeRotationFromQuaternion(q) {\n\t\t\treturn this.compose(_zero, q, _one);\n\t\t}\n\n\t\tlookAt(eye, target, up) {\n\t\t\tconst te = this.elements;\n\n\t\t\t_z.subVectors(eye, target);\n\n\t\t\tif (_z.lengthSq() === 0) {\n\t\t\t\t// eye and target are in the same position\n\t\t\t\t_z.z = 1;\n\t\t\t}\n\n\t\t\t_z.normalize();\n\n\t\t\t_x.crossVectors(up, _z);\n\n\t\t\tif (_x.lengthSq() === 0) {\n\t\t\t\t// up and z are parallel\n\t\t\t\tif (Math.abs(up.z) === 1) {\n\t\t\t\t\t_z.x += 0.0001;\n\t\t\t\t} else {\n\t\t\t\t\t_z.z += 0.0001;\n\t\t\t\t}\n\n\t\t\t\t_z.normalize();\n\n\t\t\t\t_x.crossVectors(up, _z);\n\t\t\t}\n\n\t\t\t_x.normalize();\n\n\t\t\t_y.crossVectors(_z, _x);\n\n\t\t\tte[0] = _x.x;\n\t\t\tte[4] = _y.x;\n\t\t\tte[8] = _z.x;\n\t\t\tte[1] = _x.y;\n\t\t\tte[5] = _y.y;\n\t\t\tte[9] = _z.y;\n\t\t\tte[2] = _x.z;\n\t\t\tte[6] = _y.z;\n\t\t\tte[10] = _z.z;\n\t\t\treturn this;\n\t\t}\n\n\t\tmultiply(m, n) {\n\t\t\tif (n !== undefined) {\n\t\t\t\tconsole.warn('THREE.Matrix4: .multiply() now only accepts one argument. Use .multiplyMatrices( a, b ) instead.');\n\t\t\t\treturn this.multiplyMatrices(m, n);\n\t\t\t}\n\n\t\t\treturn this.multiplyMatrices(this, m);\n\t\t}\n\n\t\tpremultiply(m) {\n\t\t\treturn this.multiplyMatrices(m, this);\n\t\t}\n\n\t\tmultiplyMatrices(a, b) {\n\t\t\tconst ae = a.elements;\n\t\t\tconst be = b.elements;\n\t\t\tconst te = this.elements;\n\t\t\tconst a11 = ae[0],\n\t\t\t\t\t\ta12 = ae[4],\n\t\t\t\t\t\ta13 = ae[8],\n\t\t\t\t\t\ta14 = ae[12];\n\t\t\tconst a21 = ae[1],\n\t\t\t\t\t\ta22 = ae[5],\n\t\t\t\t\t\ta23 = ae[9],\n\t\t\t\t\t\ta24 = ae[13];\n\t\t\tconst a31 = ae[2],\n\t\t\t\t\t\ta32 = ae[6],\n\t\t\t\t\t\ta33 = ae[10],\n\t\t\t\t\t\ta34 = ae[14];\n\t\t\tconst a41 = ae[3],\n\t\t\t\t\t\ta42 = ae[7],\n\t\t\t\t\t\ta43 = ae[11],\n\t\t\t\t\t\ta44 = ae[15];\n\t\t\tconst b11 = be[0],\n\t\t\t\t\t\tb12 = be[4],\n\t\t\t\t\t\tb13 = be[8],\n\t\t\t\t\t\tb14 = be[12];\n\t\t\tconst b21 = be[1],\n\t\t\t\t\t\tb22 = be[5],\n\t\t\t\t\t\tb23 = be[9],\n\t\t\t\t\t\tb24 = be[13];\n\t\t\tconst b31 = be[2],\n\t\t\t\t\t\tb32 = be[6],\n\t\t\t\t\t\tb33 = be[10],\n\t\t\t\t\t\tb34 = be[14];\n\t\t\tconst b41 = be[3],\n\t\t\t\t\t\tb42 = be[7],\n\t\t\t\t\t\tb43 = be[11],\n\t\t\t\t\t\tb44 = be[15];\n\t\t\tte[0] = a11 * b11 + a12 * b21 + a13 * b31 + a14 * b41;\n\t\t\tte[4] = a11 * b12 + a12 * b22 + a13 * b32 + a14 * b42;\n\t\t\tte[8] = a11 * b13 + a12 * b23 + a13 * b33 + a14 * b43;\n\t\t\tte[12] = a11 * b14 + a12 * b24 + a13 * b34 + a14 * b44;\n\t\t\tte[1] = a21 * b11 + a22 * b21 + a23 * b31 + a24 * b41;\n\t\t\tte[5] = a21 * b12 + a22 * b22 + a23 * b32 + a24 * b42;\n\t\t\tte[9] = a21 * b13 + a22 * b23 + a23 * b33 + a24 * b43;\n\t\t\tte[13] = a21 * b14 + a22 * b24 + a23 * b34 + a24 * b44;\n\t\t\tte[2] = a31 * b11 + a32 * b21 + a33 * b31 + a34 * b41;\n\t\t\tte[6] = a31 * b12 + a32 * b22 + a33 * b32 + a34 * b42;\n\t\t\tte[10] = a31 * b13 + a32 * b23 + a33 * b33 + a34 * b43;\n\t\t\tte[14] = a31 * b14 + a32 * b24 + a33 * b34 + a34 * b44;\n\t\t\tte[3] = a41 * b11 + a42 * b21 + a43 * b31 + a44 * b41;\n\t\t\tte[7] = a41 * b12 + a42 * b22 + a43 * b32 + a44 * b42;\n\t\t\tte[11] = a41 * b13 + a42 * b23 + a43 * b33 + a44 * b43;\n\t\t\tte[15] = a41 * b14 + a42 * b24 + a43 * b34 + a44 * b44;\n\t\t\treturn this;\n\t\t}\n\n\t\tmultiplyScalar(s) {\n\t\t\tconst te = this.elements;\n\t\t\tte[0] *= s;\n\t\t\tte[4] *= s;\n\t\t\tte[8] *= s;\n\t\t\tte[12] *= s;\n\t\t\tte[1] *= s;\n\t\t\tte[5] *= s;\n\t\t\tte[9] *= s;\n\t\t\tte[13] *= s;\n\t\t\tte[2] *= s;\n\t\t\tte[6] *= s;\n\t\t\tte[10] *= s;\n\t\t\tte[14] *= s;\n\t\t\tte[3] *= s;\n\t\t\tte[7] *= s;\n\t\t\tte[11] *= s;\n\t\t\tte[15] *= s;\n\t\t\treturn this;\n\t\t}\n\n\t\tdeterminant() {\n\t\t\tconst te = this.elements;\n\t\t\tconst n11 = te[0],\n\t\t\t\t\t\tn12 = te[4],\n\t\t\t\t\t\tn13 = te[8],\n\t\t\t\t\t\tn14 = te[12];\n\t\t\tconst n21 = te[1],\n\t\t\t\t\t\tn22 = te[5],\n\t\t\t\t\t\tn23 = te[9],\n\t\t\t\t\t\tn24 = te[13];\n\t\t\tconst n31 = te[2],\n\t\t\t\t\t\tn32 = te[6],\n\t\t\t\t\t\tn33 = te[10],\n\t\t\t\t\t\tn34 = te[14];\n\t\t\tconst n41 = te[3],\n\t\t\t\t\t\tn42 = te[7],\n\t\t\t\t\t\tn43 = te[11],\n\t\t\t\t\t\tn44 = te[15]; //TODO: make this more efficient\n\t\t\t//( based on http://www.euclideanspace.com/maths/algebra/matrix/functions/inverse/fourD/index.htm )\n\n\t\t\treturn n41 * (+n14 * n23 * n32 - n13 * n24 * n32 - n14 * n22 * n33 + n12 * n24 * n33 + n13 * n22 * n34 - n12 * n23 * n34) + n42 * (+n11 * n23 * n34 - n11 * n24 * n33 + n14 * n21 * n33 - n13 * n21 * n34 + n13 * n24 * n31 - n14 * n23 * n31) + n43 * (+n11 * n24 * n32 - n11 * n22 * n34 - n14 * n21 * n32 + n12 * n21 * n34 + n14 * n22 * n31 - n12 * n24 * n31) + n44 * (-n13 * n22 * n31 - n11 * n23 * n32 + n11 * n22 * n33 + n13 * n21 * n32 - n12 * n21 * n33 + n12 * n23 * n31);\n\t\t}\n\n\t\ttranspose() {\n\t\t\tconst te = this.elements;\n\t\t\tlet tmp;\n\t\t\ttmp = te[1];\n\t\t\tte[1] = te[4];\n\t\t\tte[4] = tmp;\n\t\t\ttmp = te[2];\n\t\t\tte[2] = te[8];\n\t\t\tte[8] = tmp;\n\t\t\ttmp = te[6];\n\t\t\tte[6] = te[9];\n\t\t\tte[9] = tmp;\n\t\t\ttmp = te[3];\n\t\t\tte[3] = te[12];\n\t\t\tte[12] = tmp;\n\t\t\ttmp = te[7];\n\t\t\tte[7] = te[13];\n\t\t\tte[13] = tmp;\n\t\t\ttmp = te[11];\n\t\t\tte[11] = te[14];\n\t\t\tte[14] = tmp;\n\t\t\treturn this;\n\t\t}\n\n\t\tsetPosition(x, y, z) {\n\t\t\tconst te = this.elements;\n\n\t\t\tif (x.isVector3) {\n\t\t\t\tte[12] = x.x;\n\t\t\t\tte[13] = x.y;\n\t\t\t\tte[14] = x.z;\n\t\t\t} else {\n\t\t\t\tte[12] = x;\n\t\t\t\tte[13] = y;\n\t\t\t\tte[14] = z;\n\t\t\t}\n\n\t\t\treturn this;\n\t\t}\n\n\t\tinvert() {\n\t\t\t// based on http://www.euclideanspace.com/maths/algebra/matrix/functions/inverse/fourD/index.htm\n\t\t\tconst te = this.elements,\n\t\t\t\t\t\tn11 = te[0],\n\t\t\t\t\t\tn21 = te[1],\n\t\t\t\t\t\tn31 = te[2],\n\t\t\t\t\t\tn41 = te[3],\n\t\t\t\t\t\tn12 = te[4],\n\t\t\t\t\t\tn22 = te[5],\n\t\t\t\t\t\tn32 = te[6],\n\t\t\t\t\t\tn42 = te[7],\n\t\t\t\t\t\tn13 = te[8],\n\t\t\t\t\t\tn23 = te[9],\n\t\t\t\t\t\tn33 = te[10],\n\t\t\t\t\t\tn43 = te[11],\n\t\t\t\t\t\tn14 = te[12],\n\t\t\t\t\t\tn24 = te[13],\n\t\t\t\t\t\tn34 = te[14],\n\t\t\t\t\t\tn44 = te[15],\n\t\t\t\t\t\tt11 = n23 * n34 * n42 - n24 * n33 * n42 + n24 * n32 * n43 - n22 * n34 * n43 - n23 * n32 * n44 + n22 * n33 * n44,\n\t\t\t\t\t\tt12 = n14 * n33 * n42 - n13 * n34 * n42 - n14 * n32 * n43 + n12 * n34 * n43 + n13 * n32 * n44 - n12 * n33 * n44,\n\t\t\t\t\t\tt13 = n13 * n24 * n42 - n14 * n23 * n42 + n14 * n22 * n43 - n12 * n24 * n43 - n13 * n22 * n44 + n12 * n23 * n44,\n\t\t\t\t\t\tt14 = n14 * n23 * n32 - n13 * n24 * n32 - n14 * n22 * n33 + n12 * n24 * n33 + n13 * n22 * n34 - n12 * n23 * n34;\n\t\t\tconst det = n11 * t11 + n21 * t12 + n31 * t13 + n41 * t14;\n\t\t\tif (det === 0) return this.set(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);\n\t\t\tconst detInv = 1 / det;\n\t\t\tte[0] = t11 * detInv;\n\t\t\tte[1] = (n24 * n33 * n41 - n23 * n34 * n41 - n24 * n31 * n43 + n21 * n34 * n43 + n23 * n31 * n44 - n21 * n33 * n44) * detInv;\n\t\t\tte[2] = (n22 * n34 * n41 - n24 * n32 * n41 + n24 * n31 * n42 - n21 * n34 * n42 - n22 * n31 * n44 + n21 * n32 * n44) * detInv;\n\t\t\tte[3] = (n23 * n32 * n41 - n22 * n33 * n41 - n23 * n31 * n42 + n21 * n33 * n42 + n22 * n31 * n43 - n21 * n32 * n43) * detInv;\n\t\t\tte[4] = t12 * detInv;\n\t\t\tte[5] = (n13 * n34 * n41 - n14 * n33 * n41 + n14 * n31 * n43 - n11 * n34 * n43 - n13 * n31 * n44 + n11 * n33 * n44) * detInv;\n\t\t\tte[6] = (n14 * n32 * n41 - n12 * n34 * n41 - n14 * n31 * n42 + n11 * n34 * n42 + n12 * n31 * n44 - n11 * n32 * n44) * detInv;\n\t\t\tte[7] = (n12 * n33 * n41 - n13 * n32 * n41 + n13 * n31 * n42 - n11 * n33 * n42 - n12 * n31 * n43 + n11 * n32 * n43) * detInv;\n\t\t\tte[8] = t13 * detInv;\n\t\t\tte[9] = (n14 * n23 * n41 - n13 * n24 * n41 - n14 * n21 * n43 + n11 * n24 * n43 + n13 * n21 * n44 - n11 * n23 * n44) * detInv;\n\t\t\tte[10] = (n12 * n24 * n41 - n14 * n22 * n41 + n14 * n21 * n42 - n11 * n24 * n42 - n12 * n21 * n44 + n11 * n22 * n44) * detInv;\n\t\t\tte[11] = (n13 * n22 * n41 - n12 * n23 * n41 - n13 * n21 * n42 + n11 * n23 * n42 + n12 * n21 * n43 - n11 * n22 * n43) * detInv;\n\t\t\tte[12] = t14 * detInv;\n\t\t\tte[13] = (n13 * n24 * n31 - n14 * n23 * n31 + n14 * n21 * n33 - n11 * n24 * n33 - n13 * n21 * n34 + n11 * n23 * n34) * detInv;\n\t\t\tte[14] = (n14 * n22 * n31 - n12 * n24 * n31 - n14 * n21 * n32 + n11 * n24 * n32 + n12 * n21 * n34 - n11 * n22 * n34) * detInv;\n\t\t\tte[15] = (n12 * n23 * n31 - n13 * n22 * n31 + n13 * n21 * n32 - n11 * n23 * n32 - n12 * n21 * n33 + n11 * n22 * n33) * detInv;\n\t\t\treturn this;\n\t\t}\n\n\t\tscale(v) {\n\t\t\tconst te = this.elements;\n\t\t\tconst x = v.x,\n\t\t\t\t\t\ty = v.y,\n\t\t\t\t\t\tz = v.z;\n\t\t\tte[0] *= x;\n\t\t\tte[4] *= y;\n\t\t\tte[8] *= z;\n\t\t\tte[1] *= x;\n\t\t\tte[5] *= y;\n\t\t\tte[9] *= z;\n\t\t\tte[2] *= x;\n\t\t\tte[6] *= y;\n\t\t\tte[10] *= z;\n\t\t\tte[3] *= x;\n\t\t\tte[7] *= y;\n\t\t\tte[11] *= z;\n\t\t\treturn this;\n\t\t}\n\n\t\tgetMaxScaleOnAxis() {\n\t\t\tconst te = this.elements;\n\t\t\tconst scaleXSq = te[0] * te[0] + te[1] * te[1] + te[2] * te[2];\n\t\t\tconst scaleYSq = te[4] * te[4] + te[5] * te[5] + te[6] * te[6];\n\t\t\tconst scaleZSq = te[8] * te[8] + te[9] * te[9] + te[10] * te[10];\n\t\t\treturn Math.sqrt(Math.max(scaleXSq, scaleYSq, scaleZSq));\n\t\t}\n\n\t\tmakeTranslation(x, y, z) {\n\t\t\tthis.set(1, 0, 0, x, 0, 1, 0, y, 0, 0, 1, z, 0, 0, 0, 1);\n\t\t\treturn this;\n\t\t}\n\n\t\tmakeRotationX(theta) {\n\t\t\tconst c = Math.cos(theta),\n\t\t\t\t\t\ts = Math.sin(theta);\n\t\t\tthis.set(1, 0, 0, 0, 0, c, -s, 0, 0, s, c, 0, 0, 0, 0, 1);\n\t\t\treturn this;\n\t\t}\n\n\t\tmakeRotationY(theta) {\n\t\t\tconst c = Math.cos(theta),\n\t\t\t\t\t\ts = Math.sin(theta);\n\t\t\tthis.set(c, 0, s, 0, 0, 1, 0, 0, -s, 0, c, 0, 0, 0, 0, 1);\n\t\t\treturn this;\n\t\t}\n\n\t\tmakeRotationZ(theta) {\n\t\t\tconst c = Math.cos(theta),\n\t\t\t\t\t\ts = Math.sin(theta);\n\t\t\tthis.set(c, -s, 0, 0, s, c, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1);\n\t\t\treturn this;\n\t\t}\n\n\t\tmakeRotationAxis(axis, angle) {\n\t\t\t// Based on http://www.gamedev.net/reference/articles/article1199.asp\n\t\t\tconst c = Math.cos(angle);\n\t\t\tconst s = Math.sin(angle);\n\t\t\tconst t = 1 - c;\n\t\t\tconst x = axis.x,\n\t\t\t\t\t\ty = axis.y,\n\t\t\t\t\t\tz = axis.z;\n\t\t\tconst tx = t * x,\n\t\t\t\t\t\tty = t * y;\n\t\t\tthis.set(tx * x + c, tx * y - s * z, tx * z + s * y, 0, tx * y + s * z, ty * y + c, ty * z - s * x, 0, tx * z - s * y, ty * z + s * x, t * z * z + c, 0, 0, 0, 0, 1);\n\t\t\treturn this;\n\t\t}\n\n\t\tmakeScale(x, y, z) {\n\t\t\tthis.set(x, 0, 0, 0, 0, y, 0, 0, 0, 0, z, 0, 0, 0, 0, 1);\n\t\t\treturn this;\n\t\t}\n\n\t\tmakeShear(xy, xz, yx, yz, zx, zy) {\n\t\t\tthis.set(1, yx, zx, 0, xy, 1, zy, 0, xz, yz, 1, 0, 0, 0, 0, 1);\n\t\t\treturn this;\n\t\t}\n\n\t\tcompose(position, quaternion, scale) {\n\t\t\tconst te = this.elements;\n\t\t\tconst x = quaternion._x,\n\t\t\t\t\t\ty = quaternion._y,\n\t\t\t\t\t\tz = quaternion._z,\n\t\t\t\t\t\tw = quaternion._w;\n\t\t\tconst x2 = x + x,\n\t\t\t\t\t\ty2 = y + y,\n\t\t\t\t\t\tz2 = z + z;\n\t\t\tconst xx = x * x2,\n\t\t\t\t\t\txy = x * y2,\n\t\t\t\t\t\txz = x * z2;\n\t\t\tconst yy = y * y2,\n\t\t\t\t\t\tyz = y * z2,\n\t\t\t\t\t\tzz = z * z2;\n\t\t\tconst wx = w * x2,\n\t\t\t\t\t\twy = w * y2,\n\t\t\t\t\t\twz = w * z2;\n\t\t\tconst sx = scale.x,\n\t\t\t\t\t\tsy = scale.y,\n\t\t\t\t\t\tsz = scale.z;\n\t\t\tte[0] = (1 - (yy + zz)) * sx;\n\t\t\tte[1] = (xy + wz) * sx;\n\t\t\tte[2] = (xz - wy) * sx;\n\t\t\tte[3] = 0;\n\t\t\tte[4] = (xy - wz) * sy;\n\t\t\tte[5] = (1 - (xx + zz)) * sy;\n\t\t\tte[6] = (yz + wx) * sy;\n\t\t\tte[7] = 0;\n\t\t\tte[8] = (xz + wy) * sz;\n\t\t\tte[9] = (yz - wx) * sz;\n\t\t\tte[10] = (1 - (xx + yy)) * sz;\n\t\t\tte[11] = 0;\n\t\t\tte[12] = position.x;\n\t\t\tte[13] = position.y;\n\t\t\tte[14] = position.z;\n\t\t\tte[15] = 1;\n\t\t\treturn this;\n\t\t}\n\n\t\tdecompose(position, quaternion, scale) {\n\t\t\tconst te = this.elements;\n\n\t\t\tlet sx = _v1$5.set(te[0], te[1], te[2]).length();\n\n\t\t\tconst sy = _v1$5.set(te[4], te[5], te[6]).length();\n\n\t\t\tconst sz = _v1$5.set(te[8], te[9], te[10]).length(); // if determine is negative, we need to invert one scale\n\n\n\t\t\tconst det = this.determinant();\n\t\t\tif (det < 0) sx = -sx;\n\t\t\tposition.x = te[12];\n\t\t\tposition.y = te[13];\n\t\t\tposition.z = te[14]; // scale the rotation part\n\n\t\t\t_m1$2.copy(this);\n\n\t\t\tconst invSX = 1 / sx;\n\t\t\tconst invSY = 1 / sy;\n\t\t\tconst invSZ = 1 / sz;\n\t\t\t_m1$2.elements[0] *= invSX;\n\t\t\t_m1$2.elements[1] *= invSX;\n\t\t\t_m1$2.elements[2] *= invSX;\n\t\t\t_m1$2.elements[4] *= invSY;\n\t\t\t_m1$2.elements[5] *= invSY;\n\t\t\t_m1$2.elements[6] *= invSY;\n\t\t\t_m1$2.elements[8] *= invSZ;\n\t\t\t_m1$2.elements[9] *= invSZ;\n\t\t\t_m1$2.elements[10] *= invSZ;\n\t\t\tquaternion.setFromRotationMatrix(_m1$2);\n\t\t\tscale.x = sx;\n\t\t\tscale.y = sy;\n\t\t\tscale.z = sz;\n\t\t\treturn this;\n\t\t}\n\n\t\tmakePerspective(left, right, top, bottom, near, far) {\n\t\t\tif (far === undefined) {\n\t\t\t\tconsole.warn('THREE.Matrix4: .makePerspective() has been redefined and has a new signature. Please check the docs.');\n\t\t\t}\n\n\t\t\tconst te = this.elements;\n\t\t\tconst x = 2 * near / (right - left);\n\t\t\tconst y = 2 * near / (top - bottom);\n\t\t\tconst a = (right + left) / (right - left);\n\t\t\tconst b = (top + bottom) / (top - bottom);\n\t\t\tconst c = -(far + near) / (far - near);\n\t\t\tconst d = -2 * far * near / (far - near);\n\t\t\tte[0] = x;\n\t\t\tte[4] = 0;\n\t\t\tte[8] = a;\n\t\t\tte[12] = 0;\n\t\t\tte[1] = 0;\n\t\t\tte[5] = y;\n\t\t\tte[9] = b;\n\t\t\tte[13] = 0;\n\t\t\tte[2] = 0;\n\t\t\tte[6] = 0;\n\t\t\tte[10] = c;\n\t\t\tte[14] = d;\n\t\t\tte[3] = 0;\n\t\t\tte[7] = 0;\n\t\t\tte[11] = -1;\n\t\t\tte[15] = 0;\n\t\t\treturn this;\n\t\t}\n\n\t\tmakeOrthographic(left, right, top, bottom, near, far) {\n\t\t\tconst te = this.elements;\n\t\t\tconst w = 1.0 / (right - left);\n\t\t\tconst h = 1.0 / (top - bottom);\n\t\t\tconst p = 1.0 / (far - near);\n\t\t\tconst x = (right + left) * w;\n\t\t\tconst y = (top + bottom) * h;\n\t\t\tconst z = (far + near) * p;\n\t\t\tte[0] = 2 * w;\n\t\t\tte[4] = 0;\n\t\t\tte[8] = 0;\n\t\t\tte[12] = -x;\n\t\t\tte[1] = 0;\n\t\t\tte[5] = 2 * h;\n\t\t\tte[9] = 0;\n\t\t\tte[13] = -y;\n\t\t\tte[2] = 0;\n\t\t\tte[6] = 0;\n\t\t\tte[10] = -2 * p;\n\t\t\tte[14] = -z;\n\t\t\tte[3] = 0;\n\t\t\tte[7] = 0;\n\t\t\tte[11] = 0;\n\t\t\tte[15] = 1;\n\t\t\treturn this;\n\t\t}\n\n\t\tequals(matrix) {\n\t\t\tconst te = this.elements;\n\t\t\tconst me = matrix.elements;\n\n\t\t\tfor (let i = 0; i < 16; i++) {\n\t\t\t\tif (te[i] !== me[i]) return false;\n\t\t\t}\n\n\t\t\treturn true;\n\t\t}\n\n\t\tfromArray(array, offset = 0) {\n\t\t\tfor (let i = 0; i < 16; i++) {\n\t\t\t\tthis.elements[i] = array[i + offset];\n\t\t\t}\n\n\t\t\treturn this;\n\t\t}\n\n\t\ttoArray(array = [], offset = 0) {\n\t\t\tconst te = this.elements;\n\t\t\tarray[offset] = te[0];\n\t\t\tarray[offset + 1] = te[1];\n\t\t\tarray[offset + 2] = te[2];\n\t\t\tarray[offset + 3] = te[3];\n\t\t\tarray[offset + 4] = te[4];\n\t\t\tarray[offset + 5] = te[5];\n\t\t\tarray[offset + 6] = te[6];\n\t\t\tarray[offset + 7] = te[7];\n\t\t\tarray[offset + 8] = te[8];\n\t\t\tarray[offset + 9] = te[9];\n\t\t\tarray[offset + 10] = te[10];\n\t\t\tarray[offset + 11] = te[11];\n\t\t\tarray[offset + 12] = te[12];\n\t\t\tarray[offset + 13] = te[13];\n\t\t\tarray[offset + 14] = te[14];\n\t\t\tarray[offset + 15] = te[15];\n\t\t\treturn array;\n\t\t}\n\n\t}\n\n\tMatrix4.prototype.isMatrix4 = true;\n\n\tconst _v1$5 = /*@__PURE__*/new Vector3();\n\n\tconst _m1$2 = /*@__PURE__*/new Matrix4();\n\n\tconst _zero = /*@__PURE__*/new Vector3(0, 0, 0);\n\n\tconst _one = /*@__PURE__*/new Vector3(1, 1, 1);\n\n\tconst _x = /*@__PURE__*/new Vector3();\n\n\tconst _y = /*@__PURE__*/new Vector3();\n\n\tconst _z = /*@__PURE__*/new Vector3();\n\n\tconst _matrix$1 = /*@__PURE__*/new Matrix4();\n\n\tconst _quaternion$3 = /*@__PURE__*/new Quaternion();\n\n\tclass Euler {\n\t\tconstructor(x = 0, y = 0, z = 0, order = Euler.DefaultOrder) {\n\t\t\tthis._x = x;\n\t\t\tthis._y = y;\n\t\t\tthis._z = z;\n\t\t\tthis._order = order;\n\t\t}\n\n\t\tget x() {\n\t\t\treturn this._x;\n\t\t}\n\n\t\tset x(value) {\n\t\t\tthis._x = value;\n\n\t\t\tthis._onChangeCallback();\n\t\t}\n\n\t\tget y() {\n\t\t\treturn this._y;\n\t\t}\n\n\t\tset y(value) {\n\t\t\tthis._y = value;\n\n\t\t\tthis._onChangeCallback();\n\t\t}\n\n\t\tget z() {\n\t\t\treturn this._z;\n\t\t}\n\n\t\tset z(value) {\n\t\t\tthis._z = value;\n\n\t\t\tthis._onChangeCallback();\n\t\t}\n\n\t\tget order() {\n\t\t\treturn this._order;\n\t\t}\n\n\t\tset order(value) {\n\t\t\tthis._order = value;\n\n\t\t\tthis._onChangeCallback();\n\t\t}\n\n\t\tset(x, y, z, order = this._order) {\n\t\t\tthis._x = x;\n\t\t\tthis._y = y;\n\t\t\tthis._z = z;\n\t\t\tthis._order = order;\n\n\t\t\tthis._onChangeCallback();\n\n\t\t\treturn this;\n\t\t}\n\n\t\tclone() {\n\t\t\treturn new this.constructor(this._x, this._y, this._z, this._order);\n\t\t}\n\n\t\tcopy(euler) {\n\t\t\tthis._x = euler._x;\n\t\t\tthis._y = euler._y;\n\t\t\tthis._z = euler._z;\n\t\t\tthis._order = euler._order;\n\n\t\t\tthis._onChangeCallback();\n\n\t\t\treturn this;\n\t\t}\n\n\t\tsetFromRotationMatrix(m, order = this._order, update = true) {\n\t\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\t\t\tconst te = m.elements;\n\t\t\tconst m11 = te[0],\n\t\t\t\t\t\tm12 = te[4],\n\t\t\t\t\t\tm13 = te[8];\n\t\t\tconst m21 = te[1],\n\t\t\t\t\t\tm22 = te[5],\n\t\t\t\t\t\tm23 = te[9];\n\t\t\tconst m31 = te[2],\n\t\t\t\t\t\tm32 = te[6],\n\t\t\t\t\t\tm33 = te[10];\n\n\t\t\tswitch (order) {\n\t\t\t\tcase 'XYZ':\n\t\t\t\t\tthis._y = Math.asin(clamp(m13, -1, 1));\n\n\t\t\t\t\tif (Math.abs(m13) < 0.9999999) {\n\t\t\t\t\t\tthis._x = Math.atan2(-m23, m33);\n\t\t\t\t\t\tthis._z = Math.atan2(-m12, m11);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis._x = Math.atan2(m32, m22);\n\t\t\t\t\t\tthis._z = 0;\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'YXZ':\n\t\t\t\t\tthis._x = Math.asin(-clamp(m23, -1, 1));\n\n\t\t\t\t\tif (Math.abs(m23) < 0.9999999) {\n\t\t\t\t\t\tthis._y = Math.atan2(m13, m33);\n\t\t\t\t\t\tthis._z = Math.atan2(m21, m22);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis._y = Math.atan2(-m31, m11);\n\t\t\t\t\t\tthis._z = 0;\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'ZXY':\n\t\t\t\t\tthis._x = Math.asin(clamp(m32, -1, 1));\n\n\t\t\t\t\tif (Math.abs(m32) < 0.9999999) {\n\t\t\t\t\t\tthis._y = Math.atan2(-m31, m33);\n\t\t\t\t\t\tthis._z = Math.atan2(-m12, m22);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis._y = 0;\n\t\t\t\t\t\tthis._z = Math.atan2(m21, m11);\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'ZYX':\n\t\t\t\t\tthis._y = Math.asin(-clamp(m31, -1, 1));\n\n\t\t\t\t\tif (Math.abs(m31) < 0.9999999) {\n\t\t\t\t\t\tthis._x = Math.atan2(m32, m33);\n\t\t\t\t\t\tthis._z = Math.atan2(m21, m11);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis._x = 0;\n\t\t\t\t\t\tthis._z = Math.atan2(-m12, m22);\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'YZX':\n\t\t\t\t\tthis._z = Math.asin(clamp(m21, -1, 1));\n\n\t\t\t\t\tif (Math.abs(m21) < 0.9999999) {\n\t\t\t\t\t\tthis._x = Math.atan2(-m23, m22);\n\t\t\t\t\t\tthis._y = Math.atan2(-m31, m11);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis._x = 0;\n\t\t\t\t\t\tthis._y = Math.atan2(m13, m33);\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'XZY':\n\t\t\t\t\tthis._z = Math.asin(-clamp(m12, -1, 1));\n\n\t\t\t\t\tif (Math.abs(m12) < 0.9999999) {\n\t\t\t\t\t\tthis._x = Math.atan2(m32, m22);\n\t\t\t\t\t\tthis._y = Math.atan2(m13, m11);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis._x = Math.atan2(-m23, m33);\n\t\t\t\t\t\tthis._y = 0;\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\t\t\t\t\tconsole.warn('THREE.Euler: .setFromRotationMatrix() encountered an unknown order: ' + order);\n\t\t\t}\n\n\t\t\tthis._order = order;\n\t\t\tif (update === true) this._onChangeCallback();\n\t\t\treturn this;\n\t\t}\n\n\t\tsetFromQuaternion(q, order, update) {\n\t\t\t_matrix$1.makeRotationFromQuaternion(q);\n\n\t\t\treturn this.setFromRotationMatrix(_matrix$1, order, update);\n\t\t}\n\n\t\tsetFromVector3(v, order = this._order) {\n\t\t\treturn this.set(v.x, v.y, v.z, order);\n\t\t}\n\n\t\treorder(newOrder) {\n\t\t\t// WARNING: this discards revolution information -bhouston\n\t\t\t_quaternion$3.setFromEuler(this);\n\n\t\t\treturn this.setFromQuaternion(_quaternion$3, newOrder);\n\t\t}\n\n\t\tequals(euler) {\n\t\t\treturn euler._x === this._x && euler._y === this._y && euler._z === this._z && euler._order === this._order;\n\t\t}\n\n\t\tfromArray(array) {\n\t\t\tthis._x = array[0];\n\t\t\tthis._y = array[1];\n\t\t\tthis._z = array[2];\n\t\t\tif (array[3] !== undefined) this._order = array[3];\n\n\t\t\tthis._onChangeCallback();\n\n\t\t\treturn this;\n\t\t}\n\n\t\ttoArray(array = [], offset = 0) {\n\t\t\tarray[offset] = this._x;\n\t\t\tarray[offset + 1] = this._y;\n\t\t\tarray[offset + 2] = this._z;\n\t\t\tarray[offset + 3] = this._order;\n\t\t\treturn array;\n\t\t}\n\n\t\ttoVector3(optionalResult) {\n\t\t\tif (optionalResult) {\n\t\t\t\treturn optionalResult.set(this._x, this._y, this._z);\n\t\t\t} else {\n\t\t\t\treturn new Vector3(this._x, this._y, this._z);\n\t\t\t}\n\t\t}\n\n\t\t_onChange(callback) {\n\t\t\tthis._onChangeCallback = callback;\n\t\t\treturn this;\n\t\t}\n\n\t\t_onChangeCallback() {}\n\n\t}\n\n\tEuler.prototype.isEuler = true;\n\tEuler.DefaultOrder = 'XYZ';\n\tEuler.RotationOrders = ['XYZ', 'YZX', 'ZXY', 'XZY', 'YXZ', 'ZYX'];\n\n\tclass Layers {\n\t\tconstructor() {\n\t\t\tthis.mask = 1 | 0;\n\t\t}\n\n\t\tset(channel) {\n\t\t\tthis.mask = 1 << channel | 0;\n\t\t}\n\n\t\tenable(channel) {\n\t\t\tthis.mask |= 1 << channel | 0;\n\t\t}\n\n\t\tenableAll() {\n\t\t\tthis.mask = 0xffffffff | 0;\n\t\t}\n\n\t\ttoggle(channel) {\n\t\t\tthis.mask ^= 1 << channel | 0;\n\t\t}\n\n\t\tdisable(channel) {\n\t\t\tthis.mask &= ~(1 << channel | 0);\n\t\t}\n\n\t\tdisableAll() {\n\t\t\tthis.mask = 0;\n\t\t}\n\n\t\ttest(layers) {\n\t\t\treturn (this.mask & layers.mask) !== 0;\n\t\t}\n\n\t}\n\n\tlet _object3DId = 0;\n\n\tconst _v1$4 = /*@__PURE__*/new Vector3();\n\n\tconst _q1 = /*@__PURE__*/new Quaternion();\n\n\tconst _m1$1 = /*@__PURE__*/new Matrix4();\n\n\tconst _target = /*@__PURE__*/new Vector3();\n\n\tconst _position$3 = /*@__PURE__*/new Vector3();\n\n\tconst _scale$2 = /*@__PURE__*/new Vector3();\n\n\tconst _quaternion$2 = /*@__PURE__*/new Quaternion();\n\n\tconst _xAxis = /*@__PURE__*/new Vector3(1, 0, 0);\n\n\tconst _yAxis = /*@__PURE__*/new Vector3(0, 1, 0);\n\n\tconst _zAxis = /*@__PURE__*/new Vector3(0, 0, 1);\n\n\tconst _addedEvent = {\n\t\ttype: 'added'\n\t};\n\tconst _removedEvent = {\n\t\ttype: 'removed'\n\t};\n\n\tclass Object3D extends EventDispatcher {\n\t\tconstructor() {\n\t\t\tsuper();\n\t\t\tObject.defineProperty(this, 'id', {\n\t\t\t\tvalue: _object3DId++\n\t\t\t});\n\t\t\tthis.uuid = generateUUID();\n\t\t\tthis.name = '';\n\t\t\tthis.type = 'Object3D';\n\t\t\tthis.parent = null;\n\t\t\tthis.children = [];\n\t\t\tthis.up = Object3D.DefaultUp.clone();\n\t\t\tconst position = new Vector3();\n\t\t\tconst rotation = new Euler();\n\t\t\tconst quaternion = new Quaternion();\n\t\t\tconst scale = new Vector3(1, 1, 1);\n\n\t\t\tfunction onRotationChange() {\n\t\t\t\tquaternion.setFromEuler(rotation, false);\n\t\t\t}\n\n\t\t\tfunction onQuaternionChange() {\n\t\t\t\trotation.setFromQuaternion(quaternion, undefined, false);\n\t\t\t}\n\n\t\t\trotation._onChange(onRotationChange);\n\n\t\t\tquaternion._onChange(onQuaternionChange);\n\n\t\t\tObject.defineProperties(this, {\n\t\t\t\tposition: {\n\t\t\t\t\tconfigurable: true,\n\t\t\t\t\tenumerable: true,\n\t\t\t\t\tvalue: position\n\t\t\t\t},\n\t\t\t\trotation: {\n\t\t\t\t\tconfigurable: true,\n\t\t\t\t\tenumerable: true,\n\t\t\t\t\tvalue: rotation\n\t\t\t\t},\n\t\t\t\tquaternion: {\n\t\t\t\t\tconfigurable: true,\n\t\t\t\t\tenumerable: true,\n\t\t\t\t\tvalue: quaternion\n\t\t\t\t},\n\t\t\t\tscale: {\n\t\t\t\t\tconfigurable: true,\n\t\t\t\t\tenumerable: true,\n\t\t\t\t\tvalue: scale\n\t\t\t\t},\n\t\t\t\tmodelViewMatrix: {\n\t\t\t\t\tvalue: new Matrix4()\n\t\t\t\t},\n\t\t\t\tnormalMatrix: {\n\t\t\t\t\tvalue: new Matrix3()\n\t\t\t\t}\n\t\t\t});\n\t\t\tthis.matrix = new Matrix4();\n\t\t\tthis.matrixWorld = new Matrix4();\n\t\t\tthis.matrixAutoUpdate = Object3D.DefaultMatrixAutoUpdate;\n\t\t\tthis.matrixWorldNeedsUpdate = false;\n\t\t\tthis.layers = new Layers();\n\t\t\tthis.visible = true;\n\t\t\tthis.castShadow = false;\n\t\t\tthis.receiveShadow = false;\n\t\t\tthis.frustumCulled = true;\n\t\t\tthis.renderOrder = 0;\n\t\t\tthis.animations = [];\n\t\t\tthis.userData = {};\n\t\t}\n\n\t\tonBeforeRender() {}\n\n\t\tonAfterRender() {}\n\n\t\tapplyMatrix4(matrix) {\n\t\t\tif (this.matrixAutoUpdate) this.updateMatrix();\n\t\t\tthis.matrix.premultiply(matrix);\n\t\t\tthis.matrix.decompose(this.position, this.quaternion, this.scale);\n\t\t}\n\n\t\tapplyQuaternion(q) {\n\t\t\tthis.quaternion.premultiply(q);\n\t\t\treturn this;\n\t\t}\n\n\t\tsetRotationFromAxisAngle(axis, angle) {\n\t\t\t// assumes axis is normalized\n\t\t\tthis.quaternion.setFromAxisAngle(axis, angle);\n\t\t}\n\n\t\tsetRotationFromEuler(euler) {\n\t\t\tthis.quaternion.setFromEuler(euler, true);\n\t\t}\n\n\t\tsetRotationFromMatrix(m) {\n\t\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\t\t\tthis.quaternion.setFromRotationMatrix(m);\n\t\t}\n\n\t\tsetRotationFromQuaternion(q) {\n\t\t\t// assumes q is normalized\n\t\t\tthis.quaternion.copy(q);\n\t\t}\n\n\t\trotateOnAxis(axis, angle) {\n\t\t\t// rotate object on axis in object space\n\t\t\t// axis is assumed to be normalized\n\t\t\t_q1.setFromAxisAngle(axis, angle);\n\n\t\t\tthis.quaternion.multiply(_q1);\n\t\t\treturn this;\n\t\t}\n\n\t\trotateOnWorldAxis(axis, angle) {\n\t\t\t// rotate object on axis in world space\n\t\t\t// axis is assumed to be normalized\n\t\t\t// method assumes no rotated parent\n\t\t\t_q1.setFromAxisAngle(axis, angle);\n\n\t\t\tthis.quaternion.premultiply(_q1);\n\t\t\treturn this;\n\t\t}\n\n\t\trotateX(angle) {\n\t\t\treturn this.rotateOnAxis(_xAxis, angle);\n\t\t}\n\n\t\trotateY(angle) {\n\t\t\treturn this.rotateOnAxis(_yAxis, angle);\n\t\t}\n\n\t\trotateZ(angle) {\n\t\t\treturn this.rotateOnAxis(_zAxis, angle);\n\t\t}\n\n\t\ttranslateOnAxis(axis, distance) {\n\t\t\t// translate object by distance along axis in object space\n\t\t\t// axis is assumed to be normalized\n\t\t\t_v1$4.copy(axis).applyQuaternion(this.quaternion);\n\n\t\t\tthis.position.add(_v1$4.multiplyScalar(distance));\n\t\t\treturn this;\n\t\t}\n\n\t\ttranslateX(distance) {\n\t\t\treturn this.translateOnAxis(_xAxis, distance);\n\t\t}\n\n\t\ttranslateY(distance) {\n\t\t\treturn this.translateOnAxis(_yAxis, distance);\n\t\t}\n\n\t\ttranslateZ(distance) {\n\t\t\treturn this.translateOnAxis(_zAxis, distance);\n\t\t}\n\n\t\tlocalToWorld(vector) {\n\t\t\treturn vector.applyMatrix4(this.matrixWorld);\n\t\t}\n\n\t\tworldToLocal(vector) {\n\t\t\treturn vector.applyMatrix4(_m1$1.copy(this.matrixWorld).invert());\n\t\t}\n\n\t\tlookAt(x, y, z) {\n\t\t\t// This method does not support objects having non-uniformly-scaled parent(s)\n\t\t\tif (x.isVector3) {\n\t\t\t\t_target.copy(x);\n\t\t\t} else {\n\t\t\t\t_target.set(x, y, z);\n\t\t\t}\n\n\t\t\tconst parent = this.parent;\n\t\t\tthis.updateWorldMatrix(true, false);\n\n\t\t\t_position$3.setFromMatrixPosition(this.matrixWorld);\n\n\t\t\tif (this.isCamera || this.isLight) {\n\t\t\t\t_m1$1.lookAt(_position$3, _target, this.up);\n\t\t\t} else {\n\t\t\t\t_m1$1.lookAt(_target, _position$3, this.up);\n\t\t\t}\n\n\t\t\tthis.quaternion.setFromRotationMatrix(_m1$1);\n\n\t\t\tif (parent) {\n\t\t\t\t_m1$1.extractRotation(parent.matrixWorld);\n\n\t\t\t\t_q1.setFromRotationMatrix(_m1$1);\n\n\t\t\t\tthis.quaternion.premultiply(_q1.invert());\n\t\t\t}\n\t\t}\n\n\t\tadd(object) {\n\t\t\tif (arguments.length > 1) {\n\t\t\t\tfor (let i = 0; i < arguments.length; i++) {\n\t\t\t\t\tthis.add(arguments[i]);\n\t\t\t\t}\n\n\t\t\t\treturn this;\n\t\t\t}\n\n\t\t\tif (object === this) {\n\t\t\t\tconsole.error('THREE.Object3D.add: object can\\'t be added as a child of itself.', object);\n\t\t\t\treturn this;\n\t\t\t}\n\n\t\t\tif (object && object.isObject3D) {\n\t\t\t\tif (object.parent !== null) {\n\t\t\t\t\tobject.parent.remove(object);\n\t\t\t\t}\n\n\t\t\t\tobject.parent = this;\n\t\t\t\tthis.children.push(object);\n\t\t\t\tobject.dispatchEvent(_addedEvent);\n\t\t\t} else {\n\t\t\t\tconsole.error('THREE.Object3D.add: object not an instance of THREE.Object3D.', object);\n\t\t\t}\n\n\t\t\treturn this;\n\t\t}\n\n\t\tremove(object) {\n\t\t\tif (arguments.length > 1) {\n\t\t\t\tfor (let i = 0; i < arguments.length; i++) {\n\t\t\t\t\tthis.remove(arguments[i]);\n\t\t\t\t}\n\n\t\t\t\treturn this;\n\t\t\t}\n\n\t\t\tconst index = this.children.indexOf(object);\n\n\t\t\tif (index !== -1) {\n\t\t\t\tobject.parent = null;\n\t\t\t\tthis.children.splice(index, 1);\n\t\t\t\tobject.dispatchEvent(_removedEvent);\n\t\t\t}\n\n\t\t\treturn this;\n\t\t}\n\n\t\tremoveFromParent() {\n\t\t\tconst parent = this.parent;\n\n\t\t\tif (parent !== null) {\n\t\t\t\tparent.remove(this);\n\t\t\t}\n\n\t\t\treturn this;\n\t\t}\n\n\t\tclear() {\n\t\t\tfor (let i = 0; i < this.children.length; i++) {\n\t\t\t\tconst object = this.children[i];\n\t\t\t\tobject.parent = null;\n\t\t\t\tobject.dispatchEvent(_removedEvent);\n\t\t\t}\n\n\t\t\tthis.children.length = 0;\n\t\t\treturn this;\n\t\t}\n\n\t\tattach(object) {\n\t\t\t// adds object as a child of this, while maintaining the object's world transform\n\t\t\tthis.updateWorldMatrix(true, false);\n\n\t\t\t_m1$1.copy(this.matrixWorld).invert();\n\n\t\t\tif (object.parent !== null) {\n\t\t\t\tobject.parent.updateWorldMatrix(true, false);\n\n\t\t\t\t_m1$1.multiply(object.parent.matrixWorld);\n\t\t\t}\n\n\t\t\tobject.applyMatrix4(_m1$1);\n\t\t\tthis.add(object);\n\t\t\tobject.updateWorldMatrix(false, true);\n\t\t\treturn this;\n\t\t}\n\n\t\tgetObjectById(id) {\n\t\t\treturn this.getObjectByProperty('id', id);\n\t\t}\n\n\t\tgetObjectByName(name) {\n\t\t\treturn this.getObjectByProperty('name', name);\n\t\t}\n\n\t\tgetObjectByProperty(name, value) {\n\t\t\tif (this[name] === value) return this;\n\n\t\t\tfor (let i = 0, l = this.children.length; i < l; i++) {\n\t\t\t\tconst child = this.children[i];\n\t\t\t\tconst object = child.getObjectByProperty(name, value);\n\n\t\t\t\tif (object !== undefined) {\n\t\t\t\t\treturn object;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn undefined;\n\t\t}\n\n\t\tgetWorldPosition(target) {\n\t\t\tthis.updateWorldMatrix(true, false);\n\t\t\treturn target.setFromMatrixPosition(this.matrixWorld);\n\t\t}\n\n\t\tgetWorldQuaternion(target) {\n\t\t\tthis.updateWorldMatrix(true, false);\n\t\t\tthis.matrixWorld.decompose(_position$3, target, _scale$2);\n\t\t\treturn target;\n\t\t}\n\n\t\tgetWorldScale(target) {\n\t\t\tthis.updateWorldMatrix(true, false);\n\t\t\tthis.matrixWorld.decompose(_position$3, _quaternion$2, target);\n\t\t\treturn target;\n\t\t}\n\n\t\tgetWorldDirection(target) {\n\t\t\tthis.updateWorldMatrix(true, false);\n\t\t\tconst e = this.matrixWorld.elements;\n\t\t\treturn target.set(e[8], e[9], e[10]).normalize();\n\t\t}\n\n\t\traycast() {}\n\n\t\ttraverse(callback) {\n\t\t\tcallback(this);\n\t\t\tconst children = this.children;\n\n\t\t\tfor (let i = 0, l = children.length; i < l; i++) {\n\t\t\t\tchildren[i].traverse(callback);\n\t\t\t}\n\t\t}\n\n\t\ttraverseVisible(callback) {\n\t\t\tif (this.visible === false) return;\n\t\t\tcallback(this);\n\t\t\tconst children = this.children;\n\n\t\t\tfor (let i = 0, l = children.length; i < l; i++) {\n\t\t\t\tchildren[i].traverseVisible(callback);\n\t\t\t}\n\t\t}\n\n\t\ttraverseAncestors(callback) {\n\t\t\tconst parent = this.parent;\n\n\t\t\tif (parent !== null) {\n\t\t\t\tcallback(parent);\n\t\t\t\tparent.traverseAncestors(callback);\n\t\t\t}\n\t\t}\n\n\t\tupdateMatrix() {\n\t\t\tthis.matrix.compose(this.position, this.quaternion, this.scale);\n\t\t\tthis.matrixWorldNeedsUpdate = true;\n\t\t}\n\n\t\tupdateMatrixWorld(force) {\n\t\t\tif (this.matrixAutoUpdate) this.updateMatrix();\n\n\t\t\tif (this.matrixWorldNeedsUpdate || force) {\n\t\t\t\tif (this.parent === null) {\n\t\t\t\t\tthis.matrixWorld.copy(this.matrix);\n\t\t\t\t} else {\n\t\t\t\t\tthis.matrixWorld.multiplyMatrices(this.parent.matrixWorld, this.matrix);\n\t\t\t\t}\n\n\t\t\t\tthis.matrixWorldNeedsUpdate = false;\n\t\t\t\tforce = true;\n\t\t\t} // update children\n\n\n\t\t\tconst children = this.children;\n\n\t\t\tfor (let i = 0, l = children.length; i < l; i++) {\n\t\t\t\tchildren[i].updateMatrixWorld(force);\n\t\t\t}\n\t\t}\n\n\t\tupdateWorldMatrix(updateParents, updateChildren) {\n\t\t\tconst parent = this.parent;\n\n\t\t\tif (updateParents === true && parent !== null) {\n\t\t\t\tparent.updateWorldMatrix(true, false);\n\t\t\t}\n\n\t\t\tif (this.matrixAutoUpdate) this.updateMatrix();\n\n\t\t\tif (this.parent === null) {\n\t\t\t\tthis.matrixWorld.copy(this.matrix);\n\t\t\t} else {\n\t\t\t\tthis.matrixWorld.multiplyMatrices(this.parent.matrixWorld, this.matrix);\n\t\t\t} // update children\n\n\n\t\t\tif (updateChildren === true) {\n\t\t\t\tconst children = this.children;\n\n\t\t\t\tfor (let i = 0, l = children.length; i < l; i++) {\n\t\t\t\t\tchildren[i].updateWorldMatrix(false, true);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\ttoJSON(meta) {\n\t\t\t// meta is a string when called from JSON.stringify\n\t\t\tconst isRootObject = meta === undefined || typeof meta === 'string';\n\t\t\tconst output = {}; // meta is a hash used to collect geometries, materials.\n\t\t\t// not providing it implies that this is the root object\n\t\t\t// being serialized.\n\n\t\t\tif (isRootObject) {\n\t\t\t\t// initialize meta obj\n\t\t\t\tmeta = {\n\t\t\t\t\tgeometries: {},\n\t\t\t\t\tmaterials: {},\n\t\t\t\t\ttextures: {},\n\t\t\t\t\timages: {},\n\t\t\t\t\tshapes: {},\n\t\t\t\t\tskeletons: {},\n\t\t\t\t\tanimations: {}\n\t\t\t\t};\n\t\t\t\toutput.metadata = {\n\t\t\t\t\tversion: 4.5,\n\t\t\t\t\ttype: 'Object',\n\t\t\t\t\tgenerator: 'Object3D.toJSON'\n\t\t\t\t};\n\t\t\t} // standard Object3D serialization\n\n\n\t\t\tconst object = {};\n\t\t\tobject.uuid = this.uuid;\n\t\t\tobject.type = this.type;\n\t\t\tif (this.name !== '') object.name = this.name;\n\t\t\tif (this.castShadow === true) object.castShadow = true;\n\t\t\tif (this.receiveShadow === true) object.receiveShadow = true;\n\t\t\tif (this.visible === false) object.visible = false;\n\t\t\tif (this.frustumCulled === false) object.frustumCulled = false;\n\t\t\tif (this.renderOrder !== 0) object.renderOrder = this.renderOrder;\n\t\t\tif (JSON.stringify(this.userData) !== '{}') object.userData = this.userData;\n\t\t\tobject.layers = this.layers.mask;\n\t\t\tobject.matrix = this.matrix.toArray();\n\t\t\tif (this.matrixAutoUpdate === false) object.matrixAutoUpdate = false; // object specific properties\n\n\t\t\tif (this.isInstancedMesh) {\n\t\t\t\tobject.type = 'InstancedMesh';\n\t\t\t\tobject.count = this.count;\n\t\t\t\tobject.instanceMatrix = this.instanceMatrix.toJSON();\n\t\t\t\tif (this.instanceColor !== null) object.instanceColor = this.instanceColor.toJSON();\n\t\t\t} //\n\n\n\t\t\tfunction serialize(library, element) {\n\t\t\t\tif (library[element.uuid] === undefined) {\n\t\t\t\t\tlibrary[element.uuid] = element.toJSON(meta);\n\t\t\t\t}\n\n\t\t\t\treturn element.uuid;\n\t\t\t}\n\n\t\t\tif (this.isScene) {\n\t\t\t\tif (this.background) {\n\t\t\t\t\tif (this.background.isColor) {\n\t\t\t\t\t\tobject.background = this.background.toJSON();\n\t\t\t\t\t} else if (this.background.isTexture) {\n\t\t\t\t\t\tobject.background = this.background.toJSON(meta).uuid;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (this.environment && this.environment.isTexture) {\n\t\t\t\t\tobject.environment = this.environment.toJSON(meta).uuid;\n\t\t\t\t}\n\t\t\t} else if (this.isMesh || this.isLine || this.isPoints) {\n\t\t\t\tobject.geometry = serialize(meta.geometries, this.geometry);\n\t\t\t\tconst parameters = this.geometry.parameters;\n\n\t\t\t\tif (parameters !== undefined && parameters.shapes !== undefined) {\n\t\t\t\t\tconst shapes = parameters.shapes;\n\n\t\t\t\t\tif (Array.isArray(shapes)) {\n\t\t\t\t\t\tfor (let i = 0, l = shapes.length; i < l; i++) {\n\t\t\t\t\t\t\tconst shape = shapes[i];\n\t\t\t\t\t\t\tserialize(meta.shapes, shape);\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tserialize(meta.shapes, shapes);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (this.isSkinnedMesh) {\n\t\t\t\tobject.bindMode = this.bindMode;\n\t\t\t\tobject.bindMatrix = this.bindMatrix.toArray();\n\n\t\t\t\tif (this.skeleton !== undefined) {\n\t\t\t\t\tserialize(meta.skeletons, this.skeleton);\n\t\t\t\t\tobject.skeleton = this.skeleton.uuid;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (this.material !== undefined) {\n\t\t\t\tif (Array.isArray(this.material)) {\n\t\t\t\t\tconst uuids = [];\n\n\t\t\t\t\tfor (let i = 0, l = this.material.length; i < l; i++) {\n\t\t\t\t\t\tuuids.push(serialize(meta.materials, this.material[i]));\n\t\t\t\t\t}\n\n\t\t\t\t\tobject.material = uuids;\n\t\t\t\t} else {\n\t\t\t\t\tobject.material = serialize(meta.materials, this.material);\n\t\t\t\t}\n\t\t\t} //\n\n\n\t\t\tif (this.children.length > 0) {\n\t\t\t\tobject.children = [];\n\n\t\t\t\tfor (let i = 0; i < this.children.length; i++) {\n\t\t\t\t\tobject.children.push(this.children[i].toJSON(meta).object);\n\t\t\t\t}\n\t\t\t} //\n\n\n\t\t\tif (this.animations.length > 0) {\n\t\t\t\tobject.animations = [];\n\n\t\t\t\tfor (let i = 0; i < this.animations.length; i++) {\n\t\t\t\t\tconst animation = this.animations[i];\n\t\t\t\t\tobject.animations.push(serialize(meta.animations, animation));\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (isRootObject) {\n\t\t\t\tconst geometries = extractFromCache(meta.geometries);\n\t\t\t\tconst materials = extractFromCache(meta.materials);\n\t\t\t\tconst textures = extractFromCache(meta.textures);\n\t\t\t\tconst images = extractFromCache(meta.images);\n\t\t\t\tconst shapes = extractFromCache(meta.shapes);\n\t\t\t\tconst skeletons = extractFromCache(meta.skeletons);\n\t\t\t\tconst animations = extractFromCache(meta.animations);\n\t\t\t\tif (geometries.length > 0) output.geometries = geometries;\n\t\t\t\tif (materials.length > 0) output.materials = materials;\n\t\t\t\tif (textures.length > 0) output.textures = textures;\n\t\t\t\tif (images.length > 0) output.images = images;\n\t\t\t\tif (shapes.length > 0) output.shapes = shapes;\n\t\t\t\tif (skeletons.length > 0) output.skeletons = skeletons;\n\t\t\t\tif (animations.length > 0) output.animations = animations;\n\t\t\t}\n\n\t\t\toutput.object = object;\n\t\t\treturn output; // extract data from the cache hash\n\t\t\t// remove metadata on each item\n\t\t\t// and return as array\n\n\t\t\tfunction extractFromCache(cache) {\n\t\t\t\tconst values = [];\n\n\t\t\t\tfor (const key in cache) {\n\t\t\t\t\tconst data = cache[key];\n\t\t\t\t\tdelete data.metadata;\n\t\t\t\t\tvalues.push(data);\n\t\t\t\t}\n\n\t\t\t\treturn values;\n\t\t\t}\n\t\t}\n\n\t\tclone(recursive) {\n\t\t\treturn new this.constructor().copy(this, recursive);\n\t\t}\n\n\t\tcopy(source, recursive = true) {\n\t\t\tthis.name = source.name;\n\t\t\tthis.up.copy(source.up);\n\t\t\tthis.position.copy(source.position);\n\t\t\tthis.rotation.order = source.rotation.order;\n\t\t\tthis.quaternion.copy(source.quaternion);\n\t\t\tthis.scale.copy(source.scale);\n\t\t\tthis.matrix.copy(source.matrix);\n\t\t\tthis.matrixWorld.copy(source.matrixWorld);\n\t\t\tthis.matrixAutoUpdate = source.matrixAutoUpdate;\n\t\t\tthis.matrixWorldNeedsUpdate = source.matrixWorldNeedsUpdate;\n\t\t\tthis.layers.mask = source.layers.mask;\n\t\t\tthis.visible = source.visible;\n\t\t\tthis.castShadow = source.castShadow;\n\t\t\tthis.receiveShadow = source.receiveShadow;\n\t\t\tthis.frustumCulled = source.frustumCulled;\n\t\t\tthis.renderOrder = source.renderOrder;\n\t\t\tthis.userData = JSON.parse(JSON.stringify(source.userData));\n\n\t\t\tif (recursive === true) {\n\t\t\t\tfor (let i = 0; i < source.children.length; i++) {\n\t\t\t\t\tconst child = source.children[i];\n\t\t\t\t\tthis.add(child.clone());\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn this;\n\t\t}\n\n\t}\n\n\tObject3D.DefaultUp = new Vector3(0, 1, 0);\n\tObject3D.DefaultMatrixAutoUpdate = true;\n\tObject3D.prototype.isObject3D = true;\n\n\tconst _v0$1 = /*@__PURE__*/new Vector3();\n\n\tconst _v1$3 = /*@__PURE__*/new Vector3();\n\n\tconst _v2$2 = /*@__PURE__*/new Vector3();\n\n\tconst _v3$1 = /*@__PURE__*/new Vector3();\n\n\tconst _vab = /*@__PURE__*/new Vector3();\n\n\tconst _vac = /*@__PURE__*/new Vector3();\n\n\tconst _vbc = /*@__PURE__*/new Vector3();\n\n\tconst _vap = /*@__PURE__*/new Vector3();\n\n\tconst _vbp = /*@__PURE__*/new Vector3();\n\n\tconst _vcp = /*@__PURE__*/new Vector3();\n\n\tclass Triangle {\n\t\tconstructor(a = new Vector3(), b = new Vector3(), c = new Vector3()) {\n\t\t\tthis.a = a;\n\t\t\tthis.b = b;\n\t\t\tthis.c = c;\n\t\t}\n\n\t\tstatic getNormal(a, b, c, target) {\n\t\t\ttarget.subVectors(c, b);\n\n\t\t\t_v0$1.subVectors(a, b);\n\n\t\t\ttarget.cross(_v0$1);\n\t\t\tconst targetLengthSq = target.lengthSq();\n\n\t\t\tif (targetLengthSq > 0) {\n\t\t\t\treturn target.multiplyScalar(1 / Math.sqrt(targetLengthSq));\n\t\t\t}\n\n\t\t\treturn target.set(0, 0, 0);\n\t\t} // static/instance method to calculate barycentric coordinates\n\t\t// based on: http://www.blackpawn.com/texts/pointinpoly/default.html\n\n\n\t\tstatic getBarycoord(point, a, b, c, target) {\n\t\t\t_v0$1.subVectors(c, a);\n\n\t\t\t_v1$3.subVectors(b, a);\n\n\t\t\t_v2$2.subVectors(point, a);\n\n\t\t\tconst dot00 = _v0$1.dot(_v0$1);\n\n\t\t\tconst dot01 = _v0$1.dot(_v1$3);\n\n\t\t\tconst dot02 = _v0$1.dot(_v2$2);\n\n\t\t\tconst dot11 = _v1$3.dot(_v1$3);\n\n\t\t\tconst dot12 = _v1$3.dot(_v2$2);\n\n\t\t\tconst denom = dot00 * dot11 - dot01 * dot01; // collinear or singular triangle\n\n\t\t\tif (denom === 0) {\n\t\t\t\t// arbitrary location outside of triangle?\n\t\t\t\t// not sure if this is the best idea, maybe should be returning undefined\n\t\t\t\treturn target.set(-2, -1, -1);\n\t\t\t}\n\n\t\t\tconst invDenom = 1 / denom;\n\t\t\tconst u = (dot11 * dot02 - dot01 * dot12) * invDenom;\n\t\t\tconst v = (dot00 * dot12 - dot01 * dot02) * invDenom; // barycentric coordinates must always sum to 1\n\n\t\t\treturn target.set(1 - u - v, v, u);\n\t\t}\n\n\t\tstatic containsPoint(point, a, b, c) {\n\t\t\tthis.getBarycoord(point, a, b, c, _v3$1);\n\t\t\treturn _v3$1.x >= 0 && _v3$1.y >= 0 && _v3$1.x + _v3$1.y <= 1;\n\t\t}\n\n\t\tstatic getUV(point, p1, p2, p3, uv1, uv2, uv3, target) {\n\t\t\tthis.getBarycoord(point, p1, p2, p3, _v3$1);\n\t\t\ttarget.set(0, 0);\n\t\t\ttarget.addScaledVector(uv1, _v3$1.x);\n\t\t\ttarget.addScaledVector(uv2, _v3$1.y);\n\t\t\ttarget.addScaledVector(uv3, _v3$1.z);\n\t\t\treturn target;\n\t\t}\n\n\t\tstatic isFrontFacing(a, b, c, direction) {\n\t\t\t_v0$1.subVectors(c, b);\n\n\t\t\t_v1$3.subVectors(a, b); // strictly front facing\n\n\n\t\t\treturn _v0$1.cross(_v1$3).dot(direction) < 0 ? true : false;\n\t\t}\n\n\t\tset(a, b, c) {\n\t\t\tthis.a.copy(a);\n\t\t\tthis.b.copy(b);\n\t\t\tthis.c.copy(c);\n\t\t\treturn this;\n\t\t}\n\n\t\tsetFromPointsAndIndices(points, i0, i1, i2) {\n\t\t\tthis.a.copy(points[i0]);\n\t\t\tthis.b.copy(points[i1]);\n\t\t\tthis.c.copy(points[i2]);\n\t\t\treturn this;\n\t\t}\n\n\t\tsetFromAttributeAndIndices(attribute, i0, i1, i2) {\n\t\t\tthis.a.fromBufferAttribute(attribute, i0);\n\t\t\tthis.b.fromBufferAttribute(attribute, i1);\n\t\t\tthis.c.fromBufferAttribute(attribute, i2);\n\t\t\treturn this;\n\t\t}\n\n\t\tclone() {\n\t\t\treturn new this.constructor().copy(this);\n\t\t}\n\n\t\tcopy(triangle) {\n\t\t\tthis.a.copy(triangle.a);\n\t\t\tthis.b.copy(triangle.b);\n\t\t\tthis.c.copy(triangle.c);\n\t\t\treturn this;\n\t\t}\n\n\t\tgetArea() {\n\t\t\t_v0$1.subVectors(this.c, this.b);\n\n\t\t\t_v1$3.subVectors(this.a, this.b);\n\n\t\t\treturn _v0$1.cross(_v1$3).length() * 0.5;\n\t\t}\n\n\t\tgetMidpoint(target) {\n\t\t\treturn target.addVectors(this.a, this.b).add(this.c).multiplyScalar(1 / 3);\n\t\t}\n\n\t\tgetNormal(target) {\n\t\t\treturn Triangle.getNormal(this.a, this.b, this.c, target);\n\t\t}\n\n\t\tgetPlane(target) {\n\t\t\treturn target.setFromCoplanarPoints(this.a, this.b, this.c);\n\t\t}\n\n\t\tgetBarycoord(point, target) {\n\t\t\treturn Triangle.getBarycoord(point, this.a, this.b, this.c, target);\n\t\t}\n\n\t\tgetUV(point, uv1, uv2, uv3, target) {\n\t\t\treturn Triangle.getUV(point, this.a, this.b, this.c, uv1, uv2, uv3, target);\n\t\t}\n\n\t\tcontainsPoint(point) {\n\t\t\treturn Triangle.containsPoint(point, this.a, this.b, this.c);\n\t\t}\n\n\t\tisFrontFacing(direction) {\n\t\t\treturn Triangle.isFrontFacing(this.a, this.b, this.c, direction);\n\t\t}\n\n\t\tintersectsBox(box) {\n\t\t\treturn box.intersectsTriangle(this);\n\t\t}\n\n\t\tclosestPointToPoint(p, target) {\n\t\t\tconst a = this.a,\n\t\t\t\t\t\tb = this.b,\n\t\t\t\t\t\tc = this.c;\n\t\t\tlet v, w; // algorithm thanks to Real-Time Collision Detection by Christer Ericson,\n\t\t\t// published by Morgan Kaufmann Publishers, (c) 2005 Elsevier Inc.,\n\t\t\t// under the accompanying license; see chapter 5.1.5 for detailed explanation.\n\t\t\t// basically, we're distinguishing which of the voronoi regions of the triangle\n\t\t\t// the point lies in with the minimum amount of redundant computation.\n\n\t\t\t_vab.subVectors(b, a);\n\n\t\t\t_vac.subVectors(c, a);\n\n\t\t\t_vap.subVectors(p, a);\n\n\t\t\tconst d1 = _vab.dot(_vap);\n\n\t\t\tconst d2 = _vac.dot(_vap);\n\n\t\t\tif (d1 <= 0 && d2 <= 0) {\n\t\t\t\t// vertex region of A; barycentric coords (1, 0, 0)\n\t\t\t\treturn target.copy(a);\n\t\t\t}\n\n\t\t\t_vbp.subVectors(p, b);\n\n\t\t\tconst d3 = _vab.dot(_vbp);\n\n\t\t\tconst d4 = _vac.dot(_vbp);\n\n\t\t\tif (d3 >= 0 && d4 <= d3) {\n\t\t\t\t// vertex region of B; barycentric coords (0, 1, 0)\n\t\t\t\treturn target.copy(b);\n\t\t\t}\n\n\t\t\tconst vc = d1 * d4 - d3 * d2;\n\n\t\t\tif (vc <= 0 && d1 >= 0 && d3 <= 0) {\n\t\t\t\tv = d1 / (d1 - d3); // edge region of AB; barycentric coords (1-v, v, 0)\n\n\t\t\t\treturn target.copy(a).addScaledVector(_vab, v);\n\t\t\t}\n\n\t\t\t_vcp.subVectors(p, c);\n\n\t\t\tconst d5 = _vab.dot(_vcp);\n\n\t\t\tconst d6 = _vac.dot(_vcp);\n\n\t\t\tif (d6 >= 0 && d5 <= d6) {\n\t\t\t\t// vertex region of C; barycentric coords (0, 0, 1)\n\t\t\t\treturn target.copy(c);\n\t\t\t}\n\n\t\t\tconst vb = d5 * d2 - d1 * d6;\n\n\t\t\tif (vb <= 0 && d2 >= 0 && d6 <= 0) {\n\t\t\t\tw = d2 / (d2 - d6); // edge region of AC; barycentric coords (1-w, 0, w)\n\n\t\t\t\treturn target.copy(a).addScaledVector(_vac, w);\n\t\t\t}\n\n\t\t\tconst va = d3 * d6 - d5 * d4;\n\n\t\t\tif (va <= 0 && d4 - d3 >= 0 && d5 - d6 >= 0) {\n\t\t\t\t_vbc.subVectors(c, b);\n\n\t\t\t\tw = (d4 - d3) / (d4 - d3 + (d5 - d6)); // edge region of BC; barycentric coords (0, 1-w, w)\n\n\t\t\t\treturn target.copy(b).addScaledVector(_vbc, w); // edge region of BC\n\t\t\t} // face region\n\n\n\t\t\tconst denom = 1 / (va + vb + vc); // u = va * denom\n\n\t\t\tv = vb * denom;\n\t\t\tw = vc * denom;\n\t\t\treturn target.copy(a).addScaledVector(_vab, v).addScaledVector(_vac, w);\n\t\t}\n\n\t\tequals(triangle) {\n\t\t\treturn triangle.a.equals(this.a) && triangle.b.equals(this.b) && triangle.c.equals(this.c);\n\t\t}\n\n\t}\n\n\tlet materialId = 0;\n\n\tclass Material extends EventDispatcher {\n\t\tconstructor() {\n\t\t\tsuper();\n\t\t\tObject.defineProperty(this, 'id', {\n\t\t\t\tvalue: materialId++\n\t\t\t});\n\t\t\tthis.uuid = generateUUID();\n\t\t\tthis.name = '';\n\t\t\tthis.type = 'Material';\n\t\t\tthis.fog = true;\n\t\t\tthis.blending = NormalBlending;\n\t\t\tthis.side = FrontSide;\n\t\t\tthis.vertexColors = false;\n\t\t\tthis.opacity = 1;\n\t\t\tthis.format = RGBAFormat;\n\t\t\tthis.transparent = false;\n\t\t\tthis.blendSrc = SrcAlphaFactor;\n\t\t\tthis.blendDst = OneMinusSrcAlphaFactor;\n\t\t\tthis.blendEquation = AddEquation;\n\t\t\tthis.blendSrcAlpha = null;\n\t\t\tthis.blendDstAlpha = null;\n\t\t\tthis.blendEquationAlpha = null;\n\t\t\tthis.depthFunc = LessEqualDepth;\n\t\t\tthis.depthTest = true;\n\t\t\tthis.depthWrite = true;\n\t\t\tthis.stencilWriteMask = 0xff;\n\t\t\tthis.stencilFunc = AlwaysStencilFunc;\n\t\t\tthis.stencilRef = 0;\n\t\t\tthis.stencilFuncMask = 0xff;\n\t\t\tthis.stencilFail = KeepStencilOp;\n\t\t\tthis.stencilZFail = KeepStencilOp;\n\t\t\tthis.stencilZPass = KeepStencilOp;\n\t\t\tthis.stencilWrite = false;\n\t\t\tthis.clippingPlanes = null;\n\t\t\tthis.clipIntersection = false;\n\t\t\tthis.clipShadows = false;\n\t\t\tthis.shadowSide = null;\n\t\t\tthis.colorWrite = true;\n\t\t\tthis.precision = null; // override the renderer's default precision for this material\n\n\t\t\tthis.polygonOffset = false;\n\t\t\tthis.polygonOffsetFactor = 0;\n\t\t\tthis.polygonOffsetUnits = 0;\n\t\t\tthis.dithering = false;\n\t\t\tthis.alphaToCoverage = false;\n\t\t\tthis.premultipliedAlpha = false;\n\t\t\tthis.visible = true;\n\t\t\tthis.toneMapped = true;\n\t\t\tthis.userData = {};\n\t\t\tthis.version = 0;\n\t\t\tthis._alphaTest = 0;\n\t\t}\n\n\t\tget alphaTest() {\n\t\t\treturn this._alphaTest;\n\t\t}\n\n\t\tset alphaTest(value) {\n\t\t\tif (this._alphaTest > 0 !== value > 0) {\n\t\t\t\tthis.version++;\n\t\t\t}\n\n\t\t\tthis._alphaTest = value;\n\t\t}\n\n\t\tonBuild() {}\n\n\t\tonBeforeRender() {}\n\n\t\tonBeforeCompile() {}\n\n\t\tcustomProgramCacheKey() {\n\t\t\treturn this.onBeforeCompile.toString();\n\t\t}\n\n\t\tsetValues(values) {\n\t\t\tif (values === undefined) return;\n\n\t\t\tfor (const key in values) {\n\t\t\t\tconst newValue = values[key];\n\n\t\t\t\tif (newValue === undefined) {\n\t\t\t\t\tconsole.warn('THREE.Material: \\'' + key + '\\' parameter is undefined.');\n\t\t\t\t\tcontinue;\n\t\t\t\t} // for backward compatability if shading is set in the constructor\n\n\n\t\t\t\tif (key === 'shading') {\n\t\t\t\t\tconsole.warn('THREE.' + this.type + ': .shading has been removed. Use the boolean .flatShading instead.');\n\t\t\t\t\tthis.flatShading = newValue === FlatShading ? true : false;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tconst currentValue = this[key];\n\n\t\t\t\tif (currentValue === undefined) {\n\t\t\t\t\tconsole.warn('THREE.' + this.type + ': \\'' + key + '\\' is not a property of this material.');\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tif (currentValue && currentValue.isColor) {\n\t\t\t\t\tcurrentValue.set(newValue);\n\t\t\t\t} else if (currentValue && currentValue.isVector3 && newValue && newValue.isVector3) {\n\t\t\t\t\tcurrentValue.copy(newValue);\n\t\t\t\t} else {\n\t\t\t\t\tthis[key] = newValue;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\ttoJSON(meta) {\n\t\t\tconst isRoot = meta === undefined || typeof meta === 'string';\n\n\t\t\tif (isRoot) {\n\t\t\t\tmeta = {\n\t\t\t\t\ttextures: {},\n\t\t\t\t\timages: {}\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tconst data = {\n\t\t\t\tmetadata: {\n\t\t\t\t\tversion: 4.5,\n\t\t\t\t\ttype: 'Material',\n\t\t\t\t\tgenerator: 'Material.toJSON'\n\t\t\t\t}\n\t\t\t}; // standard Material serialization\n\n\t\t\tdata.uuid = this.uuid;\n\t\t\tdata.type = this.type;\n\t\t\tif (this.name !== '') data.name = this.name;\n\t\t\tif (this.color && this.color.isColor) data.color = this.color.getHex();\n\t\t\tif (this.roughness !== undefined) data.roughness = this.roughness;\n\t\t\tif (this.metalness !== undefined) data.metalness = this.metalness;\n\t\t\tif (this.sheen !== undefined) data.sheen = this.sheen;\n\t\t\tif (this.sheenColor && this.sheenColor.isColor) data.sheenColor = this.sheenColor.getHex();\n\t\t\tif (this.sheenRoughness !== undefined) data.sheenRoughness = this.sheenRoughness;\n\t\t\tif (this.emissive && this.emissive.isColor) data.emissive = this.emissive.getHex();\n\t\t\tif (this.emissiveIntensity && this.emissiveIntensity !== 1) data.emissiveIntensity = this.emissiveIntensity;\n\t\t\tif (this.specular && this.specular.isColor) data.specular = this.specular.getHex();\n\t\t\tif (this.specularIntensity !== undefined) data.specularIntensity = this.specularIntensity;\n\t\t\tif (this.specularColor && this.specularColor.isColor) data.specularColor = this.specularColor.getHex();\n\t\t\tif (this.shininess !== undefined) data.shininess = this.shininess;\n\t\t\tif (this.clearcoat !== undefined) data.clearcoat = this.clearcoat;\n\t\t\tif (this.clearcoatRoughness !== undefined) data.clearcoatRoughness = this.clearcoatRoughness;\n\n\t\t\tif (this.clearcoatMap && this.clearcoatMap.isTexture) {\n\t\t\t\tdata.clearcoatMap = this.clearcoatMap.toJSON(meta).uuid;\n\t\t\t}\n\n\t\t\tif (this.clearcoatRoughnessMap && this.clearcoatRoughnessMap.isTexture) {\n\t\t\t\tdata.clearcoatRoughnessMap = this.clearcoatRoughnessMap.toJSON(meta).uuid;\n\t\t\t}\n\n\t\t\tif (this.clearcoatNormalMap && this.clearcoatNormalMap.isTexture) {\n\t\t\t\tdata.clearcoatNormalMap = this.clearcoatNormalMap.toJSON(meta).uuid;\n\t\t\t\tdata.clearcoatNormalScale = this.clearcoatNormalScale.toArray();\n\t\t\t}\n\n\t\t\tif (this.map && this.map.isTexture) data.map = this.map.toJSON(meta).uuid;\n\t\t\tif (this.matcap && this.matcap.isTexture) data.matcap = this.matcap.toJSON(meta).uuid;\n\t\t\tif (this.alphaMap && this.alphaMap.isTexture) data.alphaMap = this.alphaMap.toJSON(meta).uuid;\n\n\t\t\tif (this.lightMap && this.lightMap.isTexture) {\n\t\t\t\tdata.lightMap = this.lightMap.toJSON(meta).uuid;\n\t\t\t\tdata.lightMapIntensity = this.lightMapIntensity;\n\t\t\t}\n\n\t\t\tif (this.aoMap && this.aoMap.isTexture) {\n\t\t\t\tdata.aoMap = this.aoMap.toJSON(meta).uuid;\n\t\t\t\tdata.aoMapIntensity = this.aoMapIntensity;\n\t\t\t}\n\n\t\t\tif (this.bumpMap && this.bumpMap.isTexture) {\n\t\t\t\tdata.bumpMap = this.bumpMap.toJSON(meta).uuid;\n\t\t\t\tdata.bumpScale = this.bumpScale;\n\t\t\t}\n\n\t\t\tif (this.normalMap && this.normalMap.isTexture) {\n\t\t\t\tdata.normalMap = this.normalMap.toJSON(meta).uuid;\n\t\t\t\tdata.normalMapType = this.normalMapType;\n\t\t\t\tdata.normalScale = this.normalScale.toArray();\n\t\t\t}\n\n\t\t\tif (this.displacementMap && this.displacementMap.isTexture) {\n\t\t\t\tdata.displacementMap = this.displacementMap.toJSON(meta).uuid;\n\t\t\t\tdata.displacementScale = this.displacementScale;\n\t\t\t\tdata.displacementBias = this.displacementBias;\n\t\t\t}\n\n\t\t\tif (this.roughnessMap && this.roughnessMap.isTexture) data.roughnessMap = this.roughnessMap.toJSON(meta).uuid;\n\t\t\tif (this.metalnessMap && this.metalnessMap.isTexture) data.metalnessMap = this.metalnessMap.toJSON(meta).uuid;\n\t\t\tif (this.emissiveMap && this.emissiveMap.isTexture) data.emissiveMap = this.emissiveMap.toJSON(meta).uuid;\n\t\t\tif (this.specularMap && this.specularMap.isTexture) data.specularMap = this.specularMap.toJSON(meta).uuid;\n\t\t\tif (this.specularIntensityMap && this.specularIntensityMap.isTexture) data.specularIntensityMap = this.specularIntensityMap.toJSON(meta).uuid;\n\t\t\tif (this.specularColorMap && this.specularColorMap.isTexture) data.specularColorMap = this.specularColorMap.toJSON(meta).uuid;\n\n\t\t\tif (this.envMap && this.envMap.isTexture) {\n\t\t\t\tdata.envMap = this.envMap.toJSON(meta).uuid;\n\t\t\t\tif (this.combine !== undefined) data.combine = this.combine;\n\t\t\t}\n\n\t\t\tif (this.envMapIntensity !== undefined) data.envMapIntensity = this.envMapIntensity;\n\t\t\tif (this.reflectivity !== undefined) data.reflectivity = this.reflectivity;\n\t\t\tif (this.refractionRatio !== undefined) data.refractionRatio = this.refractionRatio;\n\n\t\t\tif (this.gradientMap && this.gradientMap.isTexture) {\n\t\t\t\tdata.gradientMap = this.gradientMap.toJSON(meta).uuid;\n\t\t\t}\n\n\t\t\tif (this.transmission !== undefined) data.transmission = this.transmission;\n\t\t\tif (this.transmissionMap && this.transmissionMap.isTexture) data.transmissionMap = this.transmissionMap.toJSON(meta).uuid;\n\t\t\tif (this.thickness !== undefined) data.thickness = this.thickness;\n\t\t\tif (this.thicknessMap && this.thicknessMap.isTexture) data.thicknessMap = this.thicknessMap.toJSON(meta).uuid;\n\t\t\tif (this.attenuationDistance !== undefined) data.attenuationDistance = this.attenuationDistance;\n\t\t\tif (this.attenuationColor !== undefined) data.attenuationColor = this.attenuationColor.getHex();\n\t\t\tif (this.size !== undefined) data.size = this.size;\n\t\t\tif (this.shadowSide !== null) data.shadowSide = this.shadowSide;\n\t\t\tif (this.sizeAttenuation !== undefined) data.sizeAttenuation = this.sizeAttenuation;\n\t\t\tif (this.blending !== NormalBlending) data.blending = this.blending;\n\t\t\tif (this.side !== FrontSide) data.side = this.side;\n\t\t\tif (this.vertexColors) data.vertexColors = true;\n\t\t\tif (this.opacity < 1) data.opacity = this.opacity;\n\t\t\tif (this.format !== RGBAFormat) data.format = this.format;\n\t\t\tif (this.transparent === true) data.transparent = this.transparent;\n\t\t\tdata.depthFunc = this.depthFunc;\n\t\t\tdata.depthTest = this.depthTest;\n\t\t\tdata.depthWrite = this.depthWrite;\n\t\t\tdata.colorWrite = this.colorWrite;\n\t\t\tdata.stencilWrite = this.stencilWrite;\n\t\t\tdata.stencilWriteMask = this.stencilWriteMask;\n\t\t\tdata.stencilFunc = this.stencilFunc;\n\t\t\tdata.stencilRef = this.stencilRef;\n\t\t\tdata.stencilFuncMask = this.stencilFuncMask;\n\t\t\tdata.stencilFail = this.stencilFail;\n\t\t\tdata.stencilZFail = this.stencilZFail;\n\t\t\tdata.stencilZPass = this.stencilZPass; // rotation (SpriteMaterial)\n\n\t\t\tif (this.rotation && this.rotation !== 0) data.rotation = this.rotation;\n\t\t\tif (this.polygonOffset === true) data.polygonOffset = true;\n\t\t\tif (this.polygonOffsetFactor !== 0) data.polygonOffsetFactor = this.polygonOffsetFactor;\n\t\t\tif (this.polygonOffsetUnits !== 0) data.polygonOffsetUnits = this.polygonOffsetUnits;\n\t\t\tif (this.linewidth && this.linewidth !== 1) data.linewidth = this.linewidth;\n\t\t\tif (this.dashSize !== undefined) data.dashSize = this.dashSize;\n\t\t\tif (this.gapSize !== undefined) data.gapSize = this.gapSize;\n\t\t\tif (this.scale !== undefined) data.scale = this.scale;\n\t\t\tif (this.dithering === true) data.dithering = true;\n\t\t\tif (this.alphaTest > 0) data.alphaTest = this.alphaTest;\n\t\t\tif (this.alphaToCoverage === true) data.alphaToCoverage = this.alphaToCoverage;\n\t\t\tif (this.premultipliedAlpha === true) data.premultipliedAlpha = this.premultipliedAlpha;\n\t\t\tif (this.wireframe === true) data.wireframe = this.wireframe;\n\t\t\tif (this.wireframeLinewidth > 1) data.wireframeLinewidth = this.wireframeLinewidth;\n\t\t\tif (this.wireframeLinecap !== 'round') data.wireframeLinecap = this.wireframeLinecap;\n\t\t\tif (this.wireframeLinejoin !== 'round') data.wireframeLinejoin = this.wireframeLinejoin;\n\t\t\tif (this.flatShading === true) data.flatShading = this.flatShading;\n\t\t\tif (this.visible === false) data.visible = false;\n\t\t\tif (this.toneMapped === false) data.toneMapped = false;\n\t\t\tif (JSON.stringify(this.userData) !== '{}') data.userData = this.userData; // TODO: Copied from Object3D.toJSON\n\n\t\t\tfunction extractFromCache(cache) {\n\t\t\t\tconst values = [];\n\n\t\t\t\tfor (const key in cache) {\n\t\t\t\t\tconst data = cache[key];\n\t\t\t\t\tdelete data.metadata;\n\t\t\t\t\tvalues.push(data);\n\t\t\t\t}\n\n\t\t\t\treturn values;\n\t\t\t}\n\n\t\t\tif (isRoot) {\n\t\t\t\tconst textures = extractFromCache(meta.textures);\n\t\t\t\tconst images = extractFromCache(meta.images);\n\t\t\t\tif (textures.length > 0) data.textures = textures;\n\t\t\t\tif (images.length > 0) data.images = images;\n\t\t\t}\n\n\t\t\treturn data;\n\t\t}\n\n\t\tclone() {\n\t\t\treturn new this.constructor().copy(this);\n\t\t}\n\n\t\tcopy(source) {\n\t\t\tthis.name = source.name;\n\t\t\tthis.fog = source.fog;\n\t\t\tthis.blending = source.blending;\n\t\t\tthis.side = source.side;\n\t\t\tthis.vertexColors = source.vertexColors;\n\t\t\tthis.opacity = source.opacity;\n\t\t\tthis.format = source.format;\n\t\t\tthis.transparent = source.transparent;\n\t\t\tthis.blendSrc = source.blendSrc;\n\t\t\tthis.blendDst = source.blendDst;\n\t\t\tthis.blendEquation = source.blendEquation;\n\t\t\tthis.blendSrcAlpha = source.blendSrcAlpha;\n\t\t\tthis.blendDstAlpha = source.blendDstAlpha;\n\t\t\tthis.blendEquationAlpha = source.blendEquationAlpha;\n\t\t\tthis.depthFunc = source.depthFunc;\n\t\t\tthis.depthTest = source.depthTest;\n\t\t\tthis.depthWrite = source.depthWrite;\n\t\t\tthis.stencilWriteMask = source.stencilWriteMask;\n\t\t\tthis.stencilFunc = source.stencilFunc;\n\t\t\tthis.stencilRef = source.stencilRef;\n\t\t\tthis.stencilFuncMask = source.stencilFuncMask;\n\t\t\tthis.stencilFail = source.stencilFail;\n\t\t\tthis.stencilZFail = source.stencilZFail;\n\t\t\tthis.stencilZPass = source.stencilZPass;\n\t\t\tthis.stencilWrite = source.stencilWrite;\n\t\t\tconst srcPlanes = source.clippingPlanes;\n\t\t\tlet dstPlanes = null;\n\n\t\t\tif (srcPlanes !== null) {\n\t\t\t\tconst n = srcPlanes.length;\n\t\t\t\tdstPlanes = new Array(n);\n\n\t\t\t\tfor (let i = 0; i !== n; ++i) {\n\t\t\t\t\tdstPlanes[i] = srcPlanes[i].clone();\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.clippingPlanes = dstPlanes;\n\t\t\tthis.clipIntersection = source.clipIntersection;\n\t\t\tthis.clipShadows = source.clipShadows;\n\t\t\tthis.shadowSide = source.shadowSide;\n\t\t\tthis.colorWrite = source.colorWrite;\n\t\t\tthis.precision = source.precision;\n\t\t\tthis.polygonOffset = source.polygonOffset;\n\t\t\tthis.polygonOffsetFactor = source.polygonOffsetFactor;\n\t\t\tthis.polygonOffsetUnits = source.polygonOffsetUnits;\n\t\t\tthis.dithering = source.dithering;\n\t\t\tthis.alphaTest = source.alphaTest;\n\t\t\tthis.alphaToCoverage = source.alphaToCoverage;\n\t\t\tthis.premultipliedAlpha = source.premultipliedAlpha;\n\t\t\tthis.visible = source.visible;\n\t\t\tthis.toneMapped = source.toneMapped;\n\t\t\tthis.userData = JSON.parse(JSON.stringify(source.userData));\n\t\t\treturn this;\n\t\t}\n\n\t\tdispose() {\n\t\t\tthis.dispatchEvent({\n\t\t\t\ttype: 'dispose'\n\t\t\t});\n\t\t}\n\n\t\tset needsUpdate(value) {\n\t\t\tif (value === true) this.version++;\n\t\t}\n\n\t}\n\n\tMaterial.prototype.isMaterial = true;\n\n\tconst _colorKeywords = {\n\t\t'aliceblue': 0xF0F8FF,\n\t\t'antiquewhite': 0xFAEBD7,\n\t\t'aqua': 0x00FFFF,\n\t\t'aquamarine': 0x7FFFD4,\n\t\t'azure': 0xF0FFFF,\n\t\t'beige': 0xF5F5DC,\n\t\t'bisque': 0xFFE4C4,\n\t\t'black': 0x000000,\n\t\t'blanchedalmond': 0xFFEBCD,\n\t\t'blue': 0x0000FF,\n\t\t'blueviolet': 0x8A2BE2,\n\t\t'brown': 0xA52A2A,\n\t\t'burlywood': 0xDEB887,\n\t\t'cadetblue': 0x5F9EA0,\n\t\t'chartreuse': 0x7FFF00,\n\t\t'chocolate': 0xD2691E,\n\t\t'coral': 0xFF7F50,\n\t\t'cornflowerblue': 0x6495ED,\n\t\t'cornsilk': 0xFFF8DC,\n\t\t'crimson': 0xDC143C,\n\t\t'cyan': 0x00FFFF,\n\t\t'darkblue': 0x00008B,\n\t\t'darkcyan': 0x008B8B,\n\t\t'darkgoldenrod': 0xB8860B,\n\t\t'darkgray': 0xA9A9A9,\n\t\t'darkgreen': 0x006400,\n\t\t'darkgrey': 0xA9A9A9,\n\t\t'darkkhaki': 0xBDB76B,\n\t\t'darkmagenta': 0x8B008B,\n\t\t'darkolivegreen': 0x556B2F,\n\t\t'darkorange': 0xFF8C00,\n\t\t'darkorchid': 0x9932CC,\n\t\t'darkred': 0x8B0000,\n\t\t'darksalmon': 0xE9967A,\n\t\t'darkseagreen': 0x8FBC8F,\n\t\t'darkslateblue': 0x483D8B,\n\t\t'darkslategray': 0x2F4F4F,\n\t\t'darkslategrey': 0x2F4F4F,\n\t\t'darkturquoise': 0x00CED1,\n\t\t'darkviolet': 0x9400D3,\n\t\t'deeppink': 0xFF1493,\n\t\t'deepskyblue': 0x00BFFF,\n\t\t'dimgray': 0x696969,\n\t\t'dimgrey': 0x696969,\n\t\t'dodgerblue': 0x1E90FF,\n\t\t'firebrick': 0xB22222,\n\t\t'floralwhite': 0xFFFAF0,\n\t\t'forestgreen': 0x228B22,\n\t\t'fuchsia': 0xFF00FF,\n\t\t'gainsboro': 0xDCDCDC,\n\t\t'ghostwhite': 0xF8F8FF,\n\t\t'gold': 0xFFD700,\n\t\t'goldenrod': 0xDAA520,\n\t\t'gray': 0x808080,\n\t\t'green': 0x008000,\n\t\t'greenyellow': 0xADFF2F,\n\t\t'grey': 0x808080,\n\t\t'honeydew': 0xF0FFF0,\n\t\t'hotpink': 0xFF69B4,\n\t\t'indianred': 0xCD5C5C,\n\t\t'indigo': 0x4B0082,\n\t\t'ivory': 0xFFFFF0,\n\t\t'khaki': 0xF0E68C,\n\t\t'lavender': 0xE6E6FA,\n\t\t'lavenderblush': 0xFFF0F5,\n\t\t'lawngreen': 0x7CFC00,\n\t\t'lemonchiffon': 0xFFFACD,\n\t\t'lightblue': 0xADD8E6,\n\t\t'lightcoral': 0xF08080,\n\t\t'lightcyan': 0xE0FFFF,\n\t\t'lightgoldenrodyellow': 0xFAFAD2,\n\t\t'lightgray': 0xD3D3D3,\n\t\t'lightgreen': 0x90EE90,\n\t\t'lightgrey': 0xD3D3D3,\n\t\t'lightpink': 0xFFB6C1,\n\t\t'lightsalmon': 0xFFA07A,\n\t\t'lightseagreen': 0x20B2AA,\n\t\t'lightskyblue': 0x87CEFA,\n\t\t'lightslategray': 0x778899,\n\t\t'lightslategrey': 0x778899,\n\t\t'lightsteelblue': 0xB0C4DE,\n\t\t'lightyellow': 0xFFFFE0,\n\t\t'lime': 0x00FF00,\n\t\t'limegreen': 0x32CD32,\n\t\t'linen': 0xFAF0E6,\n\t\t'magenta': 0xFF00FF,\n\t\t'maroon': 0x800000,\n\t\t'mediumaquamarine': 0x66CDAA,\n\t\t'mediumblue': 0x0000CD,\n\t\t'mediumorchid': 0xBA55D3,\n\t\t'mediumpurple': 0x9370DB,\n\t\t'mediumseagreen': 0x3CB371,\n\t\t'mediumslateblue': 0x7B68EE,\n\t\t'mediumspringgreen': 0x00FA9A,\n\t\t'mediumturquoise': 0x48D1CC,\n\t\t'mediumvioletred': 0xC71585,\n\t\t'midnightblue': 0x191970,\n\t\t'mintcream': 0xF5FFFA,\n\t\t'mistyrose': 0xFFE4E1,\n\t\t'moccasin': 0xFFE4B5,\n\t\t'navajowhite': 0xFFDEAD,\n\t\t'navy': 0x000080,\n\t\t'oldlace': 0xFDF5E6,\n\t\t'olive': 0x808000,\n\t\t'olivedrab': 0x6B8E23,\n\t\t'orange': 0xFFA500,\n\t\t'orangered': 0xFF4500,\n\t\t'orchid': 0xDA70D6,\n\t\t'palegoldenrod': 0xEEE8AA,\n\t\t'palegreen': 0x98FB98,\n\t\t'paleturquoise': 0xAFEEEE,\n\t\t'palevioletred': 0xDB7093,\n\t\t'papayawhip': 0xFFEFD5,\n\t\t'peachpuff': 0xFFDAB9,\n\t\t'peru': 0xCD853F,\n\t\t'pink': 0xFFC0CB,\n\t\t'plum': 0xDDA0DD,\n\t\t'powderblue': 0xB0E0E6,\n\t\t'purple': 0x800080,\n\t\t'rebeccapurple': 0x663399,\n\t\t'red': 0xFF0000,\n\t\t'rosybrown': 0xBC8F8F,\n\t\t'royalblue': 0x4169E1,\n\t\t'saddlebrown': 0x8B4513,\n\t\t'salmon': 0xFA8072,\n\t\t'sandybrown': 0xF4A460,\n\t\t'seagreen': 0x2E8B57,\n\t\t'seashell': 0xFFF5EE,\n\t\t'sienna': 0xA0522D,\n\t\t'silver': 0xC0C0C0,\n\t\t'skyblue': 0x87CEEB,\n\t\t'slateblue': 0x6A5ACD,\n\t\t'slategray': 0x708090,\n\t\t'slategrey': 0x708090,\n\t\t'snow': 0xFFFAFA,\n\t\t'springgreen': 0x00FF7F,\n\t\t'steelblue': 0x4682B4,\n\t\t'tan': 0xD2B48C,\n\t\t'teal': 0x008080,\n\t\t'thistle': 0xD8BFD8,\n\t\t'tomato': 0xFF6347,\n\t\t'turquoise': 0x40E0D0,\n\t\t'violet': 0xEE82EE,\n\t\t'wheat': 0xF5DEB3,\n\t\t'white': 0xFFFFFF,\n\t\t'whitesmoke': 0xF5F5F5,\n\t\t'yellow': 0xFFFF00,\n\t\t'yellowgreen': 0x9ACD32\n\t};\n\tconst _hslA = {\n\t\th: 0,\n\t\ts: 0,\n\t\tl: 0\n\t};\n\tconst _hslB = {\n\t\th: 0,\n\t\ts: 0,\n\t\tl: 0\n\t};\n\n\tfunction hue2rgb(p, q, t) {\n\t\tif (t < 0) t += 1;\n\t\tif (t > 1) t -= 1;\n\t\tif (t < 1 / 6) return p + (q - p) * 6 * t;\n\t\tif (t < 1 / 2) return q;\n\t\tif (t < 2 / 3) return p + (q - p) * 6 * (2 / 3 - t);\n\t\treturn p;\n\t}\n\n\tfunction SRGBToLinear(c) {\n\t\treturn c < 0.04045 ? c * 0.0773993808 : Math.pow(c * 0.9478672986 + 0.0521327014, 2.4);\n\t}\n\n\tfunction LinearToSRGB(c) {\n\t\treturn c < 0.0031308 ? c * 12.92 : 1.055 * Math.pow(c, 0.41666) - 0.055;\n\t}\n\n\tclass Color {\n\t\tconstructor(r, g, b) {\n\t\t\tif (g === undefined && b === undefined) {\n\t\t\t\t// r is THREE.Color, hex or string\n\t\t\t\treturn this.set(r);\n\t\t\t}\n\n\t\t\treturn this.setRGB(r, g, b);\n\t\t}\n\n\t\tset(value) {\n\t\t\tif (value && value.isColor) {\n\t\t\t\tthis.copy(value);\n\t\t\t} else if (typeof value === 'number') {\n\t\t\t\tthis.setHex(value);\n\t\t\t} else if (typeof value === 'string') {\n\t\t\t\tthis.setStyle(value);\n\t\t\t}\n\n\t\t\treturn this;\n\t\t}\n\n\t\tsetScalar(scalar) {\n\t\t\tthis.r = scalar;\n\t\t\tthis.g = scalar;\n\t\t\tthis.b = scalar;\n\t\t\treturn this;\n\t\t}\n\n\t\tsetHex(hex) {\n\t\t\thex = Math.floor(hex);\n\t\t\tthis.r = (hex >> 16 & 255) / 255;\n\t\t\tthis.g = (hex >> 8 & 255) / 255;\n\t\t\tthis.b = (hex & 255) / 255;\n\t\t\treturn this;\n\t\t}\n\n\t\tsetRGB(r, g, b) {\n\t\t\tthis.r = r;\n\t\t\tthis.g = g;\n\t\t\tthis.b = b;\n\t\t\treturn this;\n\t\t}\n\n\t\tsetHSL(h, s, l) {\n\t\t\t// h,s,l ranges are in 0.0 - 1.0\n\t\t\th = euclideanModulo(h, 1);\n\t\t\ts = clamp(s, 0, 1);\n\t\t\tl = clamp(l, 0, 1);\n\n\t\t\tif (s === 0) {\n\t\t\t\tthis.r = this.g = this.b = l;\n\t\t\t} else {\n\t\t\t\tconst p = l <= 0.5 ? l * (1 + s) : l + s - l * s;\n\t\t\t\tconst q = 2 * l - p;\n\t\t\t\tthis.r = hue2rgb(q, p, h + 1 / 3);\n\t\t\t\tthis.g = hue2rgb(q, p, h);\n\t\t\t\tthis.b = hue2rgb(q, p, h - 1 / 3);\n\t\t\t}\n\n\t\t\treturn this;\n\t\t}\n\n\t\tsetStyle(style) {\n\t\t\tfunction handleAlpha(string) {\n\t\t\t\tif (string === undefined) return;\n\n\t\t\t\tif (parseFloat(string) < 1) {\n\t\t\t\t\tconsole.warn('THREE.Color: Alpha component of ' + style + ' will be ignored.');\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlet m;\n\n\t\t\tif (m = /^((?:rgb|hsl)a?)\\(([^\\)]*)\\)/.exec(style)) {\n\t\t\t\t// rgb / hsl\n\t\t\t\tlet color;\n\t\t\t\tconst name = m[1];\n\t\t\t\tconst components = m[2];\n\n\t\t\t\tswitch (name) {\n\t\t\t\t\tcase 'rgb':\n\t\t\t\t\tcase 'rgba':\n\t\t\t\t\t\tif (color = /^\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*(?:,\\s*(\\d*\\.?\\d+)\\s*)?$/.exec(components)) {\n\t\t\t\t\t\t\t// rgb(255,0,0) rgba(255,0,0,0.5)\n\t\t\t\t\t\t\tthis.r = Math.min(255, parseInt(color[1], 10)) / 255;\n\t\t\t\t\t\t\tthis.g = Math.min(255, parseInt(color[2], 10)) / 255;\n\t\t\t\t\t\t\tthis.b = Math.min(255, parseInt(color[3], 10)) / 255;\n\t\t\t\t\t\t\thandleAlpha(color[4]);\n\t\t\t\t\t\t\treturn this;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (color = /^\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*(?:,\\s*(\\d*\\.?\\d+)\\s*)?$/.exec(components)) {\n\t\t\t\t\t\t\t// rgb(100%,0%,0%) rgba(100%,0%,0%,0.5)\n\t\t\t\t\t\t\tthis.r = Math.min(100, parseInt(color[1], 10)) / 100;\n\t\t\t\t\t\t\tthis.g = Math.min(100, parseInt(color[2], 10)) / 100;\n\t\t\t\t\t\t\tthis.b = Math.min(100, parseInt(color[3], 10)) / 100;\n\t\t\t\t\t\t\thandleAlpha(color[4]);\n\t\t\t\t\t\t\treturn this;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'hsl':\n\t\t\t\t\tcase 'hsla':\n\t\t\t\t\t\tif (color = /^\\s*(\\d*\\.?\\d+)\\s*,\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*(?:,\\s*(\\d*\\.?\\d+)\\s*)?$/.exec(components)) {\n\t\t\t\t\t\t\t// hsl(120,50%,50%) hsla(120,50%,50%,0.5)\n\t\t\t\t\t\t\tconst h = parseFloat(color[1]) / 360;\n\t\t\t\t\t\t\tconst s = parseInt(color[2], 10) / 100;\n\t\t\t\t\t\t\tconst l = parseInt(color[3], 10) / 100;\n\t\t\t\t\t\t\thandleAlpha(color[4]);\n\t\t\t\t\t\t\treturn this.setHSL(h, s, l);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} else if (m = /^\\#([A-Fa-f\\d]+)$/.exec(style)) {\n\t\t\t\t// hex color\n\t\t\t\tconst hex = m[1];\n\t\t\t\tconst size = hex.length;\n\n\t\t\t\tif (size === 3) {\n\t\t\t\t\t// #ff0\n\t\t\t\t\tthis.r = parseInt(hex.charAt(0) + hex.charAt(0), 16) / 255;\n\t\t\t\t\tthis.g = parseInt(hex.charAt(1) + hex.charAt(1), 16) / 255;\n\t\t\t\t\tthis.b = parseInt(hex.charAt(2) + hex.charAt(2), 16) / 255;\n\t\t\t\t\treturn this;\n\t\t\t\t} else if (size === 6) {\n\t\t\t\t\t// #ff0000\n\t\t\t\t\tthis.r = parseInt(hex.charAt(0) + hex.charAt(1), 16) / 255;\n\t\t\t\t\tthis.g = parseInt(hex.charAt(2) + hex.charAt(3), 16) / 255;\n\t\t\t\t\tthis.b = parseInt(hex.charAt(4) + hex.charAt(5), 16) / 255;\n\t\t\t\t\treturn this;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (style && style.length > 0) {\n\t\t\t\treturn this.setColorName(style);\n\t\t\t}\n\n\t\t\treturn this;\n\t\t}\n\n\t\tsetColorName(style) {\n\t\t\t// color keywords\n\t\t\tconst hex = _colorKeywords[style.toLowerCase()];\n\n\t\t\tif (hex !== undefined) {\n\t\t\t\t// red\n\t\t\t\tthis.setHex(hex);\n\t\t\t} else {\n\t\t\t\t// unknown color\n\t\t\t\tconsole.warn('THREE.Color: Unknown color ' + style);\n\t\t\t}\n\n\t\t\treturn this;\n\t\t}\n\n\t\tclone() {\n\t\t\treturn new this.constructor(this.r, this.g, this.b);\n\t\t}\n\n\t\tcopy(color) {\n\t\t\tthis.r = color.r;\n\t\t\tthis.g = color.g;\n\t\t\tthis.b = color.b;\n\t\t\treturn this;\n\t\t}\n\n\t\tcopyGammaToLinear(color, gammaFactor = 2.0) {\n\t\t\tthis.r = Math.pow(color.r, gammaFactor);\n\t\t\tthis.g = Math.pow(color.g, gammaFactor);\n\t\t\tthis.b = Math.pow(color.b, gammaFactor);\n\t\t\treturn this;\n\t\t}\n\n\t\tcopyLinearToGamma(color, gammaFactor = 2.0) {\n\t\t\tconst safeInverse = gammaFactor > 0 ? 1.0 / gammaFactor : 1.0;\n\t\t\tthis.r = Math.pow(color.r, safeInverse);\n\t\t\tthis.g = Math.pow(color.g, safeInverse);\n\t\t\tthis.b = Math.pow(color.b, safeInverse);\n\t\t\treturn this;\n\t\t}\n\n\t\tconvertGammaToLinear(gammaFactor) {\n\t\t\tthis.copyGammaToLinear(this, gammaFactor);\n\t\t\treturn this;\n\t\t}\n\n\t\tconvertLinearToGamma(gammaFactor) {\n\t\t\tthis.copyLinearToGamma(this, gammaFactor);\n\t\t\treturn this;\n\t\t}\n\n\t\tcopySRGBToLinear(color) {\n\t\t\tthis.r = SRGBToLinear(color.r);\n\t\t\tthis.g = SRGBToLinear(color.g);\n\t\t\tthis.b = SRGBToLinear(color.b);\n\t\t\treturn this;\n\t\t}\n\n\t\tcopyLinearToSRGB(color) {\n\t\t\tthis.r = LinearToSRGB(color.r);\n\t\t\tthis.g = LinearToSRGB(color.g);\n\t\t\tthis.b = LinearToSRGB(color.b);\n\t\t\treturn this;\n\t\t}\n\n\t\tconvertSRGBToLinear() {\n\t\t\tthis.copySRGBToLinear(this);\n\t\t\treturn this;\n\t\t}\n\n\t\tconvertLinearToSRGB() {\n\t\t\tthis.copyLinearToSRGB(this);\n\t\t\treturn this;\n\t\t}\n\n\t\tgetHex() {\n\t\t\treturn this.r * 255 << 16 ^ this.g * 255 << 8 ^ this.b * 255 << 0;\n\t\t}\n\n\t\tgetHexString() {\n\t\t\treturn ('000000' + this.getHex().toString(16)).slice(-6);\n\t\t}\n\n\t\tgetHSL(target) {\n\t\t\t// h,s,l ranges are in 0.0 - 1.0\n\t\t\tconst r = this.r,\n\t\t\t\t\t\tg = this.g,\n\t\t\t\t\t\tb = this.b;\n\t\t\tconst max = Math.max(r, g, b);\n\t\t\tconst min = Math.min(r, g, b);\n\t\t\tlet hue, saturation;\n\t\t\tconst lightness = (min + max) / 2.0;\n\n\t\t\tif (min === max) {\n\t\t\t\thue = 0;\n\t\t\t\tsaturation = 0;\n\t\t\t} else {\n\t\t\t\tconst delta = max - min;\n\t\t\t\tsaturation = lightness <= 0.5 ? delta / (max + min) : delta / (2 - max - min);\n\n\t\t\t\tswitch (max) {\n\t\t\t\t\tcase r:\n\t\t\t\t\t\thue = (g - b) / delta + (g < b ? 6 : 0);\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase g:\n\t\t\t\t\t\thue = (b - r) / delta + 2;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase b:\n\t\t\t\t\t\thue = (r - g) / delta + 4;\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\thue /= 6;\n\t\t\t}\n\n\t\t\ttarget.h = hue;\n\t\t\ttarget.s = saturation;\n\t\t\ttarget.l = lightness;\n\t\t\treturn target;\n\t\t}\n\n\t\tgetStyle() {\n\t\t\treturn 'rgb(' + (this.r * 255 | 0) + ',' + (this.g * 255 | 0) + ',' + (this.b * 255 | 0) + ')';\n\t\t}\n\n\t\toffsetHSL(h, s, l) {\n\t\t\tthis.getHSL(_hslA);\n\t\t\t_hslA.h += h;\n\t\t\t_hslA.s += s;\n\t\t\t_hslA.l += l;\n\t\t\tthis.setHSL(_hslA.h, _hslA.s, _hslA.l);\n\t\t\treturn this;\n\t\t}\n\n\t\tadd(color) {\n\t\t\tthis.r += color.r;\n\t\t\tthis.g += color.g;\n\t\t\tthis.b += color.b;\n\t\t\treturn this;\n\t\t}\n\n\t\taddColors(color1, color2) {\n\t\t\tthis.r = color1.r + color2.r;\n\t\t\tthis.g = color1.g + color2.g;\n\t\t\tthis.b = color1.b + color2.b;\n\t\t\treturn this;\n\t\t}\n\n\t\taddScalar(s) {\n\t\t\tthis.r += s;\n\t\t\tthis.g += s;\n\t\t\tthis.b += s;\n\t\t\treturn this;\n\t\t}\n\n\t\tsub(color) {\n\t\t\tthis.r = Math.max(0, this.r - color.r);\n\t\t\tthis.g = Math.max(0, this.g - color.g);\n\t\t\tthis.b = Math.max(0, this.b - color.b);\n\t\t\treturn this;\n\t\t}\n\n\t\tmultiply(color) {\n\t\t\tthis.r *= color.r;\n\t\t\tthis.g *= color.g;\n\t\t\tthis.b *= color.b;\n\t\t\treturn this;\n\t\t}\n\n\t\tmultiplyScalar(s) {\n\t\t\tthis.r *= s;\n\t\t\tthis.g *= s;\n\t\t\tthis.b *= s;\n\t\t\treturn this;\n\t\t}\n\n\t\tlerp(color, alpha) {\n\t\t\tthis.r += (color.r - this.r) * alpha;\n\t\t\tthis.g += (color.g - this.g) * alpha;\n\t\t\tthis.b += (color.b - this.b) * alpha;\n\t\t\treturn this;\n\t\t}\n\n\t\tlerpColors(color1, color2, alpha) {\n\t\t\tthis.r = color1.r + (color2.r - color1.r) * alpha;\n\t\t\tthis.g = color1.g + (color2.g - color1.g) * alpha;\n\t\t\tthis.b = color1.b + (color2.b - color1.b) * alpha;\n\t\t\treturn this;\n\t\t}\n\n\t\tlerpHSL(color, alpha) {\n\t\t\tthis.getHSL(_hslA);\n\t\t\tcolor.getHSL(_hslB);\n\t\t\tconst h = lerp(_hslA.h, _hslB.h, alpha);\n\t\t\tconst s = lerp(_hslA.s, _hslB.s, alpha);\n\t\t\tconst l = lerp(_hslA.l, _hslB.l, alpha);\n\t\t\tthis.setHSL(h, s, l);\n\t\t\treturn this;\n\t\t}\n\n\t\tequals(c) {\n\t\t\treturn c.r === this.r && c.g === this.g && c.b === this.b;\n\t\t}\n\n\t\tfromArray(array, offset = 0) {\n\t\t\tthis.r = array[offset];\n\t\t\tthis.g = array[offset + 1];\n\t\t\tthis.b = array[offset + 2];\n\t\t\treturn this;\n\t\t}\n\n\t\ttoArray(array = [], offset = 0) {\n\t\t\tarray[offset] = this.r;\n\t\t\tarray[offset + 1] = this.g;\n\t\t\tarray[offset + 2] = this.b;\n\t\t\treturn array;\n\t\t}\n\n\t\tfromBufferAttribute(attribute, index) {\n\t\t\tthis.r = attribute.getX(index);\n\t\t\tthis.g = attribute.getY(index);\n\t\t\tthis.b = attribute.getZ(index);\n\n\t\t\tif (attribute.normalized === true) {\n\t\t\t\t// assuming Uint8Array\n\t\t\t\tthis.r /= 255;\n\t\t\t\tthis.g /= 255;\n\t\t\t\tthis.b /= 255;\n\t\t\t}\n\n\t\t\treturn this;\n\t\t}\n\n\t\ttoJSON() {\n\t\t\treturn this.getHex();\n\t\t}\n\n\t}\n\n\tColor.NAMES = _colorKeywords;\n\tColor.prototype.isColor = true;\n\tColor.prototype.r = 1;\n\tColor.prototype.g = 1;\n\tColor.prototype.b = 1;\n\n\t/**\n\t * parameters = {\n\t *\tcolor: <hex>,\n\t *\topacity: <float>,\n\t *\tmap: new THREE.Texture( <Image> ),\n\t *\n\t *\tlightMap: new THREE.Texture( <Image> ),\n\t *\tlightMapIntensity: <float>\n\t *\n\t *\taoMap: new THREE.Texture( <Image> ),\n\t *\taoMapIntensity: <float>\n\t *\n\t *\tspecularMap: new THREE.Texture( <Image> ),\n\t *\n\t *\talphaMap: new THREE.Texture( <Image> ),\n\t *\n\t *\tenvMap: new THREE.CubeTexture( [posx, negx, posy, negy, posz, negz] ),\n\t *\tcombine: THREE.Multiply,\n\t *\treflectivity: <float>,\n\t *\trefractionRatio: <float>,\n\t *\n\t *\tdepthTest: <bool>,\n\t *\tdepthWrite: <bool>,\n\t *\n\t *\twireframe: <boolean>,\n\t *\twireframeLinewidth: <float>,\n\t * }\n\t */\n\n\tclass MeshBasicMaterial extends Material {\n\t\tconstructor(parameters) {\n\t\t\tsuper();\n\t\t\tthis.type = 'MeshBasicMaterial';\n\t\t\tthis.color = new Color(0xffffff); // emissive\n\n\t\t\tthis.map = null;\n\t\t\tthis.lightMap = null;\n\t\t\tthis.lightMapIntensity = 1.0;\n\t\t\tthis.aoMap = null;\n\t\t\tthis.aoMapIntensity = 1.0;\n\t\t\tthis.specularMap = null;\n\t\t\tthis.alphaMap = null;\n\t\t\tthis.envMap = null;\n\t\t\tthis.combine = MultiplyOperation;\n\t\t\tthis.reflectivity = 1;\n\t\t\tthis.refractionRatio = 0.98;\n\t\t\tthis.wireframe = false;\n\t\t\tthis.wireframeLinewidth = 1;\n\t\t\tthis.wireframeLinecap = 'round';\n\t\t\tthis.wireframeLinejoin = 'round';\n\t\t\tthis.setValues(parameters);\n\t\t}\n\n\t\tcopy(source) {\n\t\t\tsuper.copy(source);\n\t\t\tthis.color.copy(source.color);\n\t\t\tthis.map = source.map;\n\t\t\tthis.lightMap = source.lightMap;\n\t\t\tthis.lightMapIntensity = source.lightMapIntensity;\n\t\t\tthis.aoMap = source.aoMap;\n\t\t\tthis.aoMapIntensity = source.aoMapIntensity;\n\t\t\tthis.specularMap = source.specularMap;\n\t\t\tthis.alphaMap = source.alphaMap;\n\t\t\tthis.envMap = source.envMap;\n\t\t\tthis.combine = source.combine;\n\t\t\tthis.reflectivity = source.reflectivity;\n\t\t\tthis.refractionRatio = source.refractionRatio;\n\t\t\tthis.wireframe = source.wireframe;\n\t\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\t\t\tthis.wireframeLinecap = source.wireframeLinecap;\n\t\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\t\t\treturn this;\n\t\t}\n\n\t}\n\n\tMeshBasicMaterial.prototype.isMeshBasicMaterial = true;\n\n\tconst _vector$9 = /*@__PURE__*/new Vector3();\n\n\tconst _vector2$1 = /*@__PURE__*/new Vector2();\n\n\tclass BufferAttribute {\n\t\tconstructor(array, itemSize, normalized) {\n\t\t\tif (Array.isArray(array)) {\n\t\t\t\tthrow new TypeError('THREE.BufferAttribute: array should be a Typed Array.');\n\t\t\t}\n\n\t\t\tthis.name = '';\n\t\t\tthis.array = array;\n\t\t\tthis.itemSize = itemSize;\n\t\t\tthis.count = array !== undefined ? array.length / itemSize : 0;\n\t\t\tthis.normalized = normalized === true;\n\t\t\tthis.usage = StaticDrawUsage;\n\t\t\tthis.updateRange = {\n\t\t\t\toffset: 0,\n\t\t\t\tcount: -1\n\t\t\t};\n\t\t\tthis.version = 0;\n\t\t}\n\n\t\tonUploadCallback() {}\n\n\t\tset needsUpdate(value) {\n\t\t\tif (value === true) this.version++;\n\t\t}\n\n\t\tsetUsage(value) {\n\t\t\tthis.usage = value;\n\t\t\treturn this;\n\t\t}\n\n\t\tcopy(source) {\n\t\t\tthis.name = source.name;\n\t\t\tthis.array = new source.array.constructor(source.array);\n\t\t\tthis.itemSize = source.itemSize;\n\t\t\tthis.count = source.count;\n\t\t\tthis.normalized = source.normalized;\n\t\t\tthis.usage = source.usage;\n\t\t\treturn this;\n\t\t}\n\n\t\tcopyAt(index1, attribute, index2) {\n\t\t\tindex1 *= this.itemSize;\n\t\t\tindex2 *= attribute.itemSize;\n\n\t\t\tfor (let i = 0, l = this.itemSize; i < l; i++) {\n\t\t\t\tthis.array[index1 + i] = attribute.array[index2 + i];\n\t\t\t}\n\n\t\t\treturn this;\n\t\t}\n\n\t\tcopyArray(array) {\n\t\t\tthis.array.set(array);\n\t\t\treturn this;\n\t\t}\n\n\t\tcopyColorsArray(colors) {\n\t\t\tconst array = this.array;\n\t\t\tlet offset = 0;\n\n\t\t\tfor (let i = 0, l = colors.length; i < l; i++) {\n\t\t\t\tlet color = colors[i];\n\n\t\t\t\tif (color === undefined) {\n\t\t\t\t\tconsole.warn('THREE.BufferAttribute.copyColorsArray(): color is undefined', i);\n\t\t\t\t\tcolor = new Color();\n\t\t\t\t}\n\n\t\t\t\tarray[offset++] = color.r;\n\t\t\t\tarray[offset++] = color.g;\n\t\t\t\tarray[offset++] = color.b;\n\t\t\t}\n\n\t\t\treturn this;\n\t\t}\n\n\t\tcopyVector2sArray(vectors) {\n\t\t\tconst array = this.array;\n\t\t\tlet offset = 0;\n\n\t\t\tfor (let i = 0, l = vectors.length; i < l; i++) {\n\t\t\t\tlet vector = vectors[i];\n\n\t\t\t\tif (vector === undefined) {\n\t\t\t\t\tconsole.warn('THREE.BufferAttribute.copyVector2sArray(): vector is undefined', i);\n\t\t\t\t\tvector = new Vector2();\n\t\t\t\t}\n\n\t\t\t\tarray[offset++] = vector.x;\n\t\t\t\tarray[offset++] = vector.y;\n\t\t\t}\n\n\t\t\treturn this;\n\t\t}\n\n\t\tcopyVector3sArray(vectors) {\n\t\t\tconst array = this.array;\n\t\t\tlet offset = 0;\n\n\t\t\tfor (let i = 0, l = vectors.length; i < l; i++) {\n\t\t\t\tlet vector = vectors[i];\n\n\t\t\t\tif (vector === undefined) {\n\t\t\t\t\tconsole.warn('THREE.BufferAttribute.copyVector3sArray(): vector is undefined', i);\n\t\t\t\t\tvector = new Vector3();\n\t\t\t\t}\n\n\t\t\t\tarray[offset++] = vector.x;\n\t\t\t\tarray[offset++] = vector.y;\n\t\t\t\tarray[offset++] = vector.z;\n\t\t\t}\n\n\t\t\treturn this;\n\t\t}\n\n\t\tcopyVector4sArray(vectors) {\n\t\t\tconst array = this.array;\n\t\t\tlet offset = 0;\n\n\t\t\tfor (let i = 0, l = vectors.length; i < l; i++) {\n\t\t\t\tlet vector = vectors[i];\n\n\t\t\t\tif (vector === undefined) {\n\t\t\t\t\tconsole.warn('THREE.BufferAttribute.copyVector4sArray(): vector is undefined', i);\n\t\t\t\t\tvector = new Vector4();\n\t\t\t\t}\n\n\t\t\t\tarray[offset++] = vector.x;\n\t\t\t\tarray[offset++] = vector.y;\n\t\t\t\tarray[offset++] = vector.z;\n\t\t\t\tarray[offset++] = vector.w;\n\t\t\t}\n\n\t\t\treturn this;\n\t\t}\n\n\t\tapplyMatrix3(m) {\n\t\t\tif (this.itemSize === 2) {\n\t\t\t\tfor (let i = 0, l = this.count; i < l; i++) {\n\t\t\t\t\t_vector2$1.fromBufferAttribute(this, i);\n\n\t\t\t\t\t_vector2$1.applyMatrix3(m);\n\n\t\t\t\t\tthis.setXY(i, _vector2$1.x, _vector2$1.y);\n\t\t\t\t}\n\t\t\t} else if (this.itemSize === 3) {\n\t\t\t\tfor (let i = 0, l = this.count; i < l; i++) {\n\t\t\t\t\t_vector$9.fromBufferAttribute(this, i);\n\n\t\t\t\t\t_vector$9.applyMatrix3(m);\n\n\t\t\t\t\tthis.setXYZ(i, _vector$9.x, _vector$9.y, _vector$9.z);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn this;\n\t\t}\n\n\t\tapplyMatrix4(m) {\n\t\t\tfor (let i = 0, l = this.count; i < l; i++) {\n\t\t\t\t_vector$9.x = this.getX(i);\n\t\t\t\t_vector$9.y = this.getY(i);\n\t\t\t\t_vector$9.z = this.getZ(i);\n\n\t\t\t\t_vector$9.applyMatrix4(m);\n\n\t\t\t\tthis.setXYZ(i, _vector$9.x, _vector$9.y, _vector$9.z);\n\t\t\t}\n\n\t\t\treturn this;\n\t\t}\n\n\t\tapplyNormalMatrix(m) {\n\t\t\tfor (let i = 0, l = this.count; i < l; i++) {\n\t\t\t\t_vector$9.x = this.getX(i);\n\t\t\t\t_vector$9.y = this.getY(i);\n\t\t\t\t_vector$9.z = this.getZ(i);\n\n\t\t\t\t_vector$9.applyNormalMatrix(m);\n\n\t\t\t\tthis.setXYZ(i, _vector$9.x, _vector$9.y, _vector$9.z);\n\t\t\t}\n\n\t\t\treturn this;\n\t\t}\n\n\t\ttransformDirection(m) {\n\t\t\tfor (let i = 0, l = this.count; i < l; i++) {\n\t\t\t\t_vector$9.x = this.getX(i);\n\t\t\t\t_vector$9.y = this.getY(i);\n\t\t\t\t_vector$9.z = this.getZ(i);\n\n\t\t\t\t_vector$9.transformDirection(m);\n\n\t\t\t\tthis.setXYZ(i, _vector$9.x, _vector$9.y, _vector$9.z);\n\t\t\t}\n\n\t\t\treturn this;\n\t\t}\n\n\t\tset(value, offset = 0) {\n\t\t\tthis.array.set(value, offset);\n\t\t\treturn this;\n\t\t}\n\n\t\tgetX(index) {\n\t\t\treturn this.array[index * this.itemSize];\n\t\t}\n\n\t\tsetX(index, x) {\n\t\t\tthis.array[index * this.itemSize] = x;\n\t\t\treturn this;\n\t\t}\n\n\t\tgetY(index) {\n\t\t\treturn this.array[index * this.itemSize + 1];\n\t\t}\n\n\t\tsetY(index, y) {\n\t\t\tthis.array[index * this.itemSize + 1] = y;\n\t\t\treturn this;\n\t\t}\n\n\t\tgetZ(index) {\n\t\t\treturn this.array[index * this.itemSize + 2];\n\t\t}\n\n\t\tsetZ(index, z) {\n\t\t\tthis.array[index * this.itemSize + 2] = z;\n\t\t\treturn this;\n\t\t}\n\n\t\tgetW(index) {\n\t\t\treturn this.array[index * this.itemSize + 3];\n\t\t}\n\n\t\tsetW(index, w) {\n\t\t\tthis.array[index * this.itemSize + 3] = w;\n\t\t\treturn this;\n\t\t}\n\n\t\tsetXY(index, x, y) {\n\t\t\tindex *= this.itemSize;\n\t\t\tthis.array[index + 0] = x;\n\t\t\tthis.array[index + 1] = y;\n\t\t\treturn this;\n\t\t}\n\n\t\tsetXYZ(index, x, y, z) {\n\t\t\tindex *= this.itemSize;\n\t\t\tthis.array[index + 0] = x;\n\t\t\tthis.array[index + 1] = y;\n\t\t\tthis.array[index + 2] = z;\n\t\t\treturn this;\n\t\t}\n\n\t\tsetXYZW(index, x, y, z, w) {\n\t\t\tindex *= this.itemSize;\n\t\t\tthis.array[index + 0] = x;\n\t\t\tthis.array[index + 1] = y;\n\t\t\tthis.array[index + 2] = z;\n\t\t\tthis.array[index + 3] = w;\n\t\t\treturn this;\n\t\t}\n\n\t\tonUpload(callback) {\n\t\t\tthis.onUploadCallback = callback;\n\t\t\treturn this;\n\t\t}\n\n\t\tclone() {\n\t\t\treturn new this.constructor(this.array, this.itemSize).copy(this);\n\t\t}\n\n\t\ttoJSON() {\n\t\t\tconst data = {\n\t\t\t\titemSize: this.itemSize,\n\t\t\t\ttype: this.array.constructor.name,\n\t\t\t\tarray: Array.prototype.slice.call(this.array),\n\t\t\t\tnormalized: this.normalized\n\t\t\t};\n\t\t\tif (this.name !== '') data.name = this.name;\n\t\t\tif (this.usage !== StaticDrawUsage) data.usage = this.usage;\n\t\t\tif (this.updateRange.offset !== 0 || this.updateRange.count !== -1) data.updateRange = this.updateRange;\n\t\t\treturn data;\n\t\t}\n\n\t}\n\n\tBufferAttribute.prototype.isBufferAttribute = true; //\n\n\tclass Int8BufferAttribute extends BufferAttribute {\n\t\tconstructor(array, itemSize, normalized) {\n\t\t\tsuper(new Int8Array(array), itemSize, normalized);\n\t\t}\n\n\t}\n\n\tclass Uint8BufferAttribute extends BufferAttribute {\n\t\tconstructor(array, itemSize, normalized) {\n\t\t\tsuper(new Uint8Array(array), itemSize, normalized);\n\t\t}\n\n\t}\n\n\tclass Uint8ClampedBufferAttribute extends BufferAttribute {\n\t\tconstructor(array, itemSize, normalized) {\n\t\t\tsuper(new Uint8ClampedArray(array), itemSize, normalized);\n\t\t}\n\n\t}\n\n\tclass Int16BufferAttribute extends BufferAttribute {\n\t\tconstructor(array, itemSize, normalized) {\n\t\t\tsuper(new Int16Array(array), itemSize, normalized);\n\t\t}\n\n\t}\n\n\tclass Uint16BufferAttribute extends BufferAttribute {\n\t\tconstructor(array, itemSize, normalized) {\n\t\t\tsuper(new Uint16Array(array), itemSize, normalized);\n\t\t}\n\n\t}\n\n\tclass Int32BufferAttribute extends BufferAttribute {\n\t\tconstructor(array, itemSize, normalized) {\n\t\t\tsuper(new Int32Array(array), itemSize, normalized);\n\t\t}\n\n\t}\n\n\tclass Uint32BufferAttribute extends BufferAttribute {\n\t\tconstructor(array, itemSize, normalized) {\n\t\t\tsuper(new Uint32Array(array), itemSize, normalized);\n\t\t}\n\n\t}\n\n\tclass Float16BufferAttribute extends BufferAttribute {\n\t\tconstructor(array, itemSize, normalized) {\n\t\t\tsuper(new Uint16Array(array), itemSize, normalized);\n\t\t}\n\n\t}\n\n\tFloat16BufferAttribute.prototype.isFloat16BufferAttribute = true;\n\n\tclass Float32BufferAttribute extends BufferAttribute {\n\t\tconstructor(array, itemSize, normalized) {\n\t\t\tsuper(new Float32Array(array), itemSize, normalized);\n\t\t}\n\n\t}\n\n\tclass Float64BufferAttribute extends BufferAttribute {\n\t\tconstructor(array, itemSize, normalized) {\n\t\t\tsuper(new Float64Array(array), itemSize, normalized);\n\t\t}\n\n\t} //\n\n\tlet _id = 0;\n\n\tconst _m1 = /*@__PURE__*/new Matrix4();\n\n\tconst _obj = /*@__PURE__*/new Object3D();\n\n\tconst _offset = /*@__PURE__*/new Vector3();\n\n\tconst _box$1 = /*@__PURE__*/new Box3();\n\n\tconst _boxMorphTargets = /*@__PURE__*/new Box3();\n\n\tconst _vector$8 = /*@__PURE__*/new Vector3();\n\n\tclass BufferGeometry extends EventDispatcher {\n\t\tconstructor() {\n\t\t\tsuper();\n\t\t\tObject.defineProperty(this, 'id', {\n\t\t\t\tvalue: _id++\n\t\t\t});\n\t\t\tthis.uuid = generateUUID();\n\t\t\tthis.name = '';\n\t\t\tthis.type = 'BufferGeometry';\n\t\t\tthis.index = null;\n\t\t\tthis.attributes = {};\n\t\t\tthis.morphAttributes = {};\n\t\t\tthis.morphTargetsRelative = false;\n\t\t\tthis.groups = [];\n\t\t\tthis.boundingBox = null;\n\t\t\tthis.boundingSphere = null;\n\t\t\tthis.drawRange = {\n\t\t\t\tstart: 0,\n\t\t\t\tcount: Infinity\n\t\t\t};\n\t\t\tthis.userData = {};\n\t\t}\n\n\t\tgetIndex() {\n\t\t\treturn this.index;\n\t\t}\n\n\t\tsetIndex(index) {\n\t\t\tif (Array.isArray(index)) {\n\t\t\t\tthis.index = new (arrayMax(index) > 65535 ? Uint32BufferAttribute : Uint16BufferAttribute)(index, 1);\n\t\t\t} else {\n\t\t\t\tthis.index = index;\n\t\t\t}\n\n\t\t\treturn this;\n\t\t}\n\n\t\tgetAttribute(name) {\n\t\t\treturn this.attributes[name];\n\t\t}\n\n\t\tsetAttribute(name, attribute) {\n\t\t\tthis.attributes[name] = attribute;\n\t\t\treturn this;\n\t\t}\n\n\t\tdeleteAttribute(name) {\n\t\t\tdelete this.attributes[name];\n\t\t\treturn this;\n\t\t}\n\n\t\thasAttribute(name) {\n\t\t\treturn this.attributes[name] !== undefined;\n\t\t}\n\n\t\taddGroup(start, count, materialIndex = 0) {\n\t\t\tthis.groups.push({\n\t\t\t\tstart: start,\n\t\t\t\tcount: count,\n\t\t\t\tmaterialIndex: materialIndex\n\t\t\t});\n\t\t}\n\n\t\tclearGroups() {\n\t\t\tthis.groups = [];\n\t\t}\n\n\t\tsetDrawRange(start, count) {\n\t\t\tthis.drawRange.start = start;\n\t\t\tthis.drawRange.count = count;\n\t\t}\n\n\t\tapplyMatrix4(matrix) {\n\t\t\tconst position = this.attributes.position;\n\n\t\t\tif (position !== undefined) {\n\t\t\t\tposition.applyMatrix4(matrix);\n\t\t\t\tposition.needsUpdate = true;\n\t\t\t}\n\n\t\t\tconst normal = this.attributes.normal;\n\n\t\t\tif (normal !== undefined) {\n\t\t\t\tconst normalMatrix = new Matrix3().getNormalMatrix(matrix);\n\t\t\t\tnormal.applyNormalMatrix(normalMatrix);\n\t\t\t\tnormal.needsUpdate = true;\n\t\t\t}\n\n\t\t\tconst tangent = this.attributes.tangent;\n\n\t\t\tif (tangent !== undefined) {\n\t\t\t\ttangent.transformDirection(matrix);\n\t\t\t\ttangent.needsUpdate = true;\n\t\t\t}\n\n\t\t\tif (this.boundingBox !== null) {\n\t\t\t\tthis.computeBoundingBox();\n\t\t\t}\n\n\t\t\tif (this.boundingSphere !== null) {\n\t\t\t\tthis.computeBoundingSphere();\n\t\t\t}\n\n\t\t\treturn this;\n\t\t}\n\n\t\tapplyQuaternion(q) {\n\t\t\t_m1.makeRotationFromQuaternion(q);\n\n\t\t\tthis.applyMatrix4(_m1);\n\t\t\treturn this;\n\t\t}\n\n\t\trotateX(angle) {\n\t\t\t// rotate geometry around world x-axis\n\t\t\t_m1.makeRotationX(angle);\n\n\t\t\tthis.applyMatrix4(_m1);\n\t\t\treturn this;\n\t\t}\n\n\t\trotateY(angle) {\n\t\t\t// rotate geometry around world y-axis\n\t\t\t_m1.makeRotationY(angle);\n\n\t\t\tthis.applyMatrix4(_m1);\n\t\t\treturn this;\n\t\t}\n\n\t\trotateZ(angle) {\n\t\t\t// rotate geometry around world z-axis\n\t\t\t_m1.makeRotationZ(angle);\n\n\t\t\tthis.applyMatrix4(_m1);\n\t\t\treturn this;\n\t\t}\n\n\t\ttranslate(x, y, z) {\n\t\t\t// translate geometry\n\t\t\t_m1.makeTranslation(x, y, z);\n\n\t\t\tthis.applyMatrix4(_m1);\n\t\t\treturn this;\n\t\t}\n\n\t\tscale(x, y, z) {\n\t\t\t// scale geometry\n\t\t\t_m1.makeScale(x, y, z);\n\n\t\t\tthis.applyMatrix4(_m1);\n\t\t\treturn this;\n\t\t}\n\n\t\tlookAt(vector) {\n\t\t\t_obj.lookAt(vector);\n\n\t\t\t_obj.updateMatrix();\n\n\t\t\tthis.applyMatrix4(_obj.matrix);\n\t\t\treturn this;\n\t\t}\n\n\t\tcenter() {\n\t\t\tthis.computeBoundingBox();\n\t\t\tthis.boundingBox.getCenter(_offset).negate();\n\t\t\tthis.translate(_offset.x, _offset.y, _offset.z);\n\t\t\treturn this;\n\t\t}\n\n\t\tsetFromPoints(points) {\n\t\t\tconst position = [];\n\n\t\t\tfor (let i = 0, l = points.length; i < l; i++) {\n\t\t\t\tconst point = points[i];\n\t\t\t\tposition.push(point.x, point.y, point.z || 0);\n\t\t\t}\n\n\t\t\tthis.setAttribute('position', new Float32BufferAttribute(position, 3));\n\t\t\treturn this;\n\t\t}\n\n\t\tcomputeBoundingBox() {\n\t\t\tif (this.boundingBox === null) {\n\t\t\t\tthis.boundingBox = new Box3();\n\t\t\t}\n\n\t\t\tconst position = this.attributes.position;\n\t\t\tconst morphAttributesPosition = this.morphAttributes.position;\n\n\t\t\tif (position && position.isGLBufferAttribute) {\n\t\t\t\tconsole.error('THREE.BufferGeometry.computeBoundingBox(): GLBufferAttribute requires a manual bounding box. Alternatively set \"mesh.frustumCulled\" to \"false\".', this);\n\t\t\t\tthis.boundingBox.set(new Vector3(-Infinity, -Infinity, -Infinity), new Vector3(+Infinity, +Infinity, +Infinity));\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (position !== undefined) {\n\t\t\t\tthis.boundingBox.setFromBufferAttribute(position); // process morph attributes if present\n\n\t\t\t\tif (morphAttributesPosition) {\n\t\t\t\t\tfor (let i = 0, il = morphAttributesPosition.length; i < il; i++) {\n\t\t\t\t\t\tconst morphAttribute = morphAttributesPosition[i];\n\n\t\t\t\t\t\t_box$1.setFromBufferAttribute(morphAttribute);\n\n\t\t\t\t\t\tif (this.morphTargetsRelative) {\n\t\t\t\t\t\t\t_vector$8.addVectors(this.boundingBox.min, _box$1.min);\n\n\t\t\t\t\t\t\tthis.boundingBox.expandByPoint(_vector$8);\n\n\t\t\t\t\t\t\t_vector$8.addVectors(this.boundingBox.max, _box$1.max);\n\n\t\t\t\t\t\t\tthis.boundingBox.expandByPoint(_vector$8);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tthis.boundingBox.expandByPoint(_box$1.min);\n\t\t\t\t\t\t\tthis.boundingBox.expandByPoint(_box$1.max);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tthis.boundingBox.makeEmpty();\n\t\t\t}\n\n\t\t\tif (isNaN(this.boundingBox.min.x) || isNaN(this.boundingBox.min.y) || isNaN(this.boundingBox.min.z)) {\n\t\t\t\tconsole.error('THREE.BufferGeometry.computeBoundingBox(): Computed min/max have NaN values. The \"position\" attribute is likely to have NaN values.', this);\n\t\t\t}\n\t\t}\n\n\t\tcomputeBoundingSphere() {\n\t\t\tif (this.boundingSphere === null) {\n\t\t\t\tthis.boundingSphere = new Sphere();\n\t\t\t}\n\n\t\t\tconst position = this.attributes.position;\n\t\t\tconst morphAttributesPosition = this.morphAttributes.position;\n\n\t\t\tif (position && position.isGLBufferAttribute) {\n\t\t\t\tconsole.error('THREE.BufferGeometry.computeBoundingSphere(): GLBufferAttribute requires a manual bounding sphere. Alternatively set \"mesh.frustumCulled\" to \"false\".', this);\n\t\t\t\tthis.boundingSphere.set(new Vector3(), Infinity);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (position) {\n\t\t\t\t// first, find the center of the bounding sphere\n\t\t\t\tconst center = this.boundingSphere.center;\n\n\t\t\t\t_box$1.setFromBufferAttribute(position); // process morph attributes if present\n\n\n\t\t\t\tif (morphAttributesPosition) {\n\t\t\t\t\tfor (let i = 0, il = morphAttributesPosition.length; i < il; i++) {\n\t\t\t\t\t\tconst morphAttribute = morphAttributesPosition[i];\n\n\t\t\t\t\t\t_boxMorphTargets.setFromBufferAttribute(morphAttribute);\n\n\t\t\t\t\t\tif (this.morphTargetsRelative) {\n\t\t\t\t\t\t\t_vector$8.addVectors(_box$1.min, _boxMorphTargets.min);\n\n\t\t\t\t\t\t\t_box$1.expandByPoint(_vector$8);\n\n\t\t\t\t\t\t\t_vector$8.addVectors(_box$1.max, _boxMorphTargets.max);\n\n\t\t\t\t\t\t\t_box$1.expandByPoint(_vector$8);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t_box$1.expandByPoint(_boxMorphTargets.min);\n\n\t\t\t\t\t\t\t_box$1.expandByPoint(_boxMorphTargets.max);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t_box$1.getCenter(center); // second, try to find a boundingSphere with a radius smaller than the\n\t\t\t\t// boundingSphere of the boundingBox: sqrt(3) smaller in the best case\n\n\n\t\t\t\tlet maxRadiusSq = 0;\n\n\t\t\t\tfor (let i = 0, il = position.count; i < il; i++) {\n\t\t\t\t\t_vector$8.fromBufferAttribute(position, i);\n\n\t\t\t\t\tmaxRadiusSq = Math.max(maxRadiusSq, center.distanceToSquared(_vector$8));\n\t\t\t\t} // process morph attributes if present\n\n\n\t\t\t\tif (morphAttributesPosition) {\n\t\t\t\t\tfor (let i = 0, il = morphAttributesPosition.length; i < il; i++) {\n\t\t\t\t\t\tconst morphAttribute = morphAttributesPosition[i];\n\t\t\t\t\t\tconst morphTargetsRelative = this.morphTargetsRelative;\n\n\t\t\t\t\t\tfor (let j = 0, jl = morphAttribute.count; j < jl; j++) {\n\t\t\t\t\t\t\t_vector$8.fromBufferAttribute(morphAttribute, j);\n\n\t\t\t\t\t\t\tif (morphTargetsRelative) {\n\t\t\t\t\t\t\t\t_offset.fromBufferAttribute(position, j);\n\n\t\t\t\t\t\t\t\t_vector$8.add(_offset);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tmaxRadiusSq = Math.max(maxRadiusSq, center.distanceToSquared(_vector$8));\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tthis.boundingSphere.radius = Math.sqrt(maxRadiusSq);\n\n\t\t\t\tif (isNaN(this.boundingSphere.radius)) {\n\t\t\t\t\tconsole.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The \"position\" attribute is likely to have NaN values.', this);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tcomputeTangents() {\n\t\t\tconst index = this.index;\n\t\t\tconst attributes = this.attributes; // based on http://www.terathon.com/code/tangent.html\n\t\t\t// (per vertex tangents)\n\n\t\t\tif (index === null || attributes.position === undefined || attributes.normal === undefined || attributes.uv === undefined) {\n\t\t\t\tconsole.error('THREE.BufferGeometry: .computeTangents() failed. Missing required attributes (index, position, normal or uv)');\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst indices = index.array;\n\t\t\tconst positions = attributes.position.array;\n\t\t\tconst normals = attributes.normal.array;\n\t\t\tconst uvs = attributes.uv.array;\n\t\t\tconst nVertices = positions.length / 3;\n\n\t\t\tif (attributes.tangent === undefined) {\n\t\t\t\tthis.setAttribute('tangent', new BufferAttribute(new Float32Array(4 * nVertices), 4));\n\t\t\t}\n\n\t\t\tconst tangents = attributes.tangent.array;\n\t\t\tconst tan1 = [],\n\t\t\t\t\t\ttan2 = [];\n\n\t\t\tfor (let i = 0; i < nVertices; i++) {\n\t\t\t\ttan1[i] = new Vector3();\n\t\t\t\ttan2[i] = new Vector3();\n\t\t\t}\n\n\t\t\tconst vA = new Vector3(),\n\t\t\t\t\t\tvB = new Vector3(),\n\t\t\t\t\t\tvC = new Vector3(),\n\t\t\t\t\t\tuvA = new Vector2(),\n\t\t\t\t\t\tuvB = new Vector2(),\n\t\t\t\t\t\tuvC = new Vector2(),\n\t\t\t\t\t\tsdir = new Vector3(),\n\t\t\t\t\t\ttdir = new Vector3();\n\n\t\t\tfunction handleTriangle(a, b, c) {\n\t\t\t\tvA.fromArray(positions, a * 3);\n\t\t\t\tvB.fromArray(positions, b * 3);\n\t\t\t\tvC.fromArray(positions, c * 3);\n\t\t\t\tuvA.fromArray(uvs, a * 2);\n\t\t\t\tuvB.fromArray(uvs, b * 2);\n\t\t\t\tuvC.fromArray(uvs, c * 2);\n\t\t\t\tvB.sub(vA);\n\t\t\t\tvC.sub(vA);\n\t\t\t\tuvB.sub(uvA);\n\t\t\t\tuvC.sub(uvA);\n\t\t\t\tconst r = 1.0 / (uvB.x * uvC.y - uvC.x * uvB.y); // silently ignore degenerate uv triangles having coincident or colinear vertices\n\n\t\t\t\tif (!isFinite(r)) return;\n\t\t\t\tsdir.copy(vB).multiplyScalar(uvC.y).addScaledVector(vC, -uvB.y).multiplyScalar(r);\n\t\t\t\ttdir.copy(vC).multiplyScalar(uvB.x).addScaledVector(vB, -uvC.x).multiplyScalar(r);\n\t\t\t\ttan1[a].add(sdir);\n\t\t\t\ttan1[b].add(sdir);\n\t\t\t\ttan1[c].add(sdir);\n\t\t\t\ttan2[a].add(tdir);\n\t\t\t\ttan2[b].add(tdir);\n\t\t\t\ttan2[c].add(tdir);\n\t\t\t}\n\n\t\t\tlet groups = this.groups;\n\n\t\t\tif (groups.length === 0) {\n\t\t\t\tgroups = [{\n\t\t\t\t\tstart: 0,\n\t\t\t\t\tcount: indices.length\n\t\t\t\t}];\n\t\t\t}\n\n\t\t\tfor (let i = 0, il = groups.length; i < il; ++i) {\n\t\t\t\tconst group = groups[i];\n\t\t\t\tconst start = group.start;\n\t\t\t\tconst count = group.count;\n\n\t\t\t\tfor (let j = start, jl = start + count; j < jl; j += 3) {\n\t\t\t\t\thandleTriangle(indices[j + 0], indices[j + 1], indices[j + 2]);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst tmp = new Vector3(),\n\t\t\t\t\t\ttmp2 = new Vector3();\n\t\t\tconst n = new Vector3(),\n\t\t\t\t\t\tn2 = new Vector3();\n\n\t\t\tfunction handleVertex(v) {\n\t\t\t\tn.fromArray(normals, v * 3);\n\t\t\t\tn2.copy(n);\n\t\t\t\tconst t = tan1[v]; // Gram-Schmidt orthogonalize\n\n\t\t\t\ttmp.copy(t);\n\t\t\t\ttmp.sub(n.multiplyScalar(n.dot(t))).normalize(); // Calculate handedness\n\n\t\t\t\ttmp2.crossVectors(n2, t);\n\t\t\t\tconst test = tmp2.dot(tan2[v]);\n\t\t\t\tconst w = test < 0.0 ? -1.0 : 1.0;\n\t\t\t\ttangents[v * 4] = tmp.x;\n\t\t\t\ttangents[v * 4 + 1] = tmp.y;\n\t\t\t\ttangents[v * 4 + 2] = tmp.z;\n\t\t\t\ttangents[v * 4 + 3] = w;\n\t\t\t}\n\n\t\t\tfor (let i = 0, il = groups.length; i < il; ++i) {\n\t\t\t\tconst group = groups[i];\n\t\t\t\tconst start = group.start;\n\t\t\t\tconst count = group.count;\n\n\t\t\t\tfor (let j = start, jl = start + count; j < jl; j += 3) {\n\t\t\t\t\thandleVertex(indices[j + 0]);\n\t\t\t\t\thandleVertex(indices[j + 1]);\n\t\t\t\t\thandleVertex(indices[j + 2]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tcomputeVertexNormals() {\n\t\t\tconst index = this.index;\n\t\t\tconst positionAttribute = this.getAttribute('position');\n\n\t\t\tif (positionAttribute !== undefined) {\n\t\t\t\tlet normalAttribute = this.getAttribute('normal');\n\n\t\t\t\tif (normalAttribute === undefined) {\n\t\t\t\t\tnormalAttribute = new BufferAttribute(new Float32Array(positionAttribute.count * 3), 3);\n\t\t\t\t\tthis.setAttribute('normal', normalAttribute);\n\t\t\t\t} else {\n\t\t\t\t\t// reset existing normals to zero\n\t\t\t\t\tfor (let i = 0, il = normalAttribute.count; i < il; i++) {\n\t\t\t\t\t\tnormalAttribute.setXYZ(i, 0, 0, 0);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tconst pA = new Vector3(),\n\t\t\t\t\t\t\tpB = new Vector3(),\n\t\t\t\t\t\t\tpC = new Vector3();\n\t\t\t\tconst nA = new Vector3(),\n\t\t\t\t\t\t\tnB = new Vector3(),\n\t\t\t\t\t\t\tnC = new Vector3();\n\t\t\t\tconst cb = new Vector3(),\n\t\t\t\t\t\t\tab = new Vector3(); // indexed elements\n\n\t\t\t\tif (index) {\n\t\t\t\t\tfor (let i = 0, il = index.count; i < il; i += 3) {\n\t\t\t\t\t\tconst vA = index.getX(i + 0);\n\t\t\t\t\t\tconst vB = index.getX(i + 1);\n\t\t\t\t\t\tconst vC = index.getX(i + 2);\n\t\t\t\t\t\tpA.fromBufferAttribute(positionAttribute, vA);\n\t\t\t\t\t\tpB.fromBufferAttribute(positionAttribute, vB);\n\t\t\t\t\t\tpC.fromBufferAttribute(positionAttribute, vC);\n\t\t\t\t\t\tcb.subVectors(pC, pB);\n\t\t\t\t\t\tab.subVectors(pA, pB);\n\t\t\t\t\t\tcb.cross(ab);\n\t\t\t\t\t\tnA.fromBufferAttribute(normalAttribute, vA);\n\t\t\t\t\t\tnB.fromBufferAttribute(normalAttribute, vB);\n\t\t\t\t\t\tnC.fromBufferAttribute(normalAttribute, vC);\n\t\t\t\t\t\tnA.add(cb);\n\t\t\t\t\t\tnB.add(cb);\n\t\t\t\t\t\tnC.add(cb);\n\t\t\t\t\t\tnormalAttribute.setXYZ(vA, nA.x, nA.y, nA.z);\n\t\t\t\t\t\tnormalAttribute.setXYZ(vB, nB.x, nB.y, nB.z);\n\t\t\t\t\t\tnormalAttribute.setXYZ(vC, nC.x, nC.y, nC.z);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\t// non-indexed elements (unconnected triangle soup)\n\t\t\t\t\tfor (let i = 0, il = positionAttribute.count; i < il; i += 3) {\n\t\t\t\t\t\tpA.fromBufferAttribute(positionAttribute, i + 0);\n\t\t\t\t\t\tpB.fromBufferAttribute(positionAttribute, i + 1);\n\t\t\t\t\t\tpC.fromBufferAttribute(positionAttribute, i + 2);\n\t\t\t\t\t\tcb.subVectors(pC, pB);\n\t\t\t\t\t\tab.subVectors(pA, pB);\n\t\t\t\t\t\tcb.cross(ab);\n\t\t\t\t\t\tnormalAttribute.setXYZ(i + 0, cb.x, cb.y, cb.z);\n\t\t\t\t\t\tnormalAttribute.setXYZ(i + 1, cb.x, cb.y, cb.z);\n\t\t\t\t\t\tnormalAttribute.setXYZ(i + 2, cb.x, cb.y, cb.z);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tthis.normalizeNormals();\n\t\t\t\tnormalAttribute.needsUpdate = true;\n\t\t\t}\n\t\t}\n\n\t\tmerge(geometry, offset) {\n\t\t\tif (!(geometry && geometry.isBufferGeometry)) {\n\t\t\t\tconsole.error('THREE.BufferGeometry.merge(): geometry not an instance of THREE.BufferGeometry.', geometry);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (offset === undefined) {\n\t\t\t\toffset = 0;\n\t\t\t\tconsole.warn('THREE.BufferGeometry.merge(): Overwriting original geometry, starting at offset=0. ' + 'Use BufferGeometryUtils.mergeBufferGeometries() for lossless merge.');\n\t\t\t}\n\n\t\t\tconst attributes = this.attributes;\n\n\t\t\tfor (const key in attributes) {\n\t\t\t\tif (geometry.attributes[key] === undefined) continue;\n\t\t\t\tconst attribute1 = attributes[key];\n\t\t\t\tconst attributeArray1 = attribute1.array;\n\t\t\t\tconst attribute2 = geometry.attributes[key];\n\t\t\t\tconst attributeArray2 = attribute2.array;\n\t\t\t\tconst attributeOffset = attribute2.itemSize * offset;\n\t\t\t\tconst length = Math.min(attributeArray2.length, attributeArray1.length - attributeOffset);\n\n\t\t\t\tfor (let i = 0, j = attributeOffset; i < length; i++, j++) {\n\t\t\t\t\tattributeArray1[j] = attributeArray2[i];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn this;\n\t\t}\n\n\t\tnormalizeNormals() {\n\t\t\tconst normals = this.attributes.normal;\n\n\t\t\tfor (let i = 0, il = normals.count; i < il; i++) {\n\t\t\t\t_vector$8.fromBufferAttribute(normals, i);\n\n\t\t\t\t_vector$8.normalize();\n\n\t\t\t\tnormals.setXYZ(i, _vector$8.x, _vector$8.y, _vector$8.z);\n\t\t\t}\n\t\t}\n\n\t\ttoNonIndexed() {\n\t\t\tfunction convertBufferAttribute(attribute, indices) {\n\t\t\t\tconst array = attribute.array;\n\t\t\t\tconst itemSize = attribute.itemSize;\n\t\t\t\tconst normalized = attribute.normalized;\n\t\t\t\tconst array2 = new array.constructor(indices.length * itemSize);\n\t\t\t\tlet index = 0,\n\t\t\t\t\t\tindex2 = 0;\n\n\t\t\t\tfor (let i = 0, l = indices.length; i < l; i++) {\n\t\t\t\t\tif (attribute.isInterleavedBufferAttribute) {\n\t\t\t\t\t\tindex = indices[i] * attribute.data.stride + attribute.offset;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tindex = indices[i] * itemSize;\n\t\t\t\t\t}\n\n\t\t\t\t\tfor (let j = 0; j < itemSize; j++) {\n\t\t\t\t\t\tarray2[index2++] = array[index++];\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn new BufferAttribute(array2, itemSize, normalized);\n\t\t\t} //\n\n\n\t\t\tif (this.index === null) {\n\t\t\t\tconsole.warn('THREE.BufferGeometry.toNonIndexed(): BufferGeometry is already non-indexed.');\n\t\t\t\treturn this;\n\t\t\t}\n\n\t\t\tconst geometry2 = new BufferGeometry();\n\t\t\tconst indices = this.index.array;\n\t\t\tconst attributes = this.attributes; // attributes\n\n\t\t\tfor (const name in attributes) {\n\t\t\t\tconst attribute = attributes[name];\n\t\t\t\tconst newAttribute = convertBufferAttribute(attribute, indices);\n\t\t\t\tgeometry2.setAttribute(name, newAttribute);\n\t\t\t} // morph attributes\n\n\n\t\t\tconst morphAttributes = this.morphAttributes;\n\n\t\t\tfor (const name in morphAttributes) {\n\t\t\t\tconst morphArray = [];\n\t\t\t\tconst morphAttribute = morphAttributes[name]; // morphAttribute: array of Float32BufferAttributes\n\n\t\t\t\tfor (let i = 0, il = morphAttribute.length; i < il; i++) {\n\t\t\t\t\tconst attribute = morphAttribute[i];\n\t\t\t\t\tconst newAttribute = convertBufferAttribute(attribute, indices);\n\t\t\t\t\tmorphArray.push(newAttribute);\n\t\t\t\t}\n\n\t\t\t\tgeometry2.morphAttributes[name] = morphArray;\n\t\t\t}\n\n\t\t\tgeometry2.morphTargetsRelative = this.morphTargetsRelative; // groups\n\n\t\t\tconst groups = this.groups;\n\n\t\t\tfor (let i = 0, l = groups.length; i < l; i++) {\n\t\t\t\tconst group = groups[i];\n\t\t\t\tgeometry2.addGroup(group.start, group.count, group.materialIndex);\n\t\t\t}\n\n\t\t\treturn geometry2;\n\t\t}\n\n\t\ttoJSON() {\n\t\t\tconst data = {\n\t\t\t\tmetadata: {\n\t\t\t\t\tversion: 4.5,\n\t\t\t\t\ttype: 'BufferGeometry',\n\t\t\t\t\tgenerator: 'BufferGeometry.toJSON'\n\t\t\t\t}\n\t\t\t}; // standard BufferGeometry serialization\n\n\t\t\tdata.uuid = this.uuid;\n\t\t\tdata.type = this.type;\n\t\t\tif (this.name !== '') data.name = this.name;\n\t\t\tif (Object.keys(this.userData).length > 0) data.userData = this.userData;\n\n\t\t\tif (this.parameters !== undefined) {\n\t\t\t\tconst parameters = this.parameters;\n\n\t\t\t\tfor (const key in parameters) {\n\t\t\t\t\tif (parameters[key] !== undefined) data[key] = parameters[key];\n\t\t\t\t}\n\n\t\t\t\treturn data;\n\t\t\t} // for simplicity the code assumes attributes are not shared across geometries, see #15811\n\n\n\t\t\tdata.data = {\n\t\t\t\tattributes: {}\n\t\t\t};\n\t\t\tconst index = this.index;\n\n\t\t\tif (index !== null) {\n\t\t\t\tdata.data.index = {\n\t\t\t\t\ttype: index.array.constructor.name,\n\t\t\t\t\tarray: Array.prototype.slice.call(index.array)\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tconst attributes = this.attributes;\n\n\t\t\tfor (const key in attributes) {\n\t\t\t\tconst attribute = attributes[key];\n\t\t\t\tdata.data.attributes[key] = attribute.toJSON(data.data);\n\t\t\t}\n\n\t\t\tconst morphAttributes = {};\n\t\t\tlet hasMorphAttributes = false;\n\n\t\t\tfor (const key in this.morphAttributes) {\n\t\t\t\tconst attributeArray = this.morphAttributes[key];\n\t\t\t\tconst array = [];\n\n\t\t\t\tfor (let i = 0, il = attributeArray.length; i < il; i++) {\n\t\t\t\t\tconst attribute = attributeArray[i];\n\t\t\t\t\tarray.push(attribute.toJSON(data.data));\n\t\t\t\t}\n\n\t\t\t\tif (array.length > 0) {\n\t\t\t\t\tmorphAttributes[key] = array;\n\t\t\t\t\thasMorphAttributes = true;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (hasMorphAttributes) {\n\t\t\t\tdata.data.morphAttributes = morphAttributes;\n\t\t\t\tdata.data.morphTargetsRelative = this.morphTargetsRelative;\n\t\t\t}\n\n\t\t\tconst groups = this.groups;\n\n\t\t\tif (groups.length > 0) {\n\t\t\t\tdata.data.groups = JSON.parse(JSON.stringify(groups));\n\t\t\t}\n\n\t\t\tconst boundingSphere = this.boundingSphere;\n\n\t\t\tif (boundingSphere !== null) {\n\t\t\t\tdata.data.boundingSphere = {\n\t\t\t\t\tcenter: boundingSphere.center.toArray(),\n\t\t\t\t\tradius: boundingSphere.radius\n\t\t\t\t};\n\t\t\t}\n\n\t\t\treturn data;\n\t\t}\n\n\t\tclone() {\n\t\t\treturn new this.constructor().copy(this);\n\t\t}\n\n\t\tcopy(source) {\n\t\t\t// reset\n\t\t\tthis.index = null;\n\t\t\tthis.attributes = {};\n\t\t\tthis.morphAttributes = {};\n\t\t\tthis.groups = [];\n\t\t\tthis.boundingBox = null;\n\t\t\tthis.boundingSphere = null; // used for storing cloned, shared data\n\n\t\t\tconst data = {}; // name\n\n\t\t\tthis.name = source.name; // index\n\n\t\t\tconst index = source.index;\n\n\t\t\tif (index !== null) {\n\t\t\t\tthis.setIndex(index.clone(data));\n\t\t\t} // attributes\n\n\n\t\t\tconst attributes = source.attributes;\n\n\t\t\tfor (const name in attributes) {\n\t\t\t\tconst attribute = attributes[name];\n\t\t\t\tthis.setAttribute(name, attribute.clone(data));\n\t\t\t} // morph attributes\n\n\n\t\t\tconst morphAttributes = source.morphAttributes;\n\n\t\t\tfor (const name in morphAttributes) {\n\t\t\t\tconst array = [];\n\t\t\t\tconst morphAttribute = morphAttributes[name]; // morphAttribute: array of Float32BufferAttributes\n\n\t\t\t\tfor (let i = 0, l = morphAttribute.length; i < l; i++) {\n\t\t\t\t\tarray.push(morphAttribute[i].clone(data));\n\t\t\t\t}\n\n\t\t\t\tthis.morphAttributes[name] = array;\n\t\t\t}\n\n\t\t\tthis.morphTargetsRelative = source.morphTargetsRelative; // groups\n\n\t\t\tconst groups = source.groups;\n\n\t\t\tfor (let i = 0, l = groups.length; i < l; i++) {\n\t\t\t\tconst group = groups[i];\n\t\t\t\tthis.addGroup(group.start, group.count, group.materialIndex);\n\t\t\t} // bounding box\n\n\n\t\t\tconst boundingBox = source.boundingBox;\n\n\t\t\tif (boundingBox !== null) {\n\t\t\t\tthis.boundingBox = boundingBox.clone();\n\t\t\t} // bounding sphere\n\n\n\t\t\tconst boundingSphere = source.boundingSphere;\n\n\t\t\tif (boundingSphere !== null) {\n\t\t\t\tthis.boundingSphere = boundingSphere.clone();\n\t\t\t} // draw range\n\n\n\t\t\tthis.drawRange.start = source.drawRange.start;\n\t\t\tthis.drawRange.count = source.drawRange.count; // user data\n\n\t\t\tthis.userData = source.userData; // geometry generator parameters\n\n\t\t\tif (source.parameters !== undefined) this.parameters = Object.assign({}, source.parameters);\n\t\t\treturn this;\n\t\t}\n\n\t\tdispose() {\n\t\t\tthis.dispatchEvent({\n\t\t\t\ttype: 'dispose'\n\t\t\t});\n\t\t}\n\n\t}\n\n\tBufferGeometry.prototype.isBufferGeometry = true;\n\n\tconst _inverseMatrix$2 = /*@__PURE__*/new Matrix4();\n\n\tconst _ray$2 = /*@__PURE__*/new Ray();\n\n\tconst _sphere$3 = /*@__PURE__*/new Sphere();\n\n\tconst _vA$1 = /*@__PURE__*/new Vector3();\n\n\tconst _vB$1 = /*@__PURE__*/new Vector3();\n\n\tconst _vC$1 = /*@__PURE__*/new Vector3();\n\n\tconst _tempA = /*@__PURE__*/new Vector3();\n\n\tconst _tempB = /*@__PURE__*/new Vector3();\n\n\tconst _tempC = /*@__PURE__*/new Vector3();\n\n\tconst _morphA = /*@__PURE__*/new Vector3();\n\n\tconst _morphB = /*@__PURE__*/new Vector3();\n\n\tconst _morphC = /*@__PURE__*/new Vector3();\n\n\tconst _uvA$1 = /*@__PURE__*/new Vector2();\n\n\tconst _uvB$1 = /*@__PURE__*/new Vector2();\n\n\tconst _uvC$1 = /*@__PURE__*/new Vector2();\n\n\tconst _intersectionPoint = /*@__PURE__*/new Vector3();\n\n\tconst _intersectionPointWorld = /*@__PURE__*/new Vector3();\n\n\tclass Mesh extends Object3D {\n\t\tconstructor(geometry = new BufferGeometry(), material = new MeshBasicMaterial()) {\n\t\t\tsuper();\n\t\t\tthis.type = 'Mesh';\n\t\t\tthis.geometry = geometry;\n\t\t\tthis.material = material;\n\t\t\tthis.updateMorphTargets();\n\t\t}\n\n\t\tcopy(source) {\n\t\t\tsuper.copy(source);\n\n\t\t\tif (source.morphTargetInfluences !== undefined) {\n\t\t\t\tthis.morphTargetInfluences = source.morphTargetInfluences.slice();\n\t\t\t}\n\n\t\t\tif (source.morphTargetDictionary !== undefined) {\n\t\t\t\tthis.morphTargetDictionary = Object.assign({}, source.morphTargetDictionary);\n\t\t\t}\n\n\t\t\tthis.material = source.material;\n\t\t\tthis.geometry = source.geometry;\n\t\t\treturn this;\n\t\t}\n\n\t\tupdateMorphTargets() {\n\t\t\tconst geometry = this.geometry;\n\n\t\t\tif (geometry.isBufferGeometry) {\n\t\t\t\tconst morphAttributes = geometry.morphAttributes;\n\t\t\t\tconst keys = Object.keys(morphAttributes);\n\n\t\t\t\tif (keys.length > 0) {\n\t\t\t\t\tconst morphAttribute = morphAttributes[keys[0]];\n\n\t\t\t\t\tif (morphAttribute !== undefined) {\n\t\t\t\t\t\tthis.morphTargetInfluences = [];\n\t\t\t\t\t\tthis.morphTargetDictionary = {};\n\n\t\t\t\t\t\tfor (let m = 0, ml = morphAttribute.length; m < ml; m++) {\n\t\t\t\t\t\t\tconst name = morphAttribute[m].name || String(m);\n\t\t\t\t\t\t\tthis.morphTargetInfluences.push(0);\n\t\t\t\t\t\t\tthis.morphTargetDictionary[name] = m;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tconst morphTargets = geometry.morphTargets;\n\n\t\t\t\tif (morphTargets !== undefined && morphTargets.length > 0) {\n\t\t\t\t\tconsole.error('THREE.Mesh.updateMorphTargets() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.');\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\traycast(raycaster, intersects) {\n\t\t\tconst geometry = this.geometry;\n\t\t\tconst material = this.material;\n\t\t\tconst matrixWorld = this.matrixWorld;\n\t\t\tif (material === undefined) return; // Checking boundingSphere distance to ray\n\n\t\t\tif (geometry.boundingSphere === null) geometry.computeBoundingSphere();\n\n\t\t\t_sphere$3.copy(geometry.boundingSphere);\n\n\t\t\t_sphere$3.applyMatrix4(matrixWorld);\n\n\t\t\tif (raycaster.ray.intersectsSphere(_sphere$3) === false) return; //\n\n\t\t\t_inverseMatrix$2.copy(matrixWorld).invert();\n\n\t\t\t_ray$2.copy(raycaster.ray).applyMatrix4(_inverseMatrix$2); // Check boundingBox before continuing\n\n\n\t\t\tif (geometry.boundingBox !== null) {\n\t\t\t\tif (_ray$2.intersectsBox(geometry.boundingBox) === false) return;\n\t\t\t}\n\n\t\t\tlet intersection;\n\n\t\t\tif (geometry.isBufferGeometry) {\n\t\t\t\tconst index = geometry.index;\n\t\t\t\tconst position = geometry.attributes.position;\n\t\t\t\tconst morphPosition = geometry.morphAttributes.position;\n\t\t\t\tconst morphTargetsRelative = geometry.morphTargetsRelative;\n\t\t\t\tconst uv = geometry.attributes.uv;\n\t\t\t\tconst uv2 = geometry.attributes.uv2;\n\t\t\t\tconst groups = geometry.groups;\n\t\t\t\tconst drawRange = geometry.drawRange;\n\n\t\t\t\tif (index !== null) {\n\t\t\t\t\t// indexed buffer geometry\n\t\t\t\t\tif (Array.isArray(material)) {\n\t\t\t\t\t\tfor (let i = 0, il = groups.length; i < il; i++) {\n\t\t\t\t\t\t\tconst group = groups[i];\n\t\t\t\t\t\t\tconst groupMaterial = material[group.materialIndex];\n\t\t\t\t\t\t\tconst start = Math.max(group.start, drawRange.start);\n\t\t\t\t\t\t\tconst end = Math.min(index.count, Math.min(group.start + group.count, drawRange.start + drawRange.count));\n\n\t\t\t\t\t\t\tfor (let j = start, jl = end; j < jl; j += 3) {\n\t\t\t\t\t\t\t\tconst a = index.getX(j);\n\t\t\t\t\t\t\t\tconst b = index.getX(j + 1);\n\t\t\t\t\t\t\t\tconst c = index.getX(j + 2);\n\t\t\t\t\t\t\t\tintersection = checkBufferGeometryIntersection(this, groupMaterial, raycaster, _ray$2, position, morphPosition, morphTargetsRelative, uv, uv2, a, b, c);\n\n\t\t\t\t\t\t\t\tif (intersection) {\n\t\t\t\t\t\t\t\t\tintersection.faceIndex = Math.floor(j / 3); // triangle number in indexed buffer semantics\n\n\t\t\t\t\t\t\t\t\tintersection.face.materialIndex = group.materialIndex;\n\t\t\t\t\t\t\t\t\tintersects.push(intersection);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tconst start = Math.max(0, drawRange.start);\n\t\t\t\t\t\tconst end = Math.min(index.count, drawRange.start + drawRange.count);\n\n\t\t\t\t\t\tfor (let i = start, il = end; i < il; i += 3) {\n\t\t\t\t\t\t\tconst a = index.getX(i);\n\t\t\t\t\t\t\tconst b = index.getX(i + 1);\n\t\t\t\t\t\t\tconst c = index.getX(i + 2);\n\t\t\t\t\t\t\tintersection = checkBufferGeometryIntersection(this, material, raycaster, _ray$2, position, morphPosition, morphTargetsRelative, uv, uv2, a, b, c);\n\n\t\t\t\t\t\t\tif (intersection) {\n\t\t\t\t\t\t\t\tintersection.faceIndex = Math.floor(i / 3); // triangle number in indexed buffer semantics\n\n\t\t\t\t\t\t\t\tintersects.push(intersection);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else if (position !== undefined) {\n\t\t\t\t\t// non-indexed buffer geometry\n\t\t\t\t\tif (Array.isArray(material)) {\n\t\t\t\t\t\tfor (let i = 0, il = groups.length; i < il; i++) {\n\t\t\t\t\t\t\tconst group = groups[i];\n\t\t\t\t\t\t\tconst groupMaterial = material[group.materialIndex];\n\t\t\t\t\t\t\tconst start = Math.max(group.start, drawRange.start);\n\t\t\t\t\t\t\tconst end = Math.min(position.count, Math.min(group.start + group.count, drawRange.start + drawRange.count));\n\n\t\t\t\t\t\t\tfor (let j = start, jl = end; j < jl; j += 3) {\n\t\t\t\t\t\t\t\tconst a = j;\n\t\t\t\t\t\t\t\tconst b = j + 1;\n\t\t\t\t\t\t\t\tconst c = j + 2;\n\t\t\t\t\t\t\t\tintersection = checkBufferGeometryIntersection(this, groupMaterial, raycaster, _ray$2, position, morphPosition, morphTargetsRelative, uv, uv2, a, b, c);\n\n\t\t\t\t\t\t\t\tif (intersection) {\n\t\t\t\t\t\t\t\t\tintersection.faceIndex = Math.floor(j / 3); // triangle number in non-indexed buffer semantics\n\n\t\t\t\t\t\t\t\t\tintersection.face.materialIndex = group.materialIndex;\n\t\t\t\t\t\t\t\t\tintersects.push(intersection);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tconst start = Math.max(0, drawRange.start);\n\t\t\t\t\t\tconst end = Math.min(position.count, drawRange.start + drawRange.count);\n\n\t\t\t\t\t\tfor (let i = start, il = end; i < il; i += 3) {\n\t\t\t\t\t\t\tconst a = i;\n\t\t\t\t\t\t\tconst b = i + 1;\n\t\t\t\t\t\t\tconst c = i + 2;\n\t\t\t\t\t\t\tintersection = checkBufferGeometryIntersection(this, material, raycaster, _ray$2, position, morphPosition, morphTargetsRelative, uv, uv2, a, b, c);\n\n\t\t\t\t\t\t\tif (intersection) {\n\t\t\t\t\t\t\t\tintersection.faceIndex = Math.floor(i / 3); // triangle number in non-indexed buffer semantics\n\n\t\t\t\t\t\t\t\tintersects.push(intersection);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (geometry.isGeometry) {\n\t\t\t\tconsole.error('THREE.Mesh.raycast() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.');\n\t\t\t}\n\t\t}\n\n\t}\n\n\tMesh.prototype.isMesh = true;\n\n\tfunction checkIntersection(object, material, raycaster, ray, pA, pB, pC, point) {\n\t\tlet intersect;\n\n\t\tif (material.side === BackSide) {\n\t\t\tintersect = ray.intersectTriangle(pC, pB, pA, true, point);\n\t\t} else {\n\t\t\tintersect = ray.intersectTriangle(pA, pB, pC, material.side !== DoubleSide, point);\n\t\t}\n\n\t\tif (intersect === null) return null;\n\n\t\t_intersectionPointWorld.copy(point);\n\n\t\t_intersectionPointWorld.applyMatrix4(object.matrixWorld);\n\n\t\tconst distance = raycaster.ray.origin.distanceTo(_intersectionPointWorld);\n\t\tif (distance < raycaster.near || distance > raycaster.far) return null;\n\t\treturn {\n\t\t\tdistance: distance,\n\t\t\tpoint: _intersectionPointWorld.clone(),\n\t\t\tobject: object\n\t\t};\n\t}\n\n\tfunction checkBufferGeometryIntersection(object, material, raycaster, ray, position, morphPosition, morphTargetsRelative, uv, uv2, a, b, c) {\n\t\t_vA$1.fromBufferAttribute(position, a);\n\n\t\t_vB$1.fromBufferAttribute(position, b);\n\n\t\t_vC$1.fromBufferAttribute(position, c);\n\n\t\tconst morphInfluences = object.morphTargetInfluences;\n\n\t\tif (morphPosition && morphInfluences) {\n\t\t\t_morphA.set(0, 0, 0);\n\n\t\t\t_morphB.set(0, 0, 0);\n\n\t\t\t_morphC.set(0, 0, 0);\n\n\t\t\tfor (let i = 0, il = morphPosition.length; i < il; i++) {\n\t\t\t\tconst influence = morphInfluences[i];\n\t\t\t\tconst morphAttribute = morphPosition[i];\n\t\t\t\tif (influence === 0) continue;\n\n\t\t\t\t_tempA.fromBufferAttribute(morphAttribute, a);\n\n\t\t\t\t_tempB.fromBufferAttribute(morphAttribute, b);\n\n\t\t\t\t_tempC.fromBufferAttribute(morphAttribute, c);\n\n\t\t\t\tif (morphTargetsRelative) {\n\t\t\t\t\t_morphA.addScaledVector(_tempA, influence);\n\n\t\t\t\t\t_morphB.addScaledVector(_tempB, influence);\n\n\t\t\t\t\t_morphC.addScaledVector(_tempC, influence);\n\t\t\t\t} else {\n\t\t\t\t\t_morphA.addScaledVector(_tempA.sub(_vA$1), influence);\n\n\t\t\t\t\t_morphB.addScaledVector(_tempB.sub(_vB$1), influence);\n\n\t\t\t\t\t_morphC.addScaledVector(_tempC.sub(_vC$1), influence);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t_vA$1.add(_morphA);\n\n\t\t\t_vB$1.add(_morphB);\n\n\t\t\t_vC$1.add(_morphC);\n\t\t}\n\n\t\tif (object.isSkinnedMesh) {\n\t\t\tobject.boneTransform(a, _vA$1);\n\t\t\tobject.boneTransform(b, _vB$1);\n\t\t\tobject.boneTransform(c, _vC$1);\n\t\t}\n\n\t\tconst intersection = checkIntersection(object, material, raycaster, ray, _vA$1, _vB$1, _vC$1, _intersectionPoint);\n\n\t\tif (intersection) {\n\t\t\tif (uv) {\n\t\t\t\t_uvA$1.fromBufferAttribute(uv, a);\n\n\t\t\t\t_uvB$1.fromBufferAttribute(uv, b);\n\n\t\t\t\t_uvC$1.fromBufferAttribute(uv, c);\n\n\t\t\t\tintersection.uv = Triangle.getUV(_intersectionPoint, _vA$1, _vB$1, _vC$1, _uvA$1, _uvB$1, _uvC$1, new Vector2());\n\t\t\t}\n\n\t\t\tif (uv2) {\n\t\t\t\t_uvA$1.fromBufferAttribute(uv2, a);\n\n\t\t\t\t_uvB$1.fromBufferAttribute(uv2, b);\n\n\t\t\t\t_uvC$1.fromBufferAttribute(uv2, c);\n\n\t\t\t\tintersection.uv2 = Triangle.getUV(_intersectionPoint, _vA$1, _vB$1, _vC$1, _uvA$1, _uvB$1, _uvC$1, new Vector2());\n\t\t\t}\n\n\t\t\tconst face = {\n\t\t\t\ta: a,\n\t\t\t\tb: b,\n\t\t\t\tc: c,\n\t\t\t\tnormal: new Vector3(),\n\t\t\t\tmaterialIndex: 0\n\t\t\t};\n\t\t\tTriangle.getNormal(_vA$1, _vB$1, _vC$1, face.normal);\n\t\t\tintersection.face = face;\n\t\t}\n\n\t\treturn intersection;\n\t}\n\n\tclass BoxGeometry extends BufferGeometry {\n\t\tconstructor(width = 1, height = 1, depth = 1, widthSegments = 1, heightSegments = 1, depthSegments = 1) {\n\t\t\tsuper();\n\t\t\tthis.type = 'BoxGeometry';\n\t\t\tthis.parameters = {\n\t\t\t\twidth: width,\n\t\t\t\theight: height,\n\t\t\t\tdepth: depth,\n\t\t\t\twidthSegments: widthSegments,\n\t\t\t\theightSegments: heightSegments,\n\t\t\t\tdepthSegments: depthSegments\n\t\t\t};\n\t\t\tconst scope = this; // segments\n\n\t\t\twidthSegments = Math.floor(widthSegments);\n\t\t\theightSegments = Math.floor(heightSegments);\n\t\t\tdepthSegments = Math.floor(depthSegments); // buffers\n\n\t\t\tconst indices = [];\n\t\t\tconst vertices = [];\n\t\t\tconst normals = [];\n\t\t\tconst uvs = []; // helper variables\n\n\t\t\tlet numberOfVertices = 0;\n\t\t\tlet groupStart = 0; // build each side of the box geometry\n\n\t\t\tbuildPlane('z', 'y', 'x', -1, -1, depth, height, width, depthSegments, heightSegments, 0); // px\n\n\t\t\tbuildPlane('z', 'y', 'x', 1, -1, depth, height, -width, depthSegments, heightSegments, 1); // nx\n\n\t\t\tbuildPlane('x', 'z', 'y', 1, 1, width, depth, height, widthSegments, depthSegments, 2); // py\n\n\t\t\tbuildPlane('x', 'z', 'y', 1, -1, width, depth, -height, widthSegments, depthSegments, 3); // ny\n\n\t\t\tbuildPlane('x', 'y', 'z', 1, -1, width, height, depth, widthSegments, heightSegments, 4); // pz\n\n\t\t\tbuildPlane('x', 'y', 'z', -1, -1, width, height, -depth, widthSegments, heightSegments, 5); // nz\n\t\t\t// build geometry\n\n\t\t\tthis.setIndex(indices);\n\t\t\tthis.setAttribute('position', new Float32BufferAttribute(vertices, 3));\n\t\t\tthis.setAttribute('normal', new Float32BufferAttribute(normals, 3));\n\t\t\tthis.setAttribute('uv', new Float32BufferAttribute(uvs, 2));\n\n\t\t\tfunction buildPlane(u, v, w, udir, vdir, width, height, depth, gridX, gridY, materialIndex) {\n\t\t\t\tconst segmentWidth = width / gridX;\n\t\t\t\tconst segmentHeight = height / gridY;\n\t\t\t\tconst widthHalf = width / 2;\n\t\t\t\tconst heightHalf = height / 2;\n\t\t\t\tconst depthHalf = depth / 2;\n\t\t\t\tconst gridX1 = gridX + 1;\n\t\t\t\tconst gridY1 = gridY + 1;\n\t\t\t\tlet vertexCounter = 0;\n\t\t\t\tlet groupCount = 0;\n\t\t\t\tconst vector = new Vector3(); // generate vertices, normals and uvs\n\n\t\t\t\tfor (let iy = 0; iy < gridY1; iy++) {\n\t\t\t\t\tconst y = iy * segmentHeight - heightHalf;\n\n\t\t\t\t\tfor (let ix = 0; ix < gridX1; ix++) {\n\t\t\t\t\t\tconst x = ix * segmentWidth - widthHalf; // set values to correct vector component\n\n\t\t\t\t\t\tvector[u] = x * udir;\n\t\t\t\t\t\tvector[v] = y * vdir;\n\t\t\t\t\t\tvector[w] = depthHalf; // now apply vector to vertex buffer\n\n\t\t\t\t\t\tvertices.push(vector.x, vector.y, vector.z); // set values to correct vector component\n\n\t\t\t\t\t\tvector[u] = 0;\n\t\t\t\t\t\tvector[v] = 0;\n\t\t\t\t\t\tvector[w] = depth > 0 ? 1 : -1; // now apply vector to normal buffer\n\n\t\t\t\t\t\tnormals.push(vector.x, vector.y, vector.z); // uvs\n\n\t\t\t\t\t\tuvs.push(ix / gridX);\n\t\t\t\t\t\tuvs.push(1 - iy / gridY); // counters\n\n\t\t\t\t\t\tvertexCounter += 1;\n\t\t\t\t\t}\n\t\t\t\t} // indices\n\t\t\t\t// 1. you need three indices to draw a single face\n\t\t\t\t// 2. a single segment consists of two faces\n\t\t\t\t// 3. so we need to generate six (2*3) indices per segment\n\n\n\t\t\t\tfor (let iy = 0; iy < gridY; iy++) {\n\t\t\t\t\tfor (let ix = 0; ix < gridX; ix++) {\n\t\t\t\t\t\tconst a = numberOfVertices + ix + gridX1 * iy;\n\t\t\t\t\t\tconst b = numberOfVertices + ix + gridX1 * (iy + 1);\n\t\t\t\t\t\tconst c = numberOfVertices + (ix + 1) + gridX1 * (iy + 1);\n\t\t\t\t\t\tconst d = numberOfVertices + (ix + 1) + gridX1 * iy; // faces\n\n\t\t\t\t\t\tindices.push(a, b, d);\n\t\t\t\t\t\tindices.push(b, c, d); // increase counter\n\n\t\t\t\t\t\tgroupCount += 6;\n\t\t\t\t\t}\n\t\t\t\t} // add a group to the geometry. this will ensure multi material support\n\n\n\t\t\t\tscope.addGroup(groupStart, groupCount, materialIndex); // calculate new start value for groups\n\n\t\t\t\tgroupStart += groupCount; // update total number of vertices\n\n\t\t\t\tnumberOfVertices += vertexCounter;\n\t\t\t}\n\t\t}\n\n\t\tstatic fromJSON(data) {\n\t\t\treturn new BoxGeometry(data.width, data.height, data.depth, data.widthSegments, data.heightSegments, data.depthSegments);\n\t\t}\n\n\t}\n\n\t/**\n\t * Uniform Utilities\n\t */\n\tfunction cloneUniforms(src) {\n\t\tconst dst = {};\n\n\t\tfor (const u in src) {\n\t\t\tdst[u] = {};\n\n\t\t\tfor (const p in src[u]) {\n\t\t\t\tconst property = src[u][p];\n\n\t\t\t\tif (property && (property.isColor || property.isMatrix3 || property.isMatrix4 || property.isVector2 || property.isVector3 || property.isVector4 || property.isTexture || property.isQuaternion)) {\n\t\t\t\t\tdst[u][p] = property.clone();\n\t\t\t\t} else if (Array.isArray(property)) {\n\t\t\t\t\tdst[u][p] = property.slice();\n\t\t\t\t} else {\n\t\t\t\t\tdst[u][p] = property;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn dst;\n\t}\n\tfunction mergeUniforms(uniforms) {\n\t\tconst merged = {};\n\n\t\tfor (let u = 0; u < uniforms.length; u++) {\n\t\t\tconst tmp = cloneUniforms(uniforms[u]);\n\n\t\t\tfor (const p in tmp) {\n\t\t\t\tmerged[p] = tmp[p];\n\t\t\t}\n\t\t}\n\n\t\treturn merged;\n\t} // Legacy\n\n\tconst UniformsUtils = {\n\t\tclone: cloneUniforms,\n\t\tmerge: mergeUniforms\n\t};\n\n\tvar default_vertex = \"void main() {\\n\\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\\n}\";\n\n\tvar default_fragment = \"void main() {\\n\\tgl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );\\n}\";\n\n\t/**\n\t * parameters = {\n\t *\tdefines: { \"label\" : \"value\" },\n\t *\tuniforms: { \"parameter1\": { value: 1.0 }, \"parameter2\": { value2: 2 } },\n\t *\n\t *\tfragmentShader: <string>,\n\t *\tvertexShader: <string>,\n\t *\n\t *\twireframe: <boolean>,\n\t *\twireframeLinewidth: <float>,\n\t *\n\t *\tlights: <bool>\n\t * }\n\t */\n\n\tclass ShaderMaterial extends Material {\n\t\tconstructor(parameters) {\n\t\t\tsuper();\n\t\t\tthis.type = 'ShaderMaterial';\n\t\t\tthis.defines = {};\n\t\t\tthis.uniforms = {};\n\t\t\tthis.vertexShader = default_vertex;\n\t\t\tthis.fragmentShader = default_fragment;\n\t\t\tthis.linewidth = 1;\n\t\t\tthis.wireframe = false;\n\t\t\tthis.wireframeLinewidth = 1;\n\t\t\tthis.fog = false; // set to use scene fog\n\n\t\t\tthis.lights = false; // set to use scene lights\n\n\t\t\tthis.clipping = false; // set to use user-defined clipping planes\n\n\t\t\tthis.extensions = {\n\t\t\t\tderivatives: false,\n\t\t\t\t// set to use derivatives\n\t\t\t\tfragDepth: false,\n\t\t\t\t// set to use fragment depth values\n\t\t\t\tdrawBuffers: false,\n\t\t\t\t// set to use draw buffers\n\t\t\t\tshaderTextureLOD: false // set to use shader texture LOD\n\n\t\t\t}; // When rendered geometry doesn't include these attributes but the material does,\n\t\t\t// use these default values in WebGL. This avoids errors when buffer data is missing.\n\n\t\t\tthis.defaultAttributeValues = {\n\t\t\t\t'color': [1, 1, 1],\n\t\t\t\t'uv': [0, 0],\n\t\t\t\t'uv2': [0, 0]\n\t\t\t};\n\t\t\tthis.index0AttributeName = undefined;\n\t\t\tthis.uniformsNeedUpdate = false;\n\t\t\tthis.glslVersion = null;\n\n\t\t\tif (parameters !== undefined) {\n\t\t\t\tif (parameters.attributes !== undefined) {\n\t\t\t\t\tconsole.error('THREE.ShaderMaterial: attributes should now be defined in THREE.BufferGeometry instead.');\n\t\t\t\t}\n\n\t\t\t\tthis.setValues(parameters);\n\t\t\t}\n\t\t}\n\n\t\tcopy(source) {\n\t\t\tsuper.copy(source);\n\t\t\tthis.fragmentShader = source.fragmentShader;\n\t\t\tthis.vertexShader = source.vertexShader;\n\t\t\tthis.uniforms = cloneUniforms(source.uniforms);\n\t\t\tthis.defines = Object.assign({}, source.defines);\n\t\t\tthis.wireframe = source.wireframe;\n\t\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\t\t\tthis.lights = source.lights;\n\t\t\tthis.clipping = source.clipping;\n\t\t\tthis.extensions = Object.assign({}, source.extensions);\n\t\t\tthis.glslVersion = source.glslVersion;\n\t\t\treturn this;\n\t\t}\n\n\t\ttoJSON(meta) {\n\t\t\tconst data = super.toJSON(meta);\n\t\t\tdata.glslVersion = this.glslVersion;\n\t\t\tdata.uniforms = {};\n\n\t\t\tfor (const name in this.uniforms) {\n\t\t\t\tconst uniform = this.uniforms[name];\n\t\t\t\tconst value = uniform.value;\n\n\t\t\t\tif (value && value.isTexture) {\n\t\t\t\t\tdata.uniforms[name] = {\n\t\t\t\t\t\ttype: 't',\n\t\t\t\t\t\tvalue: value.toJSON(meta).uuid\n\t\t\t\t\t};\n\t\t\t\t} else if (value && value.isColor) {\n\t\t\t\t\tdata.uniforms[name] = {\n\t\t\t\t\t\ttype: 'c',\n\t\t\t\t\t\tvalue: value.getHex()\n\t\t\t\t\t};\n\t\t\t\t} else if (value && value.isVector2) {\n\t\t\t\t\tdata.uniforms[name] = {\n\t\t\t\t\t\ttype: 'v2',\n\t\t\t\t\t\tvalue: value.toArray()\n\t\t\t\t\t};\n\t\t\t\t} else if (value && value.isVector3) {\n\t\t\t\t\tdata.uniforms[name] = {\n\t\t\t\t\t\ttype: 'v3',\n\t\t\t\t\t\tvalue: value.toArray()\n\t\t\t\t\t};\n\t\t\t\t} else if (value && value.isVector4) {\n\t\t\t\t\tdata.uniforms[name] = {\n\t\t\t\t\t\ttype: 'v4',\n\t\t\t\t\t\tvalue: value.toArray()\n\t\t\t\t\t};\n\t\t\t\t} else if (value && value.isMatrix3) {\n\t\t\t\t\tdata.uniforms[name] = {\n\t\t\t\t\t\ttype: 'm3',\n\t\t\t\t\t\tvalue: value.toArray()\n\t\t\t\t\t};\n\t\t\t\t} else if (value && value.isMatrix4) {\n\t\t\t\t\tdata.uniforms[name] = {\n\t\t\t\t\t\ttype: 'm4',\n\t\t\t\t\t\tvalue: value.toArray()\n\t\t\t\t\t};\n\t\t\t\t} else {\n\t\t\t\t\tdata.uniforms[name] = {\n\t\t\t\t\t\tvalue: value\n\t\t\t\t\t}; // note: the array variants v2v, v3v, v4v, m4v and tv are not supported so far\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (Object.keys(this.defines).length > 0) data.defines = this.defines;\n\t\t\tdata.vertexShader = this.vertexShader;\n\t\t\tdata.fragmentShader = this.fragmentShader;\n\t\t\tconst extensions = {};\n\n\t\t\tfor (const key in this.extensions) {\n\t\t\t\tif (this.extensions[key] === true) extensions[key] = true;\n\t\t\t}\n\n\t\t\tif (Object.keys(extensions).length > 0) data.extensions = extensions;\n\t\t\treturn data;\n\t\t}\n\n\t}\n\n\tShaderMaterial.prototype.isShaderMaterial = true;\n\n\tclass Camera extends Object3D {\n\t\tconstructor() {\n\t\t\tsuper();\n\t\t\tthis.type = 'Camera';\n\t\t\tthis.matrixWorldInverse = new Matrix4();\n\t\t\tthis.projectionMatrix = new Matrix4();\n\t\t\tthis.projectionMatrixInverse = new Matrix4();\n\t\t}\n\n\t\tcopy(source, recursive) {\n\t\t\tsuper.copy(source, recursive);\n\t\t\tthis.matrixWorldInverse.copy(source.matrixWorldInverse);\n\t\t\tthis.projectionMatrix.copy(source.projectionMatrix);\n\t\t\tthis.projectionMatrixInverse.copy(source.projectionMatrixInverse);\n\t\t\treturn this;\n\t\t}\n\n\t\tgetWorldDirection(target) {\n\t\t\tthis.updateWorldMatrix(true, false);\n\t\t\tconst e = this.matrixWorld.elements;\n\t\t\treturn target.set(-e[8], -e[9], -e[10]).normalize();\n\t\t}\n\n\t\tupdateMatrixWorld(force) {\n\t\t\tsuper.updateMatrixWorld(force);\n\t\t\tthis.matrixWorldInverse.copy(this.matrixWorld).invert();\n\t\t}\n\n\t\tupdateWorldMatrix(updateParents, updateChildren) {\n\t\t\tsuper.updateWorldMatrix(updateParents, updateChildren);\n\t\t\tthis.matrixWorldInverse.copy(this.matrixWorld).invert();\n\t\t}\n\n\t\tclone() {\n\t\t\treturn new this.constructor().copy(this);\n\t\t}\n\n\t}\n\n\tCamera.prototype.isCamera = true;\n\n\tclass PerspectiveCamera extends Camera {\n\t\tconstructor(fov = 50, aspect = 1, near = 0.1, far = 2000) {\n\t\t\tsuper();\n\t\t\tthis.type = 'PerspectiveCamera';\n\t\t\tthis.fov = fov;\n\t\t\tthis.zoom = 1;\n\t\t\tthis.near = near;\n\t\t\tthis.far = far;\n\t\t\tthis.focus = 10;\n\t\t\tthis.aspect = aspect;\n\t\t\tthis.view = null;\n\t\t\tthis.filmGauge = 35; // width of the film (default in millimeters)\n\n\t\t\tthis.filmOffset = 0; // horizontal film offset (same unit as gauge)\n\n\t\t\tthis.updateProjectionMatrix();\n\t\t}\n\n\t\tcopy(source, recursive) {\n\t\t\tsuper.copy(source, recursive);\n\t\t\tthis.fov = source.fov;\n\t\t\tthis.zoom = source.zoom;\n\t\t\tthis.near = source.near;\n\t\t\tthis.far = source.far;\n\t\t\tthis.focus = source.focus;\n\t\t\tthis.aspect = source.aspect;\n\t\t\tthis.view = source.view === null ? null : Object.assign({}, source.view);\n\t\t\tthis.filmGauge = source.filmGauge;\n\t\t\tthis.filmOffset = source.filmOffset;\n\t\t\treturn this;\n\t\t}\n\t\t/**\n\t\t * Sets the FOV by focal length in respect to the current .filmGauge.\n\t\t *\n\t\t * The default film gauge is 35, so that the focal length can be specified for\n\t\t * a 35mm (full frame) camera.\n\t\t *\n\t\t * Values for focal length and film gauge must have the same unit.\n\t\t */\n\n\n\t\tsetFocalLength(focalLength) {\n\t\t\t/** see {@link http://www.bobatkins.com/photography/technical/field_of_view.html} */\n\t\t\tconst vExtentSlope = 0.5 * this.getFilmHeight() / focalLength;\n\t\t\tthis.fov = RAD2DEG * 2 * Math.atan(vExtentSlope);\n\t\t\tthis.updateProjectionMatrix();\n\t\t}\n\t\t/**\n\t\t * Calculates the focal length from the current .fov and .filmGauge.\n\t\t */\n\n\n\t\tgetFocalLength() {\n\t\t\tconst vExtentSlope = Math.tan(DEG2RAD * 0.5 * this.fov);\n\t\t\treturn 0.5 * this.getFilmHeight() / vExtentSlope;\n\t\t}\n\n\t\tgetEffectiveFOV() {\n\t\t\treturn RAD2DEG * 2 * Math.atan(Math.tan(DEG2RAD * 0.5 * this.fov) / this.zoom);\n\t\t}\n\n\t\tgetFilmWidth() {\n\t\t\t// film not completely covered in portrait format (aspect < 1)\n\t\t\treturn this.filmGauge * Math.min(this.aspect, 1);\n\t\t}\n\n\t\tgetFilmHeight() {\n\t\t\t// film not completely covered in landscape format (aspect > 1)\n\t\t\treturn this.filmGauge / Math.max(this.aspect, 1);\n\t\t}\n\t\t/**\n\t\t * Sets an offset in a larger frustum. This is useful for multi-window or\n\t\t * multi-monitor/multi-machine setups.\n\t\t *\n\t\t * For example, if you have 3x2 monitors and each monitor is 1920x1080 and\n\t\t * the monitors are in grid like this\n\t\t *\n\t\t *\t +---+---+---+\n\t\t *\t | A | B | C |\n\t\t *\t +---+---+---+\n\t\t *\t | D | E | F |\n\t\t *\t +---+---+---+\n\t\t *\n\t\t * then for each monitor you would call it like this\n\t\t *\n\t\t *\t const w = 1920;\n\t\t *\t const h = 1080;\n\t\t *\t const fullWidth = w * 3;\n\t\t *\t const fullHeight = h * 2;\n\t\t *\n\t\t *\t --A--\n\t\t *\t camera.setViewOffset( fullWidth, fullHeight, w * 0, h * 0, w, h );\n\t\t *\t --B--\n\t\t *\t camera.setViewOffset( fullWidth, fullHeight, w * 1, h * 0, w, h );\n\t\t *\t --C--\n\t\t *\t camera.setViewOffset( fullWidth, fullHeight, w * 2, h * 0, w, h );\n\t\t *\t --D--\n\t\t *\t camera.setViewOffset( fullWidth, fullHeight, w * 0, h * 1, w, h );\n\t\t *\t --E--\n\t\t *\t camera.setViewOffset( fullWidth, fullHeight, w * 1, h * 1, w, h );\n\t\t *\t --F--\n\t\t *\t camera.setViewOffset( fullWidth, fullHeight, w * 2, h * 1, w, h );\n\t\t *\n\t\t *\t Note there is no reason monitors have to be the same size or in a grid.\n\t\t */\n\n\n\t\tsetViewOffset(fullWidth, fullHeight, x, y, width, height) {\n\t\t\tthis.aspect = fullWidth / fullHeight;\n\n\t\t\tif (this.view === null) {\n\t\t\t\tthis.view = {\n\t\t\t\t\tenabled: true,\n\t\t\t\t\tfullWidth: 1,\n\t\t\t\t\tfullHeight: 1,\n\t\t\t\t\toffsetX: 0,\n\t\t\t\t\toffsetY: 0,\n\t\t\t\t\twidth: 1,\n\t\t\t\t\theight: 1\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tthis.view.enabled = true;\n\t\t\tthis.view.fullWidth = fullWidth;\n\t\t\tthis.view.fullHeight = fullHeight;\n\t\t\tthis.view.offsetX = x;\n\t\t\tthis.view.offsetY = y;\n\t\t\tthis.view.width = width;\n\t\t\tthis.view.height = height;\n\t\t\tthis.updateProjectionMatrix();\n\t\t}\n\n\t\tclearViewOffset() {\n\t\t\tif (this.view !== null) {\n\t\t\t\tthis.view.enabled = false;\n\t\t\t}\n\n\t\t\tthis.updateProjectionMatrix();\n\t\t}\n\n\t\tupdateProjectionMatrix() {\n\t\t\tconst near = this.near;\n\t\t\tlet top = near * Math.tan(DEG2RAD * 0.5 * this.fov) / this.zoom;\n\t\t\tlet height = 2 * top;\n\t\t\tlet width = this.aspect * height;\n\t\t\tlet left = -0.5 * width;\n\t\t\tconst view = this.view;\n\n\t\t\tif (this.view !== null && this.view.enabled) {\n\t\t\t\tconst fullWidth = view.fullWidth,\n\t\t\t\t\t\t\tfullHeight = view.fullHeight;\n\t\t\t\tleft += view.offsetX * width / fullWidth;\n\t\t\t\ttop -= view.offsetY * height / fullHeight;\n\t\t\t\twidth *= view.width / fullWidth;\n\t\t\t\theight *= view.height / fullHeight;\n\t\t\t}\n\n\t\t\tconst skew = this.filmOffset;\n\t\t\tif (skew !== 0) left += near * skew / this.getFilmWidth();\n\t\t\tthis.projectionMatrix.makePerspective(left, left + width, top, top - height, near, this.far);\n\t\t\tthis.projectionMatrixInverse.copy(this.projectionMatrix).invert();\n\t\t}\n\n\t\ttoJSON(meta) {\n\t\t\tconst data = super.toJSON(meta);\n\t\t\tdata.object.fov = this.fov;\n\t\t\tdata.object.zoom = this.zoom;\n\t\t\tdata.object.near = this.near;\n\t\t\tdata.object.far = this.far;\n\t\t\tdata.object.focus = this.focus;\n\t\t\tdata.object.aspect = this.aspect;\n\t\t\tif (this.view !== null) data.object.view = Object.assign({}, this.view);\n\t\t\tdata.object.filmGauge = this.filmGauge;\n\t\t\tdata.object.filmOffset = this.filmOffset;\n\t\t\treturn data;\n\t\t}\n\n\t}\n\n\tPerspectiveCamera.prototype.isPerspectiveCamera = true;\n\n\tconst fov = 90,\n\t\t\t\taspect = 1;\n\n\tclass CubeCamera extends Object3D {\n\t\tconstructor(near, far, renderTarget) {\n\t\t\tsuper();\n\t\t\tthis.type = 'CubeCamera';\n\n\t\t\tif (renderTarget.isWebGLCubeRenderTarget !== true) {\n\t\t\t\tconsole.error('THREE.CubeCamera: The constructor now expects an instance of WebGLCubeRenderTarget as third parameter.');\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis.renderTarget = renderTarget;\n\t\t\tconst cameraPX = new PerspectiveCamera(fov, aspect, near, far);\n\t\t\tcameraPX.layers = this.layers;\n\t\t\tcameraPX.up.set(0, -1, 0);\n\t\t\tcameraPX.lookAt(new Vector3(1, 0, 0));\n\t\t\tthis.add(cameraPX);\n\t\t\tconst cameraNX = new PerspectiveCamera(fov, aspect, near, far);\n\t\t\tcameraNX.layers = this.layers;\n\t\t\tcameraNX.up.set(0, -1, 0);\n\t\t\tcameraNX.lookAt(new Vector3(-1, 0, 0));\n\t\t\tthis.add(cameraNX);\n\t\t\tconst cameraPY = new PerspectiveCamera(fov, aspect, near, far);\n\t\t\tcameraPY.layers = this.layers;\n\t\t\tcameraPY.up.set(0, 0, 1);\n\t\t\tcameraPY.lookAt(new Vector3(0, 1, 0));\n\t\t\tthis.add(cameraPY);\n\t\t\tconst cameraNY = new PerspectiveCamera(fov, aspect, near, far);\n\t\t\tcameraNY.layers = this.layers;\n\t\t\tcameraNY.up.set(0, 0, -1);\n\t\t\tcameraNY.lookAt(new Vector3(0, -1, 0));\n\t\t\tthis.add(cameraNY);\n\t\t\tconst cameraPZ = new PerspectiveCamera(fov, aspect, near, far);\n\t\t\tcameraPZ.layers = this.layers;\n\t\t\tcameraPZ.up.set(0, -1, 0);\n\t\t\tcameraPZ.lookAt(new Vector3(0, 0, 1));\n\t\t\tthis.add(cameraPZ);\n\t\t\tconst cameraNZ = new PerspectiveCamera(fov, aspect, near, far);\n\t\t\tcameraNZ.layers = this.layers;\n\t\t\tcameraNZ.up.set(0, -1, 0);\n\t\t\tcameraNZ.lookAt(new Vector3(0, 0, -1));\n\t\t\tthis.add(cameraNZ);\n\t\t}\n\n\t\tupdate(renderer, scene) {\n\t\t\tif (this.parent === null) this.updateMatrixWorld();\n\t\t\tconst renderTarget = this.renderTarget;\n\t\t\tconst [cameraPX, cameraNX, cameraPY, cameraNY, cameraPZ, cameraNZ] = this.children;\n\t\t\tconst currentXrEnabled = renderer.xr.enabled;\n\t\t\tconst currentRenderTarget = renderer.getRenderTarget();\n\t\t\trenderer.xr.enabled = false;\n\t\t\tconst generateMipmaps = renderTarget.texture.generateMipmaps;\n\t\t\trenderTarget.texture.generateMipmaps = false;\n\t\t\trenderer.setRenderTarget(renderTarget, 0);\n\t\t\trenderer.render(scene, cameraPX);\n\t\t\trenderer.setRenderTarget(renderTarget, 1);\n\t\t\trenderer.render(scene, cameraNX);\n\t\t\trenderer.setRenderTarget(renderTarget, 2);\n\t\t\trenderer.render(scene, cameraPY);\n\t\t\trenderer.setRenderTarget(renderTarget, 3);\n\t\t\trenderer.render(scene, cameraNY);\n\t\t\trenderer.setRenderTarget(renderTarget, 4);\n\t\t\trenderer.render(scene, cameraPZ);\n\t\t\trenderTarget.texture.generateMipmaps = generateMipmaps;\n\t\t\trenderer.setRenderTarget(renderTarget, 5);\n\t\t\trenderer.render(scene, cameraNZ);\n\t\t\trenderer.setRenderTarget(currentRenderTarget);\n\t\t\trenderer.xr.enabled = currentXrEnabled;\n\t\t}\n\n\t}\n\n\tclass CubeTexture extends Texture {\n\t\tconstructor(images, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding) {\n\t\t\timages = images !== undefined ? images : [];\n\t\t\tmapping = mapping !== undefined ? mapping : CubeReflectionMapping;\n\t\t\tsuper(images, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding);\n\t\t\tthis.flipY = false;\n\t\t}\n\n\t\tget images() {\n\t\t\treturn this.image;\n\t\t}\n\n\t\tset images(value) {\n\t\t\tthis.image = value;\n\t\t}\n\n\t}\n\n\tCubeTexture.prototype.isCubeTexture = true;\n\n\tclass WebGLCubeRenderTarget extends WebGLRenderTarget {\n\t\tconstructor(size, options, dummy) {\n\t\t\tif (Number.isInteger(options)) {\n\t\t\t\tconsole.warn('THREE.WebGLCubeRenderTarget: constructor signature is now WebGLCubeRenderTarget( size, options )');\n\t\t\t\toptions = dummy;\n\t\t\t}\n\n\t\t\tsuper(size, size, options);\n\t\t\toptions = options || {}; // By convention -- likely based on the RenderMan spec from the 1990's -- cube maps are specified by WebGL (and three.js)\n\t\t\t// in a coordinate system in which positive-x is to the right when looking up the positive-z axis -- in other words,\n\t\t\t// in a left-handed coordinate system. By continuing this convention, preexisting cube maps continued to render correctly.\n\t\t\t// three.js uses a right-handed coordinate system. So environment maps used in three.js appear to have px and nx swapped\n\t\t\t// and the flag isRenderTargetTexture controls this conversion. The flip is not required when using WebGLCubeRenderTarget.texture\n\t\t\t// as a cube texture (this is detected when isRenderTargetTexture is set to true for cube textures).\n\n\t\t\tthis.texture = new CubeTexture(undefined, options.mapping, options.wrapS, options.wrapT, options.magFilter, options.minFilter, options.format, options.type, options.anisotropy, options.encoding);\n\t\t\tthis.texture.isRenderTargetTexture = true;\n\t\t\tthis.texture.generateMipmaps = options.generateMipmaps !== undefined ? options.generateMipmaps : false;\n\t\t\tthis.texture.minFilter = options.minFilter !== undefined ? options.minFilter : LinearFilter;\n\t\t\tthis.texture._needsFlipEnvMap = false;\n\t\t}\n\n\t\tfromEquirectangularTexture(renderer, texture) {\n\t\t\tthis.texture.type = texture.type;\n\t\t\tthis.texture.format = RGBAFormat; // see #18859\n\n\t\t\tthis.texture.encoding = texture.encoding;\n\t\t\tthis.texture.generateMipmaps = texture.generateMipmaps;\n\t\t\tthis.texture.minFilter = texture.minFilter;\n\t\t\tthis.texture.magFilter = texture.magFilter;\n\t\t\tconst shader = {\n\t\t\t\tuniforms: {\n\t\t\t\t\ttEquirect: {\n\t\t\t\t\t\tvalue: null\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tvertexShader:\n\t\t\t\t/* glsl */\n\t\t\t\t`\n\n\t\t\t\tvarying vec3 vWorldDirection;\n\n\t\t\t\tvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\n\n\t\t\t\t\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\n\n\t\t\t\t}\n\n\t\t\t\tvoid main() {\n\n\t\t\t\t\tvWorldDirection = transformDirection( position, modelMatrix );\n\n\t\t\t\t\t#include <begin_vertex>\n\t\t\t\t\t#include <project_vertex>\n\n\t\t\t\t}\n\t\t\t`,\n\t\t\t\tfragmentShader:\n\t\t\t\t/* glsl */\n\t\t\t\t`\n\n\t\t\t\tuniform sampler2D tEquirect;\n\n\t\t\t\tvarying vec3 vWorldDirection;\n\n\t\t\t\t#include <common>\n\n\t\t\t\tvoid main() {\n\n\t\t\t\t\tvec3 direction = normalize( vWorldDirection );\n\n\t\t\t\t\tvec2 sampleUV = equirectUv( direction );\n\n\t\t\t\t\tgl_FragColor = texture2D( tEquirect, sampleUV );\n\n\t\t\t\t}\n\t\t\t`\n\t\t\t};\n\t\t\tconst geometry = new BoxGeometry(5, 5, 5);\n\t\t\tconst material = new ShaderMaterial({\n\t\t\t\tname: 'CubemapFromEquirect',\n\t\t\t\tuniforms: cloneUniforms(shader.uniforms),\n\t\t\t\tvertexShader: shader.vertexShader,\n\t\t\t\tfragmentShader: shader.fragmentShader,\n\t\t\t\tside: BackSide,\n\t\t\t\tblending: NoBlending\n\t\t\t});\n\t\t\tmaterial.uniforms.tEquirect.value = texture;\n\t\t\tconst mesh = new Mesh(geometry, material);\n\t\t\tconst currentMinFilter = texture.minFilter; // Avoid blurred poles\n\n\t\t\tif (texture.minFilter === LinearMipmapLinearFilter) texture.minFilter = LinearFilter;\n\t\t\tconst camera = new CubeCamera(1, 10, this);\n\t\t\tcamera.update(renderer, mesh);\n\t\t\ttexture.minFilter = currentMinFilter;\n\t\t\tmesh.geometry.dispose();\n\t\t\tmesh.material.dispose();\n\t\t\treturn this;\n\t\t}\n\n\t\tclear(renderer, color, depth, stencil) {\n\t\t\tconst currentRenderTarget = renderer.getRenderTarget();\n\n\t\t\tfor (let i = 0; i < 6; i++) {\n\t\t\t\trenderer.setRenderTarget(this, i);\n\t\t\t\trenderer.clear(color, depth, stencil);\n\t\t\t}\n\n\t\t\trenderer.setRenderTarget(currentRenderTarget);\n\t\t}\n\n\t}\n\n\tWebGLCubeRenderTarget.prototype.isWebGLCubeRenderTarget = true;\n\n\tconst _vector1 = /*@__PURE__*/new Vector3();\n\n\tconst _vector2 = /*@__PURE__*/new Vector3();\n\n\tconst _normalMatrix = /*@__PURE__*/new Matrix3();\n\n\tclass Plane {\n\t\tconstructor(normal = new Vector3(1, 0, 0), constant = 0) {\n\t\t\t// normal is assumed to be normalized\n\t\t\tthis.normal = normal;\n\t\t\tthis.constant = constant;\n\t\t}\n\n\t\tset(normal, constant) {\n\t\t\tthis.normal.copy(normal);\n\t\t\tthis.constant = constant;\n\t\t\treturn this;\n\t\t}\n\n\t\tsetComponents(x, y, z, w) {\n\t\t\tthis.normal.set(x, y, z);\n\t\t\tthis.constant = w;\n\t\t\treturn this;\n\t\t}\n\n\t\tsetFromNormalAndCoplanarPoint(normal, point) {\n\t\t\tthis.normal.copy(normal);\n\t\t\tthis.constant = -point.dot(this.normal);\n\t\t\treturn this;\n\t\t}\n\n\t\tsetFromCoplanarPoints(a, b, c) {\n\t\t\tconst normal = _vector1.subVectors(c, b).cross(_vector2.subVectors(a, b)).normalize(); // Q: should an error be thrown if normal is zero (e.g. degenerate plane)?\n\n\n\t\t\tthis.setFromNormalAndCoplanarPoint(normal, a);\n\t\t\treturn this;\n\t\t}\n\n\t\tcopy(plane) {\n\t\t\tthis.normal.copy(plane.normal);\n\t\t\tthis.constant = plane.constant;\n\t\t\treturn this;\n\t\t}\n\n\t\tnormalize() {\n\t\t\t// Note: will lead to a divide by zero if the plane is invalid.\n\t\t\tconst inverseNormalLength = 1.0 / this.normal.length();\n\t\t\tthis.normal.multiplyScalar(inverseNormalLength);\n\t\t\tthis.constant *= inverseNormalLength;\n\t\t\treturn this;\n\t\t}\n\n\t\tnegate() {\n\t\t\tthis.constant *= -1;\n\t\t\tthis.normal.negate();\n\t\t\treturn this;\n\t\t}\n\n\t\tdistanceToPoint(point) {\n\t\t\treturn this.normal.dot(point) + this.constant;\n\t\t}\n\n\t\tdistanceToSphere(sphere) {\n\t\t\treturn this.distanceToPoint(sphere.center) - sphere.radius;\n\t\t}\n\n\t\tprojectPoint(point, target) {\n\t\t\treturn target.copy(this.normal).multiplyScalar(-this.distanceToPoint(point)).add(point);\n\t\t}\n\n\t\tintersectLine(line, target) {\n\t\t\tconst direction = line.delta(_vector1);\n\t\t\tconst denominator = this.normal.dot(direction);\n\n\t\t\tif (denominator === 0) {\n\t\t\t\t// line is coplanar, return origin\n\t\t\t\tif (this.distanceToPoint(line.start) === 0) {\n\t\t\t\t\treturn target.copy(line.start);\n\t\t\t\t} // Unsure if this is the correct method to handle this case.\n\n\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tconst t = -(line.start.dot(this.normal) + this.constant) / denominator;\n\n\t\t\tif (t < 0 || t > 1) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\treturn target.copy(direction).multiplyScalar(t).add(line.start);\n\t\t}\n\n\t\tintersectsLine(line) {\n\t\t\t// Note: this tests if a line intersects the plane, not whether it (or its end-points) are coplanar with it.\n\t\t\tconst startSign = this.distanceToPoint(line.start);\n\t\t\tconst endSign = this.distanceToPoint(line.end);\n\t\t\treturn startSign < 0 && endSign > 0 || endSign < 0 && startSign > 0;\n\t\t}\n\n\t\tintersectsBox(box) {\n\t\t\treturn box.intersectsPlane(this);\n\t\t}\n\n\t\tintersectsSphere(sphere) {\n\t\t\treturn sphere.intersectsPlane(this);\n\t\t}\n\n\t\tcoplanarPoint(target) {\n\t\t\treturn target.copy(this.normal).multiplyScalar(-this.constant);\n\t\t}\n\n\t\tapplyMatrix4(matrix, optionalNormalMatrix) {\n\t\t\tconst normalMatrix = optionalNormalMatrix || _normalMatrix.getNormalMatrix(matrix);\n\n\t\t\tconst referencePoint = this.coplanarPoint(_vector1).applyMatrix4(matrix);\n\t\t\tconst normal = this.normal.applyMatrix3(normalMatrix).normalize();\n\t\t\tthis.constant = -referencePoint.dot(normal);\n\t\t\treturn this;\n\t\t}\n\n\t\ttranslate(offset) {\n\t\t\tthis.constant -= offset.dot(this.normal);\n\t\t\treturn this;\n\t\t}\n\n\t\tequals(plane) {\n\t\t\treturn plane.normal.equals(this.normal) && plane.constant === this.constant;\n\t\t}\n\n\t\tclone() {\n\t\t\treturn new this.constructor().copy(this);\n\t\t}\n\n\t}\n\n\tPlane.prototype.isPlane = true;\n\n\tconst _sphere$2 = /*@__PURE__*/new Sphere();\n\n\tconst _vector$7 = /*@__PURE__*/new Vector3();\n\n\tclass Frustum {\n\t\tconstructor(p0 = new Plane(), p1 = new Plane(), p2 = new Plane(), p3 = new Plane(), p4 = new Plane(), p5 = new Plane()) {\n\t\t\tthis.planes = [p0, p1, p2, p3, p4, p5];\n\t\t}\n\n\t\tset(p0, p1, p2, p3, p4, p5) {\n\t\t\tconst planes = this.planes;\n\t\t\tplanes[0].copy(p0);\n\t\t\tplanes[1].copy(p1);\n\t\t\tplanes[2].copy(p2);\n\t\t\tplanes[3].copy(p3);\n\t\t\tplanes[4].copy(p4);\n\t\t\tplanes[5].copy(p5);\n\t\t\treturn this;\n\t\t}\n\n\t\tcopy(frustum) {\n\t\t\tconst planes = this.planes;\n\n\t\t\tfor (let i = 0; i < 6; i++) {\n\t\t\t\tplanes[i].copy(frustum.planes[i]);\n\t\t\t}\n\n\t\t\treturn this;\n\t\t}\n\n\t\tsetFromProjectionMatrix(m) {\n\t\t\tconst planes = this.planes;\n\t\t\tconst me = m.elements;\n\t\t\tconst me0 = me[0],\n\t\t\t\t\t\tme1 = me[1],\n\t\t\t\t\t\tme2 = me[2],\n\t\t\t\t\t\tme3 = me[3];\n\t\t\tconst me4 = me[4],\n\t\t\t\t\t\tme5 = me[5],\n\t\t\t\t\t\tme6 = me[6],\n\t\t\t\t\t\tme7 = me[7];\n\t\t\tconst me8 = me[8],\n\t\t\t\t\t\tme9 = me[9],\n\t\t\t\t\t\tme10 = me[10],\n\t\t\t\t\t\tme11 = me[11];\n\t\t\tconst me12 = me[12],\n\t\t\t\t\t\tme13 = me[13],\n\t\t\t\t\t\tme14 = me[14],\n\t\t\t\t\t\tme15 = me[15];\n\t\t\tplanes[0].setComponents(me3 - me0, me7 - me4, me11 - me8, me15 - me12).normalize();\n\t\t\tplanes[1].setComponents(me3 + me0, me7 + me4, me11 + me8, me15 + me12).normalize();\n\t\t\tplanes[2].setComponents(me3 + me1, me7 + me5, me11 + me9, me15 + me13).normalize();\n\t\t\tplanes[3].setComponents(me3 - me1, me7 - me5, me11 - me9, me15 - me13).normalize();\n\t\t\tplanes[4].setComponents(me3 - me2, me7 - me6, me11 - me10, me15 - me14).normalize();\n\t\t\tplanes[5].setComponents(me3 + me2, me7 + me6, me11 + me10, me15 + me14).normalize();\n\t\t\treturn this;\n\t\t}\n\n\t\tintersectsObject(object) {\n\t\t\tconst geometry = object.geometry;\n\t\t\tif (geometry.boundingSphere === null) geometry.computeBoundingSphere();\n\n\t\t\t_sphere$2.copy(geometry.boundingSphere).applyMatrix4(object.matrixWorld);\n\n\t\t\treturn this.intersectsSphere(_sphere$2);\n\t\t}\n\n\t\tintersectsSprite(sprite) {\n\t\t\t_sphere$2.center.set(0, 0, 0);\n\n\t\t\t_sphere$2.radius = 0.7071067811865476;\n\n\t\t\t_sphere$2.applyMatrix4(sprite.matrixWorld);\n\n\t\t\treturn this.intersectsSphere(_sphere$2);\n\t\t}\n\n\t\tintersectsSphere(sphere) {\n\t\t\tconst planes = this.planes;\n\t\t\tconst center = sphere.center;\n\t\t\tconst negRadius = -sphere.radius;\n\n\t\t\tfor (let i = 0; i < 6; i++) {\n\t\t\t\tconst distance = planes[i].distanceToPoint(center);\n\n\t\t\t\tif (distance < negRadius) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn true;\n\t\t}\n\n\t\tintersectsBox(box) {\n\t\t\tconst planes = this.planes;\n\n\t\t\tfor (let i = 0; i < 6; i++) {\n\t\t\t\tconst plane = planes[i]; // corner at max distance\n\n\t\t\t\t_vector$7.x = plane.normal.x > 0 ? box.max.x : box.min.x;\n\t\t\t\t_vector$7.y = plane.normal.y > 0 ? box.max.y : box.min.y;\n\t\t\t\t_vector$7.z = plane.normal.z > 0 ? box.max.z : box.min.z;\n\n\t\t\t\tif (plane.distanceToPoint(_vector$7) < 0) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn true;\n\t\t}\n\n\t\tcontainsPoint(point) {\n\t\t\tconst planes = this.planes;\n\n\t\t\tfor (let i = 0; i < 6; i++) {\n\t\t\t\tif (planes[i].distanceToPoint(point) < 0) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn true;\n\t\t}\n\n\t\tclone() {\n\t\t\treturn new this.constructor().copy(this);\n\t\t}\n\n\t}\n\n\tfunction WebGLAnimation() {\n\t\tlet context = null;\n\t\tlet isAnimating = false;\n\t\tlet animationLoop = null;\n\t\tlet requestId = null;\n\n\t\tfunction onAnimationFrame(time, frame) {\n\t\t\tanimationLoop(time, frame);\n\t\t\trequestId = context.requestAnimationFrame(onAnimationFrame);\n\t\t}\n\n\t\treturn {\n\t\t\tstart: function () {\n\t\t\t\tif (isAnimating === true) return;\n\t\t\t\tif (animationLoop === null) return;\n\t\t\t\trequestId = context.requestAnimationFrame(onAnimationFrame);\n\t\t\t\tisAnimating = true;\n\t\t\t},\n\t\t\tstop: function () {\n\t\t\t\tcontext.cancelAnimationFrame(requestId);\n\t\t\t\tisAnimating = false;\n\t\t\t},\n\t\t\tsetAnimationLoop: function (callback) {\n\t\t\t\tanimationLoop = callback;\n\t\t\t},\n\t\t\tsetContext: function (value) {\n\t\t\t\tcontext = value;\n\t\t\t}\n\t\t};\n\t}\n\n\tfunction WebGLAttributes(gl, capabilities) {\n\t\tconst isWebGL2 = capabilities.isWebGL2;\n\t\tconst buffers = new WeakMap();\n\n\t\tfunction createBuffer(attribute, bufferType) {\n\t\t\tconst array = attribute.array;\n\t\t\tconst usage = attribute.usage;\n\t\t\tconst buffer = gl.createBuffer();\n\t\t\tgl.bindBuffer(bufferType, buffer);\n\t\t\tgl.bufferData(bufferType, array, usage);\n\t\t\tattribute.onUploadCallback();\n\t\t\tlet type = gl.FLOAT;\n\n\t\t\tif (array instanceof Float32Array) {\n\t\t\t\ttype = gl.FLOAT;\n\t\t\t} else if (array instanceof Float64Array) {\n\t\t\t\tconsole.warn('THREE.WebGLAttributes: Unsupported data buffer format: Float64Array.');\n\t\t\t} else if (array instanceof Uint16Array) {\n\t\t\t\tif (attribute.isFloat16BufferAttribute) {\n\t\t\t\t\tif (isWebGL2) {\n\t\t\t\t\t\ttype = gl.HALF_FLOAT;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tconsole.warn('THREE.WebGLAttributes: Usage of Float16BufferAttribute requires WebGL2.');\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\ttype = gl.UNSIGNED_SHORT;\n\t\t\t\t}\n\t\t\t} else if (array instanceof Int16Array) {\n\t\t\t\ttype = gl.SHORT;\n\t\t\t} else if (array instanceof Uint32Array) {\n\t\t\t\ttype = gl.UNSIGNED_INT;\n\t\t\t} else if (array instanceof Int32Array) {\n\t\t\t\ttype = gl.INT;\n\t\t\t} else if (array instanceof Int8Array) {\n\t\t\t\ttype = gl.BYTE;\n\t\t\t} else if (array instanceof Uint8Array) {\n\t\t\t\ttype = gl.UNSIGNED_BYTE;\n\t\t\t} else if (array instanceof Uint8ClampedArray) {\n\t\t\t\ttype = gl.UNSIGNED_BYTE;\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tbuffer: buffer,\n\t\t\t\ttype: type,\n\t\t\t\tbytesPerElement: array.BYTES_PER_ELEMENT,\n\t\t\t\tversion: attribute.version\n\t\t\t};\n\t\t}\n\n\t\tfunction updateBuffer(buffer, attribute, bufferType) {\n\t\t\tconst array = attribute.array;\n\t\t\tconst updateRange = attribute.updateRange;\n\t\t\tgl.bindBuffer(bufferType, buffer);\n\n\t\t\tif (updateRange.count === -1) {\n\t\t\t\t// Not using update ranges\n\t\t\t\tgl.bufferSubData(bufferType, 0, array);\n\t\t\t} else {\n\t\t\t\tif (isWebGL2) {\n\t\t\t\t\tgl.bufferSubData(bufferType, updateRange.offset * array.BYTES_PER_ELEMENT, array, updateRange.offset, updateRange.count);\n\t\t\t\t} else {\n\t\t\t\t\tgl.bufferSubData(bufferType, updateRange.offset * array.BYTES_PER_ELEMENT, array.subarray(updateRange.offset, updateRange.offset + updateRange.count));\n\t\t\t\t}\n\n\t\t\t\tupdateRange.count = -1; // reset range\n\t\t\t}\n\t\t} //\n\n\n\t\tfunction get(attribute) {\n\t\t\tif (attribute.isInterleavedBufferAttribute) attribute = attribute.data;\n\t\t\treturn buffers.get(attribute);\n\t\t}\n\n\t\tfunction remove(attribute) {\n\t\t\tif (attribute.isInterleavedBufferAttribute) attribute = attribute.data;\n\t\t\tconst data = buffers.get(attribute);\n\n\t\t\tif (data) {\n\t\t\t\tgl.deleteBuffer(data.buffer);\n\t\t\t\tbuffers.delete(attribute);\n\t\t\t}\n\t\t}\n\n\t\tfunction update(attribute, bufferType) {\n\t\t\tif (attribute.isGLBufferAttribute) {\n\t\t\t\tconst cached = buffers.get(attribute);\n\n\t\t\t\tif (!cached || cached.version < attribute.version) {\n\t\t\t\t\tbuffers.set(attribute, {\n\t\t\t\t\t\tbuffer: attribute.buffer,\n\t\t\t\t\t\ttype: attribute.type,\n\t\t\t\t\t\tbytesPerElement: attribute.elementSize,\n\t\t\t\t\t\tversion: attribute.version\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (attribute.isInterleavedBufferAttribute) attribute = attribute.data;\n\t\t\tconst data = buffers.get(attribute);\n\n\t\t\tif (data === undefined) {\n\t\t\t\tbuffers.set(attribute, createBuffer(attribute, bufferType));\n\t\t\t} else if (data.version < attribute.version) {\n\t\t\t\tupdateBuffer(data.buffer, attribute, bufferType);\n\t\t\t\tdata.version = attribute.version;\n\t\t\t}\n\t\t}\n\n\t\treturn {\n\t\t\tget: get,\n\t\t\tremove: remove,\n\t\t\tupdate: update\n\t\t};\n\t}\n\n\tclass PlaneGeometry extends BufferGeometry {\n\t\tconstructor(width = 1, height = 1, widthSegments = 1, heightSegments = 1) {\n\t\t\tsuper();\n\t\t\tthis.type = 'PlaneGeometry';\n\t\t\tthis.parameters = {\n\t\t\t\twidth: width,\n\t\t\t\theight: height,\n\t\t\t\twidthSegments: widthSegments,\n\t\t\t\theightSegments: heightSegments\n\t\t\t};\n\t\t\tconst width_half = width / 2;\n\t\t\tconst height_half = height / 2;\n\t\t\tconst gridX = Math.floor(widthSegments);\n\t\t\tconst gridY = Math.floor(heightSegments);\n\t\t\tconst gridX1 = gridX + 1;\n\t\t\tconst gridY1 = gridY + 1;\n\t\t\tconst segment_width = width / gridX;\n\t\t\tconst segment_height = height / gridY; //\n\n\t\t\tconst indices = [];\n\t\t\tconst vertices = [];\n\t\t\tconst normals = [];\n\t\t\tconst uvs = [];\n\n\t\t\tfor (let iy = 0; iy < gridY1; iy++) {\n\t\t\t\tconst y = iy * segment_height - height_half;\n\n\t\t\t\tfor (let ix = 0; ix < gridX1; ix++) {\n\t\t\t\t\tconst x = ix * segment_width - width_half;\n\t\t\t\t\tvertices.push(x, -y, 0);\n\t\t\t\t\tnormals.push(0, 0, 1);\n\t\t\t\t\tuvs.push(ix / gridX);\n\t\t\t\t\tuvs.push(1 - iy / gridY);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfor (let iy = 0; iy < gridY; iy++) {\n\t\t\t\tfor (let ix = 0; ix < gridX; ix++) {\n\t\t\t\t\tconst a = ix + gridX1 * iy;\n\t\t\t\t\tconst b = ix + gridX1 * (iy + 1);\n\t\t\t\t\tconst c = ix + 1 + gridX1 * (iy + 1);\n\t\t\t\t\tconst d = ix + 1 + gridX1 * iy;\n\t\t\t\t\tindices.push(a, b, d);\n\t\t\t\t\tindices.push(b, c, d);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.setIndex(indices);\n\t\t\tthis.setAttribute('position', new Float32BufferAttribute(vertices, 3));\n\t\t\tthis.setAttribute('normal', new Float32BufferAttribute(normals, 3));\n\t\t\tthis.setAttribute('uv', new Float32BufferAttribute(uvs, 2));\n\t\t}\n\n\t\tstatic fromJSON(data) {\n\t\t\treturn new PlaneGeometry(data.width, data.height, data.widthSegments, data.heightSegments);\n\t\t}\n\n\t}\n\n\tvar alphamap_fragment = \"#ifdef USE_ALPHAMAP\\n\\tdiffuseColor.a *= texture2D( alphaMap, vUv ).g;\\n#endif\";\n\n\tvar alphamap_pars_fragment = \"#ifdef USE_ALPHAMAP\\n\\tuniform sampler2D alphaMap;\\n#endif\";\n\n\tvar alphatest_fragment = \"#ifdef USE_ALPHATEST\\n\\tif ( diffuseColor.a < alphaTest ) discard;\\n#endif\";\n\n\tvar alphatest_pars_fragment = \"#ifdef USE_ALPHATEST\\n\\tuniform float alphaTest;\\n#endif\";\n\n\tvar aomap_fragment = \"#ifdef USE_AOMAP\\n\\tfloat ambientOcclusion = ( texture2D( aoMap, vUv2 ).r - 1.0 ) * aoMapIntensity + 1.0;\\n\\treflectedLight.indirectDiffuse *= ambientOcclusion;\\n\\t#if defined( USE_ENVMAP ) && defined( STANDARD )\\n\\t\\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\\n\\t\\treflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.roughness );\\n\\t#endif\\n#endif\";\n\n\tvar aomap_pars_fragment = \"#ifdef USE_AOMAP\\n\\tuniform sampler2D aoMap;\\n\\tuniform float aoMapIntensity;\\n#endif\";\n\n\tvar begin_vertex = \"vec3 transformed = vec3( position );\";\n\n\tvar beginnormal_vertex = \"vec3 objectNormal = vec3( normal );\\n#ifdef USE_TANGENT\\n\\tvec3 objectTangent = vec3( tangent.xyz );\\n#endif\";\n\n\tvar bsdfs = \"vec3 BRDF_Lambert( const in vec3 diffuseColor ) {\\n\\treturn RECIPROCAL_PI * diffuseColor;\\n}\\nvec3 F_Schlick( const in vec3 f0, const in float f90, const in float dotVH ) {\\n\\tfloat fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );\\n\\treturn f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );\\n}\\nfloat V_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {\\n\\tfloat a2 = pow2( alpha );\\n\\tfloat gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\\n\\tfloat gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\\n\\treturn 0.5 / max( gv + gl, EPSILON );\\n}\\nfloat D_GGX( const in float alpha, const in float dotNH ) {\\n\\tfloat a2 = pow2( alpha );\\n\\tfloat denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;\\n\\treturn RECIPROCAL_PI * a2 / pow2( denom );\\n}\\nvec3 BRDF_GGX( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 f0, const in float f90, const in float roughness ) {\\n\\tfloat alpha = pow2( roughness );\\n\\tvec3 halfDir = normalize( lightDir + viewDir );\\n\\tfloat dotNL = saturate( dot( normal, lightDir ) );\\n\\tfloat dotNV = saturate( dot( normal, viewDir ) );\\n\\tfloat dotNH = saturate( dot( normal, halfDir ) );\\n\\tfloat dotVH = saturate( dot( viewDir, halfDir ) );\\n\\tvec3 F = F_Schlick( f0, f90, dotVH );\\n\\tfloat V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );\\n\\tfloat D = D_GGX( alpha, dotNH );\\n\\treturn F * ( V * D );\\n}\\nvec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {\\n\\tconst float LUT_SIZE = 64.0;\\n\\tconst float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;\\n\\tconst float LUT_BIAS = 0.5 / LUT_SIZE;\\n\\tfloat dotNV = saturate( dot( N, V ) );\\n\\tvec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );\\n\\tuv = uv * LUT_SCALE + LUT_BIAS;\\n\\treturn uv;\\n}\\nfloat LTC_ClippedSphereFormFactor( const in vec3 f ) {\\n\\tfloat l = length( f );\\n\\treturn max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );\\n}\\nvec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {\\n\\tfloat x = dot( v1, v2 );\\n\\tfloat y = abs( x );\\n\\tfloat a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;\\n\\tfloat b = 3.4175940 + ( 4.1616724 + y ) * y;\\n\\tfloat v = a / b;\\n\\tfloat theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;\\n\\treturn cross( v1, v2 ) * theta_sintheta;\\n}\\nvec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {\\n\\tvec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];\\n\\tvec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];\\n\\tvec3 lightNormal = cross( v1, v2 );\\n\\tif( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );\\n\\tvec3 T1, T2;\\n\\tT1 = normalize( V - N * dot( V, N ) );\\n\\tT2 = - cross( N, T1 );\\n\\tmat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );\\n\\tvec3 coords[ 4 ];\\n\\tcoords[ 0 ] = mat * ( rectCoords[ 0 ] - P );\\n\\tcoords[ 1 ] = mat * ( rectCoords[ 1 ] - P );\\n\\tcoords[ 2 ] = mat * ( rectCoords[ 2 ] - P );\\n\\tcoords[ 3 ] = mat * ( rectCoords[ 3 ] - P );\\n\\tcoords[ 0 ] = normalize( coords[ 0 ] );\\n\\tcoords[ 1 ] = normalize( coords[ 1 ] );\\n\\tcoords[ 2 ] = normalize( coords[ 2 ] );\\n\\tcoords[ 3 ] = normalize( coords[ 3 ] );\\n\\tvec3 vectorFormFactor = vec3( 0.0 );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );\\n\\tfloat result = LTC_ClippedSphereFormFactor( vectorFormFactor );\\n\\treturn vec3( result );\\n}\\nfloat G_BlinnPhong_Implicit( ) {\\n\\treturn 0.25;\\n}\\nfloat D_BlinnPhong( const in float shininess, const in float dotNH ) {\\n\\treturn RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );\\n}\\nvec3 BRDF_BlinnPhong( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float shininess ) {\\n\\tvec3 halfDir = normalize( lightDir + viewDir );\\n\\tfloat dotNH = saturate( dot( normal, halfDir ) );\\n\\tfloat dotVH = saturate( dot( viewDir, halfDir ) );\\n\\tvec3 F = F_Schlick( specularColor, 1.0, dotVH );\\n\\tfloat G = G_BlinnPhong_Implicit( );\\n\\tfloat D = D_BlinnPhong( shininess, dotNH );\\n\\treturn F * ( G * D );\\n}\\n#if defined( USE_SHEEN )\\nfloat D_Charlie( float roughness, float dotNH ) {\\n\\tfloat alpha = pow2( roughness );\\n\\tfloat invAlpha = 1.0 / alpha;\\n\\tfloat cos2h = dotNH * dotNH;\\n\\tfloat sin2h = max( 1.0 - cos2h, 0.0078125 );\\n\\treturn ( 2.0 + invAlpha ) * pow( sin2h, invAlpha * 0.5 ) / ( 2.0 * PI );\\n}\\nfloat V_Neubelt( float dotNV, float dotNL ) {\\n\\treturn saturate( 1.0 / ( 4.0 * ( dotNL + dotNV - dotNL * dotNV ) ) );\\n}\\nvec3 BRDF_Sheen( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, vec3 sheenColor, const in float sheenRoughness ) {\\n\\tvec3 halfDir = normalize( lightDir + viewDir );\\n\\tfloat dotNL = saturate( dot( normal, lightDir ) );\\n\\tfloat dotNV = saturate( dot( normal, viewDir ) );\\n\\tfloat dotNH = saturate( dot( normal, halfDir ) );\\n\\tfloat D = D_Charlie( sheenRoughness, dotNH );\\n\\tfloat V = V_Neubelt( dotNV, dotNL );\\n\\treturn sheenColor * ( D * V );\\n}\\n#endif\";\n\n\tvar bumpmap_pars_fragment = \"#ifdef USE_BUMPMAP\\n\\tuniform sampler2D bumpMap;\\n\\tuniform float bumpScale;\\n\\tvec2 dHdxy_fwd() {\\n\\t\\tvec2 dSTdx = dFdx( vUv );\\n\\t\\tvec2 dSTdy = dFdy( vUv );\\n\\t\\tfloat Hll = bumpScale * texture2D( bumpMap, vUv ).x;\\n\\t\\tfloat dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;\\n\\t\\tfloat dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;\\n\\t\\treturn vec2( dBx, dBy );\\n\\t}\\n\\tvec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy, float faceDirection ) {\\n\\t\\tvec3 vSigmaX = vec3( dFdx( surf_pos.x ), dFdx( surf_pos.y ), dFdx( surf_pos.z ) );\\n\\t\\tvec3 vSigmaY = vec3( dFdy( surf_pos.x ), dFdy( surf_pos.y ), dFdy( surf_pos.z ) );\\n\\t\\tvec3 vN = surf_norm;\\n\\t\\tvec3 R1 = cross( vSigmaY, vN );\\n\\t\\tvec3 R2 = cross( vN, vSigmaX );\\n\\t\\tfloat fDet = dot( vSigmaX, R1 ) * faceDirection;\\n\\t\\tvec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\\n\\t\\treturn normalize( abs( fDet ) * surf_norm - vGrad );\\n\\t}\\n#endif\";\n\n\tvar clipping_planes_fragment = \"#if NUM_CLIPPING_PLANES > 0\\n\\tvec4 plane;\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {\\n\\t\\tplane = clippingPlanes[ i ];\\n\\t\\tif ( dot( vClipPosition, plane.xyz ) > plane.w ) discard;\\n\\t}\\n\\t#pragma unroll_loop_end\\n\\t#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES\\n\\t\\tbool clipped = true;\\n\\t\\t#pragma unroll_loop_start\\n\\t\\tfor ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {\\n\\t\\t\\tplane = clippingPlanes[ i ];\\n\\t\\t\\tclipped = ( dot( vClipPosition, plane.xyz ) > plane.w ) && clipped;\\n\\t\\t}\\n\\t\\t#pragma unroll_loop_end\\n\\t\\tif ( clipped ) discard;\\n\\t#endif\\n#endif\";\n\n\tvar clipping_planes_pars_fragment = \"#if NUM_CLIPPING_PLANES > 0\\n\\tvarying vec3 vClipPosition;\\n\\tuniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];\\n#endif\";\n\n\tvar clipping_planes_pars_vertex = \"#if NUM_CLIPPING_PLANES > 0\\n\\tvarying vec3 vClipPosition;\\n#endif\";\n\n\tvar clipping_planes_vertex = \"#if NUM_CLIPPING_PLANES > 0\\n\\tvClipPosition = - mvPosition.xyz;\\n#endif\";\n\n\tvar color_fragment = \"#if defined( USE_COLOR_ALPHA )\\n\\tdiffuseColor *= vColor;\\n#elif defined( USE_COLOR )\\n\\tdiffuseColor.rgb *= vColor;\\n#endif\";\n\n\tvar color_pars_fragment = \"#if defined( USE_COLOR_ALPHA )\\n\\tvarying vec4 vColor;\\n#elif defined( USE_COLOR )\\n\\tvarying vec3 vColor;\\n#endif\";\n\n\tvar color_pars_vertex = \"#if defined( USE_COLOR_ALPHA )\\n\\tvarying vec4 vColor;\\n#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )\\n\\tvarying vec3 vColor;\\n#endif\";\n\n\tvar color_vertex = \"#if defined( USE_COLOR_ALPHA )\\n\\tvColor = vec4( 1.0 );\\n#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )\\n\\tvColor = vec3( 1.0 );\\n#endif\\n#ifdef USE_COLOR\\n\\tvColor *= color;\\n#endif\\n#ifdef USE_INSTANCING_COLOR\\n\\tvColor.xyz *= instanceColor.xyz;\\n#endif\";\n\n\tvar common = \"#define PI 3.141592653589793\\n#define PI2 6.283185307179586\\n#define PI_HALF 1.5707963267948966\\n#define RECIPROCAL_PI 0.3183098861837907\\n#define RECIPROCAL_PI2 0.15915494309189535\\n#define EPSILON 1e-6\\n#ifndef saturate\\n#define saturate( a ) clamp( a, 0.0, 1.0 )\\n#endif\\n#define whiteComplement( a ) ( 1.0 - saturate( a ) )\\nfloat pow2( const in float x ) { return x*x; }\\nfloat pow3( const in float x ) { return x*x*x; }\\nfloat pow4( const in float x ) { float x2 = x*x; return x2*x2; }\\nfloat max3( const in vec3 v ) { return max( max( v.x, v.y ), v.z ); }\\nfloat average( const in vec3 color ) { return dot( color, vec3( 0.3333 ) ); }\\nhighp float rand( const in vec2 uv ) {\\n\\tconst highp float a = 12.9898, b = 78.233, c = 43758.5453;\\n\\thighp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );\\n\\treturn fract( sin( sn ) * c );\\n}\\n#ifdef HIGH_PRECISION\\n\\tfloat precisionSafeLength( vec3 v ) { return length( v ); }\\n#else\\n\\tfloat precisionSafeLength( vec3 v ) {\\n\\t\\tfloat maxComponent = max3( abs( v ) );\\n\\t\\treturn length( v / maxComponent ) * maxComponent;\\n\\t}\\n#endif\\nstruct IncidentLight {\\n\\tvec3 color;\\n\\tvec3 direction;\\n\\tbool visible;\\n};\\nstruct ReflectedLight {\\n\\tvec3 directDiffuse;\\n\\tvec3 directSpecular;\\n\\tvec3 indirectDiffuse;\\n\\tvec3 indirectSpecular;\\n};\\nstruct GeometricContext {\\n\\tvec3 position;\\n\\tvec3 normal;\\n\\tvec3 viewDir;\\n#ifdef USE_CLEARCOAT\\n\\tvec3 clearcoatNormal;\\n#endif\\n};\\nvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\\n\\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\\n}\\nvec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {\\n\\treturn normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );\\n}\\nmat3 transposeMat3( const in mat3 m ) {\\n\\tmat3 tmp;\\n\\ttmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );\\n\\ttmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );\\n\\ttmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );\\n\\treturn tmp;\\n}\\nfloat linearToRelativeLuminance( const in vec3 color ) {\\n\\tvec3 weights = vec3( 0.2126, 0.7152, 0.0722 );\\n\\treturn dot( weights, color.rgb );\\n}\\nbool isPerspectiveMatrix( mat4 m ) {\\n\\treturn m[ 2 ][ 3 ] == - 1.0;\\n}\\nvec2 equirectUv( in vec3 dir ) {\\n\\tfloat u = atan( dir.z, dir.x ) * RECIPROCAL_PI2 + 0.5;\\n\\tfloat v = asin( clamp( dir.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\\n\\treturn vec2( u, v );\\n}\";\n\n\tvar cube_uv_reflection_fragment = \"#ifdef ENVMAP_TYPE_CUBE_UV\\n\\t#define cubeUV_maxMipLevel 8.0\\n\\t#define cubeUV_minMipLevel 4.0\\n\\t#define cubeUV_maxTileSize 256.0\\n\\t#define cubeUV_minTileSize 16.0\\n\\tfloat getFace( vec3 direction ) {\\n\\t\\tvec3 absDirection = abs( direction );\\n\\t\\tfloat face = - 1.0;\\n\\t\\tif ( absDirection.x > absDirection.z ) {\\n\\t\\t\\tif ( absDirection.x > absDirection.y )\\n\\t\\t\\t\\tface = direction.x > 0.0 ? 0.0 : 3.0;\\n\\t\\t\\telse\\n\\t\\t\\t\\tface = direction.y > 0.0 ? 1.0 : 4.0;\\n\\t\\t} else {\\n\\t\\t\\tif ( absDirection.z > absDirection.y )\\n\\t\\t\\t\\tface = direction.z > 0.0 ? 2.0 : 5.0;\\n\\t\\t\\telse\\n\\t\\t\\t\\tface = direction.y > 0.0 ? 1.0 : 4.0;\\n\\t\\t}\\n\\t\\treturn face;\\n\\t}\\n\\tvec2 getUV( vec3 direction, float face ) {\\n\\t\\tvec2 uv;\\n\\t\\tif ( face == 0.0 ) {\\n\\t\\t\\tuv = vec2( direction.z, direction.y ) / abs( direction.x );\\n\\t\\t} else if ( face == 1.0 ) {\\n\\t\\t\\tuv = vec2( - direction.x, - direction.z ) / abs( direction.y );\\n\\t\\t} else if ( face == 2.0 ) {\\n\\t\\t\\tuv = vec2( - direction.x, direction.y ) / abs( direction.z );\\n\\t\\t} else if ( face == 3.0 ) {\\n\\t\\t\\tuv = vec2( - direction.z, direction.y ) / abs( direction.x );\\n\\t\\t} else if ( face == 4.0 ) {\\n\\t\\t\\tuv = vec2( - direction.x, direction.z ) / abs( direction.y );\\n\\t\\t} else {\\n\\t\\t\\tuv = vec2( direction.x, direction.y ) / abs( direction.z );\\n\\t\\t}\\n\\t\\treturn 0.5 * ( uv + 1.0 );\\n\\t}\\n\\tvec3 bilinearCubeUV( sampler2D envMap, vec3 direction, float mipInt ) {\\n\\t\\tfloat face = getFace( direction );\\n\\t\\tfloat filterInt = max( cubeUV_minMipLevel - mipInt, 0.0 );\\n\\t\\tmipInt = max( mipInt, cubeUV_minMipLevel );\\n\\t\\tfloat faceSize = exp2( mipInt );\\n\\t\\tfloat texelSize = 1.0 / ( 3.0 * cubeUV_maxTileSize );\\n\\t\\tvec2 uv = getUV( direction, face ) * ( faceSize - 1.0 );\\n\\t\\tvec2 f = fract( uv );\\n\\t\\tuv += 0.5 - f;\\n\\t\\tif ( face > 2.0 ) {\\n\\t\\t\\tuv.y += faceSize;\\n\\t\\t\\tface -= 3.0;\\n\\t\\t}\\n\\t\\tuv.x += face * faceSize;\\n\\t\\tif ( mipInt < cubeUV_maxMipLevel ) {\\n\\t\\t\\tuv.y += 2.0 * cubeUV_maxTileSize;\\n\\t\\t}\\n\\t\\tuv.y += filterInt * 2.0 * cubeUV_minTileSize;\\n\\t\\tuv.x += 3.0 * max( 0.0, cubeUV_maxTileSize - 2.0 * faceSize );\\n\\t\\tuv *= texelSize;\\n\\t\\tvec3 tl = envMapTexelToLinear( texture2D( envMap, uv ) ).rgb;\\n\\t\\tuv.x += texelSize;\\n\\t\\tvec3 tr = envMapTexelToLinear( texture2D( envMap, uv ) ).rgb;\\n\\t\\tuv.y += texelSize;\\n\\t\\tvec3 br = envMapTexelToLinear( texture2D( envMap, uv ) ).rgb;\\n\\t\\tuv.x -= texelSize;\\n\\t\\tvec3 bl = envMapTexelToLinear( texture2D( envMap, uv ) ).rgb;\\n\\t\\tvec3 tm = mix( tl, tr, f.x );\\n\\t\\tvec3 bm = mix( bl, br, f.x );\\n\\t\\treturn mix( tm, bm, f.y );\\n\\t}\\n\\t#define r0 1.0\\n\\t#define v0 0.339\\n\\t#define m0 - 2.0\\n\\t#define r1 0.8\\n\\t#define v1 0.276\\n\\t#define m1 - 1.0\\n\\t#define r4 0.4\\n\\t#define v4 0.046\\n\\t#define m4 2.0\\n\\t#define r5 0.305\\n\\t#define v5 0.016\\n\\t#define m5 3.0\\n\\t#define r6 0.21\\n\\t#define v6 0.0038\\n\\t#define m6 4.0\\n\\tfloat roughnessToMip( float roughness ) {\\n\\t\\tfloat mip = 0.0;\\n\\t\\tif ( roughness >= r1 ) {\\n\\t\\t\\tmip = ( r0 - roughness ) * ( m1 - m0 ) / ( r0 - r1 ) + m0;\\n\\t\\t} else if ( roughness >= r4 ) {\\n\\t\\t\\tmip = ( r1 - roughness ) * ( m4 - m1 ) / ( r1 - r4 ) + m1;\\n\\t\\t} else if ( roughness >= r5 ) {\\n\\t\\t\\tmip = ( r4 - roughness ) * ( m5 - m4 ) / ( r4 - r5 ) + m4;\\n\\t\\t} else if ( roughness >= r6 ) {\\n\\t\\t\\tmip = ( r5 - roughness ) * ( m6 - m5 ) / ( r5 - r6 ) + m5;\\n\\t\\t} else {\\n\\t\\t\\tmip = - 2.0 * log2( 1.16 * roughness );\\t\\t}\\n\\t\\treturn mip;\\n\\t}\\n\\tvec4 textureCubeUV( sampler2D envMap, vec3 sampleDir, float roughness ) {\\n\\t\\tfloat mip = clamp( roughnessToMip( roughness ), m0, cubeUV_maxMipLevel );\\n\\t\\tfloat mipF = fract( mip );\\n\\t\\tfloat mipInt = floor( mip );\\n\\t\\tvec3 color0 = bilinearCubeUV( envMap, sampleDir, mipInt );\\n\\t\\tif ( mipF == 0.0 ) {\\n\\t\\t\\treturn vec4( color0, 1.0 );\\n\\t\\t} else {\\n\\t\\t\\tvec3 color1 = bilinearCubeUV( envMap, sampleDir, mipInt + 1.0 );\\n\\t\\t\\treturn vec4( mix( color0, color1, mipF ), 1.0 );\\n\\t\\t}\\n\\t}\\n#endif\";\n\n\tvar defaultnormal_vertex = \"vec3 transformedNormal = objectNormal;\\n#ifdef USE_INSTANCING\\n\\tmat3 m = mat3( instanceMatrix );\\n\\ttransformedNormal /= vec3( dot( m[ 0 ], m[ 0 ] ), dot( m[ 1 ], m[ 1 ] ), dot( m[ 2 ], m[ 2 ] ) );\\n\\ttransformedNormal = m * transformedNormal;\\n#endif\\ntransformedNormal = normalMatrix * transformedNormal;\\n#ifdef FLIP_SIDED\\n\\ttransformedNormal = - transformedNormal;\\n#endif\\n#ifdef USE_TANGENT\\n\\tvec3 transformedTangent = ( modelViewMatrix * vec4( objectTangent, 0.0 ) ).xyz;\\n\\t#ifdef FLIP_SIDED\\n\\t\\ttransformedTangent = - transformedTangent;\\n\\t#endif\\n#endif\";\n\n\tvar displacementmap_pars_vertex = \"#ifdef USE_DISPLACEMENTMAP\\n\\tuniform sampler2D displacementMap;\\n\\tuniform float displacementScale;\\n\\tuniform float displacementBias;\\n#endif\";\n\n\tvar displacementmap_vertex = \"#ifdef USE_DISPLACEMENTMAP\\n\\ttransformed += normalize( objectNormal ) * ( texture2D( displacementMap, vUv ).x * displacementScale + displacementBias );\\n#endif\";\n\n\tvar emissivemap_fragment = \"#ifdef USE_EMISSIVEMAP\\n\\tvec4 emissiveColor = texture2D( emissiveMap, vUv );\\n\\temissiveColor.rgb = emissiveMapTexelToLinear( emissiveColor ).rgb;\\n\\ttotalEmissiveRadiance *= emissiveColor.rgb;\\n#endif\";\n\n\tvar emissivemap_pars_fragment = \"#ifdef USE_EMISSIVEMAP\\n\\tuniform sampler2D emissiveMap;\\n#endif\";\n\n\tvar encodings_fragment = \"gl_FragColor = linearToOutputTexel( gl_FragColor );\";\n\n\tvar encodings_pars_fragment = \"\\nvec4 LinearToLinear( in vec4 value ) {\\n\\treturn value;\\n}\\nvec4 GammaToLinear( in vec4 value, in float gammaFactor ) {\\n\\treturn vec4( pow( value.rgb, vec3( gammaFactor ) ), value.a );\\n}\\nvec4 LinearToGamma( in vec4 value, in float gammaFactor ) {\\n\\treturn vec4( pow( value.rgb, vec3( 1.0 / gammaFactor ) ), value.a );\\n}\\nvec4 sRGBToLinear( in vec4 value ) {\\n\\treturn vec4( mix( pow( value.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), value.rgb * 0.0773993808, vec3( lessThanEqual( value.rgb, vec3( 0.04045 ) ) ) ), value.a );\\n}\\nvec4 LinearTosRGB( in vec4 value ) {\\n\\treturn vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );\\n}\\nvec4 RGBEToLinear( in vec4 value ) {\\n\\treturn vec4( value.rgb * exp2( value.a * 255.0 - 128.0 ), 1.0 );\\n}\\nvec4 LinearToRGBE( in vec4 value ) {\\n\\tfloat maxComponent = max( max( value.r, value.g ), value.b );\\n\\tfloat fExp = clamp( ceil( log2( maxComponent ) ), -128.0, 127.0 );\\n\\treturn vec4( value.rgb / exp2( fExp ), ( fExp + 128.0 ) / 255.0 );\\n}\\nvec4 RGBMToLinear( in vec4 value, in float maxRange ) {\\n\\treturn vec4( value.rgb * value.a * maxRange, 1.0 );\\n}\\nvec4 LinearToRGBM( in vec4 value, in float maxRange ) {\\n\\tfloat maxRGB = max( value.r, max( value.g, value.b ) );\\n\\tfloat M = clamp( maxRGB / maxRange, 0.0, 1.0 );\\n\\tM = ceil( M * 255.0 ) / 255.0;\\n\\treturn vec4( value.rgb / ( M * maxRange ), M );\\n}\\nvec4 RGBDToLinear( in vec4 value, in float maxRange ) {\\n\\treturn vec4( value.rgb * ( ( maxRange / 255.0 ) / value.a ), 1.0 );\\n}\\nvec4 LinearToRGBD( in vec4 value, in float maxRange ) {\\n\\tfloat maxRGB = max( value.r, max( value.g, value.b ) );\\n\\tfloat D = max( maxRange / maxRGB, 1.0 );\\n\\tD = clamp( floor( D ) / 255.0, 0.0, 1.0 );\\n\\treturn vec4( value.rgb * ( D * ( 255.0 / maxRange ) ), D );\\n}\\nconst mat3 cLogLuvM = mat3( 0.2209, 0.3390, 0.4184, 0.1138, 0.6780, 0.7319, 0.0102, 0.1130, 0.2969 );\\nvec4 LinearToLogLuv( in vec4 value ) {\\n\\tvec3 Xp_Y_XYZp = cLogLuvM * value.rgb;\\n\\tXp_Y_XYZp = max( Xp_Y_XYZp, vec3( 1e-6, 1e-6, 1e-6 ) );\\n\\tvec4 vResult;\\n\\tvResult.xy = Xp_Y_XYZp.xy / Xp_Y_XYZp.z;\\n\\tfloat Le = 2.0 * log2(Xp_Y_XYZp.y) + 127.0;\\n\\tvResult.w = fract( Le );\\n\\tvResult.z = ( Le - ( floor( vResult.w * 255.0 ) ) / 255.0 ) / 255.0;\\n\\treturn vResult;\\n}\\nconst mat3 cLogLuvInverseM = mat3( 6.0014, -2.7008, -1.7996, -1.3320, 3.1029, -5.7721, 0.3008, -1.0882, 5.6268 );\\nvec4 LogLuvToLinear( in vec4 value ) {\\n\\tfloat Le = value.z * 255.0 + value.w;\\n\\tvec3 Xp_Y_XYZp;\\n\\tXp_Y_XYZp.y = exp2( ( Le - 127.0 ) / 2.0 );\\n\\tXp_Y_XYZp.z = Xp_Y_XYZp.y / value.y;\\n\\tXp_Y_XYZp.x = value.x * Xp_Y_XYZp.z;\\n\\tvec3 vRGB = cLogLuvInverseM * Xp_Y_XYZp.rgb;\\n\\treturn vec4( max( vRGB, 0.0 ), 1.0 );\\n}\";\n\n\tvar envmap_fragment = \"#ifdef USE_ENVMAP\\n\\t#ifdef ENV_WORLDPOS\\n\\t\\tvec3 cameraToFrag;\\n\\t\\tif ( isOrthographic ) {\\n\\t\\t\\tcameraToFrag = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\\n\\t\\t} else {\\n\\t\\t\\tcameraToFrag = normalize( vWorldPosition - cameraPosition );\\n\\t\\t}\\n\\t\\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\\n\\t\\t#ifdef ENVMAP_MODE_REFLECTION\\n\\t\\t\\tvec3 reflectVec = reflect( cameraToFrag, worldNormal );\\n\\t\\t#else\\n\\t\\t\\tvec3 reflectVec = refract( cameraToFrag, worldNormal, refractionRatio );\\n\\t\\t#endif\\n\\t#else\\n\\t\\tvec3 reflectVec = vReflect;\\n\\t#endif\\n\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\tvec4 envColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\\n\\t\\tenvColor = envMapTexelToLinear( envColor );\\n\\t#elif defined( ENVMAP_TYPE_CUBE_UV )\\n\\t\\tvec4 envColor = textureCubeUV( envMap, reflectVec, 0.0 );\\n\\t#else\\n\\t\\tvec4 envColor = vec4( 0.0 );\\n\\t#endif\\n\\t#ifdef ENVMAP_BLENDING_MULTIPLY\\n\\t\\toutgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );\\n\\t#elif defined( ENVMAP_BLENDING_MIX )\\n\\t\\toutgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );\\n\\t#elif defined( ENVMAP_BLENDING_ADD )\\n\\t\\toutgoingLight += envColor.xyz * specularStrength * reflectivity;\\n\\t#endif\\n#endif\";\n\n\tvar envmap_common_pars_fragment = \"#ifdef USE_ENVMAP\\n\\tuniform float envMapIntensity;\\n\\tuniform float flipEnvMap;\\n\\tuniform int maxMipLevel;\\n\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\tuniform samplerCube envMap;\\n\\t#else\\n\\t\\tuniform sampler2D envMap;\\n\\t#endif\\n\\t\\n#endif\";\n\n\tvar envmap_pars_fragment = \"#ifdef USE_ENVMAP\\n\\tuniform float reflectivity;\\n\\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\\n\\t\\t#define ENV_WORLDPOS\\n\\t#endif\\n\\t#ifdef ENV_WORLDPOS\\n\\t\\tvarying vec3 vWorldPosition;\\n\\t\\tuniform float refractionRatio;\\n\\t#else\\n\\t\\tvarying vec3 vReflect;\\n\\t#endif\\n#endif\";\n\n\tvar envmap_pars_vertex = \"#ifdef USE_ENVMAP\\n\\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) ||defined( PHONG )\\n\\t\\t#define ENV_WORLDPOS\\n\\t#endif\\n\\t#ifdef ENV_WORLDPOS\\n\\t\\t\\n\\t\\tvarying vec3 vWorldPosition;\\n\\t#else\\n\\t\\tvarying vec3 vReflect;\\n\\t\\tuniform float refractionRatio;\\n\\t#endif\\n#endif\";\n\n\tvar envmap_vertex = \"#ifdef USE_ENVMAP\\n\\t#ifdef ENV_WORLDPOS\\n\\t\\tvWorldPosition = worldPosition.xyz;\\n\\t#else\\n\\t\\tvec3 cameraToVertex;\\n\\t\\tif ( isOrthographic ) {\\n\\t\\t\\tcameraToVertex = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\\n\\t\\t} else {\\n\\t\\t\\tcameraToVertex = normalize( worldPosition.xyz - cameraPosition );\\n\\t\\t}\\n\\t\\tvec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\\n\\t\\t#ifdef ENVMAP_MODE_REFLECTION\\n\\t\\t\\tvReflect = reflect( cameraToVertex, worldNormal );\\n\\t\\t#else\\n\\t\\t\\tvReflect = refract( cameraToVertex, worldNormal, refractionRatio );\\n\\t\\t#endif\\n\\t#endif\\n#endif\";\n\n\tvar fog_vertex = \"#ifdef USE_FOG\\n\\tvFogDepth = - mvPosition.z;\\n#endif\";\n\n\tvar fog_pars_vertex = \"#ifdef USE_FOG\\n\\tvarying float vFogDepth;\\n#endif\";\n\n\tvar fog_fragment = \"#ifdef USE_FOG\\n\\t#ifdef FOG_EXP2\\n\\t\\tfloat fogFactor = 1.0 - exp( - fogDensity * fogDensity * vFogDepth * vFogDepth );\\n\\t#else\\n\\t\\tfloat fogFactor = smoothstep( fogNear, fogFar, vFogDepth );\\n\\t#endif\\n\\tgl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );\\n#endif\";\n\n\tvar fog_pars_fragment = \"#ifdef USE_FOG\\n\\tuniform vec3 fogColor;\\n\\tvarying float vFogDepth;\\n\\t#ifdef FOG_EXP2\\n\\t\\tuniform float fogDensity;\\n\\t#else\\n\\t\\tuniform float fogNear;\\n\\t\\tuniform float fogFar;\\n\\t#endif\\n#endif\";\n\n\tvar gradientmap_pars_fragment = \"#ifdef USE_GRADIENTMAP\\n\\tuniform sampler2D gradientMap;\\n#endif\\nvec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {\\n\\tfloat dotNL = dot( normal, lightDirection );\\n\\tvec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );\\n\\t#ifdef USE_GRADIENTMAP\\n\\t\\treturn texture2D( gradientMap, coord ).rgb;\\n\\t#else\\n\\t\\treturn ( coord.x < 0.7 ) ? vec3( 0.7 ) : vec3( 1.0 );\\n\\t#endif\\n}\";\n\n\tvar lightmap_fragment = \"#ifdef USE_LIGHTMAP\\n\\tvec4 lightMapTexel = texture2D( lightMap, vUv2 );\\n\\tvec3 lightMapIrradiance = lightMapTexelToLinear( lightMapTexel ).rgb * lightMapIntensity;\\n\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\tlightMapIrradiance *= PI;\\n\\t#endif\\n\\treflectedLight.indirectDiffuse += lightMapIrradiance;\\n#endif\";\n\n\tvar lightmap_pars_fragment = \"#ifdef USE_LIGHTMAP\\n\\tuniform sampler2D lightMap;\\n\\tuniform float lightMapIntensity;\\n#endif\";\n\n\tvar lights_lambert_vertex = \"vec3 diffuse = vec3( 1.0 );\\nGeometricContext geometry;\\ngeometry.position = mvPosition.xyz;\\ngeometry.normal = normalize( transformedNormal );\\ngeometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( -mvPosition.xyz );\\nGeometricContext backGeometry;\\nbackGeometry.position = geometry.position;\\nbackGeometry.normal = -geometry.normal;\\nbackGeometry.viewDir = geometry.viewDir;\\nvLightFront = vec3( 0.0 );\\nvIndirectFront = vec3( 0.0 );\\n#ifdef DOUBLE_SIDED\\n\\tvLightBack = vec3( 0.0 );\\n\\tvIndirectBack = vec3( 0.0 );\\n#endif\\nIncidentLight directLight;\\nfloat dotNL;\\nvec3 directLightColor_Diffuse;\\nvIndirectFront += getAmbientLightIrradiance( ambientLightColor );\\nvIndirectFront += getLightProbeIrradiance( lightProbe, geometry.normal );\\n#ifdef DOUBLE_SIDED\\n\\tvIndirectBack += getAmbientLightIrradiance( ambientLightColor );\\n\\tvIndirectBack += getLightProbeIrradiance( lightProbe, backGeometry.normal );\\n#endif\\n#if NUM_POINT_LIGHTS > 0\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\\n\\t\\tgetPointLightInfo( pointLights[ i ], geometry, directLight );\\n\\t\\tdotNL = dot( geometry.normal, directLight.direction );\\n\\t\\tdirectLightColor_Diffuse = directLight.color;\\n\\t\\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\tvLightBack += saturate( - dotNL ) * directLightColor_Diffuse;\\n\\t\\t#endif\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\\n#if NUM_SPOT_LIGHTS > 0\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\\n\\t\\tgetSpotLightInfo( spotLights[ i ], geometry, directLight );\\n\\t\\tdotNL = dot( geometry.normal, directLight.direction );\\n\\t\\tdirectLightColor_Diffuse = directLight.color;\\n\\t\\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\tvLightBack += saturate( - dotNL ) * directLightColor_Diffuse;\\n\\t\\t#endif\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\\n#if NUM_DIR_LIGHTS > 0\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\\n\\t\\tgetDirectionalLightInfo( directionalLights[ i ], geometry, directLight );\\n\\t\\tdotNL = dot( geometry.normal, directLight.direction );\\n\\t\\tdirectLightColor_Diffuse = directLight.color;\\n\\t\\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\tvLightBack += saturate( - dotNL ) * directLightColor_Diffuse;\\n\\t\\t#endif\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\\n#if NUM_HEMI_LIGHTS > 0\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\\n\\t\\tvIndirectFront += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry.normal );\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\tvIndirectBack += getHemisphereLightIrradiance( hemisphereLights[ i ], backGeometry.normal );\\n\\t\\t#endif\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\";\n\n\tvar lights_pars_begin = \"uniform bool receiveShadow;\\nuniform vec3 ambientLightColor;\\nuniform vec3 lightProbe[ 9 ];\\nvec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {\\n\\tfloat x = normal.x, y = normal.y, z = normal.z;\\n\\tvec3 result = shCoefficients[ 0 ] * 0.886227;\\n\\tresult += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;\\n\\tresult += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;\\n\\tresult += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;\\n\\tresult += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;\\n\\tresult += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;\\n\\tresult += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );\\n\\tresult += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;\\n\\tresult += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );\\n\\treturn result;\\n}\\nvec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in vec3 normal ) {\\n\\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\\n\\tvec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );\\n\\treturn irradiance;\\n}\\nvec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {\\n\\tvec3 irradiance = ambientLightColor;\\n\\treturn irradiance;\\n}\\nfloat getDistanceAttenuation( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {\\n\\t#if defined ( PHYSICALLY_CORRECT_LIGHTS )\\n\\t\\tfloat distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );\\n\\t\\tif ( cutoffDistance > 0.0 ) {\\n\\t\\t\\tdistanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );\\n\\t\\t}\\n\\t\\treturn distanceFalloff;\\n\\t#else\\n\\t\\tif ( cutoffDistance > 0.0 && decayExponent > 0.0 ) {\\n\\t\\t\\treturn pow( saturate( - lightDistance / cutoffDistance + 1.0 ), decayExponent );\\n\\t\\t}\\n\\t\\treturn 1.0;\\n\\t#endif\\n}\\nfloat getSpotAttenuation( const in float coneCosine, const in float penumbraCosine, const in float angleCosine ) {\\n\\treturn smoothstep( coneCosine, penumbraCosine, angleCosine );\\n}\\n#if NUM_DIR_LIGHTS > 0\\n\\tstruct DirectionalLight {\\n\\t\\tvec3 direction;\\n\\t\\tvec3 color;\\n\\t};\\n\\tuniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];\\n\\tvoid getDirectionalLightInfo( const in DirectionalLight directionalLight, const in GeometricContext geometry, out IncidentLight light ) {\\n\\t\\tlight.color = directionalLight.color;\\n\\t\\tlight.direction = directionalLight.direction;\\n\\t\\tlight.visible = true;\\n\\t}\\n#endif\\n#if NUM_POINT_LIGHTS > 0\\n\\tstruct PointLight {\\n\\t\\tvec3 position;\\n\\t\\tvec3 color;\\n\\t\\tfloat distance;\\n\\t\\tfloat decay;\\n\\t};\\n\\tuniform PointLight pointLights[ NUM_POINT_LIGHTS ];\\n\\tvoid getPointLightInfo( const in PointLight pointLight, const in GeometricContext geometry, out IncidentLight light ) {\\n\\t\\tvec3 lVector = pointLight.position - geometry.position;\\n\\t\\tlight.direction = normalize( lVector );\\n\\t\\tfloat lightDistance = length( lVector );\\n\\t\\tlight.color = pointLight.color;\\n\\t\\tlight.color *= getDistanceAttenuation( lightDistance, pointLight.distance, pointLight.decay );\\n\\t\\tlight.visible = ( light.color != vec3( 0.0 ) );\\n\\t}\\n#endif\\n#if NUM_SPOT_LIGHTS > 0\\n\\tstruct SpotLight {\\n\\t\\tvec3 position;\\n\\t\\tvec3 direction;\\n\\t\\tvec3 color;\\n\\t\\tfloat distance;\\n\\t\\tfloat decay;\\n\\t\\tfloat coneCos;\\n\\t\\tfloat penumbraCos;\\n\\t};\\n\\tuniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];\\n\\tvoid getSpotLightInfo( const in SpotLight spotLight, const in GeometricContext geometry, out IncidentLight light ) {\\n\\t\\tvec3 lVector = spotLight.position - geometry.position;\\n\\t\\tlight.direction = normalize( lVector );\\n\\t\\tfloat angleCos = dot( light.direction, spotLight.direction );\\n\\t\\tfloat spotAttenuation = getSpotAttenuation( spotLight.coneCos, spotLight.penumbraCos, angleCos );\\n\\t\\tif ( spotAttenuation > 0.0 ) {\\n\\t\\t\\tfloat lightDistance = length( lVector );\\n\\t\\t\\tlight.color = spotLight.color * spotAttenuation;\\n\\t\\t\\tlight.color *= getDistanceAttenuation( lightDistance, spotLight.distance, spotLight.decay );\\n\\t\\t\\tlight.visible = ( light.color != vec3( 0.0 ) );\\n\\t\\t} else {\\n\\t\\t\\tlight.color = vec3( 0.0 );\\n\\t\\t\\tlight.visible = false;\\n\\t\\t}\\n\\t}\\n#endif\\n#if NUM_RECT_AREA_LIGHTS > 0\\n\\tstruct RectAreaLight {\\n\\t\\tvec3 color;\\n\\t\\tvec3 position;\\n\\t\\tvec3 halfWidth;\\n\\t\\tvec3 halfHeight;\\n\\t};\\n\\tuniform sampler2D ltc_1;\\tuniform sampler2D ltc_2;\\n\\tuniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];\\n#endif\\n#if NUM_HEMI_LIGHTS > 0\\n\\tstruct HemisphereLight {\\n\\t\\tvec3 direction;\\n\\t\\tvec3 skyColor;\\n\\t\\tvec3 groundColor;\\n\\t};\\n\\tuniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];\\n\\tvec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in vec3 normal ) {\\n\\t\\tfloat dotNL = dot( normal, hemiLight.direction );\\n\\t\\tfloat hemiDiffuseWeight = 0.5 * dotNL + 0.5;\\n\\t\\tvec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );\\n\\t\\treturn irradiance;\\n\\t}\\n#endif\";\n\n\tvar envmap_physical_pars_fragment = \"#if defined( USE_ENVMAP )\\n\\t#ifdef ENVMAP_MODE_REFRACTION\\n\\t\\tuniform float refractionRatio;\\n\\t#endif\\n\\tvec3 getIBLIrradiance( const in vec3 normal ) {\\n\\t\\t#if defined( ENVMAP_TYPE_CUBE_UV )\\n\\t\\t\\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\\n\\t\\t\\tvec4 envMapColor = textureCubeUV( envMap, worldNormal, 1.0 );\\n\\t\\t\\treturn PI * envMapColor.rgb * envMapIntensity;\\n\\t\\t#else\\n\\t\\t\\treturn vec3( 0.0 );\\n\\t\\t#endif\\n\\t}\\n\\tvec3 getIBLRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness ) {\\n\\t\\t#if defined( ENVMAP_TYPE_CUBE_UV )\\n\\t\\t\\tvec3 reflectVec;\\n\\t\\t\\t#ifdef ENVMAP_MODE_REFLECTION\\n\\t\\t\\t\\treflectVec = reflect( - viewDir, normal );\\n\\t\\t\\t\\treflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );\\n\\t\\t\\t#else\\n\\t\\t\\t\\treflectVec = refract( - viewDir, normal, refractionRatio );\\n\\t\\t\\t#endif\\n\\t\\t\\treflectVec = inverseTransformDirection( reflectVec, viewMatrix );\\n\\t\\t\\tvec4 envMapColor = textureCubeUV( envMap, reflectVec, roughness );\\n\\t\\t\\treturn envMapColor.rgb * envMapIntensity;\\n\\t\\t#else\\n\\t\\t\\treturn vec3( 0.0 );\\n\\t\\t#endif\\n\\t}\\n#endif\";\n\n\tvar lights_toon_fragment = \"ToonMaterial material;\\nmaterial.diffuseColor = diffuseColor.rgb;\";\n\n\tvar lights_toon_pars_fragment = \"varying vec3 vViewPosition;\\nstruct ToonMaterial {\\n\\tvec3 diffuseColor;\\n};\\nvoid RE_Direct_Toon( const in IncidentLight directLight, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\\n\\tvec3 irradiance = getGradientIrradiance( geometry.normal, directLight.direction ) * directLight.color;\\n\\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n}\\nvoid RE_IndirectDiffuse_Toon( const in vec3 irradiance, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\\n\\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n}\\n#define RE_Direct\\t\\t\\t\\tRE_Direct_Toon\\n#define RE_IndirectDiffuse\\t\\tRE_IndirectDiffuse_Toon\\n#define Material_LightProbeLOD( material )\\t(0)\";\n\n\tvar lights_phong_fragment = \"BlinnPhongMaterial material;\\nmaterial.diffuseColor = diffuseColor.rgb;\\nmaterial.specularColor = specular;\\nmaterial.specularShininess = shininess;\\nmaterial.specularStrength = specularStrength;\";\n\n\tvar lights_phong_pars_fragment = \"varying vec3 vViewPosition;\\nstruct BlinnPhongMaterial {\\n\\tvec3 diffuseColor;\\n\\tvec3 specularColor;\\n\\tfloat specularShininess;\\n\\tfloat specularStrength;\\n};\\nvoid RE_Direct_BlinnPhong( const in IncidentLight directLight, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\\n\\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\\n\\tvec3 irradiance = dotNL * directLight.color;\\n\\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n\\treflectedLight.directSpecular += irradiance * BRDF_BlinnPhong( directLight.direction, geometry.viewDir, geometry.normal, material.specularColor, material.specularShininess ) * material.specularStrength;\\n}\\nvoid RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\\n\\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n}\\n#define RE_Direct\\t\\t\\t\\tRE_Direct_BlinnPhong\\n#define RE_IndirectDiffuse\\t\\tRE_IndirectDiffuse_BlinnPhong\\n#define Material_LightProbeLOD( material )\\t(0)\";\n\n\tvar lights_physical_fragment = \"PhysicalMaterial material;\\nmaterial.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );\\nvec3 dxy = max( abs( dFdx( geometryNormal ) ), abs( dFdy( geometryNormal ) ) );\\nfloat geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );\\nmaterial.roughness = max( roughnessFactor, 0.0525 );material.roughness += geometryRoughness;\\nmaterial.roughness = min( material.roughness, 1.0 );\\n#ifdef IOR\\n\\t#ifdef SPECULAR\\n\\t\\tfloat specularIntensityFactor = specularIntensity;\\n\\t\\tvec3 specularColorFactor = specularColor;\\n\\t\\t#ifdef USE_SPECULARINTENSITYMAP\\n\\t\\t\\tspecularIntensityFactor *= texture2D( specularIntensityMap, vUv ).a;\\n\\t\\t#endif\\n\\t\\t#ifdef USE_SPECULARCOLORMAP\\n\\t\\t\\tspecularColorFactor *= specularColorMapTexelToLinear( texture2D( specularColorMap, vUv ) ).rgb;\\n\\t\\t#endif\\n\\t\\tmaterial.specularF90 = mix( specularIntensityFactor, 1.0, metalnessFactor );\\n\\t#else\\n\\t\\tfloat specularIntensityFactor = 1.0;\\n\\t\\tvec3 specularColorFactor = vec3( 1.0 );\\n\\t\\tmaterial.specularF90 = 1.0;\\n\\t#endif\\n\\tmaterial.specularColor = mix( min( pow2( ( ior - 1.0 ) / ( ior + 1.0 ) ) * specularColorFactor, vec3( 1.0 ) ) * specularIntensityFactor, diffuseColor.rgb, metalnessFactor );\\n#else\\n\\tmaterial.specularColor = mix( vec3( 0.04 ), diffuseColor.rgb, metalnessFactor );\\n\\tmaterial.specularF90 = 1.0;\\n#endif\\n#ifdef USE_CLEARCOAT\\n\\tmaterial.clearcoat = clearcoat;\\n\\tmaterial.clearcoatRoughness = clearcoatRoughness;\\n\\tmaterial.clearcoatF0 = vec3( 0.04 );\\n\\tmaterial.clearcoatF90 = 1.0;\\n\\t#ifdef USE_CLEARCOATMAP\\n\\t\\tmaterial.clearcoat *= texture2D( clearcoatMap, vUv ).x;\\n\\t#endif\\n\\t#ifdef USE_CLEARCOAT_ROUGHNESSMAP\\n\\t\\tmaterial.clearcoatRoughness *= texture2D( clearcoatRoughnessMap, vUv ).y;\\n\\t#endif\\n\\tmaterial.clearcoat = saturate( material.clearcoat );\\tmaterial.clearcoatRoughness = max( material.clearcoatRoughness, 0.0525 );\\n\\tmaterial.clearcoatRoughness += geometryRoughness;\\n\\tmaterial.clearcoatRoughness = min( material.clearcoatRoughness, 1.0 );\\n#endif\\n#ifdef USE_SHEEN\\n\\tmaterial.sheenColor = sheenColor;\\n\\t#ifdef USE_SHEENCOLORMAP\\n\\t\\tmaterial.sheenColor *= sheenColorMapTexelToLinear( texture2D( sheenColorMap, vUv ) ).rgb;\\n\\t#endif\\n\\tmaterial.sheenRoughness = clamp( sheenRoughness, 0.07, 1.0 );\\n\\t#ifdef USE_SHEENROUGHNESSMAP\\n\\t\\tmaterial.sheenRoughness *= texture2D( sheenRoughnessMap, vUv ).a;\\n\\t#endif\\n#endif\";\n\n\tvar lights_physical_pars_fragment = \"struct PhysicalMaterial {\\n\\tvec3 diffuseColor;\\n\\tfloat roughness;\\n\\tvec3 specularColor;\\n\\tfloat specularF90;\\n\\t#ifdef USE_CLEARCOAT\\n\\t\\tfloat clearcoat;\\n\\t\\tfloat clearcoatRoughness;\\n\\t\\tvec3 clearcoatF0;\\n\\t\\tfloat clearcoatF90;\\n\\t#endif\\n\\t#ifdef USE_SHEEN\\n\\t\\tvec3 sheenColor;\\n\\t\\tfloat sheenRoughness;\\n\\t#endif\\n};\\nvec3 clearcoatSpecular = vec3( 0.0 );\\nvec2 DFGApprox( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {\\n\\tfloat dotNV = saturate( dot( normal, viewDir ) );\\n\\tconst vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );\\n\\tconst vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );\\n\\tvec4 r = roughness * c0 + c1;\\n\\tfloat a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;\\n\\tvec2 fab = vec2( - 1.04, 1.04 ) * a004 + r.zw;\\n\\treturn fab;\\n}\\nvec3 EnvironmentBRDF( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness ) {\\n\\tvec2 fab = DFGApprox( normal, viewDir, roughness );\\n\\treturn specularColor * fab.x + specularF90 * fab.y;\\n}\\nvoid computeMultiscattering( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {\\n\\tvec2 fab = DFGApprox( normal, viewDir, roughness );\\n\\tvec3 FssEss = specularColor * fab.x + specularF90 * fab.y;\\n\\tfloat Ess = fab.x + fab.y;\\n\\tfloat Ems = 1.0 - Ess;\\n\\tvec3 Favg = specularColor + ( 1.0 - specularColor ) * 0.047619;\\tvec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );\\n\\tsingleScatter += FssEss;\\n\\tmultiScatter += Fms * Ems;\\n}\\n#if NUM_RECT_AREA_LIGHTS > 0\\n\\tvoid RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\t\\tvec3 normal = geometry.normal;\\n\\t\\tvec3 viewDir = geometry.viewDir;\\n\\t\\tvec3 position = geometry.position;\\n\\t\\tvec3 lightPos = rectAreaLight.position;\\n\\t\\tvec3 halfWidth = rectAreaLight.halfWidth;\\n\\t\\tvec3 halfHeight = rectAreaLight.halfHeight;\\n\\t\\tvec3 lightColor = rectAreaLight.color;\\n\\t\\tfloat roughness = material.roughness;\\n\\t\\tvec3 rectCoords[ 4 ];\\n\\t\\trectCoords[ 0 ] = lightPos + halfWidth - halfHeight;\\t\\trectCoords[ 1 ] = lightPos - halfWidth - halfHeight;\\n\\t\\trectCoords[ 2 ] = lightPos - halfWidth + halfHeight;\\n\\t\\trectCoords[ 3 ] = lightPos + halfWidth + halfHeight;\\n\\t\\tvec2 uv = LTC_Uv( normal, viewDir, roughness );\\n\\t\\tvec4 t1 = texture2D( ltc_1, uv );\\n\\t\\tvec4 t2 = texture2D( ltc_2, uv );\\n\\t\\tmat3 mInv = mat3(\\n\\t\\t\\tvec3( t1.x, 0, t1.y ),\\n\\t\\t\\tvec3(\t\t0, 1,\t\t0 ),\\n\\t\\t\\tvec3( t1.z, 0, t1.w )\\n\\t\\t);\\n\\t\\tvec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );\\n\\t\\treflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );\\n\\t\\treflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );\\n\\t}\\n#endif\\nvoid RE_Direct_Physical( const in IncidentLight directLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\\n\\tvec3 irradiance = dotNL * directLight.color;\\n\\t#ifdef USE_CLEARCOAT\\n\\t\\tfloat dotNLcc = saturate( dot( geometry.clearcoatNormal, directLight.direction ) );\\n\\t\\tvec3 ccIrradiance = dotNLcc * directLight.color;\\n\\t\\tclearcoatSpecular += ccIrradiance * BRDF_GGX( directLight.direction, geometry.viewDir, geometry.clearcoatNormal, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );\\n\\t#endif\\n\\t#ifdef USE_SHEEN\\n\\t\\treflectedLight.directSpecular += irradiance * BRDF_Sheen( directLight.direction, geometry.viewDir, geometry.normal, material.sheenColor, material.sheenRoughness );\\n\\t#endif\\n\\treflectedLight.directSpecular += irradiance * BRDF_GGX( directLight.direction, geometry.viewDir, geometry.normal, material.specularColor, material.specularF90, material.roughness );\\n\\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n}\\nvoid RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n}\\nvoid RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {\\n\\t#ifdef USE_CLEARCOAT\\n\\t\\tclearcoatSpecular += clearcoatRadiance * EnvironmentBRDF( geometry.clearcoatNormal, geometry.viewDir, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );\\n\\t#endif\\n\\tvec3 singleScattering = vec3( 0.0 );\\n\\tvec3 multiScattering = vec3( 0.0 );\\n\\tvec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;\\n\\tcomputeMultiscattering( geometry.normal, geometry.viewDir, material.specularColor, material.specularF90, material.roughness, singleScattering, multiScattering );\\n\\tvec3 diffuse = material.diffuseColor * ( 1.0 - ( singleScattering + multiScattering ) );\\n\\treflectedLight.indirectSpecular += radiance * singleScattering;\\n\\treflectedLight.indirectSpecular += multiScattering * cosineWeightedIrradiance;\\n\\treflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;\\n}\\n#define RE_Direct\\t\\t\\t\\tRE_Direct_Physical\\n#define RE_Direct_RectArea\\t\\tRE_Direct_RectArea_Physical\\n#define RE_IndirectDiffuse\\t\\tRE_IndirectDiffuse_Physical\\n#define RE_IndirectSpecular\\t\\tRE_IndirectSpecular_Physical\\nfloat computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {\\n\\treturn saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );\\n}\";\n\n\tvar lights_fragment_begin = \"\\nGeometricContext geometry;\\ngeometry.position = - vViewPosition;\\ngeometry.normal = normal;\\ngeometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );\\n#ifdef USE_CLEARCOAT\\n\\tgeometry.clearcoatNormal = clearcoatNormal;\\n#endif\\nIncidentLight directLight;\\n#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )\\n\\tPointLight pointLight;\\n\\t#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0\\n\\tPointLightShadow pointLightShadow;\\n\\t#endif\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\\n\\t\\tpointLight = pointLights[ i ];\\n\\t\\tgetPointLightInfo( pointLight, geometry, directLight );\\n\\t\\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )\\n\\t\\tpointLightShadow = pointLightShadows[ i ];\\n\\t\\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;\\n\\t\\t#endif\\n\\t\\tRE_Direct( directLight, geometry, material, reflectedLight );\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\\n#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )\\n\\tSpotLight spotLight;\\n\\t#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0\\n\\tSpotLightShadow spotLightShadow;\\n\\t#endif\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\\n\\t\\tspotLight = spotLights[ i ];\\n\\t\\tgetSpotLightInfo( spotLight, geometry, directLight );\\n\\t\\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )\\n\\t\\tspotLightShadow = spotLightShadows[ i ];\\n\\t\\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\\n\\t\\t#endif\\n\\t\\tRE_Direct( directLight, geometry, material, reflectedLight );\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\\n#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )\\n\\tDirectionalLight directionalLight;\\n\\t#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0\\n\\tDirectionalLightShadow directionalLightShadow;\\n\\t#endif\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\\n\\t\\tdirectionalLight = directionalLights[ i ];\\n\\t\\tgetDirectionalLightInfo( directionalLight, geometry, directLight );\\n\\t\\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )\\n\\t\\tdirectionalLightShadow = directionalLightShadows[ i ];\\n\\t\\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\\n\\t\\t#endif\\n\\t\\tRE_Direct( directLight, geometry, material, reflectedLight );\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\\n#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )\\n\\tRectAreaLight rectAreaLight;\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {\\n\\t\\trectAreaLight = rectAreaLights[ i ];\\n\\t\\tRE_Direct_RectArea( rectAreaLight, geometry, material, reflectedLight );\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\\n#if defined( RE_IndirectDiffuse )\\n\\tvec3 iblIrradiance = vec3( 0.0 );\\n\\tvec3 irradiance = getAmbientLightIrradiance( ambientLightColor );\\n\\tirradiance += getLightProbeIrradiance( lightProbe, geometry.normal );\\n\\t#if ( NUM_HEMI_LIGHTS > 0 )\\n\\t\\t#pragma unroll_loop_start\\n\\t\\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\\n\\t\\t\\tirradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry.normal );\\n\\t\\t}\\n\\t\\t#pragma unroll_loop_end\\n\\t#endif\\n#endif\\n#if defined( RE_IndirectSpecular )\\n\\tvec3 radiance = vec3( 0.0 );\\n\\tvec3 clearcoatRadiance = vec3( 0.0 );\\n#endif\";\n\n\tvar lights_fragment_maps = \"#if defined( RE_IndirectDiffuse )\\n\\t#ifdef USE_LIGHTMAP\\n\\t\\tvec4 lightMapTexel = texture2D( lightMap, vUv2 );\\n\\t\\tvec3 lightMapIrradiance = lightMapTexelToLinear( lightMapTexel ).rgb * lightMapIntensity;\\n\\t\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\t\\tlightMapIrradiance *= PI;\\n\\t\\t#endif\\n\\t\\tirradiance += lightMapIrradiance;\\n\\t#endif\\n\\t#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )\\n\\t\\tiblIrradiance += getIBLIrradiance( geometry.normal );\\n\\t#endif\\n#endif\\n#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )\\n\\tradiance += getIBLRadiance( geometry.viewDir, geometry.normal, material.roughness );\\n\\t#ifdef USE_CLEARCOAT\\n\\t\\tclearcoatRadiance += getIBLRadiance( geometry.viewDir, geometry.clearcoatNormal, material.clearcoatRoughness );\\n\\t#endif\\n#endif\";\n\n\tvar lights_fragment_end = \"#if defined( RE_IndirectDiffuse )\\n\\tRE_IndirectDiffuse( irradiance, geometry, material, reflectedLight );\\n#endif\\n#if defined( RE_IndirectSpecular )\\n\\tRE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometry, material, reflectedLight );\\n#endif\";\n\n\tvar logdepthbuf_fragment = \"#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\\n\\tgl_FragDepthEXT = vIsPerspective == 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;\\n#endif\";\n\n\tvar logdepthbuf_pars_fragment = \"#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\\n\\tuniform float logDepthBufFC;\\n\\tvarying float vFragDepth;\\n\\tvarying float vIsPerspective;\\n#endif\";\n\n\tvar logdepthbuf_pars_vertex = \"#ifdef USE_LOGDEPTHBUF\\n\\t#ifdef USE_LOGDEPTHBUF_EXT\\n\\t\\tvarying float vFragDepth;\\n\\t\\tvarying float vIsPerspective;\\n\\t#else\\n\\t\\tuniform float logDepthBufFC;\\n\\t#endif\\n#endif\";\n\n\tvar logdepthbuf_vertex = \"#ifdef USE_LOGDEPTHBUF\\n\\t#ifdef USE_LOGDEPTHBUF_EXT\\n\\t\\tvFragDepth = 1.0 + gl_Position.w;\\n\\t\\tvIsPerspective = float( isPerspectiveMatrix( projectionMatrix ) );\\n\\t#else\\n\\t\\tif ( isPerspectiveMatrix( projectionMatrix ) ) {\\n\\t\\t\\tgl_Position.z = log2( max( EPSILON, gl_Position.w + 1.0 ) ) * logDepthBufFC - 1.0;\\n\\t\\t\\tgl_Position.z *= gl_Position.w;\\n\\t\\t}\\n\\t#endif\\n#endif\";\n\n\tvar map_fragment = \"#ifdef USE_MAP\\n\\tvec4 texelColor = texture2D( map, vUv );\\n\\ttexelColor = mapTexelToLinear( texelColor );\\n\\tdiffuseColor *= texelColor;\\n#endif\";\n\n\tvar map_pars_fragment = \"#ifdef USE_MAP\\n\\tuniform sampler2D map;\\n#endif\";\n\n\tvar map_particle_fragment = \"#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\\n\\tvec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;\\n#endif\\n#ifdef USE_MAP\\n\\tvec4 mapTexel = texture2D( map, uv );\\n\\tdiffuseColor *= mapTexelToLinear( mapTexel );\\n#endif\\n#ifdef USE_ALPHAMAP\\n\\tdiffuseColor.a *= texture2D( alphaMap, uv ).g;\\n#endif\";\n\n\tvar map_particle_pars_fragment = \"#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\\n\\tuniform mat3 uvTransform;\\n#endif\\n#ifdef USE_MAP\\n\\tuniform sampler2D map;\\n#endif\\n#ifdef USE_ALPHAMAP\\n\\tuniform sampler2D alphaMap;\\n#endif\";\n\n\tvar metalnessmap_fragment = \"float metalnessFactor = metalness;\\n#ifdef USE_METALNESSMAP\\n\\tvec4 texelMetalness = texture2D( metalnessMap, vUv );\\n\\tmetalnessFactor *= texelMetalness.b;\\n#endif\";\n\n\tvar metalnessmap_pars_fragment = \"#ifdef USE_METALNESSMAP\\n\\tuniform sampler2D metalnessMap;\\n#endif\";\n\n\tvar morphnormal_vertex = \"#ifdef USE_MORPHNORMALS\\n\\tobjectNormal *= morphTargetBaseInfluence;\\n\\t#ifdef MORPHTARGETS_TEXTURE\\n\\t\\tfor ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\\n\\t\\t\\tif ( morphTargetInfluences[ i ] > 0.0 ) objectNormal += getMorph( gl_VertexID, i, 1, 2 ) * morphTargetInfluences[ i ];\\n\\t\\t}\\n\\t#else\\n\\t\\tobjectNormal += morphNormal0 * morphTargetInfluences[ 0 ];\\n\\t\\tobjectNormal += morphNormal1 * morphTargetInfluences[ 1 ];\\n\\t\\tobjectNormal += morphNormal2 * morphTargetInfluences[ 2 ];\\n\\t\\tobjectNormal += morphNormal3 * morphTargetInfluences[ 3 ];\\n\\t#endif\\n#endif\";\n\n\tvar morphtarget_pars_vertex = \"#ifdef USE_MORPHTARGETS\\n\\tuniform float morphTargetBaseInfluence;\\n\\t#ifdef MORPHTARGETS_TEXTURE\\n\\t\\tuniform float morphTargetInfluences[ MORPHTARGETS_COUNT ];\\n\\t\\tuniform sampler2DArray morphTargetsTexture;\\n\\t\\tuniform vec2 morphTargetsTextureSize;\\n\\t\\tvec3 getMorph( const in int vertexIndex, const in int morphTargetIndex, const in int offset, const in int stride ) {\\n\\t\\t\\tfloat texelIndex = float( vertexIndex * stride + offset );\\n\\t\\t\\tfloat y = floor( texelIndex / morphTargetsTextureSize.x );\\n\\t\\t\\tfloat x = texelIndex - y * morphTargetsTextureSize.x;\\n\\t\\t\\tvec3 morphUV = vec3( ( x + 0.5 ) / morphTargetsTextureSize.x, y / morphTargetsTextureSize.y, morphTargetIndex );\\n\\t\\t\\treturn texture( morphTargetsTexture, morphUV ).xyz;\\n\\t\\t}\\n\\t#else\\n\\t\\t#ifndef USE_MORPHNORMALS\\n\\t\\t\\tuniform float morphTargetInfluences[ 8 ];\\n\\t\\t#else\\n\\t\\t\\tuniform float morphTargetInfluences[ 4 ];\\n\\t\\t#endif\\n\\t#endif\\n#endif\";\n\n\tvar morphtarget_vertex = \"#ifdef USE_MORPHTARGETS\\n\\ttransformed *= morphTargetBaseInfluence;\\n\\t#ifdef MORPHTARGETS_TEXTURE\\n\\t\\tfor ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\\n\\t\\t\\t#ifndef USE_MORPHNORMALS\\n\\t\\t\\t\\tif ( morphTargetInfluences[ i ] > 0.0 ) transformed += getMorph( gl_VertexID, i, 0, 1 ) * morphTargetInfluences[ i ];\\n\\t\\t\\t#else\\n\\t\\t\\t\\tif ( morphTargetInfluences[ i ] > 0.0 ) transformed += getMorph( gl_VertexID, i, 0, 2 ) * morphTargetInfluences[ i ];\\n\\t\\t\\t#endif\\n\\t\\t}\\n\\t#else\\n\\t\\ttransformed += morphTarget0 * morphTargetInfluences[ 0 ];\\n\\t\\ttransformed += morphTarget1 * morphTargetInfluences[ 1 ];\\n\\t\\ttransformed += morphTarget2 * morphTargetInfluences[ 2 ];\\n\\t\\ttransformed += morphTarget3 * morphTargetInfluences[ 3 ];\\n\\t\\t#ifndef USE_MORPHNORMALS\\n\\t\\t\\ttransformed += morphTarget4 * morphTargetInfluences[ 4 ];\\n\\t\\t\\ttransformed += morphTarget5 * morphTargetInfluences[ 5 ];\\n\\t\\t\\ttransformed += morphTarget6 * morphTargetInfluences[ 6 ];\\n\\t\\t\\ttransformed += morphTarget7 * morphTargetInfluences[ 7 ];\\n\\t\\t#endif\\n\\t#endif\\n#endif\";\n\n\tvar normal_fragment_begin = \"float faceDirection = gl_FrontFacing ? 1.0 : - 1.0;\\n#ifdef FLAT_SHADED\\n\\tvec3 fdx = vec3( dFdx( vViewPosition.x ), dFdx( vViewPosition.y ), dFdx( vViewPosition.z ) );\\n\\tvec3 fdy = vec3( dFdy( vViewPosition.x ), dFdy( vViewPosition.y ), dFdy( vViewPosition.z ) );\\n\\tvec3 normal = normalize( cross( fdx, fdy ) );\\n#else\\n\\tvec3 normal = normalize( vNormal );\\n\\t#ifdef DOUBLE_SIDED\\n\\t\\tnormal = normal * faceDirection;\\n\\t#endif\\n\\t#ifdef USE_TANGENT\\n\\t\\tvec3 tangent = normalize( vTangent );\\n\\t\\tvec3 bitangent = normalize( vBitangent );\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\ttangent = tangent * faceDirection;\\n\\t\\t\\tbitangent = bitangent * faceDirection;\\n\\t\\t#endif\\n\\t\\t#if defined( TANGENTSPACE_NORMALMAP ) || defined( USE_CLEARCOAT_NORMALMAP )\\n\\t\\t\\tmat3 vTBN = mat3( tangent, bitangent, normal );\\n\\t\\t#endif\\n\\t#endif\\n#endif\\nvec3 geometryNormal = normal;\";\n\n\tvar normal_fragment_maps = \"#ifdef OBJECTSPACE_NORMALMAP\\n\\tnormal = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\\n\\t#ifdef FLIP_SIDED\\n\\t\\tnormal = - normal;\\n\\t#endif\\n\\t#ifdef DOUBLE_SIDED\\n\\t\\tnormal = normal * faceDirection;\\n\\t#endif\\n\\tnormal = normalize( normalMatrix * normal );\\n#elif defined( TANGENTSPACE_NORMALMAP )\\n\\tvec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\\n\\tmapN.xy *= normalScale;\\n\\t#ifdef USE_TANGENT\\n\\t\\tnormal = normalize( vTBN * mapN );\\n\\t#else\\n\\t\\tnormal = perturbNormal2Arb( - vViewPosition, normal, mapN, faceDirection );\\n\\t#endif\\n#elif defined( USE_BUMPMAP )\\n\\tnormal = perturbNormalArb( - vViewPosition, normal, dHdxy_fwd(), faceDirection );\\n#endif\";\n\n\tvar normal_pars_fragment = \"#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n\\t#ifdef USE_TANGENT\\n\\t\\tvarying vec3 vTangent;\\n\\t\\tvarying vec3 vBitangent;\\n\\t#endif\\n#endif\";\n\n\tvar normal_pars_vertex = \"#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n\\t#ifdef USE_TANGENT\\n\\t\\tvarying vec3 vTangent;\\n\\t\\tvarying vec3 vBitangent;\\n\\t#endif\\n#endif\";\n\n\tvar normal_vertex = \"#ifndef FLAT_SHADED\\n\\tvNormal = normalize( transformedNormal );\\n\\t#ifdef USE_TANGENT\\n\\t\\tvTangent = normalize( transformedTangent );\\n\\t\\tvBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );\\n\\t#endif\\n#endif\";\n\n\tvar normalmap_pars_fragment = \"#ifdef USE_NORMALMAP\\n\\tuniform sampler2D normalMap;\\n\\tuniform vec2 normalScale;\\n#endif\\n#ifdef OBJECTSPACE_NORMALMAP\\n\\tuniform mat3 normalMatrix;\\n#endif\\n#if ! defined ( USE_TANGENT ) && ( defined ( TANGENTSPACE_NORMALMAP ) || defined ( USE_CLEARCOAT_NORMALMAP ) )\\n\\tvec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm, vec3 mapN, float faceDirection ) {\\n\\t\\tvec3 q0 = vec3( dFdx( eye_pos.x ), dFdx( eye_pos.y ), dFdx( eye_pos.z ) );\\n\\t\\tvec3 q1 = vec3( dFdy( eye_pos.x ), dFdy( eye_pos.y ), dFdy( eye_pos.z ) );\\n\\t\\tvec2 st0 = dFdx( vUv.st );\\n\\t\\tvec2 st1 = dFdy( vUv.st );\\n\\t\\tvec3 N = surf_norm;\\n\\t\\tvec3 q1perp = cross( q1, N );\\n\\t\\tvec3 q0perp = cross( N, q0 );\\n\\t\\tvec3 T = q1perp * st0.x + q0perp * st1.x;\\n\\t\\tvec3 B = q1perp * st0.y + q0perp * st1.y;\\n\\t\\tfloat det = max( dot( T, T ), dot( B, B ) );\\n\\t\\tfloat scale = ( det == 0.0 ) ? 0.0 : faceDirection * inversesqrt( det );\\n\\t\\treturn normalize( T * ( mapN.x * scale ) + B * ( mapN.y * scale ) + N * mapN.z );\\n\\t}\\n#endif\";\n\n\tvar clearcoat_normal_fragment_begin = \"#ifdef USE_CLEARCOAT\\n\\tvec3 clearcoatNormal = geometryNormal;\\n#endif\";\n\n\tvar clearcoat_normal_fragment_maps = \"#ifdef USE_CLEARCOAT_NORMALMAP\\n\\tvec3 clearcoatMapN = texture2D( clearcoatNormalMap, vUv ).xyz * 2.0 - 1.0;\\n\\tclearcoatMapN.xy *= clearcoatNormalScale;\\n\\t#ifdef USE_TANGENT\\n\\t\\tclearcoatNormal = normalize( vTBN * clearcoatMapN );\\n\\t#else\\n\\t\\tclearcoatNormal = perturbNormal2Arb( - vViewPosition, clearcoatNormal, clearcoatMapN, faceDirection );\\n\\t#endif\\n#endif\";\n\n\tvar clearcoat_pars_fragment = \"#ifdef USE_CLEARCOATMAP\\n\\tuniform sampler2D clearcoatMap;\\n#endif\\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\\n\\tuniform sampler2D clearcoatRoughnessMap;\\n#endif\\n#ifdef USE_CLEARCOAT_NORMALMAP\\n\\tuniform sampler2D clearcoatNormalMap;\\n\\tuniform vec2 clearcoatNormalScale;\\n#endif\";\n\n\tvar output_fragment = \"#ifdef OPAQUE\\ndiffuseColor.a = 1.0;\\n#endif\\n#ifdef USE_TRANSMISSION\\ndiffuseColor.a *= transmissionAlpha + 0.1;\\n#endif\\ngl_FragColor = vec4( outgoingLight, diffuseColor.a );\";\n\n\tvar packing = \"vec3 packNormalToRGB( const in vec3 normal ) {\\n\\treturn normalize( normal ) * 0.5 + 0.5;\\n}\\nvec3 unpackRGBToNormal( const in vec3 rgb ) {\\n\\treturn 2.0 * rgb.xyz - 1.0;\\n}\\nconst float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;\\nconst vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256., 256. );\\nconst vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );\\nconst float ShiftRight8 = 1. / 256.;\\nvec4 packDepthToRGBA( const in float v ) {\\n\\tvec4 r = vec4( fract( v * PackFactors ), v );\\n\\tr.yzw -= r.xyz * ShiftRight8;\\treturn r * PackUpscale;\\n}\\nfloat unpackRGBAToDepth( const in vec4 v ) {\\n\\treturn dot( v, UnpackFactors );\\n}\\nvec4 pack2HalfToRGBA( vec2 v ) {\\n\\tvec4 r = vec4( v.x, fract( v.x * 255.0 ), v.y, fract( v.y * 255.0 ) );\\n\\treturn vec4( r.x - r.y / 255.0, r.y, r.z - r.w / 255.0, r.w );\\n}\\nvec2 unpackRGBATo2Half( vec4 v ) {\\n\\treturn vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );\\n}\\nfloat viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {\\n\\treturn ( viewZ + near ) / ( near - far );\\n}\\nfloat orthographicDepthToViewZ( const in float linearClipZ, const in float near, const in float far ) {\\n\\treturn linearClipZ * ( near - far ) - near;\\n}\\nfloat viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {\\n\\treturn ( ( near + viewZ ) * far ) / ( ( far - near ) * viewZ );\\n}\\nfloat perspectiveDepthToViewZ( const in float invClipZ, const in float near, const in float far ) {\\n\\treturn ( near * far ) / ( ( far - near ) * invClipZ - far );\\n}\";\n\n\tvar premultiplied_alpha_fragment = \"#ifdef PREMULTIPLIED_ALPHA\\n\\tgl_FragColor.rgb *= gl_FragColor.a;\\n#endif\";\n\n\tvar project_vertex = \"vec4 mvPosition = vec4( transformed, 1.0 );\\n#ifdef USE_INSTANCING\\n\\tmvPosition = instanceMatrix * mvPosition;\\n#endif\\nmvPosition = modelViewMatrix * mvPosition;\\ngl_Position = projectionMatrix * mvPosition;\";\n\n\tvar dithering_fragment = \"#ifdef DITHERING\\n\\tgl_FragColor.rgb = dithering( gl_FragColor.rgb );\\n#endif\";\n\n\tvar dithering_pars_fragment = \"#ifdef DITHERING\\n\\tvec3 dithering( vec3 color ) {\\n\\t\\tfloat grid_position = rand( gl_FragCoord.xy );\\n\\t\\tvec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );\\n\\t\\tdither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );\\n\\t\\treturn color + dither_shift_RGB;\\n\\t}\\n#endif\";\n\n\tvar roughnessmap_fragment = \"float roughnessFactor = roughness;\\n#ifdef USE_ROUGHNESSMAP\\n\\tvec4 texelRoughness = texture2D( roughnessMap, vUv );\\n\\troughnessFactor *= texelRoughness.g;\\n#endif\";\n\n\tvar roughnessmap_pars_fragment = \"#ifdef USE_ROUGHNESSMAP\\n\\tuniform sampler2D roughnessMap;\\n#endif\";\n\n\tvar shadowmap_pars_fragment = \"#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHT_SHADOWS > 0\\n\\t\\tuniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t\\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t\\tstruct DirectionalLightShadow {\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t};\\n\\t\\tuniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHT_SHADOWS > 0\\n\\t\\tuniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];\\n\\t\\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHT_SHADOWS ];\\n\\t\\tstruct SpotLightShadow {\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t};\\n\\t\\tuniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\\n\\t#endif\\n\\t#if NUM_POINT_LIGHT_SHADOWS > 0\\n\\t\\tuniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t\\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t\\tstruct PointLightShadow {\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t\\tfloat shadowCameraNear;\\n\\t\\t\\tfloat shadowCameraFar;\\n\\t\\t};\\n\\t\\tuniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t#endif\\n\\tfloat texture2DCompare( sampler2D depths, vec2 uv, float compare ) {\\n\\t\\treturn step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );\\n\\t}\\n\\tvec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {\\n\\t\\treturn unpackRGBATo2Half( texture2D( shadow, uv ) );\\n\\t}\\n\\tfloat VSMShadow (sampler2D shadow, vec2 uv, float compare ){\\n\\t\\tfloat occlusion = 1.0;\\n\\t\\tvec2 distribution = texture2DDistribution( shadow, uv );\\n\\t\\tfloat hard_shadow = step( compare , distribution.x );\\n\\t\\tif (hard_shadow != 1.0 ) {\\n\\t\\t\\tfloat distance = compare - distribution.x ;\\n\\t\\t\\tfloat variance = max( 0.00000, distribution.y * distribution.y );\\n\\t\\t\\tfloat softness_probability = variance / (variance + distance * distance );\\t\\t\\tsoftness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 );\\t\\t\\tocclusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );\\n\\t\\t}\\n\\t\\treturn occlusion;\\n\\t}\\n\\tfloat getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {\\n\\t\\tfloat shadow = 1.0;\\n\\t\\tshadowCoord.xyz /= shadowCoord.w;\\n\\t\\tshadowCoord.z += shadowBias;\\n\\t\\tbvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );\\n\\t\\tbool inFrustum = all( inFrustumVec );\\n\\t\\tbvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );\\n\\t\\tbool frustumTest = all( frustumTestVec );\\n\\t\\tif ( frustumTest ) {\\n\\t\\t#if defined( SHADOWMAP_TYPE_PCF )\\n\\t\\t\\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\\n\\t\\t\\tfloat dx0 = - texelSize.x * shadowRadius;\\n\\t\\t\\tfloat dy0 = - texelSize.y * shadowRadius;\\n\\t\\t\\tfloat dx1 = + texelSize.x * shadowRadius;\\n\\t\\t\\tfloat dy1 = + texelSize.y * shadowRadius;\\n\\t\\t\\tfloat dx2 = dx0 / 2.0;\\n\\t\\t\\tfloat dy2 = dy0 / 2.0;\\n\\t\\t\\tfloat dx3 = dx1 / 2.0;\\n\\t\\t\\tfloat dy3 = dy1 / 2.0;\\n\\t\\t\\tshadow = (\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\\n\\t\\t\\t) * ( 1.0 / 17.0 );\\n\\t\\t#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\\n\\t\\t\\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\\n\\t\\t\\tfloat dx = texelSize.x;\\n\\t\\t\\tfloat dy = texelSize.y;\\n\\t\\t\\tvec2 uv = shadowCoord.xy;\\n\\t\\t\\tvec2 f = fract( uv * shadowMapSize + 0.5 );\\n\\t\\t\\tuv -= f * texelSize;\\n\\t\\t\\tshadow = (\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, uv, shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, uv + vec2( dx, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, uv + vec2( 0.0, dy ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, uv + texelSize, shadowCoord.z ) +\\n\\t\\t\\t\\tmix( texture2DCompare( shadowMap, uv + vec2( -dx, 0.0 ), shadowCoord.z ), \\n\\t\\t\\t\\t\\t texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 0.0 ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t f.x ) +\\n\\t\\t\\t\\tmix( texture2DCompare( shadowMap, uv + vec2( -dx, dy ), shadowCoord.z ), \\n\\t\\t\\t\\t\\t texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t f.x ) +\\n\\t\\t\\t\\tmix( texture2DCompare( shadowMap, uv + vec2( 0.0, -dy ), shadowCoord.z ), \\n\\t\\t\\t\\t\\t texture2DCompare( shadowMap, uv + vec2( 0.0, 2.0 * dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t f.y ) +\\n\\t\\t\\t\\tmix( texture2DCompare( shadowMap, uv + vec2( dx, -dy ), shadowCoord.z ), \\n\\t\\t\\t\\t\\t texture2DCompare( shadowMap, uv + vec2( dx, 2.0 * dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t f.y ) +\\n\\t\\t\\t\\tmix( mix( texture2DCompare( shadowMap, uv + vec2( -dx, -dy ), shadowCoord.z ), \\n\\t\\t\\t\\t\\t\\t\ttexture2DCompare( shadowMap, uv + vec2( 2.0 * dx, -dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t\\t\tf.x ),\\n\\t\\t\\t\\t\\t mix( texture2DCompare( shadowMap, uv + vec2( -dx, 2.0 * dy ), shadowCoord.z ), \\n\\t\\t\\t\\t\\t\\t\ttexture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 2.0 * dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t\\t\tf.x ),\\n\\t\\t\\t\\t\\t f.y )\\n\\t\\t\\t) * ( 1.0 / 9.0 );\\n\\t\\t#elif defined( SHADOWMAP_TYPE_VSM )\\n\\t\\t\\tshadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );\\n\\t\\t#else\\n\\t\\t\\tshadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );\\n\\t\\t#endif\\n\\t\\t}\\n\\t\\treturn shadow;\\n\\t}\\n\\tvec2 cubeToUV( vec3 v, float texelSizeY ) {\\n\\t\\tvec3 absV = abs( v );\\n\\t\\tfloat scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );\\n\\t\\tabsV *= scaleToCube;\\n\\t\\tv *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );\\n\\t\\tvec2 planar = v.xy;\\n\\t\\tfloat almostATexel = 1.5 * texelSizeY;\\n\\t\\tfloat almostOne = 1.0 - almostATexel;\\n\\t\\tif ( absV.z >= almostOne ) {\\n\\t\\t\\tif ( v.z > 0.0 )\\n\\t\\t\\t\\tplanar.x = 4.0 - v.x;\\n\\t\\t} else if ( absV.x >= almostOne ) {\\n\\t\\t\\tfloat signX = sign( v.x );\\n\\t\\t\\tplanar.x = v.z * signX + 2.0 * signX;\\n\\t\\t} else if ( absV.y >= almostOne ) {\\n\\t\\t\\tfloat signY = sign( v.y );\\n\\t\\t\\tplanar.x = v.x + 2.0 * signY + 2.0;\\n\\t\\t\\tplanar.y = v.z * signY - 2.0;\\n\\t\\t}\\n\\t\\treturn vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );\\n\\t}\\n\\tfloat getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {\\n\\t\\tvec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );\\n\\t\\tvec3 lightToPosition = shadowCoord.xyz;\\n\\t\\tfloat dp = ( length( lightToPosition ) - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );\\t\\tdp += shadowBias;\\n\\t\\tvec3 bd3D = normalize( lightToPosition );\\n\\t\\t#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )\\n\\t\\t\\tvec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;\\n\\t\\t\\treturn (\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )\\n\\t\\t\\t) * ( 1.0 / 9.0 );\\n\\t\\t#else\\n\\t\\t\\treturn texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );\\n\\t\\t#endif\\n\\t}\\n#endif\";\n\n\tvar shadowmap_pars_vertex = \"#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHT_SHADOWS > 0\\n\\t\\tuniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t\\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t\\tstruct DirectionalLightShadow {\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t};\\n\\t\\tuniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHT_SHADOWS > 0\\n\\t\\tuniform mat4 spotShadowMatrix[ NUM_SPOT_LIGHT_SHADOWS ];\\n\\t\\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHT_SHADOWS ];\\n\\t\\tstruct SpotLightShadow {\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t};\\n\\t\\tuniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\\n\\t#endif\\n\\t#if NUM_POINT_LIGHT_SHADOWS > 0\\n\\t\\tuniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t\\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t\\tstruct PointLightShadow {\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t\\tfloat shadowCameraNear;\\n\\t\\t\\tfloat shadowCameraFar;\\n\\t\\t};\\n\\t\\tuniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t#endif\\n#endif\";\n\n\tvar shadowmap_vertex = \"#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHT_SHADOWS > 0 || NUM_SPOT_LIGHT_SHADOWS > 0 || NUM_POINT_LIGHT_SHADOWS > 0\\n\\t\\tvec3 shadowWorldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\\n\\t\\tvec4 shadowWorldPosition;\\n\\t#endif\\n\\t#if NUM_DIR_LIGHT_SHADOWS > 0\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\\n\\t\\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * directionalLightShadows[ i ].shadowNormalBias, 0 );\\n\\t\\tvDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * shadowWorldPosition;\\n\\t}\\n\\t#pragma unroll_loop_end\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHT_SHADOWS > 0\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {\\n\\t\\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * spotLightShadows[ i ].shadowNormalBias, 0 );\\n\\t\\tvSpotShadowCoord[ i ] = spotShadowMatrix[ i ] * shadowWorldPosition;\\n\\t}\\n\\t#pragma unroll_loop_end\\n\\t#endif\\n\\t#if NUM_POINT_LIGHT_SHADOWS > 0\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\\n\\t\\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * pointLightShadows[ i ].shadowNormalBias, 0 );\\n\\t\\tvPointShadowCoord[ i ] = pointShadowMatrix[ i ] * shadowWorldPosition;\\n\\t}\\n\\t#pragma unroll_loop_end\\n\\t#endif\\n#endif\";\n\n\tvar shadowmask_pars_fragment = \"float getShadowMask() {\\n\\tfloat shadow = 1.0;\\n\\t#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHT_SHADOWS > 0\\n\\tDirectionalLightShadow directionalLight;\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\\n\\t\\tdirectionalLight = directionalLightShadows[ i ];\\n\\t\\tshadow *= receiveShadow ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\\n\\t}\\n\\t#pragma unroll_loop_end\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHT_SHADOWS > 0\\n\\tSpotLightShadow spotLight;\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {\\n\\t\\tspotLight = spotLightShadows[ i ];\\n\\t\\tshadow *= receiveShadow ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\\n\\t}\\n\\t#pragma unroll_loop_end\\n\\t#endif\\n\\t#if NUM_POINT_LIGHT_SHADOWS > 0\\n\\tPointLightShadow pointLight;\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\\n\\t\\tpointLight = pointLightShadows[ i ];\\n\\t\\tshadow *= receiveShadow ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;\\n\\t}\\n\\t#pragma unroll_loop_end\\n\\t#endif\\n\\t#endif\\n\\treturn shadow;\\n}\";\n\n\tvar skinbase_vertex = \"#ifdef USE_SKINNING\\n\\tmat4 boneMatX = getBoneMatrix( skinIndex.x );\\n\\tmat4 boneMatY = getBoneMatrix( skinIndex.y );\\n\\tmat4 boneMatZ = getBoneMatrix( skinIndex.z );\\n\\tmat4 boneMatW = getBoneMatrix( skinIndex.w );\\n#endif\";\n\n\tvar skinning_pars_vertex = \"#ifdef USE_SKINNING\\n\\tuniform mat4 bindMatrix;\\n\\tuniform mat4 bindMatrixInverse;\\n\\t#ifdef BONE_TEXTURE\\n\\t\\tuniform highp sampler2D boneTexture;\\n\\t\\tuniform int boneTextureSize;\\n\\t\\tmat4 getBoneMatrix( const in float i ) {\\n\\t\\t\\tfloat j = i * 4.0;\\n\\t\\t\\tfloat x = mod( j, float( boneTextureSize ) );\\n\\t\\t\\tfloat y = floor( j / float( boneTextureSize ) );\\n\\t\\t\\tfloat dx = 1.0 / float( boneTextureSize );\\n\\t\\t\\tfloat dy = 1.0 / float( boneTextureSize );\\n\\t\\t\\ty = dy * ( y + 0.5 );\\n\\t\\t\\tvec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );\\n\\t\\t\\tvec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );\\n\\t\\t\\tvec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );\\n\\t\\t\\tvec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );\\n\\t\\t\\tmat4 bone = mat4( v1, v2, v3, v4 );\\n\\t\\t\\treturn bone;\\n\\t\\t}\\n\\t#else\\n\\t\\tuniform mat4 boneMatrices[ MAX_BONES ];\\n\\t\\tmat4 getBoneMatrix( const in float i ) {\\n\\t\\t\\tmat4 bone = boneMatrices[ int(i) ];\\n\\t\\t\\treturn bone;\\n\\t\\t}\\n\\t#endif\\n#endif\";\n\n\tvar skinning_vertex = \"#ifdef USE_SKINNING\\n\\tvec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );\\n\\tvec4 skinned = vec4( 0.0 );\\n\\tskinned += boneMatX * skinVertex * skinWeight.x;\\n\\tskinned += boneMatY * skinVertex * skinWeight.y;\\n\\tskinned += boneMatZ * skinVertex * skinWeight.z;\\n\\tskinned += boneMatW * skinVertex * skinWeight.w;\\n\\ttransformed = ( bindMatrixInverse * skinned ).xyz;\\n#endif\";\n\n\tvar skinnormal_vertex = \"#ifdef USE_SKINNING\\n\\tmat4 skinMatrix = mat4( 0.0 );\\n\\tskinMatrix += skinWeight.x * boneMatX;\\n\\tskinMatrix += skinWeight.y * boneMatY;\\n\\tskinMatrix += skinWeight.z * boneMatZ;\\n\\tskinMatrix += skinWeight.w * boneMatW;\\n\\tskinMatrix = bindMatrixInverse * skinMatrix * bindMatrix;\\n\\tobjectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;\\n\\t#ifdef USE_TANGENT\\n\\t\\tobjectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;\\n\\t#endif\\n#endif\";\n\n\tvar specularmap_fragment = \"float specularStrength;\\n#ifdef USE_SPECULARMAP\\n\\tvec4 texelSpecular = texture2D( specularMap, vUv );\\n\\tspecularStrength = texelSpecular.r;\\n#else\\n\\tspecularStrength = 1.0;\\n#endif\";\n\n\tvar specularmap_pars_fragment = \"#ifdef USE_SPECULARMAP\\n\\tuniform sampler2D specularMap;\\n#endif\";\n\n\tvar tonemapping_fragment = \"#if defined( TONE_MAPPING )\\n\\tgl_FragColor.rgb = toneMapping( gl_FragColor.rgb );\\n#endif\";\n\n\tvar tonemapping_pars_fragment = \"#ifndef saturate\\n#define saturate( a ) clamp( a, 0.0, 1.0 )\\n#endif\\nuniform float toneMappingExposure;\\nvec3 LinearToneMapping( vec3 color ) {\\n\\treturn toneMappingExposure * color;\\n}\\nvec3 ReinhardToneMapping( vec3 color ) {\\n\\tcolor *= toneMappingExposure;\\n\\treturn saturate( color / ( vec3( 1.0 ) + color ) );\\n}\\nvec3 OptimizedCineonToneMapping( vec3 color ) {\\n\\tcolor *= toneMappingExposure;\\n\\tcolor = max( vec3( 0.0 ), color - 0.004 );\\n\\treturn pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );\\n}\\nvec3 RRTAndODTFit( vec3 v ) {\\n\\tvec3 a = v * ( v + 0.0245786 ) - 0.000090537;\\n\\tvec3 b = v * ( 0.983729 * v + 0.4329510 ) + 0.238081;\\n\\treturn a / b;\\n}\\nvec3 ACESFilmicToneMapping( vec3 color ) {\\n\\tconst mat3 ACESInputMat = mat3(\\n\\t\\tvec3( 0.59719, 0.07600, 0.02840 ),\\t\\tvec3( 0.35458, 0.90834, 0.13383 ),\\n\\t\\tvec3( 0.04823, 0.01566, 0.83777 )\\n\\t);\\n\\tconst mat3 ACESOutputMat = mat3(\\n\\t\\tvec3(\t1.60475, -0.10208, -0.00327 ),\\t\\tvec3( -0.53108,\t1.10813, -0.07276 ),\\n\\t\\tvec3( -0.07367, -0.00605,\t1.07602 )\\n\\t);\\n\\tcolor *= toneMappingExposure / 0.6;\\n\\tcolor = ACESInputMat * color;\\n\\tcolor = RRTAndODTFit( color );\\n\\tcolor = ACESOutputMat * color;\\n\\treturn saturate( color );\\n}\\nvec3 CustomToneMapping( vec3 color ) { return color; }\";\n\n\tvar transmission_fragment = \"#ifdef USE_TRANSMISSION\\n\\tfloat transmissionAlpha = 1.0;\\n\\tfloat transmissionFactor = transmission;\\n\\tfloat thicknessFactor = thickness;\\n\\t#ifdef USE_TRANSMISSIONMAP\\n\\t\\ttransmissionFactor *= texture2D( transmissionMap, vUv ).r;\\n\\t#endif\\n\\t#ifdef USE_THICKNESSMAP\\n\\t\\tthicknessFactor *= texture2D( thicknessMap, vUv ).g;\\n\\t#endif\\n\\tvec3 pos = vWorldPosition;\\n\\tvec3 v = normalize( cameraPosition - pos );\\n\\tvec3 n = inverseTransformDirection( normal, viewMatrix );\\n\\tvec4 transmission = getIBLVolumeRefraction(\\n\\t\\tn, v, roughnessFactor, material.diffuseColor, material.specularColor, material.specularF90,\\n\\t\\tpos, modelMatrix, viewMatrix, projectionMatrix, ior, thicknessFactor,\\n\\t\\tattenuationColor, attenuationDistance );\\n\\ttotalDiffuse = mix( totalDiffuse, transmission.rgb, transmissionFactor );\\n\\ttransmissionAlpha = mix( transmissionAlpha, transmission.a, transmissionFactor );\\n#endif\";\n\n\tvar transmission_pars_fragment = \"#ifdef USE_TRANSMISSION\\n\\tuniform float transmission;\\n\\tuniform float thickness;\\n\\tuniform float attenuationDistance;\\n\\tuniform vec3 attenuationColor;\\n\\t#ifdef USE_TRANSMISSIONMAP\\n\\t\\tuniform sampler2D transmissionMap;\\n\\t#endif\\n\\t#ifdef USE_THICKNESSMAP\\n\\t\\tuniform sampler2D thicknessMap;\\n\\t#endif\\n\\tuniform vec2 transmissionSamplerSize;\\n\\tuniform sampler2D transmissionSamplerMap;\\n\\tuniform mat4 modelMatrix;\\n\\tuniform mat4 projectionMatrix;\\n\\tvarying vec3 vWorldPosition;\\n\\tvec3 getVolumeTransmissionRay( vec3 n, vec3 v, float thickness, float ior, mat4 modelMatrix ) {\\n\\t\\tvec3 refractionVector = refract( - v, normalize( n ), 1.0 / ior );\\n\\t\\tvec3 modelScale;\\n\\t\\tmodelScale.x = length( vec3( modelMatrix[ 0 ].xyz ) );\\n\\t\\tmodelScale.y = length( vec3( modelMatrix[ 1 ].xyz ) );\\n\\t\\tmodelScale.z = length( vec3( modelMatrix[ 2 ].xyz ) );\\n\\t\\treturn normalize( refractionVector ) * thickness * modelScale;\\n\\t}\\n\\tfloat applyIorToRoughness( float roughness, float ior ) {\\n\\t\\treturn roughness * clamp( ior * 2.0 - 2.0, 0.0, 1.0 );\\n\\t}\\n\\tvec4 getTransmissionSample( vec2 fragCoord, float roughness, float ior ) {\\n\\t\\tfloat framebufferLod = log2( transmissionSamplerSize.x ) * applyIorToRoughness( roughness, ior );\\n\\t\\t#ifdef TEXTURE_LOD_EXT\\n\\t\\t\\treturn texture2DLodEXT( transmissionSamplerMap, fragCoord.xy, framebufferLod );\\n\\t\\t#else\\n\\t\\t\\treturn texture2D( transmissionSamplerMap, fragCoord.xy, framebufferLod );\\n\\t\\t#endif\\n\\t}\\n\\tvec3 applyVolumeAttenuation( vec3 radiance, float transmissionDistance, vec3 attenuationColor, float attenuationDistance ) {\\n\\t\\tif ( attenuationDistance == 0.0 ) {\\n\\t\\t\\treturn radiance;\\n\\t\\t} else {\\n\\t\\t\\tvec3 attenuationCoefficient = -log( attenuationColor ) / attenuationDistance;\\n\\t\\t\\tvec3 transmittance = exp( - attenuationCoefficient * transmissionDistance );\\t\\t\\treturn transmittance * radiance;\\n\\t\\t}\\n\\t}\\n\\tvec4 getIBLVolumeRefraction( vec3 n, vec3 v, float roughness, vec3 diffuseColor, vec3 specularColor, float specularF90,\\n\\t\\tvec3 position, mat4 modelMatrix, mat4 viewMatrix, mat4 projMatrix, float ior, float thickness,\\n\\t\\tvec3 attenuationColor, float attenuationDistance ) {\\n\\t\\tvec3 transmissionRay = getVolumeTransmissionRay( n, v, thickness, ior, modelMatrix );\\n\\t\\tvec3 refractedRayExit = position + transmissionRay;\\n\\t\\tvec4 ndcPos = projMatrix * viewMatrix * vec4( refractedRayExit, 1.0 );\\n\\t\\tvec2 refractionCoords = ndcPos.xy / ndcPos.w;\\n\\t\\trefractionCoords += 1.0;\\n\\t\\trefractionCoords /= 2.0;\\n\\t\\tvec4 transmittedLight = getTransmissionSample( refractionCoords, roughness, ior );\\n\\t\\tvec3 attenuatedColor = applyVolumeAttenuation( transmittedLight.rgb, length( transmissionRay ), attenuationColor, attenuationDistance );\\n\\t\\tvec3 F = EnvironmentBRDF( n, v, specularColor, specularF90, roughness );\\n\\t\\treturn vec4( ( 1.0 - F ) * attenuatedColor * diffuseColor, transmittedLight.a );\\n\\t}\\n#endif\";\n\n\tvar uv_pars_fragment = \"#if ( defined( USE_UV ) && ! defined( UVS_VERTEX_ONLY ) )\\n\\tvarying vec2 vUv;\\n#endif\";\n\n\tvar uv_pars_vertex = \"#ifdef USE_UV\\n\\t#ifdef UVS_VERTEX_ONLY\\n\\t\\tvec2 vUv;\\n\\t#else\\n\\t\\tvarying vec2 vUv;\\n\\t#endif\\n\\tuniform mat3 uvTransform;\\n#endif\";\n\n\tvar uv_vertex = \"#ifdef USE_UV\\n\\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\\n#endif\";\n\n\tvar uv2_pars_fragment = \"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\\n\\tvarying vec2 vUv2;\\n#endif\";\n\n\tvar uv2_pars_vertex = \"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\\n\\tattribute vec2 uv2;\\n\\tvarying vec2 vUv2;\\n\\tuniform mat3 uv2Transform;\\n#endif\";\n\n\tvar uv2_vertex = \"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\\n\\tvUv2 = ( uv2Transform * vec3( uv2, 1 ) ).xy;\\n#endif\";\n\n\tvar worldpos_vertex = \"#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP ) || defined ( USE_TRANSMISSION )\\n\\tvec4 worldPosition = vec4( transformed, 1.0 );\\n\\t#ifdef USE_INSTANCING\\n\\t\\tworldPosition = instanceMatrix * worldPosition;\\n\\t#endif\\n\\tworldPosition = modelMatrix * worldPosition;\\n#endif\";\n\n\tconst vertex$g = \"varying vec2 vUv;\\nuniform mat3 uvTransform;\\nvoid main() {\\n\\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\\n\\tgl_Position = vec4( position.xy, 1.0, 1.0 );\\n}\";\n\tconst fragment$g = \"uniform sampler2D t2D;\\nvarying vec2 vUv;\\nvoid main() {\\n\\tvec4 texColor = texture2D( t2D, vUv );\\n\\tgl_FragColor = mapTexelToLinear( texColor );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n}\";\n\n\tconst vertex$f = \"varying vec3 vWorldDirection;\\n#include <common>\\nvoid main() {\\n\\tvWorldDirection = transformDirection( position, modelMatrix );\\n\\t#include <begin_vertex>\\n\\t#include <project_vertex>\\n\\tgl_Position.z = gl_Position.w;\\n}\";\n\tconst fragment$f = \"#include <envmap_common_pars_fragment>\\nuniform float opacity;\\nvarying vec3 vWorldDirection;\\n#include <cube_uv_reflection_fragment>\\nvoid main() {\\n\\tvec3 vReflect = vWorldDirection;\\n\\t#include <envmap_fragment>\\n\\tgl_FragColor = envColor;\\n\\tgl_FragColor.a *= opacity;\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n}\";\n\n\tconst vertex$e = \"#include <common>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvarying vec2 vHighPrecisionZW;\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#ifdef USE_DISPLACEMENTMAP\\n\\t\\t#include <beginnormal_vertex>\\n\\t\\t#include <morphnormal_vertex>\\n\\t\\t#include <skinnormal_vertex>\\n\\t#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvHighPrecisionZW = gl_Position.zw;\\n}\";\n\tconst fragment$e = \"#if DEPTH_PACKING == 3200\\n\\tuniform float opacity;\\n#endif\\n#include <common>\\n#include <packing>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvarying vec2 vHighPrecisionZW;\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( 1.0 );\\n\\t#if DEPTH_PACKING == 3200\\n\\t\\tdiffuseColor.a = opacity;\\n\\t#endif\\n\\t#include <map_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <logdepthbuf_fragment>\\n\\tfloat fragCoordZ = 0.5 * vHighPrecisionZW[0] / vHighPrecisionZW[1] + 0.5;\\n\\t#if DEPTH_PACKING == 3200\\n\\t\\tgl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );\\n\\t#elif DEPTH_PACKING == 3201\\n\\t\\tgl_FragColor = packDepthToRGBA( fragCoordZ );\\n\\t#endif\\n}\";\n\n\tconst vertex$d = \"#define DISTANCE\\nvarying vec3 vWorldPosition;\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#ifdef USE_DISPLACEMENTMAP\\n\\t\\t#include <beginnormal_vertex>\\n\\t\\t#include <morphnormal_vertex>\\n\\t\\t#include <skinnormal_vertex>\\n\\t#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvWorldPosition = worldPosition.xyz;\\n}\";\n\tconst fragment$d = \"#define DISTANCE\\nuniform vec3 referencePosition;\\nuniform float nearDistance;\\nuniform float farDistance;\\nvarying vec3 vWorldPosition;\\n#include <common>\\n#include <packing>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main () {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( 1.0 );\\n\\t#include <map_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\tfloat dist = length( vWorldPosition - referencePosition );\\n\\tdist = ( dist - nearDistance ) / ( farDistance - nearDistance );\\n\\tdist = saturate( dist );\\n\\tgl_FragColor = packDepthToRGBA( dist );\\n}\";\n\n\tconst vertex$c = \"varying vec3 vWorldDirection;\\n#include <common>\\nvoid main() {\\n\\tvWorldDirection = transformDirection( position, modelMatrix );\\n\\t#include <begin_vertex>\\n\\t#include <project_vertex>\\n}\";\n\tconst fragment$c = \"uniform sampler2D tEquirect;\\nvarying vec3 vWorldDirection;\\n#include <common>\\nvoid main() {\\n\\tvec3 direction = normalize( vWorldDirection );\\n\\tvec2 sampleUV = equirectUv( direction );\\n\\tvec4 texColor = texture2D( tEquirect, sampleUV );\\n\\tgl_FragColor = mapTexelToLinear( texColor );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n}\";\n\n\tconst vertex$b = \"uniform float scale;\\nattribute float lineDistance;\\nvarying float vLineDistance;\\n#include <common>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\tvLineDistance = scale * lineDistance;\\n\\t#include <color_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\tconst fragment$b = \"uniform vec3 diffuse;\\nuniform float opacity;\\nuniform float dashSize;\\nuniform float totalSize;\\nvarying float vLineDistance;\\n#include <common>\\n#include <color_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tif ( mod( vLineDistance, totalSize ) > dashSize ) {\\n\\t\\tdiscard;\\n\\t}\\n\\tvec3 outgoingLight = vec3( 0.0 );\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <color_fragment>\\n\\toutgoingLight = diffuseColor.rgb;\\n\\t#include <output_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n}\";\n\n\tconst vertex$a = \"#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#if defined ( USE_ENVMAP ) || defined ( USE_SKINNING )\\n\\t\\t#include <beginnormal_vertex>\\n\\t\\t#include <morphnormal_vertex>\\n\\t\\t#include <skinbase_vertex>\\n\\t\\t#include <skinnormal_vertex>\\n\\t\\t#include <defaultnormal_vertex>\\n\\t#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <envmap_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\tconst fragment$a = \"uniform vec3 diffuse;\\nuniform float opacity;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <envmap_common_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <cube_uv_reflection_fragment>\\n#include <fog_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <specularmap_fragment>\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\t#ifdef USE_LIGHTMAP\\n\\t\\tvec4 lightMapTexel= texture2D( lightMap, vUv2 );\\n\\t\\treflectedLight.indirectDiffuse += lightMapTexelToLinear( lightMapTexel ).rgb * lightMapIntensity;\\n\\t#else\\n\\t\\treflectedLight.indirectDiffuse += vec3( 1.0 );\\n\\t#endif\\n\\t#include <aomap_fragment>\\n\\treflectedLight.indirectDiffuse *= diffuseColor.rgb;\\n\\tvec3 outgoingLight = reflectedLight.indirectDiffuse;\\n\\t#include <envmap_fragment>\\n\\t#include <output_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\n\n\tconst vertex$9 = \"#define LAMBERT\\nvarying vec3 vLightFront;\\nvarying vec3 vIndirectFront;\\n#ifdef DOUBLE_SIDED\\n\\tvarying vec3 vLightBack;\\n\\tvarying vec3 vIndirectBack;\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <envmap_vertex>\\n\\t#include <lights_lambert_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\tconst fragment$9 = \"uniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform float opacity;\\nvarying vec3 vLightFront;\\nvarying vec3 vIndirectFront;\\n#ifdef DOUBLE_SIDED\\n\\tvarying vec3 vLightBack;\\n\\tvarying vec3 vIndirectBack;\\n#endif\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <envmap_common_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <cube_uv_reflection_fragment>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <fog_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <shadowmask_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <specularmap_fragment>\\n\\t#include <emissivemap_fragment>\\n\\t#ifdef DOUBLE_SIDED\\n\\t\\treflectedLight.indirectDiffuse += ( gl_FrontFacing ) ? vIndirectFront : vIndirectBack;\\n\\t#else\\n\\t\\treflectedLight.indirectDiffuse += vIndirectFront;\\n\\t#endif\\n\\t#include <lightmap_fragment>\\n\\treflectedLight.indirectDiffuse *= BRDF_Lambert( diffuseColor.rgb );\\n\\t#ifdef DOUBLE_SIDED\\n\\t\\treflectedLight.directDiffuse = ( gl_FrontFacing ) ? vLightFront : vLightBack;\\n\\t#else\\n\\t\\treflectedLight.directDiffuse = vLightFront;\\n\\t#endif\\n\\treflectedLight.directDiffuse *= BRDF_Lambert( diffuseColor.rgb ) * getShadowMask();\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\\n\\t#include <envmap_fragment>\\n\\t#include <output_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\n\n\tconst vertex$8 = \"#define MATCAP\\nvarying vec3 vViewPosition;\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <color_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <normal_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <color_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <normal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <fog_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n}\";\n\tconst fragment$8 = \"#define MATCAP\\nuniform vec3 diffuse;\\nuniform float opacity;\\nuniform sampler2D matcap;\\nvarying vec3 vViewPosition;\\n#include <common>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <normal_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\tvec3 viewDir = normalize( vViewPosition );\\n\\tvec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );\\n\\tvec3 y = cross( viewDir, x );\\n\\tvec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;\\n\\t#ifdef USE_MATCAP\\n\\t\\tvec4 matcapColor = texture2D( matcap, uv );\\n\\t\\tmatcapColor = matcapTexelToLinear( matcapColor );\\n\\t#else\\n\\t\\tvec4 matcapColor = vec4( 1.0 );\\n\\t#endif\\n\\tvec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;\\n\\t#include <output_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\n\n\tconst vertex$7 = \"#define NORMAL\\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\\n\\tvarying vec3 vViewPosition;\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <normal_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <normal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\\n\\tvViewPosition = - mvPosition.xyz;\\n#endif\\n}\";\n\tconst fragment$7 = \"#define NORMAL\\nuniform float opacity;\\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\\n\\tvarying vec3 vViewPosition;\\n#endif\\n#include <packing>\\n#include <uv_pars_fragment>\\n#include <normal_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\tgl_FragColor = vec4( packNormalToRGB( normal ), opacity );\\n}\";\n\n\tconst vertex$6 = \"#define PHONG\\nvarying vec3 vViewPosition;\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <normal_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <normal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n\\t#include <worldpos_vertex>\\n\\t#include <envmap_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\tconst fragment$6 = \"#define PHONG\\nuniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform vec3 specular;\\nuniform float shininess;\\nuniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <envmap_common_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <cube_uv_reflection_fragment>\\n#include <fog_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <normal_pars_fragment>\\n#include <lights_phong_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <specularmap_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\t#include <emissivemap_fragment>\\n\\t#include <lights_phong_fragment>\\n\\t#include <lights_fragment_begin>\\n\\t#include <lights_fragment_maps>\\n\\t#include <lights_fragment_end>\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\\n\\t#include <envmap_fragment>\\n\\t#include <output_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\n\n\tconst vertex$5 = \"#define STANDARD\\nvarying vec3 vViewPosition;\\n#ifdef USE_TRANSMISSION\\n\\tvarying vec3 vWorldPosition;\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <normal_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <normal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n\\t#include <worldpos_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n#ifdef USE_TRANSMISSION\\n\\tvWorldPosition = worldPosition.xyz;\\n#endif\\n}\";\n\tconst fragment$5 = \"#define STANDARD\\n#ifdef PHYSICAL\\n\\t#define IOR\\n\\t#define SPECULAR\\n#endif\\nuniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform float roughness;\\nuniform float metalness;\\nuniform float opacity;\\n#ifdef IOR\\n\\tuniform float ior;\\n#endif\\n#ifdef SPECULAR\\n\\tuniform float specularIntensity;\\n\\tuniform vec3 specularColor;\\n\\t#ifdef USE_SPECULARINTENSITYMAP\\n\\t\\tuniform sampler2D specularIntensityMap;\\n\\t#endif\\n\\t#ifdef USE_SPECULARCOLORMAP\\n\\t\\tuniform sampler2D specularColorMap;\\n\\t#endif\\n#endif\\n#ifdef USE_CLEARCOAT\\n\\tuniform float clearcoat;\\n\\tuniform float clearcoatRoughness;\\n#endif\\n#ifdef USE_SHEEN\\n\\tuniform vec3 sheenColor;\\n\\tuniform float sheenRoughness;\\n\\t#ifdef USE_SHEENCOLORMAP\\n\\t\\tuniform sampler2D sheenColorMap;\\n\\t#endif\\n\\t#ifdef USE_SHEENROUGHNESSMAP\\n\\t\\tuniform sampler2D sheenRoughnessMap;\\n\\t#endif\\n#endif\\nvarying vec3 vViewPosition;\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <bsdfs>\\n#include <cube_uv_reflection_fragment>\\n#include <envmap_common_pars_fragment>\\n#include <envmap_physical_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <lights_pars_begin>\\n#include <normal_pars_fragment>\\n#include <lights_physical_pars_fragment>\\n#include <transmission_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <clearcoat_pars_fragment>\\n#include <roughnessmap_pars_fragment>\\n#include <metalnessmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <roughnessmap_fragment>\\n\\t#include <metalnessmap_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\t#include <clearcoat_normal_fragment_begin>\\n\\t#include <clearcoat_normal_fragment_maps>\\n\\t#include <emissivemap_fragment>\\n\\t#include <lights_physical_fragment>\\n\\t#include <lights_fragment_begin>\\n\\t#include <lights_fragment_maps>\\n\\t#include <lights_fragment_end>\\n\\t#include <aomap_fragment>\\n\\tvec3 totalDiffuse = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse;\\n\\tvec3 totalSpecular = reflectedLight.directSpecular + reflectedLight.indirectSpecular;\\n\\t#include <transmission_fragment>\\n\\tvec3 outgoingLight = totalDiffuse + totalSpecular + totalEmissiveRadiance;\\n\\t#ifdef USE_CLEARCOAT\\n\\t\\tfloat dotNVcc = saturate( dot( geometry.clearcoatNormal, geometry.viewDir ) );\\n\\t\\tvec3 Fcc = F_Schlick( material.clearcoatF0, material.clearcoatF90, dotNVcc );\\n\\t\\toutgoingLight = outgoingLight * ( 1.0 - clearcoat * Fcc ) + clearcoatSpecular * clearcoat;\\n\\t#endif\\n\\t#include <output_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\n\n\tconst vertex$4 = \"#define TOON\\nvarying vec3 vViewPosition;\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <normal_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <normal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n\\t#include <worldpos_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\tconst fragment$4 = \"#define TOON\\nuniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <gradientmap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <normal_pars_fragment>\\n#include <lights_toon_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\t#include <emissivemap_fragment>\\n\\t#include <lights_toon_fragment>\\n\\t#include <lights_fragment_begin>\\n\\t#include <lights_fragment_maps>\\n\\t#include <lights_fragment_end>\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\\n\\t#include <output_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\n\n\tconst vertex$3 = \"uniform float size;\\nuniform float scale;\\n#include <common>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <color_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <project_vertex>\\n\\tgl_PointSize = size;\\n\\t#ifdef USE_SIZEATTENUATION\\n\\t\\tbool isPerspective = isPerspectiveMatrix( projectionMatrix );\\n\\t\\tif ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );\\n\\t#endif\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\tconst fragment$3 = \"uniform vec3 diffuse;\\nuniform float opacity;\\n#include <common>\\n#include <color_pars_fragment>\\n#include <map_particle_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec3 outgoingLight = vec3( 0.0 );\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_particle_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphatest_fragment>\\n\\toutgoingLight = diffuseColor.rgb;\\n\\t#include <output_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n}\";\n\n\tconst vertex$2 = \"#include <common>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\nvoid main() {\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <project_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\tconst fragment$2 = \"uniform vec3 color;\\nuniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <fog_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <shadowmap_pars_fragment>\\n#include <shadowmask_pars_fragment>\\nvoid main() {\\n\\tgl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n}\";\n\n\tconst vertex$1 = \"uniform float rotation;\\nuniform vec2 center;\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\tvec4 mvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );\\n\\tvec2 scale;\\n\\tscale.x = length( vec3( modelMatrix[ 0 ].x, modelMatrix[ 0 ].y, modelMatrix[ 0 ].z ) );\\n\\tscale.y = length( vec3( modelMatrix[ 1 ].x, modelMatrix[ 1 ].y, modelMatrix[ 1 ].z ) );\\n\\t#ifndef USE_SIZEATTENUATION\\n\\t\\tbool isPerspective = isPerspectiveMatrix( projectionMatrix );\\n\\t\\tif ( isPerspective ) scale *= - mvPosition.z;\\n\\t#endif\\n\\tvec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;\\n\\tvec2 rotatedPosition;\\n\\trotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;\\n\\trotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;\\n\\tmvPosition.xy += rotatedPosition;\\n\\tgl_Position = projectionMatrix * mvPosition;\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\tconst fragment$1 = \"uniform vec3 diffuse;\\nuniform float opacity;\\n#include <common>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec3 outgoingLight = vec3( 0.0 );\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\toutgoingLight = diffuseColor.rgb;\\n\\t#include <output_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n}\";\n\n\tconst ShaderChunk = {\n\t\talphamap_fragment: alphamap_fragment,\n\t\talphamap_pars_fragment: alphamap_pars_fragment,\n\t\talphatest_fragment: alphatest_fragment,\n\t\talphatest_pars_fragment: alphatest_pars_fragment,\n\t\taomap_fragment: aomap_fragment,\n\t\taomap_pars_fragment: aomap_pars_fragment,\n\t\tbegin_vertex: begin_vertex,\n\t\tbeginnormal_vertex: beginnormal_vertex,\n\t\tbsdfs: bsdfs,\n\t\tbumpmap_pars_fragment: bumpmap_pars_fragment,\n\t\tclipping_planes_fragment: clipping_planes_fragment,\n\t\tclipping_planes_pars_fragment: clipping_planes_pars_fragment,\n\t\tclipping_planes_pars_vertex: clipping_planes_pars_vertex,\n\t\tclipping_planes_vertex: clipping_planes_vertex,\n\t\tcolor_fragment: color_fragment,\n\t\tcolor_pars_fragment: color_pars_fragment,\n\t\tcolor_pars_vertex: color_pars_vertex,\n\t\tcolor_vertex: color_vertex,\n\t\tcommon: common,\n\t\tcube_uv_reflection_fragment: cube_uv_reflection_fragment,\n\t\tdefaultnormal_vertex: defaultnormal_vertex,\n\t\tdisplacementmap_pars_vertex: displacementmap_pars_vertex,\n\t\tdisplacementmap_vertex: displacementmap_vertex,\n\t\temissivemap_fragment: emissivemap_fragment,\n\t\temissivemap_pars_fragment: emissivemap_pars_fragment,\n\t\tencodings_fragment: encodings_fragment,\n\t\tencodings_pars_fragment: encodings_pars_fragment,\n\t\tenvmap_fragment: envmap_fragment,\n\t\tenvmap_common_pars_fragment: envmap_common_pars_fragment,\n\t\tenvmap_pars_fragment: envmap_pars_fragment,\n\t\tenvmap_pars_vertex: envmap_pars_vertex,\n\t\tenvmap_physical_pars_fragment: envmap_physical_pars_fragment,\n\t\tenvmap_vertex: envmap_vertex,\n\t\tfog_vertex: fog_vertex,\n\t\tfog_pars_vertex: fog_pars_vertex,\n\t\tfog_fragment: fog_fragment,\n\t\tfog_pars_fragment: fog_pars_fragment,\n\t\tgradientmap_pars_fragment: gradientmap_pars_fragment,\n\t\tlightmap_fragment: lightmap_fragment,\n\t\tlightmap_pars_fragment: lightmap_pars_fragment,\n\t\tlights_lambert_vertex: lights_lambert_vertex,\n\t\tlights_pars_begin: lights_pars_begin,\n\t\tlights_toon_fragment: lights_toon_fragment,\n\t\tlights_toon_pars_fragment: lights_toon_pars_fragment,\n\t\tlights_phong_fragment: lights_phong_fragment,\n\t\tlights_phong_pars_fragment: lights_phong_pars_fragment,\n\t\tlights_physical_fragment: lights_physical_fragment,\n\t\tlights_physical_pars_fragment: lights_physical_pars_fragment,\n\t\tlights_fragment_begin: lights_fragment_begin,\n\t\tlights_fragment_maps: lights_fragment_maps,\n\t\tlights_fragment_end: lights_fragment_end,\n\t\tlogdepthbuf_fragment: logdepthbuf_fragment,\n\t\tlogdepthbuf_pars_fragment: logdepthbuf_pars_fragment,\n\t\tlogdepthbuf_pars_vertex: logdepthbuf_pars_vertex,\n\t\tlogdepthbuf_vertex: logdepthbuf_vertex,\n\t\tmap_fragment: map_fragment,\n\t\tmap_pars_fragment: map_pars_fragment,\n\t\tmap_particle_fragment: map_particle_fragment,\n\t\tmap_particle_pars_fragment: map_particle_pars_fragment,\n\t\tmetalnessmap_fragment: metalnessmap_fragment,\n\t\tmetalnessmap_pars_fragment: metalnessmap_pars_fragment,\n\t\tmorphnormal_vertex: morphnormal_vertex,\n\t\tmorphtarget_pars_vertex: morphtarget_pars_vertex,\n\t\tmorphtarget_vertex: morphtarget_vertex,\n\t\tnormal_fragment_begin: normal_fragment_begin,\n\t\tnormal_fragment_maps: normal_fragment_maps,\n\t\tnormal_pars_fragment: normal_pars_fragment,\n\t\tnormal_pars_vertex: normal_pars_vertex,\n\t\tnormal_vertex: normal_vertex,\n\t\tnormalmap_pars_fragment: normalmap_pars_fragment,\n\t\tclearcoat_normal_fragment_begin: clearcoat_normal_fragment_begin,\n\t\tclearcoat_normal_fragment_maps: clearcoat_normal_fragment_maps,\n\t\tclearcoat_pars_fragment: clearcoat_pars_fragment,\n\t\toutput_fragment: output_fragment,\n\t\tpacking: packing,\n\t\tpremultiplied_alpha_fragment: premultiplied_alpha_fragment,\n\t\tproject_vertex: project_vertex,\n\t\tdithering_fragment: dithering_fragment,\n\t\tdithering_pars_fragment: dithering_pars_fragment,\n\t\troughnessmap_fragment: roughnessmap_fragment,\n\t\troughnessmap_pars_fragment: roughnessmap_pars_fragment,\n\t\tshadowmap_pars_fragment: shadowmap_pars_fragment,\n\t\tshadowmap_pars_vertex: shadowmap_pars_vertex,\n\t\tshadowmap_vertex: shadowmap_vertex,\n\t\tshadowmask_pars_fragment: shadowmask_pars_fragment,\n\t\tskinbase_vertex: skinbase_vertex,\n\t\tskinning_pars_vertex: skinning_pars_vertex,\n\t\tskinning_vertex: skinning_vertex,\n\t\tskinnormal_vertex: skinnormal_vertex,\n\t\tspecularmap_fragment: specularmap_fragment,\n\t\tspecularmap_pars_fragment: specularmap_pars_fragment,\n\t\ttonemapping_fragment: tonemapping_fragment,\n\t\ttonemapping_pars_fragment: tonemapping_pars_fragment,\n\t\ttransmission_fragment: transmission_fragment,\n\t\ttransmission_pars_fragment: transmission_pars_fragment,\n\t\tuv_pars_fragment: uv_pars_fragment,\n\t\tuv_pars_vertex: uv_pars_vertex,\n\t\tuv_vertex: uv_vertex,\n\t\tuv2_pars_fragment: uv2_pars_fragment,\n\t\tuv2_pars_vertex: uv2_pars_vertex,\n\t\tuv2_vertex: uv2_vertex,\n\t\tworldpos_vertex: worldpos_vertex,\n\t\tbackground_vert: vertex$g,\n\t\tbackground_frag: fragment$g,\n\t\tcube_vert: vertex$f,\n\t\tcube_frag: fragment$f,\n\t\tdepth_vert: vertex$e,\n\t\tdepth_frag: fragment$e,\n\t\tdistanceRGBA_vert: vertex$d,\n\t\tdistanceRGBA_frag: fragment$d,\n\t\tequirect_vert: vertex$c,\n\t\tequirect_frag: fragment$c,\n\t\tlinedashed_vert: vertex$b,\n\t\tlinedashed_frag: fragment$b,\n\t\tmeshbasic_vert: vertex$a,\n\t\tmeshbasic_frag: fragment$a,\n\t\tmeshlambert_vert: vertex$9,\n\t\tmeshlambert_frag: fragment$9,\n\t\tmeshmatcap_vert: vertex$8,\n\t\tmeshmatcap_frag: fragment$8,\n\t\tmeshnormal_vert: vertex$7,\n\t\tmeshnormal_frag: fragment$7,\n\t\tmeshphong_vert: vertex$6,\n\t\tmeshphong_frag: fragment$6,\n\t\tmeshphysical_vert: vertex$5,\n\t\tmeshphysical_frag: fragment$5,\n\t\tmeshtoon_vert: vertex$4,\n\t\tmeshtoon_frag: fragment$4,\n\t\tpoints_vert: vertex$3,\n\t\tpoints_frag: fragment$3,\n\t\tshadow_vert: vertex$2,\n\t\tshadow_frag: fragment$2,\n\t\tsprite_vert: vertex$1,\n\t\tsprite_frag: fragment$1\n\t};\n\n\t/**\n\t * Uniforms library for shared webgl shaders\n\t */\n\n\tconst UniformsLib = {\n\t\tcommon: {\n\t\t\tdiffuse: {\n\t\t\t\tvalue: new Color(0xffffff)\n\t\t\t},\n\t\t\topacity: {\n\t\t\t\tvalue: 1.0\n\t\t\t},\n\t\t\tmap: {\n\t\t\t\tvalue: null\n\t\t\t},\n\t\t\tuvTransform: {\n\t\t\t\tvalue: new Matrix3()\n\t\t\t},\n\t\t\tuv2Transform: {\n\t\t\t\tvalue: new Matrix3()\n\t\t\t},\n\t\t\talphaMap: {\n\t\t\t\tvalue: null\n\t\t\t},\n\t\t\talphaTest: {\n\t\t\t\tvalue: 0\n\t\t\t}\n\t\t},\n\t\tspecularmap: {\n\t\t\tspecularMap: {\n\t\t\t\tvalue: null\n\t\t\t}\n\t\t},\n\t\tenvmap: {\n\t\t\tenvMap: {\n\t\t\t\tvalue: null\n\t\t\t},\n\t\t\tflipEnvMap: {\n\t\t\t\tvalue: -1\n\t\t\t},\n\t\t\treflectivity: {\n\t\t\t\tvalue: 1.0\n\t\t\t},\n\t\t\t// basic, lambert, phong\n\t\t\tior: {\n\t\t\t\tvalue: 1.5\n\t\t\t},\n\t\t\t// standard, physical\n\t\t\trefractionRatio: {\n\t\t\t\tvalue: 0.98\n\t\t\t},\n\t\t\tmaxMipLevel: {\n\t\t\t\tvalue: 0\n\t\t\t}\n\t\t},\n\t\taomap: {\n\t\t\taoMap: {\n\t\t\t\tvalue: null\n\t\t\t},\n\t\t\taoMapIntensity: {\n\t\t\t\tvalue: 1\n\t\t\t}\n\t\t},\n\t\tlightmap: {\n\t\t\tlightMap: {\n\t\t\t\tvalue: null\n\t\t\t},\n\t\t\tlightMapIntensity: {\n\t\t\t\tvalue: 1\n\t\t\t}\n\t\t},\n\t\temissivemap: {\n\t\t\temissiveMap: {\n\t\t\t\tvalue: null\n\t\t\t}\n\t\t},\n\t\tbumpmap: {\n\t\t\tbumpMap: {\n\t\t\t\tvalue: null\n\t\t\t},\n\t\t\tbumpScale: {\n\t\t\t\tvalue: 1\n\t\t\t}\n\t\t},\n\t\tnormalmap: {\n\t\t\tnormalMap: {\n\t\t\t\tvalue: null\n\t\t\t},\n\t\t\tnormalScale: {\n\t\t\t\tvalue: new Vector2(1, 1)\n\t\t\t}\n\t\t},\n\t\tdisplacementmap: {\n\t\t\tdisplacementMap: {\n\t\t\t\tvalue: null\n\t\t\t},\n\t\t\tdisplacementScale: {\n\t\t\t\tvalue: 1\n\t\t\t},\n\t\t\tdisplacementBias: {\n\t\t\t\tvalue: 0\n\t\t\t}\n\t\t},\n\t\troughnessmap: {\n\t\t\troughnessMap: {\n\t\t\t\tvalue: null\n\t\t\t}\n\t\t},\n\t\tmetalnessmap: {\n\t\t\tmetalnessMap: {\n\t\t\t\tvalue: null\n\t\t\t}\n\t\t},\n\t\tgradientmap: {\n\t\t\tgradientMap: {\n\t\t\t\tvalue: null\n\t\t\t}\n\t\t},\n\t\tfog: {\n\t\t\tfogDensity: {\n\t\t\t\tvalue: 0.00025\n\t\t\t},\n\t\t\tfogNear: {\n\t\t\t\tvalue: 1\n\t\t\t},\n\t\t\tfogFar: {\n\t\t\t\tvalue: 2000\n\t\t\t},\n\t\t\tfogColor: {\n\t\t\t\tvalue: new Color(0xffffff)\n\t\t\t}\n\t\t},\n\t\tlights: {\n\t\t\tambientLightColor: {\n\t\t\t\tvalue: []\n\t\t\t},\n\t\t\tlightProbe: {\n\t\t\t\tvalue: []\n\t\t\t},\n\t\t\tdirectionalLights: {\n\t\t\t\tvalue: [],\n\t\t\t\tproperties: {\n\t\t\t\t\tdirection: {},\n\t\t\t\t\tcolor: {}\n\t\t\t\t}\n\t\t\t},\n\t\t\tdirectionalLightShadows: {\n\t\t\t\tvalue: [],\n\t\t\t\tproperties: {\n\t\t\t\t\tshadowBias: {},\n\t\t\t\t\tshadowNormalBias: {},\n\t\t\t\t\tshadowRadius: {},\n\t\t\t\t\tshadowMapSize: {}\n\t\t\t\t}\n\t\t\t},\n\t\t\tdirectionalShadowMap: {\n\t\t\t\tvalue: []\n\t\t\t},\n\t\t\tdirectionalShadowMatrix: {\n\t\t\t\tvalue: []\n\t\t\t},\n\t\t\tspotLights: {\n\t\t\t\tvalue: [],\n\t\t\t\tproperties: {\n\t\t\t\t\tcolor: {},\n\t\t\t\t\tposition: {},\n\t\t\t\t\tdirection: {},\n\t\t\t\t\tdistance: {},\n\t\t\t\t\tconeCos: {},\n\t\t\t\t\tpenumbraCos: {},\n\t\t\t\t\tdecay: {}\n\t\t\t\t}\n\t\t\t},\n\t\t\tspotLightShadows: {\n\t\t\t\tvalue: [],\n\t\t\t\tproperties: {\n\t\t\t\t\tshadowBias: {},\n\t\t\t\t\tshadowNormalBias: {},\n\t\t\t\t\tshadowRadius: {},\n\t\t\t\t\tshadowMapSize: {}\n\t\t\t\t}\n\t\t\t},\n\t\t\tspotShadowMap: {\n\t\t\t\tvalue: []\n\t\t\t},\n\t\t\tspotShadowMatrix: {\n\t\t\t\tvalue: []\n\t\t\t},\n\t\t\tpointLights: {\n\t\t\t\tvalue: [],\n\t\t\t\tproperties: {\n\t\t\t\t\tcolor: {},\n\t\t\t\t\tposition: {},\n\t\t\t\t\tdecay: {},\n\t\t\t\t\tdistance: {}\n\t\t\t\t}\n\t\t\t},\n\t\t\tpointLightShadows: {\n\t\t\t\tvalue: [],\n\t\t\t\tproperties: {\n\t\t\t\t\tshadowBias: {},\n\t\t\t\t\tshadowNormalBias: {},\n\t\t\t\t\tshadowRadius: {},\n\t\t\t\t\tshadowMapSize: {},\n\t\t\t\t\tshadowCameraNear: {},\n\t\t\t\t\tshadowCameraFar: {}\n\t\t\t\t}\n\t\t\t},\n\t\t\tpointShadowMap: {\n\t\t\t\tvalue: []\n\t\t\t},\n\t\t\tpointShadowMatrix: {\n\t\t\t\tvalue: []\n\t\t\t},\n\t\t\themisphereLights: {\n\t\t\t\tvalue: [],\n\t\t\t\tproperties: {\n\t\t\t\t\tdirection: {},\n\t\t\t\t\tskyColor: {},\n\t\t\t\t\tgroundColor: {}\n\t\t\t\t}\n\t\t\t},\n\t\t\t// TODO (abelnation): RectAreaLight BRDF data needs to be moved from example to main src\n\t\t\trectAreaLights: {\n\t\t\t\tvalue: [],\n\t\t\t\tproperties: {\n\t\t\t\t\tcolor: {},\n\t\t\t\t\tposition: {},\n\t\t\t\t\twidth: {},\n\t\t\t\t\theight: {}\n\t\t\t\t}\n\t\t\t},\n\t\t\tltc_1: {\n\t\t\t\tvalue: null\n\t\t\t},\n\t\t\tltc_2: {\n\t\t\t\tvalue: null\n\t\t\t}\n\t\t},\n\t\tpoints: {\n\t\t\tdiffuse: {\n\t\t\t\tvalue: new Color(0xffffff)\n\t\t\t},\n\t\t\topacity: {\n\t\t\t\tvalue: 1.0\n\t\t\t},\n\t\t\tsize: {\n\t\t\t\tvalue: 1.0\n\t\t\t},\n\t\t\tscale: {\n\t\t\t\tvalue: 1.0\n\t\t\t},\n\t\t\tmap: {\n\t\t\t\tvalue: null\n\t\t\t},\n\t\t\talphaMap: {\n\t\t\t\tvalue: null\n\t\t\t},\n\t\t\talphaTest: {\n\t\t\t\tvalue: 0\n\t\t\t},\n\t\t\tuvTransform: {\n\t\t\t\tvalue: new Matrix3()\n\t\t\t}\n\t\t},\n\t\tsprite: {\n\t\t\tdiffuse: {\n\t\t\t\tvalue: new Color(0xffffff)\n\t\t\t},\n\t\t\topacity: {\n\t\t\t\tvalue: 1.0\n\t\t\t},\n\t\t\tcenter: {\n\t\t\t\tvalue: new Vector2(0.5, 0.5)\n\t\t\t},\n\t\t\trotation: {\n\t\t\t\tvalue: 0.0\n\t\t\t},\n\t\t\tmap: {\n\t\t\t\tvalue: null\n\t\t\t},\n\t\t\talphaMap: {\n\t\t\t\tvalue: null\n\t\t\t},\n\t\t\talphaTest: {\n\t\t\t\tvalue: 0\n\t\t\t},\n\t\t\tuvTransform: {\n\t\t\t\tvalue: new Matrix3()\n\t\t\t}\n\t\t}\n\t};\n\n\tconst ShaderLib = {\n\t\tbasic: {\n\t\t\tuniforms: mergeUniforms([UniformsLib.common, UniformsLib.specularmap, UniformsLib.envmap, UniformsLib.aomap, UniformsLib.lightmap, UniformsLib.fog]),\n\t\t\tvertexShader: ShaderChunk.meshbasic_vert,\n\t\t\tfragmentShader: ShaderChunk.meshbasic_frag\n\t\t},\n\t\tlambert: {\n\t\t\tuniforms: mergeUniforms([UniformsLib.common, UniformsLib.specularmap, UniformsLib.envmap, UniformsLib.aomap, UniformsLib.lightmap, UniformsLib.emissivemap, UniformsLib.fog, UniformsLib.lights, {\n\t\t\t\temissive: {\n\t\t\t\t\tvalue: new Color(0x000000)\n\t\t\t\t}\n\t\t\t}]),\n\t\t\tvertexShader: ShaderChunk.meshlambert_vert,\n\t\t\tfragmentShader: ShaderChunk.meshlambert_frag\n\t\t},\n\t\tphong: {\n\t\t\tuniforms: mergeUniforms([UniformsLib.common, UniformsLib.specularmap, UniformsLib.envmap, UniformsLib.aomap, UniformsLib.lightmap, UniformsLib.emissivemap, UniformsLib.bumpmap, UniformsLib.normalmap, UniformsLib.displacementmap, UniformsLib.fog, UniformsLib.lights, {\n\t\t\t\temissive: {\n\t\t\t\t\tvalue: new Color(0x000000)\n\t\t\t\t},\n\t\t\t\tspecular: {\n\t\t\t\t\tvalue: new Color(0x111111)\n\t\t\t\t},\n\t\t\t\tshininess: {\n\t\t\t\t\tvalue: 30\n\t\t\t\t}\n\t\t\t}]),\n\t\t\tvertexShader: ShaderChunk.meshphong_vert,\n\t\t\tfragmentShader: ShaderChunk.meshphong_frag\n\t\t},\n\t\tstandard: {\n\t\t\tuniforms: mergeUniforms([UniformsLib.common, UniformsLib.envmap, UniformsLib.aomap, UniformsLib.lightmap, UniformsLib.emissivemap, UniformsLib.bumpmap, UniformsLib.normalmap, UniformsLib.displacementmap, UniformsLib.roughnessmap, UniformsLib.metalnessmap, UniformsLib.fog, UniformsLib.lights, {\n\t\t\t\temissive: {\n\t\t\t\t\tvalue: new Color(0x000000)\n\t\t\t\t},\n\t\t\t\troughness: {\n\t\t\t\t\tvalue: 1.0\n\t\t\t\t},\n\t\t\t\tmetalness: {\n\t\t\t\t\tvalue: 0.0\n\t\t\t\t},\n\t\t\t\tenvMapIntensity: {\n\t\t\t\t\tvalue: 1\n\t\t\t\t} // temporary\n\n\t\t\t}]),\n\t\t\tvertexShader: ShaderChunk.meshphysical_vert,\n\t\t\tfragmentShader: ShaderChunk.meshphysical_frag\n\t\t},\n\t\ttoon: {\n\t\t\tuniforms: mergeUniforms([UniformsLib.common, UniformsLib.aomap, UniformsLib.lightmap, UniformsLib.emissivemap, UniformsLib.bumpmap, UniformsLib.normalmap, UniformsLib.displacementmap, UniformsLib.gradientmap, UniformsLib.fog, UniformsLib.lights, {\n\t\t\t\temissive: {\n\t\t\t\t\tvalue: new Color(0x000000)\n\t\t\t\t}\n\t\t\t}]),\n\t\t\tvertexShader: ShaderChunk.meshtoon_vert,\n\t\t\tfragmentShader: ShaderChunk.meshtoon_frag\n\t\t},\n\t\tmatcap: {\n\t\t\tuniforms: mergeUniforms([UniformsLib.common, UniformsLib.bumpmap, UniformsLib.normalmap, UniformsLib.displacementmap, UniformsLib.fog, {\n\t\t\t\tmatcap: {\n\t\t\t\t\tvalue: null\n\t\t\t\t}\n\t\t\t}]),\n\t\t\tvertexShader: ShaderChunk.meshmatcap_vert,\n\t\t\tfragmentShader: ShaderChunk.meshmatcap_frag\n\t\t},\n\t\tpoints: {\n\t\t\tuniforms: mergeUniforms([UniformsLib.points, UniformsLib.fog]),\n\t\t\tvertexShader: ShaderChunk.points_vert,\n\t\t\tfragmentShader: ShaderChunk.points_frag\n\t\t},\n\t\tdashed: {\n\t\t\tuniforms: mergeUniforms([UniformsLib.common, UniformsLib.fog, {\n\t\t\t\tscale: {\n\t\t\t\t\tvalue: 1\n\t\t\t\t},\n\t\t\t\tdashSize: {\n\t\t\t\t\tvalue: 1\n\t\t\t\t},\n\t\t\t\ttotalSize: {\n\t\t\t\t\tvalue: 2\n\t\t\t\t}\n\t\t\t}]),\n\t\t\tvertexShader: ShaderChunk.linedashed_vert,\n\t\t\tfragmentShader: ShaderChunk.linedashed_frag\n\t\t},\n\t\tdepth: {\n\t\t\tuniforms: mergeUniforms([UniformsLib.common, UniformsLib.displacementmap]),\n\t\t\tvertexShader: ShaderChunk.depth_vert,\n\t\t\tfragmentShader: ShaderChunk.depth_frag\n\t\t},\n\t\tnormal: {\n\t\t\tuniforms: mergeUniforms([UniformsLib.common, UniformsLib.bumpmap, UniformsLib.normalmap, UniformsLib.displacementmap, {\n\t\t\t\topacity: {\n\t\t\t\t\tvalue: 1.0\n\t\t\t\t}\n\t\t\t}]),\n\t\t\tvertexShader: ShaderChunk.meshnormal_vert,\n\t\t\tfragmentShader: ShaderChunk.meshnormal_frag\n\t\t},\n\t\tsprite: {\n\t\t\tuniforms: mergeUniforms([UniformsLib.sprite, UniformsLib.fog]),\n\t\t\tvertexShader: ShaderChunk.sprite_vert,\n\t\t\tfragmentShader: ShaderChunk.sprite_frag\n\t\t},\n\t\tbackground: {\n\t\t\tuniforms: {\n\t\t\t\tuvTransform: {\n\t\t\t\t\tvalue: new Matrix3()\n\t\t\t\t},\n\t\t\t\tt2D: {\n\t\t\t\t\tvalue: null\n\t\t\t\t}\n\t\t\t},\n\t\t\tvertexShader: ShaderChunk.background_vert,\n\t\t\tfragmentShader: ShaderChunk.background_frag\n\t\t},\n\n\t\t/* -------------------------------------------------------------------------\n\t\t//\tCube map shader\n\t\t ------------------------------------------------------------------------- */\n\t\tcube: {\n\t\t\tuniforms: mergeUniforms([UniformsLib.envmap, {\n\t\t\t\topacity: {\n\t\t\t\t\tvalue: 1.0\n\t\t\t\t}\n\t\t\t}]),\n\t\t\tvertexShader: ShaderChunk.cube_vert,\n\t\t\tfragmentShader: ShaderChunk.cube_frag\n\t\t},\n\t\tequirect: {\n\t\t\tuniforms: {\n\t\t\t\ttEquirect: {\n\t\t\t\t\tvalue: null\n\t\t\t\t}\n\t\t\t},\n\t\t\tvertexShader: ShaderChunk.equirect_vert,\n\t\t\tfragmentShader: ShaderChunk.equirect_frag\n\t\t},\n\t\tdistanceRGBA: {\n\t\t\tuniforms: mergeUniforms([UniformsLib.common, UniformsLib.displacementmap, {\n\t\t\t\treferencePosition: {\n\t\t\t\t\tvalue: new Vector3()\n\t\t\t\t},\n\t\t\t\tnearDistance: {\n\t\t\t\t\tvalue: 1\n\t\t\t\t},\n\t\t\t\tfarDistance: {\n\t\t\t\t\tvalue: 1000\n\t\t\t\t}\n\t\t\t}]),\n\t\t\tvertexShader: ShaderChunk.distanceRGBA_vert,\n\t\t\tfragmentShader: ShaderChunk.distanceRGBA_frag\n\t\t},\n\t\tshadow: {\n\t\t\tuniforms: mergeUniforms([UniformsLib.lights, UniformsLib.fog, {\n\t\t\t\tcolor: {\n\t\t\t\t\tvalue: new Color(0x00000)\n\t\t\t\t},\n\t\t\t\topacity: {\n\t\t\t\t\tvalue: 1.0\n\t\t\t\t}\n\t\t\t}]),\n\t\t\tvertexShader: ShaderChunk.shadow_vert,\n\t\t\tfragmentShader: ShaderChunk.shadow_frag\n\t\t}\n\t};\n\tShaderLib.physical = {\n\t\tuniforms: mergeUniforms([ShaderLib.standard.uniforms, {\n\t\t\tclearcoat: {\n\t\t\t\tvalue: 0\n\t\t\t},\n\t\t\tclearcoatMap: {\n\t\t\t\tvalue: null\n\t\t\t},\n\t\t\tclearcoatRoughness: {\n\t\t\t\tvalue: 0\n\t\t\t},\n\t\t\tclearcoatRoughnessMap: {\n\t\t\t\tvalue: null\n\t\t\t},\n\t\t\tclearcoatNormalScale: {\n\t\t\t\tvalue: new Vector2(1, 1)\n\t\t\t},\n\t\t\tclearcoatNormalMap: {\n\t\t\t\tvalue: null\n\t\t\t},\n\t\t\tsheen: {\n\t\t\t\tvalue: 0\n\t\t\t},\n\t\t\tsheenColor: {\n\t\t\t\tvalue: new Color(0x000000)\n\t\t\t},\n\t\t\tsheenColorMap: {\n\t\t\t\tvalue: null\n\t\t\t},\n\t\t\tsheenRoughness: {\n\t\t\t\tvalue: 0\n\t\t\t},\n\t\t\tsheenRoughnessMap: {\n\t\t\t\tvalue: null\n\t\t\t},\n\t\t\ttransmission: {\n\t\t\t\tvalue: 0\n\t\t\t},\n\t\t\ttransmissionMap: {\n\t\t\t\tvalue: null\n\t\t\t},\n\t\t\ttransmissionSamplerSize: {\n\t\t\t\tvalue: new Vector2()\n\t\t\t},\n\t\t\ttransmissionSamplerMap: {\n\t\t\t\tvalue: null\n\t\t\t},\n\t\t\tthickness: {\n\t\t\t\tvalue: 0\n\t\t\t},\n\t\t\tthicknessMap: {\n\t\t\t\tvalue: null\n\t\t\t},\n\t\t\tattenuationDistance: {\n\t\t\t\tvalue: 0\n\t\t\t},\n\t\t\tattenuationColor: {\n\t\t\t\tvalue: new Color(0x000000)\n\t\t\t},\n\t\t\tspecularIntensity: {\n\t\t\t\tvalue: 0\n\t\t\t},\n\t\t\tspecularIntensityMap: {\n\t\t\t\tvalue: null\n\t\t\t},\n\t\t\tspecularColor: {\n\t\t\t\tvalue: new Color(1, 1, 1)\n\t\t\t},\n\t\t\tspecularColorMap: {\n\t\t\t\tvalue: null\n\t\t\t}\n\t\t}]),\n\t\tvertexShader: ShaderChunk.meshphysical_vert,\n\t\tfragmentShader: ShaderChunk.meshphysical_frag\n\t};\n\n\tfunction WebGLBackground(renderer, cubemaps, state, objects, premultipliedAlpha) {\n\t\tconst clearColor = new Color(0x000000);\n\t\tlet clearAlpha = 0;\n\t\tlet planeMesh;\n\t\tlet boxMesh;\n\t\tlet currentBackground = null;\n\t\tlet currentBackgroundVersion = 0;\n\t\tlet currentTonemapping = null;\n\n\t\tfunction render(renderList, scene) {\n\t\t\tlet forceClear = false;\n\t\t\tlet background = scene.isScene === true ? scene.background : null;\n\n\t\t\tif (background && background.isTexture) {\n\t\t\t\tbackground = cubemaps.get(background);\n\t\t\t} // Ignore background in AR\n\t\t\t// TODO: Reconsider this.\n\n\n\t\t\tconst xr = renderer.xr;\n\t\t\tconst session = xr.getSession && xr.getSession();\n\n\t\t\tif (session && session.environmentBlendMode === 'additive') {\n\t\t\t\tbackground = null;\n\t\t\t}\n\n\t\t\tif (background === null) {\n\t\t\t\tsetClear(clearColor, clearAlpha);\n\t\t\t} else if (background && background.isColor) {\n\t\t\t\tsetClear(background, 1);\n\t\t\t\tforceClear = true;\n\t\t\t}\n\n\t\t\tif (renderer.autoClear || forceClear) {\n\t\t\t\trenderer.clear(renderer.autoClearColor, renderer.autoClearDepth, renderer.autoClearStencil);\n\t\t\t}\n\n\t\t\tif (background && (background.isCubeTexture || background.mapping === CubeUVReflectionMapping)) {\n\t\t\t\tif (boxMesh === undefined) {\n\t\t\t\t\tboxMesh = new Mesh(new BoxGeometry(1, 1, 1), new ShaderMaterial({\n\t\t\t\t\t\tname: 'BackgroundCubeMaterial',\n\t\t\t\t\t\tuniforms: cloneUniforms(ShaderLib.cube.uniforms),\n\t\t\t\t\t\tvertexShader: ShaderLib.cube.vertexShader,\n\t\t\t\t\t\tfragmentShader: ShaderLib.cube.fragmentShader,\n\t\t\t\t\t\tside: BackSide,\n\t\t\t\t\t\tdepthTest: false,\n\t\t\t\t\t\tdepthWrite: false,\n\t\t\t\t\t\tfog: false\n\t\t\t\t\t}));\n\t\t\t\t\tboxMesh.geometry.deleteAttribute('normal');\n\t\t\t\t\tboxMesh.geometry.deleteAttribute('uv');\n\n\t\t\t\t\tboxMesh.onBeforeRender = function (renderer, scene, camera) {\n\t\t\t\t\t\tthis.matrixWorld.copyPosition(camera.matrixWorld);\n\t\t\t\t\t}; // enable code injection for non-built-in material\n\n\n\t\t\t\t\tObject.defineProperty(boxMesh.material, 'envMap', {\n\t\t\t\t\t\tget: function () {\n\t\t\t\t\t\t\treturn this.uniforms.envMap.value;\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t\tobjects.update(boxMesh);\n\t\t\t\t}\n\n\t\t\t\tboxMesh.material.uniforms.envMap.value = background;\n\t\t\t\tboxMesh.material.uniforms.flipEnvMap.value = background.isCubeTexture && background.isRenderTargetTexture === false ? -1 : 1;\n\n\t\t\t\tif (currentBackground !== background || currentBackgroundVersion !== background.version || currentTonemapping !== renderer.toneMapping) {\n\t\t\t\t\tboxMesh.material.needsUpdate = true;\n\t\t\t\t\tcurrentBackground = background;\n\t\t\t\t\tcurrentBackgroundVersion = background.version;\n\t\t\t\t\tcurrentTonemapping = renderer.toneMapping;\n\t\t\t\t} // push to the pre-sorted opaque render list\n\n\n\t\t\t\trenderList.unshift(boxMesh, boxMesh.geometry, boxMesh.material, 0, 0, null);\n\t\t\t} else if (background && background.isTexture) {\n\t\t\t\tif (planeMesh === undefined) {\n\t\t\t\t\tplaneMesh = new Mesh(new PlaneGeometry(2, 2), new ShaderMaterial({\n\t\t\t\t\t\tname: 'BackgroundMaterial',\n\t\t\t\t\t\tuniforms: cloneUniforms(ShaderLib.background.uniforms),\n\t\t\t\t\t\tvertexShader: ShaderLib.background.vertexShader,\n\t\t\t\t\t\tfragmentShader: ShaderLib.background.fragmentShader,\n\t\t\t\t\t\tside: FrontSide,\n\t\t\t\t\t\tdepthTest: false,\n\t\t\t\t\t\tdepthWrite: false,\n\t\t\t\t\t\tfog: false\n\t\t\t\t\t}));\n\t\t\t\t\tplaneMesh.geometry.deleteAttribute('normal'); // enable code injection for non-built-in material\n\n\t\t\t\t\tObject.defineProperty(planeMesh.material, 'map', {\n\t\t\t\t\t\tget: function () {\n\t\t\t\t\t\t\treturn this.uniforms.t2D.value;\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t\tobjects.update(planeMesh);\n\t\t\t\t}\n\n\t\t\t\tplaneMesh.material.uniforms.t2D.value = background;\n\n\t\t\t\tif (background.matrixAutoUpdate === true) {\n\t\t\t\t\tbackground.updateMatrix();\n\t\t\t\t}\n\n\t\t\t\tplaneMesh.material.uniforms.uvTransform.value.copy(background.matrix);\n\n\t\t\t\tif (currentBackground !== background || currentBackgroundVersion !== background.version || currentTonemapping !== renderer.toneMapping) {\n\t\t\t\t\tplaneMesh.material.needsUpdate = true;\n\t\t\t\t\tcurrentBackground = background;\n\t\t\t\t\tcurrentBackgroundVersion = background.version;\n\t\t\t\t\tcurrentTonemapping = renderer.toneMapping;\n\t\t\t\t} // push to the pre-sorted opaque render list\n\n\n\t\t\t\trenderList.unshift(planeMesh, planeMesh.geometry, planeMesh.material, 0, 0, null);\n\t\t\t}\n\t\t}\n\n\t\tfunction setClear(color, alpha) {\n\t\t\tstate.buffers.color.setClear(color.r, color.g, color.b, alpha, premultipliedAlpha);\n\t\t}\n\n\t\treturn {\n\t\t\tgetClearColor: function () {\n\t\t\t\treturn clearColor;\n\t\t\t},\n\t\t\tsetClearColor: function (color, alpha = 1) {\n\t\t\t\tclearColor.set(color);\n\t\t\t\tclearAlpha = alpha;\n\t\t\t\tsetClear(clearColor, clearAlpha);\n\t\t\t},\n\t\t\tgetClearAlpha: function () {\n\t\t\t\treturn clearAlpha;\n\t\t\t},\n\t\t\tsetClearAlpha: function (alpha) {\n\t\t\t\tclearAlpha = alpha;\n\t\t\t\tsetClear(clearColor, clearAlpha);\n\t\t\t},\n\t\t\trender: render\n\t\t};\n\t}\n\n\tfunction WebGLBindingStates(gl, extensions, attributes, capabilities) {\n\t\tconst maxVertexAttributes = gl.getParameter(gl.MAX_VERTEX_ATTRIBS);\n\t\tconst extension = capabilities.isWebGL2 ? null : extensions.get('OES_vertex_array_object');\n\t\tconst vaoAvailable = capabilities.isWebGL2 || extension !== null;\n\t\tconst bindingStates = {};\n\t\tconst defaultState = createBindingState(null);\n\t\tlet currentState = defaultState;\n\n\t\tfunction setup(object, material, program, geometry, index) {\n\t\t\tlet updateBuffers = false;\n\n\t\t\tif (vaoAvailable) {\n\t\t\t\tconst state = getBindingState(geometry, program, material);\n\n\t\t\t\tif (currentState !== state) {\n\t\t\t\t\tcurrentState = state;\n\t\t\t\t\tbindVertexArrayObject(currentState.object);\n\t\t\t\t}\n\n\t\t\t\tupdateBuffers = needsUpdate(geometry, index);\n\t\t\t\tif (updateBuffers) saveCache(geometry, index);\n\t\t\t} else {\n\t\t\t\tconst wireframe = material.wireframe === true;\n\n\t\t\t\tif (currentState.geometry !== geometry.id || currentState.program !== program.id || currentState.wireframe !== wireframe) {\n\t\t\t\t\tcurrentState.geometry = geometry.id;\n\t\t\t\t\tcurrentState.program = program.id;\n\t\t\t\t\tcurrentState.wireframe = wireframe;\n\t\t\t\t\tupdateBuffers = true;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (object.isInstancedMesh === true) {\n\t\t\t\tupdateBuffers = true;\n\t\t\t}\n\n\t\t\tif (index !== null) {\n\t\t\t\tattributes.update(index, gl.ELEMENT_ARRAY_BUFFER);\n\t\t\t}\n\n\t\t\tif (updateBuffers) {\n\t\t\t\tsetupVertexAttributes(object, material, program, geometry);\n\n\t\t\t\tif (index !== null) {\n\t\t\t\t\tgl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, attributes.get(index).buffer);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tfunction createVertexArrayObject() {\n\t\t\tif (capabilities.isWebGL2) return gl.createVertexArray();\n\t\t\treturn extension.createVertexArrayOES();\n\t\t}\n\n\t\tfunction bindVertexArrayObject(vao) {\n\t\t\tif (capabilities.isWebGL2) return gl.bindVertexArray(vao);\n\t\t\treturn extension.bindVertexArrayOES(vao);\n\t\t}\n\n\t\tfunction deleteVertexArrayObject(vao) {\n\t\t\tif (capabilities.isWebGL2) return gl.deleteVertexArray(vao);\n\t\t\treturn extension.deleteVertexArrayOES(vao);\n\t\t}\n\n\t\tfunction getBindingState(geometry, program, material) {\n\t\t\tconst wireframe = material.wireframe === true;\n\t\t\tlet programMap = bindingStates[geometry.id];\n\n\t\t\tif (programMap === undefined) {\n\t\t\t\tprogramMap = {};\n\t\t\t\tbindingStates[geometry.id] = programMap;\n\t\t\t}\n\n\t\t\tlet stateMap = programMap[program.id];\n\n\t\t\tif (stateMap === undefined) {\n\t\t\t\tstateMap = {};\n\t\t\t\tprogramMap[program.id] = stateMap;\n\t\t\t}\n\n\t\t\tlet state = stateMap[wireframe];\n\n\t\t\tif (state === undefined) {\n\t\t\t\tstate = createBindingState(createVertexArrayObject());\n\t\t\t\tstateMap[wireframe] = state;\n\t\t\t}\n\n\t\t\treturn state;\n\t\t}\n\n\t\tfunction createBindingState(vao) {\n\t\t\tconst newAttributes = [];\n\t\t\tconst enabledAttributes = [];\n\t\t\tconst attributeDivisors = [];\n\n\t\t\tfor (let i = 0; i < maxVertexAttributes; i++) {\n\t\t\t\tnewAttributes[i] = 0;\n\t\t\t\tenabledAttributes[i] = 0;\n\t\t\t\tattributeDivisors[i] = 0;\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\t// for backward compatibility on non-VAO support browser\n\t\t\t\tgeometry: null,\n\t\t\t\tprogram: null,\n\t\t\t\twireframe: false,\n\t\t\t\tnewAttributes: newAttributes,\n\t\t\t\tenabledAttributes: enabledAttributes,\n\t\t\t\tattributeDivisors: attributeDivisors,\n\t\t\t\tobject: vao,\n\t\t\t\tattributes: {},\n\t\t\t\tindex: null\n\t\t\t};\n\t\t}\n\n\t\tfunction needsUpdate(geometry, index) {\n\t\t\tconst cachedAttributes = currentState.attributes;\n\t\t\tconst geometryAttributes = geometry.attributes;\n\t\t\tlet attributesNum = 0;\n\n\t\t\tfor (const key in geometryAttributes) {\n\t\t\t\tconst cachedAttribute = cachedAttributes[key];\n\t\t\t\tconst geometryAttribute = geometryAttributes[key];\n\t\t\t\tif (cachedAttribute === undefined) return true;\n\t\t\t\tif (cachedAttribute.attribute !== geometryAttribute) return true;\n\t\t\t\tif (cachedAttribute.data !== geometryAttribute.data) return true;\n\t\t\t\tattributesNum++;\n\t\t\t}\n\n\t\t\tif (currentState.attributesNum !== attributesNum) return true;\n\t\t\tif (currentState.index !== index) return true;\n\t\t\treturn false;\n\t\t}\n\n\t\tfunction saveCache(geometry, index) {\n\t\t\tconst cache = {};\n\t\t\tconst attributes = geometry.attributes;\n\t\t\tlet attributesNum = 0;\n\n\t\t\tfor (const key in attributes) {\n\t\t\t\tconst attribute = attributes[key];\n\t\t\t\tconst data = {};\n\t\t\t\tdata.attribute = attribute;\n\n\t\t\t\tif (attribute.data) {\n\t\t\t\t\tdata.data = attribute.data;\n\t\t\t\t}\n\n\t\t\t\tcache[key] = data;\n\t\t\t\tattributesNum++;\n\t\t\t}\n\n\t\t\tcurrentState.attributes = cache;\n\t\t\tcurrentState.attributesNum = attributesNum;\n\t\t\tcurrentState.index = index;\n\t\t}\n\n\t\tfunction initAttributes() {\n\t\t\tconst newAttributes = currentState.newAttributes;\n\n\t\t\tfor (let i = 0, il = newAttributes.length; i < il; i++) {\n\t\t\t\tnewAttributes[i] = 0;\n\t\t\t}\n\t\t}\n\n\t\tfunction enableAttribute(attribute) {\n\t\t\tenableAttributeAndDivisor(attribute, 0);\n\t\t}\n\n\t\tfunction enableAttributeAndDivisor(attribute, meshPerAttribute) {\n\t\t\tconst newAttributes = currentState.newAttributes;\n\t\t\tconst enabledAttributes = currentState.enabledAttributes;\n\t\t\tconst attributeDivisors = currentState.attributeDivisors;\n\t\t\tnewAttributes[attribute] = 1;\n\n\t\t\tif (enabledAttributes[attribute] === 0) {\n\t\t\t\tgl.enableVertexAttribArray(attribute);\n\t\t\t\tenabledAttributes[attribute] = 1;\n\t\t\t}\n\n\t\t\tif (attributeDivisors[attribute] !== meshPerAttribute) {\n\t\t\t\tconst extension = capabilities.isWebGL2 ? gl : extensions.get('ANGLE_instanced_arrays');\n\t\t\t\textension[capabilities.isWebGL2 ? 'vertexAttribDivisor' : 'vertexAttribDivisorANGLE'](attribute, meshPerAttribute);\n\t\t\t\tattributeDivisors[attribute] = meshPerAttribute;\n\t\t\t}\n\t\t}\n\n\t\tfunction disableUnusedAttributes() {\n\t\t\tconst newAttributes = currentState.newAttributes;\n\t\t\tconst enabledAttributes = currentState.enabledAttributes;\n\n\t\t\tfor (let i = 0, il = enabledAttributes.length; i < il; i++) {\n\t\t\t\tif (enabledAttributes[i] !== newAttributes[i]) {\n\t\t\t\t\tgl.disableVertexAttribArray(i);\n\t\t\t\t\tenabledAttributes[i] = 0;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tfunction vertexAttribPointer(index, size, type, normalized, stride, offset) {\n\t\t\tif (capabilities.isWebGL2 === true && (type === gl.INT || type === gl.UNSIGNED_INT)) {\n\t\t\t\tgl.vertexAttribIPointer(index, size, type, stride, offset);\n\t\t\t} else {\n\t\t\t\tgl.vertexAttribPointer(index, size, type, normalized, stride, offset);\n\t\t\t}\n\t\t}\n\n\t\tfunction setupVertexAttributes(object, material, program, geometry) {\n\t\t\tif (capabilities.isWebGL2 === false && (object.isInstancedMesh || geometry.isInstancedBufferGeometry)) {\n\t\t\t\tif (extensions.get('ANGLE_instanced_arrays') === null) return;\n\t\t\t}\n\n\t\t\tinitAttributes();\n\t\t\tconst geometryAttributes = geometry.attributes;\n\t\t\tconst programAttributes = program.getAttributes();\n\t\t\tconst materialDefaultAttributeValues = material.defaultAttributeValues;\n\n\t\t\tfor (const name in programAttributes) {\n\t\t\t\tconst programAttribute = programAttributes[name];\n\n\t\t\t\tif (programAttribute.location >= 0) {\n\t\t\t\t\tlet geometryAttribute = geometryAttributes[name];\n\n\t\t\t\t\tif (geometryAttribute === undefined) {\n\t\t\t\t\t\tif (name === 'instanceMatrix' && object.instanceMatrix) geometryAttribute = object.instanceMatrix;\n\t\t\t\t\t\tif (name === 'instanceColor' && object.instanceColor) geometryAttribute = object.instanceColor;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (geometryAttribute !== undefined) {\n\t\t\t\t\t\tconst normalized = geometryAttribute.normalized;\n\t\t\t\t\t\tconst size = geometryAttribute.itemSize;\n\t\t\t\t\t\tconst attribute = attributes.get(geometryAttribute); // TODO Attribute may not be available on context restore\n\n\t\t\t\t\t\tif (attribute === undefined) continue;\n\t\t\t\t\t\tconst buffer = attribute.buffer;\n\t\t\t\t\t\tconst type = attribute.type;\n\t\t\t\t\t\tconst bytesPerElement = attribute.bytesPerElement;\n\n\t\t\t\t\t\tif (geometryAttribute.isInterleavedBufferAttribute) {\n\t\t\t\t\t\t\tconst data = geometryAttribute.data;\n\t\t\t\t\t\t\tconst stride = data.stride;\n\t\t\t\t\t\t\tconst offset = geometryAttribute.offset;\n\n\t\t\t\t\t\t\tif (data && data.isInstancedInterleavedBuffer) {\n\t\t\t\t\t\t\t\tfor (let i = 0; i < programAttribute.locationSize; i++) {\n\t\t\t\t\t\t\t\t\tenableAttributeAndDivisor(programAttribute.location + i, data.meshPerAttribute);\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tif (object.isInstancedMesh !== true && geometry._maxInstanceCount === undefined) {\n\t\t\t\t\t\t\t\t\tgeometry._maxInstanceCount = data.meshPerAttribute * data.count;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tfor (let i = 0; i < programAttribute.locationSize; i++) {\n\t\t\t\t\t\t\t\t\tenableAttribute(programAttribute.location + i);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tgl.bindBuffer(gl.ARRAY_BUFFER, buffer);\n\n\t\t\t\t\t\t\tfor (let i = 0; i < programAttribute.locationSize; i++) {\n\t\t\t\t\t\t\t\tvertexAttribPointer(programAttribute.location + i, size / programAttribute.locationSize, type, normalized, stride * bytesPerElement, (offset + size / programAttribute.locationSize * i) * bytesPerElement);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tif (geometryAttribute.isInstancedBufferAttribute) {\n\t\t\t\t\t\t\t\tfor (let i = 0; i < programAttribute.locationSize; i++) {\n\t\t\t\t\t\t\t\t\tenableAttributeAndDivisor(programAttribute.location + i, geometryAttribute.meshPerAttribute);\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tif (object.isInstancedMesh !== true && geometry._maxInstanceCount === undefined) {\n\t\t\t\t\t\t\t\t\tgeometry._maxInstanceCount = geometryAttribute.meshPerAttribute * geometryAttribute.count;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tfor (let i = 0; i < programAttribute.locationSize; i++) {\n\t\t\t\t\t\t\t\t\tenableAttribute(programAttribute.location + i);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tgl.bindBuffer(gl.ARRAY_BUFFER, buffer);\n\n\t\t\t\t\t\t\tfor (let i = 0; i < programAttribute.locationSize; i++) {\n\t\t\t\t\t\t\t\tvertexAttribPointer(programAttribute.location + i, size / programAttribute.locationSize, type, normalized, size * bytesPerElement, size / programAttribute.locationSize * i * bytesPerElement);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t} else if (materialDefaultAttributeValues !== undefined) {\n\t\t\t\t\t\tconst value = materialDefaultAttributeValues[name];\n\n\t\t\t\t\t\tif (value !== undefined) {\n\t\t\t\t\t\t\tswitch (value.length) {\n\t\t\t\t\t\t\t\tcase 2:\n\t\t\t\t\t\t\t\t\tgl.vertexAttrib2fv(programAttribute.location, value);\n\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\tcase 3:\n\t\t\t\t\t\t\t\t\tgl.vertexAttrib3fv(programAttribute.location, value);\n\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\tcase 4:\n\t\t\t\t\t\t\t\t\tgl.vertexAttrib4fv(programAttribute.location, value);\n\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\t\tgl.vertexAttrib1fv(programAttribute.location, value);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tdisableUnusedAttributes();\n\t\t}\n\n\t\tfunction dispose() {\n\t\t\treset();\n\n\t\t\tfor (const geometryId in bindingStates) {\n\t\t\t\tconst programMap = bindingStates[geometryId];\n\n\t\t\t\tfor (const programId in programMap) {\n\t\t\t\t\tconst stateMap = programMap[programId];\n\n\t\t\t\t\tfor (const wireframe in stateMap) {\n\t\t\t\t\t\tdeleteVertexArrayObject(stateMap[wireframe].object);\n\t\t\t\t\t\tdelete stateMap[wireframe];\n\t\t\t\t\t}\n\n\t\t\t\t\tdelete programMap[programId];\n\t\t\t\t}\n\n\t\t\t\tdelete bindingStates[geometryId];\n\t\t\t}\n\t\t}\n\n\t\tfunction releaseStatesOfGeometry(geometry) {\n\t\t\tif (bindingStates[geometry.id] === undefined) return;\n\t\t\tconst programMap = bindingStates[geometry.id];\n\n\t\t\tfor (const programId in programMap) {\n\t\t\t\tconst stateMap = programMap[programId];\n\n\t\t\t\tfor (const wireframe in stateMap) {\n\t\t\t\t\tdeleteVertexArrayObject(stateMap[wireframe].object);\n\t\t\t\t\tdelete stateMap[wireframe];\n\t\t\t\t}\n\n\t\t\t\tdelete programMap[programId];\n\t\t\t}\n\n\t\t\tdelete bindingStates[geometry.id];\n\t\t}\n\n\t\tfunction releaseStatesOfProgram(program) {\n\t\t\tfor (const geometryId in bindingStates) {\n\t\t\t\tconst programMap = bindingStates[geometryId];\n\t\t\t\tif (programMap[program.id] === undefined) continue;\n\t\t\t\tconst stateMap = programMap[program.id];\n\n\t\t\t\tfor (const wireframe in stateMap) {\n\t\t\t\t\tdeleteVertexArrayObject(stateMap[wireframe].object);\n\t\t\t\t\tdelete stateMap[wireframe];\n\t\t\t\t}\n\n\t\t\t\tdelete programMap[program.id];\n\t\t\t}\n\t\t}\n\n\t\tfunction reset() {\n\t\t\tresetDefaultState();\n\t\t\tif (currentState === defaultState) return;\n\t\t\tcurrentState = defaultState;\n\t\t\tbindVertexArrayObject(currentState.object);\n\t\t} // for backward-compatilibity\n\n\n\t\tfunction resetDefaultState() {\n\t\t\tdefaultState.geometry = null;\n\t\t\tdefaultState.program = null;\n\t\t\tdefaultState.wireframe = false;\n\t\t}\n\n\t\treturn {\n\t\t\tsetup: setup,\n\t\t\treset: reset,\n\t\t\tresetDefaultState: resetDefaultState,\n\t\t\tdispose: dispose,\n\t\t\treleaseStatesOfGeometry: releaseStatesOfGeometry,\n\t\t\treleaseStatesOfProgram: releaseStatesOfProgram,\n\t\t\tinitAttributes: initAttributes,\n\t\t\tenableAttribute: enableAttribute,\n\t\t\tdisableUnusedAttributes: disableUnusedAttributes\n\t\t};\n\t}\n\n\tfunction WebGLBufferRenderer(gl, extensions, info, capabilities) {\n\t\tconst isWebGL2 = capabilities.isWebGL2;\n\t\tlet mode;\n\n\t\tfunction setMode(value) {\n\t\t\tmode = value;\n\t\t}\n\n\t\tfunction render(start, count) {\n\t\t\tgl.drawArrays(mode, start, count);\n\t\t\tinfo.update(count, mode, 1);\n\t\t}\n\n\t\tfunction renderInstances(start, count, primcount) {\n\t\t\tif (primcount === 0) return;\n\t\t\tlet extension, methodName;\n\n\t\t\tif (isWebGL2) {\n\t\t\t\textension = gl;\n\t\t\t\tmethodName = 'drawArraysInstanced';\n\t\t\t} else {\n\t\t\t\textension = extensions.get('ANGLE_instanced_arrays');\n\t\t\t\tmethodName = 'drawArraysInstancedANGLE';\n\n\t\t\t\tif (extension === null) {\n\t\t\t\t\tconsole.error('THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.');\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\textension[methodName](mode, start, count, primcount);\n\t\t\tinfo.update(count, mode, primcount);\n\t\t} //\n\n\n\t\tthis.setMode = setMode;\n\t\tthis.render = render;\n\t\tthis.renderInstances = renderInstances;\n\t}\n\n\tfunction WebGLCapabilities(gl, extensions, parameters) {\n\t\tlet maxAnisotropy;\n\n\t\tfunction getMaxAnisotropy() {\n\t\t\tif (maxAnisotropy !== undefined) return maxAnisotropy;\n\n\t\t\tif (extensions.has('EXT_texture_filter_anisotropic') === true) {\n\t\t\t\tconst extension = extensions.get('EXT_texture_filter_anisotropic');\n\t\t\t\tmaxAnisotropy = gl.getParameter(extension.MAX_TEXTURE_MAX_ANISOTROPY_EXT);\n\t\t\t} else {\n\t\t\t\tmaxAnisotropy = 0;\n\t\t\t}\n\n\t\t\treturn maxAnisotropy;\n\t\t}\n\n\t\tfunction getMaxPrecision(precision) {\n\t\t\tif (precision === 'highp') {\n\t\t\t\tif (gl.getShaderPrecisionFormat(gl.VERTEX_SHADER, gl.HIGH_FLOAT).precision > 0 && gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER, gl.HIGH_FLOAT).precision > 0) {\n\t\t\t\t\treturn 'highp';\n\t\t\t\t}\n\n\t\t\t\tprecision = 'mediump';\n\t\t\t}\n\n\t\t\tif (precision === 'mediump') {\n\t\t\t\tif (gl.getShaderPrecisionFormat(gl.VERTEX_SHADER, gl.MEDIUM_FLOAT).precision > 0 && gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER, gl.MEDIUM_FLOAT).precision > 0) {\n\t\t\t\t\treturn 'mediump';\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn 'lowp';\n\t\t}\n\t\t/* eslint-disable no-undef */\n\n\n\t\tconst isWebGL2 = typeof WebGL2RenderingContext !== 'undefined' && gl instanceof WebGL2RenderingContext || typeof WebGL2ComputeRenderingContext !== 'undefined' && gl instanceof WebGL2ComputeRenderingContext;\n\t\t/* eslint-enable no-undef */\n\n\t\tlet precision = parameters.precision !== undefined ? parameters.precision : 'highp';\n\t\tconst maxPrecision = getMaxPrecision(precision);\n\n\t\tif (maxPrecision !== precision) {\n\t\t\tconsole.warn('THREE.WebGLRenderer:', precision, 'not supported, using', maxPrecision, 'instead.');\n\t\t\tprecision = maxPrecision;\n\t\t}\n\n\t\tconst drawBuffers = isWebGL2 || extensions.has('WEBGL_draw_buffers');\n\t\tconst logarithmicDepthBuffer = parameters.logarithmicDepthBuffer === true;\n\t\tconst maxTextures = gl.getParameter(gl.MAX_TEXTURE_IMAGE_UNITS);\n\t\tconst maxVertexTextures = gl.getParameter(gl.MAX_VERTEX_TEXTURE_IMAGE_UNITS);\n\t\tconst maxTextureSize = gl.getParameter(gl.MAX_TEXTURE_SIZE);\n\t\tconst maxCubemapSize = gl.getParameter(gl.MAX_CUBE_MAP_TEXTURE_SIZE);\n\t\tconst maxAttributes = gl.getParameter(gl.MAX_VERTEX_ATTRIBS);\n\t\tconst maxVertexUniforms = gl.getParameter(gl.MAX_VERTEX_UNIFORM_VECTORS);\n\t\tconst maxVaryings = gl.getParameter(gl.MAX_VARYING_VECTORS);\n\t\tconst maxFragmentUniforms = gl.getParameter(gl.MAX_FRAGMENT_UNIFORM_VECTORS);\n\t\tconst vertexTextures = maxVertexTextures > 0;\n\t\tconst floatFragmentTextures = isWebGL2 || extensions.has('OES_texture_float');\n\t\tconst floatVertexTextures = vertexTextures && floatFragmentTextures;\n\t\tconst maxSamples = isWebGL2 ? gl.getParameter(gl.MAX_SAMPLES) : 0;\n\t\treturn {\n\t\t\tisWebGL2: isWebGL2,\n\t\t\tdrawBuffers: drawBuffers,\n\t\t\tgetMaxAnisotropy: getMaxAnisotropy,\n\t\t\tgetMaxPrecision: getMaxPrecision,\n\t\t\tprecision: precision,\n\t\t\tlogarithmicDepthBuffer: logarithmicDepthBuffer,\n\t\t\tmaxTextures: maxTextures,\n\t\t\tmaxVertexTextures: maxVertexTextures,\n\t\t\tmaxTextureSize: maxTextureSize,\n\t\t\tmaxCubemapSize: maxCubemapSize,\n\t\t\tmaxAttributes: maxAttributes,\n\t\t\tmaxVertexUniforms: maxVertexUniforms,\n\t\t\tmaxVaryings: maxVaryings,\n\t\t\tmaxFragmentUniforms: maxFragmentUniforms,\n\t\t\tvertexTextures: vertexTextures,\n\t\t\tfloatFragmentTextures: floatFragmentTextures,\n\t\t\tfloatVertexTextures: floatVertexTextures,\n\t\t\tmaxSamples: maxSamples\n\t\t};\n\t}\n\n\tfunction WebGLClipping(properties) {\n\t\tconst scope = this;\n\t\tlet globalState = null,\n\t\t\t\tnumGlobalPlanes = 0,\n\t\t\t\tlocalClippingEnabled = false,\n\t\t\t\trenderingShadows = false;\n\t\tconst plane = new Plane(),\n\t\t\t\t\tviewNormalMatrix = new Matrix3(),\n\t\t\t\t\tuniform = {\n\t\t\tvalue: null,\n\t\t\tneedsUpdate: false\n\t\t};\n\t\tthis.uniform = uniform;\n\t\tthis.numPlanes = 0;\n\t\tthis.numIntersection = 0;\n\n\t\tthis.init = function (planes, enableLocalClipping, camera) {\n\t\t\tconst enabled = planes.length !== 0 || enableLocalClipping || // enable state of previous frame - the clipping code has to\n\t\t\t// run another frame in order to reset the state:\n\t\t\tnumGlobalPlanes !== 0 || localClippingEnabled;\n\t\t\tlocalClippingEnabled = enableLocalClipping;\n\t\t\tglobalState = projectPlanes(planes, camera, 0);\n\t\t\tnumGlobalPlanes = planes.length;\n\t\t\treturn enabled;\n\t\t};\n\n\t\tthis.beginShadows = function () {\n\t\t\trenderingShadows = true;\n\t\t\tprojectPlanes(null);\n\t\t};\n\n\t\tthis.endShadows = function () {\n\t\t\trenderingShadows = false;\n\t\t\tresetGlobalState();\n\t\t};\n\n\t\tthis.setState = function (material, camera, useCache) {\n\t\t\tconst planes = material.clippingPlanes,\n\t\t\t\t\t\tclipIntersection = material.clipIntersection,\n\t\t\t\t\t\tclipShadows = material.clipShadows;\n\t\t\tconst materialProperties = properties.get(material);\n\n\t\t\tif (!localClippingEnabled || planes === null || planes.length === 0 || renderingShadows && !clipShadows) {\n\t\t\t\t// there's no local clipping\n\t\t\t\tif (renderingShadows) {\n\t\t\t\t\t// there's no global clipping\n\t\t\t\t\tprojectPlanes(null);\n\t\t\t\t} else {\n\t\t\t\t\tresetGlobalState();\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tconst nGlobal = renderingShadows ? 0 : numGlobalPlanes,\n\t\t\t\t\t\t\tlGlobal = nGlobal * 4;\n\t\t\t\tlet dstArray = materialProperties.clippingState || null;\n\t\t\t\tuniform.value = dstArray; // ensure unique state\n\n\t\t\t\tdstArray = projectPlanes(planes, camera, lGlobal, useCache);\n\n\t\t\t\tfor (let i = 0; i !== lGlobal; ++i) {\n\t\t\t\t\tdstArray[i] = globalState[i];\n\t\t\t\t}\n\n\t\t\t\tmaterialProperties.clippingState = dstArray;\n\t\t\t\tthis.numIntersection = clipIntersection ? this.numPlanes : 0;\n\t\t\t\tthis.numPlanes += nGlobal;\n\t\t\t}\n\t\t};\n\n\t\tfunction resetGlobalState() {\n\t\t\tif (uniform.value !== globalState) {\n\t\t\t\tuniform.value = globalState;\n\t\t\t\tuniform.needsUpdate = numGlobalPlanes > 0;\n\t\t\t}\n\n\t\t\tscope.numPlanes = numGlobalPlanes;\n\t\t\tscope.numIntersection = 0;\n\t\t}\n\n\t\tfunction projectPlanes(planes, camera, dstOffset, skipTransform) {\n\t\t\tconst nPlanes = planes !== null ? planes.length : 0;\n\t\t\tlet dstArray = null;\n\n\t\t\tif (nPlanes !== 0) {\n\t\t\t\tdstArray = uniform.value;\n\n\t\t\t\tif (skipTransform !== true || dstArray === null) {\n\t\t\t\t\tconst flatSize = dstOffset + nPlanes * 4,\n\t\t\t\t\t\t\t\tviewMatrix = camera.matrixWorldInverse;\n\t\t\t\t\tviewNormalMatrix.getNormalMatrix(viewMatrix);\n\n\t\t\t\t\tif (dstArray === null || dstArray.length < flatSize) {\n\t\t\t\t\t\tdstArray = new Float32Array(flatSize);\n\t\t\t\t\t}\n\n\t\t\t\t\tfor (let i = 0, i4 = dstOffset; i !== nPlanes; ++i, i4 += 4) {\n\t\t\t\t\t\tplane.copy(planes[i]).applyMatrix4(viewMatrix, viewNormalMatrix);\n\t\t\t\t\t\tplane.normal.toArray(dstArray, i4);\n\t\t\t\t\t\tdstArray[i4 + 3] = plane.constant;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tuniform.value = dstArray;\n\t\t\t\tuniform.needsUpdate = true;\n\t\t\t}\n\n\t\t\tscope.numPlanes = nPlanes;\n\t\t\tscope.numIntersection = 0;\n\t\t\treturn dstArray;\n\t\t}\n\t}\n\n\tfunction WebGLCubeMaps(renderer) {\n\t\tlet cubemaps = new WeakMap();\n\n\t\tfunction mapTextureMapping(texture, mapping) {\n\t\t\tif (mapping === EquirectangularReflectionMapping) {\n\t\t\t\ttexture.mapping = CubeReflectionMapping;\n\t\t\t} else if (mapping === EquirectangularRefractionMapping) {\n\t\t\t\ttexture.mapping = CubeRefractionMapping;\n\t\t\t}\n\n\t\t\treturn texture;\n\t\t}\n\n\t\tfunction get(texture) {\n\t\t\tif (texture && texture.isTexture && texture.isRenderTargetTexture === false) {\n\t\t\t\tconst mapping = texture.mapping;\n\n\t\t\t\tif (mapping === EquirectangularReflectionMapping || mapping === EquirectangularRefractionMapping) {\n\t\t\t\t\tif (cubemaps.has(texture)) {\n\t\t\t\t\t\tconst cubemap = cubemaps.get(texture).texture;\n\t\t\t\t\t\treturn mapTextureMapping(cubemap, texture.mapping);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tconst image = texture.image;\n\n\t\t\t\t\t\tif (image && image.height > 0) {\n\t\t\t\t\t\t\tconst currentRenderTarget = renderer.getRenderTarget();\n\t\t\t\t\t\t\tconst renderTarget = new WebGLCubeRenderTarget(image.height / 2);\n\t\t\t\t\t\t\trenderTarget.fromEquirectangularTexture(renderer, texture);\n\t\t\t\t\t\t\tcubemaps.set(texture, renderTarget);\n\t\t\t\t\t\t\trenderer.setRenderTarget(currentRenderTarget);\n\t\t\t\t\t\t\ttexture.addEventListener('dispose', onTextureDispose);\n\t\t\t\t\t\t\treturn mapTextureMapping(renderTarget.texture, texture.mapping);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// image not yet ready. try the conversion next frame\n\t\t\t\t\t\t\treturn null;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn texture;\n\t\t}\n\n\t\tfunction onTextureDispose(event) {\n\t\t\tconst texture = event.target;\n\t\t\ttexture.removeEventListener('dispose', onTextureDispose);\n\t\t\tconst cubemap = cubemaps.get(texture);\n\n\t\t\tif (cubemap !== undefined) {\n\t\t\t\tcubemaps.delete(texture);\n\t\t\t\tcubemap.dispose();\n\t\t\t}\n\t\t}\n\n\t\tfunction dispose() {\n\t\t\tcubemaps = new WeakMap();\n\t\t}\n\n\t\treturn {\n\t\t\tget: get,\n\t\t\tdispose: dispose\n\t\t};\n\t}\n\n\tclass OrthographicCamera extends Camera {\n\t\tconstructor(left = -1, right = 1, top = 1, bottom = -1, near = 0.1, far = 2000) {\n\t\t\tsuper();\n\t\t\tthis.type = 'OrthographicCamera';\n\t\t\tthis.zoom = 1;\n\t\t\tthis.view = null;\n\t\t\tthis.left = left;\n\t\t\tthis.right = right;\n\t\t\tthis.top = top;\n\t\t\tthis.bottom = bottom;\n\t\t\tthis.near = near;\n\t\t\tthis.far = far;\n\t\t\tthis.updateProjectionMatrix();\n\t\t}\n\n\t\tcopy(source, recursive) {\n\t\t\tsuper.copy(source, recursive);\n\t\t\tthis.left = source.left;\n\t\t\tthis.right = source.right;\n\t\t\tthis.top = source.top;\n\t\t\tthis.bottom = source.bottom;\n\t\t\tthis.near = source.near;\n\t\t\tthis.far = source.far;\n\t\t\tthis.zoom = source.zoom;\n\t\t\tthis.view = source.view === null ? null : Object.assign({}, source.view);\n\t\t\treturn this;\n\t\t}\n\n\t\tsetViewOffset(fullWidth, fullHeight, x, y, width, height) {\n\t\t\tif (this.view === null) {\n\t\t\t\tthis.view = {\n\t\t\t\t\tenabled: true,\n\t\t\t\t\tfullWidth: 1,\n\t\t\t\t\tfullHeight: 1,\n\t\t\t\t\toffsetX: 0,\n\t\t\t\t\toffsetY: 0,\n\t\t\t\t\twidth: 1,\n\t\t\t\t\theight: 1\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tthis.view.enabled = true;\n\t\t\tthis.view.fullWidth = fullWidth;\n\t\t\tthis.view.fullHeight = fullHeight;\n\t\t\tthis.view.offsetX = x;\n\t\t\tthis.view.offsetY = y;\n\t\t\tthis.view.width = width;\n\t\t\tthis.view.height = height;\n\t\t\tthis.updateProjectionMatrix();\n\t\t}\n\n\t\tclearViewOffset() {\n\t\t\tif (this.view !== null) {\n\t\t\t\tthis.view.enabled = false;\n\t\t\t}\n\n\t\t\tthis.updateProjectionMatrix();\n\t\t}\n\n\t\tupdateProjectionMatrix() {\n\t\t\tconst dx = (this.right - this.left) / (2 * this.zoom);\n\t\t\tconst dy = (this.top - this.bottom) / (2 * this.zoom);\n\t\t\tconst cx = (this.right + this.left) / 2;\n\t\t\tconst cy = (this.top + this.bottom) / 2;\n\t\t\tlet left = cx - dx;\n\t\t\tlet right = cx + dx;\n\t\t\tlet top = cy + dy;\n\t\t\tlet bottom = cy - dy;\n\n\t\t\tif (this.view !== null && this.view.enabled) {\n\t\t\t\tconst scaleW = (this.right - this.left) / this.view.fullWidth / this.zoom;\n\t\t\t\tconst scaleH = (this.top - this.bottom) / this.view.fullHeight / this.zoom;\n\t\t\t\tleft += scaleW * this.view.offsetX;\n\t\t\t\tright = left + scaleW * this.view.width;\n\t\t\t\ttop -= scaleH * this.view.offsetY;\n\t\t\t\tbottom = top - scaleH * this.view.height;\n\t\t\t}\n\n\t\t\tthis.projectionMatrix.makeOrthographic(left, right, top, bottom, this.near, this.far);\n\t\t\tthis.projectionMatrixInverse.copy(this.projectionMatrix).invert();\n\t\t}\n\n\t\ttoJSON(meta) {\n\t\t\tconst data = super.toJSON(meta);\n\t\t\tdata.object.zoom = this.zoom;\n\t\t\tdata.object.left = this.left;\n\t\t\tdata.object.right = this.right;\n\t\t\tdata.object.top = this.top;\n\t\t\tdata.object.bottom = this.bottom;\n\t\t\tdata.object.near = this.near;\n\t\t\tdata.object.far = this.far;\n\t\t\tif (this.view !== null) data.object.view = Object.assign({}, this.view);\n\t\t\treturn data;\n\t\t}\n\n\t}\n\n\tOrthographicCamera.prototype.isOrthographicCamera = true;\n\n\tclass RawShaderMaterial extends ShaderMaterial {\n\t\tconstructor(parameters) {\n\t\t\tsuper(parameters);\n\t\t\tthis.type = 'RawShaderMaterial';\n\t\t}\n\n\t}\n\n\tRawShaderMaterial.prototype.isRawShaderMaterial = true;\n\n\tconst LOD_MIN = 4;\n\tconst LOD_MAX = 8;\n\tconst SIZE_MAX = Math.pow(2, LOD_MAX); // The standard deviations (radians) associated with the extra mips. These are\n\t// chosen to approximate a Trowbridge-Reitz distribution function times the\n\t// geometric shadowing function. These sigma values squared must match the\n\t// variance #defines in cube_uv_reflection_fragment.glsl.js.\n\n\tconst EXTRA_LOD_SIGMA = [0.125, 0.215, 0.35, 0.446, 0.526, 0.582];\n\tconst TOTAL_LODS = LOD_MAX - LOD_MIN + 1 + EXTRA_LOD_SIGMA.length; // The maximum length of the blur for loop. Smaller sigmas will use fewer\n\t// samples and exit early, but not recompile the shader.\n\n\tconst MAX_SAMPLES = 20;\n\tconst ENCODINGS = {\n\t\t[LinearEncoding]: 0,\n\t\t[sRGBEncoding]: 1,\n\t\t[RGBEEncoding]: 2,\n\t\t[RGBM7Encoding]: 3,\n\t\t[RGBM16Encoding]: 4,\n\t\t[RGBDEncoding]: 5,\n\t\t[GammaEncoding]: 6\n\t};\n\n\tconst _flatCamera = /*@__PURE__*/new OrthographicCamera();\n\n\tconst {\n\t\t_lodPlanes,\n\t\t_sizeLods,\n\t\t_sigmas\n\t} = /*@__PURE__*/_createPlanes();\n\n\tconst _clearColor = /*@__PURE__*/new Color();\n\n\tlet _oldTarget = null; // Golden Ratio\n\n\tconst PHI = (1 + Math.sqrt(5)) / 2;\n\tconst INV_PHI = 1 / PHI; // Vertices of a dodecahedron (except the opposites, which represent the\n\t// same axis), used as axis directions evenly spread on a sphere.\n\n\tconst _axisDirections = [/*@__PURE__*/new Vector3(1, 1, 1), /*@__PURE__*/new Vector3(-1, 1, 1), /*@__PURE__*/new Vector3(1, 1, -1), /*@__PURE__*/new Vector3(-1, 1, -1), /*@__PURE__*/new Vector3(0, PHI, INV_PHI), /*@__PURE__*/new Vector3(0, PHI, -INV_PHI), /*@__PURE__*/new Vector3(INV_PHI, 0, PHI), /*@__PURE__*/new Vector3(-INV_PHI, 0, PHI), /*@__PURE__*/new Vector3(PHI, INV_PHI, 0), /*@__PURE__*/new Vector3(-PHI, INV_PHI, 0)];\n\t/**\n\t * This class generates a Prefiltered, Mipmapped Radiance Environment Map\n\t * (PMREM) from a cubeMap environment texture. This allows different levels of\n\t * blur to be quickly accessed based on material roughness. It is packed into a\n\t * special CubeUV format that allows us to perform custom interpolation so that\n\t * we can support nonlinear formats such as RGBE. Unlike a traditional mipmap\n\t * chain, it only goes down to the LOD_MIN level (above), and then creates extra\n\t * even more filtered 'mips' at the same LOD_MIN resolution, associated with\n\t * higher roughness levels. In this way we maintain resolution to smoothly\n\t * interpolate diffuse lighting while limiting sampling computation.\n\t *\n\t * Paper: Fast, Accurate Image-Based Lighting\n\t * https://drive.google.com/file/d/15y8r_UpKlU9SvV4ILb0C3qCPecS8pvLz/view\n\t*/\n\n\tclass PMREMGenerator {\n\t\tconstructor(renderer) {\n\t\t\tthis._renderer = renderer;\n\t\t\tthis._pingPongRenderTarget = null;\n\t\t\tthis._blurMaterial = _getBlurShader(MAX_SAMPLES);\n\t\t\tthis._equirectShader = null;\n\t\t\tthis._cubemapShader = null;\n\n\t\t\tthis._compileMaterial(this._blurMaterial);\n\t\t}\n\t\t/**\n\t\t * Generates a PMREM from a supplied Scene, which can be faster than using an\n\t\t * image if networking bandwidth is low. Optional sigma specifies a blur radius\n\t\t * in radians to be applied to the scene before PMREM generation. Optional near\n\t\t * and far planes ensure the scene is rendered in its entirety (the cubeCamera\n\t\t * is placed at the origin).\n\t\t */\n\n\n\t\tfromScene(scene, sigma = 0, near = 0.1, far = 100) {\n\t\t\t_oldTarget = this._renderer.getRenderTarget();\n\n\t\t\tconst cubeUVRenderTarget = this._allocateTargets();\n\n\t\t\tthis._sceneToCubeUV(scene, near, far, cubeUVRenderTarget);\n\n\t\t\tif (sigma > 0) {\n\t\t\t\tthis._blur(cubeUVRenderTarget, 0, 0, sigma);\n\t\t\t}\n\n\t\t\tthis._applyPMREM(cubeUVRenderTarget);\n\n\t\t\tthis._cleanup(cubeUVRenderTarget);\n\n\t\t\treturn cubeUVRenderTarget;\n\t\t}\n\t\t/**\n\t\t * Generates a PMREM from an equirectangular texture, which can be either LDR\n\t\t * (RGBFormat) or HDR (RGBEFormat). The ideal input image size is 1k (1024 x 512),\n\t\t * as this matches best with the 256 x 256 cubemap output.\n\t\t */\n\n\n\t\tfromEquirectangular(equirectangular) {\n\t\t\treturn this._fromTexture(equirectangular);\n\t\t}\n\t\t/**\n\t\t * Generates a PMREM from an cubemap texture, which can be either LDR\n\t\t * (RGBFormat) or HDR (RGBEFormat). The ideal input cube size is 256 x 256,\n\t\t * as this matches best with the 256 x 256 cubemap output.\n\t\t */\n\n\n\t\tfromCubemap(cubemap) {\n\t\t\treturn this._fromTexture(cubemap);\n\t\t}\n\t\t/**\n\t\t * Pre-compiles the cubemap shader. You can get faster start-up by invoking this method during\n\t\t * your texture's network fetch for increased concurrency.\n\t\t */\n\n\n\t\tcompileCubemapShader() {\n\t\t\tif (this._cubemapShader === null) {\n\t\t\t\tthis._cubemapShader = _getCubemapShader();\n\n\t\t\t\tthis._compileMaterial(this._cubemapShader);\n\t\t\t}\n\t\t}\n\t\t/**\n\t\t * Pre-compiles the equirectangular shader. You can get faster start-up by invoking this method during\n\t\t * your texture's network fetch for increased concurrency.\n\t\t */\n\n\n\t\tcompileEquirectangularShader() {\n\t\t\tif (this._equirectShader === null) {\n\t\t\t\tthis._equirectShader = _getEquirectShader();\n\n\t\t\t\tthis._compileMaterial(this._equirectShader);\n\t\t\t}\n\t\t}\n\t\t/**\n\t\t * Disposes of the PMREMGenerator's internal memory. Note that PMREMGenerator is a static class,\n\t\t * so you should not need more than one PMREMGenerator object. If you do, calling dispose() on\n\t\t * one of them will cause any others to also become unusable.\n\t\t */\n\n\n\t\tdispose() {\n\t\t\tthis._blurMaterial.dispose();\n\n\t\t\tif (this._cubemapShader !== null) this._cubemapShader.dispose();\n\t\t\tif (this._equirectShader !== null) this._equirectShader.dispose();\n\n\t\t\tfor (let i = 0; i < _lodPlanes.length; i++) {\n\t\t\t\t_lodPlanes[i].dispose();\n\t\t\t}\n\t\t} // private interface\n\n\n\t\t_cleanup(outputTarget) {\n\t\t\tthis._pingPongRenderTarget.dispose();\n\n\t\t\tthis._renderer.setRenderTarget(_oldTarget);\n\n\t\t\toutputTarget.scissorTest = false;\n\n\t\t\t_setViewport(outputTarget, 0, 0, outputTarget.width, outputTarget.height);\n\t\t}\n\n\t\t_fromTexture(texture) {\n\t\t\t_oldTarget = this._renderer.getRenderTarget();\n\n\t\t\tconst cubeUVRenderTarget = this._allocateTargets(texture);\n\n\t\t\tthis._textureToCubeUV(texture, cubeUVRenderTarget);\n\n\t\t\tthis._applyPMREM(cubeUVRenderTarget);\n\n\t\t\tthis._cleanup(cubeUVRenderTarget);\n\n\t\t\treturn cubeUVRenderTarget;\n\t\t}\n\n\t\t_allocateTargets(texture) {\n\t\t\t// warning: null texture is valid\n\t\t\tconst params = {\n\t\t\t\tmagFilter: NearestFilter,\n\t\t\t\tminFilter: NearestFilter,\n\t\t\t\tgenerateMipmaps: false,\n\t\t\t\ttype: UnsignedByteType,\n\t\t\t\tformat: RGBEFormat,\n\t\t\t\tencoding: _isLDR(texture) ? texture.encoding : RGBEEncoding,\n\t\t\t\tdepthBuffer: false\n\t\t\t};\n\n\t\t\tconst cubeUVRenderTarget = _createRenderTarget(params);\n\n\t\t\tcubeUVRenderTarget.depthBuffer = texture ? false : true;\n\t\t\tthis._pingPongRenderTarget = _createRenderTarget(params);\n\t\t\treturn cubeUVRenderTarget;\n\t\t}\n\n\t\t_compileMaterial(material) {\n\t\t\tconst tmpMesh = new Mesh(_lodPlanes[0], material);\n\n\t\t\tthis._renderer.compile(tmpMesh, _flatCamera);\n\t\t}\n\n\t\t_sceneToCubeUV(scene, near, far, cubeUVRenderTarget) {\n\t\t\tconst fov = 90;\n\t\t\tconst aspect = 1;\n\t\t\tconst cubeCamera = new PerspectiveCamera(fov, aspect, near, far);\n\t\t\tconst upSign = [1, -1, 1, 1, 1, 1];\n\t\t\tconst forwardSign = [1, 1, 1, -1, -1, -1];\n\t\t\tconst renderer = this._renderer;\n\t\t\tconst originalAutoClear = renderer.autoClear;\n\t\t\tconst outputEncoding = renderer.outputEncoding;\n\t\t\tconst toneMapping = renderer.toneMapping;\n\t\t\trenderer.getClearColor(_clearColor);\n\t\t\trenderer.toneMapping = NoToneMapping;\n\t\t\trenderer.outputEncoding = LinearEncoding;\n\t\t\trenderer.autoClear = false;\n\t\t\tconst backgroundMaterial = new MeshBasicMaterial({\n\t\t\t\tname: 'PMREM.Background',\n\t\t\t\tside: BackSide,\n\t\t\t\tdepthWrite: false,\n\t\t\t\tdepthTest: false\n\t\t\t});\n\t\t\tconst backgroundBox = new Mesh(new BoxGeometry(), backgroundMaterial);\n\t\t\tlet useSolidColor = false;\n\t\t\tconst background = scene.background;\n\n\t\t\tif (background) {\n\t\t\t\tif (background.isColor) {\n\t\t\t\t\tbackgroundMaterial.color.copy(background);\n\t\t\t\t\tscene.background = null;\n\t\t\t\t\tuseSolidColor = true;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tbackgroundMaterial.color.copy(_clearColor);\n\t\t\t\tuseSolidColor = true;\n\t\t\t}\n\n\t\t\tfor (let i = 0; i < 6; i++) {\n\t\t\t\tconst col = i % 3;\n\n\t\t\t\tif (col == 0) {\n\t\t\t\t\tcubeCamera.up.set(0, upSign[i], 0);\n\t\t\t\t\tcubeCamera.lookAt(forwardSign[i], 0, 0);\n\t\t\t\t} else if (col == 1) {\n\t\t\t\t\tcubeCamera.up.set(0, 0, upSign[i]);\n\t\t\t\t\tcubeCamera.lookAt(0, forwardSign[i], 0);\n\t\t\t\t} else {\n\t\t\t\t\tcubeCamera.up.set(0, upSign[i], 0);\n\t\t\t\t\tcubeCamera.lookAt(0, 0, forwardSign[i]);\n\t\t\t\t}\n\n\t\t\t\t_setViewport(cubeUVRenderTarget, col * SIZE_MAX, i > 2 ? SIZE_MAX : 0, SIZE_MAX, SIZE_MAX);\n\n\t\t\t\trenderer.setRenderTarget(cubeUVRenderTarget);\n\n\t\t\t\tif (useSolidColor) {\n\t\t\t\t\trenderer.render(backgroundBox, cubeCamera);\n\t\t\t\t}\n\n\t\t\t\trenderer.render(scene, cubeCamera);\n\t\t\t}\n\n\t\t\tbackgroundBox.geometry.dispose();\n\t\t\tbackgroundBox.material.dispose();\n\t\t\trenderer.toneMapping = toneMapping;\n\t\t\trenderer.outputEncoding = outputEncoding;\n\t\t\trenderer.autoClear = originalAutoClear;\n\t\t\tscene.background = background;\n\t\t}\n\n\t\t_setEncoding(uniform, texture) {\n\t\t\tif (this._renderer.capabilities.isWebGL2 === true && texture.format === RGBAFormat && texture.type === UnsignedByteType && texture.encoding === sRGBEncoding) {\n\t\t\t\tuniform.value = ENCODINGS[LinearEncoding];\n\t\t\t} else {\n\t\t\t\tuniform.value = ENCODINGS[texture.encoding];\n\t\t\t}\n\t\t}\n\n\t\t_textureToCubeUV(texture, cubeUVRenderTarget) {\n\t\t\tconst renderer = this._renderer;\n\t\t\tconst isCubeTexture = texture.mapping === CubeReflectionMapping || texture.mapping === CubeRefractionMapping;\n\n\t\t\tif (isCubeTexture) {\n\t\t\t\tif (this._cubemapShader == null) {\n\t\t\t\t\tthis._cubemapShader = _getCubemapShader();\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (this._equirectShader == null) {\n\t\t\t\t\tthis._equirectShader = _getEquirectShader();\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst material = isCubeTexture ? this._cubemapShader : this._equirectShader;\n\t\t\tconst mesh = new Mesh(_lodPlanes[0], material);\n\t\t\tconst uniforms = material.uniforms;\n\t\t\tuniforms['envMap'].value = texture;\n\n\t\t\tif (!isCubeTexture) {\n\t\t\t\tuniforms['texelSize'].value.set(1.0 / texture.image.width, 1.0 / texture.image.height);\n\t\t\t}\n\n\t\t\tthis._setEncoding(uniforms['inputEncoding'], texture);\n\n\t\t\tthis._setEncoding(uniforms['outputEncoding'], cubeUVRenderTarget.texture);\n\n\t\t\t_setViewport(cubeUVRenderTarget, 0, 0, 3 * SIZE_MAX, 2 * SIZE_MAX);\n\n\t\t\trenderer.setRenderTarget(cubeUVRenderTarget);\n\t\t\trenderer.render(mesh, _flatCamera);\n\t\t}\n\n\t\t_applyPMREM(cubeUVRenderTarget) {\n\t\t\tconst renderer = this._renderer;\n\t\t\tconst autoClear = renderer.autoClear;\n\t\t\trenderer.autoClear = false;\n\n\t\t\tfor (let i = 1; i < TOTAL_LODS; i++) {\n\t\t\t\tconst sigma = Math.sqrt(_sigmas[i] * _sigmas[i] - _sigmas[i - 1] * _sigmas[i - 1]);\n\t\t\t\tconst poleAxis = _axisDirections[(i - 1) % _axisDirections.length];\n\n\t\t\t\tthis._blur(cubeUVRenderTarget, i - 1, i, sigma, poleAxis);\n\t\t\t}\n\n\t\t\trenderer.autoClear = autoClear;\n\t\t}\n\t\t/**\n\t\t * This is a two-pass Gaussian blur for a cubemap. Normally this is done\n\t\t * vertically and horizontally, but this breaks down on a cube. Here we apply\n\t\t * the blur latitudinally (around the poles), and then longitudinally (towards\n\t\t * the poles) to approximate the orthogonally-separable blur. It is least\n\t\t * accurate at the poles, but still does a decent job.\n\t\t */\n\n\n\t\t_blur(cubeUVRenderTarget, lodIn, lodOut, sigma, poleAxis) {\n\t\t\tconst pingPongRenderTarget = this._pingPongRenderTarget;\n\n\t\t\tthis._halfBlur(cubeUVRenderTarget, pingPongRenderTarget, lodIn, lodOut, sigma, 'latitudinal', poleAxis);\n\n\t\t\tthis._halfBlur(pingPongRenderTarget, cubeUVRenderTarget, lodOut, lodOut, sigma, 'longitudinal', poleAxis);\n\t\t}\n\n\t\t_halfBlur(targetIn, targetOut, lodIn, lodOut, sigmaRadians, direction, poleAxis) {\n\t\t\tconst renderer = this._renderer;\n\t\t\tconst blurMaterial = this._blurMaterial;\n\n\t\t\tif (direction !== 'latitudinal' && direction !== 'longitudinal') {\n\t\t\t\tconsole.error('blur direction must be either latitudinal or longitudinal!');\n\t\t\t} // Number of standard deviations at which to cut off the discrete approximation.\n\n\n\t\t\tconst STANDARD_DEVIATIONS = 3;\n\t\t\tconst blurMesh = new Mesh(_lodPlanes[lodOut], blurMaterial);\n\t\t\tconst blurUniforms = blurMaterial.uniforms;\n\t\t\tconst pixels = _sizeLods[lodIn] - 1;\n\t\t\tconst radiansPerPixel = isFinite(sigmaRadians) ? Math.PI / (2 * pixels) : 2 * Math.PI / (2 * MAX_SAMPLES - 1);\n\t\t\tconst sigmaPixels = sigmaRadians / radiansPerPixel;\n\t\t\tconst samples = isFinite(sigmaRadians) ? 1 + Math.floor(STANDARD_DEVIATIONS * sigmaPixels) : MAX_SAMPLES;\n\n\t\t\tif (samples > MAX_SAMPLES) {\n\t\t\t\tconsole.warn(`sigmaRadians, ${sigmaRadians}, is too large and will clip, as it requested ${samples} samples when the maximum is set to ${MAX_SAMPLES}`);\n\t\t\t}\n\n\t\t\tconst weights = [];\n\t\t\tlet sum = 0;\n\n\t\t\tfor (let i = 0; i < MAX_SAMPLES; ++i) {\n\t\t\t\tconst x = i / sigmaPixels;\n\t\t\t\tconst weight = Math.exp(-x * x / 2);\n\t\t\t\tweights.push(weight);\n\n\t\t\t\tif (i == 0) {\n\t\t\t\t\tsum += weight;\n\t\t\t\t} else if (i < samples) {\n\t\t\t\t\tsum += 2 * weight;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfor (let i = 0; i < weights.length; i++) {\n\t\t\t\tweights[i] = weights[i] / sum;\n\t\t\t}\n\n\t\t\tblurUniforms['envMap'].value = targetIn.texture;\n\t\t\tblurUniforms['samples'].value = samples;\n\t\t\tblurUniforms['weights'].value = weights;\n\t\t\tblurUniforms['latitudinal'].value = direction === 'latitudinal';\n\n\t\t\tif (poleAxis) {\n\t\t\t\tblurUniforms['poleAxis'].value = poleAxis;\n\t\t\t}\n\n\t\t\tblurUniforms['dTheta'].value = radiansPerPixel;\n\t\t\tblurUniforms['mipInt'].value = LOD_MAX - lodIn;\n\n\t\t\tthis._setEncoding(blurUniforms['inputEncoding'], targetIn.texture);\n\n\t\t\tthis._setEncoding(blurUniforms['outputEncoding'], targetIn.texture);\n\n\t\t\tconst outputSize = _sizeLods[lodOut];\n\t\t\tconst x = 3 * Math.max(0, SIZE_MAX - 2 * outputSize);\n\t\t\tconst y = (lodOut === 0 ? 0 : 2 * SIZE_MAX) + 2 * outputSize * (lodOut > LOD_MAX - LOD_MIN ? lodOut - LOD_MAX + LOD_MIN : 0);\n\n\t\t\t_setViewport(targetOut, x, y, 3 * outputSize, 2 * outputSize);\n\n\t\t\trenderer.setRenderTarget(targetOut);\n\t\t\trenderer.render(blurMesh, _flatCamera);\n\t\t}\n\n\t}\n\n\tfunction _isLDR(texture) {\n\t\tif (texture === undefined || texture.type !== UnsignedByteType) return false;\n\t\treturn texture.encoding === LinearEncoding || texture.encoding === sRGBEncoding || texture.encoding === GammaEncoding;\n\t}\n\n\tfunction _createPlanes() {\n\t\tconst _lodPlanes = [];\n\t\tconst _sizeLods = [];\n\t\tconst _sigmas = [];\n\t\tlet lod = LOD_MAX;\n\n\t\tfor (let i = 0; i < TOTAL_LODS; i++) {\n\t\t\tconst sizeLod = Math.pow(2, lod);\n\n\t\t\t_sizeLods.push(sizeLod);\n\n\t\t\tlet sigma = 1.0 / sizeLod;\n\n\t\t\tif (i > LOD_MAX - LOD_MIN) {\n\t\t\t\tsigma = EXTRA_LOD_SIGMA[i - LOD_MAX + LOD_MIN - 1];\n\t\t\t} else if (i == 0) {\n\t\t\t\tsigma = 0;\n\t\t\t}\n\n\t\t\t_sigmas.push(sigma);\n\n\t\t\tconst texelSize = 1.0 / (sizeLod - 1);\n\t\t\tconst min = -texelSize / 2;\n\t\t\tconst max = 1 + texelSize / 2;\n\t\t\tconst uv1 = [min, min, max, min, max, max, min, min, max, max, min, max];\n\t\t\tconst cubeFaces = 6;\n\t\t\tconst vertices = 6;\n\t\t\tconst positionSize = 3;\n\t\t\tconst uvSize = 2;\n\t\t\tconst faceIndexSize = 1;\n\t\t\tconst position = new Float32Array(positionSize * vertices * cubeFaces);\n\t\t\tconst uv = new Float32Array(uvSize * vertices * cubeFaces);\n\t\t\tconst faceIndex = new Float32Array(faceIndexSize * vertices * cubeFaces);\n\n\t\t\tfor (let face = 0; face < cubeFaces; face++) {\n\t\t\t\tconst x = face % 3 * 2 / 3 - 1;\n\t\t\t\tconst y = face > 2 ? 0 : -1;\n\t\t\t\tconst coordinates = [x, y, 0, x + 2 / 3, y, 0, x + 2 / 3, y + 1, 0, x, y, 0, x + 2 / 3, y + 1, 0, x, y + 1, 0];\n\t\t\t\tposition.set(coordinates, positionSize * vertices * face);\n\t\t\t\tuv.set(uv1, uvSize * vertices * face);\n\t\t\t\tconst fill = [face, face, face, face, face, face];\n\t\t\t\tfaceIndex.set(fill, faceIndexSize * vertices * face);\n\t\t\t}\n\n\t\t\tconst planes = new BufferGeometry();\n\t\t\tplanes.setAttribute('position', new BufferAttribute(position, positionSize));\n\t\t\tplanes.setAttribute('uv', new BufferAttribute(uv, uvSize));\n\t\t\tplanes.setAttribute('faceIndex', new BufferAttribute(faceIndex, faceIndexSize));\n\n\t\t\t_lodPlanes.push(planes);\n\n\t\t\tif (lod > LOD_MIN) {\n\t\t\t\tlod--;\n\t\t\t}\n\t\t}\n\n\t\treturn {\n\t\t\t_lodPlanes,\n\t\t\t_sizeLods,\n\t\t\t_sigmas\n\t\t};\n\t}\n\n\tfunction _createRenderTarget(params) {\n\t\tconst cubeUVRenderTarget = new WebGLRenderTarget(3 * SIZE_MAX, 3 * SIZE_MAX, params);\n\t\tcubeUVRenderTarget.texture.mapping = CubeUVReflectionMapping;\n\t\tcubeUVRenderTarget.texture.name = 'PMREM.cubeUv';\n\t\tcubeUVRenderTarget.scissorTest = true;\n\t\treturn cubeUVRenderTarget;\n\t}\n\n\tfunction _setViewport(target, x, y, width, height) {\n\t\ttarget.viewport.set(x, y, width, height);\n\t\ttarget.scissor.set(x, y, width, height);\n\t}\n\n\tfunction _getBlurShader(maxSamples) {\n\t\tconst weights = new Float32Array(maxSamples);\n\t\tconst poleAxis = new Vector3(0, 1, 0);\n\t\tconst shaderMaterial = new RawShaderMaterial({\n\t\t\tname: 'SphericalGaussianBlur',\n\t\t\tdefines: {\n\t\t\t\t'n': maxSamples\n\t\t\t},\n\t\t\tuniforms: {\n\t\t\t\t'envMap': {\n\t\t\t\t\tvalue: null\n\t\t\t\t},\n\t\t\t\t'samples': {\n\t\t\t\t\tvalue: 1\n\t\t\t\t},\n\t\t\t\t'weights': {\n\t\t\t\t\tvalue: weights\n\t\t\t\t},\n\t\t\t\t'latitudinal': {\n\t\t\t\t\tvalue: false\n\t\t\t\t},\n\t\t\t\t'dTheta': {\n\t\t\t\t\tvalue: 0\n\t\t\t\t},\n\t\t\t\t'mipInt': {\n\t\t\t\t\tvalue: 0\n\t\t\t\t},\n\t\t\t\t'poleAxis': {\n\t\t\t\t\tvalue: poleAxis\n\t\t\t\t},\n\t\t\t\t'inputEncoding': {\n\t\t\t\t\tvalue: ENCODINGS[LinearEncoding]\n\t\t\t\t},\n\t\t\t\t'outputEncoding': {\n\t\t\t\t\tvalue: ENCODINGS[LinearEncoding]\n\t\t\t\t}\n\t\t\t},\n\t\t\tvertexShader: _getCommonVertexShader(),\n\t\t\tfragmentShader:\n\t\t\t/* glsl */\n\t\t\t`\n\n\t\t\tprecision mediump float;\n\t\t\tprecision mediump int;\n\n\t\t\tvarying vec3 vOutputDirection;\n\n\t\t\tuniform sampler2D envMap;\n\t\t\tuniform int samples;\n\t\t\tuniform float weights[ n ];\n\t\t\tuniform bool latitudinal;\n\t\t\tuniform float dTheta;\n\t\t\tuniform float mipInt;\n\t\t\tuniform vec3 poleAxis;\n\n\t\t\t${_getEncodings()}\n\n\t\t\t#define ENVMAP_TYPE_CUBE_UV\n\t\t\t#include <cube_uv_reflection_fragment>\n\n\t\t\tvec3 getSample( float theta, vec3 axis ) {\n\n\t\t\t\tfloat cosTheta = cos( theta );\n\t\t\t\t// Rodrigues' axis-angle rotation\n\t\t\t\tvec3 sampleDirection = vOutputDirection * cosTheta\n\t\t\t\t\t+ cross( axis, vOutputDirection ) * sin( theta )\n\t\t\t\t\t+ axis * dot( axis, vOutputDirection ) * ( 1.0 - cosTheta );\n\n\t\t\t\treturn bilinearCubeUV( envMap, sampleDirection, mipInt );\n\n\t\t\t}\n\n\t\t\tvoid main() {\n\n\t\t\t\tvec3 axis = latitudinal ? poleAxis : cross( poleAxis, vOutputDirection );\n\n\t\t\t\tif ( all( equal( axis, vec3( 0.0 ) ) ) ) {\n\n\t\t\t\t\taxis = vec3( vOutputDirection.z, 0.0, - vOutputDirection.x );\n\n\t\t\t\t}\n\n\t\t\t\taxis = normalize( axis );\n\n\t\t\t\tgl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );\n\t\t\t\tgl_FragColor.rgb += weights[ 0 ] * getSample( 0.0, axis );\n\n\t\t\t\tfor ( int i = 1; i < n; i++ ) {\n\n\t\t\t\t\tif ( i >= samples ) {\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfloat theta = dTheta * float( i );\n\t\t\t\t\tgl_FragColor.rgb += weights[ i ] * getSample( -1.0 * theta, axis );\n\t\t\t\t\tgl_FragColor.rgb += weights[ i ] * getSample( theta, axis );\n\n\t\t\t\t}\n\n\t\t\t\tgl_FragColor = linearToOutputTexel( gl_FragColor );\n\n\t\t\t}\n\t\t`,\n\t\t\tblending: NoBlending,\n\t\t\tdepthTest: false,\n\t\t\tdepthWrite: false\n\t\t});\n\t\treturn shaderMaterial;\n\t}\n\n\tfunction _getEquirectShader() {\n\t\tconst texelSize = new Vector2(1, 1);\n\t\tconst shaderMaterial = new RawShaderMaterial({\n\t\t\tname: 'EquirectangularToCubeUV',\n\t\t\tuniforms: {\n\t\t\t\t'envMap': {\n\t\t\t\t\tvalue: null\n\t\t\t\t},\n\t\t\t\t'texelSize': {\n\t\t\t\t\tvalue: texelSize\n\t\t\t\t},\n\t\t\t\t'inputEncoding': {\n\t\t\t\t\tvalue: ENCODINGS[LinearEncoding]\n\t\t\t\t},\n\t\t\t\t'outputEncoding': {\n\t\t\t\t\tvalue: ENCODINGS[LinearEncoding]\n\t\t\t\t}\n\t\t\t},\n\t\t\tvertexShader: _getCommonVertexShader(),\n\t\t\tfragmentShader:\n\t\t\t/* glsl */\n\t\t\t`\n\n\t\t\tprecision mediump float;\n\t\t\tprecision mediump int;\n\n\t\t\tvarying vec3 vOutputDirection;\n\n\t\t\tuniform sampler2D envMap;\n\t\t\tuniform vec2 texelSize;\n\n\t\t\t${_getEncodings()}\n\n\t\t\t#include <common>\n\n\t\t\tvoid main() {\n\n\t\t\t\tgl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );\n\n\t\t\t\tvec3 outputDirection = normalize( vOutputDirection );\n\t\t\t\tvec2 uv = equirectUv( outputDirection );\n\n\t\t\t\tvec2 f = fract( uv / texelSize - 0.5 );\n\t\t\t\tuv -= f * texelSize;\n\t\t\t\tvec3 tl = envMapTexelToLinear( texture2D ( envMap, uv ) ).rgb;\n\t\t\t\tuv.x += texelSize.x;\n\t\t\t\tvec3 tr = envMapTexelToLinear( texture2D ( envMap, uv ) ).rgb;\n\t\t\t\tuv.y += texelSize.y;\n\t\t\t\tvec3 br = envMapTexelToLinear( texture2D ( envMap, uv ) ).rgb;\n\t\t\t\tuv.x -= texelSize.x;\n\t\t\t\tvec3 bl = envMapTexelToLinear( texture2D ( envMap, uv ) ).rgb;\n\n\t\t\t\tvec3 tm = mix( tl, tr, f.x );\n\t\t\t\tvec3 bm = mix( bl, br, f.x );\n\t\t\t\tgl_FragColor.rgb = mix( tm, bm, f.y );\n\n\t\t\t\tgl_FragColor = linearToOutputTexel( gl_FragColor );\n\n\t\t\t}\n\t\t`,\n\t\t\tblending: NoBlending,\n\t\t\tdepthTest: false,\n\t\t\tdepthWrite: false\n\t\t});\n\t\treturn shaderMaterial;\n\t}\n\n\tfunction _getCubemapShader() {\n\t\tconst shaderMaterial = new RawShaderMaterial({\n\t\t\tname: 'CubemapToCubeUV',\n\t\t\tuniforms: {\n\t\t\t\t'envMap': {\n\t\t\t\t\tvalue: null\n\t\t\t\t},\n\t\t\t\t'inputEncoding': {\n\t\t\t\t\tvalue: ENCODINGS[LinearEncoding]\n\t\t\t\t},\n\t\t\t\t'outputEncoding': {\n\t\t\t\t\tvalue: ENCODINGS[LinearEncoding]\n\t\t\t\t}\n\t\t\t},\n\t\t\tvertexShader: _getCommonVertexShader(),\n\t\t\tfragmentShader:\n\t\t\t/* glsl */\n\t\t\t`\n\n\t\t\tprecision mediump float;\n\t\t\tprecision mediump int;\n\n\t\t\tvarying vec3 vOutputDirection;\n\n\t\t\tuniform samplerCube envMap;\n\n\t\t\t${_getEncodings()}\n\n\t\t\tvoid main() {\n\n\t\t\t\tgl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );\n\t\t\t\tgl_FragColor.rgb = envMapTexelToLinear( textureCube( envMap, vec3( - vOutputDirection.x, vOutputDirection.yz ) ) ).rgb;\n\t\t\t\tgl_FragColor = linearToOutputTexel( gl_FragColor );\n\n\t\t\t}\n\t\t`,\n\t\t\tblending: NoBlending,\n\t\t\tdepthTest: false,\n\t\t\tdepthWrite: false\n\t\t});\n\t\treturn shaderMaterial;\n\t}\n\n\tfunction _getCommonVertexShader() {\n\t\treturn (\n\t\t\t/* glsl */\n\t\t\t`\n\n\t\tprecision mediump float;\n\t\tprecision mediump int;\n\n\t\tattribute vec3 position;\n\t\tattribute vec2 uv;\n\t\tattribute float faceIndex;\n\n\t\tvarying vec3 vOutputDirection;\n\n\t\t// RH coordinate system; PMREM face-indexing convention\n\t\tvec3 getDirection( vec2 uv, float face ) {\n\n\t\t\tuv = 2.0 * uv - 1.0;\n\n\t\t\tvec3 direction = vec3( uv, 1.0 );\n\n\t\t\tif ( face == 0.0 ) {\n\n\t\t\t\tdirection = direction.zyx; // ( 1, v, u ) pos x\n\n\t\t\t} else if ( face == 1.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xz *= -1.0; // ( -u, 1, -v ) pos y\n\n\t\t\t} else if ( face == 2.0 ) {\n\n\t\t\t\tdirection.x *= -1.0; // ( -u, v, 1 ) pos z\n\n\t\t\t} else if ( face == 3.0 ) {\n\n\t\t\t\tdirection = direction.zyx;\n\t\t\t\tdirection.xz *= -1.0; // ( -1, v, -u ) neg x\n\n\t\t\t} else if ( face == 4.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xy *= -1.0; // ( -u, -1, v ) neg y\n\n\t\t\t} else if ( face == 5.0 ) {\n\n\t\t\t\tdirection.z *= -1.0; // ( u, v, -1 ) neg z\n\n\t\t\t}\n\n\t\t\treturn direction;\n\n\t\t}\n\n\t\tvoid main() {\n\n\t\t\tvOutputDirection = getDirection( uv, faceIndex );\n\t\t\tgl_Position = vec4( position, 1.0 );\n\n\t\t}\n\t`\n\t\t);\n\t}\n\n\tfunction _getEncodings() {\n\t\treturn (\n\t\t\t/* glsl */\n\t\t\t`\n\n\t\tuniform int inputEncoding;\n\t\tuniform int outputEncoding;\n\n\t\t#include <encodings_pars_fragment>\n\n\t\tvec4 inputTexelToLinear( vec4 value ) {\n\n\t\t\tif ( inputEncoding == 0 ) {\n\n\t\t\t\treturn value;\n\n\t\t\t} else if ( inputEncoding == 1 ) {\n\n\t\t\t\treturn sRGBToLinear( value );\n\n\t\t\t} else if ( inputEncoding == 2 ) {\n\n\t\t\t\treturn RGBEToLinear( value );\n\n\t\t\t} else if ( inputEncoding == 3 ) {\n\n\t\t\t\treturn RGBMToLinear( value, 7.0 );\n\n\t\t\t} else if ( inputEncoding == 4 ) {\n\n\t\t\t\treturn RGBMToLinear( value, 16.0 );\n\n\t\t\t} else if ( inputEncoding == 5 ) {\n\n\t\t\t\treturn RGBDToLinear( value, 256.0 );\n\n\t\t\t} else {\n\n\t\t\t\treturn GammaToLinear( value, 2.2 );\n\n\t\t\t}\n\n\t\t}\n\n\t\tvec4 linearToOutputTexel( vec4 value ) {\n\n\t\t\tif ( outputEncoding == 0 ) {\n\n\t\t\t\treturn value;\n\n\t\t\t} else if ( outputEncoding == 1 ) {\n\n\t\t\t\treturn LinearTosRGB( value );\n\n\t\t\t} else if ( outputEncoding == 2 ) {\n\n\t\t\t\treturn LinearToRGBE( value );\n\n\t\t\t} else if ( outputEncoding == 3 ) {\n\n\t\t\t\treturn LinearToRGBM( value, 7.0 );\n\n\t\t\t} else if ( outputEncoding == 4 ) {\n\n\t\t\t\treturn LinearToRGBM( value, 16.0 );\n\n\t\t\t} else if ( outputEncoding == 5 ) {\n\n\t\t\t\treturn LinearToRGBD( value, 256.0 );\n\n\t\t\t} else {\n\n\t\t\t\treturn LinearToGamma( value, 2.2 );\n\n\t\t\t}\n\n\t\t}\n\n\t\tvec4 envMapTexelToLinear( vec4 color ) {\n\n\t\t\treturn inputTexelToLinear( color );\n\n\t\t}\n\t`\n\t\t);\n\t}\n\n\tfunction WebGLCubeUVMaps(renderer) {\n\t\tlet cubeUVmaps = new WeakMap();\n\t\tlet pmremGenerator = null;\n\n\t\tfunction get(texture) {\n\t\t\tif (texture && texture.isTexture && texture.isRenderTargetTexture === false) {\n\t\t\t\tconst mapping = texture.mapping;\n\t\t\t\tconst isEquirectMap = mapping === EquirectangularReflectionMapping || mapping === EquirectangularRefractionMapping;\n\t\t\t\tconst isCubeMap = mapping === CubeReflectionMapping || mapping === CubeRefractionMapping;\n\n\t\t\t\tif (isEquirectMap || isCubeMap) {\n\t\t\t\t\t// equirect/cube map to cubeUV conversion\n\t\t\t\t\tif (cubeUVmaps.has(texture)) {\n\t\t\t\t\t\treturn cubeUVmaps.get(texture).texture;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tconst image = texture.image;\n\n\t\t\t\t\t\tif (isEquirectMap && image && image.height > 0 || isCubeMap && image && isCubeTextureComplete(image)) {\n\t\t\t\t\t\t\tconst currentRenderTarget = renderer.getRenderTarget();\n\t\t\t\t\t\t\tif (pmremGenerator === null) pmremGenerator = new PMREMGenerator(renderer);\n\t\t\t\t\t\t\tconst renderTarget = isEquirectMap ? pmremGenerator.fromEquirectangular(texture) : pmremGenerator.fromCubemap(texture);\n\t\t\t\t\t\t\tcubeUVmaps.set(texture, renderTarget);\n\t\t\t\t\t\t\trenderer.setRenderTarget(currentRenderTarget);\n\t\t\t\t\t\t\ttexture.addEventListener('dispose', onTextureDispose);\n\t\t\t\t\t\t\treturn renderTarget.texture;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// image not yet ready. try the conversion next frame\n\t\t\t\t\t\t\treturn null;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn texture;\n\t\t}\n\n\t\tfunction isCubeTextureComplete(image) {\n\t\t\tlet count = 0;\n\t\t\tconst length = 6;\n\n\t\t\tfor (let i = 0; i < length; i++) {\n\t\t\t\tif (image[i] !== undefined) count++;\n\t\t\t}\n\n\t\t\treturn count === length;\n\t\t}\n\n\t\tfunction onTextureDispose(event) {\n\t\t\tconst texture = event.target;\n\t\t\ttexture.removeEventListener('dispose', onTextureDispose);\n\t\t\tconst cubemapUV = cubeUVmaps.get(texture);\n\n\t\t\tif (cubemapUV !== undefined) {\n\t\t\t\tcubeUVmaps.delete(texture);\n\t\t\t\tcubemapUV.dispose();\n\t\t\t}\n\t\t}\n\n\t\tfunction dispose() {\n\t\t\tcubeUVmaps = new WeakMap();\n\n\t\t\tif (pmremGenerator !== null) {\n\t\t\t\tpmremGenerator.dispose();\n\t\t\t\tpmremGenerator = null;\n\t\t\t}\n\t\t}\n\n\t\treturn {\n\t\t\tget: get,\n\t\t\tdispose: dispose\n\t\t};\n\t}\n\n\tfunction WebGLExtensions(gl) {\n\t\tconst extensions = {};\n\n\t\tfunction getExtension(name) {\n\t\t\tif (extensions[name] !== undefined) {\n\t\t\t\treturn extensions[name];\n\t\t\t}\n\n\t\t\tlet extension;\n\n\t\t\tswitch (name) {\n\t\t\t\tcase 'WEBGL_depth_texture':\n\t\t\t\t\textension = gl.getExtension('WEBGL_depth_texture') || gl.getExtension('MOZ_WEBGL_depth_texture') || gl.getExtension('WEBKIT_WEBGL_depth_texture');\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'EXT_texture_filter_anisotropic':\n\t\t\t\t\textension = gl.getExtension('EXT_texture_filter_anisotropic') || gl.getExtension('MOZ_EXT_texture_filter_anisotropic') || gl.getExtension('WEBKIT_EXT_texture_filter_anisotropic');\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'WEBGL_compressed_texture_s3tc':\n\t\t\t\t\textension = gl.getExtension('WEBGL_compressed_texture_s3tc') || gl.getExtension('MOZ_WEBGL_compressed_texture_s3tc') || gl.getExtension('WEBKIT_WEBGL_compressed_texture_s3tc');\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'WEBGL_compressed_texture_pvrtc':\n\t\t\t\t\textension = gl.getExtension('WEBGL_compressed_texture_pvrtc') || gl.getExtension('WEBKIT_WEBGL_compressed_texture_pvrtc');\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\t\t\t\t\textension = gl.getExtension(name);\n\t\t\t}\n\n\t\t\textensions[name] = extension;\n\t\t\treturn extension;\n\t\t}\n\n\t\treturn {\n\t\t\thas: function (name) {\n\t\t\t\treturn getExtension(name) !== null;\n\t\t\t},\n\t\t\tinit: function (capabilities) {\n\t\t\t\tif (capabilities.isWebGL2) {\n\t\t\t\t\tgetExtension('EXT_color_buffer_float');\n\t\t\t\t} else {\n\t\t\t\t\tgetExtension('WEBGL_depth_texture');\n\t\t\t\t\tgetExtension('OES_texture_float');\n\t\t\t\t\tgetExtension('OES_texture_half_float');\n\t\t\t\t\tgetExtension('OES_texture_half_float_linear');\n\t\t\t\t\tgetExtension('OES_standard_derivatives');\n\t\t\t\t\tgetExtension('OES_element_index_uint');\n\t\t\t\t\tgetExtension('OES_vertex_array_object');\n\t\t\t\t\tgetExtension('ANGLE_instanced_arrays');\n\t\t\t\t}\n\n\t\t\t\tgetExtension('OES_texture_float_linear');\n\t\t\t\tgetExtension('EXT_color_buffer_half_float');\n\t\t\t},\n\t\t\tget: function (name) {\n\t\t\t\tconst extension = getExtension(name);\n\n\t\t\t\tif (extension === null) {\n\t\t\t\t\tconsole.warn('THREE.WebGLRenderer: ' + name + ' extension not supported.');\n\t\t\t\t}\n\n\t\t\t\treturn extension;\n\t\t\t}\n\t\t};\n\t}\n\n\tfunction WebGLGeometries(gl, attributes, info, bindingStates) {\n\t\tconst geometries = {};\n\t\tconst wireframeAttributes = new WeakMap();\n\n\t\tfunction onGeometryDispose(event) {\n\t\t\tconst geometry = event.target;\n\n\t\t\tif (geometry.index !== null) {\n\t\t\t\tattributes.remove(geometry.index);\n\t\t\t}\n\n\t\t\tfor (const name in geometry.attributes) {\n\t\t\t\tattributes.remove(geometry.attributes[name]);\n\t\t\t}\n\n\t\t\tgeometry.removeEventListener('dispose', onGeometryDispose);\n\t\t\tdelete geometries[geometry.id];\n\t\t\tconst attribute = wireframeAttributes.get(geometry);\n\n\t\t\tif (attribute) {\n\t\t\t\tattributes.remove(attribute);\n\t\t\t\twireframeAttributes.delete(geometry);\n\t\t\t}\n\n\t\t\tbindingStates.releaseStatesOfGeometry(geometry);\n\n\t\t\tif (geometry.isInstancedBufferGeometry === true) {\n\t\t\t\tdelete geometry._maxInstanceCount;\n\t\t\t} //\n\n\n\t\t\tinfo.memory.geometries--;\n\t\t}\n\n\t\tfunction get(object, geometry) {\n\t\t\tif (geometries[geometry.id] === true) return geometry;\n\t\t\tgeometry.addEventListener('dispose', onGeometryDispose);\n\t\t\tgeometries[geometry.id] = true;\n\t\t\tinfo.memory.geometries++;\n\t\t\treturn geometry;\n\t\t}\n\n\t\tfunction update(geometry) {\n\t\t\tconst geometryAttributes = geometry.attributes; // Updating index buffer in VAO now. See WebGLBindingStates.\n\n\t\t\tfor (const name in geometryAttributes) {\n\t\t\t\tattributes.update(geometryAttributes[name], gl.ARRAY_BUFFER);\n\t\t\t} // morph targets\n\n\n\t\t\tconst morphAttributes = geometry.morphAttributes;\n\n\t\t\tfor (const name in morphAttributes) {\n\t\t\t\tconst array = morphAttributes[name];\n\n\t\t\t\tfor (let i = 0, l = array.length; i < l; i++) {\n\t\t\t\t\tattributes.update(array[i], gl.ARRAY_BUFFER);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tfunction updateWireframeAttribute(geometry) {\n\t\t\tconst indices = [];\n\t\t\tconst geometryIndex = geometry.index;\n\t\t\tconst geometryPosition = geometry.attributes.position;\n\t\t\tlet version = 0;\n\n\t\t\tif (geometryIndex !== null) {\n\t\t\t\tconst array = geometryIndex.array;\n\t\t\t\tversion = geometryIndex.version;\n\n\t\t\t\tfor (let i = 0, l = array.length; i < l; i += 3) {\n\t\t\t\t\tconst a = array[i + 0];\n\t\t\t\t\tconst b = array[i + 1];\n\t\t\t\t\tconst c = array[i + 2];\n\t\t\t\t\tindices.push(a, b, b, c, c, a);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tconst array = geometryPosition.array;\n\t\t\t\tversion = geometryPosition.version;\n\n\t\t\t\tfor (let i = 0, l = array.length / 3 - 1; i < l; i += 3) {\n\t\t\t\t\tconst a = i + 0;\n\t\t\t\t\tconst b = i + 1;\n\t\t\t\t\tconst c = i + 2;\n\t\t\t\t\tindices.push(a, b, b, c, c, a);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst attribute = new (arrayMax(indices) > 65535 ? Uint32BufferAttribute : Uint16BufferAttribute)(indices, 1);\n\t\t\tattribute.version = version; // Updating index buffer in VAO now. See WebGLBindingStates\n\t\t\t//\n\n\t\t\tconst previousAttribute = wireframeAttributes.get(geometry);\n\t\t\tif (previousAttribute) attributes.remove(previousAttribute); //\n\n\t\t\twireframeAttributes.set(geometry, attribute);\n\t\t}\n\n\t\tfunction getWireframeAttribute(geometry) {\n\t\t\tconst currentAttribute = wireframeAttributes.get(geometry);\n\n\t\t\tif (currentAttribute) {\n\t\t\t\tconst geometryIndex = geometry.index;\n\n\t\t\t\tif (geometryIndex !== null) {\n\t\t\t\t\t// if the attribute is obsolete, create a new one\n\t\t\t\t\tif (currentAttribute.version < geometryIndex.version) {\n\t\t\t\t\t\tupdateWireframeAttribute(geometry);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tupdateWireframeAttribute(geometry);\n\t\t\t}\n\n\t\t\treturn wireframeAttributes.get(geometry);\n\t\t}\n\n\t\treturn {\n\t\t\tget: get,\n\t\t\tupdate: update,\n\t\t\tgetWireframeAttribute: getWireframeAttribute\n\t\t};\n\t}\n\n\tfunction WebGLIndexedBufferRenderer(gl, extensions, info, capabilities) {\n\t\tconst isWebGL2 = capabilities.isWebGL2;\n\t\tlet mode;\n\n\t\tfunction setMode(value) {\n\t\t\tmode = value;\n\t\t}\n\n\t\tlet type, bytesPerElement;\n\n\t\tfunction setIndex(value) {\n\t\t\ttype = value.type;\n\t\t\tbytesPerElement = value.bytesPerElement;\n\t\t}\n\n\t\tfunction render(start, count) {\n\t\t\tgl.drawElements(mode, count, type, start * bytesPerElement);\n\t\t\tinfo.update(count, mode, 1);\n\t\t}\n\n\t\tfunction renderInstances(start, count, primcount) {\n\t\t\tif (primcount === 0) return;\n\t\t\tlet extension, methodName;\n\n\t\t\tif (isWebGL2) {\n\t\t\t\textension = gl;\n\t\t\t\tmethodName = 'drawElementsInstanced';\n\t\t\t} else {\n\t\t\t\textension = extensions.get('ANGLE_instanced_arrays');\n\t\t\t\tmethodName = 'drawElementsInstancedANGLE';\n\n\t\t\t\tif (extension === null) {\n\t\t\t\t\tconsole.error('THREE.WebGLIndexedBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.');\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\textension[methodName](mode, count, type, start * bytesPerElement, primcount);\n\t\t\tinfo.update(count, mode, primcount);\n\t\t} //\n\n\n\t\tthis.setMode = setMode;\n\t\tthis.setIndex = setIndex;\n\t\tthis.render = render;\n\t\tthis.renderInstances = renderInstances;\n\t}\n\n\tfunction WebGLInfo(gl) {\n\t\tconst memory = {\n\t\t\tgeometries: 0,\n\t\t\ttextures: 0\n\t\t};\n\t\tconst render = {\n\t\t\tframe: 0,\n\t\t\tcalls: 0,\n\t\t\ttriangles: 0,\n\t\t\tpoints: 0,\n\t\t\tlines: 0\n\t\t};\n\n\t\tfunction update(count, mode, instanceCount) {\n\t\t\trender.calls++;\n\n\t\t\tswitch (mode) {\n\t\t\t\tcase gl.TRIANGLES:\n\t\t\t\t\trender.triangles += instanceCount * (count / 3);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase gl.LINES:\n\t\t\t\t\trender.lines += instanceCount * (count / 2);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase gl.LINE_STRIP:\n\t\t\t\t\trender.lines += instanceCount * (count - 1);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase gl.LINE_LOOP:\n\t\t\t\t\trender.lines += instanceCount * count;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase gl.POINTS:\n\t\t\t\t\trender.points += instanceCount * count;\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\t\t\t\t\tconsole.error('THREE.WebGLInfo: Unknown draw mode:', mode);\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tfunction reset() {\n\t\t\trender.frame++;\n\t\t\trender.calls = 0;\n\t\t\trender.triangles = 0;\n\t\t\trender.points = 0;\n\t\t\trender.lines = 0;\n\t\t}\n\n\t\treturn {\n\t\t\tmemory: memory,\n\t\t\trender: render,\n\t\t\tprograms: null,\n\t\t\tautoReset: true,\n\t\t\treset: reset,\n\t\t\tupdate: update\n\t\t};\n\t}\n\n\tclass DataTexture2DArray extends Texture {\n\t\tconstructor(data = null, width = 1, height = 1, depth = 1) {\n\t\t\tsuper(null);\n\t\t\tthis.image = {\n\t\t\t\tdata,\n\t\t\t\twidth,\n\t\t\t\theight,\n\t\t\t\tdepth\n\t\t\t};\n\t\t\tthis.magFilter = NearestFilter;\n\t\t\tthis.minFilter = NearestFilter;\n\t\t\tthis.wrapR = ClampToEdgeWrapping;\n\t\t\tthis.generateMipmaps = false;\n\t\t\tthis.flipY = false;\n\t\t\tthis.unpackAlignment = 1;\n\t\t\tthis.needsUpdate = true;\n\t\t}\n\n\t}\n\n\tDataTexture2DArray.prototype.isDataTexture2DArray = true;\n\n\tfunction numericalSort(a, b) {\n\t\treturn a[0] - b[0];\n\t}\n\n\tfunction absNumericalSort(a, b) {\n\t\treturn Math.abs(b[1]) - Math.abs(a[1]);\n\t}\n\n\tfunction denormalize(morph, attribute) {\n\t\tlet denominator = 1;\n\t\tconst array = attribute.isInterleavedBufferAttribute ? attribute.data.array : attribute.array;\n\t\tif (array instanceof Int8Array) denominator = 127;else if (array instanceof Int16Array) denominator = 32767;else if (array instanceof Int32Array) denominator = 2147483647;else console.error('THREE.WebGLMorphtargets: Unsupported morph attribute data type: ', array);\n\t\tmorph.divideScalar(denominator);\n\t}\n\n\tfunction WebGLMorphtargets(gl, capabilities, textures) {\n\t\tconst influencesList = {};\n\t\tconst morphInfluences = new Float32Array(8);\n\t\tconst morphTextures = new WeakMap();\n\t\tconst morph = new Vector3();\n\t\tconst workInfluences = [];\n\n\t\tfor (let i = 0; i < 8; i++) {\n\t\t\tworkInfluences[i] = [i, 0];\n\t\t}\n\n\t\tfunction update(object, geometry, material, program) {\n\t\t\tconst objectInfluences = object.morphTargetInfluences;\n\n\t\t\tif (capabilities.isWebGL2 === true) {\n\t\t\t\t// instead of using attributes, the WebGL 2 code path encodes morph targets\n\t\t\t\t// into an array of data textures. Each layer represents a single morph target.\n\t\t\t\tconst numberOfMorphTargets = geometry.morphAttributes.position.length;\n\t\t\t\tlet entry = morphTextures.get(geometry);\n\n\t\t\t\tif (entry === undefined || entry.count !== numberOfMorphTargets) {\n\t\t\t\t\tif (entry !== undefined) entry.texture.dispose();\n\t\t\t\t\tconst hasMorphNormals = geometry.morphAttributes.normal !== undefined;\n\t\t\t\t\tconst morphTargets = geometry.morphAttributes.position;\n\t\t\t\t\tconst morphNormals = geometry.morphAttributes.normal || [];\n\t\t\t\t\tconst numberOfVertices = geometry.attributes.position.count;\n\t\t\t\t\tconst numberOfVertexData = hasMorphNormals === true ? 2 : 1; // (v,n) vs. (v)\n\n\t\t\t\t\tlet width = numberOfVertices * numberOfVertexData;\n\t\t\t\t\tlet height = 1;\n\n\t\t\t\t\tif (width > capabilities.maxTextureSize) {\n\t\t\t\t\t\theight = Math.ceil(width / capabilities.maxTextureSize);\n\t\t\t\t\t\twidth = capabilities.maxTextureSize;\n\t\t\t\t\t}\n\n\t\t\t\t\tconst buffer = new Float32Array(width * height * 4 * numberOfMorphTargets);\n\t\t\t\t\tconst texture = new DataTexture2DArray(buffer, width, height, numberOfMorphTargets);\n\t\t\t\t\ttexture.format = RGBAFormat; // using RGBA since RGB might be emulated (and is thus slower)\n\n\t\t\t\t\ttexture.type = FloatType; // fill buffer\n\n\t\t\t\t\tconst vertexDataStride = numberOfVertexData * 4;\n\n\t\t\t\t\tfor (let i = 0; i < numberOfMorphTargets; i++) {\n\t\t\t\t\t\tconst morphTarget = morphTargets[i];\n\t\t\t\t\t\tconst morphNormal = morphNormals[i];\n\t\t\t\t\t\tconst offset = width * height * 4 * i;\n\n\t\t\t\t\t\tfor (let j = 0; j < morphTarget.count; j++) {\n\t\t\t\t\t\t\tmorph.fromBufferAttribute(morphTarget, j);\n\t\t\t\t\t\t\tif (morphTarget.normalized === true) denormalize(morph, morphTarget);\n\t\t\t\t\t\t\tconst stride = j * vertexDataStride;\n\t\t\t\t\t\t\tbuffer[offset + stride + 0] = morph.x;\n\t\t\t\t\t\t\tbuffer[offset + stride + 1] = morph.y;\n\t\t\t\t\t\t\tbuffer[offset + stride + 2] = morph.z;\n\t\t\t\t\t\t\tbuffer[offset + stride + 3] = 0;\n\n\t\t\t\t\t\t\tif (hasMorphNormals === true) {\n\t\t\t\t\t\t\t\tmorph.fromBufferAttribute(morphNormal, j);\n\t\t\t\t\t\t\t\tif (morphNormal.normalized === true) denormalize(morph, morphNormal);\n\t\t\t\t\t\t\t\tbuffer[offset + stride + 4] = morph.x;\n\t\t\t\t\t\t\t\tbuffer[offset + stride + 5] = morph.y;\n\t\t\t\t\t\t\t\tbuffer[offset + stride + 6] = morph.z;\n\t\t\t\t\t\t\t\tbuffer[offset + stride + 7] = 0;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tentry = {\n\t\t\t\t\t\tcount: numberOfMorphTargets,\n\t\t\t\t\t\ttexture: texture,\n\t\t\t\t\t\tsize: new Vector2(width, height)\n\t\t\t\t\t};\n\t\t\t\t\tmorphTextures.set(geometry, entry);\n\t\t\t\t} //\n\n\n\t\t\t\tlet morphInfluencesSum = 0;\n\n\t\t\t\tfor (let i = 0; i < objectInfluences.length; i++) {\n\t\t\t\t\tmorphInfluencesSum += objectInfluences[i];\n\t\t\t\t}\n\n\t\t\t\tconst morphBaseInfluence = geometry.morphTargetsRelative ? 1 : 1 - morphInfluencesSum;\n\t\t\t\tprogram.getUniforms().setValue(gl, 'morphTargetBaseInfluence', morphBaseInfluence);\n\t\t\t\tprogram.getUniforms().setValue(gl, 'morphTargetInfluences', objectInfluences);\n\t\t\t\tprogram.getUniforms().setValue(gl, 'morphTargetsTexture', entry.texture, textures);\n\t\t\t\tprogram.getUniforms().setValue(gl, 'morphTargetsTextureSize', entry.size);\n\t\t\t} else {\n\t\t\t\t// When object doesn't have morph target influences defined, we treat it as a 0-length array\n\t\t\t\t// This is important to make sure we set up morphTargetBaseInfluence / morphTargetInfluences\n\t\t\t\tconst length = objectInfluences === undefined ? 0 : objectInfluences.length;\n\t\t\t\tlet influences = influencesList[geometry.id];\n\n\t\t\t\tif (influences === undefined || influences.length !== length) {\n\t\t\t\t\t// initialise list\n\t\t\t\t\tinfluences = [];\n\n\t\t\t\t\tfor (let i = 0; i < length; i++) {\n\t\t\t\t\t\tinfluences[i] = [i, 0];\n\t\t\t\t\t}\n\n\t\t\t\t\tinfluencesList[geometry.id] = influences;\n\t\t\t\t} // Collect influences\n\n\n\t\t\t\tfor (let i = 0; i < length; i++) {\n\t\t\t\t\tconst influence = influences[i];\n\t\t\t\t\tinfluence[0] = i;\n\t\t\t\t\tinfluence[1] = objectInfluences[i];\n\t\t\t\t}\n\n\t\t\t\tinfluences.sort(absNumericalSort);\n\n\t\t\t\tfor (let i = 0; i < 8; i++) {\n\t\t\t\t\tif (i < length && influences[i][1]) {\n\t\t\t\t\t\tworkInfluences[i][0] = influences[i][0];\n\t\t\t\t\t\tworkInfluences[i][1] = influences[i][1];\n\t\t\t\t\t} else {\n\t\t\t\t\t\tworkInfluences[i][0] = Number.MAX_SAFE_INTEGER;\n\t\t\t\t\t\tworkInfluences[i][1] = 0;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tworkInfluences.sort(numericalSort);\n\t\t\t\tconst morphTargets = geometry.morphAttributes.position;\n\t\t\t\tconst morphNormals = geometry.morphAttributes.normal;\n\t\t\t\tlet morphInfluencesSum = 0;\n\n\t\t\t\tfor (let i = 0; i < 8; i++) {\n\t\t\t\t\tconst influence = workInfluences[i];\n\t\t\t\t\tconst index = influence[0];\n\t\t\t\t\tconst value = influence[1];\n\n\t\t\t\t\tif (index !== Number.MAX_SAFE_INTEGER && value) {\n\t\t\t\t\t\tif (morphTargets && geometry.getAttribute('morphTarget' + i) !== morphTargets[index]) {\n\t\t\t\t\t\t\tgeometry.setAttribute('morphTarget' + i, morphTargets[index]);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (morphNormals && geometry.getAttribute('morphNormal' + i) !== morphNormals[index]) {\n\t\t\t\t\t\t\tgeometry.setAttribute('morphNormal' + i, morphNormals[index]);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tmorphInfluences[i] = value;\n\t\t\t\t\t\tmorphInfluencesSum += value;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (morphTargets && geometry.hasAttribute('morphTarget' + i) === true) {\n\t\t\t\t\t\t\tgeometry.deleteAttribute('morphTarget' + i);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (morphNormals && geometry.hasAttribute('morphNormal' + i) === true) {\n\t\t\t\t\t\t\tgeometry.deleteAttribute('morphNormal' + i);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tmorphInfluences[i] = 0;\n\t\t\t\t\t}\n\t\t\t\t} // GLSL shader uses formula baseinfluence * base + sum(target * influence)\n\t\t\t\t// This allows us to switch between absolute morphs and relative morphs without changing shader code\n\t\t\t\t// When baseinfluence = 1 - sum(influence), the above is equivalent to sum((target - base) * influence)\n\n\n\t\t\t\tconst morphBaseInfluence = geometry.morphTargetsRelative ? 1 : 1 - morphInfluencesSum;\n\t\t\t\tprogram.getUniforms().setValue(gl, 'morphTargetBaseInfluence', morphBaseInfluence);\n\t\t\t\tprogram.getUniforms().setValue(gl, 'morphTargetInfluences', morphInfluences);\n\t\t\t}\n\t\t}\n\n\t\treturn {\n\t\t\tupdate: update\n\t\t};\n\t}\n\n\tfunction WebGLObjects(gl, geometries, attributes, info) {\n\t\tlet updateMap = new WeakMap();\n\n\t\tfunction update(object) {\n\t\t\tconst frame = info.render.frame;\n\t\t\tconst geometry = object.geometry;\n\t\t\tconst buffergeometry = geometries.get(object, geometry); // Update once per frame\n\n\t\t\tif (updateMap.get(buffergeometry) !== frame) {\n\t\t\t\tgeometries.update(buffergeometry);\n\t\t\t\tupdateMap.set(buffergeometry, frame);\n\t\t\t}\n\n\t\t\tif (object.isInstancedMesh) {\n\t\t\t\tif (object.hasEventListener('dispose', onInstancedMeshDispose) === false) {\n\t\t\t\t\tobject.addEventListener('dispose', onInstancedMeshDispose);\n\t\t\t\t}\n\n\t\t\t\tattributes.update(object.instanceMatrix, gl.ARRAY_BUFFER);\n\n\t\t\t\tif (object.instanceColor !== null) {\n\t\t\t\t\tattributes.update(object.instanceColor, gl.ARRAY_BUFFER);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn buffergeometry;\n\t\t}\n\n\t\tfunction dispose() {\n\t\t\tupdateMap = new WeakMap();\n\t\t}\n\n\t\tfunction onInstancedMeshDispose(event) {\n\t\t\tconst instancedMesh = event.target;\n\t\t\tinstancedMesh.removeEventListener('dispose', onInstancedMeshDispose);\n\t\t\tattributes.remove(instancedMesh.instanceMatrix);\n\t\t\tif (instancedMesh.instanceColor !== null) attributes.remove(instancedMesh.instanceColor);\n\t\t}\n\n\t\treturn {\n\t\t\tupdate: update,\n\t\t\tdispose: dispose\n\t\t};\n\t}\n\n\tclass DataTexture3D extends Texture {\n\t\tconstructor(data = null, width = 1, height = 1, depth = 1) {\n\t\t\t// We're going to add .setXXX() methods for setting properties later.\n\t\t\t// Users can still set in DataTexture3D directly.\n\t\t\t//\n\t\t\t//\tconst texture = new THREE.DataTexture3D( data, width, height, depth );\n\t\t\t// \ttexture.anisotropy = 16;\n\t\t\t//\n\t\t\t// See #14839\n\t\t\tsuper(null);\n\t\t\tthis.image = {\n\t\t\t\tdata,\n\t\t\t\twidth,\n\t\t\t\theight,\n\t\t\t\tdepth\n\t\t\t};\n\t\t\tthis.magFilter = NearestFilter;\n\t\t\tthis.minFilter = NearestFilter;\n\t\t\tthis.wrapR = ClampToEdgeWrapping;\n\t\t\tthis.generateMipmaps = false;\n\t\t\tthis.flipY = false;\n\t\t\tthis.unpackAlignment = 1;\n\t\t\tthis.needsUpdate = true;\n\t\t}\n\n\t}\n\n\tDataTexture3D.prototype.isDataTexture3D = true;\n\n\t/**\n\t * Uniforms of a program.\n\t * Those form a tree structure with a special top-level container for the root,\n\t * which you get by calling 'new WebGLUniforms( gl, program )'.\n\t *\n\t *\n\t * Properties of inner nodes including the top-level container:\n\t *\n\t * .seq - array of nested uniforms\n\t * .map - nested uniforms by name\n\t *\n\t *\n\t * Methods of all nodes except the top-level container:\n\t *\n\t * .setValue( gl, value, [textures] )\n\t *\n\t * \t\tuploads a uniform value(s)\n\t *\t\tthe 'textures' parameter is needed for sampler uniforms\n\t *\n\t *\n\t * Static methods of the top-level container (textures factorizations):\n\t *\n\t * .upload( gl, seq, values, textures )\n\t *\n\t * \t\tsets uniforms in 'seq' to 'values[id].value'\n\t *\n\t * .seqWithValue( seq, values ) : filteredSeq\n\t *\n\t * \t\tfilters 'seq' entries with corresponding entry in values\n\t *\n\t *\n\t * Methods of the top-level container (textures factorizations):\n\t *\n\t * .setValue( gl, name, value, textures )\n\t *\n\t * \t\tsets uniform with\tname 'name' to 'value'\n\t *\n\t * .setOptional( gl, obj, prop )\n\t *\n\t * \t\tlike .set for an optional property of the object\n\t *\n\t */\n\tconst emptyTexture = new Texture();\n\tconst emptyTexture2dArray = new DataTexture2DArray();\n\tconst emptyTexture3d = new DataTexture3D();\n\tconst emptyCubeTexture = new CubeTexture(); // --- Utilities ---\n\t// Array Caches (provide typed arrays for temporary by size)\n\n\tconst arrayCacheF32 = [];\n\tconst arrayCacheI32 = []; // Float32Array caches used for uploading Matrix uniforms\n\n\tconst mat4array = new Float32Array(16);\n\tconst mat3array = new Float32Array(9);\n\tconst mat2array = new Float32Array(4); // Flattening for arrays of vectors and matrices\n\n\tfunction flatten(array, nBlocks, blockSize) {\n\t\tconst firstElem = array[0];\n\t\tif (firstElem <= 0 || firstElem > 0) return array; // unoptimized: ! isNaN( firstElem )\n\t\t// see http://jacksondunstan.com/articles/983\n\n\t\tconst n = nBlocks * blockSize;\n\t\tlet r = arrayCacheF32[n];\n\n\t\tif (r === undefined) {\n\t\t\tr = new Float32Array(n);\n\t\t\tarrayCacheF32[n] = r;\n\t\t}\n\n\t\tif (nBlocks !== 0) {\n\t\t\tfirstElem.toArray(r, 0);\n\n\t\t\tfor (let i = 1, offset = 0; i !== nBlocks; ++i) {\n\t\t\t\toffset += blockSize;\n\t\t\t\tarray[i].toArray(r, offset);\n\t\t\t}\n\t\t}\n\n\t\treturn r;\n\t}\n\n\tfunction arraysEqual(a, b) {\n\t\tif (a.length !== b.length) return false;\n\n\t\tfor (let i = 0, l = a.length; i < l; i++) {\n\t\t\tif (a[i] !== b[i]) return false;\n\t\t}\n\n\t\treturn true;\n\t}\n\n\tfunction copyArray(a, b) {\n\t\tfor (let i = 0, l = b.length; i < l; i++) {\n\t\t\ta[i] = b[i];\n\t\t}\n\t} // Texture unit allocation\n\n\n\tfunction allocTexUnits(textures, n) {\n\t\tlet r = arrayCacheI32[n];\n\n\t\tif (r === undefined) {\n\t\t\tr = new Int32Array(n);\n\t\t\tarrayCacheI32[n] = r;\n\t\t}\n\n\t\tfor (let i = 0; i !== n; ++i) {\n\t\t\tr[i] = textures.allocateTextureUnit();\n\t\t}\n\n\t\treturn r;\n\t} // --- Setters ---\n\t// Note: Defining these methods externally, because they come in a bunch\n\t// and this way their names minify.\n\t// Single scalar\n\n\n\tfunction setValueV1f(gl, v) {\n\t\tconst cache = this.cache;\n\t\tif (cache[0] === v) return;\n\t\tgl.uniform1f(this.addr, v);\n\t\tcache[0] = v;\n\t} // Single float vector (from flat array or THREE.VectorN)\n\n\n\tfunction setValueV2f(gl, v) {\n\t\tconst cache = this.cache;\n\n\t\tif (v.x !== undefined) {\n\t\t\tif (cache[0] !== v.x || cache[1] !== v.y) {\n\t\t\t\tgl.uniform2f(this.addr, v.x, v.y);\n\t\t\t\tcache[0] = v.x;\n\t\t\t\tcache[1] = v.y;\n\t\t\t}\n\t\t} else {\n\t\t\tif (arraysEqual(cache, v)) return;\n\t\t\tgl.uniform2fv(this.addr, v);\n\t\t\tcopyArray(cache, v);\n\t\t}\n\t}\n\n\tfunction setValueV3f(gl, v) {\n\t\tconst cache = this.cache;\n\n\t\tif (v.x !== undefined) {\n\t\t\tif (cache[0] !== v.x || cache[1] !== v.y || cache[2] !== v.z) {\n\t\t\t\tgl.uniform3f(this.addr, v.x, v.y, v.z);\n\t\t\t\tcache[0] = v.x;\n\t\t\t\tcache[1] = v.y;\n\t\t\t\tcache[2] = v.z;\n\t\t\t}\n\t\t} else if (v.r !== undefined) {\n\t\t\tif (cache[0] !== v.r || cache[1] !== v.g || cache[2] !== v.b) {\n\t\t\t\tgl.uniform3f(this.addr, v.r, v.g, v.b);\n\t\t\t\tcache[0] = v.r;\n\t\t\t\tcache[1] = v.g;\n\t\t\t\tcache[2] = v.b;\n\t\t\t}\n\t\t} else {\n\t\t\tif (arraysEqual(cache, v)) return;\n\t\t\tgl.uniform3fv(this.addr, v);\n\t\t\tcopyArray(cache, v);\n\t\t}\n\t}\n\n\tfunction setValueV4f(gl, v) {\n\t\tconst cache = this.cache;\n\n\t\tif (v.x !== undefined) {\n\t\t\tif (cache[0] !== v.x || cache[1] !== v.y || cache[2] !== v.z || cache[3] !== v.w) {\n\t\t\t\tgl.uniform4f(this.addr, v.x, v.y, v.z, v.w);\n\t\t\t\tcache[0] = v.x;\n\t\t\t\tcache[1] = v.y;\n\t\t\t\tcache[2] = v.z;\n\t\t\t\tcache[3] = v.w;\n\t\t\t}\n\t\t} else {\n\t\t\tif (arraysEqual(cache, v)) return;\n\t\t\tgl.uniform4fv(this.addr, v);\n\t\t\tcopyArray(cache, v);\n\t\t}\n\t} // Single matrix (from flat array or THREE.MatrixN)\n\n\n\tfunction setValueM2(gl, v) {\n\t\tconst cache = this.cache;\n\t\tconst elements = v.elements;\n\n\t\tif (elements === undefined) {\n\t\t\tif (arraysEqual(cache, v)) return;\n\t\t\tgl.uniformMatrix2fv(this.addr, false, v);\n\t\t\tcopyArray(cache, v);\n\t\t} else {\n\t\t\tif (arraysEqual(cache, elements)) return;\n\t\t\tmat2array.set(elements);\n\t\t\tgl.uniformMatrix2fv(this.addr, false, mat2array);\n\t\t\tcopyArray(cache, elements);\n\t\t}\n\t}\n\n\tfunction setValueM3(gl, v) {\n\t\tconst cache = this.cache;\n\t\tconst elements = v.elements;\n\n\t\tif (elements === undefined) {\n\t\t\tif (arraysEqual(cache, v)) return;\n\t\t\tgl.uniformMatrix3fv(this.addr, false, v);\n\t\t\tcopyArray(cache, v);\n\t\t} else {\n\t\t\tif (arraysEqual(cache, elements)) return;\n\t\t\tmat3array.set(elements);\n\t\t\tgl.uniformMatrix3fv(this.addr, false, mat3array);\n\t\t\tcopyArray(cache, elements);\n\t\t}\n\t}\n\n\tfunction setValueM4(gl, v) {\n\t\tconst cache = this.cache;\n\t\tconst elements = v.elements;\n\n\t\tif (elements === undefined) {\n\t\t\tif (arraysEqual(cache, v)) return;\n\t\t\tgl.uniformMatrix4fv(this.addr, false, v);\n\t\t\tcopyArray(cache, v);\n\t\t} else {\n\t\t\tif (arraysEqual(cache, elements)) return;\n\t\t\tmat4array.set(elements);\n\t\t\tgl.uniformMatrix4fv(this.addr, false, mat4array);\n\t\t\tcopyArray(cache, elements);\n\t\t}\n\t} // Single integer / boolean\n\n\n\tfunction setValueV1i(gl, v) {\n\t\tconst cache = this.cache;\n\t\tif (cache[0] === v) return;\n\t\tgl.uniform1i(this.addr, v);\n\t\tcache[0] = v;\n\t} // Single integer / boolean vector (from flat array)\n\n\n\tfunction setValueV2i(gl, v) {\n\t\tconst cache = this.cache;\n\t\tif (arraysEqual(cache, v)) return;\n\t\tgl.uniform2iv(this.addr, v);\n\t\tcopyArray(cache, v);\n\t}\n\n\tfunction setValueV3i(gl, v) {\n\t\tconst cache = this.cache;\n\t\tif (arraysEqual(cache, v)) return;\n\t\tgl.uniform3iv(this.addr, v);\n\t\tcopyArray(cache, v);\n\t}\n\n\tfunction setValueV4i(gl, v) {\n\t\tconst cache = this.cache;\n\t\tif (arraysEqual(cache, v)) return;\n\t\tgl.uniform4iv(this.addr, v);\n\t\tcopyArray(cache, v);\n\t} // Single unsigned integer\n\n\n\tfunction setValueV1ui(gl, v) {\n\t\tconst cache = this.cache;\n\t\tif (cache[0] === v) return;\n\t\tgl.uniform1ui(this.addr, v);\n\t\tcache[0] = v;\n\t} // Single unsigned integer vector (from flat array)\n\n\n\tfunction setValueV2ui(gl, v) {\n\t\tconst cache = this.cache;\n\t\tif (arraysEqual(cache, v)) return;\n\t\tgl.uniform2uiv(this.addr, v);\n\t\tcopyArray(cache, v);\n\t}\n\n\tfunction setValueV3ui(gl, v) {\n\t\tconst cache = this.cache;\n\t\tif (arraysEqual(cache, v)) return;\n\t\tgl.uniform3uiv(this.addr, v);\n\t\tcopyArray(cache, v);\n\t}\n\n\tfunction setValueV4ui(gl, v) {\n\t\tconst cache = this.cache;\n\t\tif (arraysEqual(cache, v)) return;\n\t\tgl.uniform4uiv(this.addr, v);\n\t\tcopyArray(cache, v);\n\t} // Single texture (2D / Cube)\n\n\n\tfunction setValueT1(gl, v, textures) {\n\t\tconst cache = this.cache;\n\t\tconst unit = textures.allocateTextureUnit();\n\n\t\tif (cache[0] !== unit) {\n\t\t\tgl.uniform1i(this.addr, unit);\n\t\t\tcache[0] = unit;\n\t\t}\n\n\t\ttextures.safeSetTexture2D(v || emptyTexture, unit);\n\t}\n\n\tfunction setValueT3D1(gl, v, textures) {\n\t\tconst cache = this.cache;\n\t\tconst unit = textures.allocateTextureUnit();\n\n\t\tif (cache[0] !== unit) {\n\t\t\tgl.uniform1i(this.addr, unit);\n\t\t\tcache[0] = unit;\n\t\t}\n\n\t\ttextures.setTexture3D(v || emptyTexture3d, unit);\n\t}\n\n\tfunction setValueT6(gl, v, textures) {\n\t\tconst cache = this.cache;\n\t\tconst unit = textures.allocateTextureUnit();\n\n\t\tif (cache[0] !== unit) {\n\t\t\tgl.uniform1i(this.addr, unit);\n\t\t\tcache[0] = unit;\n\t\t}\n\n\t\ttextures.safeSetTextureCube(v || emptyCubeTexture, unit);\n\t}\n\n\tfunction setValueT2DArray1(gl, v, textures) {\n\t\tconst cache = this.cache;\n\t\tconst unit = textures.allocateTextureUnit();\n\n\t\tif (cache[0] !== unit) {\n\t\t\tgl.uniform1i(this.addr, unit);\n\t\t\tcache[0] = unit;\n\t\t}\n\n\t\ttextures.setTexture2DArray(v || emptyTexture2dArray, unit);\n\t} // Helper to pick the right setter for the singular case\n\n\n\tfunction getSingularSetter(type) {\n\t\tswitch (type) {\n\t\t\tcase 0x1406:\n\t\t\t\treturn setValueV1f;\n\t\t\t// FLOAT\n\n\t\t\tcase 0x8b50:\n\t\t\t\treturn setValueV2f;\n\t\t\t// _VEC2\n\n\t\t\tcase 0x8b51:\n\t\t\t\treturn setValueV3f;\n\t\t\t// _VEC3\n\n\t\t\tcase 0x8b52:\n\t\t\t\treturn setValueV4f;\n\t\t\t// _VEC4\n\n\t\t\tcase 0x8b5a:\n\t\t\t\treturn setValueM2;\n\t\t\t// _MAT2\n\n\t\t\tcase 0x8b5b:\n\t\t\t\treturn setValueM3;\n\t\t\t// _MAT3\n\n\t\t\tcase 0x8b5c:\n\t\t\t\treturn setValueM4;\n\t\t\t// _MAT4\n\n\t\t\tcase 0x1404:\n\t\t\tcase 0x8b56:\n\t\t\t\treturn setValueV1i;\n\t\t\t// INT, BOOL\n\n\t\t\tcase 0x8b53:\n\t\t\tcase 0x8b57:\n\t\t\t\treturn setValueV2i;\n\t\t\t// _VEC2\n\n\t\t\tcase 0x8b54:\n\t\t\tcase 0x8b58:\n\t\t\t\treturn setValueV3i;\n\t\t\t// _VEC3\n\n\t\t\tcase 0x8b55:\n\t\t\tcase 0x8b59:\n\t\t\t\treturn setValueV4i;\n\t\t\t// _VEC4\n\n\t\t\tcase 0x1405:\n\t\t\t\treturn setValueV1ui;\n\t\t\t// UINT\n\n\t\t\tcase 0x8dc6:\n\t\t\t\treturn setValueV2ui;\n\t\t\t// _VEC2\n\n\t\t\tcase 0x8dc7:\n\t\t\t\treturn setValueV3ui;\n\t\t\t// _VEC3\n\n\t\t\tcase 0x8dc8:\n\t\t\t\treturn setValueV4ui;\n\t\t\t// _VEC4\n\n\t\t\tcase 0x8b5e: // SAMPLER_2D\n\n\t\t\tcase 0x8d66: // SAMPLER_EXTERNAL_OES\n\n\t\t\tcase 0x8dca: // INT_SAMPLER_2D\n\n\t\t\tcase 0x8dd2: // UNSIGNED_INT_SAMPLER_2D\n\n\t\t\tcase 0x8b62:\n\t\t\t\t// SAMPLER_2D_SHADOW\n\t\t\t\treturn setValueT1;\n\n\t\t\tcase 0x8b5f: // SAMPLER_3D\n\n\t\t\tcase 0x8dcb: // INT_SAMPLER_3D\n\n\t\t\tcase 0x8dd3:\n\t\t\t\t// UNSIGNED_INT_SAMPLER_3D\n\t\t\t\treturn setValueT3D1;\n\n\t\t\tcase 0x8b60: // SAMPLER_CUBE\n\n\t\t\tcase 0x8dcc: // INT_SAMPLER_CUBE\n\n\t\t\tcase 0x8dd4: // UNSIGNED_INT_SAMPLER_CUBE\n\n\t\t\tcase 0x8dc5:\n\t\t\t\t// SAMPLER_CUBE_SHADOW\n\t\t\t\treturn setValueT6;\n\n\t\t\tcase 0x8dc1: // SAMPLER_2D_ARRAY\n\n\t\t\tcase 0x8dcf: // INT_SAMPLER_2D_ARRAY\n\n\t\t\tcase 0x8dd7: // UNSIGNED_INT_SAMPLER_2D_ARRAY\n\n\t\t\tcase 0x8dc4:\n\t\t\t\t// SAMPLER_2D_ARRAY_SHADOW\n\t\t\t\treturn setValueT2DArray1;\n\t\t}\n\t} // Array of scalars\n\n\n\tfunction setValueV1fArray(gl, v) {\n\t\tgl.uniform1fv(this.addr, v);\n\t} // Array of vectors (from flat array or array of THREE.VectorN)\n\n\n\tfunction setValueV2fArray(gl, v) {\n\t\tconst data = flatten(v, this.size, 2);\n\t\tgl.uniform2fv(this.addr, data);\n\t}\n\n\tfunction setValueV3fArray(gl, v) {\n\t\tconst data = flatten(v, this.size, 3);\n\t\tgl.uniform3fv(this.addr, data);\n\t}\n\n\tfunction setValueV4fArray(gl, v) {\n\t\tconst data = flatten(v, this.size, 4);\n\t\tgl.uniform4fv(this.addr, data);\n\t} // Array of matrices (from flat array or array of THREE.MatrixN)\n\n\n\tfunction setValueM2Array(gl, v) {\n\t\tconst data = flatten(v, this.size, 4);\n\t\tgl.uniformMatrix2fv(this.addr, false, data);\n\t}\n\n\tfunction setValueM3Array(gl, v) {\n\t\tconst data = flatten(v, this.size, 9);\n\t\tgl.uniformMatrix3fv(this.addr, false, data);\n\t}\n\n\tfunction setValueM4Array(gl, v) {\n\t\tconst data = flatten(v, this.size, 16);\n\t\tgl.uniformMatrix4fv(this.addr, false, data);\n\t} // Array of integer / boolean\n\n\n\tfunction setValueV1iArray(gl, v) {\n\t\tgl.uniform1iv(this.addr, v);\n\t} // Array of integer / boolean vectors (from flat array)\n\n\n\tfunction setValueV2iArray(gl, v) {\n\t\tgl.uniform2iv(this.addr, v);\n\t}\n\n\tfunction setValueV3iArray(gl, v) {\n\t\tgl.uniform3iv(this.addr, v);\n\t}\n\n\tfunction setValueV4iArray(gl, v) {\n\t\tgl.uniform4iv(this.addr, v);\n\t} // Array of unsigned integer\n\n\n\tfunction setValueV1uiArray(gl, v) {\n\t\tgl.uniform1uiv(this.addr, v);\n\t} // Array of unsigned integer vectors (from flat array)\n\n\n\tfunction setValueV2uiArray(gl, v) {\n\t\tgl.uniform2uiv(this.addr, v);\n\t}\n\n\tfunction setValueV3uiArray(gl, v) {\n\t\tgl.uniform3uiv(this.addr, v);\n\t}\n\n\tfunction setValueV4uiArray(gl, v) {\n\t\tgl.uniform4uiv(this.addr, v);\n\t} // Array of textures (2D / Cube)\n\n\n\tfunction setValueT1Array(gl, v, textures) {\n\t\tconst n = v.length;\n\t\tconst units = allocTexUnits(textures, n);\n\t\tgl.uniform1iv(this.addr, units);\n\n\t\tfor (let i = 0; i !== n; ++i) {\n\t\t\ttextures.safeSetTexture2D(v[i] || emptyTexture, units[i]);\n\t\t}\n\t}\n\n\tfunction setValueT6Array(gl, v, textures) {\n\t\tconst n = v.length;\n\t\tconst units = allocTexUnits(textures, n);\n\t\tgl.uniform1iv(this.addr, units);\n\n\t\tfor (let i = 0; i !== n; ++i) {\n\t\t\ttextures.safeSetTextureCube(v[i] || emptyCubeTexture, units[i]);\n\t\t}\n\t} // Helper to pick the right setter for a pure (bottom-level) array\n\n\n\tfunction getPureArraySetter(type) {\n\t\tswitch (type) {\n\t\t\tcase 0x1406:\n\t\t\t\treturn setValueV1fArray;\n\t\t\t// FLOAT\n\n\t\t\tcase 0x8b50:\n\t\t\t\treturn setValueV2fArray;\n\t\t\t// _VEC2\n\n\t\t\tcase 0x8b51:\n\t\t\t\treturn setValueV3fArray;\n\t\t\t// _VEC3\n\n\t\t\tcase 0x8b52:\n\t\t\t\treturn setValueV4fArray;\n\t\t\t// _VEC4\n\n\t\t\tcase 0x8b5a:\n\t\t\t\treturn setValueM2Array;\n\t\t\t// _MAT2\n\n\t\t\tcase 0x8b5b:\n\t\t\t\treturn setValueM3Array;\n\t\t\t// _MAT3\n\n\t\t\tcase 0x8b5c:\n\t\t\t\treturn setValueM4Array;\n\t\t\t// _MAT4\n\n\t\t\tcase 0x1404:\n\t\t\tcase 0x8b56:\n\t\t\t\treturn setValueV1iArray;\n\t\t\t// INT, BOOL\n\n\t\t\tcase 0x8b53:\n\t\t\tcase 0x8b57:\n\t\t\t\treturn setValueV2iArray;\n\t\t\t// _VEC2\n\n\t\t\tcase 0x8b54:\n\t\t\tcase 0x8b58:\n\t\t\t\treturn setValueV3iArray;\n\t\t\t// _VEC3\n\n\t\t\tcase 0x8b55:\n\t\t\tcase 0x8b59:\n\t\t\t\treturn setValueV4iArray;\n\t\t\t// _VEC4\n\n\t\t\tcase 0x1405:\n\t\t\t\treturn setValueV1uiArray;\n\t\t\t// UINT\n\n\t\t\tcase 0x8dc6:\n\t\t\t\treturn setValueV2uiArray;\n\t\t\t// _VEC2\n\n\t\t\tcase 0x8dc7:\n\t\t\t\treturn setValueV3uiArray;\n\t\t\t// _VEC3\n\n\t\t\tcase 0x8dc8:\n\t\t\t\treturn setValueV4uiArray;\n\t\t\t// _VEC4\n\n\t\t\tcase 0x8b5e: // SAMPLER_2D\n\n\t\t\tcase 0x8d66: // SAMPLER_EXTERNAL_OES\n\n\t\t\tcase 0x8dca: // INT_SAMPLER_2D\n\n\t\t\tcase 0x8dd2: // UNSIGNED_INT_SAMPLER_2D\n\n\t\t\tcase 0x8b62:\n\t\t\t\t// SAMPLER_2D_SHADOW\n\t\t\t\treturn setValueT1Array;\n\n\t\t\tcase 0x8b60: // SAMPLER_CUBE\n\n\t\t\tcase 0x8dcc: // INT_SAMPLER_CUBE\n\n\t\t\tcase 0x8dd4: // UNSIGNED_INT_SAMPLER_CUBE\n\n\t\t\tcase 0x8dc5:\n\t\t\t\t// SAMPLER_CUBE_SHADOW\n\t\t\t\treturn setValueT6Array;\n\t\t}\n\t} // --- Uniform Classes ---\n\n\n\tfunction SingleUniform(id, activeInfo, addr) {\n\t\tthis.id = id;\n\t\tthis.addr = addr;\n\t\tthis.cache = [];\n\t\tthis.setValue = getSingularSetter(activeInfo.type); // this.path = activeInfo.name; // DEBUG\n\t}\n\n\tfunction PureArrayUniform(id, activeInfo, addr) {\n\t\tthis.id = id;\n\t\tthis.addr = addr;\n\t\tthis.cache = [];\n\t\tthis.size = activeInfo.size;\n\t\tthis.setValue = getPureArraySetter(activeInfo.type); // this.path = activeInfo.name; // DEBUG\n\t}\n\n\tPureArrayUniform.prototype.updateCache = function (data) {\n\t\tconst cache = this.cache;\n\n\t\tif (data instanceof Float32Array && cache.length !== data.length) {\n\t\t\tthis.cache = new Float32Array(data.length);\n\t\t}\n\n\t\tcopyArray(cache, data);\n\t};\n\n\tfunction StructuredUniform(id) {\n\t\tthis.id = id;\n\t\tthis.seq = [];\n\t\tthis.map = {};\n\t}\n\n\tStructuredUniform.prototype.setValue = function (gl, value, textures) {\n\t\tconst seq = this.seq;\n\n\t\tfor (let i = 0, n = seq.length; i !== n; ++i) {\n\t\t\tconst u = seq[i];\n\t\t\tu.setValue(gl, value[u.id], textures);\n\t\t}\n\t}; // --- Top-level ---\n\t// Parser - builds up the property tree from the path strings\n\n\n\tconst RePathPart = /(\\w+)(\\])?(\\[|\\.)?/g; // extracts\n\t// \t- the identifier (member name or array index)\n\t//\t- followed by an optional right bracket (found when array index)\n\t//\t- followed by an optional left bracket or dot (type of subscript)\n\t//\n\t// Note: These portions can be read in a non-overlapping fashion and\n\t// allow straightforward parsing of the hierarchy that WebGL encodes\n\t// in the uniform names.\n\n\tfunction addUniform(container, uniformObject) {\n\t\tcontainer.seq.push(uniformObject);\n\t\tcontainer.map[uniformObject.id] = uniformObject;\n\t}\n\n\tfunction parseUniform(activeInfo, addr, container) {\n\t\tconst path = activeInfo.name,\n\t\t\t\t\tpathLength = path.length; // reset RegExp object, because of the early exit of a previous run\n\n\t\tRePathPart.lastIndex = 0;\n\n\t\twhile (true) {\n\t\t\tconst match = RePathPart.exec(path),\n\t\t\t\t\t\tmatchEnd = RePathPart.lastIndex;\n\t\t\tlet id = match[1];\n\t\t\tconst idIsIndex = match[2] === ']',\n\t\t\t\t\t\tsubscript = match[3];\n\t\t\tif (idIsIndex) id = id | 0; // convert to integer\n\n\t\t\tif (subscript === undefined || subscript === '[' && matchEnd + 2 === pathLength) {\n\t\t\t\t// bare name or \"pure\" bottom-level array \"[0]\" suffix\n\t\t\t\taddUniform(container, subscript === undefined ? new SingleUniform(id, activeInfo, addr) : new PureArrayUniform(id, activeInfo, addr));\n\t\t\t\tbreak;\n\t\t\t} else {\n\t\t\t\t// step into inner node / create it in case it doesn't exist\n\t\t\t\tconst map = container.map;\n\t\t\t\tlet next = map[id];\n\n\t\t\t\tif (next === undefined) {\n\t\t\t\t\tnext = new StructuredUniform(id);\n\t\t\t\t\taddUniform(container, next);\n\t\t\t\t}\n\n\t\t\t\tcontainer = next;\n\t\t\t}\n\t\t}\n\t} // Root Container\n\n\n\tfunction WebGLUniforms(gl, program) {\n\t\tthis.seq = [];\n\t\tthis.map = {};\n\t\tconst n = gl.getProgramParameter(program, gl.ACTIVE_UNIFORMS);\n\n\t\tfor (let i = 0; i < n; ++i) {\n\t\t\tconst info = gl.getActiveUniform(program, i),\n\t\t\t\t\t\taddr = gl.getUniformLocation(program, info.name);\n\t\t\tparseUniform(info, addr, this);\n\t\t}\n\t}\n\n\tWebGLUniforms.prototype.setValue = function (gl, name, value, textures) {\n\t\tconst u = this.map[name];\n\t\tif (u !== undefined) u.setValue(gl, value, textures);\n\t};\n\n\tWebGLUniforms.prototype.setOptional = function (gl, object, name) {\n\t\tconst v = object[name];\n\t\tif (v !== undefined) this.setValue(gl, name, v);\n\t}; // Static interface\n\n\n\tWebGLUniforms.upload = function (gl, seq, values, textures) {\n\t\tfor (let i = 0, n = seq.length; i !== n; ++i) {\n\t\t\tconst u = seq[i],\n\t\t\t\t\t\tv = values[u.id];\n\n\t\t\tif (v.needsUpdate !== false) {\n\t\t\t\t// note: always updating when .needsUpdate is undefined\n\t\t\t\tu.setValue(gl, v.value, textures);\n\t\t\t}\n\t\t}\n\t};\n\n\tWebGLUniforms.seqWithValue = function (seq, values) {\n\t\tconst r = [];\n\n\t\tfor (let i = 0, n = seq.length; i !== n; ++i) {\n\t\t\tconst u = seq[i];\n\t\t\tif (u.id in values) r.push(u);\n\t\t}\n\n\t\treturn r;\n\t};\n\n\tfunction WebGLShader(gl, type, string) {\n\t\tconst shader = gl.createShader(type);\n\t\tgl.shaderSource(shader, string);\n\t\tgl.compileShader(shader);\n\t\treturn shader;\n\t}\n\n\tlet programIdCount = 0;\n\n\tfunction addLineNumbers(string) {\n\t\tconst lines = string.split('\\n');\n\n\t\tfor (let i = 0; i < lines.length; i++) {\n\t\t\tlines[i] = i + 1 + ': ' + lines[i];\n\t\t}\n\n\t\treturn lines.join('\\n');\n\t}\n\n\tfunction getEncodingComponents(encoding) {\n\t\tswitch (encoding) {\n\t\t\tcase LinearEncoding:\n\t\t\t\treturn ['Linear', '( value )'];\n\n\t\t\tcase sRGBEncoding:\n\t\t\t\treturn ['sRGB', '( value )'];\n\n\t\t\tcase RGBEEncoding:\n\t\t\t\treturn ['RGBE', '( value )'];\n\n\t\t\tcase RGBM7Encoding:\n\t\t\t\treturn ['RGBM', '( value, 7.0 )'];\n\n\t\t\tcase RGBM16Encoding:\n\t\t\t\treturn ['RGBM', '( value, 16.0 )'];\n\n\t\t\tcase RGBDEncoding:\n\t\t\t\treturn ['RGBD', '( value, 256.0 )'];\n\n\t\t\tcase GammaEncoding:\n\t\t\t\treturn ['Gamma', '( value, float( GAMMA_FACTOR ) )'];\n\n\t\t\tcase LogLuvEncoding:\n\t\t\t\treturn ['LogLuv', '( value )'];\n\n\t\t\tdefault:\n\t\t\t\tconsole.warn('THREE.WebGLProgram: Unsupported encoding:', encoding);\n\t\t\t\treturn ['Linear', '( value )'];\n\t\t}\n\t}\n\n\tfunction getShaderErrors(gl, shader, type) {\n\t\tconst status = gl.getShaderParameter(shader, gl.COMPILE_STATUS);\n\t\tconst errors = gl.getShaderInfoLog(shader).trim();\n\t\tif (status && errors === '') return ''; // --enable-privileged-webgl-extension\n\t\t// console.log( '**' + type + '**', gl.getExtension( 'WEBGL_debug_shaders' ).getTranslatedShaderSource( shader ) );\n\n\t\treturn type.toUpperCase() + '\\n\\n' + errors + '\\n\\n' + addLineNumbers(gl.getShaderSource(shader));\n\t}\n\n\tfunction getTexelDecodingFunction(functionName, encoding) {\n\t\tconst components = getEncodingComponents(encoding);\n\t\treturn 'vec4 ' + functionName + '( vec4 value ) { return ' + components[0] + 'ToLinear' + components[1] + '; }';\n\t}\n\n\tfunction getTexelEncodingFunction(functionName, encoding) {\n\t\tconst components = getEncodingComponents(encoding);\n\t\treturn 'vec4 ' + functionName + '( vec4 value ) { return LinearTo' + components[0] + components[1] + '; }';\n\t}\n\n\tfunction getToneMappingFunction(functionName, toneMapping) {\n\t\tlet toneMappingName;\n\n\t\tswitch (toneMapping) {\n\t\t\tcase LinearToneMapping:\n\t\t\t\ttoneMappingName = 'Linear';\n\t\t\t\tbreak;\n\n\t\t\tcase ReinhardToneMapping:\n\t\t\t\ttoneMappingName = 'Reinhard';\n\t\t\t\tbreak;\n\n\t\t\tcase CineonToneMapping:\n\t\t\t\ttoneMappingName = 'OptimizedCineon';\n\t\t\t\tbreak;\n\n\t\t\tcase ACESFilmicToneMapping:\n\t\t\t\ttoneMappingName = 'ACESFilmic';\n\t\t\t\tbreak;\n\n\t\t\tcase CustomToneMapping:\n\t\t\t\ttoneMappingName = 'Custom';\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tconsole.warn('THREE.WebGLProgram: Unsupported toneMapping:', toneMapping);\n\t\t\t\ttoneMappingName = 'Linear';\n\t\t}\n\n\t\treturn 'vec3 ' + functionName + '( vec3 color ) { return ' + toneMappingName + 'ToneMapping( color ); }';\n\t}\n\n\tfunction generateExtensions(parameters) {\n\t\tconst chunks = [parameters.extensionDerivatives || parameters.envMapCubeUV || parameters.bumpMap || parameters.tangentSpaceNormalMap || parameters.clearcoatNormalMap || parameters.flatShading || parameters.shaderID === 'physical' ? '#extension GL_OES_standard_derivatives : enable' : '', (parameters.extensionFragDepth || parameters.logarithmicDepthBuffer) && parameters.rendererExtensionFragDepth ? '#extension GL_EXT_frag_depth : enable' : '', parameters.extensionDrawBuffers && parameters.rendererExtensionDrawBuffers ? '#extension GL_EXT_draw_buffers : require' : '', (parameters.extensionShaderTextureLOD || parameters.envMap || parameters.transmission) && parameters.rendererExtensionShaderTextureLod ? '#extension GL_EXT_shader_texture_lod : enable' : ''];\n\t\treturn chunks.filter(filterEmptyLine).join('\\n');\n\t}\n\n\tfunction generateDefines(defines) {\n\t\tconst chunks = [];\n\n\t\tfor (const name in defines) {\n\t\t\tconst value = defines[name];\n\t\t\tif (value === false) continue;\n\t\t\tchunks.push('#define ' + name + ' ' + value);\n\t\t}\n\n\t\treturn chunks.join('\\n');\n\t}\n\n\tfunction fetchAttributeLocations(gl, program) {\n\t\tconst attributes = {};\n\t\tconst n = gl.getProgramParameter(program, gl.ACTIVE_ATTRIBUTES);\n\n\t\tfor (let i = 0; i < n; i++) {\n\t\t\tconst info = gl.getActiveAttrib(program, i);\n\t\t\tconst name = info.name;\n\t\t\tlet locationSize = 1;\n\t\t\tif (info.type === gl.FLOAT_MAT2) locationSize = 2;\n\t\t\tif (info.type === gl.FLOAT_MAT3) locationSize = 3;\n\t\t\tif (info.type === gl.FLOAT_MAT4) locationSize = 4; // console.log( 'THREE.WebGLProgram: ACTIVE VERTEX ATTRIBUTE:', name, i );\n\n\t\t\tattributes[name] = {\n\t\t\t\ttype: info.type,\n\t\t\t\tlocation: gl.getAttribLocation(program, name),\n\t\t\t\tlocationSize: locationSize\n\t\t\t};\n\t\t}\n\n\t\treturn attributes;\n\t}\n\n\tfunction filterEmptyLine(string) {\n\t\treturn string !== '';\n\t}\n\n\tfunction replaceLightNums(string, parameters) {\n\t\treturn string.replace(/NUM_DIR_LIGHTS/g, parameters.numDirLights).replace(/NUM_SPOT_LIGHTS/g, parameters.numSpotLights).replace(/NUM_RECT_AREA_LIGHTS/g, parameters.numRectAreaLights).replace(/NUM_POINT_LIGHTS/g, parameters.numPointLights).replace(/NUM_HEMI_LIGHTS/g, parameters.numHemiLights).replace(/NUM_DIR_LIGHT_SHADOWS/g, parameters.numDirLightShadows).replace(/NUM_SPOT_LIGHT_SHADOWS/g, parameters.numSpotLightShadows).replace(/NUM_POINT_LIGHT_SHADOWS/g, parameters.numPointLightShadows);\n\t}\n\n\tfunction replaceClippingPlaneNums(string, parameters) {\n\t\treturn string.replace(/NUM_CLIPPING_PLANES/g, parameters.numClippingPlanes).replace(/UNION_CLIPPING_PLANES/g, parameters.numClippingPlanes - parameters.numClipIntersection);\n\t} // Resolve Includes\n\n\n\tconst includePattern = /^[ \\t]*#include +<([\\w\\d./]+)>/gm;\n\n\tfunction resolveIncludes(string) {\n\t\treturn string.replace(includePattern, includeReplacer);\n\t}\n\n\tfunction includeReplacer(match, include) {\n\t\tconst string = ShaderChunk[include];\n\n\t\tif (string === undefined) {\n\t\t\tthrow new Error('Can not resolve #include <' + include + '>');\n\t\t}\n\n\t\treturn resolveIncludes(string);\n\t} // Unroll Loops\n\n\n\tconst deprecatedUnrollLoopPattern = /#pragma unroll_loop[\\s]+?for \\( int i \\= (\\d+)\\; i < (\\d+)\\; i \\+\\+ \\) \\{([\\s\\S]+?)(?=\\})\\}/g;\n\tconst unrollLoopPattern = /#pragma unroll_loop_start\\s+for\\s*\\(\\s*int\\s+i\\s*=\\s*(\\d+)\\s*;\\s*i\\s*<\\s*(\\d+)\\s*;\\s*i\\s*\\+\\+\\s*\\)\\s*{([\\s\\S]+?)}\\s+#pragma unroll_loop_end/g;\n\n\tfunction unrollLoops(string) {\n\t\treturn string.replace(unrollLoopPattern, loopReplacer).replace(deprecatedUnrollLoopPattern, deprecatedLoopReplacer);\n\t}\n\n\tfunction deprecatedLoopReplacer(match, start, end, snippet) {\n\t\tconsole.warn('WebGLProgram: #pragma unroll_loop shader syntax is deprecated. Please use #pragma unroll_loop_start syntax instead.');\n\t\treturn loopReplacer(match, start, end, snippet);\n\t}\n\n\tfunction loopReplacer(match, start, end, snippet) {\n\t\tlet string = '';\n\n\t\tfor (let i = parseInt(start); i < parseInt(end); i++) {\n\t\t\tstring += snippet.replace(/\\[\\s*i\\s*\\]/g, '[ ' + i + ' ]').replace(/UNROLLED_LOOP_INDEX/g, i);\n\t\t}\n\n\t\treturn string;\n\t} //\n\n\n\tfunction generatePrecision(parameters) {\n\t\tlet precisionstring = 'precision ' + parameters.precision + ' float;\\nprecision ' + parameters.precision + ' int;';\n\n\t\tif (parameters.precision === 'highp') {\n\t\t\tprecisionstring += '\\n#define HIGH_PRECISION';\n\t\t} else if (parameters.precision === 'mediump') {\n\t\t\tprecisionstring += '\\n#define MEDIUM_PRECISION';\n\t\t} else if (parameters.precision === 'lowp') {\n\t\t\tprecisionstring += '\\n#define LOW_PRECISION';\n\t\t}\n\n\t\treturn precisionstring;\n\t}\n\n\tfunction generateShadowMapTypeDefine(parameters) {\n\t\tlet shadowMapTypeDefine = 'SHADOWMAP_TYPE_BASIC';\n\n\t\tif (parameters.shadowMapType === PCFShadowMap) {\n\t\t\tshadowMapTypeDefine = 'SHADOWMAP_TYPE_PCF';\n\t\t} else if (parameters.shadowMapType === PCFSoftShadowMap) {\n\t\t\tshadowMapTypeDefine = 'SHADOWMAP_TYPE_PCF_SOFT';\n\t\t} else if (parameters.shadowMapType === VSMShadowMap) {\n\t\t\tshadowMapTypeDefine = 'SHADOWMAP_TYPE_VSM';\n\t\t}\n\n\t\treturn shadowMapTypeDefine;\n\t}\n\n\tfunction generateEnvMapTypeDefine(parameters) {\n\t\tlet envMapTypeDefine = 'ENVMAP_TYPE_CUBE';\n\n\t\tif (parameters.envMap) {\n\t\t\tswitch (parameters.envMapMode) {\n\t\t\t\tcase CubeReflectionMapping:\n\t\t\t\tcase CubeRefractionMapping:\n\t\t\t\t\tenvMapTypeDefine = 'ENVMAP_TYPE_CUBE';\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase CubeUVReflectionMapping:\n\t\t\t\tcase CubeUVRefractionMapping:\n\t\t\t\t\tenvMapTypeDefine = 'ENVMAP_TYPE_CUBE_UV';\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\treturn envMapTypeDefine;\n\t}\n\n\tfunction generateEnvMapModeDefine(parameters) {\n\t\tlet envMapModeDefine = 'ENVMAP_MODE_REFLECTION';\n\n\t\tif (parameters.envMap) {\n\t\t\tswitch (parameters.envMapMode) {\n\t\t\t\tcase CubeRefractionMapping:\n\t\t\t\tcase CubeUVRefractionMapping:\n\t\t\t\t\tenvMapModeDefine = 'ENVMAP_MODE_REFRACTION';\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\treturn envMapModeDefine;\n\t}\n\n\tfunction generateEnvMapBlendingDefine(parameters) {\n\t\tlet envMapBlendingDefine = 'ENVMAP_BLENDING_NONE';\n\n\t\tif (parameters.envMap) {\n\t\t\tswitch (parameters.combine) {\n\t\t\t\tcase MultiplyOperation:\n\t\t\t\t\tenvMapBlendingDefine = 'ENVMAP_BLENDING_MULTIPLY';\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase MixOperation:\n\t\t\t\t\tenvMapBlendingDefine = 'ENVMAP_BLENDING_MIX';\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase AddOperation:\n\t\t\t\t\tenvMapBlendingDefine = 'ENVMAP_BLENDING_ADD';\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\treturn envMapBlendingDefine;\n\t}\n\n\tfunction WebGLProgram(renderer, cacheKey, parameters, bindingStates) {\n\t\t// TODO Send this event to Three.js DevTools\n\t\t// console.log( 'WebGLProgram', cacheKey );\n\t\tconst gl = renderer.getContext();\n\t\tconst defines = parameters.defines;\n\t\tlet vertexShader = parameters.vertexShader;\n\t\tlet fragmentShader = parameters.fragmentShader;\n\t\tconst shadowMapTypeDefine = generateShadowMapTypeDefine(parameters);\n\t\tconst envMapTypeDefine = generateEnvMapTypeDefine(parameters);\n\t\tconst envMapModeDefine = generateEnvMapModeDefine(parameters);\n\t\tconst envMapBlendingDefine = generateEnvMapBlendingDefine(parameters);\n\t\tconst gammaFactorDefine = renderer.gammaFactor > 0 ? renderer.gammaFactor : 1.0;\n\t\tconst customExtensions = parameters.isWebGL2 ? '' : generateExtensions(parameters);\n\t\tconst customDefines = generateDefines(defines);\n\t\tconst program = gl.createProgram();\n\t\tlet prefixVertex, prefixFragment;\n\t\tlet versionString = parameters.glslVersion ? '#version ' + parameters.glslVersion + '\\n' : '';\n\n\t\tif (parameters.isRawShaderMaterial) {\n\t\t\tprefixVertex = [customDefines].filter(filterEmptyLine).join('\\n');\n\n\t\t\tif (prefixVertex.length > 0) {\n\t\t\t\tprefixVertex += '\\n';\n\t\t\t}\n\n\t\t\tprefixFragment = [customExtensions, customDefines].filter(filterEmptyLine).join('\\n');\n\n\t\t\tif (prefixFragment.length > 0) {\n\t\t\t\tprefixFragment += '\\n';\n\t\t\t}\n\t\t} else {\n\t\t\tprefixVertex = [generatePrecision(parameters), '#define SHADER_NAME ' + parameters.shaderName, customDefines, parameters.instancing ? '#define USE_INSTANCING' : '', parameters.instancingColor ? '#define USE_INSTANCING_COLOR' : '', parameters.supportsVertexTextures ? '#define VERTEX_TEXTURES' : '', '#define GAMMA_FACTOR ' + gammaFactorDefine, '#define MAX_BONES ' + parameters.maxBones, parameters.useFog && parameters.fog ? '#define USE_FOG' : '', parameters.useFog && parameters.fogExp2 ? '#define FOG_EXP2' : '', parameters.map ? '#define USE_MAP' : '', parameters.envMap ? '#define USE_ENVMAP' : '', parameters.envMap ? '#define ' + envMapModeDefine : '', parameters.lightMap ? '#define USE_LIGHTMAP' : '', parameters.aoMap ? '#define USE_AOMAP' : '', parameters.emissiveMap ? '#define USE_EMISSIVEMAP' : '', parameters.bumpMap ? '#define USE_BUMPMAP' : '', parameters.normalMap ? '#define USE_NORMALMAP' : '', parameters.normalMap && parameters.objectSpaceNormalMap ? '#define OBJECTSPACE_NORMALMAP' : '', parameters.normalMap && parameters.tangentSpaceNormalMap ? '#define TANGENTSPACE_NORMALMAP' : '', parameters.clearcoatMap ? '#define USE_CLEARCOATMAP' : '', parameters.clearcoatRoughnessMap ? '#define USE_CLEARCOAT_ROUGHNESSMAP' : '', parameters.clearcoatNormalMap ? '#define USE_CLEARCOAT_NORMALMAP' : '', parameters.displacementMap && parameters.supportsVertexTextures ? '#define USE_DISPLACEMENTMAP' : '', parameters.specularMap ? '#define USE_SPECULARMAP' : '', parameters.specularIntensityMap ? '#define USE_SPECULARINTENSITYMAP' : '', parameters.specularColorMap ? '#define USE_SPECULARCOLORMAP' : '', parameters.roughnessMap ? '#define USE_ROUGHNESSMAP' : '', parameters.metalnessMap ? '#define USE_METALNESSMAP' : '', parameters.alphaMap ? '#define USE_ALPHAMAP' : '', parameters.transmission ? '#define USE_TRANSMISSION' : '', parameters.transmissionMap ? '#define USE_TRANSMISSIONMAP' : '', parameters.thicknessMap ? '#define USE_THICKNESSMAP' : '', parameters.sheenColorMap ? '#define USE_SHEENCOLORMAP' : '', parameters.sheenRoughnessMap ? '#define USE_SHEENROUGHNESSMAP' : '', parameters.vertexTangents ? '#define USE_TANGENT' : '', parameters.vertexColors ? '#define USE_COLOR' : '', parameters.vertexAlphas ? '#define USE_COLOR_ALPHA' : '', parameters.vertexUvs ? '#define USE_UV' : '', parameters.uvsVertexOnly ? '#define UVS_VERTEX_ONLY' : '', parameters.flatShading ? '#define FLAT_SHADED' : '', parameters.skinning ? '#define USE_SKINNING' : '', parameters.useVertexTexture ? '#define BONE_TEXTURE' : '', parameters.morphTargets ? '#define USE_MORPHTARGETS' : '', parameters.morphNormals && parameters.flatShading === false ? '#define USE_MORPHNORMALS' : '', parameters.morphTargets && parameters.isWebGL2 ? '#define MORPHTARGETS_TEXTURE' : '', parameters.morphTargets && parameters.isWebGL2 ? '#define MORPHTARGETS_COUNT ' + parameters.morphTargetsCount : '', parameters.doubleSided ? '#define DOUBLE_SIDED' : '', parameters.flipSided ? '#define FLIP_SIDED' : '', parameters.shadowMapEnabled ? '#define USE_SHADOWMAP' : '', parameters.shadowMapEnabled ? '#define ' + shadowMapTypeDefine : '', parameters.sizeAttenuation ? '#define USE_SIZEATTENUATION' : '', parameters.logarithmicDepthBuffer ? '#define USE_LOGDEPTHBUF' : '', parameters.logarithmicDepthBuffer && parameters.rendererExtensionFragDepth ? '#define USE_LOGDEPTHBUF_EXT' : '', 'uniform mat4 modelMatrix;', 'uniform mat4 modelViewMatrix;', 'uniform mat4 projectionMatrix;', 'uniform mat4 viewMatrix;', 'uniform mat3 normalMatrix;', 'uniform vec3 cameraPosition;', 'uniform bool isOrthographic;', '#ifdef USE_INSTANCING', '\tattribute mat4 instanceMatrix;', '#endif', '#ifdef USE_INSTANCING_COLOR', '\tattribute vec3 instanceColor;', '#endif', 'attribute vec3 position;', 'attribute vec3 normal;', 'attribute vec2 uv;', '#ifdef USE_TANGENT', '\tattribute vec4 tangent;', '#endif', '#if defined( USE_COLOR_ALPHA )', '\tattribute vec4 color;', '#elif defined( USE_COLOR )', '\tattribute vec3 color;', '#endif', '#if ( defined( USE_MORPHTARGETS ) && ! defined( MORPHTARGETS_TEXTURE ) )', '\tattribute vec3 morphTarget0;', '\tattribute vec3 morphTarget1;', '\tattribute vec3 morphTarget2;', '\tattribute vec3 morphTarget3;', '\t#ifdef USE_MORPHNORMALS', '\t\tattribute vec3 morphNormal0;', '\t\tattribute vec3 morphNormal1;', '\t\tattribute vec3 morphNormal2;', '\t\tattribute vec3 morphNormal3;', '\t#else', '\t\tattribute vec3 morphTarget4;', '\t\tattribute vec3 morphTarget5;', '\t\tattribute vec3 morphTarget6;', '\t\tattribute vec3 morphTarget7;', '\t#endif', '#endif', '#ifdef USE_SKINNING', '\tattribute vec4 skinIndex;', '\tattribute vec4 skinWeight;', '#endif', '\\n'].filter(filterEmptyLine).join('\\n');\n\t\t\tprefixFragment = [customExtensions, generatePrecision(parameters), '#define SHADER_NAME ' + parameters.shaderName, customDefines, '#define GAMMA_FACTOR ' + gammaFactorDefine, parameters.useFog && parameters.fog ? '#define USE_FOG' : '', parameters.useFog && parameters.fogExp2 ? '#define FOG_EXP2' : '', parameters.map ? '#define USE_MAP' : '', parameters.matcap ? '#define USE_MATCAP' : '', parameters.envMap ? '#define USE_ENVMAP' : '', parameters.envMap ? '#define ' + envMapTypeDefine : '', parameters.envMap ? '#define ' + envMapModeDefine : '', parameters.envMap ? '#define ' + envMapBlendingDefine : '', parameters.lightMap ? '#define USE_LIGHTMAP' : '', parameters.aoMap ? '#define USE_AOMAP' : '', parameters.emissiveMap ? '#define USE_EMISSIVEMAP' : '', parameters.bumpMap ? '#define USE_BUMPMAP' : '', parameters.normalMap ? '#define USE_NORMALMAP' : '', parameters.normalMap && parameters.objectSpaceNormalMap ? '#define OBJECTSPACE_NORMALMAP' : '', parameters.normalMap && parameters.tangentSpaceNormalMap ? '#define TANGENTSPACE_NORMALMAP' : '', parameters.clearcoat ? '#define USE_CLEARCOAT' : '', parameters.clearcoatMap ? '#define USE_CLEARCOATMAP' : '', parameters.clearcoatRoughnessMap ? '#define USE_CLEARCOAT_ROUGHNESSMAP' : '', parameters.clearcoatNormalMap ? '#define USE_CLEARCOAT_NORMALMAP' : '', parameters.specularMap ? '#define USE_SPECULARMAP' : '', parameters.specularIntensityMap ? '#define USE_SPECULARINTENSITYMAP' : '', parameters.specularColorMap ? '#define USE_SPECULARCOLORMAP' : '', parameters.roughnessMap ? '#define USE_ROUGHNESSMAP' : '', parameters.metalnessMap ? '#define USE_METALNESSMAP' : '', parameters.alphaMap ? '#define USE_ALPHAMAP' : '', parameters.alphaTest ? '#define USE_ALPHATEST' : '', parameters.sheen ? '#define USE_SHEEN' : '', parameters.sheenColorMap ? '#define USE_SHEENCOLORMAP' : '', parameters.sheenRoughnessMap ? '#define USE_SHEENROUGHNESSMAP' : '', parameters.transmission ? '#define USE_TRANSMISSION' : '', parameters.transmissionMap ? '#define USE_TRANSMISSIONMAP' : '', parameters.thicknessMap ? '#define USE_THICKNESSMAP' : '', parameters.vertexTangents ? '#define USE_TANGENT' : '', parameters.vertexColors || parameters.instancingColor ? '#define USE_COLOR' : '', parameters.vertexAlphas ? '#define USE_COLOR_ALPHA' : '', parameters.vertexUvs ? '#define USE_UV' : '', parameters.uvsVertexOnly ? '#define UVS_VERTEX_ONLY' : '', parameters.gradientMap ? '#define USE_GRADIENTMAP' : '', parameters.flatShading ? '#define FLAT_SHADED' : '', parameters.doubleSided ? '#define DOUBLE_SIDED' : '', parameters.flipSided ? '#define FLIP_SIDED' : '', parameters.shadowMapEnabled ? '#define USE_SHADOWMAP' : '', parameters.shadowMapEnabled ? '#define ' + shadowMapTypeDefine : '', parameters.premultipliedAlpha ? '#define PREMULTIPLIED_ALPHA' : '', parameters.physicallyCorrectLights ? '#define PHYSICALLY_CORRECT_LIGHTS' : '', parameters.logarithmicDepthBuffer ? '#define USE_LOGDEPTHBUF' : '', parameters.logarithmicDepthBuffer && parameters.rendererExtensionFragDepth ? '#define USE_LOGDEPTHBUF_EXT' : '', (parameters.extensionShaderTextureLOD || parameters.envMap) && parameters.rendererExtensionShaderTextureLod ? '#define TEXTURE_LOD_EXT' : '', 'uniform mat4 viewMatrix;', 'uniform vec3 cameraPosition;', 'uniform bool isOrthographic;', parameters.toneMapping !== NoToneMapping ? '#define TONE_MAPPING' : '', parameters.toneMapping !== NoToneMapping ? ShaderChunk['tonemapping_pars_fragment'] : '', // this code is required here because it is used by the toneMapping() function defined below\n\t\t\tparameters.toneMapping !== NoToneMapping ? getToneMappingFunction('toneMapping', parameters.toneMapping) : '', parameters.dithering ? '#define DITHERING' : '', parameters.format === RGBFormat ? '#define OPAQUE' : '', ShaderChunk['encodings_pars_fragment'], // this code is required here because it is used by the various encoding/decoding function defined below\n\t\t\tparameters.map ? getTexelDecodingFunction('mapTexelToLinear', parameters.mapEncoding) : '', parameters.matcap ? getTexelDecodingFunction('matcapTexelToLinear', parameters.matcapEncoding) : '', parameters.envMap ? getTexelDecodingFunction('envMapTexelToLinear', parameters.envMapEncoding) : '', parameters.emissiveMap ? getTexelDecodingFunction('emissiveMapTexelToLinear', parameters.emissiveMapEncoding) : '', parameters.specularColorMap ? getTexelDecodingFunction('specularColorMapTexelToLinear', parameters.specularColorMapEncoding) : '', parameters.sheenColorMap ? getTexelDecodingFunction('sheenColorMapTexelToLinear', parameters.sheenColorMapEncoding) : '', parameters.lightMap ? getTexelDecodingFunction('lightMapTexelToLinear', parameters.lightMapEncoding) : '', getTexelEncodingFunction('linearToOutputTexel', parameters.outputEncoding), parameters.depthPacking ? '#define DEPTH_PACKING ' + parameters.depthPacking : '', '\\n'].filter(filterEmptyLine).join('\\n');\n\t\t}\n\n\t\tvertexShader = resolveIncludes(vertexShader);\n\t\tvertexShader = replaceLightNums(vertexShader, parameters);\n\t\tvertexShader = replaceClippingPlaneNums(vertexShader, parameters);\n\t\tfragmentShader = resolveIncludes(fragmentShader);\n\t\tfragmentShader = replaceLightNums(fragmentShader, parameters);\n\t\tfragmentShader = replaceClippingPlaneNums(fragmentShader, parameters);\n\t\tvertexShader = unrollLoops(vertexShader);\n\t\tfragmentShader = unrollLoops(fragmentShader);\n\n\t\tif (parameters.isWebGL2 && parameters.isRawShaderMaterial !== true) {\n\t\t\t// GLSL 3.0 conversion for built-in materials and ShaderMaterial\n\t\t\tversionString = '#version 300 es\\n';\n\t\t\tprefixVertex = ['precision mediump sampler2DArray;', '#define attribute in', '#define varying out', '#define texture2D texture'].join('\\n') + '\\n' + prefixVertex;\n\t\t\tprefixFragment = ['#define varying in', parameters.glslVersion === GLSL3 ? '' : 'out highp vec4 pc_fragColor;', parameters.glslVersion === GLSL3 ? '' : '#define gl_FragColor pc_fragColor', '#define gl_FragDepthEXT gl_FragDepth', '#define texture2D texture', '#define textureCube texture', '#define texture2DProj textureProj', '#define texture2DLodEXT textureLod', '#define texture2DProjLodEXT textureProjLod', '#define textureCubeLodEXT textureLod', '#define texture2DGradEXT textureGrad', '#define texture2DProjGradEXT textureProjGrad', '#define textureCubeGradEXT textureGrad'].join('\\n') + '\\n' + prefixFragment;\n\t\t}\n\n\t\tconst vertexGlsl = versionString + prefixVertex + vertexShader;\n\t\tconst fragmentGlsl = versionString + prefixFragment + fragmentShader; // console.log( '*VERTEX*', vertexGlsl );\n\t\t// console.log( '*FRAGMENT*', fragmentGlsl );\n\n\t\tconst glVertexShader = WebGLShader(gl, gl.VERTEX_SHADER, vertexGlsl);\n\t\tconst glFragmentShader = WebGLShader(gl, gl.FRAGMENT_SHADER, fragmentGlsl);\n\t\tgl.attachShader(program, glVertexShader);\n\t\tgl.attachShader(program, glFragmentShader); // Force a particular attribute to index 0.\n\n\t\tif (parameters.index0AttributeName !== undefined) {\n\t\t\tgl.bindAttribLocation(program, 0, parameters.index0AttributeName);\n\t\t} else if (parameters.morphTargets === true) {\n\t\t\t// programs with morphTargets displace position out of attribute 0\n\t\t\tgl.bindAttribLocation(program, 0, 'position');\n\t\t}\n\n\t\tgl.linkProgram(program); // check for link errors\n\n\t\tif (renderer.debug.checkShaderErrors) {\n\t\t\tconst programLog = gl.getProgramInfoLog(program).trim();\n\t\t\tconst vertexLog = gl.getShaderInfoLog(glVertexShader).trim();\n\t\t\tconst fragmentLog = gl.getShaderInfoLog(glFragmentShader).trim();\n\t\t\tlet runnable = true;\n\t\t\tlet haveDiagnostics = true;\n\n\t\t\tif (gl.getProgramParameter(program, gl.LINK_STATUS) === false) {\n\t\t\t\trunnable = false;\n\t\t\t\tconst vertexErrors = getShaderErrors(gl, glVertexShader, 'vertex');\n\t\t\t\tconst fragmentErrors = getShaderErrors(gl, glFragmentShader, 'fragment');\n\t\t\t\tconsole.error('THREE.WebGLProgram: Shader Error ' + gl.getError() + ' - ' + 'VALIDATE_STATUS ' + gl.getProgramParameter(program, gl.VALIDATE_STATUS) + '\\n\\n' + 'Program Info Log: ' + programLog + '\\n' + vertexErrors + '\\n' + fragmentErrors);\n\t\t\t} else if (programLog !== '') {\n\t\t\t\tconsole.warn('THREE.WebGLProgram: Program Info Log:', programLog);\n\t\t\t} else if (vertexLog === '' || fragmentLog === '') {\n\t\t\t\thaveDiagnostics = false;\n\t\t\t}\n\n\t\t\tif (haveDiagnostics) {\n\t\t\t\tthis.diagnostics = {\n\t\t\t\t\trunnable: runnable,\n\t\t\t\t\tprogramLog: programLog,\n\t\t\t\t\tvertexShader: {\n\t\t\t\t\t\tlog: vertexLog,\n\t\t\t\t\t\tprefix: prefixVertex\n\t\t\t\t\t},\n\t\t\t\t\tfragmentShader: {\n\t\t\t\t\t\tlog: fragmentLog,\n\t\t\t\t\t\tprefix: prefixFragment\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t}\n\t\t} // Clean up\n\t\t// Crashes in iOS9 and iOS10. #18402\n\t\t// gl.detachShader( program, glVertexShader );\n\t\t// gl.detachShader( program, glFragmentShader );\n\n\n\t\tgl.deleteShader(glVertexShader);\n\t\tgl.deleteShader(glFragmentShader); // set up caching for uniform locations\n\n\t\tlet cachedUniforms;\n\n\t\tthis.getUniforms = function () {\n\t\t\tif (cachedUniforms === undefined) {\n\t\t\t\tcachedUniforms = new WebGLUniforms(gl, program);\n\t\t\t}\n\n\t\t\treturn cachedUniforms;\n\t\t}; // set up caching for attribute locations\n\n\n\t\tlet cachedAttributes;\n\n\t\tthis.getAttributes = function () {\n\t\t\tif (cachedAttributes === undefined) {\n\t\t\t\tcachedAttributes = fetchAttributeLocations(gl, program);\n\t\t\t}\n\n\t\t\treturn cachedAttributes;\n\t\t}; // free resource\n\n\n\t\tthis.destroy = function () {\n\t\t\tbindingStates.releaseStatesOfProgram(this);\n\t\t\tgl.deleteProgram(program);\n\t\t\tthis.program = undefined;\n\t\t}; //\n\n\n\t\tthis.name = parameters.shaderName;\n\t\tthis.id = programIdCount++;\n\t\tthis.cacheKey = cacheKey;\n\t\tthis.usedTimes = 1;\n\t\tthis.program = program;\n\t\tthis.vertexShader = glVertexShader;\n\t\tthis.fragmentShader = glFragmentShader;\n\t\treturn this;\n\t}\n\n\tfunction WebGLPrograms(renderer, cubemaps, cubeuvmaps, extensions, capabilities, bindingStates, clipping) {\n\t\tconst programs = [];\n\t\tconst isWebGL2 = capabilities.isWebGL2;\n\t\tconst logarithmicDepthBuffer = capabilities.logarithmicDepthBuffer;\n\t\tconst floatVertexTextures = capabilities.floatVertexTextures;\n\t\tconst maxVertexUniforms = capabilities.maxVertexUniforms;\n\t\tconst vertexTextures = capabilities.vertexTextures;\n\t\tlet precision = capabilities.precision;\n\t\tconst shaderIDs = {\n\t\t\tMeshDepthMaterial: 'depth',\n\t\t\tMeshDistanceMaterial: 'distanceRGBA',\n\t\t\tMeshNormalMaterial: 'normal',\n\t\t\tMeshBasicMaterial: 'basic',\n\t\t\tMeshLambertMaterial: 'lambert',\n\t\t\tMeshPhongMaterial: 'phong',\n\t\t\tMeshToonMaterial: 'toon',\n\t\t\tMeshStandardMaterial: 'physical',\n\t\t\tMeshPhysicalMaterial: 'physical',\n\t\t\tMeshMatcapMaterial: 'matcap',\n\t\t\tLineBasicMaterial: 'basic',\n\t\t\tLineDashedMaterial: 'dashed',\n\t\t\tPointsMaterial: 'points',\n\t\t\tShadowMaterial: 'shadow',\n\t\t\tSpriteMaterial: 'sprite'\n\t\t};\n\t\tconst parameterNames = ['precision', 'isWebGL2', 'supportsVertexTextures', 'outputEncoding', 'instancing', 'instancingColor', 'map', 'mapEncoding', 'matcap', 'matcapEncoding', 'envMap', 'envMapMode', 'envMapEncoding', 'envMapCubeUV', 'lightMap', 'lightMapEncoding', 'aoMap', 'emissiveMap', 'emissiveMapEncoding', 'bumpMap', 'normalMap', 'objectSpaceNormalMap', 'tangentSpaceNormalMap', 'clearcoat', 'clearcoatMap', 'clearcoatRoughnessMap', 'clearcoatNormalMap', 'displacementMap', 'specularMap',, 'roughnessMap', 'metalnessMap', 'gradientMap', 'alphaMap', 'alphaTest', 'combine', 'vertexColors', 'vertexAlphas', 'vertexTangents', 'vertexUvs', 'uvsVertexOnly', 'fog', 'useFog', 'fogExp2', 'flatShading', 'sizeAttenuation', 'logarithmicDepthBuffer', 'skinning', 'maxBones', 'useVertexTexture', 'morphTargets', 'morphNormals', 'morphTargetsCount', 'premultipliedAlpha', 'numDirLights', 'numPointLights', 'numSpotLights', 'numHemiLights', 'numRectAreaLights', 'numDirLightShadows', 'numPointLightShadows', 'numSpotLightShadows', 'shadowMapEnabled', 'shadowMapType', 'toneMapping', 'physicallyCorrectLights', 'doubleSided', 'flipSided', 'numClippingPlanes', 'numClipIntersection', 'depthPacking', 'dithering', 'format', 'specularIntensityMap', 'specularColorMap', 'specularColorMapEncoding', 'transmission', 'transmissionMap', 'thicknessMap', 'sheen', 'sheenColorMap', 'sheenColorMapEncoding', 'sheenRoughnessMap'];\n\n\t\tfunction getMaxBones(object) {\n\t\t\tconst skeleton = object.skeleton;\n\t\t\tconst bones = skeleton.bones;\n\n\t\t\tif (floatVertexTextures) {\n\t\t\t\treturn 1024;\n\t\t\t} else {\n\t\t\t\t// default for when object is not specified\n\t\t\t\t// ( for example when prebuilding shader to be used with multiple objects )\n\t\t\t\t//\n\t\t\t\t//\t- leave some extra space for other uniforms\n\t\t\t\t//\t- limit here is ANGLE's 254 max uniform vectors\n\t\t\t\t//\t\t(up to 54 should be safe)\n\t\t\t\tconst nVertexUniforms = maxVertexUniforms;\n\t\t\t\tconst nVertexMatrices = Math.floor((nVertexUniforms - 20) / 4);\n\t\t\t\tconst maxBones = Math.min(nVertexMatrices, bones.length);\n\n\t\t\t\tif (maxBones < bones.length) {\n\t\t\t\t\tconsole.warn('THREE.WebGLRenderer: Skeleton has ' + bones.length + ' bones. This GPU supports ' + maxBones + '.');\n\t\t\t\t\treturn 0;\n\t\t\t\t}\n\n\t\t\t\treturn maxBones;\n\t\t\t}\n\t\t}\n\n\t\tfunction getTextureEncodingFromMap(map) {\n\t\t\tlet encoding;\n\n\t\t\tif (map && map.isTexture) {\n\t\t\t\tencoding = map.encoding;\n\t\t\t} else if (map && map.isWebGLRenderTarget) {\n\t\t\t\tconsole.warn('THREE.WebGLPrograms.getTextureEncodingFromMap: don\\'t use render targets as textures. Use their .texture property instead.');\n\t\t\t\tencoding = map.texture.encoding;\n\t\t\t} else {\n\t\t\t\tencoding = LinearEncoding;\n\t\t\t}\n\n\t\t\tif (isWebGL2 && map && map.isTexture && map.format === RGBAFormat && map.type === UnsignedByteType && map.encoding === sRGBEncoding) {\n\t\t\t\tencoding = LinearEncoding; // disable inline decode for sRGB textures in WebGL 2\n\t\t\t}\n\n\t\t\treturn encoding;\n\t\t}\n\n\t\tfunction getParameters(material, lights, shadows, scene, object) {\n\t\t\tconst fog = scene.fog;\n\t\t\tconst environment = material.isMeshStandardMaterial ? scene.environment : null;\n\t\t\tconst envMap = (material.isMeshStandardMaterial ? cubeuvmaps : cubemaps).get(material.envMap || environment);\n\t\t\tconst shaderID = shaderIDs[material.type]; // heuristics to create shader parameters according to lights in the scene\n\t\t\t// (not to blow over maxLights budget)\n\n\t\t\tconst maxBones = object.isSkinnedMesh ? getMaxBones(object) : 0;\n\n\t\t\tif (material.precision !== null) {\n\t\t\t\tprecision = capabilities.getMaxPrecision(material.precision);\n\n\t\t\t\tif (precision !== material.precision) {\n\t\t\t\t\tconsole.warn('THREE.WebGLProgram.getParameters:', material.precision, 'not supported, using', precision, 'instead.');\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlet vertexShader, fragmentShader;\n\n\t\t\tif (shaderID) {\n\t\t\t\tconst shader = ShaderLib[shaderID];\n\t\t\t\tvertexShader = shader.vertexShader;\n\t\t\t\tfragmentShader = shader.fragmentShader;\n\t\t\t} else {\n\t\t\t\tvertexShader = material.vertexShader;\n\t\t\t\tfragmentShader = material.fragmentShader;\n\t\t\t}\n\n\t\t\tconst currentRenderTarget = renderer.getRenderTarget();\n\t\t\tconst useAlphaTest = material.alphaTest > 0;\n\t\t\tconst useClearcoat = material.clearcoat > 0;\n\t\t\tconst parameters = {\n\t\t\t\tisWebGL2: isWebGL2,\n\t\t\t\tshaderID: shaderID,\n\t\t\t\tshaderName: material.type,\n\t\t\t\tvertexShader: vertexShader,\n\t\t\t\tfragmentShader: fragmentShader,\n\t\t\t\tdefines: material.defines,\n\t\t\t\tisRawShaderMaterial: material.isRawShaderMaterial === true,\n\t\t\t\tglslVersion: material.glslVersion,\n\t\t\t\tprecision: precision,\n\t\t\t\tinstancing: object.isInstancedMesh === true,\n\t\t\t\tinstancingColor: object.isInstancedMesh === true && object.instanceColor !== null,\n\t\t\t\tsupportsVertexTextures: vertexTextures,\n\t\t\t\toutputEncoding: currentRenderTarget !== null ? getTextureEncodingFromMap(currentRenderTarget.texture) : renderer.outputEncoding,\n\t\t\t\tmap: !!material.map,\n\t\t\t\tmapEncoding: getTextureEncodingFromMap(material.map),\n\t\t\t\tmatcap: !!material.matcap,\n\t\t\t\tmatcapEncoding: getTextureEncodingFromMap(material.matcap),\n\t\t\t\tenvMap: !!envMap,\n\t\t\t\tenvMapMode: envMap && envMap.mapping,\n\t\t\t\tenvMapEncoding: getTextureEncodingFromMap(envMap),\n\t\t\t\tenvMapCubeUV: !!envMap && (envMap.mapping === CubeUVReflectionMapping || envMap.mapping === CubeUVRefractionMapping),\n\t\t\t\tlightMap: !!material.lightMap,\n\t\t\t\tlightMapEncoding: getTextureEncodingFromMap(material.lightMap),\n\t\t\t\taoMap: !!material.aoMap,\n\t\t\t\temissiveMap: !!material.emissiveMap,\n\t\t\t\temissiveMapEncoding: getTextureEncodingFromMap(material.emissiveMap),\n\t\t\t\tbumpMap: !!material.bumpMap,\n\t\t\t\tnormalMap: !!material.normalMap,\n\t\t\t\tobjectSpaceNormalMap: material.normalMapType === ObjectSpaceNormalMap,\n\t\t\t\ttangentSpaceNormalMap: material.normalMapType === TangentSpaceNormalMap,\n\t\t\t\tclearcoat: useClearcoat,\n\t\t\t\tclearcoatMap: useClearcoat && !!material.clearcoatMap,\n\t\t\t\tclearcoatRoughnessMap: useClearcoat && !!material.clearcoatRoughnessMap,\n\t\t\t\tclearcoatNormalMap: useClearcoat && !!material.clearcoatNormalMap,\n\t\t\t\tdisplacementMap: !!material.displacementMap,\n\t\t\t\troughnessMap: !!material.roughnessMap,\n\t\t\t\tmetalnessMap: !!material.metalnessMap,\n\t\t\t\tspecularMap: !!material.specularMap,\n\t\t\t\tspecularIntensityMap: !!material.specularIntensityMap,\n\t\t\t\tspecularColorMap: !!material.specularColorMap,\n\t\t\t\tspecularColorMapEncoding: getTextureEncodingFromMap(material.specularColorMap),\n\t\t\t\talphaMap: !!material.alphaMap,\n\t\t\t\talphaTest: useAlphaTest,\n\t\t\t\tgradientMap: !!material.gradientMap,\n\t\t\t\tsheen: material.sheen > 0,\n\t\t\t\tsheenColorMap: !!material.sheenColorMap,\n\t\t\t\tsheenColorMapEncoding: getTextureEncodingFromMap(material.sheenColorMap),\n\t\t\t\tsheenRoughnessMap: !!material.sheenRoughnessMap,\n\t\t\t\ttransmission: material.transmission > 0,\n\t\t\t\ttransmissionMap: !!material.transmissionMap,\n\t\t\t\tthicknessMap: !!material.thicknessMap,\n\t\t\t\tcombine: material.combine,\n\t\t\t\tvertexTangents: !!material.normalMap && !!object.geometry && !!object.geometry.attributes.tangent,\n\t\t\t\tvertexColors: material.vertexColors,\n\t\t\t\tvertexAlphas: material.vertexColors === true && !!object.geometry && !!object.geometry.attributes.color && object.geometry.attributes.color.itemSize === 4,\n\t\t\t\tvertexUvs: !!material.map || !!material.bumpMap || !!material.normalMap || !!material.specularMap || !!material.alphaMap || !!material.emissiveMap || !!material.roughnessMap || !!material.metalnessMap || !!material.clearcoatMap || !!material.clearcoatRoughnessMap || !!material.clearcoatNormalMap || !!material.displacementMap || !!material.transmissionMap || !!material.thicknessMap || !!material.specularIntensityMap || !!material.specularColorMap || !!material.sheenColorMap || material.sheenRoughnessMap,\n\t\t\t\tuvsVertexOnly: !(!!material.map || !!material.bumpMap || !!material.normalMap || !!material.specularMap || !!material.alphaMap || !!material.emissiveMap || !!material.roughnessMap || !!material.metalnessMap || !!material.clearcoatNormalMap || material.transmission > 0 || !!material.transmissionMap || !!material.thicknessMap || !!material.specularIntensityMap || !!material.specularColorMap || !!material.sheen > 0 || !!material.sheenColorMap || !!material.sheenRoughnessMap) && !!material.displacementMap,\n\t\t\t\tfog: !!fog,\n\t\t\t\tuseFog: material.fog,\n\t\t\t\tfogExp2: fog && fog.isFogExp2,\n\t\t\t\tflatShading: !!material.flatShading,\n\t\t\t\tsizeAttenuation: material.sizeAttenuation,\n\t\t\t\tlogarithmicDepthBuffer: logarithmicDepthBuffer,\n\t\t\t\tskinning: object.isSkinnedMesh === true && maxBones > 0,\n\t\t\t\tmaxBones: maxBones,\n\t\t\t\tuseVertexTexture: floatVertexTextures,\n\t\t\t\tmorphTargets: !!object.geometry && !!object.geometry.morphAttributes.position,\n\t\t\t\tmorphNormals: !!object.geometry && !!object.geometry.morphAttributes.normal,\n\t\t\t\tmorphTargetsCount: !!object.geometry && !!object.geometry.morphAttributes.position ? object.geometry.morphAttributes.position.length : 0,\n\t\t\t\tnumDirLights: lights.directional.length,\n\t\t\t\tnumPointLights: lights.point.length,\n\t\t\t\tnumSpotLights: lights.spot.length,\n\t\t\t\tnumRectAreaLights: lights.rectArea.length,\n\t\t\t\tnumHemiLights: lights.hemi.length,\n\t\t\t\tnumDirLightShadows: lights.directionalShadowMap.length,\n\t\t\t\tnumPointLightShadows: lights.pointShadowMap.length,\n\t\t\t\tnumSpotLightShadows: lights.spotShadowMap.length,\n\t\t\t\tnumClippingPlanes: clipping.numPlanes,\n\t\t\t\tnumClipIntersection: clipping.numIntersection,\n\t\t\t\tformat: material.format,\n\t\t\t\tdithering: material.dithering,\n\t\t\t\tshadowMapEnabled: renderer.shadowMap.enabled && shadows.length > 0,\n\t\t\t\tshadowMapType: renderer.shadowMap.type,\n\t\t\t\ttoneMapping: material.toneMapped ? renderer.toneMapping : NoToneMapping,\n\t\t\t\tphysicallyCorrectLights: renderer.physicallyCorrectLights,\n\t\t\t\tpremultipliedAlpha: material.premultipliedAlpha,\n\t\t\t\tdoubleSided: material.side === DoubleSide,\n\t\t\t\tflipSided: material.side === BackSide,\n\t\t\t\tdepthPacking: material.depthPacking !== undefined ? material.depthPacking : false,\n\t\t\t\tindex0AttributeName: material.index0AttributeName,\n\t\t\t\textensionDerivatives: material.extensions && material.extensions.derivatives,\n\t\t\t\textensionFragDepth: material.extensions && material.extensions.fragDepth,\n\t\t\t\textensionDrawBuffers: material.extensions && material.extensions.drawBuffers,\n\t\t\t\textensionShaderTextureLOD: material.extensions && material.extensions.shaderTextureLOD,\n\t\t\t\trendererExtensionFragDepth: isWebGL2 || extensions.has('EXT_frag_depth'),\n\t\t\t\trendererExtensionDrawBuffers: isWebGL2 || extensions.has('WEBGL_draw_buffers'),\n\t\t\t\trendererExtensionShaderTextureLod: isWebGL2 || extensions.has('EXT_shader_texture_lod'),\n\t\t\t\tcustomProgramCacheKey: material.customProgramCacheKey()\n\t\t\t};\n\t\t\treturn parameters;\n\t\t}\n\n\t\tfunction getProgramCacheKey(parameters) {\n\t\t\tconst array = [];\n\n\t\t\tif (parameters.shaderID) {\n\t\t\t\tarray.push(parameters.shaderID);\n\t\t\t} else {\n\t\t\t\tarray.push(hashString(parameters.fragmentShader));\n\t\t\t\tarray.push(hashString(parameters.vertexShader));\n\t\t\t}\n\n\t\t\tif (parameters.defines !== undefined) {\n\t\t\t\tfor (const name in parameters.defines) {\n\t\t\t\t\tarray.push(name);\n\t\t\t\t\tarray.push(parameters.defines[name]);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (parameters.isRawShaderMaterial === false) {\n\t\t\t\tfor (let i = 0; i < parameterNames.length; i++) {\n\t\t\t\t\tarray.push(parameters[parameterNames[i]]);\n\t\t\t\t}\n\n\t\t\t\tarray.push(renderer.outputEncoding);\n\t\t\t\tarray.push(renderer.gammaFactor);\n\t\t\t}\n\n\t\t\tarray.push(parameters.customProgramCacheKey);\n\t\t\treturn array.join();\n\t\t}\n\n\t\tfunction getUniforms(material) {\n\t\t\tconst shaderID = shaderIDs[material.type];\n\t\t\tlet uniforms;\n\n\t\t\tif (shaderID) {\n\t\t\t\tconst shader = ShaderLib[shaderID];\n\t\t\t\tuniforms = UniformsUtils.clone(shader.uniforms);\n\t\t\t} else {\n\t\t\t\tuniforms = material.uniforms;\n\t\t\t}\n\n\t\t\treturn uniforms;\n\t\t}\n\n\t\tfunction acquireProgram(parameters, cacheKey) {\n\t\t\tlet program; // Check if code has been already compiled\n\n\t\t\tfor (let p = 0, pl = programs.length; p < pl; p++) {\n\t\t\t\tconst preexistingProgram = programs[p];\n\n\t\t\t\tif (preexistingProgram.cacheKey === cacheKey) {\n\t\t\t\t\tprogram = preexistingProgram;\n\t\t\t\t\t++program.usedTimes;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (program === undefined) {\n\t\t\t\tprogram = new WebGLProgram(renderer, cacheKey, parameters, bindingStates);\n\t\t\t\tprograms.push(program);\n\t\t\t}\n\n\t\t\treturn program;\n\t\t}\n\n\t\tfunction releaseProgram(program) {\n\t\t\tif (--program.usedTimes === 0) {\n\t\t\t\t// Remove from unordered set\n\t\t\t\tconst i = programs.indexOf(program);\n\t\t\t\tprograms[i] = programs[programs.length - 1];\n\t\t\t\tprograms.pop(); // Free WebGL resources\n\n\t\t\t\tprogram.destroy();\n\t\t\t}\n\t\t}\n\n\t\treturn {\n\t\t\tgetParameters: getParameters,\n\t\t\tgetProgramCacheKey: getProgramCacheKey,\n\t\t\tgetUniforms: getUniforms,\n\t\t\tacquireProgram: acquireProgram,\n\t\t\treleaseProgram: releaseProgram,\n\t\t\t// Exposed for resource monitoring & error feedback via renderer.info:\n\t\t\tprograms: programs\n\t\t};\n\t}\n\n\tfunction WebGLProperties() {\n\t\tlet properties = new WeakMap();\n\n\t\tfunction get(object) {\n\t\t\tlet map = properties.get(object);\n\n\t\t\tif (map === undefined) {\n\t\t\t\tmap = {};\n\t\t\t\tproperties.set(object, map);\n\t\t\t}\n\n\t\t\treturn map;\n\t\t}\n\n\t\tfunction remove(object) {\n\t\t\tproperties.delete(object);\n\t\t}\n\n\t\tfunction update(object, key, value) {\n\t\t\tproperties.get(object)[key] = value;\n\t\t}\n\n\t\tfunction dispose() {\n\t\t\tproperties = new WeakMap();\n\t\t}\n\n\t\treturn {\n\t\t\tget: get,\n\t\t\tremove: remove,\n\t\t\tupdate: update,\n\t\t\tdispose: dispose\n\t\t};\n\t}\n\n\tfunction painterSortStable(a, b) {\n\t\tif (a.groupOrder !== b.groupOrder) {\n\t\t\treturn a.groupOrder - b.groupOrder;\n\t\t} else if (a.renderOrder !== b.renderOrder) {\n\t\t\treturn a.renderOrder - b.renderOrder;\n\t\t} else if (a.program !== b.program) {\n\t\t\treturn a.program.id - b.program.id;\n\t\t} else if (a.material.id !== b.material.id) {\n\t\t\treturn a.material.id - b.material.id;\n\t\t} else if (a.z !== b.z) {\n\t\t\treturn a.z - b.z;\n\t\t} else {\n\t\t\treturn a.id - b.id;\n\t\t}\n\t}\n\n\tfunction reversePainterSortStable(a, b) {\n\t\tif (a.groupOrder !== b.groupOrder) {\n\t\t\treturn a.groupOrder - b.groupOrder;\n\t\t} else if (a.renderOrder !== b.renderOrder) {\n\t\t\treturn a.renderOrder - b.renderOrder;\n\t\t} else if (a.z !== b.z) {\n\t\t\treturn b.z - a.z;\n\t\t} else {\n\t\t\treturn a.id - b.id;\n\t\t}\n\t}\n\n\tfunction WebGLRenderList(properties) {\n\t\tconst renderItems = [];\n\t\tlet renderItemsIndex = 0;\n\t\tconst opaque = [];\n\t\tconst transmissive = [];\n\t\tconst transparent = [];\n\t\tconst defaultProgram = {\n\t\t\tid: -1\n\t\t};\n\n\t\tfunction init() {\n\t\t\trenderItemsIndex = 0;\n\t\t\topaque.length = 0;\n\t\t\ttransmissive.length = 0;\n\t\t\ttransparent.length = 0;\n\t\t}\n\n\t\tfunction getNextRenderItem(object, geometry, material, groupOrder, z, group) {\n\t\t\tlet renderItem = renderItems[renderItemsIndex];\n\t\t\tconst materialProperties = properties.get(material);\n\n\t\t\tif (renderItem === undefined) {\n\t\t\t\trenderItem = {\n\t\t\t\t\tid: object.id,\n\t\t\t\t\tobject: object,\n\t\t\t\t\tgeometry: geometry,\n\t\t\t\t\tmaterial: material,\n\t\t\t\t\tprogram: materialProperties.program || defaultProgram,\n\t\t\t\t\tgroupOrder: groupOrder,\n\t\t\t\t\trenderOrder: object.renderOrder,\n\t\t\t\t\tz: z,\n\t\t\t\t\tgroup: group\n\t\t\t\t};\n\t\t\t\trenderItems[renderItemsIndex] = renderItem;\n\t\t\t} else {\n\t\t\t\trenderItem.id = object.id;\n\t\t\t\trenderItem.object = object;\n\t\t\t\trenderItem.geometry = geometry;\n\t\t\t\trenderItem.material = material;\n\t\t\t\trenderItem.program = materialProperties.program || defaultProgram;\n\t\t\t\trenderItem.groupOrder = groupOrder;\n\t\t\t\trenderItem.renderOrder = object.renderOrder;\n\t\t\t\trenderItem.z = z;\n\t\t\t\trenderItem.group = group;\n\t\t\t}\n\n\t\t\trenderItemsIndex++;\n\t\t\treturn renderItem;\n\t\t}\n\n\t\tfunction push(object, geometry, material, groupOrder, z, group) {\n\t\t\tconst renderItem = getNextRenderItem(object, geometry, material, groupOrder, z, group);\n\n\t\t\tif (material.transmission > 0.0) {\n\t\t\t\ttransmissive.push(renderItem);\n\t\t\t} else if (material.transparent === true) {\n\t\t\t\ttransparent.push(renderItem);\n\t\t\t} else {\n\t\t\t\topaque.push(renderItem);\n\t\t\t}\n\t\t}\n\n\t\tfunction unshift(object, geometry, material, groupOrder, z, group) {\n\t\t\tconst renderItem = getNextRenderItem(object, geometry, material, groupOrder, z, group);\n\n\t\t\tif (material.transmission > 0.0) {\n\t\t\t\ttransmissive.unshift(renderItem);\n\t\t\t} else if (material.transparent === true) {\n\t\t\t\ttransparent.unshift(renderItem);\n\t\t\t} else {\n\t\t\t\topaque.unshift(renderItem);\n\t\t\t}\n\t\t}\n\n\t\tfunction sort(customOpaqueSort, customTransparentSort) {\n\t\t\tif (opaque.length > 1) opaque.sort(customOpaqueSort || painterSortStable);\n\t\t\tif (transmissive.length > 1) transmissive.sort(customTransparentSort || reversePainterSortStable);\n\t\t\tif (transparent.length > 1) transparent.sort(customTransparentSort || reversePainterSortStable);\n\t\t}\n\n\t\tfunction finish() {\n\t\t\t// Clear references from inactive renderItems in the list\n\t\t\tfor (let i = renderItemsIndex, il = renderItems.length; i < il; i++) {\n\t\t\t\tconst renderItem = renderItems[i];\n\t\t\t\tif (renderItem.id === null) break;\n\t\t\t\trenderItem.id = null;\n\t\t\t\trenderItem.object = null;\n\t\t\t\trenderItem.geometry = null;\n\t\t\t\trenderItem.material = null;\n\t\t\t\trenderItem.program = null;\n\t\t\t\trenderItem.group = null;\n\t\t\t}\n\t\t}\n\n\t\treturn {\n\t\t\topaque: opaque,\n\t\t\ttransmissive: transmissive,\n\t\t\ttransparent: transparent,\n\t\t\tinit: init,\n\t\t\tpush: push,\n\t\t\tunshift: unshift,\n\t\t\tfinish: finish,\n\t\t\tsort: sort\n\t\t};\n\t}\n\n\tfunction WebGLRenderLists(properties) {\n\t\tlet lists = new WeakMap();\n\n\t\tfunction get(scene, renderCallDepth) {\n\t\t\tlet list;\n\n\t\t\tif (lists.has(scene) === false) {\n\t\t\t\tlist = new WebGLRenderList(properties);\n\t\t\t\tlists.set(scene, [list]);\n\t\t\t} else {\n\t\t\t\tif (renderCallDepth >= lists.get(scene).length) {\n\t\t\t\t\tlist = new WebGLRenderList(properties);\n\t\t\t\t\tlists.get(scene).push(list);\n\t\t\t\t} else {\n\t\t\t\t\tlist = lists.get(scene)[renderCallDepth];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn list;\n\t\t}\n\n\t\tfunction dispose() {\n\t\t\tlists = new WeakMap();\n\t\t}\n\n\t\treturn {\n\t\t\tget: get,\n\t\t\tdispose: dispose\n\t\t};\n\t}\n\n\tfunction UniformsCache() {\n\t\tconst lights = {};\n\t\treturn {\n\t\t\tget: function (light) {\n\t\t\t\tif (lights[light.id] !== undefined) {\n\t\t\t\t\treturn lights[light.id];\n\t\t\t\t}\n\n\t\t\t\tlet uniforms;\n\n\t\t\t\tswitch (light.type) {\n\t\t\t\t\tcase 'DirectionalLight':\n\t\t\t\t\t\tuniforms = {\n\t\t\t\t\t\t\tdirection: new Vector3(),\n\t\t\t\t\t\t\tcolor: new Color()\n\t\t\t\t\t\t};\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'SpotLight':\n\t\t\t\t\t\tuniforms = {\n\t\t\t\t\t\t\tposition: new Vector3(),\n\t\t\t\t\t\t\tdirection: new Vector3(),\n\t\t\t\t\t\t\tcolor: new Color(),\n\t\t\t\t\t\t\tdistance: 0,\n\t\t\t\t\t\t\tconeCos: 0,\n\t\t\t\t\t\t\tpenumbraCos: 0,\n\t\t\t\t\t\t\tdecay: 0\n\t\t\t\t\t\t};\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'PointLight':\n\t\t\t\t\t\tuniforms = {\n\t\t\t\t\t\t\tposition: new Vector3(),\n\t\t\t\t\t\t\tcolor: new Color(),\n\t\t\t\t\t\t\tdistance: 0,\n\t\t\t\t\t\t\tdecay: 0\n\t\t\t\t\t\t};\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'HemisphereLight':\n\t\t\t\t\t\tuniforms = {\n\t\t\t\t\t\t\tdirection: new Vector3(),\n\t\t\t\t\t\t\tskyColor: new Color(),\n\t\t\t\t\t\t\tgroundColor: new Color()\n\t\t\t\t\t\t};\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'RectAreaLight':\n\t\t\t\t\t\tuniforms = {\n\t\t\t\t\t\t\tcolor: new Color(),\n\t\t\t\t\t\t\tposition: new Vector3(),\n\t\t\t\t\t\t\thalfWidth: new Vector3(),\n\t\t\t\t\t\t\thalfHeight: new Vector3()\n\t\t\t\t\t\t};\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tlights[light.id] = uniforms;\n\t\t\t\treturn uniforms;\n\t\t\t}\n\t\t};\n\t}\n\n\tfunction ShadowUniformsCache() {\n\t\tconst lights = {};\n\t\treturn {\n\t\t\tget: function (light) {\n\t\t\t\tif (lights[light.id] !== undefined) {\n\t\t\t\t\treturn lights[light.id];\n\t\t\t\t}\n\n\t\t\t\tlet uniforms;\n\n\t\t\t\tswitch (light.type) {\n\t\t\t\t\tcase 'DirectionalLight':\n\t\t\t\t\t\tuniforms = {\n\t\t\t\t\t\t\tshadowBias: 0,\n\t\t\t\t\t\t\tshadowNormalBias: 0,\n\t\t\t\t\t\t\tshadowRadius: 1,\n\t\t\t\t\t\t\tshadowMapSize: new Vector2()\n\t\t\t\t\t\t};\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'SpotLight':\n\t\t\t\t\t\tuniforms = {\n\t\t\t\t\t\t\tshadowBias: 0,\n\t\t\t\t\t\t\tshadowNormalBias: 0,\n\t\t\t\t\t\t\tshadowRadius: 1,\n\t\t\t\t\t\t\tshadowMapSize: new Vector2()\n\t\t\t\t\t\t};\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'PointLight':\n\t\t\t\t\t\tuniforms = {\n\t\t\t\t\t\t\tshadowBias: 0,\n\t\t\t\t\t\t\tshadowNormalBias: 0,\n\t\t\t\t\t\t\tshadowRadius: 1,\n\t\t\t\t\t\t\tshadowMapSize: new Vector2(),\n\t\t\t\t\t\t\tshadowCameraNear: 1,\n\t\t\t\t\t\t\tshadowCameraFar: 1000\n\t\t\t\t\t\t};\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t// TODO (abelnation): set RectAreaLight shadow uniforms\n\t\t\t\t}\n\n\t\t\t\tlights[light.id] = uniforms;\n\t\t\t\treturn uniforms;\n\t\t\t}\n\t\t};\n\t}\n\n\tlet nextVersion = 0;\n\n\tfunction shadowCastingLightsFirst(lightA, lightB) {\n\t\treturn (lightB.castShadow ? 1 : 0) - (lightA.castShadow ? 1 : 0);\n\t}\n\n\tfunction WebGLLights(extensions, capabilities) {\n\t\tconst cache = new UniformsCache();\n\t\tconst shadowCache = ShadowUniformsCache();\n\t\tconst state = {\n\t\t\tversion: 0,\n\t\t\thash: {\n\t\t\t\tdirectionalLength: -1,\n\t\t\t\tpointLength: -1,\n\t\t\t\tspotLength: -1,\n\t\t\t\trectAreaLength: -1,\n\t\t\t\themiLength: -1,\n\t\t\t\tnumDirectionalShadows: -1,\n\t\t\t\tnumPointShadows: -1,\n\t\t\t\tnumSpotShadows: -1\n\t\t\t},\n\t\t\tambient: [0, 0, 0],\n\t\t\tprobe: [],\n\t\t\tdirectional: [],\n\t\t\tdirectionalShadow: [],\n\t\t\tdirectionalShadowMap: [],\n\t\t\tdirectionalShadowMatrix: [],\n\t\t\tspot: [],\n\t\t\tspotShadow: [],\n\t\t\tspotShadowMap: [],\n\t\t\tspotShadowMatrix: [],\n\t\t\trectArea: [],\n\t\t\trectAreaLTC1: null,\n\t\t\trectAreaLTC2: null,\n\t\t\tpoint: [],\n\t\t\tpointShadow: [],\n\t\t\tpointShadowMap: [],\n\t\t\tpointShadowMatrix: [],\n\t\t\themi: []\n\t\t};\n\n\t\tfor (let i = 0; i < 9; i++) state.probe.push(new Vector3());\n\n\t\tconst vector3 = new Vector3();\n\t\tconst matrix4 = new Matrix4();\n\t\tconst matrix42 = new Matrix4();\n\n\t\tfunction setup(lights, physicallyCorrectLights) {\n\t\t\tlet r = 0,\n\t\t\t\t\tg = 0,\n\t\t\t\t\tb = 0;\n\n\t\t\tfor (let i = 0; i < 9; i++) state.probe[i].set(0, 0, 0);\n\n\t\t\tlet directionalLength = 0;\n\t\t\tlet pointLength = 0;\n\t\t\tlet spotLength = 0;\n\t\t\tlet rectAreaLength = 0;\n\t\t\tlet hemiLength = 0;\n\t\t\tlet numDirectionalShadows = 0;\n\t\t\tlet numPointShadows = 0;\n\t\t\tlet numSpotShadows = 0;\n\t\t\tlights.sort(shadowCastingLightsFirst); // artist-friendly light intensity scaling factor\n\n\t\t\tconst scaleFactor = physicallyCorrectLights !== true ? Math.PI : 1;\n\n\t\t\tfor (let i = 0, l = lights.length; i < l; i++) {\n\t\t\t\tconst light = lights[i];\n\t\t\t\tconst color = light.color;\n\t\t\t\tconst intensity = light.intensity;\n\t\t\t\tconst distance = light.distance;\n\t\t\t\tconst shadowMap = light.shadow && light.shadow.map ? light.shadow.map.texture : null;\n\n\t\t\t\tif (light.isAmbientLight) {\n\t\t\t\t\tr += color.r * intensity * scaleFactor;\n\t\t\t\t\tg += color.g * intensity * scaleFactor;\n\t\t\t\t\tb += color.b * intensity * scaleFactor;\n\t\t\t\t} else if (light.isLightProbe) {\n\t\t\t\t\tfor (let j = 0; j < 9; j++) {\n\t\t\t\t\t\tstate.probe[j].addScaledVector(light.sh.coefficients[j], intensity);\n\t\t\t\t\t}\n\t\t\t\t} else if (light.isDirectionalLight) {\n\t\t\t\t\tconst uniforms = cache.get(light);\n\t\t\t\t\tuniforms.color.copy(light.color).multiplyScalar(light.intensity * scaleFactor);\n\n\t\t\t\t\tif (light.castShadow) {\n\t\t\t\t\t\tconst shadow = light.shadow;\n\t\t\t\t\t\tconst shadowUniforms = shadowCache.get(light);\n\t\t\t\t\t\tshadowUniforms.shadowBias = shadow.bias;\n\t\t\t\t\t\tshadowUniforms.shadowNormalBias = shadow.normalBias;\n\t\t\t\t\t\tshadowUniforms.shadowRadius = shadow.radius;\n\t\t\t\t\t\tshadowUniforms.shadowMapSize = shadow.mapSize;\n\t\t\t\t\t\tstate.directionalShadow[directionalLength] = shadowUniforms;\n\t\t\t\t\t\tstate.directionalShadowMap[directionalLength] = shadowMap;\n\t\t\t\t\t\tstate.directionalShadowMatrix[directionalLength] = light.shadow.matrix;\n\t\t\t\t\t\tnumDirectionalShadows++;\n\t\t\t\t\t}\n\n\t\t\t\t\tstate.directional[directionalLength] = uniforms;\n\t\t\t\t\tdirectionalLength++;\n\t\t\t\t} else if (light.isSpotLight) {\n\t\t\t\t\tconst uniforms = cache.get(light);\n\t\t\t\t\tuniforms.position.setFromMatrixPosition(light.matrixWorld);\n\t\t\t\t\tuniforms.color.copy(color).multiplyScalar(intensity * scaleFactor);\n\t\t\t\t\tuniforms.distance = distance;\n\t\t\t\t\tuniforms.coneCos = Math.cos(light.angle);\n\t\t\t\t\tuniforms.penumbraCos = Math.cos(light.angle * (1 - light.penumbra));\n\t\t\t\t\tuniforms.decay = light.decay;\n\n\t\t\t\t\tif (light.castShadow) {\n\t\t\t\t\t\tconst shadow = light.shadow;\n\t\t\t\t\t\tconst shadowUniforms = shadowCache.get(light);\n\t\t\t\t\t\tshadowUniforms.shadowBias = shadow.bias;\n\t\t\t\t\t\tshadowUniforms.shadowNormalBias = shadow.normalBias;\n\t\t\t\t\t\tshadowUniforms.shadowRadius = shadow.radius;\n\t\t\t\t\t\tshadowUniforms.shadowMapSize = shadow.mapSize;\n\t\t\t\t\t\tstate.spotShadow[spotLength] = shadowUniforms;\n\t\t\t\t\t\tstate.spotShadowMap[spotLength] = shadowMap;\n\t\t\t\t\t\tstate.spotShadowMatrix[spotLength] = light.shadow.matrix;\n\t\t\t\t\t\tnumSpotShadows++;\n\t\t\t\t\t}\n\n\t\t\t\t\tstate.spot[spotLength] = uniforms;\n\t\t\t\t\tspotLength++;\n\t\t\t\t} else if (light.isRectAreaLight) {\n\t\t\t\t\tconst uniforms = cache.get(light); // (a) intensity is the total visible light emitted\n\t\t\t\t\t//uniforms.color.copy( color ).multiplyScalar( intensity / ( light.width * light.height * Math.PI ) );\n\t\t\t\t\t// (b) intensity is the brightness of the light\n\n\t\t\t\t\tuniforms.color.copy(color).multiplyScalar(intensity);\n\t\t\t\t\tuniforms.halfWidth.set(light.width * 0.5, 0.0, 0.0);\n\t\t\t\t\tuniforms.halfHeight.set(0.0, light.height * 0.5, 0.0);\n\t\t\t\t\tstate.rectArea[rectAreaLength] = uniforms;\n\t\t\t\t\trectAreaLength++;\n\t\t\t\t} else if (light.isPointLight) {\n\t\t\t\t\tconst uniforms = cache.get(light);\n\t\t\t\t\tuniforms.color.copy(light.color).multiplyScalar(light.intensity * scaleFactor);\n\t\t\t\t\tuniforms.distance = light.distance;\n\t\t\t\t\tuniforms.decay = light.decay;\n\n\t\t\t\t\tif (light.castShadow) {\n\t\t\t\t\t\tconst shadow = light.shadow;\n\t\t\t\t\t\tconst shadowUniforms = shadowCache.get(light);\n\t\t\t\t\t\tshadowUniforms.shadowBias = shadow.bias;\n\t\t\t\t\t\tshadowUniforms.shadowNormalBias = shadow.normalBias;\n\t\t\t\t\t\tshadowUniforms.shadowRadius = shadow.radius;\n\t\t\t\t\t\tshadowUniforms.shadowMapSize = shadow.mapSize;\n\t\t\t\t\t\tshadowUniforms.shadowCameraNear = shadow.camera.near;\n\t\t\t\t\t\tshadowUniforms.shadowCameraFar = shadow.camera.far;\n\t\t\t\t\t\tstate.pointShadow[pointLength] = shadowUniforms;\n\t\t\t\t\t\tstate.pointShadowMap[pointLength] = shadowMap;\n\t\t\t\t\t\tstate.pointShadowMatrix[pointLength] = light.shadow.matrix;\n\t\t\t\t\t\tnumPointShadows++;\n\t\t\t\t\t}\n\n\t\t\t\t\tstate.point[pointLength] = uniforms;\n\t\t\t\t\tpointLength++;\n\t\t\t\t} else if (light.isHemisphereLight) {\n\t\t\t\t\tconst uniforms = cache.get(light);\n\t\t\t\t\tuniforms.skyColor.copy(light.color).multiplyScalar(intensity * scaleFactor);\n\t\t\t\t\tuniforms.groundColor.copy(light.groundColor).multiplyScalar(intensity * scaleFactor);\n\t\t\t\t\tstate.hemi[hemiLength] = uniforms;\n\t\t\t\t\themiLength++;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (rectAreaLength > 0) {\n\t\t\t\tif (capabilities.isWebGL2) {\n\t\t\t\t\t// WebGL 2\n\t\t\t\t\tstate.rectAreaLTC1 = UniformsLib.LTC_FLOAT_1;\n\t\t\t\t\tstate.rectAreaLTC2 = UniformsLib.LTC_FLOAT_2;\n\t\t\t\t} else {\n\t\t\t\t\t// WebGL 1\n\t\t\t\t\tif (extensions.has('OES_texture_float_linear') === true) {\n\t\t\t\t\t\tstate.rectAreaLTC1 = UniformsLib.LTC_FLOAT_1;\n\t\t\t\t\t\tstate.rectAreaLTC2 = UniformsLib.LTC_FLOAT_2;\n\t\t\t\t\t} else if (extensions.has('OES_texture_half_float_linear') === true) {\n\t\t\t\t\t\tstate.rectAreaLTC1 = UniformsLib.LTC_HALF_1;\n\t\t\t\t\t\tstate.rectAreaLTC2 = UniformsLib.LTC_HALF_2;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tconsole.error('THREE.WebGLRenderer: Unable to use RectAreaLight. Missing WebGL extensions.');\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tstate.ambient[0] = r;\n\t\t\tstate.ambient[1] = g;\n\t\t\tstate.ambient[2] = b;\n\t\t\tconst hash = state.hash;\n\n\t\t\tif (hash.directionalLength !== directionalLength || hash.pointLength !== pointLength || hash.spotLength !== spotLength || hash.rectAreaLength !== rectAreaLength || hash.hemiLength !== hemiLength || hash.numDirectionalShadows !== numDirectionalShadows || hash.numPointShadows !== numPointShadows || hash.numSpotShadows !== numSpotShadows) {\n\t\t\t\tstate.directional.length = directionalLength;\n\t\t\t\tstate.spot.length = spotLength;\n\t\t\t\tstate.rectArea.length = rectAreaLength;\n\t\t\t\tstate.point.length = pointLength;\n\t\t\t\tstate.hemi.length = hemiLength;\n\t\t\t\tstate.directionalShadow.length = numDirectionalShadows;\n\t\t\t\tstate.directionalShadowMap.length = numDirectionalShadows;\n\t\t\t\tstate.pointShadow.length = numPointShadows;\n\t\t\t\tstate.pointShadowMap.length = numPointShadows;\n\t\t\t\tstate.spotShadow.length = numSpotShadows;\n\t\t\t\tstate.spotShadowMap.length = numSpotShadows;\n\t\t\t\tstate.directionalShadowMatrix.length = numDirectionalShadows;\n\t\t\t\tstate.pointShadowMatrix.length = numPointShadows;\n\t\t\t\tstate.spotShadowMatrix.length = numSpotShadows;\n\t\t\t\thash.directionalLength = directionalLength;\n\t\t\t\thash.pointLength = pointLength;\n\t\t\t\thash.spotLength = spotLength;\n\t\t\t\thash.rectAreaLength = rectAreaLength;\n\t\t\t\thash.hemiLength = hemiLength;\n\t\t\t\thash.numDirectionalShadows = numDirectionalShadows;\n\t\t\t\thash.numPointShadows = numPointShadows;\n\t\t\t\thash.numSpotShadows = numSpotShadows;\n\t\t\t\tstate.version = nextVersion++;\n\t\t\t}\n\t\t}\n\n\t\tfunction setupView(lights, camera) {\n\t\t\tlet directionalLength = 0;\n\t\t\tlet pointLength = 0;\n\t\t\tlet spotLength = 0;\n\t\t\tlet rectAreaLength = 0;\n\t\t\tlet hemiLength = 0;\n\t\t\tconst viewMatrix = camera.matrixWorldInverse;\n\n\t\t\tfor (let i = 0, l = lights.length; i < l; i++) {\n\t\t\t\tconst light = lights[i];\n\n\t\t\t\tif (light.isDirectionalLight) {\n\t\t\t\t\tconst uniforms = state.directional[directionalLength];\n\t\t\t\t\tuniforms.direction.setFromMatrixPosition(light.matrixWorld);\n\t\t\t\t\tvector3.setFromMatrixPosition(light.target.matrixWorld);\n\t\t\t\t\tuniforms.direction.sub(vector3);\n\t\t\t\t\tuniforms.direction.transformDirection(viewMatrix);\n\t\t\t\t\tdirectionalLength++;\n\t\t\t\t} else if (light.isSpotLight) {\n\t\t\t\t\tconst uniforms = state.spot[spotLength];\n\t\t\t\t\tuniforms.position.setFromMatrixPosition(light.matrixWorld);\n\t\t\t\t\tuniforms.position.applyMatrix4(viewMatrix);\n\t\t\t\t\tuniforms.direction.setFromMatrixPosition(light.matrixWorld);\n\t\t\t\t\tvector3.setFromMatrixPosition(light.target.matrixWorld);\n\t\t\t\t\tuniforms.direction.sub(vector3);\n\t\t\t\t\tuniforms.direction.transformDirection(viewMatrix);\n\t\t\t\t\tspotLength++;\n\t\t\t\t} else if (light.isRectAreaLight) {\n\t\t\t\t\tconst uniforms = state.rectArea[rectAreaLength];\n\t\t\t\t\tuniforms.position.setFromMatrixPosition(light.matrixWorld);\n\t\t\t\t\tuniforms.position.applyMatrix4(viewMatrix); // extract local rotation of light to derive width/height half vectors\n\n\t\t\t\t\tmatrix42.identity();\n\t\t\t\t\tmatrix4.copy(light.matrixWorld);\n\t\t\t\t\tmatrix4.premultiply(viewMatrix);\n\t\t\t\t\tmatrix42.extractRotation(matrix4);\n\t\t\t\t\tuniforms.halfWidth.set(light.width * 0.5, 0.0, 0.0);\n\t\t\t\t\tuniforms.halfHeight.set(0.0, light.height * 0.5, 0.0);\n\t\t\t\t\tuniforms.halfWidth.applyMatrix4(matrix42);\n\t\t\t\t\tuniforms.halfHeight.applyMatrix4(matrix42);\n\t\t\t\t\trectAreaLength++;\n\t\t\t\t} else if (light.isPointLight) {\n\t\t\t\t\tconst uniforms = state.point[pointLength];\n\t\t\t\t\tuniforms.position.setFromMatrixPosition(light.matrixWorld);\n\t\t\t\t\tuniforms.position.applyMatrix4(viewMatrix);\n\t\t\t\t\tpointLength++;\n\t\t\t\t} else if (light.isHemisphereLight) {\n\t\t\t\t\tconst uniforms = state.hemi[hemiLength];\n\t\t\t\t\tuniforms.direction.setFromMatrixPosition(light.matrixWorld);\n\t\t\t\t\tuniforms.direction.transformDirection(viewMatrix);\n\t\t\t\t\tuniforms.direction.normalize();\n\t\t\t\t\themiLength++;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn {\n\t\t\tsetup: setup,\n\t\t\tsetupView: setupView,\n\t\t\tstate: state\n\t\t};\n\t}\n\n\tfunction WebGLRenderState(extensions, capabilities) {\n\t\tconst lights = new WebGLLights(extensions, capabilities);\n\t\tconst lightsArray = [];\n\t\tconst shadowsArray = [];\n\n\t\tfunction init() {\n\t\t\tlightsArray.length = 0;\n\t\t\tshadowsArray.length = 0;\n\t\t}\n\n\t\tfunction pushLight(light) {\n\t\t\tlightsArray.push(light);\n\t\t}\n\n\t\tfunction pushShadow(shadowLight) {\n\t\t\tshadowsArray.push(shadowLight);\n\t\t}\n\n\t\tfunction setupLights(physicallyCorrectLights) {\n\t\t\tlights.setup(lightsArray, physicallyCorrectLights);\n\t\t}\n\n\t\tfunction setupLightsView(camera) {\n\t\t\tlights.setupView(lightsArray, camera);\n\t\t}\n\n\t\tconst state = {\n\t\t\tlightsArray: lightsArray,\n\t\t\tshadowsArray: shadowsArray,\n\t\t\tlights: lights\n\t\t};\n\t\treturn {\n\t\t\tinit: init,\n\t\t\tstate: state,\n\t\t\tsetupLights: setupLights,\n\t\t\tsetupLightsView: setupLightsView,\n\t\t\tpushLight: pushLight,\n\t\t\tpushShadow: pushShadow\n\t\t};\n\t}\n\n\tfunction WebGLRenderStates(extensions, capabilities) {\n\t\tlet renderStates = new WeakMap();\n\n\t\tfunction get(scene, renderCallDepth = 0) {\n\t\t\tlet renderState;\n\n\t\t\tif (renderStates.has(scene) === false) {\n\t\t\t\trenderState = new WebGLRenderState(extensions, capabilities);\n\t\t\t\trenderStates.set(scene, [renderState]);\n\t\t\t} else {\n\t\t\t\tif (renderCallDepth >= renderStates.get(scene).length) {\n\t\t\t\t\trenderState = new WebGLRenderState(extensions, capabilities);\n\t\t\t\t\trenderStates.get(scene).push(renderState);\n\t\t\t\t} else {\n\t\t\t\t\trenderState = renderStates.get(scene)[renderCallDepth];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn renderState;\n\t\t}\n\n\t\tfunction dispose() {\n\t\t\trenderStates = new WeakMap();\n\t\t}\n\n\t\treturn {\n\t\t\tget: get,\n\t\t\tdispose: dispose\n\t\t};\n\t}\n\n\t/**\n\t * parameters = {\n\t *\n\t *\topacity: <float>,\n\t *\n\t *\tmap: new THREE.Texture( <Image> ),\n\t *\n\t *\talphaMap: new THREE.Texture( <Image> ),\n\t *\n\t *\tdisplacementMap: new THREE.Texture( <Image> ),\n\t *\tdisplacementScale: <float>,\n\t *\tdisplacementBias: <float>,\n\t *\n\t *\twireframe: <boolean>,\n\t *\twireframeLinewidth: <float>\n\t * }\n\t */\n\n\tclass MeshDepthMaterial extends Material {\n\t\tconstructor(parameters) {\n\t\t\tsuper();\n\t\t\tthis.type = 'MeshDepthMaterial';\n\t\t\tthis.depthPacking = BasicDepthPacking;\n\t\t\tthis.map = null;\n\t\t\tthis.alphaMap = null;\n\t\t\tthis.displacementMap = null;\n\t\t\tthis.displacementScale = 1;\n\t\t\tthis.displacementBias = 0;\n\t\t\tthis.wireframe = false;\n\t\t\tthis.wireframeLinewidth = 1;\n\t\t\tthis.fog = false;\n\t\t\tthis.setValues(parameters);\n\t\t}\n\n\t\tcopy(source) {\n\t\t\tsuper.copy(source);\n\t\t\tthis.depthPacking = source.depthPacking;\n\t\t\tthis.map = source.map;\n\t\t\tthis.alphaMap = source.alphaMap;\n\t\t\tthis.displacementMap = source.displacementMap;\n\t\t\tthis.displacementScale = source.displacementScale;\n\t\t\tthis.displacementBias = source.displacementBias;\n\t\t\tthis.wireframe = source.wireframe;\n\t\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\t\t\treturn this;\n\t\t}\n\n\t}\n\n\tMeshDepthMaterial.prototype.isMeshDepthMaterial = true;\n\n\t/**\n\t * parameters = {\n\t *\n\t *\treferencePosition: <float>,\n\t *\tnearDistance: <float>,\n\t *\tfarDistance: <float>,\n\t *\n\t *\tmap: new THREE.Texture( <Image> ),\n\t *\n\t *\talphaMap: new THREE.Texture( <Image> ),\n\t *\n\t *\tdisplacementMap: new THREE.Texture( <Image> ),\n\t *\tdisplacementScale: <float>,\n\t *\tdisplacementBias: <float>\n\t *\n\t * }\n\t */\n\n\tclass MeshDistanceMaterial extends Material {\n\t\tconstructor(parameters) {\n\t\t\tsuper();\n\t\t\tthis.type = 'MeshDistanceMaterial';\n\t\t\tthis.referencePosition = new Vector3();\n\t\t\tthis.nearDistance = 1;\n\t\t\tthis.farDistance = 1000;\n\t\t\tthis.map = null;\n\t\t\tthis.alphaMap = null;\n\t\t\tthis.displacementMap = null;\n\t\t\tthis.displacementScale = 1;\n\t\t\tthis.displacementBias = 0;\n\t\t\tthis.fog = false;\n\t\t\tthis.setValues(parameters);\n\t\t}\n\n\t\tcopy(source) {\n\t\t\tsuper.copy(source);\n\t\t\tthis.referencePosition.copy(source.referencePosition);\n\t\t\tthis.nearDistance = source.nearDistance;\n\t\t\tthis.farDistance = source.farDistance;\n\t\t\tthis.map = source.map;\n\t\t\tthis.alphaMap = source.alphaMap;\n\t\t\tthis.displacementMap = source.displacementMap;\n\t\t\tthis.displacementScale = source.displacementScale;\n\t\t\tthis.displacementBias = source.displacementBias;\n\t\t\treturn this;\n\t\t}\n\n\t}\n\n\tMeshDistanceMaterial.prototype.isMeshDistanceMaterial = true;\n\n\tconst vertex = \"void main() {\\n\\tgl_Position = vec4( position, 1.0 );\\n}\";\n\tconst fragment = \"uniform sampler2D shadow_pass;\\nuniform vec2 resolution;\\nuniform float radius;\\n#include <packing>\\nvoid main() {\\n\\tconst float samples = float( VSM_SAMPLES );\\n\\tfloat mean = 0.0;\\n\\tfloat squared_mean = 0.0;\\n\\tfloat uvStride = samples <= 1.0 ? 0.0 : 2.0 / ( samples - 1.0 );\\n\\tfloat uvStart = samples <= 1.0 ? 0.0 : - 1.0;\\n\\tfor ( float i = 0.0; i < samples; i ++ ) {\\n\\t\\tfloat uvOffset = uvStart + i * uvStride;\\n\\t\\t#ifdef HORIZONTAL_PASS\\n\\t\\t\\tvec2 distribution = unpackRGBATo2Half( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( uvOffset, 0.0 ) * radius ) / resolution ) );\\n\\t\\t\\tmean += distribution.x;\\n\\t\\t\\tsquared_mean += distribution.y * distribution.y + distribution.x * distribution.x;\\n\\t\\t#else\\n\\t\\t\\tfloat depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0, uvOffset ) * radius ) / resolution ) );\\n\\t\\t\\tmean += depth;\\n\\t\\t\\tsquared_mean += depth * depth;\\n\\t\\t#endif\\n\\t}\\n\\tmean = mean / samples;\\n\\tsquared_mean = squared_mean / samples;\\n\\tfloat std_dev = sqrt( squared_mean - mean * mean );\\n\\tgl_FragColor = pack2HalfToRGBA( vec2( mean, std_dev ) );\\n}\";\n\n\tfunction WebGLShadowMap(_renderer, _objects, _capabilities) {\n\t\tlet _frustum = new Frustum();\n\n\t\tconst _shadowMapSize = new Vector2(),\n\t\t\t\t\t_viewportSize = new Vector2(),\n\t\t\t\t\t_viewport = new Vector4(),\n\t\t\t\t\t_depthMaterial = new MeshDepthMaterial({\n\t\t\tdepthPacking: RGBADepthPacking\n\t\t}),\n\t\t\t\t\t_distanceMaterial = new MeshDistanceMaterial(),\n\t\t\t\t\t_materialCache = {},\n\t\t\t\t\t_maxTextureSize = _capabilities.maxTextureSize;\n\n\t\tconst shadowSide = {\n\t\t\t0: BackSide,\n\t\t\t1: FrontSide,\n\t\t\t2: DoubleSide\n\t\t};\n\t\tconst shadowMaterialVertical = new ShaderMaterial({\n\t\t\tdefines: {\n\t\t\t\tVSM_SAMPLES: 8\n\t\t\t},\n\t\t\tuniforms: {\n\t\t\t\tshadow_pass: {\n\t\t\t\t\tvalue: null\n\t\t\t\t},\n\t\t\t\tresolution: {\n\t\t\t\t\tvalue: new Vector2()\n\t\t\t\t},\n\t\t\t\tradius: {\n\t\t\t\t\tvalue: 4.0\n\t\t\t\t}\n\t\t\t},\n\t\t\tvertexShader: vertex,\n\t\t\tfragmentShader: fragment\n\t\t});\n\t\tconst shadowMaterialHorizontal = shadowMaterialVertical.clone();\n\t\tshadowMaterialHorizontal.defines.HORIZONTAL_PASS = 1;\n\t\tconst fullScreenTri = new BufferGeometry();\n\t\tfullScreenTri.setAttribute('position', new BufferAttribute(new Float32Array([-1, -1, 0.5, 3, -1, 0.5, -1, 3, 0.5]), 3));\n\t\tconst fullScreenMesh = new Mesh(fullScreenTri, shadowMaterialVertical);\n\t\tconst scope = this;\n\t\tthis.enabled = false;\n\t\tthis.autoUpdate = true;\n\t\tthis.needsUpdate = false;\n\t\tthis.type = PCFShadowMap;\n\n\t\tthis.render = function (lights, scene, camera) {\n\t\t\tif (scope.enabled === false) return;\n\t\t\tif (scope.autoUpdate === false && scope.needsUpdate === false) return;\n\t\t\tif (lights.length === 0) return;\n\n\t\t\tconst currentRenderTarget = _renderer.getRenderTarget();\n\n\t\t\tconst activeCubeFace = _renderer.getActiveCubeFace();\n\n\t\t\tconst activeMipmapLevel = _renderer.getActiveMipmapLevel();\n\n\t\t\tconst _state = _renderer.state; // Set GL state for depth map.\n\n\t\t\t_state.setBlending(NoBlending);\n\n\t\t\t_state.buffers.color.setClear(1, 1, 1, 1);\n\n\t\t\t_state.buffers.depth.setTest(true);\n\n\t\t\t_state.setScissorTest(false); // render depth map\n\n\n\t\t\tfor (let i = 0, il = lights.length; i < il; i++) {\n\t\t\t\tconst light = lights[i];\n\t\t\t\tconst shadow = light.shadow;\n\n\t\t\t\tif (shadow === undefined) {\n\t\t\t\t\tconsole.warn('THREE.WebGLShadowMap:', light, 'has no shadow.');\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tif (shadow.autoUpdate === false && shadow.needsUpdate === false) continue;\n\n\t\t\t\t_shadowMapSize.copy(shadow.mapSize);\n\n\t\t\t\tconst shadowFrameExtents = shadow.getFrameExtents();\n\n\t\t\t\t_shadowMapSize.multiply(shadowFrameExtents);\n\n\t\t\t\t_viewportSize.copy(shadow.mapSize);\n\n\t\t\t\tif (_shadowMapSize.x > _maxTextureSize || _shadowMapSize.y > _maxTextureSize) {\n\t\t\t\t\tif (_shadowMapSize.x > _maxTextureSize) {\n\t\t\t\t\t\t_viewportSize.x = Math.floor(_maxTextureSize / shadowFrameExtents.x);\n\t\t\t\t\t\t_shadowMapSize.x = _viewportSize.x * shadowFrameExtents.x;\n\t\t\t\t\t\tshadow.mapSize.x = _viewportSize.x;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (_shadowMapSize.y > _maxTextureSize) {\n\t\t\t\t\t\t_viewportSize.y = Math.floor(_maxTextureSize / shadowFrameExtents.y);\n\t\t\t\t\t\t_shadowMapSize.y = _viewportSize.y * shadowFrameExtents.y;\n\t\t\t\t\t\tshadow.mapSize.y = _viewportSize.y;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (shadow.map === null && !shadow.isPointLightShadow && this.type === VSMShadowMap) {\n\t\t\t\t\tconst pars = {\n\t\t\t\t\t\tminFilter: LinearFilter,\n\t\t\t\t\t\tmagFilter: LinearFilter,\n\t\t\t\t\t\tformat: RGBAFormat\n\t\t\t\t\t};\n\t\t\t\t\tshadow.map = new WebGLRenderTarget(_shadowMapSize.x, _shadowMapSize.y, pars);\n\t\t\t\t\tshadow.map.texture.name = light.name + '.shadowMap';\n\t\t\t\t\tshadow.mapPass = new WebGLRenderTarget(_shadowMapSize.x, _shadowMapSize.y, pars);\n\t\t\t\t\tshadow.camera.updateProjectionMatrix();\n\t\t\t\t}\n\n\t\t\t\tif (shadow.map === null) {\n\t\t\t\t\tconst pars = {\n\t\t\t\t\t\tminFilter: NearestFilter,\n\t\t\t\t\t\tmagFilter: NearestFilter,\n\t\t\t\t\t\tformat: RGBAFormat\n\t\t\t\t\t};\n\t\t\t\t\tshadow.map = new WebGLRenderTarget(_shadowMapSize.x, _shadowMapSize.y, pars);\n\t\t\t\t\tshadow.map.texture.name = light.name + '.shadowMap';\n\t\t\t\t\tshadow.camera.updateProjectionMatrix();\n\t\t\t\t}\n\n\t\t\t\t_renderer.setRenderTarget(shadow.map);\n\n\t\t\t\t_renderer.clear();\n\n\t\t\t\tconst viewportCount = shadow.getViewportCount();\n\n\t\t\t\tfor (let vp = 0; vp < viewportCount; vp++) {\n\t\t\t\t\tconst viewport = shadow.getViewport(vp);\n\n\t\t\t\t\t_viewport.set(_viewportSize.x * viewport.x, _viewportSize.y * viewport.y, _viewportSize.x * viewport.z, _viewportSize.y * viewport.w);\n\n\t\t\t\t\t_state.viewport(_viewport);\n\n\t\t\t\t\tshadow.updateMatrices(light, vp);\n\t\t\t\t\t_frustum = shadow.getFrustum();\n\t\t\t\t\trenderObject(scene, camera, shadow.camera, light, this.type);\n\t\t\t\t} // do blur pass for VSM\n\n\n\t\t\t\tif (!shadow.isPointLightShadow && this.type === VSMShadowMap) {\n\t\t\t\t\tVSMPass(shadow, camera);\n\t\t\t\t}\n\n\t\t\t\tshadow.needsUpdate = false;\n\t\t\t}\n\n\t\t\tscope.needsUpdate = false;\n\n\t\t\t_renderer.setRenderTarget(currentRenderTarget, activeCubeFace, activeMipmapLevel);\n\t\t};\n\n\t\tfunction VSMPass(shadow, camera) {\n\t\t\tconst geometry = _objects.update(fullScreenMesh);\n\n\t\t\tif (shadowMaterialVertical.defines.VSM_SAMPLES !== shadow.blurSamples) {\n\t\t\t\tshadowMaterialVertical.defines.VSM_SAMPLES = shadow.blurSamples;\n\t\t\t\tshadowMaterialHorizontal.defines.VSM_SAMPLES = shadow.blurSamples;\n\t\t\t\tshadowMaterialVertical.needsUpdate = true;\n\t\t\t\tshadowMaterialHorizontal.needsUpdate = true;\n\t\t\t} // vertical pass\n\n\n\t\t\tshadowMaterialVertical.uniforms.shadow_pass.value = shadow.map.texture;\n\t\t\tshadowMaterialVertical.uniforms.resolution.value = shadow.mapSize;\n\t\t\tshadowMaterialVertical.uniforms.radius.value = shadow.radius;\n\n\t\t\t_renderer.setRenderTarget(shadow.mapPass);\n\n\t\t\t_renderer.clear();\n\n\t\t\t_renderer.renderBufferDirect(camera, null, geometry, shadowMaterialVertical, fullScreenMesh, null); // horizontal pass\n\n\n\t\t\tshadowMaterialHorizontal.uniforms.shadow_pass.value = shadow.mapPass.texture;\n\t\t\tshadowMaterialHorizontal.uniforms.resolution.value = shadow.mapSize;\n\t\t\tshadowMaterialHorizontal.uniforms.radius.value = shadow.radius;\n\n\t\t\t_renderer.setRenderTarget(shadow.map);\n\n\t\t\t_renderer.clear();\n\n\t\t\t_renderer.renderBufferDirect(camera, null, geometry, shadowMaterialHorizontal, fullScreenMesh, null);\n\t\t}\n\n\t\tfunction getDepthMaterial(object, geometry, material, light, shadowCameraNear, shadowCameraFar, type) {\n\t\t\tlet result = null;\n\t\t\tconst customMaterial = light.isPointLight === true ? object.customDistanceMaterial : object.customDepthMaterial;\n\n\t\t\tif (customMaterial !== undefined) {\n\t\t\t\tresult = customMaterial;\n\t\t\t} else {\n\t\t\t\tresult = light.isPointLight === true ? _distanceMaterial : _depthMaterial;\n\t\t\t}\n\n\t\t\tif (_renderer.localClippingEnabled && material.clipShadows === true && material.clippingPlanes.length !== 0 || material.displacementMap && material.displacementScale !== 0 || material.alphaMap && material.alphaTest > 0) {\n\t\t\t\t// in this case we need a unique material instance reflecting the\n\t\t\t\t// appropriate state\n\t\t\t\tconst keyA = result.uuid,\n\t\t\t\t\t\t\tkeyB = material.uuid;\n\t\t\t\tlet materialsForVariant = _materialCache[keyA];\n\n\t\t\t\tif (materialsForVariant === undefined) {\n\t\t\t\t\tmaterialsForVariant = {};\n\t\t\t\t\t_materialCache[keyA] = materialsForVariant;\n\t\t\t\t}\n\n\t\t\t\tlet cachedMaterial = materialsForVariant[keyB];\n\n\t\t\t\tif (cachedMaterial === undefined) {\n\t\t\t\t\tcachedMaterial = result.clone();\n\t\t\t\t\tmaterialsForVariant[keyB] = cachedMaterial;\n\t\t\t\t}\n\n\t\t\t\tresult = cachedMaterial;\n\t\t\t}\n\n\t\t\tresult.visible = material.visible;\n\t\t\tresult.wireframe = material.wireframe;\n\n\t\t\tif (type === VSMShadowMap) {\n\t\t\t\tresult.side = material.shadowSide !== null ? material.shadowSide : material.side;\n\t\t\t} else {\n\t\t\t\tresult.side = material.shadowSide !== null ? material.shadowSide : shadowSide[material.side];\n\t\t\t}\n\n\t\t\tresult.alphaMap = material.alphaMap;\n\t\t\tresult.alphaTest = material.alphaTest;\n\t\t\tresult.clipShadows = material.clipShadows;\n\t\t\tresult.clippingPlanes = material.clippingPlanes;\n\t\t\tresult.clipIntersection = material.clipIntersection;\n\t\t\tresult.displacementMap = material.displacementMap;\n\t\t\tresult.displacementScale = material.displacementScale;\n\t\t\tresult.displacementBias = material.displacementBias;\n\t\t\tresult.wireframeLinewidth = material.wireframeLinewidth;\n\t\t\tresult.linewidth = material.linewidth;\n\n\t\t\tif (light.isPointLight === true && result.isMeshDistanceMaterial === true) {\n\t\t\t\tresult.referencePosition.setFromMatrixPosition(light.matrixWorld);\n\t\t\t\tresult.nearDistance = shadowCameraNear;\n\t\t\t\tresult.farDistance = shadowCameraFar;\n\t\t\t}\n\n\t\t\treturn result;\n\t\t}\n\n\t\tfunction renderObject(object, camera, shadowCamera, light, type) {\n\t\t\tif (object.visible === false) return;\n\t\t\tconst visible = object.layers.test(camera.layers);\n\n\t\t\tif (visible && (object.isMesh || object.isLine || object.isPoints)) {\n\t\t\t\tif ((object.castShadow || object.receiveShadow && type === VSMShadowMap) && (!object.frustumCulled || _frustum.intersectsObject(object))) {\n\t\t\t\t\tobject.modelViewMatrix.multiplyMatrices(shadowCamera.matrixWorldInverse, object.matrixWorld);\n\n\t\t\t\t\tconst geometry = _objects.update(object);\n\n\t\t\t\t\tconst material = object.material;\n\n\t\t\t\t\tif (Array.isArray(material)) {\n\t\t\t\t\t\tconst groups = geometry.groups;\n\n\t\t\t\t\t\tfor (let k = 0, kl = groups.length; k < kl; k++) {\n\t\t\t\t\t\t\tconst group = groups[k];\n\t\t\t\t\t\t\tconst groupMaterial = material[group.materialIndex];\n\n\t\t\t\t\t\t\tif (groupMaterial && groupMaterial.visible) {\n\t\t\t\t\t\t\t\tconst depthMaterial = getDepthMaterial(object, geometry, groupMaterial, light, shadowCamera.near, shadowCamera.far, type);\n\n\t\t\t\t\t\t\t\t_renderer.renderBufferDirect(shadowCamera, null, geometry, depthMaterial, object, group);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t} else if (material.visible) {\n\t\t\t\t\t\tconst depthMaterial = getDepthMaterial(object, geometry, material, light, shadowCamera.near, shadowCamera.far, type);\n\n\t\t\t\t\t\t_renderer.renderBufferDirect(shadowCamera, null, geometry, depthMaterial, object, null);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst children = object.children;\n\n\t\t\tfor (let i = 0, l = children.length; i < l; i++) {\n\t\t\t\trenderObject(children[i], camera, shadowCamera, light, type);\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction WebGLState(gl, extensions, capabilities) {\n\t\tconst isWebGL2 = capabilities.isWebGL2;\n\n\t\tfunction ColorBuffer() {\n\t\t\tlet locked = false;\n\t\t\tconst color = new Vector4();\n\t\t\tlet currentColorMask = null;\n\t\t\tconst currentColorClear = new Vector4(0, 0, 0, 0);\n\t\t\treturn {\n\t\t\t\tsetMask: function (colorMask) {\n\t\t\t\t\tif (currentColorMask !== colorMask && !locked) {\n\t\t\t\t\t\tgl.colorMask(colorMask, colorMask, colorMask, colorMask);\n\t\t\t\t\t\tcurrentColorMask = colorMask;\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tsetLocked: function (lock) {\n\t\t\t\t\tlocked = lock;\n\t\t\t\t},\n\t\t\t\tsetClear: function (r, g, b, a, premultipliedAlpha) {\n\t\t\t\t\tif (premultipliedAlpha === true) {\n\t\t\t\t\t\tr *= a;\n\t\t\t\t\t\tg *= a;\n\t\t\t\t\t\tb *= a;\n\t\t\t\t\t}\n\n\t\t\t\t\tcolor.set(r, g, b, a);\n\n\t\t\t\t\tif (currentColorClear.equals(color) === false) {\n\t\t\t\t\t\tgl.clearColor(r, g, b, a);\n\t\t\t\t\t\tcurrentColorClear.copy(color);\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\treset: function () {\n\t\t\t\t\tlocked = false;\n\t\t\t\t\tcurrentColorMask = null;\n\t\t\t\t\tcurrentColorClear.set(-1, 0, 0, 0); // set to invalid state\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\n\t\tfunction DepthBuffer() {\n\t\t\tlet locked = false;\n\t\t\tlet currentDepthMask = null;\n\t\t\tlet currentDepthFunc = null;\n\t\t\tlet currentDepthClear = null;\n\t\t\treturn {\n\t\t\t\tsetTest: function (depthTest) {\n\t\t\t\t\tif (depthTest) {\n\t\t\t\t\t\tenable(gl.DEPTH_TEST);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tdisable(gl.DEPTH_TEST);\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tsetMask: function (depthMask) {\n\t\t\t\t\tif (currentDepthMask !== depthMask && !locked) {\n\t\t\t\t\t\tgl.depthMask(depthMask);\n\t\t\t\t\t\tcurrentDepthMask = depthMask;\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tsetFunc: function (depthFunc) {\n\t\t\t\t\tif (currentDepthFunc !== depthFunc) {\n\t\t\t\t\t\tif (depthFunc) {\n\t\t\t\t\t\t\tswitch (depthFunc) {\n\t\t\t\t\t\t\t\tcase NeverDepth:\n\t\t\t\t\t\t\t\t\tgl.depthFunc(gl.NEVER);\n\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\tcase AlwaysDepth:\n\t\t\t\t\t\t\t\t\tgl.depthFunc(gl.ALWAYS);\n\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\tcase LessDepth:\n\t\t\t\t\t\t\t\t\tgl.depthFunc(gl.LESS);\n\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\tcase LessEqualDepth:\n\t\t\t\t\t\t\t\t\tgl.depthFunc(gl.LEQUAL);\n\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\tcase EqualDepth:\n\t\t\t\t\t\t\t\t\tgl.depthFunc(gl.EQUAL);\n\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\tcase GreaterEqualDepth:\n\t\t\t\t\t\t\t\t\tgl.depthFunc(gl.GEQUAL);\n\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\tcase GreaterDepth:\n\t\t\t\t\t\t\t\t\tgl.depthFunc(gl.GREATER);\n\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\tcase NotEqualDepth:\n\t\t\t\t\t\t\t\t\tgl.depthFunc(gl.NOTEQUAL);\n\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\t\tgl.depthFunc(gl.LEQUAL);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tgl.depthFunc(gl.LEQUAL);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tcurrentDepthFunc = depthFunc;\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tsetLocked: function (lock) {\n\t\t\t\t\tlocked = lock;\n\t\t\t\t},\n\t\t\t\tsetClear: function (depth) {\n\t\t\t\t\tif (currentDepthClear !== depth) {\n\t\t\t\t\t\tgl.clearDepth(depth);\n\t\t\t\t\t\tcurrentDepthClear = depth;\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\treset: function () {\n\t\t\t\t\tlocked = false;\n\t\t\t\t\tcurrentDepthMask = null;\n\t\t\t\t\tcurrentDepthFunc = null;\n\t\t\t\t\tcurrentDepthClear = null;\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\n\t\tfunction StencilBuffer() {\n\t\t\tlet locked = false;\n\t\t\tlet currentStencilMask = null;\n\t\t\tlet currentStencilFunc = null;\n\t\t\tlet currentStencilRef = null;\n\t\t\tlet currentStencilFuncMask = null;\n\t\t\tlet currentStencilFail = null;\n\t\t\tlet currentStencilZFail = null;\n\t\t\tlet currentStencilZPass = null;\n\t\t\tlet currentStencilClear = null;\n\t\t\treturn {\n\t\t\t\tsetTest: function (stencilTest) {\n\t\t\t\t\tif (!locked) {\n\t\t\t\t\t\tif (stencilTest) {\n\t\t\t\t\t\t\tenable(gl.STENCIL_TEST);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tdisable(gl.STENCIL_TEST);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tsetMask: function (stencilMask) {\n\t\t\t\t\tif (currentStencilMask !== stencilMask && !locked) {\n\t\t\t\t\t\tgl.stencilMask(stencilMask);\n\t\t\t\t\t\tcurrentStencilMask = stencilMask;\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tsetFunc: function (stencilFunc, stencilRef, stencilMask) {\n\t\t\t\t\tif (currentStencilFunc !== stencilFunc || currentStencilRef !== stencilRef || currentStencilFuncMask !== stencilMask) {\n\t\t\t\t\t\tgl.stencilFunc(stencilFunc, stencilRef, stencilMask);\n\t\t\t\t\t\tcurrentStencilFunc = stencilFunc;\n\t\t\t\t\t\tcurrentStencilRef = stencilRef;\n\t\t\t\t\t\tcurrentStencilFuncMask = stencilMask;\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tsetOp: function (stencilFail, stencilZFail, stencilZPass) {\n\t\t\t\t\tif (currentStencilFail !== stencilFail || currentStencilZFail !== stencilZFail || currentStencilZPass !== stencilZPass) {\n\t\t\t\t\t\tgl.stencilOp(stencilFail, stencilZFail, stencilZPass);\n\t\t\t\t\t\tcurrentStencilFail = stencilFail;\n\t\t\t\t\t\tcurrentStencilZFail = stencilZFail;\n\t\t\t\t\t\tcurrentStencilZPass = stencilZPass;\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tsetLocked: function (lock) {\n\t\t\t\t\tlocked = lock;\n\t\t\t\t},\n\t\t\t\tsetClear: function (stencil) {\n\t\t\t\t\tif (currentStencilClear !== stencil) {\n\t\t\t\t\t\tgl.clearStencil(stencil);\n\t\t\t\t\t\tcurrentStencilClear = stencil;\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\treset: function () {\n\t\t\t\t\tlocked = false;\n\t\t\t\t\tcurrentStencilMask = null;\n\t\t\t\t\tcurrentStencilFunc = null;\n\t\t\t\t\tcurrentStencilRef = null;\n\t\t\t\t\tcurrentStencilFuncMask = null;\n\t\t\t\t\tcurrentStencilFail = null;\n\t\t\t\t\tcurrentStencilZFail = null;\n\t\t\t\t\tcurrentStencilZPass = null;\n\t\t\t\t\tcurrentStencilClear = null;\n\t\t\t\t}\n\t\t\t};\n\t\t} //\n\n\n\t\tconst colorBuffer = new ColorBuffer();\n\t\tconst depthBuffer = new DepthBuffer();\n\t\tconst stencilBuffer = new StencilBuffer();\n\t\tlet enabledCapabilities = {};\n\t\tlet xrFramebuffer = null;\n\t\tlet currentBoundFramebuffers = {};\n\t\tlet currentProgram = null;\n\t\tlet currentBlendingEnabled = false;\n\t\tlet currentBlending = null;\n\t\tlet currentBlendEquation = null;\n\t\tlet currentBlendSrc = null;\n\t\tlet currentBlendDst = null;\n\t\tlet currentBlendEquationAlpha = null;\n\t\tlet currentBlendSrcAlpha = null;\n\t\tlet currentBlendDstAlpha = null;\n\t\tlet currentPremultipledAlpha = false;\n\t\tlet currentFlipSided = null;\n\t\tlet currentCullFace = null;\n\t\tlet currentLineWidth = null;\n\t\tlet currentPolygonOffsetFactor = null;\n\t\tlet currentPolygonOffsetUnits = null;\n\t\tconst maxTextures = gl.getParameter(gl.MAX_COMBINED_TEXTURE_IMAGE_UNITS);\n\t\tlet lineWidthAvailable = false;\n\t\tlet version = 0;\n\t\tconst glVersion = gl.getParameter(gl.VERSION);\n\n\t\tif (glVersion.indexOf('WebGL') !== -1) {\n\t\t\tversion = parseFloat(/^WebGL (\\d)/.exec(glVersion)[1]);\n\t\t\tlineWidthAvailable = version >= 1.0;\n\t\t} else if (glVersion.indexOf('OpenGL ES') !== -1) {\n\t\t\tversion = parseFloat(/^OpenGL ES (\\d)/.exec(glVersion)[1]);\n\t\t\tlineWidthAvailable = version >= 2.0;\n\t\t}\n\n\t\tlet currentTextureSlot = null;\n\t\tlet currentBoundTextures = {};\n\t\tconst scissorParam = gl.getParameter(gl.SCISSOR_BOX);\n\t\tconst viewportParam = gl.getParameter(gl.VIEWPORT);\n\t\tconst currentScissor = new Vector4().fromArray(scissorParam);\n\t\tconst currentViewport = new Vector4().fromArray(viewportParam);\n\n\t\tfunction createTexture(type, target, count) {\n\t\t\tconst data = new Uint8Array(4); // 4 is required to match default unpack alignment of 4.\n\n\t\t\tconst texture = gl.createTexture();\n\t\t\tgl.bindTexture(type, texture);\n\t\t\tgl.texParameteri(type, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n\t\t\tgl.texParameteri(type, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n\n\t\t\tfor (let i = 0; i < count; i++) {\n\t\t\t\tgl.texImage2D(target + i, 0, gl.RGBA, 1, 1, 0, gl.RGBA, gl.UNSIGNED_BYTE, data);\n\t\t\t}\n\n\t\t\treturn texture;\n\t\t}\n\n\t\tconst emptyTextures = {};\n\t\temptyTextures[gl.TEXTURE_2D] = createTexture(gl.TEXTURE_2D, gl.TEXTURE_2D, 1);\n\t\temptyTextures[gl.TEXTURE_CUBE_MAP] = createTexture(gl.TEXTURE_CUBE_MAP, gl.TEXTURE_CUBE_MAP_POSITIVE_X, 6); // init\n\n\t\tcolorBuffer.setClear(0, 0, 0, 1);\n\t\tdepthBuffer.setClear(1);\n\t\tstencilBuffer.setClear(0);\n\t\tenable(gl.DEPTH_TEST);\n\t\tdepthBuffer.setFunc(LessEqualDepth);\n\t\tsetFlipSided(false);\n\t\tsetCullFace(CullFaceBack);\n\t\tenable(gl.CULL_FACE);\n\t\tsetBlending(NoBlending); //\n\n\t\tfunction enable(id) {\n\t\t\tif (enabledCapabilities[id] !== true) {\n\t\t\t\tgl.enable(id);\n\t\t\t\tenabledCapabilities[id] = true;\n\t\t\t}\n\t\t}\n\n\t\tfunction disable(id) {\n\t\t\tif (enabledCapabilities[id] !== false) {\n\t\t\t\tgl.disable(id);\n\t\t\t\tenabledCapabilities[id] = false;\n\t\t\t}\n\t\t}\n\n\t\tfunction bindXRFramebuffer(framebuffer) {\n\t\t\tif (framebuffer !== xrFramebuffer) {\n\t\t\t\tgl.bindFramebuffer(gl.FRAMEBUFFER, framebuffer);\n\t\t\t\txrFramebuffer = framebuffer;\n\t\t\t}\n\t\t}\n\n\t\tfunction bindFramebuffer(target, framebuffer) {\n\t\t\tif (framebuffer === null && xrFramebuffer !== null) framebuffer = xrFramebuffer; // use active XR framebuffer if available\n\n\t\t\tif (currentBoundFramebuffers[target] !== framebuffer) {\n\t\t\t\tgl.bindFramebuffer(target, framebuffer);\n\t\t\t\tcurrentBoundFramebuffers[target] = framebuffer;\n\n\t\t\t\tif (isWebGL2) {\n\t\t\t\t\t// gl.DRAW_FRAMEBUFFER is equivalent to gl.FRAMEBUFFER\n\t\t\t\t\tif (target === gl.DRAW_FRAMEBUFFER) {\n\t\t\t\t\t\tcurrentBoundFramebuffers[gl.FRAMEBUFFER] = framebuffer;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (target === gl.FRAMEBUFFER) {\n\t\t\t\t\t\tcurrentBoundFramebuffers[gl.DRAW_FRAMEBUFFER] = framebuffer;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\treturn false;\n\t\t}\n\n\t\tfunction useProgram(program) {\n\t\t\tif (currentProgram !== program) {\n\t\t\t\tgl.useProgram(program);\n\t\t\t\tcurrentProgram = program;\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\treturn false;\n\t\t}\n\n\t\tconst equationToGL = {\n\t\t\t[AddEquation]: gl.FUNC_ADD,\n\t\t\t[SubtractEquation]: gl.FUNC_SUBTRACT,\n\t\t\t[ReverseSubtractEquation]: gl.FUNC_REVERSE_SUBTRACT\n\t\t};\n\n\t\tif (isWebGL2) {\n\t\t\tequationToGL[MinEquation] = gl.MIN;\n\t\t\tequationToGL[MaxEquation] = gl.MAX;\n\t\t} else {\n\t\t\tconst extension = extensions.get('EXT_blend_minmax');\n\n\t\t\tif (extension !== null) {\n\t\t\t\tequationToGL[MinEquation] = extension.MIN_EXT;\n\t\t\t\tequationToGL[MaxEquation] = extension.MAX_EXT;\n\t\t\t}\n\t\t}\n\n\t\tconst factorToGL = {\n\t\t\t[ZeroFactor]: gl.ZERO,\n\t\t\t[OneFactor]: gl.ONE,\n\t\t\t[SrcColorFactor]: gl.SRC_COLOR,\n\t\t\t[SrcAlphaFactor]: gl.SRC_ALPHA,\n\t\t\t[SrcAlphaSaturateFactor]: gl.SRC_ALPHA_SATURATE,\n\t\t\t[DstColorFactor]: gl.DST_COLOR,\n\t\t\t[DstAlphaFactor]: gl.DST_ALPHA,\n\t\t\t[OneMinusSrcColorFactor]: gl.ONE_MINUS_SRC_COLOR,\n\t\t\t[OneMinusSrcAlphaFactor]: gl.ONE_MINUS_SRC_ALPHA,\n\t\t\t[OneMinusDstColorFactor]: gl.ONE_MINUS_DST_COLOR,\n\t\t\t[OneMinusDstAlphaFactor]: gl.ONE_MINUS_DST_ALPHA\n\t\t};\n\n\t\tfunction setBlending(blending, blendEquation, blendSrc, blendDst, blendEquationAlpha, blendSrcAlpha, blendDstAlpha, premultipliedAlpha) {\n\t\t\tif (blending === NoBlending) {\n\t\t\t\tif (currentBlendingEnabled === true) {\n\t\t\t\t\tdisable(gl.BLEND);\n\t\t\t\t\tcurrentBlendingEnabled = false;\n\t\t\t\t}\n\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (currentBlendingEnabled === false) {\n\t\t\t\tenable(gl.BLEND);\n\t\t\t\tcurrentBlendingEnabled = true;\n\t\t\t}\n\n\t\t\tif (blending !== CustomBlending) {\n\t\t\t\tif (blending !== currentBlending || premultipliedAlpha !== currentPremultipledAlpha) {\n\t\t\t\t\tif (currentBlendEquation !== AddEquation || currentBlendEquationAlpha !== AddEquation) {\n\t\t\t\t\t\tgl.blendEquation(gl.FUNC_ADD);\n\t\t\t\t\t\tcurrentBlendEquation = AddEquation;\n\t\t\t\t\t\tcurrentBlendEquationAlpha = AddEquation;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (premultipliedAlpha) {\n\t\t\t\t\t\tswitch (blending) {\n\t\t\t\t\t\t\tcase NormalBlending:\n\t\t\t\t\t\t\t\tgl.blendFuncSeparate(gl.ONE, gl.ONE_MINUS_SRC_ALPHA, gl.ONE, gl.ONE_MINUS_SRC_ALPHA);\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase AdditiveBlending:\n\t\t\t\t\t\t\t\tgl.blendFunc(gl.ONE, gl.ONE);\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase SubtractiveBlending:\n\t\t\t\t\t\t\t\tgl.blendFuncSeparate(gl.ZERO, gl.ZERO, gl.ONE_MINUS_SRC_COLOR, gl.ONE_MINUS_SRC_ALPHA);\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase MultiplyBlending:\n\t\t\t\t\t\t\t\tgl.blendFuncSeparate(gl.ZERO, gl.SRC_COLOR, gl.ZERO, gl.SRC_ALPHA);\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\tconsole.error('THREE.WebGLState: Invalid blending: ', blending);\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tswitch (blending) {\n\t\t\t\t\t\t\tcase NormalBlending:\n\t\t\t\t\t\t\t\tgl.blendFuncSeparate(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA, gl.ONE, gl.ONE_MINUS_SRC_ALPHA);\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase AdditiveBlending:\n\t\t\t\t\t\t\t\tgl.blendFunc(gl.SRC_ALPHA, gl.ONE);\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase SubtractiveBlending:\n\t\t\t\t\t\t\t\tgl.blendFunc(gl.ZERO, gl.ONE_MINUS_SRC_COLOR);\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase MultiplyBlending:\n\t\t\t\t\t\t\t\tgl.blendFunc(gl.ZERO, gl.SRC_COLOR);\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\tconsole.error('THREE.WebGLState: Invalid blending: ', blending);\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tcurrentBlendSrc = null;\n\t\t\t\t\tcurrentBlendDst = null;\n\t\t\t\t\tcurrentBlendSrcAlpha = null;\n\t\t\t\t\tcurrentBlendDstAlpha = null;\n\t\t\t\t\tcurrentBlending = blending;\n\t\t\t\t\tcurrentPremultipledAlpha = premultipliedAlpha;\n\t\t\t\t}\n\n\t\t\t\treturn;\n\t\t\t} // custom blending\n\n\n\t\t\tblendEquationAlpha = blendEquationAlpha || blendEquation;\n\t\t\tblendSrcAlpha = blendSrcAlpha || blendSrc;\n\t\t\tblendDstAlpha = blendDstAlpha || blendDst;\n\n\t\t\tif (blendEquation !== currentBlendEquation || blendEquationAlpha !== currentBlendEquationAlpha) {\n\t\t\t\tgl.blendEquationSeparate(equationToGL[blendEquation], equationToGL[blendEquationAlpha]);\n\t\t\t\tcurrentBlendEquation = blendEquation;\n\t\t\t\tcurrentBlendEquationAlpha = blendEquationAlpha;\n\t\t\t}\n\n\t\t\tif (blendSrc !== currentBlendSrc || blendDst !== currentBlendDst || blendSrcAlpha !== currentBlendSrcAlpha || blendDstAlpha !== currentBlendDstAlpha) {\n\t\t\t\tgl.blendFuncSeparate(factorToGL[blendSrc], factorToGL[blendDst], factorToGL[blendSrcAlpha], factorToGL[blendDstAlpha]);\n\t\t\t\tcurrentBlendSrc = blendSrc;\n\t\t\t\tcurrentBlendDst = blendDst;\n\t\t\t\tcurrentBlendSrcAlpha = blendSrcAlpha;\n\t\t\t\tcurrentBlendDstAlpha = blendDstAlpha;\n\t\t\t}\n\n\t\t\tcurrentBlending = blending;\n\t\t\tcurrentPremultipledAlpha = null;\n\t\t}\n\n\t\tfunction setMaterial(material, frontFaceCW) {\n\t\t\tmaterial.side === DoubleSide ? disable(gl.CULL_FACE) : enable(gl.CULL_FACE);\n\t\t\tlet flipSided = material.side === BackSide;\n\t\t\tif (frontFaceCW) flipSided = !flipSided;\n\t\t\tsetFlipSided(flipSided);\n\t\t\tmaterial.blending === NormalBlending && material.transparent === false ? setBlending(NoBlending) : setBlending(material.blending, material.blendEquation, material.blendSrc, material.blendDst, material.blendEquationAlpha, material.blendSrcAlpha, material.blendDstAlpha, material.premultipliedAlpha);\n\t\t\tdepthBuffer.setFunc(material.depthFunc);\n\t\t\tdepthBuffer.setTest(material.depthTest);\n\t\t\tdepthBuffer.setMask(material.depthWrite);\n\t\t\tcolorBuffer.setMask(material.colorWrite);\n\t\t\tconst stencilWrite = material.stencilWrite;\n\t\t\tstencilBuffer.setTest(stencilWrite);\n\n\t\t\tif (stencilWrite) {\n\t\t\t\tstencilBuffer.setMask(material.stencilWriteMask);\n\t\t\t\tstencilBuffer.setFunc(material.stencilFunc, material.stencilRef, material.stencilFuncMask);\n\t\t\t\tstencilBuffer.setOp(material.stencilFail, material.stencilZFail, material.stencilZPass);\n\t\t\t}\n\n\t\t\tsetPolygonOffset(material.polygonOffset, material.polygonOffsetFactor, material.polygonOffsetUnits);\n\t\t\tmaterial.alphaToCoverage === true ? enable(gl.SAMPLE_ALPHA_TO_COVERAGE) : disable(gl.SAMPLE_ALPHA_TO_COVERAGE);\n\t\t} //\n\n\n\t\tfunction setFlipSided(flipSided) {\n\t\t\tif (currentFlipSided !== flipSided) {\n\t\t\t\tif (flipSided) {\n\t\t\t\t\tgl.frontFace(gl.CW);\n\t\t\t\t} else {\n\t\t\t\t\tgl.frontFace(gl.CCW);\n\t\t\t\t}\n\n\t\t\t\tcurrentFlipSided = flipSided;\n\t\t\t}\n\t\t}\n\n\t\tfunction setCullFace(cullFace) {\n\t\t\tif (cullFace !== CullFaceNone) {\n\t\t\t\tenable(gl.CULL_FACE);\n\n\t\t\t\tif (cullFace !== currentCullFace) {\n\t\t\t\t\tif (cullFace === CullFaceBack) {\n\t\t\t\t\t\tgl.cullFace(gl.BACK);\n\t\t\t\t\t} else if (cullFace === CullFaceFront) {\n\t\t\t\t\t\tgl.cullFace(gl.FRONT);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tgl.cullFace(gl.FRONT_AND_BACK);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tdisable(gl.CULL_FACE);\n\t\t\t}\n\n\t\t\tcurrentCullFace = cullFace;\n\t\t}\n\n\t\tfunction setLineWidth(width) {\n\t\t\tif (width !== currentLineWidth) {\n\t\t\t\tif (lineWidthAvailable) gl.lineWidth(width);\n\t\t\t\tcurrentLineWidth = width;\n\t\t\t}\n\t\t}\n\n\t\tfunction setPolygonOffset(polygonOffset, factor, units) {\n\t\t\tif (polygonOffset) {\n\t\t\t\tenable(gl.POLYGON_OFFSET_FILL);\n\n\t\t\t\tif (currentPolygonOffsetFactor !== factor || currentPolygonOffsetUnits !== units) {\n\t\t\t\t\tgl.polygonOffset(factor, units);\n\t\t\t\t\tcurrentPolygonOffsetFactor = factor;\n\t\t\t\t\tcurrentPolygonOffsetUnits = units;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tdisable(gl.POLYGON_OFFSET_FILL);\n\t\t\t}\n\t\t}\n\n\t\tfunction setScissorTest(scissorTest) {\n\t\t\tif (scissorTest) {\n\t\t\t\tenable(gl.SCISSOR_TEST);\n\t\t\t} else {\n\t\t\t\tdisable(gl.SCISSOR_TEST);\n\t\t\t}\n\t\t} // texture\n\n\n\t\tfunction activeTexture(webglSlot) {\n\t\t\tif (webglSlot === undefined) webglSlot = gl.TEXTURE0 + maxTextures - 1;\n\n\t\t\tif (currentTextureSlot !== webglSlot) {\n\t\t\t\tgl.activeTexture(webglSlot);\n\t\t\t\tcurrentTextureSlot = webglSlot;\n\t\t\t}\n\t\t}\n\n\t\tfunction bindTexture(webglType, webglTexture) {\n\t\t\tif (currentTextureSlot === null) {\n\t\t\t\tactiveTexture();\n\t\t\t}\n\n\t\t\tlet boundTexture = currentBoundTextures[currentTextureSlot];\n\n\t\t\tif (boundTexture === undefined) {\n\t\t\t\tboundTexture = {\n\t\t\t\t\ttype: undefined,\n\t\t\t\t\ttexture: undefined\n\t\t\t\t};\n\t\t\t\tcurrentBoundTextures[currentTextureSlot] = boundTexture;\n\t\t\t}\n\n\t\t\tif (boundTexture.type !== webglType || boundTexture.texture !== webglTexture) {\n\t\t\t\tgl.bindTexture(webglType, webglTexture || emptyTextures[webglType]);\n\t\t\t\tboundTexture.type = webglType;\n\t\t\t\tboundTexture.texture = webglTexture;\n\t\t\t}\n\t\t}\n\n\t\tfunction unbindTexture() {\n\t\t\tconst boundTexture = currentBoundTextures[currentTextureSlot];\n\n\t\t\tif (boundTexture !== undefined && boundTexture.type !== undefined) {\n\t\t\t\tgl.bindTexture(boundTexture.type, null);\n\t\t\t\tboundTexture.type = undefined;\n\t\t\t\tboundTexture.texture = undefined;\n\t\t\t}\n\t\t}\n\n\t\tfunction compressedTexImage2D() {\n\t\t\ttry {\n\t\t\t\tgl.compressedTexImage2D.apply(gl, arguments);\n\t\t\t} catch (error) {\n\t\t\t\tconsole.error('THREE.WebGLState:', error);\n\t\t\t}\n\t\t}\n\n\t\tfunction texImage2D() {\n\t\t\ttry {\n\t\t\t\tgl.texImage2D.apply(gl, arguments);\n\t\t\t} catch (error) {\n\t\t\t\tconsole.error('THREE.WebGLState:', error);\n\t\t\t}\n\t\t}\n\n\t\tfunction texImage3D() {\n\t\t\ttry {\n\t\t\t\tgl.texImage3D.apply(gl, arguments);\n\t\t\t} catch (error) {\n\t\t\t\tconsole.error('THREE.WebGLState:', error);\n\t\t\t}\n\t\t} //\n\n\n\t\tfunction scissor(scissor) {\n\t\t\tif (currentScissor.equals(scissor) === false) {\n\t\t\t\tgl.scissor(scissor.x, scissor.y, scissor.z, scissor.w);\n\t\t\t\tcurrentScissor.copy(scissor);\n\t\t\t}\n\t\t}\n\n\t\tfunction viewport(viewport) {\n\t\t\tif (currentViewport.equals(viewport) === false) {\n\t\t\t\tgl.viewport(viewport.x, viewport.y, viewport.z, viewport.w);\n\t\t\t\tcurrentViewport.copy(viewport);\n\t\t\t}\n\t\t} //\n\n\n\t\tfunction reset() {\n\t\t\t// reset state\n\t\t\tgl.disable(gl.BLEND);\n\t\t\tgl.disable(gl.CULL_FACE);\n\t\t\tgl.disable(gl.DEPTH_TEST);\n\t\t\tgl.disable(gl.POLYGON_OFFSET_FILL);\n\t\t\tgl.disable(gl.SCISSOR_TEST);\n\t\t\tgl.disable(gl.STENCIL_TEST);\n\t\t\tgl.disable(gl.SAMPLE_ALPHA_TO_COVERAGE);\n\t\t\tgl.blendEquation(gl.FUNC_ADD);\n\t\t\tgl.blendFunc(gl.ONE, gl.ZERO);\n\t\t\tgl.blendFuncSeparate(gl.ONE, gl.ZERO, gl.ONE, gl.ZERO);\n\t\t\tgl.colorMask(true, true, true, true);\n\t\t\tgl.clearColor(0, 0, 0, 0);\n\t\t\tgl.depthMask(true);\n\t\t\tgl.depthFunc(gl.LESS);\n\t\t\tgl.clearDepth(1);\n\t\t\tgl.stencilMask(0xffffffff);\n\t\t\tgl.stencilFunc(gl.ALWAYS, 0, 0xffffffff);\n\t\t\tgl.stencilOp(gl.KEEP, gl.KEEP, gl.KEEP);\n\t\t\tgl.clearStencil(0);\n\t\t\tgl.cullFace(gl.BACK);\n\t\t\tgl.frontFace(gl.CCW);\n\t\t\tgl.polygonOffset(0, 0);\n\t\t\tgl.activeTexture(gl.TEXTURE0);\n\t\t\tgl.bindFramebuffer(gl.FRAMEBUFFER, null);\n\n\t\t\tif (isWebGL2 === true) {\n\t\t\t\tgl.bindFramebuffer(gl.DRAW_FRAMEBUFFER, null);\n\t\t\t\tgl.bindFramebuffer(gl.READ_FRAMEBUFFER, null);\n\t\t\t}\n\n\t\t\tgl.useProgram(null);\n\t\t\tgl.lineWidth(1);\n\t\t\tgl.scissor(0, 0, gl.canvas.width, gl.canvas.height);\n\t\t\tgl.viewport(0, 0, gl.canvas.width, gl.canvas.height); // reset internals\n\n\t\t\tenabledCapabilities = {};\n\t\t\tcurrentTextureSlot = null;\n\t\t\tcurrentBoundTextures = {};\n\t\t\txrFramebuffer = null;\n\t\t\tcurrentBoundFramebuffers = {};\n\t\t\tcurrentProgram = null;\n\t\t\tcurrentBlendingEnabled = false;\n\t\t\tcurrentBlending = null;\n\t\t\tcurrentBlendEquation = null;\n\t\t\tcurrentBlendSrc = null;\n\t\t\tcurrentBlendDst = null;\n\t\t\tcurrentBlendEquationAlpha = null;\n\t\t\tcurrentBlendSrcAlpha = null;\n\t\t\tcurrentBlendDstAlpha = null;\n\t\t\tcurrentPremultipledAlpha = false;\n\t\t\tcurrentFlipSided = null;\n\t\t\tcurrentCullFace = null;\n\t\t\tcurrentLineWidth = null;\n\t\t\tcurrentPolygonOffsetFactor = null;\n\t\t\tcurrentPolygonOffsetUnits = null;\n\t\t\tcurrentScissor.set(0, 0, gl.canvas.width, gl.canvas.height);\n\t\t\tcurrentViewport.set(0, 0, gl.canvas.width, gl.canvas.height);\n\t\t\tcolorBuffer.reset();\n\t\t\tdepthBuffer.reset();\n\t\t\tstencilBuffer.reset();\n\t\t}\n\n\t\treturn {\n\t\t\tbuffers: {\n\t\t\t\tcolor: colorBuffer,\n\t\t\t\tdepth: depthBuffer,\n\t\t\t\tstencil: stencilBuffer\n\t\t\t},\n\t\t\tenable: enable,\n\t\t\tdisable: disable,\n\t\t\tbindFramebuffer: bindFramebuffer,\n\t\t\tbindXRFramebuffer: bindXRFramebuffer,\n\t\t\tuseProgram: useProgram,\n\t\t\tsetBlending: setBlending,\n\t\t\tsetMaterial: setMaterial,\n\t\t\tsetFlipSided: setFlipSided,\n\t\t\tsetCullFace: setCullFace,\n\t\t\tsetLineWidth: setLineWidth,\n\t\t\tsetPolygonOffset: setPolygonOffset,\n\t\t\tsetScissorTest: setScissorTest,\n\t\t\tactiveTexture: activeTexture,\n\t\t\tbindTexture: bindTexture,\n\t\t\tunbindTexture: unbindTexture,\n\t\t\tcompressedTexImage2D: compressedTexImage2D,\n\t\t\ttexImage2D: texImage2D,\n\t\t\ttexImage3D: texImage3D,\n\t\t\tscissor: scissor,\n\t\t\tviewport: viewport,\n\t\t\treset: reset\n\t\t};\n\t}\n\n\tfunction WebGLTextures(_gl, extensions, state, properties, capabilities, utils, info) {\n\t\tconst isWebGL2 = capabilities.isWebGL2;\n\t\tconst maxTextures = capabilities.maxTextures;\n\t\tconst maxCubemapSize = capabilities.maxCubemapSize;\n\t\tconst maxTextureSize = capabilities.maxTextureSize;\n\t\tconst maxSamples = capabilities.maxSamples;\n\n\t\tconst _videoTextures = new WeakMap();\n\n\t\tlet _canvas; // cordova iOS (as of 5.0) still uses UIWebView, which provides OffscreenCanvas,\n\t\t// also OffscreenCanvas.getContext(\"webgl\"), but not OffscreenCanvas.getContext(\"2d\")!\n\t\t// Some implementations may only implement OffscreenCanvas partially (e.g. lacking 2d).\n\n\n\t\tlet useOffscreenCanvas = false;\n\n\t\ttry {\n\t\t\tuseOffscreenCanvas = typeof OffscreenCanvas !== 'undefined' && new OffscreenCanvas(1, 1).getContext('2d') !== null;\n\t\t} catch (err) {// Ignore any errors\n\t\t}\n\n\t\tfunction createCanvas(width, height) {\n\t\t\t// Use OffscreenCanvas when available. Specially needed in web workers\n\t\t\treturn useOffscreenCanvas ? new OffscreenCanvas(width, height) : createElementNS('canvas');\n\t\t}\n\n\t\tfunction resizeImage(image, needsPowerOfTwo, needsNewCanvas, maxSize) {\n\t\t\tlet scale = 1; // handle case if texture exceeds max size\n\n\t\t\tif (image.width > maxSize || image.height > maxSize) {\n\t\t\t\tscale = maxSize / Math.max(image.width, image.height);\n\t\t\t} // only perform resize if necessary\n\n\n\t\t\tif (scale < 1 || needsPowerOfTwo === true) {\n\t\t\t\t// only perform resize for certain image types\n\t\t\t\tif (typeof HTMLImageElement !== 'undefined' && image instanceof HTMLImageElement || typeof HTMLCanvasElement !== 'undefined' && image instanceof HTMLCanvasElement || typeof ImageBitmap !== 'undefined' && image instanceof ImageBitmap) {\n\t\t\t\t\tconst floor = needsPowerOfTwo ? floorPowerOfTwo : Math.floor;\n\t\t\t\t\tconst width = floor(scale * image.width);\n\t\t\t\t\tconst height = floor(scale * image.height);\n\t\t\t\t\tif (_canvas === undefined) _canvas = createCanvas(width, height); // cube textures can't reuse the same canvas\n\n\t\t\t\t\tconst canvas = needsNewCanvas ? createCanvas(width, height) : _canvas;\n\t\t\t\t\tcanvas.width = width;\n\t\t\t\t\tcanvas.height = height;\n\t\t\t\t\tconst context = canvas.getContext('2d');\n\t\t\t\t\tcontext.drawImage(image, 0, 0, width, height);\n\t\t\t\t\tconsole.warn('THREE.WebGLRenderer: Texture has been resized from (' + image.width + 'x' + image.height + ') to (' + width + 'x' + height + ').');\n\t\t\t\t\treturn canvas;\n\t\t\t\t} else {\n\t\t\t\t\tif ('data' in image) {\n\t\t\t\t\t\tconsole.warn('THREE.WebGLRenderer: Image in DataTexture is too big (' + image.width + 'x' + image.height + ').');\n\t\t\t\t\t}\n\n\t\t\t\t\treturn image;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn image;\n\t\t}\n\n\t\tfunction isPowerOfTwo$1(image) {\n\t\t\treturn isPowerOfTwo(image.width) && isPowerOfTwo(image.height);\n\t\t}\n\n\t\tfunction textureNeedsPowerOfTwo(texture) {\n\t\t\tif (isWebGL2) return false;\n\t\t\treturn texture.wrapS !== ClampToEdgeWrapping || texture.wrapT !== ClampToEdgeWrapping || texture.minFilter !== NearestFilter && texture.minFilter !== LinearFilter;\n\t\t}\n\n\t\tfunction textureNeedsGenerateMipmaps(texture, supportsMips) {\n\t\t\treturn texture.generateMipmaps && supportsMips && texture.minFilter !== NearestFilter && texture.minFilter !== LinearFilter;\n\t\t}\n\n\t\tfunction generateMipmap(target, texture, width, height, depth = 1) {\n\t\t\t_gl.generateMipmap(target);\n\n\t\t\tconst textureProperties = properties.get(texture);\n\t\t\ttextureProperties.__maxMipLevel = Math.log2(Math.max(width, height, depth));\n\t\t}\n\n\t\tfunction getInternalFormat(internalFormatName, glFormat, glType, encoding) {\n\t\t\tif (isWebGL2 === false) return glFormat;\n\n\t\t\tif (internalFormatName !== null) {\n\t\t\t\tif (_gl[internalFormatName] !== undefined) return _gl[internalFormatName];\n\t\t\t\tconsole.warn('THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format \\'' + internalFormatName + '\\'');\n\t\t\t}\n\n\t\t\tlet internalFormat = glFormat;\n\n\t\t\tif (glFormat === _gl.RED) {\n\t\t\t\tif (glType === _gl.FLOAT) internalFormat = _gl.R32F;\n\t\t\t\tif (glType === _gl.HALF_FLOAT) internalFormat = _gl.R16F;\n\t\t\t\tif (glType === _gl.UNSIGNED_BYTE) internalFormat = _gl.R8;\n\t\t\t}\n\n\t\t\tif (glFormat === _gl.RGB) {\n\t\t\t\tif (glType === _gl.FLOAT) internalFormat = _gl.RGB32F;\n\t\t\t\tif (glType === _gl.HALF_FLOAT) internalFormat = _gl.RGB16F;\n\t\t\t\tif (glType === _gl.UNSIGNED_BYTE) internalFormat = _gl.RGB8;\n\t\t\t}\n\n\t\t\tif (glFormat === _gl.RGBA) {\n\t\t\t\tif (glType === _gl.FLOAT) internalFormat = _gl.RGBA32F;\n\t\t\t\tif (glType === _gl.HALF_FLOAT) internalFormat = _gl.RGBA16F;\n\t\t\t\tif (glType === _gl.UNSIGNED_BYTE) internalFormat = encoding === sRGBEncoding ? _gl.SRGB8_ALPHA8 : _gl.RGBA8;\n\t\t\t}\n\n\t\t\tif (internalFormat === _gl.R16F || internalFormat === _gl.R32F || internalFormat === _gl.RGBA16F || internalFormat === _gl.RGBA32F) {\n\t\t\t\textensions.get('EXT_color_buffer_float');\n\t\t\t}\n\n\t\t\treturn internalFormat;\n\t\t} // Fallback filters for non-power-of-2 textures\n\n\n\t\tfunction filterFallback(f) {\n\t\t\tif (f === NearestFilter || f === NearestMipmapNearestFilter || f === NearestMipmapLinearFilter) {\n\t\t\t\treturn _gl.NEAREST;\n\t\t\t}\n\n\t\t\treturn _gl.LINEAR;\n\t\t} //\n\n\n\t\tfunction onTextureDispose(event) {\n\t\t\tconst texture = event.target;\n\t\t\ttexture.removeEventListener('dispose', onTextureDispose);\n\t\t\tdeallocateTexture(texture);\n\n\t\t\tif (texture.isVideoTexture) {\n\t\t\t\t_videoTextures.delete(texture);\n\t\t\t}\n\n\t\t\tinfo.memory.textures--;\n\t\t}\n\n\t\tfunction onRenderTargetDispose(event) {\n\t\t\tconst renderTarget = event.target;\n\t\t\trenderTarget.removeEventListener('dispose', onRenderTargetDispose);\n\t\t\tdeallocateRenderTarget(renderTarget);\n\t\t} //\n\n\n\t\tfunction deallocateTexture(texture) {\n\t\t\tconst textureProperties = properties.get(texture);\n\t\t\tif (textureProperties.__webglInit === undefined) return;\n\n\t\t\t_gl.deleteTexture(textureProperties.__webglTexture);\n\n\t\t\tproperties.remove(texture);\n\t\t}\n\n\t\tfunction deallocateRenderTarget(renderTarget) {\n\t\t\tconst texture = renderTarget.texture;\n\t\t\tconst renderTargetProperties = properties.get(renderTarget);\n\t\t\tconst textureProperties = properties.get(texture);\n\t\t\tif (!renderTarget) return;\n\n\t\t\tif (textureProperties.__webglTexture !== undefined) {\n\t\t\t\t_gl.deleteTexture(textureProperties.__webglTexture);\n\n\t\t\t\tinfo.memory.textures--;\n\t\t\t}\n\n\t\t\tif (renderTarget.depthTexture) {\n\t\t\t\trenderTarget.depthTexture.dispose();\n\t\t\t}\n\n\t\t\tif (renderTarget.isWebGLCubeRenderTarget) {\n\t\t\t\tfor (let i = 0; i < 6; i++) {\n\t\t\t\t\t_gl.deleteFramebuffer(renderTargetProperties.__webglFramebuffer[i]);\n\n\t\t\t\t\tif (renderTargetProperties.__webglDepthbuffer) _gl.deleteRenderbuffer(renderTargetProperties.__webglDepthbuffer[i]);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t_gl.deleteFramebuffer(renderTargetProperties.__webglFramebuffer);\n\n\t\t\t\tif (renderTargetProperties.__webglDepthbuffer) _gl.deleteRenderbuffer(renderTargetProperties.__webglDepthbuffer);\n\t\t\t\tif (renderTargetProperties.__webglMultisampledFramebuffer) _gl.deleteFramebuffer(renderTargetProperties.__webglMultisampledFramebuffer);\n\t\t\t\tif (renderTargetProperties.__webglColorRenderbuffer) _gl.deleteRenderbuffer(renderTargetProperties.__webglColorRenderbuffer);\n\t\t\t\tif (renderTargetProperties.__webglDepthRenderbuffer) _gl.deleteRenderbuffer(renderTargetProperties.__webglDepthRenderbuffer);\n\t\t\t}\n\n\t\t\tif (renderTarget.isWebGLMultipleRenderTargets) {\n\t\t\t\tfor (let i = 0, il = texture.length; i < il; i++) {\n\t\t\t\t\tconst attachmentProperties = properties.get(texture[i]);\n\n\t\t\t\t\tif (attachmentProperties.__webglTexture) {\n\t\t\t\t\t\t_gl.deleteTexture(attachmentProperties.__webglTexture);\n\n\t\t\t\t\t\tinfo.memory.textures--;\n\t\t\t\t\t}\n\n\t\t\t\t\tproperties.remove(texture[i]);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tproperties.remove(texture);\n\t\t\tproperties.remove(renderTarget);\n\t\t} //\n\n\n\t\tlet textureUnits = 0;\n\n\t\tfunction resetTextureUnits() {\n\t\t\ttextureUnits = 0;\n\t\t}\n\n\t\tfunction allocateTextureUnit() {\n\t\t\tconst textureUnit = textureUnits;\n\n\t\t\tif (textureUnit >= maxTextures) {\n\t\t\t\tconsole.warn('THREE.WebGLTextures: Trying to use ' + textureUnit + ' texture units while this GPU supports only ' + maxTextures);\n\t\t\t}\n\n\t\t\ttextureUnits += 1;\n\t\t\treturn textureUnit;\n\t\t} //\n\n\n\t\tfunction setTexture2D(texture, slot) {\n\t\t\tconst textureProperties = properties.get(texture);\n\t\t\tif (texture.isVideoTexture) updateVideoTexture(texture);\n\n\t\t\tif (texture.version > 0 && textureProperties.__version !== texture.version) {\n\t\t\t\tconst image = texture.image;\n\n\t\t\t\tif (image === undefined) {\n\t\t\t\t\tconsole.warn('THREE.WebGLRenderer: Texture marked for update but image is undefined');\n\t\t\t\t} else if (image.complete === false) {\n\t\t\t\t\tconsole.warn('THREE.WebGLRenderer: Texture marked for update but image is incomplete');\n\t\t\t\t} else {\n\t\t\t\t\tuploadTexture(textureProperties, texture, slot);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tstate.activeTexture(_gl.TEXTURE0 + slot);\n\t\t\tstate.bindTexture(_gl.TEXTURE_2D, textureProperties.__webglTexture);\n\t\t}\n\n\t\tfunction setTexture2DArray(texture, slot) {\n\t\t\tconst textureProperties = properties.get(texture);\n\n\t\t\tif (texture.version > 0 && textureProperties.__version !== texture.version) {\n\t\t\t\tuploadTexture(textureProperties, texture, slot);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tstate.activeTexture(_gl.TEXTURE0 + slot);\n\t\t\tstate.bindTexture(_gl.TEXTURE_2D_ARRAY, textureProperties.__webglTexture);\n\t\t}\n\n\t\tfunction setTexture3D(texture, slot) {\n\t\t\tconst textureProperties = properties.get(texture);\n\n\t\t\tif (texture.version > 0 && textureProperties.__version !== texture.version) {\n\t\t\t\tuploadTexture(textureProperties, texture, slot);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tstate.activeTexture(_gl.TEXTURE0 + slot);\n\t\t\tstate.bindTexture(_gl.TEXTURE_3D, textureProperties.__webglTexture);\n\t\t}\n\n\t\tfunction setTextureCube(texture, slot) {\n\t\t\tconst textureProperties = properties.get(texture);\n\n\t\t\tif (texture.version > 0 && textureProperties.__version !== texture.version) {\n\t\t\t\tuploadCubeTexture(textureProperties, texture, slot);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tstate.activeTexture(_gl.TEXTURE0 + slot);\n\t\t\tstate.bindTexture(_gl.TEXTURE_CUBE_MAP, textureProperties.__webglTexture);\n\t\t}\n\n\t\tconst wrappingToGL = {\n\t\t\t[RepeatWrapping]: _gl.REPEAT,\n\t\t\t[ClampToEdgeWrapping]: _gl.CLAMP_TO_EDGE,\n\t\t\t[MirroredRepeatWrapping]: _gl.MIRRORED_REPEAT\n\t\t};\n\t\tconst filterToGL = {\n\t\t\t[NearestFilter]: _gl.NEAREST,\n\t\t\t[NearestMipmapNearestFilter]: _gl.NEAREST_MIPMAP_NEAREST,\n\t\t\t[NearestMipmapLinearFilter]: _gl.NEAREST_MIPMAP_LINEAR,\n\t\t\t[LinearFilter]: _gl.LINEAR,\n\t\t\t[LinearMipmapNearestFilter]: _gl.LINEAR_MIPMAP_NEAREST,\n\t\t\t[LinearMipmapLinearFilter]: _gl.LINEAR_MIPMAP_LINEAR\n\t\t};\n\n\t\tfunction setTextureParameters(textureType, texture, supportsMips) {\n\t\t\tif (supportsMips) {\n\t\t\t\t_gl.texParameteri(textureType, _gl.TEXTURE_WRAP_S, wrappingToGL[texture.wrapS]);\n\n\t\t\t\t_gl.texParameteri(textureType, _gl.TEXTURE_WRAP_T, wrappingToGL[texture.wrapT]);\n\n\t\t\t\tif (textureType === _gl.TEXTURE_3D || textureType === _gl.TEXTURE_2D_ARRAY) {\n\t\t\t\t\t_gl.texParameteri(textureType, _gl.TEXTURE_WRAP_R, wrappingToGL[texture.wrapR]);\n\t\t\t\t}\n\n\t\t\t\t_gl.texParameteri(textureType, _gl.TEXTURE_MAG_FILTER, filterToGL[texture.magFilter]);\n\n\t\t\t\t_gl.texParameteri(textureType, _gl.TEXTURE_MIN_FILTER, filterToGL[texture.minFilter]);\n\t\t\t} else {\n\t\t\t\t_gl.texParameteri(textureType, _gl.TEXTURE_WRAP_S, _gl.CLAMP_TO_EDGE);\n\n\t\t\t\t_gl.texParameteri(textureType, _gl.TEXTURE_WRAP_T, _gl.CLAMP_TO_EDGE);\n\n\t\t\t\tif (textureType === _gl.TEXTURE_3D || textureType === _gl.TEXTURE_2D_ARRAY) {\n\t\t\t\t\t_gl.texParameteri(textureType, _gl.TEXTURE_WRAP_R, _gl.CLAMP_TO_EDGE);\n\t\t\t\t}\n\n\t\t\t\tif (texture.wrapS !== ClampToEdgeWrapping || texture.wrapT !== ClampToEdgeWrapping) {\n\t\t\t\t\tconsole.warn('THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping.');\n\t\t\t\t}\n\n\t\t\t\t_gl.texParameteri(textureType, _gl.TEXTURE_MAG_FILTER, filterFallback(texture.magFilter));\n\n\t\t\t\t_gl.texParameteri(textureType, _gl.TEXTURE_MIN_FILTER, filterFallback(texture.minFilter));\n\n\t\t\t\tif (texture.minFilter !== NearestFilter && texture.minFilter !== LinearFilter) {\n\t\t\t\t\tconsole.warn('THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter.');\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (extensions.has('EXT_texture_filter_anisotropic') === true) {\n\t\t\t\tconst extension = extensions.get('EXT_texture_filter_anisotropic');\n\t\t\t\tif (texture.type === FloatType && extensions.has('OES_texture_float_linear') === false) return; // verify extension for WebGL 1 and WebGL 2\n\n\t\t\t\tif (isWebGL2 === false && texture.type === HalfFloatType && extensions.has('OES_texture_half_float_linear') === false) return; // verify extension for WebGL 1 only\n\n\t\t\t\tif (texture.anisotropy > 1 || properties.get(texture).__currentAnisotropy) {\n\t\t\t\t\t_gl.texParameterf(textureType, extension.TEXTURE_MAX_ANISOTROPY_EXT, Math.min(texture.anisotropy, capabilities.getMaxAnisotropy()));\n\n\t\t\t\t\tproperties.get(texture).__currentAnisotropy = texture.anisotropy;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tfunction initTexture(textureProperties, texture) {\n\t\t\tif (textureProperties.__webglInit === undefined) {\n\t\t\t\ttextureProperties.__webglInit = true;\n\t\t\t\ttexture.addEventListener('dispose', onTextureDispose);\n\t\t\t\ttextureProperties.__webglTexture = _gl.createTexture();\n\t\t\t\tinfo.memory.textures++;\n\t\t\t}\n\t\t}\n\n\t\tfunction uploadTexture(textureProperties, texture, slot) {\n\t\t\tlet textureType = _gl.TEXTURE_2D;\n\t\t\tif (texture.isDataTexture2DArray) textureType = _gl.TEXTURE_2D_ARRAY;\n\t\t\tif (texture.isDataTexture3D) textureType = _gl.TEXTURE_3D;\n\t\t\tinitTexture(textureProperties, texture);\n\t\t\tstate.activeTexture(_gl.TEXTURE0 + slot);\n\t\t\tstate.bindTexture(textureType, textureProperties.__webglTexture);\n\n\t\t\t_gl.pixelStorei(_gl.UNPACK_FLIP_Y_WEBGL, texture.flipY);\n\n\t\t\t_gl.pixelStorei(_gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, texture.premultiplyAlpha);\n\n\t\t\t_gl.pixelStorei(_gl.UNPACK_ALIGNMENT, texture.unpackAlignment);\n\n\t\t\t_gl.pixelStorei(_gl.UNPACK_COLORSPACE_CONVERSION_WEBGL, _gl.NONE);\n\n\t\t\tconst needsPowerOfTwo = textureNeedsPowerOfTwo(texture) && isPowerOfTwo$1(texture.image) === false;\n\t\t\tconst image = resizeImage(texture.image, needsPowerOfTwo, false, maxTextureSize);\n\t\t\tconst supportsMips = isPowerOfTwo$1(image) || isWebGL2,\n\t\t\t\t\t\tglFormat = utils.convert(texture.format);\n\t\t\tlet glType = utils.convert(texture.type),\n\t\t\t\t\tglInternalFormat = getInternalFormat(texture.internalFormat, glFormat, glType, texture.encoding);\n\t\t\tsetTextureParameters(textureType, texture, supportsMips);\n\t\t\tlet mipmap;\n\t\t\tconst mipmaps = texture.mipmaps;\n\n\t\t\tif (texture.isDepthTexture) {\n\t\t\t\t// populate depth texture with dummy data\n\t\t\t\tglInternalFormat = _gl.DEPTH_COMPONENT;\n\n\t\t\t\tif (isWebGL2) {\n\t\t\t\t\tif (texture.type === FloatType) {\n\t\t\t\t\t\tglInternalFormat = _gl.DEPTH_COMPONENT32F;\n\t\t\t\t\t} else if (texture.type === UnsignedIntType) {\n\t\t\t\t\t\tglInternalFormat = _gl.DEPTH_COMPONENT24;\n\t\t\t\t\t} else if (texture.type === UnsignedInt248Type) {\n\t\t\t\t\t\tglInternalFormat = _gl.DEPTH24_STENCIL8;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tglInternalFormat = _gl.DEPTH_COMPONENT16; // WebGL2 requires sized internalformat for glTexImage2D\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif (texture.type === FloatType) {\n\t\t\t\t\t\tconsole.error('WebGLRenderer: Floating point depth texture requires WebGL2.');\n\t\t\t\t\t}\n\t\t\t\t} // validation checks for WebGL 1\n\n\n\t\t\t\tif (texture.format === DepthFormat && glInternalFormat === _gl.DEPTH_COMPONENT) {\n\t\t\t\t\t// The error INVALID_OPERATION is generated by texImage2D if format and internalformat are\n\t\t\t\t\t// DEPTH_COMPONENT and type is not UNSIGNED_SHORT or UNSIGNED_INT\n\t\t\t\t\t// (https://www.khronos.org/registry/webgl/extensions/WEBGL_depth_texture/)\n\t\t\t\t\tif (texture.type !== UnsignedShortType && texture.type !== UnsignedIntType) {\n\t\t\t\t\t\tconsole.warn('THREE.WebGLRenderer: Use UnsignedShortType or UnsignedIntType for DepthFormat DepthTexture.');\n\t\t\t\t\t\ttexture.type = UnsignedShortType;\n\t\t\t\t\t\tglType = utils.convert(texture.type);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (texture.format === DepthStencilFormat && glInternalFormat === _gl.DEPTH_COMPONENT) {\n\t\t\t\t\t// Depth stencil textures need the DEPTH_STENCIL internal format\n\t\t\t\t\t// (https://www.khronos.org/registry/webgl/extensions/WEBGL_depth_texture/)\n\t\t\t\t\tglInternalFormat = _gl.DEPTH_STENCIL; // The error INVALID_OPERATION is generated by texImage2D if format and internalformat are\n\t\t\t\t\t// DEPTH_STENCIL and type is not UNSIGNED_INT_24_8_WEBGL.\n\t\t\t\t\t// (https://www.khronos.org/registry/webgl/extensions/WEBGL_depth_texture/)\n\n\t\t\t\t\tif (texture.type !== UnsignedInt248Type) {\n\t\t\t\t\t\tconsole.warn('THREE.WebGLRenderer: Use UnsignedInt248Type for DepthStencilFormat DepthTexture.');\n\t\t\t\t\t\ttexture.type = UnsignedInt248Type;\n\t\t\t\t\t\tglType = utils.convert(texture.type);\n\t\t\t\t\t}\n\t\t\t\t} //\n\n\n\t\t\t\tstate.texImage2D(_gl.TEXTURE_2D, 0, glInternalFormat, image.width, image.height, 0, glFormat, glType, null);\n\t\t\t} else if (texture.isDataTexture) {\n\t\t\t\t// use manually created mipmaps if available\n\t\t\t\t// if there are no manual mipmaps\n\t\t\t\t// set 0 level mipmap and then use GL to generate other mipmap levels\n\t\t\t\tif (mipmaps.length > 0 && supportsMips) {\n\t\t\t\t\tfor (let i = 0, il = mipmaps.length; i < il; i++) {\n\t\t\t\t\t\tmipmap = mipmaps[i];\n\t\t\t\t\t\tstate.texImage2D(_gl.TEXTURE_2D, i, glInternalFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data);\n\t\t\t\t\t}\n\n\t\t\t\t\ttexture.generateMipmaps = false;\n\t\t\t\t\ttextureProperties.__maxMipLevel = mipmaps.length - 1;\n\t\t\t\t} else {\n\t\t\t\t\tstate.texImage2D(_gl.TEXTURE_2D, 0, glInternalFormat, image.width, image.height, 0, glFormat, glType, image.data);\n\t\t\t\t\ttextureProperties.__maxMipLevel = 0;\n\t\t\t\t}\n\t\t\t} else if (texture.isCompressedTexture) {\n\t\t\t\tfor (let i = 0, il = mipmaps.length; i < il; i++) {\n\t\t\t\t\tmipmap = mipmaps[i];\n\n\t\t\t\t\tif (texture.format !== RGBAFormat && texture.format !== RGBFormat) {\n\t\t\t\t\t\tif (glFormat !== null) {\n\t\t\t\t\t\t\tstate.compressedTexImage2D(_gl.TEXTURE_2D, i, glInternalFormat, mipmap.width, mipmap.height, 0, mipmap.data);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tconsole.warn('THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()');\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tstate.texImage2D(_gl.TEXTURE_2D, i, glInternalFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\ttextureProperties.__maxMipLevel = mipmaps.length - 1;\n\t\t\t} else if (texture.isDataTexture2DArray) {\n\t\t\t\tstate.texImage3D(_gl.TEXTURE_2D_ARRAY, 0, glInternalFormat, image.width, image.height, image.depth, 0, glFormat, glType, image.data);\n\t\t\t\ttextureProperties.__maxMipLevel = 0;\n\t\t\t} else if (texture.isDataTexture3D) {\n\t\t\t\tstate.texImage3D(_gl.TEXTURE_3D, 0, glInternalFormat, image.width, image.height, image.depth, 0, glFormat, glType, image.data);\n\t\t\t\ttextureProperties.__maxMipLevel = 0;\n\t\t\t} else {\n\t\t\t\t// regular Texture (image, video, canvas)\n\t\t\t\t// use manually created mipmaps if available\n\t\t\t\t// if there are no manual mipmaps\n\t\t\t\t// set 0 level mipmap and then use GL to generate other mipmap levels\n\t\t\t\tif (mipmaps.length > 0 && supportsMips) {\n\t\t\t\t\tfor (let i = 0, il = mipmaps.length; i < il; i++) {\n\t\t\t\t\t\tmipmap = mipmaps[i];\n\t\t\t\t\t\tstate.texImage2D(_gl.TEXTURE_2D, i, glInternalFormat, glFormat, glType, mipmap);\n\t\t\t\t\t}\n\n\t\t\t\t\ttexture.generateMipmaps = false;\n\t\t\t\t\ttextureProperties.__maxMipLevel = mipmaps.length - 1;\n\t\t\t\t} else {\n\t\t\t\t\tstate.texImage2D(_gl.TEXTURE_2D, 0, glInternalFormat, glFormat, glType, image);\n\t\t\t\t\ttextureProperties.__maxMipLevel = 0;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (textureNeedsGenerateMipmaps(texture, supportsMips)) {\n\t\t\t\tgenerateMipmap(textureType, texture, image.width, image.height);\n\t\t\t}\n\n\t\t\ttextureProperties.__version = texture.version;\n\t\t\tif (texture.onUpdate) texture.onUpdate(texture);\n\t\t}\n\n\t\tfunction uploadCubeTexture(textureProperties, texture, slot) {\n\t\t\tif (texture.image.length !== 6) return;\n\t\t\tinitTexture(textureProperties, texture);\n\t\t\tstate.activeTexture(_gl.TEXTURE0 + slot);\n\t\t\tstate.bindTexture(_gl.TEXTURE_CUBE_MAP, textureProperties.__webglTexture);\n\n\t\t\t_gl.pixelStorei(_gl.UNPACK_FLIP_Y_WEBGL, texture.flipY);\n\n\t\t\t_gl.pixelStorei(_gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, texture.premultiplyAlpha);\n\n\t\t\t_gl.pixelStorei(_gl.UNPACK_ALIGNMENT, texture.unpackAlignment);\n\n\t\t\t_gl.pixelStorei(_gl.UNPACK_COLORSPACE_CONVERSION_WEBGL, _gl.NONE);\n\n\t\t\tconst isCompressed = texture && (texture.isCompressedTexture || texture.image[0].isCompressedTexture);\n\t\t\tconst isDataTexture = texture.image[0] && texture.image[0].isDataTexture;\n\t\t\tconst cubeImage = [];\n\n\t\t\tfor (let i = 0; i < 6; i++) {\n\t\t\t\tif (!isCompressed && !isDataTexture) {\n\t\t\t\t\tcubeImage[i] = resizeImage(texture.image[i], false, true, maxCubemapSize);\n\t\t\t\t} else {\n\t\t\t\t\tcubeImage[i] = isDataTexture ? texture.image[i].image : texture.image[i];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst image = cubeImage[0],\n\t\t\t\t\t\tsupportsMips = isPowerOfTwo$1(image) || isWebGL2,\n\t\t\t\t\t\tglFormat = utils.convert(texture.format),\n\t\t\t\t\t\tglType = utils.convert(texture.type),\n\t\t\t\t\t\tglInternalFormat = getInternalFormat(texture.internalFormat, glFormat, glType, texture.encoding);\n\t\t\tsetTextureParameters(_gl.TEXTURE_CUBE_MAP, texture, supportsMips);\n\t\t\tlet mipmaps;\n\n\t\t\tif (isCompressed) {\n\t\t\t\tfor (let i = 0; i < 6; i++) {\n\t\t\t\t\tmipmaps = cubeImage[i].mipmaps;\n\n\t\t\t\t\tfor (let j = 0; j < mipmaps.length; j++) {\n\t\t\t\t\t\tconst mipmap = mipmaps[j];\n\n\t\t\t\t\t\tif (texture.format !== RGBAFormat && texture.format !== RGBFormat) {\n\t\t\t\t\t\t\tif (glFormat !== null) {\n\t\t\t\t\t\t\t\tstate.compressedTexImage2D(_gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j, glInternalFormat, mipmap.width, mipmap.height, 0, mipmap.data);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tconsole.warn('THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()');\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tstate.texImage2D(_gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j, glInternalFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\ttextureProperties.__maxMipLevel = mipmaps.length - 1;\n\t\t\t} else {\n\t\t\t\tmipmaps = texture.mipmaps;\n\n\t\t\t\tfor (let i = 0; i < 6; i++) {\n\t\t\t\t\tif (isDataTexture) {\n\t\t\t\t\t\tstate.texImage2D(_gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, 0, glInternalFormat, cubeImage[i].width, cubeImage[i].height, 0, glFormat, glType, cubeImage[i].data);\n\n\t\t\t\t\t\tfor (let j = 0; j < mipmaps.length; j++) {\n\t\t\t\t\t\t\tconst mipmap = mipmaps[j];\n\t\t\t\t\t\t\tconst mipmapImage = mipmap.image[i].image;\n\t\t\t\t\t\t\tstate.texImage2D(_gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j + 1, glInternalFormat, mipmapImage.width, mipmapImage.height, 0, glFormat, glType, mipmapImage.data);\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tstate.texImage2D(_gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, 0, glInternalFormat, glFormat, glType, cubeImage[i]);\n\n\t\t\t\t\t\tfor (let j = 0; j < mipmaps.length; j++) {\n\t\t\t\t\t\t\tconst mipmap = mipmaps[j];\n\t\t\t\t\t\t\tstate.texImage2D(_gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j + 1, glInternalFormat, glFormat, glType, mipmap.image[i]);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\ttextureProperties.__maxMipLevel = mipmaps.length;\n\t\t\t}\n\n\t\t\tif (textureNeedsGenerateMipmaps(texture, supportsMips)) {\n\t\t\t\t// We assume images for cube map have the same size.\n\t\t\t\tgenerateMipmap(_gl.TEXTURE_CUBE_MAP, texture, image.width, image.height);\n\t\t\t}\n\n\t\t\ttextureProperties.__version = texture.version;\n\t\t\tif (texture.onUpdate) texture.onUpdate(texture);\n\t\t} // Render targets\n\t\t// Setup storage for target texture and bind it to correct framebuffer\n\n\n\t\tfunction setupFrameBufferTexture(framebuffer, renderTarget, texture, attachment, textureTarget) {\n\t\t\tconst glFormat = utils.convert(texture.format);\n\t\t\tconst glType = utils.convert(texture.type);\n\t\t\tconst glInternalFormat = getInternalFormat(texture.internalFormat, glFormat, glType, texture.encoding);\n\n\t\t\tif (textureTarget === _gl.TEXTURE_3D || textureTarget === _gl.TEXTURE_2D_ARRAY) {\n\t\t\t\tstate.texImage3D(textureTarget, 0, glInternalFormat, renderTarget.width, renderTarget.height, renderTarget.depth, 0, glFormat, glType, null);\n\t\t\t} else {\n\t\t\t\tstate.texImage2D(textureTarget, 0, glInternalFormat, renderTarget.width, renderTarget.height, 0, glFormat, glType, null);\n\t\t\t}\n\n\t\t\tstate.bindFramebuffer(_gl.FRAMEBUFFER, framebuffer);\n\n\t\t\t_gl.framebufferTexture2D(_gl.FRAMEBUFFER, attachment, textureTarget, properties.get(texture).__webglTexture, 0);\n\n\t\t\tstate.bindFramebuffer(_gl.FRAMEBUFFER, null);\n\t\t} // Setup storage for internal depth/stencil buffers and bind to correct framebuffer\n\n\n\t\tfunction setupRenderBufferStorage(renderbuffer, renderTarget, isMultisample) {\n\t\t\t_gl.bindRenderbuffer(_gl.RENDERBUFFER, renderbuffer);\n\n\t\t\tif (renderTarget.depthBuffer && !renderTarget.stencilBuffer) {\n\t\t\t\tlet glInternalFormat = _gl.DEPTH_COMPONENT16;\n\n\t\t\t\tif (isMultisample) {\n\t\t\t\t\tconst depthTexture = renderTarget.depthTexture;\n\n\t\t\t\t\tif (depthTexture && depthTexture.isDepthTexture) {\n\t\t\t\t\t\tif (depthTexture.type === FloatType) {\n\t\t\t\t\t\t\tglInternalFormat = _gl.DEPTH_COMPONENT32F;\n\t\t\t\t\t\t} else if (depthTexture.type === UnsignedIntType) {\n\t\t\t\t\t\t\tglInternalFormat = _gl.DEPTH_COMPONENT24;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tconst samples = getRenderTargetSamples(renderTarget);\n\n\t\t\t\t\t_gl.renderbufferStorageMultisample(_gl.RENDERBUFFER, samples, glInternalFormat, renderTarget.width, renderTarget.height);\n\t\t\t\t} else {\n\t\t\t\t\t_gl.renderbufferStorage(_gl.RENDERBUFFER, glInternalFormat, renderTarget.width, renderTarget.height);\n\t\t\t\t}\n\n\t\t\t\t_gl.framebufferRenderbuffer(_gl.FRAMEBUFFER, _gl.DEPTH_ATTACHMENT, _gl.RENDERBUFFER, renderbuffer);\n\t\t\t} else if (renderTarget.depthBuffer && renderTarget.stencilBuffer) {\n\t\t\t\tif (isMultisample) {\n\t\t\t\t\tconst samples = getRenderTargetSamples(renderTarget);\n\n\t\t\t\t\t_gl.renderbufferStorageMultisample(_gl.RENDERBUFFER, samples, _gl.DEPTH24_STENCIL8, renderTarget.width, renderTarget.height);\n\t\t\t\t} else {\n\t\t\t\t\t_gl.renderbufferStorage(_gl.RENDERBUFFER, _gl.DEPTH_STENCIL, renderTarget.width, renderTarget.height);\n\t\t\t\t}\n\n\t\t\t\t_gl.framebufferRenderbuffer(_gl.FRAMEBUFFER, _gl.DEPTH_STENCIL_ATTACHMENT, _gl.RENDERBUFFER, renderbuffer);\n\t\t\t} else {\n\t\t\t\t// Use the first texture for MRT so far\n\t\t\t\tconst texture = renderTarget.isWebGLMultipleRenderTargets === true ? renderTarget.texture[0] : renderTarget.texture;\n\t\t\t\tconst glFormat = utils.convert(texture.format);\n\t\t\t\tconst glType = utils.convert(texture.type);\n\t\t\t\tconst glInternalFormat = getInternalFormat(texture.internalFormat, glFormat, glType, texture.encoding);\n\n\t\t\t\tif (isMultisample) {\n\t\t\t\t\tconst samples = getRenderTargetSamples(renderTarget);\n\n\t\t\t\t\t_gl.renderbufferStorageMultisample(_gl.RENDERBUFFER, samples, glInternalFormat, renderTarget.width, renderTarget.height);\n\t\t\t\t} else {\n\t\t\t\t\t_gl.renderbufferStorage(_gl.RENDERBUFFER, glInternalFormat, renderTarget.width, renderTarget.height);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t_gl.bindRenderbuffer(_gl.RENDERBUFFER, null);\n\t\t} // Setup resources for a Depth Texture for a FBO (needs an extension)\n\n\n\t\tfunction setupDepthTexture(framebuffer, renderTarget) {\n\t\t\tconst isCube = renderTarget && renderTarget.isWebGLCubeRenderTarget;\n\t\t\tif (isCube) throw new Error('Depth Texture with cube render targets is not supported');\n\t\t\tstate.bindFramebuffer(_gl.FRAMEBUFFER, framebuffer);\n\n\t\t\tif (!(renderTarget.depthTexture && renderTarget.depthTexture.isDepthTexture)) {\n\t\t\t\tthrow new Error('renderTarget.depthTexture must be an instance of THREE.DepthTexture');\n\t\t\t} // upload an empty depth texture with framebuffer size\n\n\n\t\t\tif (!properties.get(renderTarget.depthTexture).__webglTexture || renderTarget.depthTexture.image.width !== renderTarget.width || renderTarget.depthTexture.image.height !== renderTarget.height) {\n\t\t\t\trenderTarget.depthTexture.image.width = renderTarget.width;\n\t\t\t\trenderTarget.depthTexture.image.height = renderTarget.height;\n\t\t\t\trenderTarget.depthTexture.needsUpdate = true;\n\t\t\t}\n\n\t\t\tsetTexture2D(renderTarget.depthTexture, 0);\n\n\t\t\tconst webglDepthTexture = properties.get(renderTarget.depthTexture).__webglTexture;\n\n\t\t\tif (renderTarget.depthTexture.format === DepthFormat) {\n\t\t\t\t_gl.framebufferTexture2D(_gl.FRAMEBUFFER, _gl.DEPTH_ATTACHMENT, _gl.TEXTURE_2D, webglDepthTexture, 0);\n\t\t\t} else if (renderTarget.depthTexture.format === DepthStencilFormat) {\n\t\t\t\t_gl.framebufferTexture2D(_gl.FRAMEBUFFER, _gl.DEPTH_STENCIL_ATTACHMENT, _gl.TEXTURE_2D, webglDepthTexture, 0);\n\t\t\t} else {\n\t\t\t\tthrow new Error('Unknown depthTexture format');\n\t\t\t}\n\t\t} // Setup GL resources for a non-texture depth buffer\n\n\n\t\tfunction setupDepthRenderbuffer(renderTarget) {\n\t\t\tconst renderTargetProperties = properties.get(renderTarget);\n\t\t\tconst isCube = renderTarget.isWebGLCubeRenderTarget === true;\n\n\t\t\tif (renderTarget.depthTexture) {\n\t\t\t\tif (isCube) throw new Error('target.depthTexture not supported in Cube render targets');\n\t\t\t\tsetupDepthTexture(renderTargetProperties.__webglFramebuffer, renderTarget);\n\t\t\t} else {\n\t\t\t\tif (isCube) {\n\t\t\t\t\trenderTargetProperties.__webglDepthbuffer = [];\n\n\t\t\t\t\tfor (let i = 0; i < 6; i++) {\n\t\t\t\t\t\tstate.bindFramebuffer(_gl.FRAMEBUFFER, renderTargetProperties.__webglFramebuffer[i]);\n\t\t\t\t\t\trenderTargetProperties.__webglDepthbuffer[i] = _gl.createRenderbuffer();\n\t\t\t\t\t\tsetupRenderBufferStorage(renderTargetProperties.__webglDepthbuffer[i], renderTarget, false);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tstate.bindFramebuffer(_gl.FRAMEBUFFER, renderTargetProperties.__webglFramebuffer);\n\t\t\t\t\trenderTargetProperties.__webglDepthbuffer = _gl.createRenderbuffer();\n\t\t\t\t\tsetupRenderBufferStorage(renderTargetProperties.__webglDepthbuffer, renderTarget, false);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tstate.bindFramebuffer(_gl.FRAMEBUFFER, null);\n\t\t} // Set up GL resources for the render target\n\n\n\t\tfunction setupRenderTarget(renderTarget) {\n\t\t\tconst texture = renderTarget.texture;\n\t\t\tconst renderTargetProperties = properties.get(renderTarget);\n\t\t\tconst textureProperties = properties.get(texture);\n\t\t\trenderTarget.addEventListener('dispose', onRenderTargetDispose);\n\n\t\t\tif (renderTarget.isWebGLMultipleRenderTargets !== true) {\n\t\t\t\ttextureProperties.__webglTexture = _gl.createTexture();\n\t\t\t\ttextureProperties.__version = texture.version;\n\t\t\t\tinfo.memory.textures++;\n\t\t\t}\n\n\t\t\tconst isCube = renderTarget.isWebGLCubeRenderTarget === true;\n\t\t\tconst isMultipleRenderTargets = renderTarget.isWebGLMultipleRenderTargets === true;\n\t\t\tconst isMultisample = renderTarget.isWebGLMultisampleRenderTarget === true;\n\t\t\tconst isRenderTarget3D = texture.isDataTexture3D || texture.isDataTexture2DArray;\n\t\t\tconst supportsMips = isPowerOfTwo$1(renderTarget) || isWebGL2; // Handles WebGL2 RGBFormat fallback - #18858\n\n\t\t\tif (isWebGL2 && texture.format === RGBFormat && (texture.type === FloatType || texture.type === HalfFloatType)) {\n\t\t\t\ttexture.format = RGBAFormat;\n\t\t\t\tconsole.warn('THREE.WebGLRenderer: Rendering to textures with RGB format is not supported. Using RGBA format instead.');\n\t\t\t} // Setup framebuffer\n\n\n\t\t\tif (isCube) {\n\t\t\t\trenderTargetProperties.__webglFramebuffer = [];\n\n\t\t\t\tfor (let i = 0; i < 6; i++) {\n\t\t\t\t\trenderTargetProperties.__webglFramebuffer[i] = _gl.createFramebuffer();\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\trenderTargetProperties.__webglFramebuffer = _gl.createFramebuffer();\n\n\t\t\t\tif (isMultipleRenderTargets) {\n\t\t\t\t\tif (capabilities.drawBuffers) {\n\t\t\t\t\t\tconst textures = renderTarget.texture;\n\n\t\t\t\t\t\tfor (let i = 0, il = textures.length; i < il; i++) {\n\t\t\t\t\t\t\tconst attachmentProperties = properties.get(textures[i]);\n\n\t\t\t\t\t\t\tif (attachmentProperties.__webglTexture === undefined) {\n\t\t\t\t\t\t\t\tattachmentProperties.__webglTexture = _gl.createTexture();\n\t\t\t\t\t\t\t\tinfo.memory.textures++;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tconsole.warn('THREE.WebGLRenderer: WebGLMultipleRenderTargets can only be used with WebGL2 or WEBGL_draw_buffers extension.');\n\t\t\t\t\t}\n\t\t\t\t} else if (isMultisample) {\n\t\t\t\t\tif (isWebGL2) {\n\t\t\t\t\t\trenderTargetProperties.__webglMultisampledFramebuffer = _gl.createFramebuffer();\n\t\t\t\t\t\trenderTargetProperties.__webglColorRenderbuffer = _gl.createRenderbuffer();\n\n\t\t\t\t\t\t_gl.bindRenderbuffer(_gl.RENDERBUFFER, renderTargetProperties.__webglColorRenderbuffer);\n\n\t\t\t\t\t\tconst glFormat = utils.convert(texture.format);\n\t\t\t\t\t\tconst glType = utils.convert(texture.type);\n\t\t\t\t\t\tconst glInternalFormat = getInternalFormat(texture.internalFormat, glFormat, glType, texture.encoding);\n\t\t\t\t\t\tconst samples = getRenderTargetSamples(renderTarget);\n\n\t\t\t\t\t\t_gl.renderbufferStorageMultisample(_gl.RENDERBUFFER, samples, glInternalFormat, renderTarget.width, renderTarget.height);\n\n\t\t\t\t\t\tstate.bindFramebuffer(_gl.FRAMEBUFFER, renderTargetProperties.__webglMultisampledFramebuffer);\n\n\t\t\t\t\t\t_gl.framebufferRenderbuffer(_gl.FRAMEBUFFER, _gl.COLOR_ATTACHMENT0, _gl.RENDERBUFFER, renderTargetProperties.__webglColorRenderbuffer);\n\n\t\t\t\t\t\t_gl.bindRenderbuffer(_gl.RENDERBUFFER, null);\n\n\t\t\t\t\t\tif (renderTarget.depthBuffer) {\n\t\t\t\t\t\t\trenderTargetProperties.__webglDepthRenderbuffer = _gl.createRenderbuffer();\n\t\t\t\t\t\t\tsetupRenderBufferStorage(renderTargetProperties.__webglDepthRenderbuffer, renderTarget, true);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tstate.bindFramebuffer(_gl.FRAMEBUFFER, null);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tconsole.warn('THREE.WebGLRenderer: WebGLMultisampleRenderTarget can only be used with WebGL2.');\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} // Setup color buffer\n\n\n\t\t\tif (isCube) {\n\t\t\t\tstate.bindTexture(_gl.TEXTURE_CUBE_MAP, textureProperties.__webglTexture);\n\t\t\t\tsetTextureParameters(_gl.TEXTURE_CUBE_MAP, texture, supportsMips);\n\n\t\t\t\tfor (let i = 0; i < 6; i++) {\n\t\t\t\t\tsetupFrameBufferTexture(renderTargetProperties.__webglFramebuffer[i], renderTarget, texture, _gl.COLOR_ATTACHMENT0, _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i);\n\t\t\t\t}\n\n\t\t\t\tif (textureNeedsGenerateMipmaps(texture, supportsMips)) {\n\t\t\t\t\tgenerateMipmap(_gl.TEXTURE_CUBE_MAP, texture, renderTarget.width, renderTarget.height);\n\t\t\t\t}\n\n\t\t\t\tstate.unbindTexture();\n\t\t\t} else if (isMultipleRenderTargets) {\n\t\t\t\tconst textures = renderTarget.texture;\n\n\t\t\t\tfor (let i = 0, il = textures.length; i < il; i++) {\n\t\t\t\t\tconst attachment = textures[i];\n\t\t\t\t\tconst attachmentProperties = properties.get(attachment);\n\t\t\t\t\tstate.bindTexture(_gl.TEXTURE_2D, attachmentProperties.__webglTexture);\n\t\t\t\t\tsetTextureParameters(_gl.TEXTURE_2D, attachment, supportsMips);\n\t\t\t\t\tsetupFrameBufferTexture(renderTargetProperties.__webglFramebuffer, renderTarget, attachment, _gl.COLOR_ATTACHMENT0 + i, _gl.TEXTURE_2D);\n\n\t\t\t\t\tif (textureNeedsGenerateMipmaps(attachment, supportsMips)) {\n\t\t\t\t\t\tgenerateMipmap(_gl.TEXTURE_2D, attachment, renderTarget.width, renderTarget.height);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tstate.unbindTexture();\n\t\t\t} else {\n\t\t\t\tlet glTextureType = _gl.TEXTURE_2D;\n\n\t\t\t\tif (isRenderTarget3D) {\n\t\t\t\t\t// Render targets containing layers, i.e: Texture 3D and 2d arrays\n\t\t\t\t\tif (isWebGL2) {\n\t\t\t\t\t\tconst isTexture3D = texture.isDataTexture3D;\n\t\t\t\t\t\tglTextureType = isTexture3D ? _gl.TEXTURE_3D : _gl.TEXTURE_2D_ARRAY;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tconsole.warn('THREE.DataTexture3D and THREE.DataTexture2DArray only supported with WebGL2.');\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tstate.bindTexture(glTextureType, textureProperties.__webglTexture);\n\t\t\t\tsetTextureParameters(glTextureType, texture, supportsMips);\n\t\t\t\tsetupFrameBufferTexture(renderTargetProperties.__webglFramebuffer, renderTarget, texture, _gl.COLOR_ATTACHMENT0, glTextureType);\n\n\t\t\t\tif (textureNeedsGenerateMipmaps(texture, supportsMips)) {\n\t\t\t\t\tgenerateMipmap(glTextureType, texture, renderTarget.width, renderTarget.height, renderTarget.depth);\n\t\t\t\t}\n\n\t\t\t\tstate.unbindTexture();\n\t\t\t} // Setup depth and stencil buffers\n\n\n\t\t\tif (renderTarget.depthBuffer) {\n\t\t\t\tsetupDepthRenderbuffer(renderTarget);\n\t\t\t}\n\t\t}\n\n\t\tfunction updateRenderTargetMipmap(renderTarget) {\n\t\t\tconst supportsMips = isPowerOfTwo$1(renderTarget) || isWebGL2;\n\t\t\tconst textures = renderTarget.isWebGLMultipleRenderTargets === true ? renderTarget.texture : [renderTarget.texture];\n\n\t\t\tfor (let i = 0, il = textures.length; i < il; i++) {\n\t\t\t\tconst texture = textures[i];\n\n\t\t\t\tif (textureNeedsGenerateMipmaps(texture, supportsMips)) {\n\t\t\t\t\tconst target = renderTarget.isWebGLCubeRenderTarget ? _gl.TEXTURE_CUBE_MAP : _gl.TEXTURE_2D;\n\n\t\t\t\t\tconst webglTexture = properties.get(texture).__webglTexture;\n\n\t\t\t\t\tstate.bindTexture(target, webglTexture);\n\t\t\t\t\tgenerateMipmap(target, texture, renderTarget.width, renderTarget.height);\n\t\t\t\t\tstate.unbindTexture();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tfunction updateMultisampleRenderTarget(renderTarget) {\n\t\t\tif (renderTarget.isWebGLMultisampleRenderTarget) {\n\t\t\t\tif (isWebGL2) {\n\t\t\t\t\tconst width = renderTarget.width;\n\t\t\t\t\tconst height = renderTarget.height;\n\t\t\t\t\tlet mask = _gl.COLOR_BUFFER_BIT;\n\t\t\t\t\tif (renderTarget.depthBuffer) mask |= _gl.DEPTH_BUFFER_BIT;\n\t\t\t\t\tif (renderTarget.stencilBuffer) mask |= _gl.STENCIL_BUFFER_BIT;\n\t\t\t\t\tconst renderTargetProperties = properties.get(renderTarget);\n\t\t\t\t\tstate.bindFramebuffer(_gl.READ_FRAMEBUFFER, renderTargetProperties.__webglMultisampledFramebuffer);\n\t\t\t\t\tstate.bindFramebuffer(_gl.DRAW_FRAMEBUFFER, renderTargetProperties.__webglFramebuffer);\n\n\t\t\t\t\t_gl.blitFramebuffer(0, 0, width, height, 0, 0, width, height, mask, _gl.NEAREST);\n\n\t\t\t\t\tstate.bindFramebuffer(_gl.READ_FRAMEBUFFER, null);\n\t\t\t\t\tstate.bindFramebuffer(_gl.DRAW_FRAMEBUFFER, renderTargetProperties.__webglMultisampledFramebuffer);\n\t\t\t\t} else {\n\t\t\t\t\tconsole.warn('THREE.WebGLRenderer: WebGLMultisampleRenderTarget can only be used with WebGL2.');\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tfunction getRenderTargetSamples(renderTarget) {\n\t\t\treturn isWebGL2 && renderTarget.isWebGLMultisampleRenderTarget ? Math.min(maxSamples, renderTarget.samples) : 0;\n\t\t}\n\n\t\tfunction updateVideoTexture(texture) {\n\t\t\tconst frame = info.render.frame; // Check the last frame we updated the VideoTexture\n\n\t\t\tif (_videoTextures.get(texture) !== frame) {\n\t\t\t\t_videoTextures.set(texture, frame);\n\n\t\t\t\ttexture.update();\n\t\t\t}\n\t\t} // backwards compatibility\n\n\n\t\tlet warnedTexture2D = false;\n\t\tlet warnedTextureCube = false;\n\n\t\tfunction safeSetTexture2D(texture, slot) {\n\t\t\tif (texture && texture.isWebGLRenderTarget) {\n\t\t\t\tif (warnedTexture2D === false) {\n\t\t\t\t\tconsole.warn('THREE.WebGLTextures.safeSetTexture2D: don\\'t use render targets as textures. Use their .texture property instead.');\n\t\t\t\t\twarnedTexture2D = true;\n\t\t\t\t}\n\n\t\t\t\ttexture = texture.texture;\n\t\t\t}\n\n\t\t\tsetTexture2D(texture, slot);\n\t\t}\n\n\t\tfunction safeSetTextureCube(texture, slot) {\n\t\t\tif (texture && texture.isWebGLCubeRenderTarget) {\n\t\t\t\tif (warnedTextureCube === false) {\n\t\t\t\t\tconsole.warn('THREE.WebGLTextures.safeSetTextureCube: don\\'t use cube render targets as textures. Use their .texture property instead.');\n\t\t\t\t\twarnedTextureCube = true;\n\t\t\t\t}\n\n\t\t\t\ttexture = texture.texture;\n\t\t\t}\n\n\t\t\tsetTextureCube(texture, slot);\n\t\t} //\n\n\n\t\tthis.allocateTextureUnit = allocateTextureUnit;\n\t\tthis.resetTextureUnits = resetTextureUnits;\n\t\tthis.setTexture2D = setTexture2D;\n\t\tthis.setTexture2DArray = setTexture2DArray;\n\t\tthis.setTexture3D = setTexture3D;\n\t\tthis.setTextureCube = setTextureCube;\n\t\tthis.setupRenderTarget = setupRenderTarget;\n\t\tthis.updateRenderTargetMipmap = updateRenderTargetMipmap;\n\t\tthis.updateMultisampleRenderTarget = updateMultisampleRenderTarget;\n\t\tthis.safeSetTexture2D = safeSetTexture2D;\n\t\tthis.safeSetTextureCube = safeSetTextureCube;\n\t}\n\n\tfunction WebGLUtils(gl, extensions, capabilities) {\n\t\tconst isWebGL2 = capabilities.isWebGL2;\n\n\t\tfunction convert(p) {\n\t\t\tlet extension;\n\t\t\tif (p === UnsignedByteType) return gl.UNSIGNED_BYTE;\n\t\t\tif (p === UnsignedShort4444Type) return gl.UNSIGNED_SHORT_4_4_4_4;\n\t\t\tif (p === UnsignedShort5551Type) return gl.UNSIGNED_SHORT_5_5_5_1;\n\t\t\tif (p === UnsignedShort565Type) return gl.UNSIGNED_SHORT_5_6_5;\n\t\t\tif (p === ByteType) return gl.BYTE;\n\t\t\tif (p === ShortType) return gl.SHORT;\n\t\t\tif (p === UnsignedShortType) return gl.UNSIGNED_SHORT;\n\t\t\tif (p === IntType) return gl.INT;\n\t\t\tif (p === UnsignedIntType) return gl.UNSIGNED_INT;\n\t\t\tif (p === FloatType) return gl.FLOAT;\n\n\t\t\tif (p === HalfFloatType) {\n\t\t\t\tif (isWebGL2) return gl.HALF_FLOAT;\n\t\t\t\textension = extensions.get('OES_texture_half_float');\n\n\t\t\t\tif (extension !== null) {\n\t\t\t\t\treturn extension.HALF_FLOAT_OES;\n\t\t\t\t} else {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (p === AlphaFormat) return gl.ALPHA;\n\t\t\tif (p === RGBFormat) return gl.RGB;\n\t\t\tif (p === RGBAFormat) return gl.RGBA;\n\t\t\tif (p === LuminanceFormat) return gl.LUMINANCE;\n\t\t\tif (p === LuminanceAlphaFormat) return gl.LUMINANCE_ALPHA;\n\t\t\tif (p === DepthFormat) return gl.DEPTH_COMPONENT;\n\t\t\tif (p === DepthStencilFormat) return gl.DEPTH_STENCIL;\n\t\t\tif (p === RedFormat) return gl.RED; // WebGL2 formats.\n\n\t\t\tif (p === RedIntegerFormat) return gl.RED_INTEGER;\n\t\t\tif (p === RGFormat) return gl.RG;\n\t\t\tif (p === RGIntegerFormat) return gl.RG_INTEGER;\n\t\t\tif (p === RGBIntegerFormat) return gl.RGB_INTEGER;\n\t\t\tif (p === RGBAIntegerFormat) return gl.RGBA_INTEGER;\n\n\t\t\tif (p === RGB_S3TC_DXT1_Format || p === RGBA_S3TC_DXT1_Format || p === RGBA_S3TC_DXT3_Format || p === RGBA_S3TC_DXT5_Format) {\n\t\t\t\textension = extensions.get('WEBGL_compressed_texture_s3tc');\n\n\t\t\t\tif (extension !== null) {\n\t\t\t\t\tif (p === RGB_S3TC_DXT1_Format) return extension.COMPRESSED_RGB_S3TC_DXT1_EXT;\n\t\t\t\t\tif (p === RGBA_S3TC_DXT1_Format) return extension.COMPRESSED_RGBA_S3TC_DXT1_EXT;\n\t\t\t\t\tif (p === RGBA_S3TC_DXT3_Format) return extension.COMPRESSED_RGBA_S3TC_DXT3_EXT;\n\t\t\t\t\tif (p === RGBA_S3TC_DXT5_Format) return extension.COMPRESSED_RGBA_S3TC_DXT5_EXT;\n\t\t\t\t} else {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (p === RGB_PVRTC_4BPPV1_Format || p === RGB_PVRTC_2BPPV1_Format || p === RGBA_PVRTC_4BPPV1_Format || p === RGBA_PVRTC_2BPPV1_Format) {\n\t\t\t\textension = extensions.get('WEBGL_compressed_texture_pvrtc');\n\n\t\t\t\tif (extension !== null) {\n\t\t\t\t\tif (p === RGB_PVRTC_4BPPV1_Format) return extension.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;\n\t\t\t\t\tif (p === RGB_PVRTC_2BPPV1_Format) return extension.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;\n\t\t\t\t\tif (p === RGBA_PVRTC_4BPPV1_Format) return extension.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;\n\t\t\t\t\tif (p === RGBA_PVRTC_2BPPV1_Format) return extension.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG;\n\t\t\t\t} else {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (p === RGB_ETC1_Format) {\n\t\t\t\textension = extensions.get('WEBGL_compressed_texture_etc1');\n\n\t\t\t\tif (extension !== null) {\n\t\t\t\t\treturn extension.COMPRESSED_RGB_ETC1_WEBGL;\n\t\t\t\t} else {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (p === RGB_ETC2_Format || p === RGBA_ETC2_EAC_Format) {\n\t\t\t\textension = extensions.get('WEBGL_compressed_texture_etc');\n\n\t\t\t\tif (extension !== null) {\n\t\t\t\t\tif (p === RGB_ETC2_Format) return extension.COMPRESSED_RGB8_ETC2;\n\t\t\t\t\tif (p === RGBA_ETC2_EAC_Format) return extension.COMPRESSED_RGBA8_ETC2_EAC;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (p === RGBA_ASTC_4x4_Format || p === RGBA_ASTC_5x4_Format || p === RGBA_ASTC_5x5_Format || p === RGBA_ASTC_6x5_Format || p === RGBA_ASTC_6x6_Format || p === RGBA_ASTC_8x5_Format || p === RGBA_ASTC_8x6_Format || p === RGBA_ASTC_8x8_Format || p === RGBA_ASTC_10x5_Format || p === RGBA_ASTC_10x6_Format || p === RGBA_ASTC_10x8_Format || p === RGBA_ASTC_10x10_Format || p === RGBA_ASTC_12x10_Format || p === RGBA_ASTC_12x12_Format || p === SRGB8_ALPHA8_ASTC_4x4_Format || p === SRGB8_ALPHA8_ASTC_5x4_Format || p === SRGB8_ALPHA8_ASTC_5x5_Format || p === SRGB8_ALPHA8_ASTC_6x5_Format || p === SRGB8_ALPHA8_ASTC_6x6_Format || p === SRGB8_ALPHA8_ASTC_8x5_Format || p === SRGB8_ALPHA8_ASTC_8x6_Format || p === SRGB8_ALPHA8_ASTC_8x8_Format || p === SRGB8_ALPHA8_ASTC_10x5_Format || p === SRGB8_ALPHA8_ASTC_10x6_Format || p === SRGB8_ALPHA8_ASTC_10x8_Format || p === SRGB8_ALPHA8_ASTC_10x10_Format || p === SRGB8_ALPHA8_ASTC_12x10_Format || p === SRGB8_ALPHA8_ASTC_12x12_Format) {\n\t\t\t\textension = extensions.get('WEBGL_compressed_texture_astc');\n\n\t\t\t\tif (extension !== null) {\n\t\t\t\t\t// TODO Complete?\n\t\t\t\t\treturn p;\n\t\t\t\t} else {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (p === RGBA_BPTC_Format) {\n\t\t\t\textension = extensions.get('EXT_texture_compression_bptc');\n\n\t\t\t\tif (extension !== null) {\n\t\t\t\t\t// TODO Complete?\n\t\t\t\t\treturn p;\n\t\t\t\t} else {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (p === UnsignedInt248Type) {\n\t\t\t\tif (isWebGL2) return gl.UNSIGNED_INT_24_8;\n\t\t\t\textension = extensions.get('WEBGL_depth_texture');\n\n\t\t\t\tif (extension !== null) {\n\t\t\t\t\treturn extension.UNSIGNED_INT_24_8_WEBGL;\n\t\t\t\t} else {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn {\n\t\t\tconvert: convert\n\t\t};\n\t}\n\n\tclass ArrayCamera extends PerspectiveCamera {\n\t\tconstructor(array = []) {\n\t\t\tsuper();\n\t\t\tthis.cameras = array;\n\t\t}\n\n\t}\n\n\tArrayCamera.prototype.isArrayCamera = true;\n\n\tclass Group extends Object3D {\n\t\tconstructor() {\n\t\t\tsuper();\n\t\t\tthis.type = 'Group';\n\t\t}\n\n\t}\n\n\tGroup.prototype.isGroup = true;\n\n\tconst _moveEvent = {\n\t\ttype: 'move'\n\t};\n\n\tclass WebXRController {\n\t\tconstructor() {\n\t\t\tthis._targetRay = null;\n\t\t\tthis._grip = null;\n\t\t\tthis._hand = null;\n\t\t}\n\n\t\tgetHandSpace() {\n\t\t\tif (this._hand === null) {\n\t\t\t\tthis._hand = new Group();\n\t\t\t\tthis._hand.matrixAutoUpdate = false;\n\t\t\t\tthis._hand.visible = false;\n\t\t\t\tthis._hand.joints = {};\n\t\t\t\tthis._hand.inputState = {\n\t\t\t\t\tpinching: false\n\t\t\t\t};\n\t\t\t}\n\n\t\t\treturn this._hand;\n\t\t}\n\n\t\tgetTargetRaySpace() {\n\t\t\tif (this._targetRay === null) {\n\t\t\t\tthis._targetRay = new Group();\n\t\t\t\tthis._targetRay.matrixAutoUpdate = false;\n\t\t\t\tthis._targetRay.visible = false;\n\t\t\t\tthis._targetRay.hasLinearVelocity = false;\n\t\t\t\tthis._targetRay.linearVelocity = new Vector3();\n\t\t\t\tthis._targetRay.hasAngularVelocity = false;\n\t\t\t\tthis._targetRay.angularVelocity = new Vector3();\n\t\t\t}\n\n\t\t\treturn this._targetRay;\n\t\t}\n\n\t\tgetGripSpace() {\n\t\t\tif (this._grip === null) {\n\t\t\t\tthis._grip = new Group();\n\t\t\t\tthis._grip.matrixAutoUpdate = false;\n\t\t\t\tthis._grip.visible = false;\n\t\t\t\tthis._grip.hasLinearVelocity = false;\n\t\t\t\tthis._grip.linearVelocity = new Vector3();\n\t\t\t\tthis._grip.hasAngularVelocity = false;\n\t\t\t\tthis._grip.angularVelocity = new Vector3();\n\t\t\t}\n\n\t\t\treturn this._grip;\n\t\t}\n\n\t\tdispatchEvent(event) {\n\t\t\tif (this._targetRay !== null) {\n\t\t\t\tthis._targetRay.dispatchEvent(event);\n\t\t\t}\n\n\t\t\tif (this._grip !== null) {\n\t\t\t\tthis._grip.dispatchEvent(event);\n\t\t\t}\n\n\t\t\tif (this._hand !== null) {\n\t\t\t\tthis._hand.dispatchEvent(event);\n\t\t\t}\n\n\t\t\treturn this;\n\t\t}\n\n\t\tdisconnect(inputSource) {\n\t\t\tthis.dispatchEvent({\n\t\t\t\ttype: 'disconnected',\n\t\t\t\tdata: inputSource\n\t\t\t});\n\n\t\t\tif (this._targetRay !== null) {\n\t\t\t\tthis._targetRay.visible = false;\n\t\t\t}\n\n\t\t\tif (this._grip !== null) {\n\t\t\t\tthis._grip.visible = false;\n\t\t\t}\n\n\t\t\tif (this._hand !== null) {\n\t\t\t\tthis._hand.visible = false;\n\t\t\t}\n\n\t\t\treturn this;\n\t\t}\n\n\t\tupdate(inputSource, frame, referenceSpace) {\n\t\t\tlet inputPose = null;\n\t\t\tlet gripPose = null;\n\t\t\tlet handPose = null;\n\t\t\tconst targetRay = this._targetRay;\n\t\t\tconst grip = this._grip;\n\t\t\tconst hand = this._hand;\n\n\t\t\tif (inputSource && frame.session.visibilityState !== 'visible-blurred') {\n\t\t\t\tif (targetRay !== null) {\n\t\t\t\t\tinputPose = frame.getPose(inputSource.targetRaySpace, referenceSpace);\n\n\t\t\t\t\tif (inputPose !== null) {\n\t\t\t\t\t\ttargetRay.matrix.fromArray(inputPose.transform.matrix);\n\t\t\t\t\t\ttargetRay.matrix.decompose(targetRay.position, targetRay.rotation, targetRay.scale);\n\n\t\t\t\t\t\tif (inputPose.linearVelocity) {\n\t\t\t\t\t\t\ttargetRay.hasLinearVelocity = true;\n\t\t\t\t\t\t\ttargetRay.linearVelocity.copy(inputPose.linearVelocity);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\ttargetRay.hasLinearVelocity = false;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (inputPose.angularVelocity) {\n\t\t\t\t\t\t\ttargetRay.hasAngularVelocity = true;\n\t\t\t\t\t\t\ttargetRay.angularVelocity.copy(inputPose.angularVelocity);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\ttargetRay.hasAngularVelocity = false;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tthis.dispatchEvent(_moveEvent);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (hand && inputSource.hand) {\n\t\t\t\t\thandPose = true;\n\n\t\t\t\t\tfor (const inputjoint of inputSource.hand.values()) {\n\t\t\t\t\t\t// Update the joints groups with the XRJoint poses\n\t\t\t\t\t\tconst jointPose = frame.getJointPose(inputjoint, referenceSpace);\n\n\t\t\t\t\t\tif (hand.joints[inputjoint.jointName] === undefined) {\n\t\t\t\t\t\t\t// The transform of this joint will be updated with the joint pose on each frame\n\t\t\t\t\t\t\tconst joint = new Group();\n\t\t\t\t\t\t\tjoint.matrixAutoUpdate = false;\n\t\t\t\t\t\t\tjoint.visible = false;\n\t\t\t\t\t\t\thand.joints[inputjoint.jointName] = joint; // ??\n\n\t\t\t\t\t\t\thand.add(joint);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tconst joint = hand.joints[inputjoint.jointName];\n\n\t\t\t\t\t\tif (jointPose !== null) {\n\t\t\t\t\t\t\tjoint.matrix.fromArray(jointPose.transform.matrix);\n\t\t\t\t\t\t\tjoint.matrix.decompose(joint.position, joint.rotation, joint.scale);\n\t\t\t\t\t\t\tjoint.jointRadius = jointPose.radius;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tjoint.visible = jointPose !== null;\n\t\t\t\t\t} // Custom events\n\t\t\t\t\t// Check pinchz\n\n\n\t\t\t\t\tconst indexTip = hand.joints['index-finger-tip'];\n\t\t\t\t\tconst thumbTip = hand.joints['thumb-tip'];\n\t\t\t\t\tconst distance = indexTip.position.distanceTo(thumbTip.position);\n\t\t\t\t\tconst distanceToPinch = 0.02;\n\t\t\t\t\tconst threshold = 0.005;\n\n\t\t\t\t\tif (hand.inputState.pinching && distance > distanceToPinch + threshold) {\n\t\t\t\t\t\thand.inputState.pinching = false;\n\t\t\t\t\t\tthis.dispatchEvent({\n\t\t\t\t\t\t\ttype: 'pinchend',\n\t\t\t\t\t\t\thandedness: inputSource.handedness,\n\t\t\t\t\t\t\ttarget: this\n\t\t\t\t\t\t});\n\t\t\t\t\t} else if (!hand.inputState.pinching && distance <= distanceToPinch - threshold) {\n\t\t\t\t\t\thand.inputState.pinching = true;\n\t\t\t\t\t\tthis.dispatchEvent({\n\t\t\t\t\t\t\ttype: 'pinchstart',\n\t\t\t\t\t\t\thandedness: inputSource.handedness,\n\t\t\t\t\t\t\ttarget: this\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif (grip !== null && inputSource.gripSpace) {\n\t\t\t\t\t\tgripPose = frame.getPose(inputSource.gripSpace, referenceSpace);\n\n\t\t\t\t\t\tif (gripPose !== null) {\n\t\t\t\t\t\t\tgrip.matrix.fromArray(gripPose.transform.matrix);\n\t\t\t\t\t\t\tgrip.matrix.decompose(grip.position, grip.rotation, grip.scale);\n\n\t\t\t\t\t\t\tif (gripPose.linearVelocity) {\n\t\t\t\t\t\t\t\tgrip.hasLinearVelocity = true;\n\t\t\t\t\t\t\t\tgrip.linearVelocity.copy(gripPose.linearVelocity);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tgrip.hasLinearVelocity = false;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (gripPose.angularVelocity) {\n\t\t\t\t\t\t\t\tgrip.hasAngularVelocity = true;\n\t\t\t\t\t\t\t\tgrip.angularVelocity.copy(gripPose.angularVelocity);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tgrip.hasAngularVelocity = false;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (targetRay !== null) {\n\t\t\t\ttargetRay.visible = inputPose !== null;\n\t\t\t}\n\n\t\t\tif (grip !== null) {\n\t\t\t\tgrip.visible = gripPose !== null;\n\t\t\t}\n\n\t\t\tif (hand !== null) {\n\t\t\t\thand.visible = handPose !== null;\n\t\t\t}\n\n\t\t\treturn this;\n\t\t}\n\n\t}\n\n\tclass WebXRManager extends EventDispatcher {\n\t\tconstructor(renderer, gl) {\n\t\t\tsuper();\n\t\t\tconst scope = this;\n\t\t\tconst state = renderer.state;\n\t\t\tlet session = null;\n\t\t\tlet framebufferScaleFactor = 1.0;\n\t\t\tlet referenceSpace = null;\n\t\t\tlet referenceSpaceType = 'local-floor';\n\t\t\tlet pose = null;\n\t\t\tlet glBinding = null;\n\t\t\tlet glFramebuffer = null;\n\t\t\tlet glProjLayer = null;\n\t\t\tlet glBaseLayer = null;\n\t\t\tlet isMultisample = false;\n\t\t\tlet glMultisampledFramebuffer = null;\n\t\t\tlet glColorRenderbuffer = null;\n\t\t\tlet glDepthRenderbuffer = null;\n\t\t\tlet xrFrame = null;\n\t\t\tlet depthStyle = null;\n\t\t\tlet clearStyle = null;\n\t\t\tconst controllers = [];\n\t\t\tconst inputSourcesMap = new Map(); //\n\n\t\t\tconst cameraL = new PerspectiveCamera();\n\t\t\tcameraL.layers.enable(1);\n\t\t\tcameraL.viewport = new Vector4();\n\t\t\tconst cameraR = new PerspectiveCamera();\n\t\t\tcameraR.layers.enable(2);\n\t\t\tcameraR.viewport = new Vector4();\n\t\t\tconst cameras = [cameraL, cameraR];\n\t\t\tconst cameraVR = new ArrayCamera();\n\t\t\tcameraVR.layers.enable(1);\n\t\t\tcameraVR.layers.enable(2);\n\t\t\tlet _currentDepthNear = null;\n\t\t\tlet _currentDepthFar = null; //\n\n\t\t\tthis.cameraAutoUpdate = true;\n\t\t\tthis.enabled = false;\n\t\t\tthis.isPresenting = false;\n\n\t\t\tthis.getController = function (index) {\n\t\t\t\tlet controller = controllers[index];\n\n\t\t\t\tif (controller === undefined) {\n\t\t\t\t\tcontroller = new WebXRController();\n\t\t\t\t\tcontrollers[index] = controller;\n\t\t\t\t}\n\n\t\t\t\treturn controller.getTargetRaySpace();\n\t\t\t};\n\n\t\t\tthis.getControllerGrip = function (index) {\n\t\t\t\tlet controller = controllers[index];\n\n\t\t\t\tif (controller === undefined) {\n\t\t\t\t\tcontroller = new WebXRController();\n\t\t\t\t\tcontrollers[index] = controller;\n\t\t\t\t}\n\n\t\t\t\treturn controller.getGripSpace();\n\t\t\t};\n\n\t\t\tthis.getHand = function (index) {\n\t\t\t\tlet controller = controllers[index];\n\n\t\t\t\tif (controller === undefined) {\n\t\t\t\t\tcontroller = new WebXRController();\n\t\t\t\t\tcontrollers[index] = controller;\n\t\t\t\t}\n\n\t\t\t\treturn controller.getHandSpace();\n\t\t\t}; //\n\n\n\t\t\tfunction onSessionEvent(event) {\n\t\t\t\tconst controller = inputSourcesMap.get(event.inputSource);\n\n\t\t\t\tif (controller) {\n\t\t\t\t\tcontroller.dispatchEvent({\n\t\t\t\t\t\ttype: event.type,\n\t\t\t\t\t\tdata: event.inputSource\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfunction onSessionEnd() {\n\t\t\t\tinputSourcesMap.forEach(function (controller, inputSource) {\n\t\t\t\t\tcontroller.disconnect(inputSource);\n\t\t\t\t});\n\t\t\t\tinputSourcesMap.clear();\n\t\t\t\t_currentDepthNear = null;\n\t\t\t\t_currentDepthFar = null; // restore framebuffer/rendering state\n\n\t\t\t\tstate.bindXRFramebuffer(null);\n\t\t\t\trenderer.setRenderTarget(renderer.getRenderTarget());\n\t\t\t\tif (glFramebuffer) gl.deleteFramebuffer(glFramebuffer);\n\t\t\t\tif (glMultisampledFramebuffer) gl.deleteFramebuffer(glMultisampledFramebuffer);\n\t\t\t\tif (glColorRenderbuffer) gl.deleteRenderbuffer(glColorRenderbuffer);\n\t\t\t\tif (glDepthRenderbuffer) gl.deleteRenderbuffer(glDepthRenderbuffer);\n\t\t\t\tglFramebuffer = null;\n\t\t\t\tglMultisampledFramebuffer = null;\n\t\t\t\tglColorRenderbuffer = null;\n\t\t\t\tglDepthRenderbuffer = null;\n\t\t\t\tglBaseLayer = null;\n\t\t\t\tglProjLayer = null;\n\t\t\t\tglBinding = null;\n\t\t\t\tsession = null; //\n\n\t\t\t\tanimation.stop();\n\t\t\t\tscope.isPresenting = false;\n\t\t\t\tscope.dispatchEvent({\n\t\t\t\t\ttype: 'sessionend'\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tthis.setFramebufferScaleFactor = function (value) {\n\t\t\t\tframebufferScaleFactor = value;\n\n\t\t\t\tif (scope.isPresenting === true) {\n\t\t\t\t\tconsole.warn('THREE.WebXRManager: Cannot change framebuffer scale while presenting.');\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tthis.setReferenceSpaceType = function (value) {\n\t\t\t\treferenceSpaceType = value;\n\n\t\t\t\tif (scope.isPresenting === true) {\n\t\t\t\t\tconsole.warn('THREE.WebXRManager: Cannot change reference space type while presenting.');\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tthis.getReferenceSpace = function () {\n\t\t\t\treturn referenceSpace;\n\t\t\t};\n\n\t\t\tthis.getBaseLayer = function () {\n\t\t\t\treturn glProjLayer !== null ? glProjLayer : glBaseLayer;\n\t\t\t};\n\n\t\t\tthis.getBinding = function () {\n\t\t\t\treturn glBinding;\n\t\t\t};\n\n\t\t\tthis.getFrame = function () {\n\t\t\t\treturn xrFrame;\n\t\t\t};\n\n\t\t\tthis.getSession = function () {\n\t\t\t\treturn session;\n\t\t\t};\n\n\t\t\tthis.setSession = async function (value) {\n\t\t\t\tsession = value;\n\n\t\t\t\tif (session !== null) {\n\t\t\t\t\tsession.addEventListener('select', onSessionEvent);\n\t\t\t\t\tsession.addEventListener('selectstart', onSessionEvent);\n\t\t\t\t\tsession.addEventListener('selectend', onSessionEvent);\n\t\t\t\t\tsession.addEventListener('squeeze', onSessionEvent);\n\t\t\t\t\tsession.addEventListener('squeezestart', onSessionEvent);\n\t\t\t\t\tsession.addEventListener('squeezeend', onSessionEvent);\n\t\t\t\t\tsession.addEventListener('end', onSessionEnd);\n\t\t\t\t\tsession.addEventListener('inputsourceschange', onInputSourcesChange);\n\t\t\t\t\tconst attributes = gl.getContextAttributes();\n\n\t\t\t\t\tif (attributes.xrCompatible !== true) {\n\t\t\t\t\t\tawait gl.makeXRCompatible();\n\t\t\t\t\t}\n\n\t\t\t\t\tif (session.renderState.layers === undefined) {\n\t\t\t\t\t\tconst layerInit = {\n\t\t\t\t\t\t\tantialias: attributes.antialias,\n\t\t\t\t\t\t\talpha: attributes.alpha,\n\t\t\t\t\t\t\tdepth: attributes.depth,\n\t\t\t\t\t\t\tstencil: attributes.stencil,\n\t\t\t\t\t\t\tframebufferScaleFactor: framebufferScaleFactor\n\t\t\t\t\t\t};\n\t\t\t\t\t\tglBaseLayer = new XRWebGLLayer(session, gl, layerInit);\n\t\t\t\t\t\tsession.updateRenderState({\n\t\t\t\t\t\t\tbaseLayer: glBaseLayer\n\t\t\t\t\t\t});\n\t\t\t\t\t} else if (gl instanceof WebGLRenderingContext) {\n\t\t\t\t\t\t// Use old style webgl layer because we can't use MSAA\n\t\t\t\t\t\t// WebGL2 support.\n\t\t\t\t\t\tconst layerInit = {\n\t\t\t\t\t\t\tantialias: true,\n\t\t\t\t\t\t\talpha: attributes.alpha,\n\t\t\t\t\t\t\tdepth: attributes.depth,\n\t\t\t\t\t\t\tstencil: attributes.stencil,\n\t\t\t\t\t\t\tframebufferScaleFactor: framebufferScaleFactor\n\t\t\t\t\t\t};\n\t\t\t\t\t\tglBaseLayer = new XRWebGLLayer(session, gl, layerInit);\n\t\t\t\t\t\tsession.updateRenderState({\n\t\t\t\t\t\t\tlayers: [glBaseLayer]\n\t\t\t\t\t\t});\n\t\t\t\t\t} else {\n\t\t\t\t\t\tisMultisample = attributes.antialias;\n\t\t\t\t\t\tlet depthFormat = null;\n\n\t\t\t\t\t\tif (attributes.depth) {\n\t\t\t\t\t\t\tclearStyle = gl.DEPTH_BUFFER_BIT;\n\t\t\t\t\t\t\tif (attributes.stencil) clearStyle |= gl.STENCIL_BUFFER_BIT;\n\t\t\t\t\t\t\tdepthStyle = attributes.stencil ? gl.DEPTH_STENCIL_ATTACHMENT : gl.DEPTH_ATTACHMENT;\n\t\t\t\t\t\t\tdepthFormat = attributes.stencil ? gl.DEPTH24_STENCIL8 : gl.DEPTH_COMPONENT24;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tconst projectionlayerInit = {\n\t\t\t\t\t\t\tcolorFormat: attributes.alpha ? gl.RGBA8 : gl.RGB8,\n\t\t\t\t\t\t\tdepthFormat: depthFormat,\n\t\t\t\t\t\t\tscaleFactor: framebufferScaleFactor\n\t\t\t\t\t\t};\n\t\t\t\t\t\tglBinding = new XRWebGLBinding(session, gl);\n\t\t\t\t\t\tglProjLayer = glBinding.createProjectionLayer(projectionlayerInit);\n\t\t\t\t\t\tglFramebuffer = gl.createFramebuffer();\n\t\t\t\t\t\tsession.updateRenderState({\n\t\t\t\t\t\t\tlayers: [glProjLayer]\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\tif (isMultisample) {\n\t\t\t\t\t\t\tglMultisampledFramebuffer = gl.createFramebuffer();\n\t\t\t\t\t\t\tglColorRenderbuffer = gl.createRenderbuffer();\n\t\t\t\t\t\t\tgl.bindRenderbuffer(gl.RENDERBUFFER, glColorRenderbuffer);\n\t\t\t\t\t\t\tgl.renderbufferStorageMultisample(gl.RENDERBUFFER, 4, gl.RGBA8, glProjLayer.textureWidth, glProjLayer.textureHeight);\n\t\t\t\t\t\t\tstate.bindFramebuffer(gl.FRAMEBUFFER, glMultisampledFramebuffer);\n\t\t\t\t\t\t\tgl.framebufferRenderbuffer(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.RENDERBUFFER, glColorRenderbuffer);\n\t\t\t\t\t\t\tgl.bindRenderbuffer(gl.RENDERBUFFER, null);\n\n\t\t\t\t\t\t\tif (depthFormat !== null) {\n\t\t\t\t\t\t\t\tglDepthRenderbuffer = gl.createRenderbuffer();\n\t\t\t\t\t\t\t\tgl.bindRenderbuffer(gl.RENDERBUFFER, glDepthRenderbuffer);\n\t\t\t\t\t\t\t\tgl.renderbufferStorageMultisample(gl.RENDERBUFFER, 4, depthFormat, glProjLayer.textureWidth, glProjLayer.textureHeight);\n\t\t\t\t\t\t\t\tgl.framebufferRenderbuffer(gl.FRAMEBUFFER, depthStyle, gl.RENDERBUFFER, glDepthRenderbuffer);\n\t\t\t\t\t\t\t\tgl.bindRenderbuffer(gl.RENDERBUFFER, null);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tstate.bindFramebuffer(gl.FRAMEBUFFER, null);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\treferenceSpace = await session.requestReferenceSpace(referenceSpaceType);\n\t\t\t\t\tanimation.setContext(session);\n\t\t\t\t\tanimation.start();\n\t\t\t\t\tscope.isPresenting = true;\n\t\t\t\t\tscope.dispatchEvent({\n\t\t\t\t\t\ttype: 'sessionstart'\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tfunction onInputSourcesChange(event) {\n\t\t\t\tconst inputSources = session.inputSources; // Assign inputSources to available controllers\n\n\t\t\t\tfor (let i = 0; i < controllers.length; i++) {\n\t\t\t\t\tinputSourcesMap.set(inputSources[i], controllers[i]);\n\t\t\t\t} // Notify disconnected\n\n\n\t\t\t\tfor (let i = 0; i < event.removed.length; i++) {\n\t\t\t\t\tconst inputSource = event.removed[i];\n\t\t\t\t\tconst controller = inputSourcesMap.get(inputSource);\n\n\t\t\t\t\tif (controller) {\n\t\t\t\t\t\tcontroller.dispatchEvent({\n\t\t\t\t\t\t\ttype: 'disconnected',\n\t\t\t\t\t\t\tdata: inputSource\n\t\t\t\t\t\t});\n\t\t\t\t\t\tinputSourcesMap.delete(inputSource);\n\t\t\t\t\t}\n\t\t\t\t} // Notify connected\n\n\n\t\t\t\tfor (let i = 0; i < event.added.length; i++) {\n\t\t\t\t\tconst inputSource = event.added[i];\n\t\t\t\t\tconst controller = inputSourcesMap.get(inputSource);\n\n\t\t\t\t\tif (controller) {\n\t\t\t\t\t\tcontroller.dispatchEvent({\n\t\t\t\t\t\t\ttype: 'connected',\n\t\t\t\t\t\t\tdata: inputSource\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} //\n\n\n\t\t\tconst cameraLPos = new Vector3();\n\t\t\tconst cameraRPos = new Vector3();\n\t\t\t/**\n\t\t\t * Assumes 2 cameras that are parallel and share an X-axis, and that\n\t\t\t * the cameras' projection and world matrices have already been set.\n\t\t\t * And that near and far planes are identical for both cameras.\n\t\t\t * Visualization of this technique: https://computergraphics.stackexchange.com/a/4765\n\t\t\t */\n\n\t\t\tfunction setProjectionFromUnion(camera, cameraL, cameraR) {\n\t\t\t\tcameraLPos.setFromMatrixPosition(cameraL.matrixWorld);\n\t\t\t\tcameraRPos.setFromMatrixPosition(cameraR.matrixWorld);\n\t\t\t\tconst ipd = cameraLPos.distanceTo(cameraRPos);\n\t\t\t\tconst projL = cameraL.projectionMatrix.elements;\n\t\t\t\tconst projR = cameraR.projectionMatrix.elements; // VR systems will have identical far and near planes, and\n\t\t\t\t// most likely identical top and bottom frustum extents.\n\t\t\t\t// Use the left camera for these values.\n\n\t\t\t\tconst near = projL[14] / (projL[10] - 1);\n\t\t\t\tconst far = projL[14] / (projL[10] + 1);\n\t\t\t\tconst topFov = (projL[9] + 1) / projL[5];\n\t\t\t\tconst bottomFov = (projL[9] - 1) / projL[5];\n\t\t\t\tconst leftFov = (projL[8] - 1) / projL[0];\n\t\t\t\tconst rightFov = (projR[8] + 1) / projR[0];\n\t\t\t\tconst left = near * leftFov;\n\t\t\t\tconst right = near * rightFov; // Calculate the new camera's position offset from the\n\t\t\t\t// left camera. xOffset should be roughly half `ipd`.\n\n\t\t\t\tconst zOffset = ipd / (-leftFov + rightFov);\n\t\t\t\tconst xOffset = zOffset * -leftFov; // TODO: Better way to apply this offset?\n\n\t\t\t\tcameraL.matrixWorld.decompose(camera.position, camera.quaternion, camera.scale);\n\t\t\t\tcamera.translateX(xOffset);\n\t\t\t\tcamera.translateZ(zOffset);\n\t\t\t\tcamera.matrixWorld.compose(camera.position, camera.quaternion, camera.scale);\n\t\t\t\tcamera.matrixWorldInverse.copy(camera.matrixWorld).invert(); // Find the union of the frustum values of the cameras and scale\n\t\t\t\t// the values so that the near plane's position does not change in world space,\n\t\t\t\t// although must now be relative to the new union camera.\n\n\t\t\t\tconst near2 = near + zOffset;\n\t\t\t\tconst far2 = far + zOffset;\n\t\t\t\tconst left2 = left - xOffset;\n\t\t\t\tconst right2 = right + (ipd - xOffset);\n\t\t\t\tconst top2 = topFov * far / far2 * near2;\n\t\t\t\tconst bottom2 = bottomFov * far / far2 * near2;\n\t\t\t\tcamera.projectionMatrix.makePerspective(left2, right2, top2, bottom2, near2, far2);\n\t\t\t}\n\n\t\t\tfunction updateCamera(camera, parent) {\n\t\t\t\tif (parent === null) {\n\t\t\t\t\tcamera.matrixWorld.copy(camera.matrix);\n\t\t\t\t} else {\n\t\t\t\t\tcamera.matrixWorld.multiplyMatrices(parent.matrixWorld, camera.matrix);\n\t\t\t\t}\n\n\t\t\t\tcamera.matrixWorldInverse.copy(camera.matrixWorld).invert();\n\t\t\t}\n\n\t\t\tthis.updateCamera = function (camera) {\n\t\t\t\tif (session === null) return;\n\t\t\t\tcameraVR.near = cameraR.near = cameraL.near = camera.near;\n\t\t\t\tcameraVR.far = cameraR.far = cameraL.far = camera.far;\n\n\t\t\t\tif (_currentDepthNear !== cameraVR.near || _currentDepthFar !== cameraVR.far) {\n\t\t\t\t\t// Note that the new renderState won't apply until the next frame. See #18320\n\t\t\t\t\tsession.updateRenderState({\n\t\t\t\t\t\tdepthNear: cameraVR.near,\n\t\t\t\t\t\tdepthFar: cameraVR.far\n\t\t\t\t\t});\n\t\t\t\t\t_currentDepthNear = cameraVR.near;\n\t\t\t\t\t_currentDepthFar = cameraVR.far;\n\t\t\t\t}\n\n\t\t\t\tconst parent = camera.parent;\n\t\t\t\tconst cameras = cameraVR.cameras;\n\t\t\t\tupdateCamera(cameraVR, parent);\n\n\t\t\t\tfor (let i = 0; i < cameras.length; i++) {\n\t\t\t\t\tupdateCamera(cameras[i], parent);\n\t\t\t\t}\n\n\t\t\t\tcameraVR.matrixWorld.decompose(cameraVR.position, cameraVR.quaternion, cameraVR.scale); // update user camera and its children\n\n\t\t\t\tcamera.position.copy(cameraVR.position);\n\t\t\t\tcamera.quaternion.copy(cameraVR.quaternion);\n\t\t\t\tcamera.scale.copy(cameraVR.scale);\n\t\t\t\tcamera.matrix.copy(cameraVR.matrix);\n\t\t\t\tcamera.matrixWorld.copy(cameraVR.matrixWorld);\n\t\t\t\tconst children = camera.children;\n\n\t\t\t\tfor (let i = 0, l = children.length; i < l; i++) {\n\t\t\t\t\tchildren[i].updateMatrixWorld(true);\n\t\t\t\t} // update projection matrix for proper view frustum culling\n\n\n\t\t\t\tif (cameras.length === 2) {\n\t\t\t\t\tsetProjectionFromUnion(cameraVR, cameraL, cameraR);\n\t\t\t\t} else {\n\t\t\t\t\t// assume single camera setup (AR)\n\t\t\t\t\tcameraVR.projectionMatrix.copy(cameraL.projectionMatrix);\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tthis.getCamera = function () {\n\t\t\t\treturn cameraVR;\n\t\t\t};\n\n\t\t\tthis.getFoveation = function () {\n\t\t\t\tif (glProjLayer !== null) {\n\t\t\t\t\treturn glProjLayer.fixedFoveation;\n\t\t\t\t}\n\n\t\t\t\tif (glBaseLayer !== null) {\n\t\t\t\t\treturn glBaseLayer.fixedFoveation;\n\t\t\t\t}\n\n\t\t\t\treturn undefined;\n\t\t\t};\n\n\t\t\tthis.setFoveation = function (foveation) {\n\t\t\t\t// 0 = no foveation = full resolution\n\t\t\t\t// 1 = maximum foveation = the edges render at lower resolution\n\t\t\t\tif (glProjLayer !== null) {\n\t\t\t\t\tglProjLayer.fixedFoveation = foveation;\n\t\t\t\t}\n\n\t\t\t\tif (glBaseLayer !== null && glBaseLayer.fixedFoveation !== undefined) {\n\t\t\t\t\tglBaseLayer.fixedFoveation = foveation;\n\t\t\t\t}\n\t\t\t}; // Animation Loop\n\n\n\t\t\tlet onAnimationFrameCallback = null;\n\n\t\t\tfunction onAnimationFrame(time, frame) {\n\t\t\t\tpose = frame.getViewerPose(referenceSpace);\n\t\t\t\txrFrame = frame;\n\n\t\t\t\tif (pose !== null) {\n\t\t\t\t\tconst views = pose.views;\n\n\t\t\t\t\tif (glBaseLayer !== null) {\n\t\t\t\t\t\tstate.bindXRFramebuffer(glBaseLayer.framebuffer);\n\t\t\t\t\t}\n\n\t\t\t\t\tlet cameraVRNeedsUpdate = false; // check if it's necessary to rebuild cameraVR's camera list\n\n\t\t\t\t\tif (views.length !== cameraVR.cameras.length) {\n\t\t\t\t\t\tcameraVR.cameras.length = 0;\n\t\t\t\t\t\tcameraVRNeedsUpdate = true;\n\t\t\t\t\t}\n\n\t\t\t\t\tfor (let i = 0; i < views.length; i++) {\n\t\t\t\t\t\tconst view = views[i];\n\t\t\t\t\t\tlet viewport = null;\n\n\t\t\t\t\t\tif (glBaseLayer !== null) {\n\t\t\t\t\t\t\tviewport = glBaseLayer.getViewport(view);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tconst glSubImage = glBinding.getViewSubImage(glProjLayer, view);\n\t\t\t\t\t\t\tstate.bindXRFramebuffer(glFramebuffer);\n\n\t\t\t\t\t\t\tif (glSubImage.depthStencilTexture !== undefined) {\n\t\t\t\t\t\t\t\tgl.framebufferTexture2D(gl.FRAMEBUFFER, depthStyle, gl.TEXTURE_2D, glSubImage.depthStencilTexture, 0);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tgl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, glSubImage.colorTexture, 0);\n\t\t\t\t\t\t\tviewport = glSubImage.viewport;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tconst camera = cameras[i];\n\t\t\t\t\t\tcamera.matrix.fromArray(view.transform.matrix);\n\t\t\t\t\t\tcamera.projectionMatrix.fromArray(view.projectionMatrix);\n\t\t\t\t\t\tcamera.viewport.set(viewport.x, viewport.y, viewport.width, viewport.height);\n\n\t\t\t\t\t\tif (i === 0) {\n\t\t\t\t\t\t\tcameraVR.matrix.copy(camera.matrix);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (cameraVRNeedsUpdate === true) {\n\t\t\t\t\t\t\tcameraVR.cameras.push(camera);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif (isMultisample) {\n\t\t\t\t\t\tstate.bindXRFramebuffer(glMultisampledFramebuffer);\n\t\t\t\t\t\tif (clearStyle !== null) gl.clear(clearStyle);\n\t\t\t\t\t}\n\t\t\t\t} //\n\n\n\t\t\t\tconst inputSources = session.inputSources;\n\n\t\t\t\tfor (let i = 0; i < controllers.length; i++) {\n\t\t\t\t\tconst controller = controllers[i];\n\t\t\t\t\tconst inputSource = inputSources[i];\n\t\t\t\t\tcontroller.update(inputSource, frame, referenceSpace);\n\t\t\t\t}\n\n\t\t\t\tif (onAnimationFrameCallback) onAnimationFrameCallback(time, frame);\n\n\t\t\t\tif (isMultisample) {\n\t\t\t\t\tconst width = glProjLayer.textureWidth;\n\t\t\t\t\tconst height = glProjLayer.textureHeight;\n\t\t\t\t\tstate.bindFramebuffer(gl.READ_FRAMEBUFFER, glMultisampledFramebuffer);\n\t\t\t\t\tstate.bindFramebuffer(gl.DRAW_FRAMEBUFFER, glFramebuffer); // Invalidate the depth here to avoid flush of the depth data to main memory.\n\n\t\t\t\t\tgl.invalidateFramebuffer(gl.READ_FRAMEBUFFER, [depthStyle]);\n\t\t\t\t\tgl.invalidateFramebuffer(gl.DRAW_FRAMEBUFFER, [depthStyle]);\n\t\t\t\t\tgl.blitFramebuffer(0, 0, width, height, 0, 0, width, height, gl.COLOR_BUFFER_BIT, gl.NEAREST); // Invalidate the MSAA buffer because it's not needed anymore.\n\n\t\t\t\t\tgl.invalidateFramebuffer(gl.READ_FRAMEBUFFER, [gl.COLOR_ATTACHMENT0]);\n\t\t\t\t\tstate.bindFramebuffer(gl.READ_FRAMEBUFFER, null);\n\t\t\t\t\tstate.bindFramebuffer(gl.DRAW_FRAMEBUFFER, null);\n\t\t\t\t\tstate.bindFramebuffer(gl.FRAMEBUFFER, glMultisampledFramebuffer);\n\t\t\t\t}\n\n\t\t\t\txrFrame = null;\n\t\t\t}\n\n\t\t\tconst animation = new WebGLAnimation();\n\t\t\tanimation.setAnimationLoop(onAnimationFrame);\n\n\t\t\tthis.setAnimationLoop = function (callback) {\n\t\t\t\tonAnimationFrameCallback = callback;\n\t\t\t};\n\n\t\t\tthis.dispose = function () {};\n\t\t}\n\n\t}\n\n\tfunction WebGLMaterials(properties) {\n\t\tfunction refreshFogUniforms(uniforms, fog) {\n\t\t\tuniforms.fogColor.value.copy(fog.color);\n\n\t\t\tif (fog.isFog) {\n\t\t\t\tuniforms.fogNear.value = fog.near;\n\t\t\t\tuniforms.fogFar.value = fog.far;\n\t\t\t} else if (fog.isFogExp2) {\n\t\t\t\tuniforms.fogDensity.value = fog.density;\n\t\t\t}\n\t\t}\n\n\t\tfunction refreshMaterialUniforms(uniforms, material, pixelRatio, height, transmissionRenderTarget) {\n\t\t\tif (material.isMeshBasicMaterial) {\n\t\t\t\trefreshUniformsCommon(uniforms, material);\n\t\t\t} else if (material.isMeshLambertMaterial) {\n\t\t\t\trefreshUniformsCommon(uniforms, material);\n\t\t\t\trefreshUniformsLambert(uniforms, material);\n\t\t\t} else if (material.isMeshToonMaterial) {\n\t\t\t\trefreshUniformsCommon(uniforms, material);\n\t\t\t\trefreshUniformsToon(uniforms, material);\n\t\t\t} else if (material.isMeshPhongMaterial) {\n\t\t\t\trefreshUniformsCommon(uniforms, material);\n\t\t\t\trefreshUniformsPhong(uniforms, material);\n\t\t\t} else if (material.isMeshStandardMaterial) {\n\t\t\t\trefreshUniformsCommon(uniforms, material);\n\n\t\t\t\tif (material.isMeshPhysicalMaterial) {\n\t\t\t\t\trefreshUniformsPhysical(uniforms, material, transmissionRenderTarget);\n\t\t\t\t} else {\n\t\t\t\t\trefreshUniformsStandard(uniforms, material);\n\t\t\t\t}\n\t\t\t} else if (material.isMeshMatcapMaterial) {\n\t\t\t\trefreshUniformsCommon(uniforms, material);\n\t\t\t\trefreshUniformsMatcap(uniforms, material);\n\t\t\t} else if (material.isMeshDepthMaterial) {\n\t\t\t\trefreshUniformsCommon(uniforms, material);\n\t\t\t\trefreshUniformsDepth(uniforms, material);\n\t\t\t} else if (material.isMeshDistanceMaterial) {\n\t\t\t\trefreshUniformsCommon(uniforms, material);\n\t\t\t\trefreshUniformsDistance(uniforms, material);\n\t\t\t} else if (material.isMeshNormalMaterial) {\n\t\t\t\trefreshUniformsCommon(uniforms, material);\n\t\t\t\trefreshUniformsNormal(uniforms, material);\n\t\t\t} else if (material.isLineBasicMaterial) {\n\t\t\t\trefreshUniformsLine(uniforms, material);\n\n\t\t\t\tif (material.isLineDashedMaterial) {\n\t\t\t\t\trefreshUniformsDash(uniforms, material);\n\t\t\t\t}\n\t\t\t} else if (material.isPointsMaterial) {\n\t\t\t\trefreshUniformsPoints(uniforms, material, pixelRatio, height);\n\t\t\t} else if (material.isSpriteMaterial) {\n\t\t\t\trefreshUniformsSprites(uniforms, material);\n\t\t\t} else if (material.isShadowMaterial) {\n\t\t\t\tuniforms.color.value.copy(material.color);\n\t\t\t\tuniforms.opacity.value = material.opacity;\n\t\t\t} else if (material.isShaderMaterial) {\n\t\t\t\tmaterial.uniformsNeedUpdate = false; // #15581\n\t\t\t}\n\t\t}\n\n\t\tfunction refreshUniformsCommon(uniforms, material) {\n\t\t\tuniforms.opacity.value = material.opacity;\n\n\t\t\tif (material.color) {\n\t\t\t\tuniforms.diffuse.value.copy(material.color);\n\t\t\t}\n\n\t\t\tif (material.emissive) {\n\t\t\t\tuniforms.emissive.value.copy(material.emissive).multiplyScalar(material.emissiveIntensity);\n\t\t\t}\n\n\t\t\tif (material.map) {\n\t\t\t\tuniforms.map.value = material.map;\n\t\t\t}\n\n\t\t\tif (material.alphaMap) {\n\t\t\t\tuniforms.alphaMap.value = material.alphaMap;\n\t\t\t}\n\n\t\t\tif (material.specularMap) {\n\t\t\t\tuniforms.specularMap.value = material.specularMap;\n\t\t\t}\n\n\t\t\tif (material.alphaTest > 0) {\n\t\t\t\tuniforms.alphaTest.value = material.alphaTest;\n\t\t\t}\n\n\t\t\tconst envMap = properties.get(material).envMap;\n\n\t\t\tif (envMap) {\n\t\t\t\tuniforms.envMap.value = envMap;\n\t\t\t\tuniforms.flipEnvMap.value = envMap.isCubeTexture && envMap.isRenderTargetTexture === false ? -1 : 1;\n\t\t\t\tuniforms.reflectivity.value = material.reflectivity;\n\t\t\t\tuniforms.ior.value = material.ior;\n\t\t\t\tuniforms.refractionRatio.value = material.refractionRatio;\n\n\t\t\t\tconst maxMipLevel = properties.get(envMap).__maxMipLevel;\n\n\t\t\t\tif (maxMipLevel !== undefined) {\n\t\t\t\t\tuniforms.maxMipLevel.value = maxMipLevel;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (material.lightMap) {\n\t\t\t\tuniforms.lightMap.value = material.lightMap;\n\t\t\t\tuniforms.lightMapIntensity.value = material.lightMapIntensity;\n\t\t\t}\n\n\t\t\tif (material.aoMap) {\n\t\t\t\tuniforms.aoMap.value = material.aoMap;\n\t\t\t\tuniforms.aoMapIntensity.value = material.aoMapIntensity;\n\t\t\t} // uv repeat and offset setting priorities\n\t\t\t// 1. color map\n\t\t\t// 2. specular map\n\t\t\t// 3. displacementMap map\n\t\t\t// 4. normal map\n\t\t\t// 5. bump map\n\t\t\t// 6. roughnessMap map\n\t\t\t// 7. metalnessMap map\n\t\t\t// 8. alphaMap map\n\t\t\t// 9. emissiveMap map\n\t\t\t// 10. clearcoat map\n\t\t\t// 11. clearcoat normal map\n\t\t\t// 12. clearcoat roughnessMap map\n\t\t\t// 13. specular intensity map\n\t\t\t// 14. specular tint map\n\t\t\t// 15. transmission map\n\t\t\t// 16. thickness map\n\n\n\t\t\tlet uvScaleMap;\n\n\t\t\tif (material.map) {\n\t\t\t\tuvScaleMap = material.map;\n\t\t\t} else if (material.specularMap) {\n\t\t\t\tuvScaleMap = material.specularMap;\n\t\t\t} else if (material.displacementMap) {\n\t\t\t\tuvScaleMap = material.displacementMap;\n\t\t\t} else if (material.normalMap) {\n\t\t\t\tuvScaleMap = material.normalMap;\n\t\t\t} else if (material.bumpMap) {\n\t\t\t\tuvScaleMap = material.bumpMap;\n\t\t\t} else if (material.roughnessMap) {\n\t\t\t\tuvScaleMap = material.roughnessMap;\n\t\t\t} else if (material.metalnessMap) {\n\t\t\t\tuvScaleMap = material.metalnessMap;\n\t\t\t} else if (material.alphaMap) {\n\t\t\t\tuvScaleMap = material.alphaMap;\n\t\t\t} else if (material.emissiveMap) {\n\t\t\t\tuvScaleMap = material.emissiveMap;\n\t\t\t} else if (material.clearcoatMap) {\n\t\t\t\tuvScaleMap = material.clearcoatMap;\n\t\t\t} else if (material.clearcoatNormalMap) {\n\t\t\t\tuvScaleMap = material.clearcoatNormalMap;\n\t\t\t} else if (material.clearcoatRoughnessMap) {\n\t\t\t\tuvScaleMap = material.clearcoatRoughnessMap;\n\t\t\t} else if (material.specularIntensityMap) {\n\t\t\t\tuvScaleMap = material.specularIntensityMap;\n\t\t\t} else if (material.specularColorMap) {\n\t\t\t\tuvScaleMap = material.specularColorMap;\n\t\t\t} else if (material.transmissionMap) {\n\t\t\t\tuvScaleMap = material.transmissionMap;\n\t\t\t} else if (material.thicknessMap) {\n\t\t\t\tuvScaleMap = material.thicknessMap;\n\t\t\t} else if (material.sheenColorMap) {\n\t\t\t\tuvScaleMap = material.sheenColorMap;\n\t\t\t} else if (material.sheenRoughnessMap) {\n\t\t\t\tuvScaleMap = material.sheenRoughnessMap;\n\t\t\t}\n\n\t\t\tif (uvScaleMap !== undefined) {\n\t\t\t\t// backwards compatibility\n\t\t\t\tif (uvScaleMap.isWebGLRenderTarget) {\n\t\t\t\t\tuvScaleMap = uvScaleMap.texture;\n\t\t\t\t}\n\n\t\t\t\tif (uvScaleMap.matrixAutoUpdate === true) {\n\t\t\t\t\tuvScaleMap.updateMatrix();\n\t\t\t\t}\n\n\t\t\t\tuniforms.uvTransform.value.copy(uvScaleMap.matrix);\n\t\t\t} // uv repeat and offset setting priorities for uv2\n\t\t\t// 1. ao map\n\t\t\t// 2. light map\n\n\n\t\t\tlet uv2ScaleMap;\n\n\t\t\tif (material.aoMap) {\n\t\t\t\tuv2ScaleMap = material.aoMap;\n\t\t\t} else if (material.lightMap) {\n\t\t\t\tuv2ScaleMap = material.lightMap;\n\t\t\t}\n\n\t\t\tif (uv2ScaleMap !== undefined) {\n\t\t\t\t// backwards compatibility\n\t\t\t\tif (uv2ScaleMap.isWebGLRenderTarget) {\n\t\t\t\t\tuv2ScaleMap = uv2ScaleMap.texture;\n\t\t\t\t}\n\n\t\t\t\tif (uv2ScaleMap.matrixAutoUpdate === true) {\n\t\t\t\t\tuv2ScaleMap.updateMatrix();\n\t\t\t\t}\n\n\t\t\t\tuniforms.uv2Transform.value.copy(uv2ScaleMap.matrix);\n\t\t\t}\n\t\t}\n\n\t\tfunction refreshUniformsLine(uniforms, material) {\n\t\t\tuniforms.diffuse.value.copy(material.color);\n\t\t\tuniforms.opacity.value = material.opacity;\n\t\t}\n\n\t\tfunction refreshUniformsDash(uniforms, material) {\n\t\t\tuniforms.dashSize.value = material.dashSize;\n\t\t\tuniforms.totalSize.value = material.dashSize + material.gapSize;\n\t\t\tuniforms.scale.value = material.scale;\n\t\t}\n\n\t\tfunction refreshUniformsPoints(uniforms, material, pixelRatio, height) {\n\t\t\tuniforms.diffuse.value.copy(material.color);\n\t\t\tuniforms.opacity.value = material.opacity;\n\t\t\tuniforms.size.value = material.size * pixelRatio;\n\t\t\tuniforms.scale.value = height * 0.5;\n\n\t\t\tif (material.map) {\n\t\t\t\tuniforms.map.value = material.map;\n\t\t\t}\n\n\t\t\tif (material.alphaMap) {\n\t\t\t\tuniforms.alphaMap.value = material.alphaMap;\n\t\t\t}\n\n\t\t\tif (material.alphaTest > 0) {\n\t\t\t\tuniforms.alphaTest.value = material.alphaTest;\n\t\t\t} // uv repeat and offset setting priorities\n\t\t\t// 1. color map\n\t\t\t// 2. alpha map\n\n\n\t\t\tlet uvScaleMap;\n\n\t\t\tif (material.map) {\n\t\t\t\tuvScaleMap = material.map;\n\t\t\t} else if (material.alphaMap) {\n\t\t\t\tuvScaleMap = material.alphaMap;\n\t\t\t}\n\n\t\t\tif (uvScaleMap !== undefined) {\n\t\t\t\tif (uvScaleMap.matrixAutoUpdate === true) {\n\t\t\t\t\tuvScaleMap.updateMatrix();\n\t\t\t\t}\n\n\t\t\t\tuniforms.uvTransform.value.copy(uvScaleMap.matrix);\n\t\t\t}\n\t\t}\n\n\t\tfunction refreshUniformsSprites(uniforms, material) {\n\t\t\tuniforms.diffuse.value.copy(material.color);\n\t\t\tuniforms.opacity.value = material.opacity;\n\t\t\tuniforms.rotation.value = material.rotation;\n\n\t\t\tif (material.map) {\n\t\t\t\tuniforms.map.value = material.map;\n\t\t\t}\n\n\t\t\tif (material.alphaMap) {\n\t\t\t\tuniforms.alphaMap.value = material.alphaMap;\n\t\t\t}\n\n\t\t\tif (material.alphaTest > 0) {\n\t\t\t\tuniforms.alphaTest.value = material.alphaTest;\n\t\t\t} // uv repeat and offset setting priorities\n\t\t\t// 1. color map\n\t\t\t// 2. alpha map\n\n\n\t\t\tlet uvScaleMap;\n\n\t\t\tif (material.map) {\n\t\t\t\tuvScaleMap = material.map;\n\t\t\t} else if (material.alphaMap) {\n\t\t\t\tuvScaleMap = material.alphaMap;\n\t\t\t}\n\n\t\t\tif (uvScaleMap !== undefined) {\n\t\t\t\tif (uvScaleMap.matrixAutoUpdate === true) {\n\t\t\t\t\tuvScaleMap.updateMatrix();\n\t\t\t\t}\n\n\t\t\t\tuniforms.uvTransform.value.copy(uvScaleMap.matrix);\n\t\t\t}\n\t\t}\n\n\t\tfunction refreshUniformsLambert(uniforms, material) {\n\t\t\tif (material.emissiveMap) {\n\t\t\t\tuniforms.emissiveMap.value = material.emissiveMap;\n\t\t\t}\n\t\t}\n\n\t\tfunction refreshUniformsPhong(uniforms, material) {\n\t\t\tuniforms.specular.value.copy(material.specular);\n\t\t\tuniforms.shininess.value = Math.max(material.shininess, 1e-4); // to prevent pow( 0.0, 0.0 )\n\n\t\t\tif (material.emissiveMap) {\n\t\t\t\tuniforms.emissiveMap.value = material.emissiveMap;\n\t\t\t}\n\n\t\t\tif (material.bumpMap) {\n\t\t\t\tuniforms.bumpMap.value = material.bumpMap;\n\t\t\t\tuniforms.bumpScale.value = material.bumpScale;\n\t\t\t\tif (material.side === BackSide) uniforms.bumpScale.value *= -1;\n\t\t\t}\n\n\t\t\tif (material.normalMap) {\n\t\t\t\tuniforms.normalMap.value = material.normalMap;\n\t\t\t\tuniforms.normalScale.value.copy(material.normalScale);\n\t\t\t\tif (material.side === BackSide) uniforms.normalScale.value.negate();\n\t\t\t}\n\n\t\t\tif (material.displacementMap) {\n\t\t\t\tuniforms.displacementMap.value = material.displacementMap;\n\t\t\t\tuniforms.displacementScale.value = material.displacementScale;\n\t\t\t\tuniforms.displacementBias.value = material.displacementBias;\n\t\t\t}\n\t\t}\n\n\t\tfunction refreshUniformsToon(uniforms, material) {\n\t\t\tif (material.gradientMap) {\n\t\t\t\tuniforms.gradientMap.value = material.gradientMap;\n\t\t\t}\n\n\t\t\tif (material.emissiveMap) {\n\t\t\t\tuniforms.emissiveMap.value = material.emissiveMap;\n\t\t\t}\n\n\t\t\tif (material.bumpMap) {\n\t\t\t\tuniforms.bumpMap.value = material.bumpMap;\n\t\t\t\tuniforms.bumpScale.value = material.bumpScale;\n\t\t\t\tif (material.side === BackSide) uniforms.bumpScale.value *= -1;\n\t\t\t}\n\n\t\t\tif (material.normalMap) {\n\t\t\t\tuniforms.normalMap.value = material.normalMap;\n\t\t\t\tuniforms.normalScale.value.copy(material.normalScale);\n\t\t\t\tif (material.side === BackSide) uniforms.normalScale.value.negate();\n\t\t\t}\n\n\t\t\tif (material.displacementMap) {\n\t\t\t\tuniforms.displacementMap.value = material.displacementMap;\n\t\t\t\tuniforms.displacementScale.value = material.displacementScale;\n\t\t\t\tuniforms.displacementBias.value = material.displacementBias;\n\t\t\t}\n\t\t}\n\n\t\tfunction refreshUniformsStandard(uniforms, material) {\n\t\t\tuniforms.roughness.value = material.roughness;\n\t\t\tuniforms.metalness.value = material.metalness;\n\n\t\t\tif (material.roughnessMap) {\n\t\t\t\tuniforms.roughnessMap.value = material.roughnessMap;\n\t\t\t}\n\n\t\t\tif (material.metalnessMap) {\n\t\t\t\tuniforms.metalnessMap.value = material.metalnessMap;\n\t\t\t}\n\n\t\t\tif (material.emissiveMap) {\n\t\t\t\tuniforms.emissiveMap.value = material.emissiveMap;\n\t\t\t}\n\n\t\t\tif (material.bumpMap) {\n\t\t\t\tuniforms.bumpMap.value = material.bumpMap;\n\t\t\t\tuniforms.bumpScale.value = material.bumpScale;\n\t\t\t\tif (material.side === BackSide) uniforms.bumpScale.value *= -1;\n\t\t\t}\n\n\t\t\tif (material.normalMap) {\n\t\t\t\tuniforms.normalMap.value = material.normalMap;\n\t\t\t\tuniforms.normalScale.value.copy(material.normalScale);\n\t\t\t\tif (material.side === BackSide) uniforms.normalScale.value.negate();\n\t\t\t}\n\n\t\t\tif (material.displacementMap) {\n\t\t\t\tuniforms.displacementMap.value = material.displacementMap;\n\t\t\t\tuniforms.displacementScale.value = material.displacementScale;\n\t\t\t\tuniforms.displacementBias.value = material.displacementBias;\n\t\t\t}\n\n\t\t\tconst envMap = properties.get(material).envMap;\n\n\t\t\tif (envMap) {\n\t\t\t\t//uniforms.envMap.value = material.envMap; // part of uniforms common\n\t\t\t\tuniforms.envMapIntensity.value = material.envMapIntensity;\n\t\t\t}\n\t\t}\n\n\t\tfunction refreshUniformsPhysical(uniforms, material, transmissionRenderTarget) {\n\t\t\trefreshUniformsStandard(uniforms, material);\n\t\t\tuniforms.ior.value = material.ior; // also part of uniforms common\n\n\t\t\tif (material.sheen > 0) {\n\t\t\t\tuniforms.sheenColor.value.copy(material.sheenColor).multiplyScalar(material.sheen);\n\t\t\t\tuniforms.sheenRoughness.value = material.sheenRoughness;\n\n\t\t\t\tif (material.sheenColorMap) {\n\t\t\t\t\tuniforms.sheenColorMap.value = material.sheenColorMap;\n\t\t\t\t}\n\n\t\t\t\tif (material.sheenRoughnessMap) {\n\t\t\t\t\tuniforms.sheenRoughnessMap.value = material.sheenRoughnessMap;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (material.clearcoat > 0) {\n\t\t\t\tuniforms.clearcoat.value = material.clearcoat;\n\t\t\t\tuniforms.clearcoatRoughness.value = material.clearcoatRoughness;\n\n\t\t\t\tif (material.clearcoatMap) {\n\t\t\t\t\tuniforms.clearcoatMap.value = material.clearcoatMap;\n\t\t\t\t}\n\n\t\t\t\tif (material.clearcoatRoughnessMap) {\n\t\t\t\t\tuniforms.clearcoatRoughnessMap.value = material.clearcoatRoughnessMap;\n\t\t\t\t}\n\n\t\t\t\tif (material.clearcoatNormalMap) {\n\t\t\t\t\tuniforms.clearcoatNormalScale.value.copy(material.clearcoatNormalScale);\n\t\t\t\t\tuniforms.clearcoatNormalMap.value = material.clearcoatNormalMap;\n\n\t\t\t\t\tif (material.side === BackSide) {\n\t\t\t\t\t\tuniforms.clearcoatNormalScale.value.negate();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (material.transmission > 0) {\n\t\t\t\tuniforms.transmission.value = material.transmission;\n\t\t\t\tuniforms.transmissionSamplerMap.value = transmissionRenderTarget.texture;\n\t\t\t\tuniforms.transmissionSamplerSize.value.set(transmissionRenderTarget.width, transmissionRenderTarget.height);\n\n\t\t\t\tif (material.transmissionMap) {\n\t\t\t\t\tuniforms.transmissionMap.value = material.transmissionMap;\n\t\t\t\t}\n\n\t\t\t\tuniforms.thickness.value = material.thickness;\n\n\t\t\t\tif (material.thicknessMap) {\n\t\t\t\t\tuniforms.thicknessMap.value = material.thicknessMap;\n\t\t\t\t}\n\n\t\t\t\tuniforms.attenuationDistance.value = material.attenuationDistance;\n\t\t\t\tuniforms.attenuationColor.value.copy(material.attenuationColor);\n\t\t\t}\n\n\t\t\tuniforms.specularIntensity.value = material.specularIntensity;\n\t\t\tuniforms.specularColor.value.copy(material.specularColor);\n\n\t\t\tif (material.specularIntensityMap) {\n\t\t\t\tuniforms.specularIntensityMap.value = material.specularIntensityMap;\n\t\t\t}\n\n\t\t\tif (material.specularColorMap) {\n\t\t\t\tuniforms.specularColorMap.value = material.specularColorMap;\n\t\t\t}\n\t\t}\n\n\t\tfunction refreshUniformsMatcap(uniforms, material) {\n\t\t\tif (material.matcap) {\n\t\t\t\tuniforms.matcap.value = material.matcap;\n\t\t\t}\n\n\t\t\tif (material.bumpMap) {\n\t\t\t\tuniforms.bumpMap.value = material.bumpMap;\n\t\t\t\tuniforms.bumpScale.value = material.bumpScale;\n\t\t\t\tif (material.side === BackSide) uniforms.bumpScale.value *= -1;\n\t\t\t}\n\n\t\t\tif (material.normalMap) {\n\t\t\t\tuniforms.normalMap.value = material.normalMap;\n\t\t\t\tuniforms.normalScale.value.copy(material.normalScale);\n\t\t\t\tif (material.side === BackSide) uniforms.normalScale.value.negate();\n\t\t\t}\n\n\t\t\tif (material.displacementMap) {\n\t\t\t\tuniforms.displacementMap.value = material.displacementMap;\n\t\t\t\tuniforms.displacementScale.value = material.displacementScale;\n\t\t\t\tuniforms.displacementBias.value = material.displacementBias;\n\t\t\t}\n\t\t}\n\n\t\tfunction refreshUniformsDepth(uniforms, material) {\n\t\t\tif (material.displacementMap) {\n\t\t\t\tuniforms.displacementMap.value = material.displacementMap;\n\t\t\t\tuniforms.displacementScale.value = material.displacementScale;\n\t\t\t\tuniforms.displacementBias.value = material.displacementBias;\n\t\t\t}\n\t\t}\n\n\t\tfunction refreshUniformsDistance(uniforms, material) {\n\t\t\tif (material.displacementMap) {\n\t\t\t\tuniforms.displacementMap.value = material.displacementMap;\n\t\t\t\tuniforms.displacementScale.value = material.displacementScale;\n\t\t\t\tuniforms.displacementBias.value = material.displacementBias;\n\t\t\t}\n\n\t\t\tuniforms.referencePosition.value.copy(material.referencePosition);\n\t\t\tuniforms.nearDistance.value = material.nearDistance;\n\t\t\tuniforms.farDistance.value = material.farDistance;\n\t\t}\n\n\t\tfunction refreshUniformsNormal(uniforms, material) {\n\t\t\tif (material.bumpMap) {\n\t\t\t\tuniforms.bumpMap.value = material.bumpMap;\n\t\t\t\tuniforms.bumpScale.value = material.bumpScale;\n\t\t\t\tif (material.side === BackSide) uniforms.bumpScale.value *= -1;\n\t\t\t}\n\n\t\t\tif (material.normalMap) {\n\t\t\t\tuniforms.normalMap.value = material.normalMap;\n\t\t\t\tuniforms.normalScale.value.copy(material.normalScale);\n\t\t\t\tif (material.side === BackSide) uniforms.normalScale.value.negate();\n\t\t\t}\n\n\t\t\tif (material.displacementMap) {\n\t\t\t\tuniforms.displacementMap.value = material.displacementMap;\n\t\t\t\tuniforms.displacementScale.value = material.displacementScale;\n\t\t\t\tuniforms.displacementBias.value = material.displacementBias;\n\t\t\t}\n\t\t}\n\n\t\treturn {\n\t\t\trefreshFogUniforms: refreshFogUniforms,\n\t\t\trefreshMaterialUniforms: refreshMaterialUniforms\n\t\t};\n\t}\n\n\tfunction createCanvasElement() {\n\t\tconst canvas = createElementNS('canvas');\n\t\tcanvas.style.display = 'block';\n\t\treturn canvas;\n\t}\n\n\tfunction WebGLRenderer(parameters = {}) {\n\t\tconst _canvas = parameters.canvas !== undefined ? parameters.canvas : createCanvasElement(),\n\t\t\t\t\t_context = parameters.context !== undefined ? parameters.context : null,\n\t\t\t\t\t_alpha = parameters.alpha !== undefined ? parameters.alpha : false,\n\t\t\t\t\t_depth = parameters.depth !== undefined ? parameters.depth : true,\n\t\t\t\t\t_stencil = parameters.stencil !== undefined ? parameters.stencil : true,\n\t\t\t\t\t_antialias = parameters.antialias !== undefined ? parameters.antialias : false,\n\t\t\t\t\t_premultipliedAlpha = parameters.premultipliedAlpha !== undefined ? parameters.premultipliedAlpha : true,\n\t\t\t\t\t_preserveDrawingBuffer = parameters.preserveDrawingBuffer !== undefined ? parameters.preserveDrawingBuffer : false,\n\t\t\t\t\t_powerPreference = parameters.powerPreference !== undefined ? parameters.powerPreference : 'default',\n\t\t\t\t\t_failIfMajorPerformanceCaveat = parameters.failIfMajorPerformanceCaveat !== undefined ? parameters.failIfMajorPerformanceCaveat : false;\n\n\t\tlet currentRenderList = null;\n\t\tlet currentRenderState = null; // render() can be called from within a callback triggered by another render.\n\t\t// We track this so that the nested render call gets its list and state isolated from the parent render call.\n\n\t\tconst renderListStack = [];\n\t\tconst renderStateStack = []; // public properties\n\n\t\tthis.domElement = _canvas; // Debug configuration container\n\n\t\tthis.debug = {\n\t\t\t/**\n\t\t\t * Enables error checking and reporting when shader programs are being compiled\n\t\t\t * @type {boolean}\n\t\t\t */\n\t\t\tcheckShaderErrors: true\n\t\t}; // clearing\n\n\t\tthis.autoClear = true;\n\t\tthis.autoClearColor = true;\n\t\tthis.autoClearDepth = true;\n\t\tthis.autoClearStencil = true; // scene graph\n\n\t\tthis.sortObjects = true; // user-defined clipping\n\n\t\tthis.clippingPlanes = [];\n\t\tthis.localClippingEnabled = false; // physically based shading\n\n\t\tthis.gammaFactor = 2.0; // for backwards compatibility\n\n\t\tthis.outputEncoding = LinearEncoding; // physical lights\n\n\t\tthis.physicallyCorrectLights = false; // tone mapping\n\n\t\tthis.toneMapping = NoToneMapping;\n\t\tthis.toneMappingExposure = 1.0; // internal properties\n\n\t\tconst _this = this;\n\n\t\tlet _isContextLost = false; // internal state cache\n\n\t\tlet _currentActiveCubeFace = 0;\n\t\tlet _currentActiveMipmapLevel = 0;\n\t\tlet _currentRenderTarget = null;\n\n\t\tlet _currentMaterialId = -1;\n\n\t\tlet _currentCamera = null;\n\n\t\tconst _currentViewport = new Vector4();\n\n\t\tconst _currentScissor = new Vector4();\n\n\t\tlet _currentScissorTest = null; //\n\n\t\tlet _width = _canvas.width;\n\t\tlet _height = _canvas.height;\n\t\tlet _pixelRatio = 1;\n\t\tlet _opaqueSort = null;\n\t\tlet _transparentSort = null;\n\n\t\tconst _viewport = new Vector4(0, 0, _width, _height);\n\n\t\tconst _scissor = new Vector4(0, 0, _width, _height);\n\n\t\tlet _scissorTest = false; //\n\n\t\tconst _currentDrawBuffers = []; // frustum\n\n\t\tconst _frustum = new Frustum(); // clipping\n\n\n\t\tlet _clippingEnabled = false;\n\t\tlet _localClippingEnabled = false; // transmission\n\n\t\tlet _transmissionRenderTarget = null; // camera matrices cache\n\n\t\tconst _projScreenMatrix = new Matrix4();\n\n\t\tconst _vector3 = new Vector3();\n\n\t\tconst _emptyScene = {\n\t\t\tbackground: null,\n\t\t\tfog: null,\n\t\t\tenvironment: null,\n\t\t\toverrideMaterial: null,\n\t\t\tisScene: true\n\t\t};\n\n\t\tfunction getTargetPixelRatio() {\n\t\t\treturn _currentRenderTarget === null ? _pixelRatio : 1;\n\t\t} // initialize\n\n\n\t\tlet _gl = _context;\n\n\t\tfunction getContext(contextNames, contextAttributes) {\n\t\t\tfor (let i = 0; i < contextNames.length; i++) {\n\t\t\t\tconst contextName = contextNames[i];\n\n\t\t\t\tconst context = _canvas.getContext(contextName, contextAttributes);\n\n\t\t\t\tif (context !== null) return context;\n\t\t\t}\n\n\t\t\treturn null;\n\t\t}\n\n\t\ttry {\n\t\t\tconst contextAttributes = {\n\t\t\t\talpha: _alpha,\n\t\t\t\tdepth: _depth,\n\t\t\t\tstencil: _stencil,\n\t\t\t\tantialias: _antialias,\n\t\t\t\tpremultipliedAlpha: _premultipliedAlpha,\n\t\t\t\tpreserveDrawingBuffer: _preserveDrawingBuffer,\n\t\t\t\tpowerPreference: _powerPreference,\n\t\t\t\tfailIfMajorPerformanceCaveat: _failIfMajorPerformanceCaveat\n\t\t\t}; // event listeners must be registered before WebGL context is created, see #12753\n\n\t\t\t_canvas.addEventListener('webglcontextlost', onContextLost, false);\n\n\t\t\t_canvas.addEventListener('webglcontextrestored', onContextRestore, false);\n\n\t\t\tif (_gl === null) {\n\t\t\t\tconst contextNames = ['webgl2', 'webgl', 'experimental-webgl'];\n\n\t\t\t\tif (_this.isWebGL1Renderer === true) {\n\t\t\t\t\tcontextNames.shift();\n\t\t\t\t}\n\n\t\t\t\t_gl = getContext(contextNames, contextAttributes);\n\n\t\t\t\tif (_gl === null) {\n\t\t\t\t\tif (getContext(contextNames)) {\n\t\t\t\t\t\tthrow new Error('Error creating WebGL context with your selected attributes.');\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthrow new Error('Error creating WebGL context.');\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} // Some experimental-webgl implementations do not have getShaderPrecisionFormat\n\n\n\t\t\tif (_gl.getShaderPrecisionFormat === undefined) {\n\t\t\t\t_gl.getShaderPrecisionFormat = function () {\n\t\t\t\t\treturn {\n\t\t\t\t\t\t'rangeMin': 1,\n\t\t\t\t\t\t'rangeMax': 1,\n\t\t\t\t\t\t'precision': 1\n\t\t\t\t\t};\n\t\t\t\t};\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tconsole.error('THREE.WebGLRenderer: ' + error.message);\n\t\t\tthrow error;\n\t\t}\n\n\t\tlet extensions, capabilities, state, info;\n\t\tlet properties, textures, cubemaps, cubeuvmaps, attributes, geometries, objects;\n\t\tlet programCache, materials, renderLists, renderStates, clipping, shadowMap;\n\t\tlet background, morphtargets, bufferRenderer, indexedBufferRenderer;\n\t\tlet utils, bindingStates;\n\n\t\tfunction initGLContext() {\n\t\t\textensions = new WebGLExtensions(_gl);\n\t\t\tcapabilities = new WebGLCapabilities(_gl, extensions, parameters);\n\t\t\textensions.init(capabilities);\n\t\t\tutils = new WebGLUtils(_gl, extensions, capabilities);\n\t\t\tstate = new WebGLState(_gl, extensions, capabilities);\n\t\t\t_currentDrawBuffers[0] = _gl.BACK;\n\t\t\tinfo = new WebGLInfo(_gl);\n\t\t\tproperties = new WebGLProperties();\n\t\t\ttextures = new WebGLTextures(_gl, extensions, state, properties, capabilities, utils, info);\n\t\t\tcubemaps = new WebGLCubeMaps(_this);\n\t\t\tcubeuvmaps = new WebGLCubeUVMaps(_this);\n\t\t\tattributes = new WebGLAttributes(_gl, capabilities);\n\t\t\tbindingStates = new WebGLBindingStates(_gl, extensions, attributes, capabilities);\n\t\t\tgeometries = new WebGLGeometries(_gl, attributes, info, bindingStates);\n\t\t\tobjects = new WebGLObjects(_gl, geometries, attributes, info);\n\t\t\tmorphtargets = new WebGLMorphtargets(_gl, capabilities, textures);\n\t\t\tclipping = new WebGLClipping(properties);\n\t\t\tprogramCache = new WebGLPrograms(_this, cubemaps, cubeuvmaps, extensions, capabilities, bindingStates, clipping);\n\t\t\tmaterials = new WebGLMaterials(properties);\n\t\t\trenderLists = new WebGLRenderLists(properties);\n\t\t\trenderStates = new WebGLRenderStates(extensions, capabilities);\n\t\t\tbackground = new WebGLBackground(_this, cubemaps, state, objects, _premultipliedAlpha);\n\t\t\tshadowMap = new WebGLShadowMap(_this, objects, capabilities);\n\t\t\tbufferRenderer = new WebGLBufferRenderer(_gl, extensions, info, capabilities);\n\t\t\tindexedBufferRenderer = new WebGLIndexedBufferRenderer(_gl, extensions, info, capabilities);\n\t\t\tinfo.programs = programCache.programs;\n\t\t\t_this.capabilities = capabilities;\n\t\t\t_this.extensions = extensions;\n\t\t\t_this.properties = properties;\n\t\t\t_this.renderLists = renderLists;\n\t\t\t_this.shadowMap = shadowMap;\n\t\t\t_this.state = state;\n\t\t\t_this.info = info;\n\t\t}\n\n\t\tinitGLContext(); // xr\n\n\t\tconst xr = new WebXRManager(_this, _gl);\n\t\tthis.xr = xr; // API\n\n\t\tthis.getContext = function () {\n\t\t\treturn _gl;\n\t\t};\n\n\t\tthis.getContextAttributes = function () {\n\t\t\treturn _gl.getContextAttributes();\n\t\t};\n\n\t\tthis.forceContextLoss = function () {\n\t\t\tconst extension = extensions.get('WEBGL_lose_context');\n\t\t\tif (extension) extension.loseContext();\n\t\t};\n\n\t\tthis.forceContextRestore = function () {\n\t\t\tconst extension = extensions.get('WEBGL_lose_context');\n\t\t\tif (extension) extension.restoreContext();\n\t\t};\n\n\t\tthis.getPixelRatio = function () {\n\t\t\treturn _pixelRatio;\n\t\t};\n\n\t\tthis.setPixelRatio = function (value) {\n\t\t\tif (value === undefined) return;\n\t\t\t_pixelRatio = value;\n\t\t\tthis.setSize(_width, _height, false);\n\t\t};\n\n\t\tthis.getSize = function (target) {\n\t\t\treturn target.set(_width, _height);\n\t\t};\n\n\t\tthis.setSize = function (width, height, updateStyle) {\n\t\t\tif (xr.isPresenting) {\n\t\t\t\tconsole.warn('THREE.WebGLRenderer: Can\\'t change size while VR device is presenting.');\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t_width = width;\n\t\t\t_height = height;\n\t\t\t_canvas.width = Math.floor(width * _pixelRatio);\n\t\t\t_canvas.height = Math.floor(height * _pixelRatio);\n\n\t\t\tif (updateStyle !== false) {\n\t\t\t\t_canvas.style.width = width + 'px';\n\t\t\t\t_canvas.style.height = height + 'px';\n\t\t\t}\n\n\t\t\tthis.setViewport(0, 0, width, height);\n\t\t};\n\n\t\tthis.getDrawingBufferSize = function (target) {\n\t\t\treturn target.set(_width * _pixelRatio, _height * _pixelRatio).floor();\n\t\t};\n\n\t\tthis.setDrawingBufferSize = function (width, height, pixelRatio) {\n\t\t\t_width = width;\n\t\t\t_height = height;\n\t\t\t_pixelRatio = pixelRatio;\n\t\t\t_canvas.width = Math.floor(width * pixelRatio);\n\t\t\t_canvas.height = Math.floor(height * pixelRatio);\n\t\t\tthis.setViewport(0, 0, width, height);\n\t\t};\n\n\t\tthis.getCurrentViewport = function (target) {\n\t\t\treturn target.copy(_currentViewport);\n\t\t};\n\n\t\tthis.getViewport = function (target) {\n\t\t\treturn target.copy(_viewport);\n\t\t};\n\n\t\tthis.setViewport = function (x, y, width, height) {\n\t\t\tif (x.isVector4) {\n\t\t\t\t_viewport.set(x.x, x.y, x.z, x.w);\n\t\t\t} else {\n\t\t\t\t_viewport.set(x, y, width, height);\n\t\t\t}\n\n\t\t\tstate.viewport(_currentViewport.copy(_viewport).multiplyScalar(_pixelRatio).floor());\n\t\t};\n\n\t\tthis.getScissor = function (target) {\n\t\t\treturn target.copy(_scissor);\n\t\t};\n\n\t\tthis.setScissor = function (x, y, width, height) {\n\t\t\tif (x.isVector4) {\n\t\t\t\t_scissor.set(x.x, x.y, x.z, x.w);\n\t\t\t} else {\n\t\t\t\t_scissor.set(x, y, width, height);\n\t\t\t}\n\n\t\t\tstate.scissor(_currentScissor.copy(_scissor).multiplyScalar(_pixelRatio).floor());\n\t\t};\n\n\t\tthis.getScissorTest = function () {\n\t\t\treturn _scissorTest;\n\t\t};\n\n\t\tthis.setScissorTest = function (boolean) {\n\t\t\tstate.setScissorTest(_scissorTest = boolean);\n\t\t};\n\n\t\tthis.setOpaqueSort = function (method) {\n\t\t\t_opaqueSort = method;\n\t\t};\n\n\t\tthis.setTransparentSort = function (method) {\n\t\t\t_transparentSort = method;\n\t\t}; // Clearing\n\n\n\t\tthis.getClearColor = function (target) {\n\t\t\treturn target.copy(background.getClearColor());\n\t\t};\n\n\t\tthis.setClearColor = function () {\n\t\t\tbackground.setClearColor.apply(background, arguments);\n\t\t};\n\n\t\tthis.getClearAlpha = function () {\n\t\t\treturn background.getClearAlpha();\n\t\t};\n\n\t\tthis.setClearAlpha = function () {\n\t\t\tbackground.setClearAlpha.apply(background, arguments);\n\t\t};\n\n\t\tthis.clear = function (color, depth, stencil) {\n\t\t\tlet bits = 0;\n\t\t\tif (color === undefined || color) bits |= _gl.COLOR_BUFFER_BIT;\n\t\t\tif (depth === undefined || depth) bits |= _gl.DEPTH_BUFFER_BIT;\n\t\t\tif (stencil === undefined || stencil) bits |= _gl.STENCIL_BUFFER_BIT;\n\n\t\t\t_gl.clear(bits);\n\t\t};\n\n\t\tthis.clearColor = function () {\n\t\t\tthis.clear(true, false, false);\n\t\t};\n\n\t\tthis.clearDepth = function () {\n\t\t\tthis.clear(false, true, false);\n\t\t};\n\n\t\tthis.clearStencil = function () {\n\t\t\tthis.clear(false, false, true);\n\t\t}; //\n\n\n\t\tthis.dispose = function () {\n\t\t\t_canvas.removeEventListener('webglcontextlost', onContextLost, false);\n\n\t\t\t_canvas.removeEventListener('webglcontextrestored', onContextRestore, false);\n\n\t\t\trenderLists.dispose();\n\t\t\trenderStates.dispose();\n\t\t\tproperties.dispose();\n\t\t\tcubemaps.dispose();\n\t\t\tcubeuvmaps.dispose();\n\t\t\tobjects.dispose();\n\t\t\tbindingStates.dispose();\n\t\t\txr.dispose();\n\t\t\txr.removeEventListener('sessionstart', onXRSessionStart);\n\t\t\txr.removeEventListener('sessionend', onXRSessionEnd);\n\n\t\t\tif (_transmissionRenderTarget) {\n\t\t\t\t_transmissionRenderTarget.dispose();\n\n\t\t\t\t_transmissionRenderTarget = null;\n\t\t\t}\n\n\t\t\tanimation.stop();\n\t\t}; // Events\n\n\n\t\tfunction onContextLost(event) {\n\t\t\tevent.preventDefault();\n\t\t\tconsole.log('THREE.WebGLRenderer: Context Lost.');\n\t\t\t_isContextLost = true;\n\t\t}\n\n\t\tfunction onContextRestore() {\n\t\t\tconsole.log('THREE.WebGLRenderer: Context Restored.');\n\t\t\t_isContextLost = false;\n\t\t\tconst infoAutoReset = info.autoReset;\n\t\t\tconst shadowMapEnabled = shadowMap.enabled;\n\t\t\tconst shadowMapAutoUpdate = shadowMap.autoUpdate;\n\t\t\tconst shadowMapNeedsUpdate = shadowMap.needsUpdate;\n\t\t\tconst shadowMapType = shadowMap.type;\n\t\t\tinitGLContext();\n\t\t\tinfo.autoReset = infoAutoReset;\n\t\t\tshadowMap.enabled = shadowMapEnabled;\n\t\t\tshadowMap.autoUpdate = shadowMapAutoUpdate;\n\t\t\tshadowMap.needsUpdate = shadowMapNeedsUpdate;\n\t\t\tshadowMap.type = shadowMapType;\n\t\t}\n\n\t\tfunction onMaterialDispose(event) {\n\t\t\tconst material = event.target;\n\t\t\tmaterial.removeEventListener('dispose', onMaterialDispose);\n\t\t\tdeallocateMaterial(material);\n\t\t} // Buffer deallocation\n\n\n\t\tfunction deallocateMaterial(material) {\n\t\t\treleaseMaterialProgramReferences(material);\n\t\t\tproperties.remove(material);\n\t\t}\n\n\t\tfunction releaseMaterialProgramReferences(material) {\n\t\t\tconst programs = properties.get(material).programs;\n\n\t\t\tif (programs !== undefined) {\n\t\t\t\tprograms.forEach(function (program) {\n\t\t\t\t\tprogramCache.releaseProgram(program);\n\t\t\t\t});\n\t\t\t}\n\t\t} // Buffer rendering\n\n\n\t\tthis.renderBufferDirect = function (camera, scene, geometry, material, object, group) {\n\t\t\tif (scene === null) scene = _emptyScene; // renderBufferDirect second parameter used to be fog (could be null)\n\n\t\t\tconst frontFaceCW = object.isMesh && object.matrixWorld.determinant() < 0;\n\t\t\tconst program = setProgram(camera, scene, geometry, material, object);\n\t\t\tstate.setMaterial(material, frontFaceCW); //\n\n\t\t\tlet index = geometry.index;\n\t\t\tconst position = geometry.attributes.position; //\n\n\t\t\tif (index === null) {\n\t\t\t\tif (position === undefined || position.count === 0) return;\n\t\t\t} else if (index.count === 0) {\n\t\t\t\treturn;\n\t\t\t} //\n\n\n\t\t\tlet rangeFactor = 1;\n\n\t\t\tif (material.wireframe === true) {\n\t\t\t\tindex = geometries.getWireframeAttribute(geometry);\n\t\t\t\trangeFactor = 2;\n\t\t\t}\n\n\t\t\tbindingStates.setup(object, material, program, geometry, index);\n\t\t\tlet attribute;\n\t\t\tlet renderer = bufferRenderer;\n\n\t\t\tif (index !== null) {\n\t\t\t\tattribute = attributes.get(index);\n\t\t\t\trenderer = indexedBufferRenderer;\n\t\t\t\trenderer.setIndex(attribute);\n\t\t\t} //\n\n\n\t\t\tconst dataCount = index !== null ? index.count : position.count;\n\t\t\tconst rangeStart = geometry.drawRange.start * rangeFactor;\n\t\t\tconst rangeCount = geometry.drawRange.count * rangeFactor;\n\t\t\tconst groupStart = group !== null ? group.start * rangeFactor : 0;\n\t\t\tconst groupCount = group !== null ? group.count * rangeFactor : Infinity;\n\t\t\tconst drawStart = Math.max(rangeStart, groupStart);\n\t\t\tconst drawEnd = Math.min(dataCount, rangeStart + rangeCount, groupStart + groupCount) - 1;\n\t\t\tconst drawCount = Math.max(0, drawEnd - drawStart + 1);\n\t\t\tif (drawCount === 0) return; //\n\n\t\t\tif (object.isMesh) {\n\t\t\t\tif (material.wireframe === true) {\n\t\t\t\t\tstate.setLineWidth(material.wireframeLinewidth * getTargetPixelRatio());\n\t\t\t\t\trenderer.setMode(_gl.LINES);\n\t\t\t\t} else {\n\t\t\t\t\trenderer.setMode(_gl.TRIANGLES);\n\t\t\t\t}\n\t\t\t} else if (object.isLine) {\n\t\t\t\tlet lineWidth = material.linewidth;\n\t\t\t\tif (lineWidth === undefined) lineWidth = 1; // Not using Line*Material\n\n\t\t\t\tstate.setLineWidth(lineWidth * getTargetPixelRatio());\n\n\t\t\t\tif (object.isLineSegments) {\n\t\t\t\t\trenderer.setMode(_gl.LINES);\n\t\t\t\t} else if (object.isLineLoop) {\n\t\t\t\t\trenderer.setMode(_gl.LINE_LOOP);\n\t\t\t\t} else {\n\t\t\t\t\trenderer.setMode(_gl.LINE_STRIP);\n\t\t\t\t}\n\t\t\t} else if (object.isPoints) {\n\t\t\t\trenderer.setMode(_gl.POINTS);\n\t\t\t} else if (object.isSprite) {\n\t\t\t\trenderer.setMode(_gl.TRIANGLES);\n\t\t\t}\n\n\t\t\tif (object.isInstancedMesh) {\n\t\t\t\trenderer.renderInstances(drawStart, drawCount, object.count);\n\t\t\t} else if (geometry.isInstancedBufferGeometry) {\n\t\t\t\tconst instanceCount = Math.min(geometry.instanceCount, geometry._maxInstanceCount);\n\t\t\t\trenderer.renderInstances(drawStart, drawCount, instanceCount);\n\t\t\t} else {\n\t\t\t\trenderer.render(drawStart, drawCount);\n\t\t\t}\n\t\t}; // Compile\n\n\n\t\tthis.compile = function (scene, camera) {\n\t\t\tcurrentRenderState = renderStates.get(scene);\n\t\t\tcurrentRenderState.init();\n\t\t\trenderStateStack.push(currentRenderState);\n\t\t\tscene.traverseVisible(function (object) {\n\t\t\t\tif (object.isLight && object.layers.test(camera.layers)) {\n\t\t\t\t\tcurrentRenderState.pushLight(object);\n\n\t\t\t\t\tif (object.castShadow) {\n\t\t\t\t\t\tcurrentRenderState.pushShadow(object);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t\tcurrentRenderState.setupLights(_this.physicallyCorrectLights);\n\t\t\tscene.traverse(function (object) {\n\t\t\t\tconst material = object.material;\n\n\t\t\t\tif (material) {\n\t\t\t\t\tif (Array.isArray(material)) {\n\t\t\t\t\t\tfor (let i = 0; i < material.length; i++) {\n\t\t\t\t\t\t\tconst material2 = material[i];\n\t\t\t\t\t\t\tgetProgram(material2, scene, object);\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tgetProgram(material, scene, object);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t\trenderStateStack.pop();\n\t\t\tcurrentRenderState = null;\n\t\t}; // Animation Loop\n\n\n\t\tlet onAnimationFrameCallback = null;\n\n\t\tfunction onAnimationFrame(time) {\n\t\t\tif (onAnimationFrameCallback) onAnimationFrameCallback(time);\n\t\t}\n\n\t\tfunction onXRSessionStart() {\n\t\t\tanimation.stop();\n\t\t}\n\n\t\tfunction onXRSessionEnd() {\n\t\t\tanimation.start();\n\t\t}\n\n\t\tconst animation = new WebGLAnimation();\n\t\tanimation.setAnimationLoop(onAnimationFrame);\n\t\tif (typeof window !== 'undefined') animation.setContext(window);\n\n\t\tthis.setAnimationLoop = function (callback) {\n\t\t\tonAnimationFrameCallback = callback;\n\t\t\txr.setAnimationLoop(callback);\n\t\t\tcallback === null ? animation.stop() : animation.start();\n\t\t};\n\n\t\txr.addEventListener('sessionstart', onXRSessionStart);\n\t\txr.addEventListener('sessionend', onXRSessionEnd); // Rendering\n\n\t\tthis.render = function (scene, camera) {\n\t\t\tif (camera !== undefined && camera.isCamera !== true) {\n\t\t\t\tconsole.error('THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.');\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (_isContextLost === true) return; // update scene graph\n\n\t\t\tif (scene.autoUpdate === true) scene.updateMatrixWorld(); // update camera matrices and frustum\n\n\t\t\tif (camera.parent === null) camera.updateMatrixWorld();\n\n\t\t\tif (xr.enabled === true && xr.isPresenting === true) {\n\t\t\t\tif (xr.cameraAutoUpdate === true) xr.updateCamera(camera);\n\t\t\t\tcamera = xr.getCamera(); // use XR camera for rendering\n\t\t\t} //\n\n\n\t\t\tif (scene.isScene === true) scene.onBeforeRender(_this, scene, camera, _currentRenderTarget);\n\t\t\tcurrentRenderState = renderStates.get(scene, renderStateStack.length);\n\t\t\tcurrentRenderState.init();\n\t\t\trenderStateStack.push(currentRenderState);\n\n\t\t\t_projScreenMatrix.multiplyMatrices(camera.projectionMatrix, camera.matrixWorldInverse);\n\n\t\t\t_frustum.setFromProjectionMatrix(_projScreenMatrix);\n\n\t\t\t_localClippingEnabled = this.localClippingEnabled;\n\t\t\t_clippingEnabled = clipping.init(this.clippingPlanes, _localClippingEnabled, camera);\n\t\t\tcurrentRenderList = renderLists.get(scene, renderListStack.length);\n\t\t\tcurrentRenderList.init();\n\t\t\trenderListStack.push(currentRenderList);\n\t\t\tprojectObject(scene, camera, 0, _this.sortObjects);\n\t\t\tcurrentRenderList.finish();\n\n\t\t\tif (_this.sortObjects === true) {\n\t\t\t\tcurrentRenderList.sort(_opaqueSort, _transparentSort);\n\t\t\t} //\n\n\n\t\t\tif (_clippingEnabled === true) clipping.beginShadows();\n\t\t\tconst shadowsArray = currentRenderState.state.shadowsArray;\n\t\t\tshadowMap.render(shadowsArray, scene, camera);\n\t\t\tif (_clippingEnabled === true) clipping.endShadows(); //\n\n\t\t\tif (this.info.autoReset === true) this.info.reset(); //\n\n\t\t\tbackground.render(currentRenderList, scene); // render scene\n\n\t\t\tcurrentRenderState.setupLights(_this.physicallyCorrectLights);\n\n\t\t\tif (camera.isArrayCamera) {\n\t\t\t\tconst cameras = camera.cameras;\n\n\t\t\t\tfor (let i = 0, l = cameras.length; i < l; i++) {\n\t\t\t\t\tconst camera2 = cameras[i];\n\t\t\t\t\trenderScene(currentRenderList, scene, camera2, camera2.viewport);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\trenderScene(currentRenderList, scene, camera);\n\t\t\t} //\n\n\n\t\t\tif (_currentRenderTarget !== null) {\n\t\t\t\t// resolve multisample renderbuffers to a single-sample texture if necessary\n\t\t\t\ttextures.updateMultisampleRenderTarget(_currentRenderTarget); // Generate mipmap if we're using any kind of mipmap filtering\n\n\t\t\t\ttextures.updateRenderTargetMipmap(_currentRenderTarget);\n\t\t\t} //\n\n\n\t\t\tif (scene.isScene === true) scene.onAfterRender(_this, scene, camera); // Ensure depth buffer writing is enabled so it can be cleared on next render\n\n\t\t\tstate.buffers.depth.setTest(true);\n\t\t\tstate.buffers.depth.setMask(true);\n\t\t\tstate.buffers.color.setMask(true);\n\t\t\tstate.setPolygonOffset(false); // _gl.finish();\n\n\t\t\tbindingStates.resetDefaultState();\n\t\t\t_currentMaterialId = -1;\n\t\t\t_currentCamera = null;\n\t\t\trenderStateStack.pop();\n\n\t\t\tif (renderStateStack.length > 0) {\n\t\t\t\tcurrentRenderState = renderStateStack[renderStateStack.length - 1];\n\t\t\t} else {\n\t\t\t\tcurrentRenderState = null;\n\t\t\t}\n\n\t\t\trenderListStack.pop();\n\n\t\t\tif (renderListStack.length > 0) {\n\t\t\t\tcurrentRenderList = renderListStack[renderListStack.length - 1];\n\t\t\t} else {\n\t\t\t\tcurrentRenderList = null;\n\t\t\t}\n\t\t};\n\n\t\tfunction projectObject(object, camera, groupOrder, sortObjects) {\n\t\t\tif (object.visible === false) return;\n\t\t\tconst visible = object.layers.test(camera.layers);\n\n\t\t\tif (visible) {\n\t\t\t\tif (object.isGroup) {\n\t\t\t\t\tgroupOrder = object.renderOrder;\n\t\t\t\t} else if (object.isLOD) {\n\t\t\t\t\tif (object.autoUpdate === true) object.update(camera);\n\t\t\t\t} else if (object.isLight) {\n\t\t\t\t\tcurrentRenderState.pushLight(object);\n\n\t\t\t\t\tif (object.castShadow) {\n\t\t\t\t\t\tcurrentRenderState.pushShadow(object);\n\t\t\t\t\t}\n\t\t\t\t} else if (object.isSprite) {\n\t\t\t\t\tif (!object.frustumCulled || _frustum.intersectsSprite(object)) {\n\t\t\t\t\t\tif (sortObjects) {\n\t\t\t\t\t\t\t_vector3.setFromMatrixPosition(object.matrixWorld).applyMatrix4(_projScreenMatrix);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tconst geometry = objects.update(object);\n\t\t\t\t\t\tconst material = object.material;\n\n\t\t\t\t\t\tif (material.visible) {\n\t\t\t\t\t\t\tcurrentRenderList.push(object, geometry, material, groupOrder, _vector3.z, null);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else if (object.isMesh || object.isLine || object.isPoints) {\n\t\t\t\t\tif (object.isSkinnedMesh) {\n\t\t\t\t\t\t// update skeleton only once in a frame\n\t\t\t\t\t\tif (object.skeleton.frame !== info.render.frame) {\n\t\t\t\t\t\t\tobject.skeleton.update();\n\t\t\t\t\t\t\tobject.skeleton.frame = info.render.frame;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif (!object.frustumCulled || _frustum.intersectsObject(object)) {\n\t\t\t\t\t\tif (sortObjects) {\n\t\t\t\t\t\t\t_vector3.setFromMatrixPosition(object.matrixWorld).applyMatrix4(_projScreenMatrix);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tconst geometry = objects.update(object);\n\t\t\t\t\t\tconst material = object.material;\n\n\t\t\t\t\t\tif (Array.isArray(material)) {\n\t\t\t\t\t\t\tconst groups = geometry.groups;\n\n\t\t\t\t\t\t\tfor (let i = 0, l = groups.length; i < l; i++) {\n\t\t\t\t\t\t\t\tconst group = groups[i];\n\t\t\t\t\t\t\t\tconst groupMaterial = material[group.materialIndex];\n\n\t\t\t\t\t\t\t\tif (groupMaterial && groupMaterial.visible) {\n\t\t\t\t\t\t\t\t\tcurrentRenderList.push(object, geometry, groupMaterial, groupOrder, _vector3.z, group);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else if (material.visible) {\n\t\t\t\t\t\t\tcurrentRenderList.push(object, geometry, material, groupOrder, _vector3.z, null);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst children = object.children;\n\n\t\t\tfor (let i = 0, l = children.length; i < l; i++) {\n\t\t\t\tprojectObject(children[i], camera, groupOrder, sortObjects);\n\t\t\t}\n\t\t}\n\n\t\tfunction renderScene(currentRenderList, scene, camera, viewport) {\n\t\t\tconst opaqueObjects = currentRenderList.opaque;\n\t\t\tconst transmissiveObjects = currentRenderList.transmissive;\n\t\t\tconst transparentObjects = currentRenderList.transparent;\n\t\t\tcurrentRenderState.setupLightsView(camera);\n\t\t\tif (transmissiveObjects.length > 0) renderTransmissionPass(opaqueObjects, scene, camera);\n\t\t\tif (viewport) state.viewport(_currentViewport.copy(viewport));\n\t\t\tif (opaqueObjects.length > 0) renderObjects(opaqueObjects, scene, camera);\n\t\t\tif (transmissiveObjects.length > 0) renderObjects(transmissiveObjects, scene, camera);\n\t\t\tif (transparentObjects.length > 0) renderObjects(transparentObjects, scene, camera);\n\t\t}\n\n\t\tfunction renderTransmissionPass(opaqueObjects, scene, camera) {\n\t\t\tif (_transmissionRenderTarget === null) {\n\t\t\t\tconst needsAntialias = _antialias === true && capabilities.isWebGL2 === true;\n\t\t\t\tconst renderTargetType = needsAntialias ? WebGLMultisampleRenderTarget : WebGLRenderTarget;\n\t\t\t\t_transmissionRenderTarget = new renderTargetType(1024, 1024, {\n\t\t\t\t\tgenerateMipmaps: true,\n\t\t\t\t\ttype: utils.convert(HalfFloatType) !== null ? HalfFloatType : UnsignedByteType,\n\t\t\t\t\tminFilter: LinearMipmapLinearFilter,\n\t\t\t\t\tmagFilter: NearestFilter,\n\t\t\t\t\twrapS: ClampToEdgeWrapping,\n\t\t\t\t\twrapT: ClampToEdgeWrapping\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tconst currentRenderTarget = _this.getRenderTarget();\n\n\t\t\t_this.setRenderTarget(_transmissionRenderTarget);\n\n\t\t\t_this.clear(); // Turn off the features which can affect the frag color for opaque objects pass.\n\t\t\t// Otherwise they are applied twice in opaque objects pass and transmission objects pass.\n\n\n\t\t\tconst currentToneMapping = _this.toneMapping;\n\t\t\t_this.toneMapping = NoToneMapping;\n\t\t\trenderObjects(opaqueObjects, scene, camera);\n\t\t\t_this.toneMapping = currentToneMapping;\n\t\t\ttextures.updateMultisampleRenderTarget(_transmissionRenderTarget);\n\t\t\ttextures.updateRenderTargetMipmap(_transmissionRenderTarget);\n\n\t\t\t_this.setRenderTarget(currentRenderTarget);\n\t\t}\n\n\t\tfunction renderObjects(renderList, scene, camera) {\n\t\t\tconst overrideMaterial = scene.isScene === true ? scene.overrideMaterial : null;\n\n\t\t\tfor (let i = 0, l = renderList.length; i < l; i++) {\n\t\t\t\tconst renderItem = renderList[i];\n\t\t\t\tconst object = renderItem.object;\n\t\t\t\tconst geometry = renderItem.geometry;\n\t\t\t\tconst material = overrideMaterial === null ? renderItem.material : overrideMaterial;\n\t\t\t\tconst group = renderItem.group;\n\n\t\t\t\tif (object.layers.test(camera.layers)) {\n\t\t\t\t\trenderObject(object, scene, camera, geometry, material, group);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tfunction renderObject(object, scene, camera, geometry, material, group) {\n\t\t\tobject.onBeforeRender(_this, scene, camera, geometry, material, group);\n\t\t\tobject.modelViewMatrix.multiplyMatrices(camera.matrixWorldInverse, object.matrixWorld);\n\t\t\tobject.normalMatrix.getNormalMatrix(object.modelViewMatrix);\n\t\t\tmaterial.onBeforeRender(_this, scene, camera, geometry, object, group);\n\n\t\t\tif (material.transparent === true && material.side === DoubleSide) {\n\t\t\t\tmaterial.side = BackSide;\n\t\t\t\tmaterial.needsUpdate = true;\n\n\t\t\t\t_this.renderBufferDirect(camera, scene, geometry, material, object, group);\n\n\t\t\t\tmaterial.side = FrontSide;\n\t\t\t\tmaterial.needsUpdate = true;\n\n\t\t\t\t_this.renderBufferDirect(camera, scene, geometry, material, object, group);\n\n\t\t\t\tmaterial.side = DoubleSide;\n\t\t\t} else {\n\t\t\t\t_this.renderBufferDirect(camera, scene, geometry, material, object, group);\n\t\t\t}\n\n\t\t\tobject.onAfterRender(_this, scene, camera, geometry, material, group);\n\t\t}\n\n\t\tfunction getProgram(material, scene, object) {\n\t\t\tif (scene.isScene !== true) scene = _emptyScene; // scene could be a Mesh, Line, Points, ...\n\n\t\t\tconst materialProperties = properties.get(material);\n\t\t\tconst lights = currentRenderState.state.lights;\n\t\t\tconst shadowsArray = currentRenderState.state.shadowsArray;\n\t\t\tconst lightsStateVersion = lights.state.version;\n\t\t\tconst parameters = programCache.getParameters(material, lights.state, shadowsArray, scene, object);\n\t\t\tconst programCacheKey = programCache.getProgramCacheKey(parameters);\n\t\t\tlet programs = materialProperties.programs; // always update environment and fog - changing these trigger an getProgram call, but it's possible that the program doesn't change\n\n\t\t\tmaterialProperties.environment = material.isMeshStandardMaterial ? scene.environment : null;\n\t\t\tmaterialProperties.fog = scene.fog;\n\t\t\tmaterialProperties.envMap = (material.isMeshStandardMaterial ? cubeuvmaps : cubemaps).get(material.envMap || materialProperties.environment);\n\n\t\t\tif (programs === undefined) {\n\t\t\t\t// new material\n\t\t\t\tmaterial.addEventListener('dispose', onMaterialDispose);\n\t\t\t\tprograms = new Map();\n\t\t\t\tmaterialProperties.programs = programs;\n\t\t\t}\n\n\t\t\tlet program = programs.get(programCacheKey);\n\n\t\t\tif (program !== undefined) {\n\t\t\t\t// early out if program and light state is identical\n\t\t\t\tif (materialProperties.currentProgram === program && materialProperties.lightsStateVersion === lightsStateVersion) {\n\t\t\t\t\tupdateCommonMaterialProperties(material, parameters);\n\t\t\t\t\treturn program;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tparameters.uniforms = programCache.getUniforms(material);\n\t\t\t\tmaterial.onBuild(object, parameters, _this);\n\t\t\t\tmaterial.onBeforeCompile(parameters, _this);\n\t\t\t\tprogram = programCache.acquireProgram(parameters, programCacheKey);\n\t\t\t\tprograms.set(programCacheKey, program);\n\t\t\t\tmaterialProperties.uniforms = parameters.uniforms;\n\t\t\t}\n\n\t\t\tconst uniforms = materialProperties.uniforms;\n\n\t\t\tif (!material.isShaderMaterial && !material.isRawShaderMaterial || material.clipping === true) {\n\t\t\t\tuniforms.clippingPlanes = clipping.uniform;\n\t\t\t}\n\n\t\t\tupdateCommonMaterialProperties(material, parameters); // store the light setup it was created for\n\n\t\t\tmaterialProperties.needsLights = materialNeedsLights(material);\n\t\t\tmaterialProperties.lightsStateVersion = lightsStateVersion;\n\n\t\t\tif (materialProperties.needsLights) {\n\t\t\t\t// wire up the material to this renderer's lighting state\n\t\t\t\tuniforms.ambientLightColor.value = lights.state.ambient;\n\t\t\t\tuniforms.lightProbe.value = lights.state.probe;\n\t\t\t\tuniforms.directionalLights.value = lights.state.directional;\n\t\t\t\tuniforms.directionalLightShadows.value = lights.state.directionalShadow;\n\t\t\t\tuniforms.spotLights.value = lights.state.spot;\n\t\t\t\tuniforms.spotLightShadows.value = lights.state.spotShadow;\n\t\t\t\tuniforms.rectAreaLights.value = lights.state.rectArea;\n\t\t\t\tuniforms.ltc_1.value = lights.state.rectAreaLTC1;\n\t\t\t\tuniforms.ltc_2.value = lights.state.rectAreaLTC2;\n\t\t\t\tuniforms.pointLights.value = lights.state.point;\n\t\t\t\tuniforms.pointLightShadows.value = lights.state.pointShadow;\n\t\t\t\tuniforms.hemisphereLights.value = lights.state.hemi;\n\t\t\t\tuniforms.directionalShadowMap.value = lights.state.directionalShadowMap;\n\t\t\t\tuniforms.directionalShadowMatrix.value = lights.state.directionalShadowMatrix;\n\t\t\t\tuniforms.spotShadowMap.value = lights.state.spotShadowMap;\n\t\t\t\tuniforms.spotShadowMatrix.value = lights.state.spotShadowMatrix;\n\t\t\t\tuniforms.pointShadowMap.value = lights.state.pointShadowMap;\n\t\t\t\tuniforms.pointShadowMatrix.value = lights.state.pointShadowMatrix; // TODO (abelnation): add area lights shadow info to uniforms\n\t\t\t}\n\n\t\t\tconst progUniforms = program.getUniforms();\n\t\t\tconst uniformsList = WebGLUniforms.seqWithValue(progUniforms.seq, uniforms);\n\t\t\tmaterialProperties.currentProgram = program;\n\t\t\tmaterialProperties.uniformsList = uniformsList;\n\t\t\treturn program;\n\t\t}\n\n\t\tfunction updateCommonMaterialProperties(material, parameters) {\n\t\t\tconst materialProperties = properties.get(material);\n\t\t\tmaterialProperties.outputEncoding = parameters.outputEncoding;\n\t\t\tmaterialProperties.instancing = parameters.instancing;\n\t\t\tmaterialProperties.skinning = parameters.skinning;\n\t\t\tmaterialProperties.morphTargets = parameters.morphTargets;\n\t\t\tmaterialProperties.morphNormals = parameters.morphNormals;\n\t\t\tmaterialProperties.morphTargetsCount = parameters.morphTargetsCount;\n\t\t\tmaterialProperties.numClippingPlanes = parameters.numClippingPlanes;\n\t\t\tmaterialProperties.numIntersection = parameters.numClipIntersection;\n\t\t\tmaterialProperties.vertexAlphas = parameters.vertexAlphas;\n\t\t\tmaterialProperties.vertexTangents = parameters.vertexTangents;\n\t\t}\n\n\t\tfunction setProgram(camera, scene, geometry, material, object) {\n\t\t\tif (scene.isScene !== true) scene = _emptyScene; // scene could be a Mesh, Line, Points, ...\n\n\t\t\ttextures.resetTextureUnits();\n\t\t\tconst fog = scene.fog;\n\t\t\tconst environment = material.isMeshStandardMaterial ? scene.environment : null;\n\t\t\tconst encoding = _currentRenderTarget === null ? _this.outputEncoding : _currentRenderTarget.texture.encoding;\n\t\t\tconst envMap = (material.isMeshStandardMaterial ? cubeuvmaps : cubemaps).get(material.envMap || environment);\n\t\t\tconst vertexAlphas = material.vertexColors === true && !!geometry.attributes.color && geometry.attributes.color.itemSize === 4;\n\t\t\tconst vertexTangents = !!material.normalMap && !!geometry.attributes.tangent;\n\t\t\tconst morphTargets = !!geometry.morphAttributes.position;\n\t\t\tconst morphNormals = !!geometry.morphAttributes.normal;\n\t\t\tconst morphTargetsCount = !!geometry.morphAttributes.position ? geometry.morphAttributes.position.length : 0;\n\t\t\tconst materialProperties = properties.get(material);\n\t\t\tconst lights = currentRenderState.state.lights;\n\n\t\t\tif (_clippingEnabled === true) {\n\t\t\t\tif (_localClippingEnabled === true || camera !== _currentCamera) {\n\t\t\t\t\tconst useCache = camera === _currentCamera && material.id === _currentMaterialId; // we might want to call this function with some ClippingGroup\n\t\t\t\t\t// object instead of the material, once it becomes feasible\n\t\t\t\t\t// (#8465, #8379)\n\n\t\t\t\t\tclipping.setState(material, camera, useCache);\n\t\t\t\t}\n\t\t\t} //\n\n\n\t\t\tlet needsProgramChange = false;\n\n\t\t\tif (material.version === materialProperties.__version) {\n\t\t\t\tif (materialProperties.needsLights && materialProperties.lightsStateVersion !== lights.state.version) {\n\t\t\t\t\tneedsProgramChange = true;\n\t\t\t\t} else if (materialProperties.outputEncoding !== encoding) {\n\t\t\t\t\tneedsProgramChange = true;\n\t\t\t\t} else if (object.isInstancedMesh && materialProperties.instancing === false) {\n\t\t\t\t\tneedsProgramChange = true;\n\t\t\t\t} else if (!object.isInstancedMesh && materialProperties.instancing === true) {\n\t\t\t\t\tneedsProgramChange = true;\n\t\t\t\t} else if (object.isSkinnedMesh && materialProperties.skinning === false) {\n\t\t\t\t\tneedsProgramChange = true;\n\t\t\t\t} else if (!object.isSkinnedMesh && materialProperties.skinning === true) {\n\t\t\t\t\tneedsProgramChange = true;\n\t\t\t\t} else if (materialProperties.envMap !== envMap) {\n\t\t\t\t\tneedsProgramChange = true;\n\t\t\t\t} else if (material.fog && materialProperties.fog !== fog) {\n\t\t\t\t\tneedsProgramChange = true;\n\t\t\t\t} else if (materialProperties.numClippingPlanes !== undefined && (materialProperties.numClippingPlanes !== clipping.numPlanes || materialProperties.numIntersection !== clipping.numIntersection)) {\n\t\t\t\t\tneedsProgramChange = true;\n\t\t\t\t} else if (materialProperties.vertexAlphas !== vertexAlphas) {\n\t\t\t\t\tneedsProgramChange = true;\n\t\t\t\t} else if (materialProperties.vertexTangents !== vertexTangents) {\n\t\t\t\t\tneedsProgramChange = true;\n\t\t\t\t} else if (materialProperties.morphTargets !== morphTargets) {\n\t\t\t\t\tneedsProgramChange = true;\n\t\t\t\t} else if (materialProperties.morphNormals !== morphNormals) {\n\t\t\t\t\tneedsProgramChange = true;\n\t\t\t\t} else if (capabilities.isWebGL2 === true && materialProperties.morphTargetsCount !== morphTargetsCount) {\n\t\t\t\t\tneedsProgramChange = true;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tneedsProgramChange = true;\n\t\t\t\tmaterialProperties.__version = material.version;\n\t\t\t} //\n\n\n\t\t\tlet program = materialProperties.currentProgram;\n\n\t\t\tif (needsProgramChange === true) {\n\t\t\t\tprogram = getProgram(material, scene, object);\n\t\t\t}\n\n\t\t\tlet refreshProgram = false;\n\t\t\tlet refreshMaterial = false;\n\t\t\tlet refreshLights = false;\n\t\t\tconst p_uniforms = program.getUniforms(),\n\t\t\t\t\t\tm_uniforms = materialProperties.uniforms;\n\n\t\t\tif (state.useProgram(program.program)) {\n\t\t\t\trefreshProgram = true;\n\t\t\t\trefreshMaterial = true;\n\t\t\t\trefreshLights = true;\n\t\t\t}\n\n\t\t\tif (material.id !== _currentMaterialId) {\n\t\t\t\t_currentMaterialId = material.id;\n\t\t\t\trefreshMaterial = true;\n\t\t\t}\n\n\t\t\tif (refreshProgram || _currentCamera !== camera) {\n\t\t\t\tp_uniforms.setValue(_gl, 'projectionMatrix', camera.projectionMatrix);\n\n\t\t\t\tif (capabilities.logarithmicDepthBuffer) {\n\t\t\t\t\tp_uniforms.setValue(_gl, 'logDepthBufFC', 2.0 / (Math.log(camera.far + 1.0) / Math.LN2));\n\t\t\t\t}\n\n\t\t\t\tif (_currentCamera !== camera) {\n\t\t\t\t\t_currentCamera = camera; // lighting uniforms depend on the camera so enforce an update\n\t\t\t\t\t// now, in case this material supports lights - or later, when\n\t\t\t\t\t// the next material that does gets activated:\n\n\t\t\t\t\trefreshMaterial = true; // set to true on material change\n\n\t\t\t\t\trefreshLights = true; // remains set until update done\n\t\t\t\t} // load material specific uniforms\n\t\t\t\t// (shader material also gets them for the sake of genericity)\n\n\n\t\t\t\tif (material.isShaderMaterial || material.isMeshPhongMaterial || material.isMeshToonMaterial || material.isMeshStandardMaterial || material.envMap) {\n\t\t\t\t\tconst uCamPos = p_uniforms.map.cameraPosition;\n\n\t\t\t\t\tif (uCamPos !== undefined) {\n\t\t\t\t\t\tuCamPos.setValue(_gl, _vector3.setFromMatrixPosition(camera.matrixWorld));\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (material.isMeshPhongMaterial || material.isMeshToonMaterial || material.isMeshLambertMaterial || material.isMeshBasicMaterial || material.isMeshStandardMaterial || material.isShaderMaterial) {\n\t\t\t\t\tp_uniforms.setValue(_gl, 'isOrthographic', camera.isOrthographicCamera === true);\n\t\t\t\t}\n\n\t\t\t\tif (material.isMeshPhongMaterial || material.isMeshToonMaterial || material.isMeshLambertMaterial || material.isMeshBasicMaterial || material.isMeshStandardMaterial || material.isShaderMaterial || material.isShadowMaterial || object.isSkinnedMesh) {\n\t\t\t\t\tp_uniforms.setValue(_gl, 'viewMatrix', camera.matrixWorldInverse);\n\t\t\t\t}\n\t\t\t} // skinning and morph target uniforms must be set even if material didn't change\n\t\t\t// auto-setting of texture unit for bone and morph texture must go before other textures\n\t\t\t// otherwise textures used for skinning and morphing can take over texture units reserved for other material textures\n\n\n\t\t\tif (object.isSkinnedMesh) {\n\t\t\t\tp_uniforms.setOptional(_gl, object, 'bindMatrix');\n\t\t\t\tp_uniforms.setOptional(_gl, object, 'bindMatrixInverse');\n\t\t\t\tconst skeleton = object.skeleton;\n\n\t\t\t\tif (skeleton) {\n\t\t\t\t\tif (capabilities.floatVertexTextures) {\n\t\t\t\t\t\tif (skeleton.boneTexture === null) skeleton.computeBoneTexture();\n\t\t\t\t\t\tp_uniforms.setValue(_gl, 'boneTexture', skeleton.boneTexture, textures);\n\t\t\t\t\t\tp_uniforms.setValue(_gl, 'boneTextureSize', skeleton.boneTextureSize);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tp_uniforms.setOptional(_gl, skeleton, 'boneMatrices');\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (!!geometry && (geometry.morphAttributes.position !== undefined || geometry.morphAttributes.normal !== undefined)) {\n\t\t\t\tmorphtargets.update(object, geometry, material, program);\n\t\t\t}\n\n\t\t\tif (refreshMaterial || materialProperties.receiveShadow !== object.receiveShadow) {\n\t\t\t\tmaterialProperties.receiveShadow = object.receiveShadow;\n\t\t\t\tp_uniforms.setValue(_gl, 'receiveShadow', object.receiveShadow);\n\t\t\t}\n\n\t\t\tif (refreshMaterial) {\n\t\t\t\tp_uniforms.setValue(_gl, 'toneMappingExposure', _this.toneMappingExposure);\n\n\t\t\t\tif (materialProperties.needsLights) {\n\t\t\t\t\t// the current material requires lighting info\n\t\t\t\t\t// note: all lighting uniforms are always set correctly\n\t\t\t\t\t// they simply reference the renderer's state for their\n\t\t\t\t\t// values\n\t\t\t\t\t//\n\t\t\t\t\t// use the current material's .needsUpdate flags to set\n\t\t\t\t\t// the GL state when required\n\t\t\t\t\tmarkUniformsLightsNeedsUpdate(m_uniforms, refreshLights);\n\t\t\t\t} // refresh uniforms common to several materials\n\n\n\t\t\t\tif (fog && material.fog) {\n\t\t\t\t\tmaterials.refreshFogUniforms(m_uniforms, fog);\n\t\t\t\t}\n\n\t\t\t\tmaterials.refreshMaterialUniforms(m_uniforms, material, _pixelRatio, _height, _transmissionRenderTarget);\n\t\t\t\tWebGLUniforms.upload(_gl, materialProperties.uniformsList, m_uniforms, textures);\n\t\t\t}\n\n\t\t\tif (material.isShaderMaterial && material.uniformsNeedUpdate === true) {\n\t\t\t\tWebGLUniforms.upload(_gl, materialProperties.uniformsList, m_uniforms, textures);\n\t\t\t\tmaterial.uniformsNeedUpdate = false;\n\t\t\t}\n\n\t\t\tif (material.isSpriteMaterial) {\n\t\t\t\tp_uniforms.setValue(_gl, 'center', object.center);\n\t\t\t} // common matrices\n\n\n\t\t\tp_uniforms.setValue(_gl, 'modelViewMatrix', object.modelViewMatrix);\n\t\t\tp_uniforms.setValue(_gl, 'normalMatrix', object.normalMatrix);\n\t\t\tp_uniforms.setValue(_gl, 'modelMatrix', object.matrixWorld);\n\t\t\treturn program;\n\t\t} // If uniforms are marked as clean, they don't need to be loaded to the GPU.\n\n\n\t\tfunction markUniformsLightsNeedsUpdate(uniforms, value) {\n\t\t\tuniforms.ambientLightColor.needsUpdate = value;\n\t\t\tuniforms.lightProbe.needsUpdate = value;\n\t\t\tuniforms.directionalLights.needsUpdate = value;\n\t\t\tuniforms.directionalLightShadows.needsUpdate = value;\n\t\t\tuniforms.pointLights.needsUpdate = value;\n\t\t\tuniforms.pointLightShadows.needsUpdate = value;\n\t\t\tuniforms.spotLights.needsUpdate = value;\n\t\t\tuniforms.spotLightShadows.needsUpdate = value;\n\t\t\tuniforms.rectAreaLights.needsUpdate = value;\n\t\t\tuniforms.hemisphereLights.needsUpdate = value;\n\t\t}\n\n\t\tfunction materialNeedsLights(material) {\n\t\t\treturn material.isMeshLambertMaterial || material.isMeshToonMaterial || material.isMeshPhongMaterial || material.isMeshStandardMaterial || material.isShadowMaterial || material.isShaderMaterial && material.lights === true;\n\t\t}\n\n\t\tthis.getActiveCubeFace = function () {\n\t\t\treturn _currentActiveCubeFace;\n\t\t};\n\n\t\tthis.getActiveMipmapLevel = function () {\n\t\t\treturn _currentActiveMipmapLevel;\n\t\t};\n\n\t\tthis.getRenderTarget = function () {\n\t\t\treturn _currentRenderTarget;\n\t\t};\n\n\t\tthis.setRenderTarget = function (renderTarget, activeCubeFace = 0, activeMipmapLevel = 0) {\n\t\t\t_currentRenderTarget = renderTarget;\n\t\t\t_currentActiveCubeFace = activeCubeFace;\n\t\t\t_currentActiveMipmapLevel = activeMipmapLevel;\n\n\t\t\tif (renderTarget && properties.get(renderTarget).__webglFramebuffer === undefined) {\n\t\t\t\ttextures.setupRenderTarget(renderTarget);\n\t\t\t}\n\n\t\t\tlet framebuffer = null;\n\t\t\tlet isCube = false;\n\t\t\tlet isRenderTarget3D = false;\n\n\t\t\tif (renderTarget) {\n\t\t\t\tconst texture = renderTarget.texture;\n\n\t\t\t\tif (texture.isDataTexture3D || texture.isDataTexture2DArray) {\n\t\t\t\t\tisRenderTarget3D = true;\n\t\t\t\t}\n\n\t\t\t\tconst __webglFramebuffer = properties.get(renderTarget).__webglFramebuffer;\n\n\t\t\t\tif (renderTarget.isWebGLCubeRenderTarget) {\n\t\t\t\t\tframebuffer = __webglFramebuffer[activeCubeFace];\n\t\t\t\t\tisCube = true;\n\t\t\t\t} else if (renderTarget.isWebGLMultisampleRenderTarget) {\n\t\t\t\t\tframebuffer = properties.get(renderTarget).__webglMultisampledFramebuffer;\n\t\t\t\t} else {\n\t\t\t\t\tframebuffer = __webglFramebuffer;\n\t\t\t\t}\n\n\t\t\t\t_currentViewport.copy(renderTarget.viewport);\n\n\t\t\t\t_currentScissor.copy(renderTarget.scissor);\n\n\t\t\t\t_currentScissorTest = renderTarget.scissorTest;\n\t\t\t} else {\n\t\t\t\t_currentViewport.copy(_viewport).multiplyScalar(_pixelRatio).floor();\n\n\t\t\t\t_currentScissor.copy(_scissor).multiplyScalar(_pixelRatio).floor();\n\n\t\t\t\t_currentScissorTest = _scissorTest;\n\t\t\t}\n\n\t\t\tconst framebufferBound = state.bindFramebuffer(_gl.FRAMEBUFFER, framebuffer);\n\n\t\t\tif (framebufferBound && capabilities.drawBuffers) {\n\t\t\t\tlet needsUpdate = false;\n\n\t\t\t\tif (renderTarget) {\n\t\t\t\t\tif (renderTarget.isWebGLMultipleRenderTargets) {\n\t\t\t\t\t\tconst textures = renderTarget.texture;\n\n\t\t\t\t\t\tif (_currentDrawBuffers.length !== textures.length || _currentDrawBuffers[0] !== _gl.COLOR_ATTACHMENT0) {\n\t\t\t\t\t\t\tfor (let i = 0, il = textures.length; i < il; i++) {\n\t\t\t\t\t\t\t\t_currentDrawBuffers[i] = _gl.COLOR_ATTACHMENT0 + i;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t_currentDrawBuffers.length = textures.length;\n\t\t\t\t\t\t\tneedsUpdate = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (_currentDrawBuffers.length !== 1 || _currentDrawBuffers[0] !== _gl.COLOR_ATTACHMENT0) {\n\t\t\t\t\t\t\t_currentDrawBuffers[0] = _gl.COLOR_ATTACHMENT0;\n\t\t\t\t\t\t\t_currentDrawBuffers.length = 1;\n\t\t\t\t\t\t\tneedsUpdate = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif (_currentDrawBuffers.length !== 1 || _currentDrawBuffers[0] !== _gl.BACK) {\n\t\t\t\t\t\t_currentDrawBuffers[0] = _gl.BACK;\n\t\t\t\t\t\t_currentDrawBuffers.length = 1;\n\t\t\t\t\t\tneedsUpdate = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (needsUpdate) {\n\t\t\t\t\tif (capabilities.isWebGL2) {\n\t\t\t\t\t\t_gl.drawBuffers(_currentDrawBuffers);\n\t\t\t\t\t} else {\n\t\t\t\t\t\textensions.get('WEBGL_draw_buffers').drawBuffersWEBGL(_currentDrawBuffers);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tstate.viewport(_currentViewport);\n\t\t\tstate.scissor(_currentScissor);\n\t\t\tstate.setScissorTest(_currentScissorTest);\n\n\t\t\tif (isCube) {\n\t\t\t\tconst textureProperties = properties.get(renderTarget.texture);\n\n\t\t\t\t_gl.framebufferTexture2D(_gl.FRAMEBUFFER, _gl.COLOR_ATTACHMENT0, _gl.TEXTURE_CUBE_MAP_POSITIVE_X + activeCubeFace, textureProperties.__webglTexture, activeMipmapLevel);\n\t\t\t} else if (isRenderTarget3D) {\n\t\t\t\tconst textureProperties = properties.get(renderTarget.texture);\n\t\t\t\tconst layer = activeCubeFace || 0;\n\n\t\t\t\t_gl.framebufferTextureLayer(_gl.FRAMEBUFFER, _gl.COLOR_ATTACHMENT0, textureProperties.__webglTexture, activeMipmapLevel || 0, layer);\n\t\t\t}\n\n\t\t\t_currentMaterialId = -1; // reset current material to ensure correct uniform bindings\n\t\t};\n\n\t\tthis.readRenderTargetPixels = function (renderTarget, x, y, width, height, buffer, activeCubeFaceIndex) {\n\t\t\tif (!(renderTarget && renderTarget.isWebGLRenderTarget)) {\n\t\t\t\tconsole.error('THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.');\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tlet framebuffer = properties.get(renderTarget).__webglFramebuffer;\n\n\t\t\tif (renderTarget.isWebGLCubeRenderTarget && activeCubeFaceIndex !== undefined) {\n\t\t\t\tframebuffer = framebuffer[activeCubeFaceIndex];\n\t\t\t}\n\n\t\t\tif (framebuffer) {\n\t\t\t\tstate.bindFramebuffer(_gl.FRAMEBUFFER, framebuffer);\n\n\t\t\t\ttry {\n\t\t\t\t\tconst texture = renderTarget.texture;\n\t\t\t\t\tconst textureFormat = texture.format;\n\t\t\t\t\tconst textureType = texture.type;\n\n\t\t\t\t\tif (textureFormat !== RGBAFormat && utils.convert(textureFormat) !== _gl.getParameter(_gl.IMPLEMENTATION_COLOR_READ_FORMAT)) {\n\t\t\t\t\t\tconsole.error('THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.');\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tconst halfFloatSupportedByExt = textureType === HalfFloatType && (extensions.has('EXT_color_buffer_half_float') || capabilities.isWebGL2 && extensions.has('EXT_color_buffer_float'));\n\n\t\t\t\t\tif (textureType !== UnsignedByteType && utils.convert(textureType) !== _gl.getParameter(_gl.IMPLEMENTATION_COLOR_READ_TYPE) && // Edge and Chrome Mac < 52 (#9513)\n\t\t\t\t\t!(textureType === FloatType && (capabilities.isWebGL2 || extensions.has('OES_texture_float') || extensions.has('WEBGL_color_buffer_float'))) && // Chrome Mac >= 52 and Firefox\n\t\t\t\t\t!halfFloatSupportedByExt) {\n\t\t\t\t\t\tconsole.error('THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.');\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (_gl.checkFramebufferStatus(_gl.FRAMEBUFFER) === _gl.FRAMEBUFFER_COMPLETE) {\n\t\t\t\t\t\t// the following if statement ensures valid read requests (no out-of-bounds pixels, see #8604)\n\t\t\t\t\t\tif (x >= 0 && x <= renderTarget.width - width && y >= 0 && y <= renderTarget.height - height) {\n\t\t\t\t\t\t\t_gl.readPixels(x, y, width, height, utils.convert(textureFormat), utils.convert(textureType), buffer);\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tconsole.error('THREE.WebGLRenderer.readRenderTargetPixels: readPixels from renderTarget failed. Framebuffer not complete.');\n\t\t\t\t\t}\n\t\t\t\t} finally {\n\t\t\t\t\t// restore framebuffer of current render target if necessary\n\t\t\t\t\tconst framebuffer = _currentRenderTarget !== null ? properties.get(_currentRenderTarget).__webglFramebuffer : null;\n\t\t\t\t\tstate.bindFramebuffer(_gl.FRAMEBUFFER, framebuffer);\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\tthis.copyFramebufferToTexture = function (position, texture, level = 0) {\n\t\t\tconst levelScale = Math.pow(2, -level);\n\t\t\tconst width = Math.floor(texture.image.width * levelScale);\n\t\t\tconst height = Math.floor(texture.image.height * levelScale);\n\t\t\tlet glFormat = utils.convert(texture.format);\n\n\t\t\tif (capabilities.isWebGL2) {\n\t\t\t\t// Workaround for https://bugs.chromium.org/p/chromium/issues/detail?id=1120100\n\t\t\t\t// Not needed in Chrome 93+\n\t\t\t\tif (glFormat === _gl.RGB) glFormat = _gl.RGB8;\n\t\t\t\tif (glFormat === _gl.RGBA) glFormat = _gl.RGBA8;\n\t\t\t}\n\n\t\t\ttextures.setTexture2D(texture, 0);\n\n\t\t\t_gl.copyTexImage2D(_gl.TEXTURE_2D, level, glFormat, position.x, position.y, width, height, 0);\n\n\t\t\tstate.unbindTexture();\n\t\t};\n\n\t\tthis.copyTextureToTexture = function (position, srcTexture, dstTexture, level = 0) {\n\t\t\tconst width = srcTexture.image.width;\n\t\t\tconst height = srcTexture.image.height;\n\t\t\tconst glFormat = utils.convert(dstTexture.format);\n\t\t\tconst glType = utils.convert(dstTexture.type);\n\t\t\ttextures.setTexture2D(dstTexture, 0); // As another texture upload may have changed pixelStorei\n\t\t\t// parameters, make sure they are correct for the dstTexture\n\n\t\t\t_gl.pixelStorei(_gl.UNPACK_FLIP_Y_WEBGL, dstTexture.flipY);\n\n\t\t\t_gl.pixelStorei(_gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, dstTexture.premultiplyAlpha);\n\n\t\t\t_gl.pixelStorei(_gl.UNPACK_ALIGNMENT, dstTexture.unpackAlignment);\n\n\t\t\tif (srcTexture.isDataTexture) {\n\t\t\t\t_gl.texSubImage2D(_gl.TEXTURE_2D, level, position.x, position.y, width, height, glFormat, glType, srcTexture.image.data);\n\t\t\t} else {\n\t\t\t\tif (srcTexture.isCompressedTexture) {\n\t\t\t\t\t_gl.compressedTexSubImage2D(_gl.TEXTURE_2D, level, position.x, position.y, srcTexture.mipmaps[0].width, srcTexture.mipmaps[0].height, glFormat, srcTexture.mipmaps[0].data);\n\t\t\t\t} else {\n\t\t\t\t\t_gl.texSubImage2D(_gl.TEXTURE_2D, level, position.x, position.y, glFormat, glType, srcTexture.image);\n\t\t\t\t}\n\t\t\t} // Generate mipmaps only when copying level 0\n\n\n\t\t\tif (level === 0 && dstTexture.generateMipmaps) _gl.generateMipmap(_gl.TEXTURE_2D);\n\t\t\tstate.unbindTexture();\n\t\t};\n\n\t\tthis.copyTextureToTexture3D = function (sourceBox, position, srcTexture, dstTexture, level = 0) {\n\t\t\tif (_this.isWebGL1Renderer) {\n\t\t\t\tconsole.warn('THREE.WebGLRenderer.copyTextureToTexture3D: can only be used with WebGL2.');\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst width = sourceBox.max.x - sourceBox.min.x + 1;\n\t\t\tconst height = sourceBox.max.y - sourceBox.min.y + 1;\n\t\t\tconst depth = sourceBox.max.z - sourceBox.min.z + 1;\n\t\t\tconst glFormat = utils.convert(dstTexture.format);\n\t\t\tconst glType = utils.convert(dstTexture.type);\n\t\t\tlet glTarget;\n\n\t\t\tif (dstTexture.isDataTexture3D) {\n\t\t\t\ttextures.setTexture3D(dstTexture, 0);\n\t\t\t\tglTarget = _gl.TEXTURE_3D;\n\t\t\t} else if (dstTexture.isDataTexture2DArray) {\n\t\t\t\ttextures.setTexture2DArray(dstTexture, 0);\n\t\t\t\tglTarget = _gl.TEXTURE_2D_ARRAY;\n\t\t\t} else {\n\t\t\t\tconsole.warn('THREE.WebGLRenderer.copyTextureToTexture3D: only supports THREE.DataTexture3D and THREE.DataTexture2DArray.');\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t_gl.pixelStorei(_gl.UNPACK_FLIP_Y_WEBGL, dstTexture.flipY);\n\n\t\t\t_gl.pixelStorei(_gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, dstTexture.premultiplyAlpha);\n\n\t\t\t_gl.pixelStorei(_gl.UNPACK_ALIGNMENT, dstTexture.unpackAlignment);\n\n\t\t\tconst unpackRowLen = _gl.getParameter(_gl.UNPACK_ROW_LENGTH);\n\n\t\t\tconst unpackImageHeight = _gl.getParameter(_gl.UNPACK_IMAGE_HEIGHT);\n\n\t\t\tconst unpackSkipPixels = _gl.getParameter(_gl.UNPACK_SKIP_PIXELS);\n\n\t\t\tconst unpackSkipRows = _gl.getParameter(_gl.UNPACK_SKIP_ROWS);\n\n\t\t\tconst unpackSkipImages = _gl.getParameter(_gl.UNPACK_SKIP_IMAGES);\n\n\t\t\tconst image = srcTexture.isCompressedTexture ? srcTexture.mipmaps[0] : srcTexture.image;\n\n\t\t\t_gl.pixelStorei(_gl.UNPACK_ROW_LENGTH, image.width);\n\n\t\t\t_gl.pixelStorei(_gl.UNPACK_IMAGE_HEIGHT, image.height);\n\n\t\t\t_gl.pixelStorei(_gl.UNPACK_SKIP_PIXELS, sourceBox.min.x);\n\n\t\t\t_gl.pixelStorei(_gl.UNPACK_SKIP_ROWS, sourceBox.min.y);\n\n\t\t\t_gl.pixelStorei(_gl.UNPACK_SKIP_IMAGES, sourceBox.min.z);\n\n\t\t\tif (srcTexture.isDataTexture || srcTexture.isDataTexture3D) {\n\t\t\t\t_gl.texSubImage3D(glTarget, level, position.x, position.y, position.z, width, height, depth, glFormat, glType, image.data);\n\t\t\t} else {\n\t\t\t\tif (srcTexture.isCompressedTexture) {\n\t\t\t\t\tconsole.warn('THREE.WebGLRenderer.copyTextureToTexture3D: untested support for compressed srcTexture.');\n\n\t\t\t\t\t_gl.compressedTexSubImage3D(glTarget, level, position.x, position.y, position.z, width, height, depth, glFormat, image.data);\n\t\t\t\t} else {\n\t\t\t\t\t_gl.texSubImage3D(glTarget, level, position.x, position.y, position.z, width, height, depth, glFormat, glType, image);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t_gl.pixelStorei(_gl.UNPACK_ROW_LENGTH, unpackRowLen);\n\n\t\t\t_gl.pixelStorei(_gl.UNPACK_IMAGE_HEIGHT, unpackImageHeight);\n\n\t\t\t_gl.pixelStorei(_gl.UNPACK_SKIP_PIXELS, unpackSkipPixels);\n\n\t\t\t_gl.pixelStorei(_gl.UNPACK_SKIP_ROWS, unpackSkipRows);\n\n\t\t\t_gl.pixelStorei(_gl.UNPACK_SKIP_IMAGES, unpackSkipImages); // Generate mipmaps only when copying level 0\n\n\n\t\t\tif (level === 0 && dstTexture.generateMipmaps) _gl.generateMipmap(glTarget);\n\t\t\tstate.unbindTexture();\n\t\t};\n\n\t\tthis.initTexture = function (texture) {\n\t\t\ttextures.setTexture2D(texture, 0);\n\t\t\tstate.unbindTexture();\n\t\t};\n\n\t\tthis.resetState = function () {\n\t\t\t_currentActiveCubeFace = 0;\n\t\t\t_currentActiveMipmapLevel = 0;\n\t\t\t_currentRenderTarget = null;\n\t\t\tstate.reset();\n\t\t\tbindingStates.reset();\n\t\t};\n\n\t\tif (typeof __THREE_DEVTOOLS__ !== 'undefined') {\n\t\t\t__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent('observe', {\n\t\t\t\tdetail: this\n\t\t\t})); // eslint-disable-line no-undef\n\n\t\t}\n\t}\n\n\tWebGLRenderer.prototype.isWebGLRenderer = true;\n\n\tclass WebGL1Renderer extends WebGLRenderer {}\n\n\tWebGL1Renderer.prototype.isWebGL1Renderer = true;\n\n\tclass FogExp2 {\n\t\tconstructor(color, density = 0.00025) {\n\t\t\tthis.name = '';\n\t\t\tthis.color = new Color(color);\n\t\t\tthis.density = density;\n\t\t}\n\n\t\tclone() {\n\t\t\treturn new FogExp2(this.color, this.density);\n\t\t}\n\n\t\ttoJSON() {\n\t\t\treturn {\n\t\t\t\ttype: 'FogExp2',\n\t\t\t\tcolor: this.color.getHex(),\n\t\t\t\tdensity: this.density\n\t\t\t};\n\t\t}\n\n\t}\n\n\tFogExp2.prototype.isFogExp2 = true;\n\n\tclass Fog {\n\t\tconstructor(color, near = 1, far = 1000) {\n\t\t\tthis.name = '';\n\t\t\tthis.color = new Color(color);\n\t\t\tthis.near = near;\n\t\t\tthis.far = far;\n\t\t}\n\n\t\tclone() {\n\t\t\treturn new Fog(this.color, this.near, this.far);\n\t\t}\n\n\t\ttoJSON() {\n\t\t\treturn {\n\t\t\t\ttype: 'Fog',\n\t\t\t\tcolor: this.color.getHex(),\n\t\t\t\tnear: this.near,\n\t\t\t\tfar: this.far\n\t\t\t};\n\t\t}\n\n\t}\n\n\tFog.prototype.isFog = true;\n\n\tclass Scene extends Object3D {\n\t\tconstructor() {\n\t\t\tsuper();\n\t\t\tthis.type = 'Scene';\n\t\t\tthis.background = null;\n\t\t\tthis.environment = null;\n\t\t\tthis.fog = null;\n\t\t\tthis.overrideMaterial = null;\n\t\t\tthis.autoUpdate = true; // checked by the renderer\n\n\t\t\tif (typeof __THREE_DEVTOOLS__ !== 'undefined') {\n\t\t\t\t__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent('observe', {\n\t\t\t\t\tdetail: this\n\t\t\t\t})); // eslint-disable-line no-undef\n\n\t\t\t}\n\t\t}\n\n\t\tcopy(source, recursive) {\n\t\t\tsuper.copy(source, recursive);\n\t\t\tif (source.background !== null) this.background = source.background.clone();\n\t\t\tif (source.environment !== null) this.environment = source.environment.clone();\n\t\t\tif (source.fog !== null) this.fog = source.fog.clone();\n\t\t\tif (source.overrideMaterial !== null) this.overrideMaterial = source.overrideMaterial.clone();\n\t\t\tthis.autoUpdate = source.autoUpdate;\n\t\t\tthis.matrixAutoUpdate = source.matrixAutoUpdate;\n\t\t\treturn this;\n\t\t}\n\n\t\ttoJSON(meta) {\n\t\t\tconst data = super.toJSON(meta);\n\t\t\tif (this.fog !== null) data.object.fog = this.fog.toJSON();\n\t\t\treturn data;\n\t\t}\n\n\t}\n\n\tScene.prototype.isScene = true;\n\n\tclass InterleavedBuffer {\n\t\tconstructor(array, stride) {\n\t\t\tthis.array = array;\n\t\t\tthis.stride = stride;\n\t\t\tthis.count = array !== undefined ? array.length / stride : 0;\n\t\t\tthis.usage = StaticDrawUsage;\n\t\t\tthis.updateRange = {\n\t\t\t\toffset: 0,\n\t\t\t\tcount: -1\n\t\t\t};\n\t\t\tthis.version = 0;\n\t\t\tthis.uuid = generateUUID();\n\t\t}\n\n\t\tonUploadCallback() {}\n\n\t\tset needsUpdate(value) {\n\t\t\tif (value === true) this.version++;\n\t\t}\n\n\t\tsetUsage(value) {\n\t\t\tthis.usage = value;\n\t\t\treturn this;\n\t\t}\n\n\t\tcopy(source) {\n\t\t\tthis.array = new source.array.constructor(source.array);\n\t\t\tthis.count = source.count;\n\t\t\tthis.stride = source.stride;\n\t\t\tthis.usage = source.usage;\n\t\t\treturn this;\n\t\t}\n\n\t\tcopyAt(index1, attribute, index2) {\n\t\t\tindex1 *= this.stride;\n\t\t\tindex2 *= attribute.stride;\n\n\t\t\tfor (let i = 0, l = this.stride; i < l; i++) {\n\t\t\t\tthis.array[index1 + i] = attribute.array[index2 + i];\n\t\t\t}\n\n\t\t\treturn this;\n\t\t}\n\n\t\tset(value, offset = 0) {\n\t\t\tthis.array.set(value, offset);\n\t\t\treturn this;\n\t\t}\n\n\t\tclone(data) {\n\t\t\tif (data.arrayBuffers === undefined) {\n\t\t\t\tdata.arrayBuffers = {};\n\t\t\t}\n\n\t\t\tif (this.array.buffer._uuid === undefined) {\n\t\t\t\tthis.array.buffer._uuid = generateUUID();\n\t\t\t}\n\n\t\t\tif (data.arrayBuffers[this.array.buffer._uuid] === undefined) {\n\t\t\t\tdata.arrayBuffers[this.array.buffer._uuid] = this.array.slice(0).buffer;\n\t\t\t}\n\n\t\t\tconst array = new this.array.constructor(data.arrayBuffers[this.array.buffer._uuid]);\n\t\t\tconst ib = new this.constructor(array, this.stride);\n\t\t\tib.setUsage(this.usage);\n\t\t\treturn ib;\n\t\t}\n\n\t\tonUpload(callback) {\n\t\t\tthis.onUploadCallback = callback;\n\t\t\treturn this;\n\t\t}\n\n\t\ttoJSON(data) {\n\t\t\tif (data.arrayBuffers === undefined) {\n\t\t\t\tdata.arrayBuffers = {};\n\t\t\t} // generate UUID for array buffer if necessary\n\n\n\t\t\tif (this.array.buffer._uuid === undefined) {\n\t\t\t\tthis.array.buffer._uuid = generateUUID();\n\t\t\t}\n\n\t\t\tif (data.arrayBuffers[this.array.buffer._uuid] === undefined) {\n\t\t\t\tdata.arrayBuffers[this.array.buffer._uuid] = Array.prototype.slice.call(new Uint32Array(this.array.buffer));\n\t\t\t} //\n\n\n\t\t\treturn {\n\t\t\t\tuuid: this.uuid,\n\t\t\t\tbuffer: this.array.buffer._uuid,\n\t\t\t\ttype: this.array.constructor.name,\n\t\t\t\tstride: this.stride\n\t\t\t};\n\t\t}\n\n\t}\n\n\tInterleavedBuffer.prototype.isInterleavedBuffer = true;\n\n\tconst _vector$6 = /*@__PURE__*/new Vector3();\n\n\tclass InterleavedBufferAttribute {\n\t\tconstructor(interleavedBuffer, itemSize, offset, normalized = false) {\n\t\t\tthis.name = '';\n\t\t\tthis.data = interleavedBuffer;\n\t\t\tthis.itemSize = itemSize;\n\t\t\tthis.offset = offset;\n\t\t\tthis.normalized = normalized === true;\n\t\t}\n\n\t\tget count() {\n\t\t\treturn this.data.count;\n\t\t}\n\n\t\tget array() {\n\t\t\treturn this.data.array;\n\t\t}\n\n\t\tset needsUpdate(value) {\n\t\t\tthis.data.needsUpdate = value;\n\t\t}\n\n\t\tapplyMatrix4(m) {\n\t\t\tfor (let i = 0, l = this.data.count; i < l; i++) {\n\t\t\t\t_vector$6.x = this.getX(i);\n\t\t\t\t_vector$6.y = this.getY(i);\n\t\t\t\t_vector$6.z = this.getZ(i);\n\n\t\t\t\t_vector$6.applyMatrix4(m);\n\n\t\t\t\tthis.setXYZ(i, _vector$6.x, _vector$6.y, _vector$6.z);\n\t\t\t}\n\n\t\t\treturn this;\n\t\t}\n\n\t\tapplyNormalMatrix(m) {\n\t\t\tfor (let i = 0, l = this.count; i < l; i++) {\n\t\t\t\t_vector$6.x = this.getX(i);\n\t\t\t\t_vector$6.y = this.getY(i);\n\t\t\t\t_vector$6.z = this.getZ(i);\n\n\t\t\t\t_vector$6.applyNormalMatrix(m);\n\n\t\t\t\tthis.setXYZ(i, _vector$6.x, _vector$6.y, _vector$6.z);\n\t\t\t}\n\n\t\t\treturn this;\n\t\t}\n\n\t\ttransformDirection(m) {\n\t\t\tfor (let i = 0, l = this.count; i < l; i++) {\n\t\t\t\t_vector$6.x = this.getX(i);\n\t\t\t\t_vector$6.y = this.getY(i);\n\t\t\t\t_vector$6.z = this.getZ(i);\n\n\t\t\t\t_vector$6.transformDirection(m);\n\n\t\t\t\tthis.setXYZ(i, _vector$6.x, _vector$6.y, _vector$6.z);\n\t\t\t}\n\n\t\t\treturn this;\n\t\t}\n\n\t\tsetX(index, x) {\n\t\t\tthis.data.array[index * this.data.stride + this.offset] = x;\n\t\t\treturn this;\n\t\t}\n\n\t\tsetY(index, y) {\n\t\t\tthis.data.array[index * this.data.stride + this.offset + 1] = y;\n\t\t\treturn this;\n\t\t}\n\n\t\tsetZ(index, z) {\n\t\t\tthis.data.array[index * this.data.stride + this.offset + 2] = z;\n\t\t\treturn this;\n\t\t}\n\n\t\tsetW(index, w) {\n\t\t\tthis.data.array[index * this.data.stride + this.offset + 3] = w;\n\t\t\treturn this;\n\t\t}\n\n\t\tgetX(index) {\n\t\t\treturn this.data.array[index * this.data.stride + this.offset];\n\t\t}\n\n\t\tgetY(index) {\n\t\t\treturn this.data.array[index * this.data.stride + this.offset + 1];\n\t\t}\n\n\t\tgetZ(index) {\n\t\t\treturn this.data.array[index * this.data.stride + this.offset + 2];\n\t\t}\n\n\t\tgetW(index) {\n\t\t\treturn this.data.array[index * this.data.stride + this.offset + 3];\n\t\t}\n\n\t\tsetXY(index, x, y) {\n\t\t\tindex = index * this.data.stride + this.offset;\n\t\t\tthis.data.array[index + 0] = x;\n\t\t\tthis.data.array[index + 1] = y;\n\t\t\treturn this;\n\t\t}\n\n\t\tsetXYZ(index, x, y, z) {\n\t\t\tindex = index * this.data.stride + this.offset;\n\t\t\tthis.data.array[index + 0] = x;\n\t\t\tthis.data.array[index + 1] = y;\n\t\t\tthis.data.array[index + 2] = z;\n\t\t\treturn this;\n\t\t}\n\n\t\tsetXYZW(index, x, y, z, w) {\n\t\t\tindex = index * this.data.stride + this.offset;\n\t\t\tthis.data.array[index + 0] = x;\n\t\t\tthis.data.array[index + 1] = y;\n\t\t\tthis.data.array[index + 2] = z;\n\t\t\tthis.data.array[index + 3] = w;\n\t\t\treturn this;\n\t\t}\n\n\t\tclone(data) {\n\t\t\tif (data === undefined) {\n\t\t\t\tconsole.log('THREE.InterleavedBufferAttribute.clone(): Cloning an interlaved buffer attribute will deinterleave buffer data.');\n\t\t\t\tconst array = [];\n\n\t\t\t\tfor (let i = 0; i < this.count; i++) {\n\t\t\t\t\tconst index = i * this.data.stride + this.offset;\n\n\t\t\t\t\tfor (let j = 0; j < this.itemSize; j++) {\n\t\t\t\t\t\tarray.push(this.data.array[index + j]);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn new BufferAttribute(new this.array.constructor(array), this.itemSize, this.normalized);\n\t\t\t} else {\n\t\t\t\tif (data.interleavedBuffers === undefined) {\n\t\t\t\t\tdata.interleavedBuffers = {};\n\t\t\t\t}\n\n\t\t\t\tif (data.interleavedBuffers[this.data.uuid] === undefined) {\n\t\t\t\t\tdata.interleavedBuffers[this.data.uuid] = this.data.clone(data);\n\t\t\t\t}\n\n\t\t\t\treturn new InterleavedBufferAttribute(data.interleavedBuffers[this.data.uuid], this.itemSize, this.offset, this.normalized);\n\t\t\t}\n\t\t}\n\n\t\ttoJSON(data) {\n\t\t\tif (data === undefined) {\n\t\t\t\tconsole.log('THREE.InterleavedBufferAttribute.toJSON(): Serializing an interlaved buffer attribute will deinterleave buffer data.');\n\t\t\t\tconst array = [];\n\n\t\t\t\tfor (let i = 0; i < this.count; i++) {\n\t\t\t\t\tconst index = i * this.data.stride + this.offset;\n\n\t\t\t\t\tfor (let j = 0; j < this.itemSize; j++) {\n\t\t\t\t\t\tarray.push(this.data.array[index + j]);\n\t\t\t\t\t}\n\t\t\t\t} // deinterleave data and save it as an ordinary buffer attribute for now\n\n\n\t\t\t\treturn {\n\t\t\t\t\titemSize: this.itemSize,\n\t\t\t\t\ttype: this.array.constructor.name,\n\t\t\t\t\tarray: array,\n\t\t\t\t\tnormalized: this.normalized\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\t// save as true interlaved attribtue\n\t\t\t\tif (data.interleavedBuffers === undefined) {\n\t\t\t\t\tdata.interleavedBuffers = {};\n\t\t\t\t}\n\n\t\t\t\tif (data.interleavedBuffers[this.data.uuid] === undefined) {\n\t\t\t\t\tdata.interleavedBuffers[this.data.uuid] = this.data.toJSON(data);\n\t\t\t\t}\n\n\t\t\t\treturn {\n\t\t\t\t\tisInterleavedBufferAttribute: true,\n\t\t\t\t\titemSize: this.itemSize,\n\t\t\t\t\tdata: this.data.uuid,\n\t\t\t\t\toffset: this.offset,\n\t\t\t\t\tnormalized: this.normalized\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\n\t}\n\n\tInterleavedBufferAttribute.prototype.isInterleavedBufferAttribute = true;\n\n\t/**\n\t * parameters = {\n\t *\tcolor: <hex>,\n\t *\tmap: new THREE.Texture( <Image> ),\n\t *\talphaMap: new THREE.Texture( <Image> ),\n\t *\trotation: <float>,\n\t *\tsizeAttenuation: <bool>\n\t * }\n\t */\n\n\tclass SpriteMaterial extends Material {\n\t\tconstructor(parameters) {\n\t\t\tsuper();\n\t\t\tthis.type = 'SpriteMaterial';\n\t\t\tthis.color = new Color(0xffffff);\n\t\t\tthis.map = null;\n\t\t\tthis.alphaMap = null;\n\t\t\tthis.rotation = 0;\n\t\t\tthis.sizeAttenuation = true;\n\t\t\tthis.transparent = true;\n\t\t\tthis.setValues(parameters);\n\t\t}\n\n\t\tcopy(source) {\n\t\t\tsuper.copy(source);\n\t\t\tthis.color.copy(source.color);\n\t\t\tthis.map = source.map;\n\t\t\tthis.alphaMap = source.alphaMap;\n\t\t\tthis.rotation = source.rotation;\n\t\t\tthis.sizeAttenuation = source.sizeAttenuation;\n\t\t\treturn this;\n\t\t}\n\n\t}\n\n\tSpriteMaterial.prototype.isSpriteMaterial = true;\n\n\tlet _geometry;\n\n\tconst _intersectPoint = /*@__PURE__*/new Vector3();\n\n\tconst _worldScale = /*@__PURE__*/new Vector3();\n\n\tconst _mvPosition = /*@__PURE__*/new Vector3();\n\n\tconst _alignedPosition = /*@__PURE__*/new Vector2();\n\n\tconst _rotatedPosition = /*@__PURE__*/new Vector2();\n\n\tconst _viewWorldMatrix = /*@__PURE__*/new Matrix4();\n\n\tconst _vA = /*@__PURE__*/new Vector3();\n\n\tconst _vB = /*@__PURE__*/new Vector3();\n\n\tconst _vC = /*@__PURE__*/new Vector3();\n\n\tconst _uvA = /*@__PURE__*/new Vector2();\n\n\tconst _uvB = /*@__PURE__*/new Vector2();\n\n\tconst _uvC = /*@__PURE__*/new Vector2();\n\n\tclass Sprite extends Object3D {\n\t\tconstructor(material) {\n\t\t\tsuper();\n\t\t\tthis.type = 'Sprite';\n\n\t\t\tif (_geometry === undefined) {\n\t\t\t\t_geometry = new BufferGeometry();\n\t\t\t\tconst float32Array = new Float32Array([-0.5, -0.5, 0, 0, 0, 0.5, -0.5, 0, 1, 0, 0.5, 0.5, 0, 1, 1, -0.5, 0.5, 0, 0, 1]);\n\t\t\t\tconst interleavedBuffer = new InterleavedBuffer(float32Array, 5);\n\n\t\t\t\t_geometry.setIndex([0, 1, 2, 0, 2, 3]);\n\n\t\t\t\t_geometry.setAttribute('position', new InterleavedBufferAttribute(interleavedBuffer, 3, 0, false));\n\n\t\t\t\t_geometry.setAttribute('uv', new InterleavedBufferAttribute(interleavedBuffer, 2, 3, false));\n\t\t\t}\n\n\t\t\tthis.geometry = _geometry;\n\t\t\tthis.material = material !== undefined ? material : new SpriteMaterial();\n\t\t\tthis.center = new Vector2(0.5, 0.5);\n\t\t}\n\n\t\traycast(raycaster, intersects) {\n\t\t\tif (raycaster.camera === null) {\n\t\t\t\tconsole.error('THREE.Sprite: \"Raycaster.camera\" needs to be set in order to raycast against sprites.');\n\t\t\t}\n\n\t\t\t_worldScale.setFromMatrixScale(this.matrixWorld);\n\n\t\t\t_viewWorldMatrix.copy(raycaster.camera.matrixWorld);\n\n\t\t\tthis.modelViewMatrix.multiplyMatrices(raycaster.camera.matrixWorldInverse, this.matrixWorld);\n\n\t\t\t_mvPosition.setFromMatrixPosition(this.modelViewMatrix);\n\n\t\t\tif (raycaster.camera.isPerspectiveCamera && this.material.sizeAttenuation === false) {\n\t\t\t\t_worldScale.multiplyScalar(-_mvPosition.z);\n\t\t\t}\n\n\t\t\tconst rotation = this.material.rotation;\n\t\t\tlet sin, cos;\n\n\t\t\tif (rotation !== 0) {\n\t\t\t\tcos = Math.cos(rotation);\n\t\t\t\tsin = Math.sin(rotation);\n\t\t\t}\n\n\t\t\tconst center = this.center;\n\t\t\ttransformVertex(_vA.set(-0.5, -0.5, 0), _mvPosition, center, _worldScale, sin, cos);\n\t\t\ttransformVertex(_vB.set(0.5, -0.5, 0), _mvPosition, center, _worldScale, sin, cos);\n\t\t\ttransformVertex(_vC.set(0.5, 0.5, 0), _mvPosition, center, _worldScale, sin, cos);\n\n\t\t\t_uvA.set(0, 0);\n\n\t\t\t_uvB.set(1, 0);\n\n\t\t\t_uvC.set(1, 1); // check first triangle\n\n\n\t\t\tlet intersect = raycaster.ray.intersectTriangle(_vA, _vB, _vC, false, _intersectPoint);\n\n\t\t\tif (intersect === null) {\n\t\t\t\t// check second triangle\n\t\t\t\ttransformVertex(_vB.set(-0.5, 0.5, 0), _mvPosition, center, _worldScale, sin, cos);\n\n\t\t\t\t_uvB.set(0, 1);\n\n\t\t\t\tintersect = raycaster.ray.intersectTriangle(_vA, _vC, _vB, false, _intersectPoint);\n\n\t\t\t\tif (intersect === null) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst distance = raycaster.ray.origin.distanceTo(_intersectPoint);\n\t\t\tif (distance < raycaster.near || distance > raycaster.far) return;\n\t\t\tintersects.push({\n\t\t\t\tdistance: distance,\n\t\t\t\tpoint: _intersectPoint.clone(),\n\t\t\t\tuv: Triangle.getUV(_intersectPoint, _vA, _vB, _vC, _uvA, _uvB, _uvC, new Vector2()),\n\t\t\t\tface: null,\n\t\t\t\tobject: this\n\t\t\t});\n\t\t}\n\n\t\tcopy(source) {\n\t\t\tsuper.copy(source);\n\t\t\tif (source.center !== undefined) this.center.copy(source.center);\n\t\t\tthis.material = source.material;\n\t\t\treturn this;\n\t\t}\n\n\t}\n\n\tSprite.prototype.isSprite = true;\n\n\tfunction transformVertex(vertexPosition, mvPosition, center, scale, sin, cos) {\n\t\t// compute position in camera space\n\t\t_alignedPosition.subVectors(vertexPosition, center).addScalar(0.5).multiply(scale); // to check if rotation is not zero\n\n\n\t\tif (sin !== undefined) {\n\t\t\t_rotatedPosition.x = cos * _alignedPosition.x - sin * _alignedPosition.y;\n\t\t\t_rotatedPosition.y = sin * _alignedPosition.x + cos * _alignedPosition.y;\n\t\t} else {\n\t\t\t_rotatedPosition.copy(_alignedPosition);\n\t\t}\n\n\t\tvertexPosition.copy(mvPosition);\n\t\tvertexPosition.x += _rotatedPosition.x;\n\t\tvertexPosition.y += _rotatedPosition.y; // transform to world space\n\n\t\tvertexPosition.applyMatrix4(_viewWorldMatrix);\n\t}\n\n\tconst _v1$2 = /*@__PURE__*/new Vector3();\n\n\tconst _v2$1 = /*@__PURE__*/new Vector3();\n\n\tclass LOD extends Object3D {\n\t\tconstructor() {\n\t\t\tsuper();\n\t\t\tthis._currentLevel = 0;\n\t\t\tthis.type = 'LOD';\n\t\t\tObject.defineProperties(this, {\n\t\t\t\tlevels: {\n\t\t\t\t\tenumerable: true,\n\t\t\t\t\tvalue: []\n\t\t\t\t},\n\t\t\t\tisLOD: {\n\t\t\t\t\tvalue: true\n\t\t\t\t}\n\t\t\t});\n\t\t\tthis.autoUpdate = true;\n\t\t}\n\n\t\tcopy(source) {\n\t\t\tsuper.copy(source, false);\n\t\t\tconst levels = source.levels;\n\n\t\t\tfor (let i = 0, l = levels.length; i < l; i++) {\n\t\t\t\tconst level = levels[i];\n\t\t\t\tthis.addLevel(level.object.clone(), level.distance);\n\t\t\t}\n\n\t\t\tthis.autoUpdate = source.autoUpdate;\n\t\t\treturn this;\n\t\t}\n\n\t\taddLevel(object, distance = 0) {\n\t\t\tdistance = Math.abs(distance);\n\t\t\tconst levels = this.levels;\n\t\t\tlet l;\n\n\t\t\tfor (l = 0; l < levels.length; l++) {\n\t\t\t\tif (distance < levels[l].distance) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlevels.splice(l, 0, {\n\t\t\t\tdistance: distance,\n\t\t\t\tobject: object\n\t\t\t});\n\t\t\tthis.add(object);\n\t\t\treturn this;\n\t\t}\n\n\t\tgetCurrentLevel() {\n\t\t\treturn this._currentLevel;\n\t\t}\n\n\t\tgetObjectForDistance(distance) {\n\t\t\tconst levels = this.levels;\n\n\t\t\tif (levels.length > 0) {\n\t\t\t\tlet i, l;\n\n\t\t\t\tfor (i = 1, l = levels.length; i < l; i++) {\n\t\t\t\t\tif (distance < levels[i].distance) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn levels[i - 1].object;\n\t\t\t}\n\n\t\t\treturn null;\n\t\t}\n\n\t\traycast(raycaster, intersects) {\n\t\t\tconst levels = this.levels;\n\n\t\t\tif (levels.length > 0) {\n\t\t\t\t_v1$2.setFromMatrixPosition(this.matrixWorld);\n\n\t\t\t\tconst distance = raycaster.ray.origin.distanceTo(_v1$2);\n\t\t\t\tthis.getObjectForDistance(distance).raycast(raycaster, intersects);\n\t\t\t}\n\t\t}\n\n\t\tupdate(camera) {\n\t\t\tconst levels = this.levels;\n\n\t\t\tif (levels.length > 1) {\n\t\t\t\t_v1$2.setFromMatrixPosition(camera.matrixWorld);\n\n\t\t\t\t_v2$1.setFromMatrixPosition(this.matrixWorld);\n\n\t\t\t\tconst distance = _v1$2.distanceTo(_v2$1) / camera.zoom;\n\t\t\t\tlevels[0].object.visible = true;\n\t\t\t\tlet i, l;\n\n\t\t\t\tfor (i = 1, l = levels.length; i < l; i++) {\n\t\t\t\t\tif (distance >= levels[i].distance) {\n\t\t\t\t\t\tlevels[i - 1].object.visible = false;\n\t\t\t\t\t\tlevels[i].object.visible = true;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tthis._currentLevel = i - 1;\n\n\t\t\t\tfor (; i < l; i++) {\n\t\t\t\t\tlevels[i].object.visible = false;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\ttoJSON(meta) {\n\t\t\tconst data = super.toJSON(meta);\n\t\t\tif (this.autoUpdate === false) data.object.autoUpdate = false;\n\t\t\tdata.object.levels = [];\n\t\t\tconst levels = this.levels;\n\n\t\t\tfor (let i = 0, l = levels.length; i < l; i++) {\n\t\t\t\tconst level = levels[i];\n\t\t\t\tdata.object.levels.push({\n\t\t\t\t\tobject: level.object.uuid,\n\t\t\t\t\tdistance: level.distance\n\t\t\t\t});\n\t\t\t}\n\n\t\t\treturn data;\n\t\t}\n\n\t}\n\n\tconst _basePosition = /*@__PURE__*/new Vector3();\n\n\tconst _skinIndex = /*@__PURE__*/new Vector4();\n\n\tconst _skinWeight = /*@__PURE__*/new Vector4();\n\n\tconst _vector$5 = /*@__PURE__*/new Vector3();\n\n\tconst _matrix = /*@__PURE__*/new Matrix4();\n\n\tclass SkinnedMesh extends Mesh {\n\t\tconstructor(geometry, material) {\n\t\t\tsuper(geometry, material);\n\t\t\tthis.type = 'SkinnedMesh';\n\t\t\tthis.bindMode = 'attached';\n\t\t\tthis.bindMatrix = new Matrix4();\n\t\t\tthis.bindMatrixInverse = new Matrix4();\n\t\t}\n\n\t\tcopy(source) {\n\t\t\tsuper.copy(source);\n\t\t\tthis.bindMode = source.bindMode;\n\t\t\tthis.bindMatrix.copy(source.bindMatrix);\n\t\t\tthis.bindMatrixInverse.copy(source.bindMatrixInverse);\n\t\t\tthis.skeleton = source.skeleton;\n\t\t\treturn this;\n\t\t}\n\n\t\tbind(skeleton, bindMatrix) {\n\t\t\tthis.skeleton = skeleton;\n\n\t\t\tif (bindMatrix === undefined) {\n\t\t\t\tthis.updateMatrixWorld(true);\n\t\t\t\tthis.skeleton.calculateInverses();\n\t\t\t\tbindMatrix = this.matrixWorld;\n\t\t\t}\n\n\t\t\tthis.bindMatrix.copy(bindMatrix);\n\t\t\tthis.bindMatrixInverse.copy(bindMatrix).invert();\n\t\t}\n\n\t\tpose() {\n\t\t\tthis.skeleton.pose();\n\t\t}\n\n\t\tnormalizeSkinWeights() {\n\t\t\tconst vector = new Vector4();\n\t\t\tconst skinWeight = this.geometry.attributes.skinWeight;\n\n\t\t\tfor (let i = 0, l = skinWeight.count; i < l; i++) {\n\t\t\t\tvector.x = skinWeight.getX(i);\n\t\t\t\tvector.y = skinWeight.getY(i);\n\t\t\t\tvector.z = skinWeight.getZ(i);\n\t\t\t\tvector.w = skinWeight.getW(i);\n\t\t\t\tconst scale = 1.0 / vector.manhattanLength();\n\n\t\t\t\tif (scale !== Infinity) {\n\t\t\t\t\tvector.multiplyScalar(scale);\n\t\t\t\t} else {\n\t\t\t\t\tvector.set(1, 0, 0, 0); // do something reasonable\n\t\t\t\t}\n\n\t\t\t\tskinWeight.setXYZW(i, vector.x, vector.y, vector.z, vector.w);\n\t\t\t}\n\t\t}\n\n\t\tupdateMatrixWorld(force) {\n\t\t\tsuper.updateMatrixWorld(force);\n\n\t\t\tif (this.bindMode === 'attached') {\n\t\t\t\tthis.bindMatrixInverse.copy(this.matrixWorld).invert();\n\t\t\t} else if (this.bindMode === 'detached') {\n\t\t\t\tthis.bindMatrixInverse.copy(this.bindMatrix).invert();\n\t\t\t} else {\n\t\t\t\tconsole.warn('THREE.SkinnedMesh: Unrecognized bindMode: ' + this.bindMode);\n\t\t\t}\n\t\t}\n\n\t\tboneTransform(index, target) {\n\t\t\tconst skeleton = this.skeleton;\n\t\t\tconst geometry = this.geometry;\n\n\t\t\t_skinIndex.fromBufferAttribute(geometry.attributes.skinIndex, index);\n\n\t\t\t_skinWeight.fromBufferAttribute(geometry.attributes.skinWeight, index);\n\n\t\t\t_basePosition.copy(target).applyMatrix4(this.bindMatrix);\n\n\t\t\ttarget.set(0, 0, 0);\n\n\t\t\tfor (let i = 0; i < 4; i++) {\n\t\t\t\tconst weight = _skinWeight.getComponent(i);\n\n\t\t\t\tif (weight !== 0) {\n\t\t\t\t\tconst boneIndex = _skinIndex.getComponent(i);\n\n\t\t\t\t\t_matrix.multiplyMatrices(skeleton.bones[boneIndex].matrixWorld, skeleton.boneInverses[boneIndex]);\n\n\t\t\t\t\ttarget.addScaledVector(_vector$5.copy(_basePosition).applyMatrix4(_matrix), weight);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn target.applyMatrix4(this.bindMatrixInverse);\n\t\t}\n\n\t}\n\n\tSkinnedMesh.prototype.isSkinnedMesh = true;\n\n\tclass Bone extends Object3D {\n\t\tconstructor() {\n\t\t\tsuper();\n\t\t\tthis.type = 'Bone';\n\t\t}\n\n\t}\n\n\tBone.prototype.isBone = true;\n\n\tclass DataTexture extends Texture {\n\t\tconstructor(data = null, width = 1, height = 1, format, type, mapping, wrapS, wrapT, magFilter = NearestFilter, minFilter = NearestFilter, anisotropy, encoding) {\n\t\t\tsuper(null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding);\n\t\t\tthis.image = {\n\t\t\t\tdata: data,\n\t\t\t\twidth: width,\n\t\t\t\theight: height\n\t\t\t};\n\t\t\tthis.magFilter = magFilter;\n\t\t\tthis.minFilter = minFilter;\n\t\t\tthis.generateMipmaps = false;\n\t\t\tthis.flipY = false;\n\t\t\tthis.unpackAlignment = 1;\n\t\t\tthis.needsUpdate = true;\n\t\t}\n\n\t}\n\n\tDataTexture.prototype.isDataTexture = true;\n\n\tconst _offsetMatrix = /*@__PURE__*/new Matrix4();\n\n\tconst _identityMatrix = /*@__PURE__*/new Matrix4();\n\n\tclass Skeleton {\n\t\tconstructor(bones = [], boneInverses = []) {\n\t\t\tthis.uuid = generateUUID();\n\t\t\tthis.bones = bones.slice(0);\n\t\t\tthis.boneInverses = boneInverses;\n\t\t\tthis.boneMatrices = null;\n\t\t\tthis.boneTexture = null;\n\t\t\tthis.boneTextureSize = 0;\n\t\t\tthis.frame = -1;\n\t\t\tthis.init();\n\t\t}\n\n\t\tinit() {\n\t\t\tconst bones = this.bones;\n\t\t\tconst boneInverses = this.boneInverses;\n\t\t\tthis.boneMatrices = new Float32Array(bones.length * 16); // calculate inverse bone matrices if necessary\n\n\t\t\tif (boneInverses.length === 0) {\n\t\t\t\tthis.calculateInverses();\n\t\t\t} else {\n\t\t\t\t// handle special case\n\t\t\t\tif (bones.length !== boneInverses.length) {\n\t\t\t\t\tconsole.warn('THREE.Skeleton: Number of inverse bone matrices does not match amount of bones.');\n\t\t\t\t\tthis.boneInverses = [];\n\n\t\t\t\t\tfor (let i = 0, il = this.bones.length; i < il; i++) {\n\t\t\t\t\t\tthis.boneInverses.push(new Matrix4());\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tcalculateInverses() {\n\t\t\tthis.boneInverses.length = 0;\n\n\t\t\tfor (let i = 0, il = this.bones.length; i < il; i++) {\n\t\t\t\tconst inverse = new Matrix4();\n\n\t\t\t\tif (this.bones[i]) {\n\t\t\t\t\tinverse.copy(this.bones[i].matrixWorld).invert();\n\t\t\t\t}\n\n\t\t\t\tthis.boneInverses.push(inverse);\n\t\t\t}\n\t\t}\n\n\t\tpose() {\n\t\t\t// recover the bind-time world matrices\n\t\t\tfor (let i = 0, il = this.bones.length; i < il; i++) {\n\t\t\t\tconst bone = this.bones[i];\n\n\t\t\t\tif (bone) {\n\t\t\t\t\tbone.matrixWorld.copy(this.boneInverses[i]).invert();\n\t\t\t\t}\n\t\t\t} // compute the local matrices, positions, rotations and scales\n\n\n\t\t\tfor (let i = 0, il = this.bones.length; i < il; i++) {\n\t\t\t\tconst bone = this.bones[i];\n\n\t\t\t\tif (bone) {\n\t\t\t\t\tif (bone.parent && bone.parent.isBone) {\n\t\t\t\t\t\tbone.matrix.copy(bone.parent.matrixWorld).invert();\n\t\t\t\t\t\tbone.matrix.multiply(bone.matrixWorld);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tbone.matrix.copy(bone.matrixWorld);\n\t\t\t\t\t}\n\n\t\t\t\t\tbone.matrix.decompose(bone.position, bone.quaternion, bone.scale);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tupdate() {\n\t\t\tconst bones = this.bones;\n\t\t\tconst boneInverses = this.boneInverses;\n\t\t\tconst boneMatrices = this.boneMatrices;\n\t\t\tconst boneTexture = this.boneTexture; // flatten bone matrices to array\n\n\t\t\tfor (let i = 0, il = bones.length; i < il; i++) {\n\t\t\t\t// compute the offset between the current and the original transform\n\t\t\t\tconst matrix = bones[i] ? bones[i].matrixWorld : _identityMatrix;\n\n\t\t\t\t_offsetMatrix.multiplyMatrices(matrix, boneInverses[i]);\n\n\t\t\t\t_offsetMatrix.toArray(boneMatrices, i * 16);\n\t\t\t}\n\n\t\t\tif (boneTexture !== null) {\n\t\t\t\tboneTexture.needsUpdate = true;\n\t\t\t}\n\t\t}\n\n\t\tclone() {\n\t\t\treturn new Skeleton(this.bones, this.boneInverses);\n\t\t}\n\n\t\tcomputeBoneTexture() {\n\t\t\t// layout (1 matrix = 4 pixels)\n\t\t\t//\t\t\tRGBA RGBA RGBA RGBA (=> column1, column2, column3, column4)\n\t\t\t//\twith\t8x8\tpixel texture max\t 16 bones * 4 pixels =\t(8 * 8)\n\t\t\t//\t\t\t 16x16 pixel texture max\t 64 bones * 4 pixels = (16 * 16)\n\t\t\t//\t\t\t 32x32 pixel texture max\t256 bones * 4 pixels = (32 * 32)\n\t\t\t//\t\t\t 64x64 pixel texture max 1024 bones * 4 pixels = (64 * 64)\n\t\t\tlet size = Math.sqrt(this.bones.length * 4); // 4 pixels needed for 1 matrix\n\n\t\t\tsize = ceilPowerOfTwo(size);\n\t\t\tsize = Math.max(size, 4);\n\t\t\tconst boneMatrices = new Float32Array(size * size * 4); // 4 floats per RGBA pixel\n\n\t\t\tboneMatrices.set(this.boneMatrices); // copy current values\n\n\t\t\tconst boneTexture = new DataTexture(boneMatrices, size, size, RGBAFormat, FloatType);\n\t\t\tthis.boneMatrices = boneMatrices;\n\t\t\tthis.boneTexture = boneTexture;\n\t\t\tthis.boneTextureSize = size;\n\t\t\treturn this;\n\t\t}\n\n\t\tgetBoneByName(name) {\n\t\t\tfor (let i = 0, il = this.bones.length; i < il; i++) {\n\t\t\t\tconst bone = this.bones[i];\n\n\t\t\t\tif (bone.name === name) {\n\t\t\t\t\treturn bone;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn undefined;\n\t\t}\n\n\t\tdispose() {\n\t\t\tif (this.boneTexture !== null) {\n\t\t\t\tthis.boneTexture.dispose();\n\t\t\t\tthis.boneTexture = null;\n\t\t\t}\n\t\t}\n\n\t\tfromJSON(json, bones) {\n\t\t\tthis.uuid = json.uuid;\n\n\t\t\tfor (let i = 0, l = json.bones.length; i < l; i++) {\n\t\t\t\tconst uuid = json.bones[i];\n\t\t\t\tlet bone = bones[uuid];\n\n\t\t\t\tif (bone === undefined) {\n\t\t\t\t\tconsole.warn('THREE.Skeleton: No bone found with UUID:', uuid);\n\t\t\t\t\tbone = new Bone();\n\t\t\t\t}\n\n\t\t\t\tthis.bones.push(bone);\n\t\t\t\tthis.boneInverses.push(new Matrix4().fromArray(json.boneInverses[i]));\n\t\t\t}\n\n\t\t\tthis.init();\n\t\t\treturn this;\n\t\t}\n\n\t\ttoJSON() {\n\t\t\tconst data = {\n\t\t\t\tmetadata: {\n\t\t\t\t\tversion: 4.5,\n\t\t\t\t\ttype: 'Skeleton',\n\t\t\t\t\tgenerator: 'Skeleton.toJSON'\n\t\t\t\t},\n\t\t\t\tbones: [],\n\t\t\t\tboneInverses: []\n\t\t\t};\n\t\t\tdata.uuid = this.uuid;\n\t\t\tconst bones = this.bones;\n\t\t\tconst boneInverses = this.boneInverses;\n\n\t\t\tfor (let i = 0, l = bones.length; i < l; i++) {\n\t\t\t\tconst bone = bones[i];\n\t\t\t\tdata.bones.push(bone.uuid);\n\t\t\t\tconst boneInverse = boneInverses[i];\n\t\t\t\tdata.boneInverses.push(boneInverse.toArray());\n\t\t\t}\n\n\t\t\treturn data;\n\t\t}\n\n\t}\n\n\tclass InstancedBufferAttribute extends BufferAttribute {\n\t\tconstructor(array, itemSize, normalized, meshPerAttribute = 1) {\n\t\t\tif (typeof normalized === 'number') {\n\t\t\t\tmeshPerAttribute = normalized;\n\t\t\t\tnormalized = false;\n\t\t\t\tconsole.error('THREE.InstancedBufferAttribute: The constructor now expects normalized as the third argument.');\n\t\t\t}\n\n\t\t\tsuper(array, itemSize, normalized);\n\t\t\tthis.meshPerAttribute = meshPerAttribute;\n\t\t}\n\n\t\tcopy(source) {\n\t\t\tsuper.copy(source);\n\t\t\tthis.meshPerAttribute = source.meshPerAttribute;\n\t\t\treturn this;\n\t\t}\n\n\t\ttoJSON() {\n\t\t\tconst data = super.toJSON();\n\t\t\tdata.meshPerAttribute = this.meshPerAttribute;\n\t\t\tdata.isInstancedBufferAttribute = true;\n\t\t\treturn data;\n\t\t}\n\n\t}\n\n\tInstancedBufferAttribute.prototype.isInstancedBufferAttribute = true;\n\n\tconst _instanceLocalMatrix = /*@__PURE__*/new Matrix4();\n\n\tconst _instanceWorldMatrix = /*@__PURE__*/new Matrix4();\n\n\tconst _instanceIntersects = [];\n\n\tconst _mesh = /*@__PURE__*/new Mesh();\n\n\tclass InstancedMesh extends Mesh {\n\t\tconstructor(geometry, material, count) {\n\t\t\tsuper(geometry, material);\n\t\t\tthis.instanceMatrix = new InstancedBufferAttribute(new Float32Array(count * 16), 16);\n\t\t\tthis.instanceColor = null;\n\t\t\tthis.count = count;\n\t\t\tthis.frustumCulled = false;\n\t\t}\n\n\t\tcopy(source) {\n\t\t\tsuper.copy(source);\n\t\t\tthis.instanceMatrix.copy(source.instanceMatrix);\n\t\t\tif (source.instanceColor !== null) this.instanceColor = source.instanceColor.clone();\n\t\t\tthis.count = source.count;\n\t\t\treturn this;\n\t\t}\n\n\t\tgetColorAt(index, color) {\n\t\t\tcolor.fromArray(this.instanceColor.array, index * 3);\n\t\t}\n\n\t\tgetMatrixAt(index, matrix) {\n\t\t\tmatrix.fromArray(this.instanceMatrix.array, index * 16);\n\t\t}\n\n\t\traycast(raycaster, intersects) {\n\t\t\tconst matrixWorld = this.matrixWorld;\n\t\t\tconst raycastTimes = this.count;\n\t\t\t_mesh.geometry = this.geometry;\n\t\t\t_mesh.material = this.material;\n\t\t\tif (_mesh.material === undefined) return;\n\n\t\t\tfor (let instanceId = 0; instanceId < raycastTimes; instanceId++) {\n\t\t\t\t// calculate the world matrix for each instance\n\t\t\t\tthis.getMatrixAt(instanceId, _instanceLocalMatrix);\n\n\t\t\t\t_instanceWorldMatrix.multiplyMatrices(matrixWorld, _instanceLocalMatrix); // the mesh represents this single instance\n\n\n\t\t\t\t_mesh.matrixWorld = _instanceWorldMatrix;\n\n\t\t\t\t_mesh.raycast(raycaster, _instanceIntersects); // process the result of raycast\n\n\n\t\t\t\tfor (let i = 0, l = _instanceIntersects.length; i < l; i++) {\n\t\t\t\t\tconst intersect = _instanceIntersects[i];\n\t\t\t\t\tintersect.instanceId = instanceId;\n\t\t\t\t\tintersect.object = this;\n\t\t\t\t\tintersects.push(intersect);\n\t\t\t\t}\n\n\t\t\t\t_instanceIntersects.length = 0;\n\t\t\t}\n\t\t}\n\n\t\tsetColorAt(index, color) {\n\t\t\tif (this.instanceColor === null) {\n\t\t\t\tthis.instanceColor = new InstancedBufferAttribute(new Float32Array(this.instanceMatrix.count * 3), 3);\n\t\t\t}\n\n\t\t\tcolor.toArray(this.instanceColor.array, index * 3);\n\t\t}\n\n\t\tsetMatrixAt(index, matrix) {\n\t\t\tmatrix.toArray(this.instanceMatrix.array, index * 16);\n\t\t}\n\n\t\tupdateMorphTargets() {}\n\n\t\tdispose() {\n\t\t\tthis.dispatchEvent({\n\t\t\t\ttype: 'dispose'\n\t\t\t});\n\t\t}\n\n\t}\n\n\tInstancedMesh.prototype.isInstancedMesh = true;\n\n\t/**\n\t * parameters = {\n\t *\tcolor: <hex>,\n\t *\topacity: <float>,\n\t *\n\t *\tlinewidth: <float>,\n\t *\tlinecap: \"round\",\n\t *\tlinejoin: \"round\"\n\t * }\n\t */\n\n\tclass LineBasicMaterial extends Material {\n\t\tconstructor(parameters) {\n\t\t\tsuper();\n\t\t\tthis.type = 'LineBasicMaterial';\n\t\t\tthis.color = new Color(0xffffff);\n\t\t\tthis.linewidth = 1;\n\t\t\tthis.linecap = 'round';\n\t\t\tthis.linejoin = 'round';\n\t\t\tthis.setValues(parameters);\n\t\t}\n\n\t\tcopy(source) {\n\t\t\tsuper.copy(source);\n\t\t\tthis.color.copy(source.color);\n\t\t\tthis.linewidth = source.linewidth;\n\t\t\tthis.linecap = source.linecap;\n\t\t\tthis.linejoin = source.linejoin;\n\t\t\treturn this;\n\t\t}\n\n\t}\n\n\tLineBasicMaterial.prototype.isLineBasicMaterial = true;\n\n\tconst _start$1 = /*@__PURE__*/new Vector3();\n\n\tconst _end$1 = /*@__PURE__*/new Vector3();\n\n\tconst _inverseMatrix$1 = /*@__PURE__*/new Matrix4();\n\n\tconst _ray$1 = /*@__PURE__*/new Ray();\n\n\tconst _sphere$1 = /*@__PURE__*/new Sphere();\n\n\tclass Line extends Object3D {\n\t\tconstructor(geometry = new BufferGeometry(), material = new LineBasicMaterial()) {\n\t\t\tsuper();\n\t\t\tthis.type = 'Line';\n\t\t\tthis.geometry = geometry;\n\t\t\tthis.material = material;\n\t\t\tthis.updateMorphTargets();\n\t\t}\n\n\t\tcopy(source) {\n\t\t\tsuper.copy(source);\n\t\t\tthis.material = source.material;\n\t\t\tthis.geometry = source.geometry;\n\t\t\treturn this;\n\t\t}\n\n\t\tcomputeLineDistances() {\n\t\t\tconst geometry = this.geometry;\n\n\t\t\tif (geometry.isBufferGeometry) {\n\t\t\t\t// we assume non-indexed geometry\n\t\t\t\tif (geometry.index === null) {\n\t\t\t\t\tconst positionAttribute = geometry.attributes.position;\n\t\t\t\t\tconst lineDistances = [0];\n\n\t\t\t\t\tfor (let i = 1, l = positionAttribute.count; i < l; i++) {\n\t\t\t\t\t\t_start$1.fromBufferAttribute(positionAttribute, i - 1);\n\n\t\t\t\t\t\t_end$1.fromBufferAttribute(positionAttribute, i);\n\n\t\t\t\t\t\tlineDistances[i] = lineDistances[i - 1];\n\t\t\t\t\t\tlineDistances[i] += _start$1.distanceTo(_end$1);\n\t\t\t\t\t}\n\n\t\t\t\t\tgeometry.setAttribute('lineDistance', new Float32BufferAttribute(lineDistances, 1));\n\t\t\t\t} else {\n\t\t\t\t\tconsole.warn('THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.');\n\t\t\t\t}\n\t\t\t} else if (geometry.isGeometry) {\n\t\t\t\tconsole.error('THREE.Line.computeLineDistances() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.');\n\t\t\t}\n\n\t\t\treturn this;\n\t\t}\n\n\t\traycast(raycaster, intersects) {\n\t\t\tconst geometry = this.geometry;\n\t\t\tconst matrixWorld = this.matrixWorld;\n\t\t\tconst threshold = raycaster.params.Line.threshold;\n\t\t\tconst drawRange = geometry.drawRange; // Checking boundingSphere distance to ray\n\n\t\t\tif (geometry.boundingSphere === null) geometry.computeBoundingSphere();\n\n\t\t\t_sphere$1.copy(geometry.boundingSphere);\n\n\t\t\t_sphere$1.applyMatrix4(matrixWorld);\n\n\t\t\t_sphere$1.radius += threshold;\n\t\t\tif (raycaster.ray.intersectsSphere(_sphere$1) === false) return; //\n\n\t\t\t_inverseMatrix$1.copy(matrixWorld).invert();\n\n\t\t\t_ray$1.copy(raycaster.ray).applyMatrix4(_inverseMatrix$1);\n\n\t\t\tconst localThreshold = threshold / ((this.scale.x + this.scale.y + this.scale.z) / 3);\n\t\t\tconst localThresholdSq = localThreshold * localThreshold;\n\t\t\tconst vStart = new Vector3();\n\t\t\tconst vEnd = new Vector3();\n\t\t\tconst interSegment = new Vector3();\n\t\t\tconst interRay = new Vector3();\n\t\t\tconst step = this.isLineSegments ? 2 : 1;\n\n\t\t\tif (geometry.isBufferGeometry) {\n\t\t\t\tconst index = geometry.index;\n\t\t\t\tconst attributes = geometry.attributes;\n\t\t\t\tconst positionAttribute = attributes.position;\n\n\t\t\t\tif (index !== null) {\n\t\t\t\t\tconst start = Math.max(0, drawRange.start);\n\t\t\t\t\tconst end = Math.min(index.count, drawRange.start + drawRange.count);\n\n\t\t\t\t\tfor (let i = start, l = end - 1; i < l; i += step) {\n\t\t\t\t\t\tconst a = index.getX(i);\n\t\t\t\t\t\tconst b = index.getX(i + 1);\n\t\t\t\t\t\tvStart.fromBufferAttribute(positionAttribute, a);\n\t\t\t\t\t\tvEnd.fromBufferAttribute(positionAttribute, b);\n\n\t\t\t\t\t\tconst distSq = _ray$1.distanceSqToSegment(vStart, vEnd, interRay, interSegment);\n\n\t\t\t\t\t\tif (distSq > localThresholdSq) continue;\n\t\t\t\t\t\tinterRay.applyMatrix4(this.matrixWorld); //Move back to world space for distance calculation\n\n\t\t\t\t\t\tconst distance = raycaster.ray.origin.distanceTo(interRay);\n\t\t\t\t\t\tif (distance < raycaster.near || distance > raycaster.far) continue;\n\t\t\t\t\t\tintersects.push({\n\t\t\t\t\t\t\tdistance: distance,\n\t\t\t\t\t\t\t// What do we want? intersection point on the ray or on the segment??\n\t\t\t\t\t\t\t// point: raycaster.ray.at( distance ),\n\t\t\t\t\t\t\tpoint: interSegment.clone().applyMatrix4(this.matrixWorld),\n\t\t\t\t\t\t\tindex: i,\n\t\t\t\t\t\t\tface: null,\n\t\t\t\t\t\t\tfaceIndex: null,\n\t\t\t\t\t\t\tobject: this\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tconst start = Math.max(0, drawRange.start);\n\t\t\t\t\tconst end = Math.min(positionAttribute.count, drawRange.start + drawRange.count);\n\n\t\t\t\t\tfor (let i = start, l = end - 1; i < l; i += step) {\n\t\t\t\t\t\tvStart.fromBufferAttribute(positionAttribute, i);\n\t\t\t\t\t\tvEnd.fromBufferAttribute(positionAttribute, i + 1);\n\n\t\t\t\t\t\tconst distSq = _ray$1.distanceSqToSegment(vStart, vEnd, interRay, interSegment);\n\n\t\t\t\t\t\tif (distSq > localThresholdSq) continue;\n\t\t\t\t\t\tinterRay.applyMatrix4(this.matrixWorld); //Move back to world space for distance calculation\n\n\t\t\t\t\t\tconst distance = raycaster.ray.origin.distanceTo(interRay);\n\t\t\t\t\t\tif (distance < raycaster.near || distance > raycaster.far) continue;\n\t\t\t\t\t\tintersects.push({\n\t\t\t\t\t\t\tdistance: distance,\n\t\t\t\t\t\t\t// What do we want? intersection point on the ray or on the segment??\n\t\t\t\t\t\t\t// point: raycaster.ray.at( distance ),\n\t\t\t\t\t\t\tpoint: interSegment.clone().applyMatrix4(this.matrixWorld),\n\t\t\t\t\t\t\tindex: i,\n\t\t\t\t\t\t\tface: null,\n\t\t\t\t\t\t\tfaceIndex: null,\n\t\t\t\t\t\t\tobject: this\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (geometry.isGeometry) {\n\t\t\t\tconsole.error('THREE.Line.raycast() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.');\n\t\t\t}\n\t\t}\n\n\t\tupdateMorphTargets() {\n\t\t\tconst geometry = this.geometry;\n\n\t\t\tif (geometry.isBufferGeometry) {\n\t\t\t\tconst morphAttributes = geometry.morphAttributes;\n\t\t\t\tconst keys = Object.keys(morphAttributes);\n\n\t\t\t\tif (keys.length > 0) {\n\t\t\t\t\tconst morphAttribute = morphAttributes[keys[0]];\n\n\t\t\t\t\tif (morphAttribute !== undefined) {\n\t\t\t\t\t\tthis.morphTargetInfluences = [];\n\t\t\t\t\t\tthis.morphTargetDictionary = {};\n\n\t\t\t\t\t\tfor (let m = 0, ml = morphAttribute.length; m < ml; m++) {\n\t\t\t\t\t\t\tconst name = morphAttribute[m].name || String(m);\n\t\t\t\t\t\t\tthis.morphTargetInfluences.push(0);\n\t\t\t\t\t\t\tthis.morphTargetDictionary[name] = m;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tconst morphTargets = geometry.morphTargets;\n\n\t\t\t\tif (morphTargets !== undefined && morphTargets.length > 0) {\n\t\t\t\t\tconsole.error('THREE.Line.updateMorphTargets() does not support THREE.Geometry. Use THREE.BufferGeometry instead.');\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t}\n\n\tLine.prototype.isLine = true;\n\n\tconst _start = /*@__PURE__*/new Vector3();\n\n\tconst _end = /*@__PURE__*/new Vector3();\n\n\tclass LineSegments extends Line {\n\t\tconstructor(geometry, material) {\n\t\t\tsuper(geometry, material);\n\t\t\tthis.type = 'LineSegments';\n\t\t}\n\n\t\tcomputeLineDistances() {\n\t\t\tconst geometry = this.geometry;\n\n\t\t\tif (geometry.isBufferGeometry) {\n\t\t\t\t// we assume non-indexed geometry\n\t\t\t\tif (geometry.index === null) {\n\t\t\t\t\tconst positionAttribute = geometry.attributes.position;\n\t\t\t\t\tconst lineDistances = [];\n\n\t\t\t\t\tfor (let i = 0, l = positionAttribute.count; i < l; i += 2) {\n\t\t\t\t\t\t_start.fromBufferAttribute(positionAttribute, i);\n\n\t\t\t\t\t\t_end.fromBufferAttribute(positionAttribute, i + 1);\n\n\t\t\t\t\t\tlineDistances[i] = i === 0 ? 0 : lineDistances[i - 1];\n\t\t\t\t\t\tlineDistances[i + 1] = lineDistances[i] + _start.distanceTo(_end);\n\t\t\t\t\t}\n\n\t\t\t\t\tgeometry.setAttribute('lineDistance', new Float32BufferAttribute(lineDistances, 1));\n\t\t\t\t} else {\n\t\t\t\t\tconsole.warn('THREE.LineSegments.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.');\n\t\t\t\t}\n\t\t\t} else if (geometry.isGeometry) {\n\t\t\t\tconsole.error('THREE.LineSegments.computeLineDistances() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.');\n\t\t\t}\n\n\t\t\treturn this;\n\t\t}\n\n\t}\n\n\tLineSegments.prototype.isLineSegments = true;\n\n\tclass LineLoop extends Line {\n\t\tconstructor(geometry, material) {\n\t\t\tsuper(geometry, material);\n\t\t\tthis.type = 'LineLoop';\n\t\t}\n\n\t}\n\n\tLineLoop.prototype.isLineLoop = true;\n\n\t/**\n\t * parameters = {\n\t *\tcolor: <hex>,\n\t *\topacity: <float>,\n\t *\tmap: new THREE.Texture( <Image> ),\n\t *\talphaMap: new THREE.Texture( <Image> ),\n\t *\n\t *\tsize: <float>,\n\t *\tsizeAttenuation: <bool>\n\t *\n\t * }\n\t */\n\n\tclass PointsMaterial extends Material {\n\t\tconstructor(parameters) {\n\t\t\tsuper();\n\t\t\tthis.type = 'PointsMaterial';\n\t\t\tthis.color = new Color(0xffffff);\n\t\t\tthis.map = null;\n\t\t\tthis.alphaMap = null;\n\t\t\tthis.size = 1;\n\t\t\tthis.sizeAttenuation = true;\n\t\t\tthis.setValues(parameters);\n\t\t}\n\n\t\tcopy(source) {\n\t\t\tsuper.copy(source);\n\t\t\tthis.color.copy(source.color);\n\t\t\tthis.map = source.map;\n\t\t\tthis.alphaMap = source.alphaMap;\n\t\t\tthis.size = source.size;\n\t\t\tthis.sizeAttenuation = source.sizeAttenuation;\n\t\t\treturn this;\n\t\t}\n\n\t}\n\n\tPointsMaterial.prototype.isPointsMaterial = true;\n\n\tconst _inverseMatrix = /*@__PURE__*/new Matrix4();\n\n\tconst _ray = /*@__PURE__*/new Ray();\n\n\tconst _sphere = /*@__PURE__*/new Sphere();\n\n\tconst _position$2 = /*@__PURE__*/new Vector3();\n\n\tclass Points extends Object3D {\n\t\tconstructor(geometry = new BufferGeometry(), material = new PointsMaterial()) {\n\t\t\tsuper();\n\t\t\tthis.type = 'Points';\n\t\t\tthis.geometry = geometry;\n\t\t\tthis.material = material;\n\t\t\tthis.updateMorphTargets();\n\t\t}\n\n\t\tcopy(source) {\n\t\t\tsuper.copy(source);\n\t\t\tthis.material = source.material;\n\t\t\tthis.geometry = source.geometry;\n\t\t\treturn this;\n\t\t}\n\n\t\traycast(raycaster, intersects) {\n\t\t\tconst geometry = this.geometry;\n\t\t\tconst matrixWorld = this.matrixWorld;\n\t\t\tconst threshold = raycaster.params.Points.threshold;\n\t\t\tconst drawRange = geometry.drawRange; // Checking boundingSphere distance to ray\n\n\t\t\tif (geometry.boundingSphere === null) geometry.computeBoundingSphere();\n\n\t\t\t_sphere.copy(geometry.boundingSphere);\n\n\t\t\t_sphere.applyMatrix4(matrixWorld);\n\n\t\t\t_sphere.radius += threshold;\n\t\t\tif (raycaster.ray.intersectsSphere(_sphere) === false) return; //\n\n\t\t\t_inverseMatrix.copy(matrixWorld).invert();\n\n\t\t\t_ray.copy(raycaster.ray).applyMatrix4(_inverseMatrix);\n\n\t\t\tconst localThreshold = threshold / ((this.scale.x + this.scale.y + this.scale.z) / 3);\n\t\t\tconst localThresholdSq = localThreshold * localThreshold;\n\n\t\t\tif (geometry.isBufferGeometry) {\n\t\t\t\tconst index = geometry.index;\n\t\t\t\tconst attributes = geometry.attributes;\n\t\t\t\tconst positionAttribute = attributes.position;\n\n\t\t\t\tif (index !== null) {\n\t\t\t\t\tconst start = Math.max(0, drawRange.start);\n\t\t\t\t\tconst end = Math.min(index.count, drawRange.start + drawRange.count);\n\n\t\t\t\t\tfor (let i = start, il = end; i < il; i++) {\n\t\t\t\t\t\tconst a = index.getX(i);\n\n\t\t\t\t\t\t_position$2.fromBufferAttribute(positionAttribute, a);\n\n\t\t\t\t\t\ttestPoint(_position$2, a, localThresholdSq, matrixWorld, raycaster, intersects, this);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tconst start = Math.max(0, drawRange.start);\n\t\t\t\t\tconst end = Math.min(positionAttribute.count, drawRange.start + drawRange.count);\n\n\t\t\t\t\tfor (let i = start, l = end; i < l; i++) {\n\t\t\t\t\t\t_position$2.fromBufferAttribute(positionAttribute, i);\n\n\t\t\t\t\t\ttestPoint(_position$2, i, localThresholdSq, matrixWorld, raycaster, intersects, this);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tconsole.error('THREE.Points.raycast() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.');\n\t\t\t}\n\t\t}\n\n\t\tupdateMorphTargets() {\n\t\t\tconst geometry = this.geometry;\n\n\t\t\tif (geometry.isBufferGeometry) {\n\t\t\t\tconst morphAttributes = geometry.morphAttributes;\n\t\t\t\tconst keys = Object.keys(morphAttributes);\n\n\t\t\t\tif (keys.length > 0) {\n\t\t\t\t\tconst morphAttribute = morphAttributes[keys[0]];\n\n\t\t\t\t\tif (morphAttribute !== undefined) {\n\t\t\t\t\t\tthis.morphTargetInfluences = [];\n\t\t\t\t\t\tthis.morphTargetDictionary = {};\n\n\t\t\t\t\t\tfor (let m = 0, ml = morphAttribute.length; m < ml; m++) {\n\t\t\t\t\t\t\tconst name = morphAttribute[m].name || String(m);\n\t\t\t\t\t\t\tthis.morphTargetInfluences.push(0);\n\t\t\t\t\t\t\tthis.morphTargetDictionary[name] = m;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tconst morphTargets = geometry.morphTargets;\n\n\t\t\t\tif (morphTargets !== undefined && morphTargets.length > 0) {\n\t\t\t\t\tconsole.error('THREE.Points.updateMorphTargets() does not support THREE.Geometry. Use THREE.BufferGeometry instead.');\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t}\n\n\tPoints.prototype.isPoints = true;\n\n\tfunction testPoint(point, index, localThresholdSq, matrixWorld, raycaster, intersects, object) {\n\t\tconst rayPointDistanceSq = _ray.distanceSqToPoint(point);\n\n\t\tif (rayPointDistanceSq < localThresholdSq) {\n\t\t\tconst intersectPoint = new Vector3();\n\n\t\t\t_ray.closestPointToPoint(point, intersectPoint);\n\n\t\t\tintersectPoint.applyMatrix4(matrixWorld);\n\t\t\tconst distance = raycaster.ray.origin.distanceTo(intersectPoint);\n\t\t\tif (distance < raycaster.near || distance > raycaster.far) return;\n\t\t\tintersects.push({\n\t\t\t\tdistance: distance,\n\t\t\t\tdistanceToRay: Math.sqrt(rayPointDistanceSq),\n\t\t\t\tpoint: intersectPoint,\n\t\t\t\tindex: index,\n\t\t\t\tface: null,\n\t\t\t\tobject: object\n\t\t\t});\n\t\t}\n\t}\n\n\tclass VideoTexture extends Texture {\n\t\tconstructor(video, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy) {\n\t\t\tsuper(video, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy);\n\t\t\tthis.format = format !== undefined ? format : RGBFormat;\n\t\t\tthis.minFilter = minFilter !== undefined ? minFilter : LinearFilter;\n\t\t\tthis.magFilter = magFilter !== undefined ? magFilter : LinearFilter;\n\t\t\tthis.generateMipmaps = false;\n\t\t\tconst scope = this;\n\n\t\t\tfunction updateVideo() {\n\t\t\t\tscope.needsUpdate = true;\n\t\t\t\tvideo.requestVideoFrameCallback(updateVideo);\n\t\t\t}\n\n\t\t\tif ('requestVideoFrameCallback' in video) {\n\t\t\t\tvideo.requestVideoFrameCallback(updateVideo);\n\t\t\t}\n\t\t}\n\n\t\tclone() {\n\t\t\treturn new this.constructor(this.image).copy(this);\n\t\t}\n\n\t\tupdate() {\n\t\t\tconst video = this.image;\n\t\t\tconst hasVideoFrameCallback = ('requestVideoFrameCallback' in video);\n\n\t\t\tif (hasVideoFrameCallback === false && video.readyState >= video.HAVE_CURRENT_DATA) {\n\t\t\t\tthis.needsUpdate = true;\n\t\t\t}\n\t\t}\n\n\t}\n\n\tVideoTexture.prototype.isVideoTexture = true;\n\n\tclass CompressedTexture extends Texture {\n\t\tconstructor(mipmaps, width, height, format, type, mapping, wrapS, wrapT, magFilter, minFilter, anisotropy, encoding) {\n\t\t\tsuper(null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding);\n\t\t\tthis.image = {\n\t\t\t\twidth: width,\n\t\t\t\theight: height\n\t\t\t};\n\t\t\tthis.mipmaps = mipmaps; // no flipping for cube textures\n\t\t\t// (also flipping doesn't work for compressed textures )\n\n\t\t\tthis.flipY = false; // can't generate mipmaps for compressed textures\n\t\t\t// mips must be embedded in DDS files\n\n\t\t\tthis.generateMipmaps = false;\n\t\t}\n\n\t}\n\n\tCompressedTexture.prototype.isCompressedTexture = true;\n\n\tclass CanvasTexture extends Texture {\n\t\tconstructor(canvas, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy) {\n\t\t\tsuper(canvas, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy);\n\t\t\tthis.needsUpdate = true;\n\t\t}\n\n\t}\n\n\tCanvasTexture.prototype.isCanvasTexture = true;\n\n\tclass DepthTexture extends Texture {\n\t\tconstructor(width, height, type, mapping, wrapS, wrapT, magFilter, minFilter, anisotropy, format) {\n\t\t\tformat = format !== undefined ? format : DepthFormat;\n\n\t\t\tif (format !== DepthFormat && format !== DepthStencilFormat) {\n\t\t\t\tthrow new Error('DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat');\n\t\t\t}\n\n\t\t\tif (type === undefined && format === DepthFormat) type = UnsignedShortType;\n\t\t\tif (type === undefined && format === DepthStencilFormat) type = UnsignedInt248Type;\n\t\t\tsuper(null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy);\n\t\t\tthis.image = {\n\t\t\t\twidth: width,\n\t\t\t\theight: height\n\t\t\t};\n\t\t\tthis.magFilter = magFilter !== undefined ? magFilter : NearestFilter;\n\t\t\tthis.minFilter = minFilter !== undefined ? minFilter : NearestFilter;\n\t\t\tthis.flipY = false;\n\t\t\tthis.generateMipmaps = false;\n\t\t}\n\n\t}\n\n\tDepthTexture.prototype.isDepthTexture = true;\n\n\tclass CircleGeometry extends BufferGeometry {\n\t\tconstructor(radius = 1, segments = 8, thetaStart = 0, thetaLength = Math.PI * 2) {\n\t\t\tsuper();\n\t\t\tthis.type = 'CircleGeometry';\n\t\t\tthis.parameters = {\n\t\t\t\tradius: radius,\n\t\t\t\tsegments: segments,\n\t\t\t\tthetaStart: thetaStart,\n\t\t\t\tthetaLength: thetaLength\n\t\t\t};\n\t\t\tsegments = Math.max(3, segments); // buffers\n\n\t\t\tconst indices = [];\n\t\t\tconst vertices = [];\n\t\t\tconst normals = [];\n\t\t\tconst uvs = []; // helper variables\n\n\t\t\tconst vertex = new Vector3();\n\t\t\tconst uv = new Vector2(); // center point\n\n\t\t\tvertices.push(0, 0, 0);\n\t\t\tnormals.push(0, 0, 1);\n\t\t\tuvs.push(0.5, 0.5);\n\n\t\t\tfor (let s = 0, i = 3; s <= segments; s++, i += 3) {\n\t\t\t\tconst segment = thetaStart + s / segments * thetaLength; // vertex\n\n\t\t\t\tvertex.x = radius * Math.cos(segment);\n\t\t\t\tvertex.y = radius * Math.sin(segment);\n\t\t\t\tvertices.push(vertex.x, vertex.y, vertex.z); // normal\n\n\t\t\t\tnormals.push(0, 0, 1); // uvs\n\n\t\t\t\tuv.x = (vertices[i] / radius + 1) / 2;\n\t\t\t\tuv.y = (vertices[i + 1] / radius + 1) / 2;\n\t\t\t\tuvs.push(uv.x, uv.y);\n\t\t\t} // indices\n\n\n\t\t\tfor (let i = 1; i <= segments; i++) {\n\t\t\t\tindices.push(i, i + 1, 0);\n\t\t\t} // build geometry\n\n\n\t\t\tthis.setIndex(indices);\n\t\t\tthis.setAttribute('position', new Float32BufferAttribute(vertices, 3));\n\t\t\tthis.setAttribute('normal', new Float32BufferAttribute(normals, 3));\n\t\t\tthis.setAttribute('uv', new Float32BufferAttribute(uvs, 2));\n\t\t}\n\n\t\tstatic fromJSON(data) {\n\t\t\treturn new CircleGeometry(data.radius, data.segments, data.thetaStart, data.thetaLength);\n\t\t}\n\n\t}\n\n\tclass CylinderGeometry extends BufferGeometry {\n\t\tconstructor(radiusTop = 1, radiusBottom = 1, height = 1, radialSegments = 8, heightSegments = 1, openEnded = false, thetaStart = 0, thetaLength = Math.PI * 2) {\n\t\t\tsuper();\n\t\t\tthis.type = 'CylinderGeometry';\n\t\t\tthis.parameters = {\n\t\t\t\tradiusTop: radiusTop,\n\t\t\t\tradiusBottom: radiusBottom,\n\t\t\t\theight: height,\n\t\t\t\tradialSegments: radialSegments,\n\t\t\t\theightSegments: heightSegments,\n\t\t\t\topenEnded: openEnded,\n\t\t\t\tthetaStart: thetaStart,\n\t\t\t\tthetaLength: thetaLength\n\t\t\t};\n\t\t\tconst scope = this;\n\t\t\tradialSegments = Math.floor(radialSegments);\n\t\t\theightSegments = Math.floor(heightSegments); // buffers\n\n\t\t\tconst indices = [];\n\t\t\tconst vertices = [];\n\t\t\tconst normals = [];\n\t\t\tconst uvs = []; // helper variables\n\n\t\t\tlet index = 0;\n\t\t\tconst indexArray = [];\n\t\t\tconst halfHeight = height / 2;\n\t\t\tlet groupStart = 0; // generate geometry\n\n\t\t\tgenerateTorso();\n\n\t\t\tif (openEnded === false) {\n\t\t\t\tif (radiusTop > 0) generateCap(true);\n\t\t\t\tif (radiusBottom > 0) generateCap(false);\n\t\t\t} // build geometry\n\n\n\t\t\tthis.setIndex(indices);\n\t\t\tthis.setAttribute('position', new Float32BufferAttribute(vertices, 3));\n\t\t\tthis.setAttribute('normal', new Float32BufferAttribute(normals, 3));\n\t\t\tthis.setAttribute('uv', new Float32BufferAttribute(uvs, 2));\n\n\t\t\tfunction generateTorso() {\n\t\t\t\tconst normal = new Vector3();\n\t\t\t\tconst vertex = new Vector3();\n\t\t\t\tlet groupCount = 0; // this will be used to calculate the normal\n\n\t\t\t\tconst slope = (radiusBottom - radiusTop) / height; // generate vertices, normals and uvs\n\n\t\t\t\tfor (let y = 0; y <= heightSegments; y++) {\n\t\t\t\t\tconst indexRow = [];\n\t\t\t\t\tconst v = y / heightSegments; // calculate the radius of the current row\n\n\t\t\t\t\tconst radius = v * (radiusBottom - radiusTop) + radiusTop;\n\n\t\t\t\t\tfor (let x = 0; x <= radialSegments; x++) {\n\t\t\t\t\t\tconst u = x / radialSegments;\n\t\t\t\t\t\tconst theta = u * thetaLength + thetaStart;\n\t\t\t\t\t\tconst sinTheta = Math.sin(theta);\n\t\t\t\t\t\tconst cosTheta = Math.cos(theta); // vertex\n\n\t\t\t\t\t\tvertex.x = radius * sinTheta;\n\t\t\t\t\t\tvertex.y = -v * height + halfHeight;\n\t\t\t\t\t\tvertex.z = radius * cosTheta;\n\t\t\t\t\t\tvertices.push(vertex.x, vertex.y, vertex.z); // normal\n\n\t\t\t\t\t\tnormal.set(sinTheta, slope, cosTheta).normalize();\n\t\t\t\t\t\tnormals.push(normal.x, normal.y, normal.z); // uv\n\n\t\t\t\t\t\tuvs.push(u, 1 - v); // save index of vertex in respective row\n\n\t\t\t\t\t\tindexRow.push(index++);\n\t\t\t\t\t} // now save vertices of the row in our index array\n\n\n\t\t\t\t\tindexArray.push(indexRow);\n\t\t\t\t} // generate indices\n\n\n\t\t\t\tfor (let x = 0; x < radialSegments; x++) {\n\t\t\t\t\tfor (let y = 0; y < heightSegments; y++) {\n\t\t\t\t\t\t// we use the index array to access the correct indices\n\t\t\t\t\t\tconst a = indexArray[y][x];\n\t\t\t\t\t\tconst b = indexArray[y + 1][x];\n\t\t\t\t\t\tconst c = indexArray[y + 1][x + 1];\n\t\t\t\t\t\tconst d = indexArray[y][x + 1]; // faces\n\n\t\t\t\t\t\tindices.push(a, b, d);\n\t\t\t\t\t\tindices.push(b, c, d); // update group counter\n\n\t\t\t\t\t\tgroupCount += 6;\n\t\t\t\t\t}\n\t\t\t\t} // add a group to the geometry. this will ensure multi material support\n\n\n\t\t\t\tscope.addGroup(groupStart, groupCount, 0); // calculate new start value for groups\n\n\t\t\t\tgroupStart += groupCount;\n\t\t\t}\n\n\t\t\tfunction generateCap(top) {\n\t\t\t\t// save the index of the first center vertex\n\t\t\t\tconst centerIndexStart = index;\n\t\t\t\tconst uv = new Vector2();\n\t\t\t\tconst vertex = new Vector3();\n\t\t\t\tlet groupCount = 0;\n\t\t\t\tconst radius = top === true ? radiusTop : radiusBottom;\n\t\t\t\tconst sign = top === true ? 1 : -1; // first we generate the center vertex data of the cap.\n\t\t\t\t// because the geometry needs one set of uvs per face,\n\t\t\t\t// we must generate a center vertex per face/segment\n\n\t\t\t\tfor (let x = 1; x <= radialSegments; x++) {\n\t\t\t\t\t// vertex\n\t\t\t\t\tvertices.push(0, halfHeight * sign, 0); // normal\n\n\t\t\t\t\tnormals.push(0, sign, 0); // uv\n\n\t\t\t\t\tuvs.push(0.5, 0.5); // increase index\n\n\t\t\t\t\tindex++;\n\t\t\t\t} // save the index of the last center vertex\n\n\n\t\t\t\tconst centerIndexEnd = index; // now we generate the surrounding vertices, normals and uvs\n\n\t\t\t\tfor (let x = 0; x <= radialSegments; x++) {\n\t\t\t\t\tconst u = x / radialSegments;\n\t\t\t\t\tconst theta = u * thetaLength + thetaStart;\n\t\t\t\t\tconst cosTheta = Math.cos(theta);\n\t\t\t\t\tconst sinTheta = Math.sin(theta); // vertex\n\n\t\t\t\t\tvertex.x = radius * sinTheta;\n\t\t\t\t\tvertex.y = halfHeight * sign;\n\t\t\t\t\tvertex.z = radius * cosTheta;\n\t\t\t\t\tvertices.push(vertex.x, vertex.y, vertex.z); // normal\n\n\t\t\t\t\tnormals.push(0, sign, 0); // uv\n\n\t\t\t\t\tuv.x = cosTheta * 0.5 + 0.5;\n\t\t\t\t\tuv.y = sinTheta * 0.5 * sign + 0.5;\n\t\t\t\t\tuvs.push(uv.x, uv.y); // increase index\n\n\t\t\t\t\tindex++;\n\t\t\t\t} // generate indices\n\n\n\t\t\t\tfor (let x = 0; x < radialSegments; x++) {\n\t\t\t\t\tconst c = centerIndexStart + x;\n\t\t\t\t\tconst i = centerIndexEnd + x;\n\n\t\t\t\t\tif (top === true) {\n\t\t\t\t\t\t// face top\n\t\t\t\t\t\tindices.push(i, i + 1, c);\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// face bottom\n\t\t\t\t\t\tindices.push(i + 1, i, c);\n\t\t\t\t\t}\n\n\t\t\t\t\tgroupCount += 3;\n\t\t\t\t} // add a group to the geometry. this will ensure multi material support\n\n\n\t\t\t\tscope.addGroup(groupStart, groupCount, top === true ? 1 : 2); // calculate new start value for groups\n\n\t\t\t\tgroupStart += groupCount;\n\t\t\t}\n\t\t}\n\n\t\tstatic fromJSON(data) {\n\t\t\treturn new CylinderGeometry(data.radiusTop, data.radiusBottom, data.height, data.radialSegments, data.heightSegments, data.openEnded, data.thetaStart, data.thetaLength);\n\t\t}\n\n\t}\n\n\tclass ConeGeometry extends CylinderGeometry {\n\t\tconstructor(radius = 1, height = 1, radialSegments = 8, heightSegments = 1, openEnded = false, thetaStart = 0, thetaLength = Math.PI * 2) {\n\t\t\tsuper(0, radius, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength);\n\t\t\tthis.type = 'ConeGeometry';\n\t\t\tthis.parameters = {\n\t\t\t\tradius: radius,\n\t\t\t\theight: height,\n\t\t\t\tradialSegments: radialSegments,\n\t\t\t\theightSegments: heightSegments,\n\t\t\t\topenEnded: openEnded,\n\t\t\t\tthetaStart: thetaStart,\n\t\t\t\tthetaLength: thetaLength\n\t\t\t};\n\t\t}\n\n\t\tstatic fromJSON(data) {\n\t\t\treturn new ConeGeometry(data.radius, data.height, data.radialSegments, data.heightSegments, data.openEnded, data.thetaStart, data.thetaLength);\n\t\t}\n\n\t}\n\n\tclass PolyhedronGeometry extends BufferGeometry {\n\t\tconstructor(vertices = [], indices = [], radius = 1, detail = 0) {\n\t\t\tsuper();\n\t\t\tthis.type = 'PolyhedronGeometry';\n\t\t\tthis.parameters = {\n\t\t\t\tvertices: vertices,\n\t\t\t\tindices: indices,\n\t\t\t\tradius: radius,\n\t\t\t\tdetail: detail\n\t\t\t}; // default buffer data\n\n\t\t\tconst vertexBuffer = [];\n\t\t\tconst uvBuffer = []; // the subdivision creates the vertex buffer data\n\n\t\t\tsubdivide(detail); // all vertices should lie on a conceptual sphere with a given radius\n\n\t\t\tapplyRadius(radius); // finally, create the uv data\n\n\t\t\tgenerateUVs(); // build non-indexed geometry\n\n\t\t\tthis.setAttribute('position', new Float32BufferAttribute(vertexBuffer, 3));\n\t\t\tthis.setAttribute('normal', new Float32BufferAttribute(vertexBuffer.slice(), 3));\n\t\t\tthis.setAttribute('uv', new Float32BufferAttribute(uvBuffer, 2));\n\n\t\t\tif (detail === 0) {\n\t\t\t\tthis.computeVertexNormals(); // flat normals\n\t\t\t} else {\n\t\t\t\tthis.normalizeNormals(); // smooth normals\n\t\t\t} // helper functions\n\n\n\t\t\tfunction subdivide(detail) {\n\t\t\t\tconst a = new Vector3();\n\t\t\t\tconst b = new Vector3();\n\t\t\t\tconst c = new Vector3(); // iterate over all faces and apply a subdivison with the given detail value\n\n\t\t\t\tfor (let i = 0; i < indices.length; i += 3) {\n\t\t\t\t\t// get the vertices of the face\n\t\t\t\t\tgetVertexByIndex(indices[i + 0], a);\n\t\t\t\t\tgetVertexByIndex(indices[i + 1], b);\n\t\t\t\t\tgetVertexByIndex(indices[i + 2], c); // perform subdivision\n\n\t\t\t\t\tsubdivideFace(a, b, c, detail);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfunction subdivideFace(a, b, c, detail) {\n\t\t\t\tconst cols = detail + 1; // we use this multidimensional array as a data structure for creating the subdivision\n\n\t\t\t\tconst v = []; // construct all of the vertices for this subdivision\n\n\t\t\t\tfor (let i = 0; i <= cols; i++) {\n\t\t\t\t\tv[i] = [];\n\t\t\t\t\tconst aj = a.clone().lerp(c, i / cols);\n\t\t\t\t\tconst bj = b.clone().lerp(c, i / cols);\n\t\t\t\t\tconst rows = cols - i;\n\n\t\t\t\t\tfor (let j = 0; j <= rows; j++) {\n\t\t\t\t\t\tif (j === 0 && i === cols) {\n\t\t\t\t\t\t\tv[i][j] = aj;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tv[i][j] = aj.clone().lerp(bj, j / rows);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} // construct all of the faces\n\n\n\t\t\t\tfor (let i = 0; i < cols; i++) {\n\t\t\t\t\tfor (let j = 0; j < 2 * (cols - i) - 1; j++) {\n\t\t\t\t\t\tconst k = Math.floor(j / 2);\n\n\t\t\t\t\t\tif (j % 2 === 0) {\n\t\t\t\t\t\t\tpushVertex(v[i][k + 1]);\n\t\t\t\t\t\t\tpushVertex(v[i + 1][k]);\n\t\t\t\t\t\t\tpushVertex(v[i][k]);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tpushVertex(v[i][k + 1]);\n\t\t\t\t\t\t\tpushVertex(v[i + 1][k + 1]);\n\t\t\t\t\t\t\tpushVertex(v[i + 1][k]);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfunction applyRadius(radius) {\n\t\t\t\tconst vertex = new Vector3(); // iterate over the entire buffer and apply the radius to each vertex\n\n\t\t\t\tfor (let i = 0; i < vertexBuffer.length; i += 3) {\n\t\t\t\t\tvertex.x = vertexBuffer[i + 0];\n\t\t\t\t\tvertex.y = vertexBuffer[i + 1];\n\t\t\t\t\tvertex.z = vertexBuffer[i + 2];\n\t\t\t\t\tvertex.normalize().multiplyScalar(radius);\n\t\t\t\t\tvertexBuffer[i + 0] = vertex.x;\n\t\t\t\t\tvertexBuffer[i + 1] = vertex.y;\n\t\t\t\t\tvertexBuffer[i + 2] = vertex.z;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfunction generateUVs() {\n\t\t\t\tconst vertex = new Vector3();\n\n\t\t\t\tfor (let i = 0; i < vertexBuffer.length; i += 3) {\n\t\t\t\t\tvertex.x = vertexBuffer[i + 0];\n\t\t\t\t\tvertex.y = vertexBuffer[i + 1];\n\t\t\t\t\tvertex.z = vertexBuffer[i + 2];\n\t\t\t\t\tconst u = azimuth(vertex) / 2 / Math.PI + 0.5;\n\t\t\t\t\tconst v = inclination(vertex) / Math.PI + 0.5;\n\t\t\t\t\tuvBuffer.push(u, 1 - v);\n\t\t\t\t}\n\n\t\t\t\tcorrectUVs();\n\t\t\t\tcorrectSeam();\n\t\t\t}\n\n\t\t\tfunction correctSeam() {\n\t\t\t\t// handle case when face straddles the seam, see #3269\n\t\t\t\tfor (let i = 0; i < uvBuffer.length; i += 6) {\n\t\t\t\t\t// uv data of a single face\n\t\t\t\t\tconst x0 = uvBuffer[i + 0];\n\t\t\t\t\tconst x1 = uvBuffer[i + 2];\n\t\t\t\t\tconst x2 = uvBuffer[i + 4];\n\t\t\t\t\tconst max = Math.max(x0, x1, x2);\n\t\t\t\t\tconst min = Math.min(x0, x1, x2); // 0.9 is somewhat arbitrary\n\n\t\t\t\t\tif (max > 0.9 && min < 0.1) {\n\t\t\t\t\t\tif (x0 < 0.2) uvBuffer[i + 0] += 1;\n\t\t\t\t\t\tif (x1 < 0.2) uvBuffer[i + 2] += 1;\n\t\t\t\t\t\tif (x2 < 0.2) uvBuffer[i + 4] += 1;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfunction pushVertex(vertex) {\n\t\t\t\tvertexBuffer.push(vertex.x, vertex.y, vertex.z);\n\t\t\t}\n\n\t\t\tfunction getVertexByIndex(index, vertex) {\n\t\t\t\tconst stride = index * 3;\n\t\t\t\tvertex.x = vertices[stride + 0];\n\t\t\t\tvertex.y = vertices[stride + 1];\n\t\t\t\tvertex.z = vertices[stride + 2];\n\t\t\t}\n\n\t\t\tfunction correctUVs() {\n\t\t\t\tconst a = new Vector3();\n\t\t\t\tconst b = new Vector3();\n\t\t\t\tconst c = new Vector3();\n\t\t\t\tconst centroid = new Vector3();\n\t\t\t\tconst uvA = new Vector2();\n\t\t\t\tconst uvB = new Vector2();\n\t\t\t\tconst uvC = new Vector2();\n\n\t\t\t\tfor (let i = 0, j = 0; i < vertexBuffer.length; i += 9, j += 6) {\n\t\t\t\t\ta.set(vertexBuffer[i + 0], vertexBuffer[i + 1], vertexBuffer[i + 2]);\n\t\t\t\t\tb.set(vertexBuffer[i + 3], vertexBuffer[i + 4], vertexBuffer[i + 5]);\n\t\t\t\t\tc.set(vertexBuffer[i + 6], vertexBuffer[i + 7], vertexBuffer[i + 8]);\n\t\t\t\t\tuvA.set(uvBuffer[j + 0], uvBuffer[j + 1]);\n\t\t\t\t\tuvB.set(uvBuffer[j + 2], uvBuffer[j + 3]);\n\t\t\t\t\tuvC.set(uvBuffer[j + 4], uvBuffer[j + 5]);\n\t\t\t\t\tcentroid.copy(a).add(b).add(c).divideScalar(3);\n\t\t\t\t\tconst azi = azimuth(centroid);\n\t\t\t\t\tcorrectUV(uvA, j + 0, a, azi);\n\t\t\t\t\tcorrectUV(uvB, j + 2, b, azi);\n\t\t\t\t\tcorrectUV(uvC, j + 4, c, azi);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfunction correctUV(uv, stride, vector, azimuth) {\n\t\t\t\tif (azimuth < 0 && uv.x === 1) {\n\t\t\t\t\tuvBuffer[stride] = uv.x - 1;\n\t\t\t\t}\n\n\t\t\t\tif (vector.x === 0 && vector.z === 0) {\n\t\t\t\t\tuvBuffer[stride] = azimuth / 2 / Math.PI + 0.5;\n\t\t\t\t}\n\t\t\t} // Angle around the Y axis, counter-clockwise when looking from above.\n\n\n\t\t\tfunction azimuth(vector) {\n\t\t\t\treturn Math.atan2(vector.z, -vector.x);\n\t\t\t} // Angle above the XZ plane.\n\n\n\t\t\tfunction inclination(vector) {\n\t\t\t\treturn Math.atan2(-vector.y, Math.sqrt(vector.x * vector.x + vector.z * vector.z));\n\t\t\t}\n\t\t}\n\n\t\tstatic fromJSON(data) {\n\t\t\treturn new PolyhedronGeometry(data.vertices, data.indices, data.radius, data.details);\n\t\t}\n\n\t}\n\n\tclass DodecahedronGeometry extends PolyhedronGeometry {\n\t\tconstructor(radius = 1, detail = 0) {\n\t\t\tconst t = (1 + Math.sqrt(5)) / 2;\n\t\t\tconst r = 1 / t;\n\t\t\tconst vertices = [// (±1, ±1, ±1)\n\t\t\t-1, -1, -1, -1, -1, 1, -1, 1, -1, -1, 1, 1, 1, -1, -1, 1, -1, 1, 1, 1, -1, 1, 1, 1, // (0, ±1/φ, ±φ)\n\t\t\t0, -r, -t, 0, -r, t, 0, r, -t, 0, r, t, // (±1/φ, ±φ, 0)\n\t\t\t-r, -t, 0, -r, t, 0, r, -t, 0, r, t, 0, // (±φ, 0, ±1/φ)\n\t\t\t-t, 0, -r, t, 0, -r, -t, 0, r, t, 0, r];\n\t\t\tconst indices = [3, 11, 7, 3, 7, 15, 3, 15, 13, 7, 19, 17, 7, 17, 6, 7, 6, 15, 17, 4, 8, 17, 8, 10, 17, 10, 6, 8, 0, 16, 8, 16, 2, 8, 2, 10, 0, 12, 1, 0, 1, 18, 0, 18, 16, 6, 10, 2, 6, 2, 13, 6, 13, 15, 2, 16, 18, 2, 18, 3, 2, 3, 13, 18, 1, 9, 18, 9, 11, 18, 11, 3, 4, 14, 12, 4, 12, 0, 4, 0, 8, 11, 9, 5, 11, 5, 19, 11, 19, 7, 19, 5, 14, 19, 14, 4, 19, 4, 17, 1, 12, 14, 1, 14, 5, 1, 5, 9];\n\t\t\tsuper(vertices, indices, radius, detail);\n\t\t\tthis.type = 'DodecahedronGeometry';\n\t\t\tthis.parameters = {\n\t\t\t\tradius: radius,\n\t\t\t\tdetail: detail\n\t\t\t};\n\t\t}\n\n\t\tstatic fromJSON(data) {\n\t\t\treturn new DodecahedronGeometry(data.radius, data.detail);\n\t\t}\n\n\t}\n\n\tconst _v0 = new Vector3();\n\n\tconst _v1$1 = new Vector3();\n\n\tconst _normal = new Vector3();\n\n\tconst _triangle = new Triangle();\n\n\tclass EdgesGeometry extends BufferGeometry {\n\t\tconstructor(geometry = null, thresholdAngle = 1) {\n\t\t\tsuper();\n\t\t\tthis.type = 'EdgesGeometry';\n\t\t\tthis.parameters = {\n\t\t\t\tgeometry: geometry,\n\t\t\t\tthresholdAngle: thresholdAngle\n\t\t\t};\n\n\t\t\tif (geometry !== null) {\n\t\t\t\tconst precisionPoints = 4;\n\t\t\t\tconst precision = Math.pow(10, precisionPoints);\n\t\t\t\tconst thresholdDot = Math.cos(DEG2RAD * thresholdAngle);\n\t\t\t\tconst indexAttr = geometry.getIndex();\n\t\t\t\tconst positionAttr = geometry.getAttribute('position');\n\t\t\t\tconst indexCount = indexAttr ? indexAttr.count : positionAttr.count;\n\t\t\t\tconst indexArr = [0, 0, 0];\n\t\t\t\tconst vertKeys = ['a', 'b', 'c'];\n\t\t\t\tconst hashes = new Array(3);\n\t\t\t\tconst edgeData = {};\n\t\t\t\tconst vertices = [];\n\n\t\t\t\tfor (let i = 0; i < indexCount; i += 3) {\n\t\t\t\t\tif (indexAttr) {\n\t\t\t\t\t\tindexArr[0] = indexAttr.getX(i);\n\t\t\t\t\t\tindexArr[1] = indexAttr.getX(i + 1);\n\t\t\t\t\t\tindexArr[2] = indexAttr.getX(i + 2);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tindexArr[0] = i;\n\t\t\t\t\t\tindexArr[1] = i + 1;\n\t\t\t\t\t\tindexArr[2] = i + 2;\n\t\t\t\t\t}\n\n\t\t\t\t\tconst {\n\t\t\t\t\t\ta,\n\t\t\t\t\t\tb,\n\t\t\t\t\t\tc\n\t\t\t\t\t} = _triangle;\n\t\t\t\t\ta.fromBufferAttribute(positionAttr, indexArr[0]);\n\t\t\t\t\tb.fromBufferAttribute(positionAttr, indexArr[1]);\n\t\t\t\t\tc.fromBufferAttribute(positionAttr, indexArr[2]);\n\n\t\t\t\t\t_triangle.getNormal(_normal); // create hashes for the edge from the vertices\n\n\n\t\t\t\t\thashes[0] = `${Math.round(a.x * precision)},${Math.round(a.y * precision)},${Math.round(a.z * precision)}`;\n\t\t\t\t\thashes[1] = `${Math.round(b.x * precision)},${Math.round(b.y * precision)},${Math.round(b.z * precision)}`;\n\t\t\t\t\thashes[2] = `${Math.round(c.x * precision)},${Math.round(c.y * precision)},${Math.round(c.z * precision)}`; // skip degenerate triangles\n\n\t\t\t\t\tif (hashes[0] === hashes[1] || hashes[1] === hashes[2] || hashes[2] === hashes[0]) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t} // iterate over every edge\n\n\n\t\t\t\t\tfor (let j = 0; j < 3; j++) {\n\t\t\t\t\t\t// get the first and next vertex making up the edge\n\t\t\t\t\t\tconst jNext = (j + 1) % 3;\n\t\t\t\t\t\tconst vecHash0 = hashes[j];\n\t\t\t\t\t\tconst vecHash1 = hashes[jNext];\n\t\t\t\t\t\tconst v0 = _triangle[vertKeys[j]];\n\t\t\t\t\t\tconst v1 = _triangle[vertKeys[jNext]];\n\t\t\t\t\t\tconst hash = `${vecHash0}_${vecHash1}`;\n\t\t\t\t\t\tconst reverseHash = `${vecHash1}_${vecHash0}`;\n\n\t\t\t\t\t\tif (reverseHash in edgeData && edgeData[reverseHash]) {\n\t\t\t\t\t\t\t// if we found a sibling edge add it into the vertex array if\n\t\t\t\t\t\t\t// it meets the angle threshold and delete the edge from the map.\n\t\t\t\t\t\t\tif (_normal.dot(edgeData[reverseHash].normal) <= thresholdDot) {\n\t\t\t\t\t\t\t\tvertices.push(v0.x, v0.y, v0.z);\n\t\t\t\t\t\t\t\tvertices.push(v1.x, v1.y, v1.z);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tedgeData[reverseHash] = null;\n\t\t\t\t\t\t} else if (!(hash in edgeData)) {\n\t\t\t\t\t\t\t// if we've already got an edge here then skip adding a new one\n\t\t\t\t\t\t\tedgeData[hash] = {\n\t\t\t\t\t\t\t\tindex0: indexArr[j],\n\t\t\t\t\t\t\t\tindex1: indexArr[jNext],\n\t\t\t\t\t\t\t\tnormal: _normal.clone()\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} // iterate over all remaining, unmatched edges and add them to the vertex array\n\n\n\t\t\t\tfor (const key in edgeData) {\n\t\t\t\t\tif (edgeData[key]) {\n\t\t\t\t\t\tconst {\n\t\t\t\t\t\t\tindex0,\n\t\t\t\t\t\t\tindex1\n\t\t\t\t\t\t} = edgeData[key];\n\n\t\t\t\t\t\t_v0.fromBufferAttribute(positionAttr, index0);\n\n\t\t\t\t\t\t_v1$1.fromBufferAttribute(positionAttr, index1);\n\n\t\t\t\t\t\tvertices.push(_v0.x, _v0.y, _v0.z);\n\t\t\t\t\t\tvertices.push(_v1$1.x, _v1$1.y, _v1$1.z);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tthis.setAttribute('position', new Float32BufferAttribute(vertices, 3));\n\t\t\t}\n\t\t}\n\n\t}\n\n\t/**\n\t * Extensible curve object.\n\t *\n\t * Some common of curve methods:\n\t * .getPoint( t, optionalTarget ), .getTangent( t, optionalTarget )\n\t * .getPointAt( u, optionalTarget ), .getTangentAt( u, optionalTarget )\n\t * .getPoints(), .getSpacedPoints()\n\t * .getLength()\n\t * .updateArcLengths()\n\t *\n\t * This following curves inherit from THREE.Curve:\n\t *\n\t * -- 2D curves --\n\t * THREE.ArcCurve\n\t * THREE.CubicBezierCurve\n\t * THREE.EllipseCurve\n\t * THREE.LineCurve\n\t * THREE.QuadraticBezierCurve\n\t * THREE.SplineCurve\n\t *\n\t * -- 3D curves --\n\t * THREE.CatmullRomCurve3\n\t * THREE.CubicBezierCurve3\n\t * THREE.LineCurve3\n\t * THREE.QuadraticBezierCurve3\n\t *\n\t * A series of curves can be represented as a THREE.CurvePath.\n\t *\n\t **/\n\n\tclass Curve {\n\t\tconstructor() {\n\t\t\tthis.type = 'Curve';\n\t\t\tthis.arcLengthDivisions = 200;\n\t\t} // Virtual base class method to overwrite and implement in subclasses\n\t\t//\t- t [0 .. 1]\n\n\n\t\tgetPoint() {\n\t\t\tconsole.warn('THREE.Curve: .getPoint() not implemented.');\n\t\t\treturn null;\n\t\t} // Get point at relative position in curve according to arc length\n\t\t// - u [0 .. 1]\n\n\n\t\tgetPointAt(u, optionalTarget) {\n\t\t\tconst t = this.getUtoTmapping(u);\n\t\t\treturn this.getPoint(t, optionalTarget);\n\t\t} // Get sequence of points using getPoint( t )\n\n\n\t\tgetPoints(divisions = 5) {\n\t\t\tconst points = [];\n\n\t\t\tfor (let d = 0; d <= divisions; d++) {\n\t\t\t\tpoints.push(this.getPoint(d / divisions));\n\t\t\t}\n\n\t\t\treturn points;\n\t\t} // Get sequence of points using getPointAt( u )\n\n\n\t\tgetSpacedPoints(divisions = 5) {\n\t\t\tconst points = [];\n\n\t\t\tfor (let d = 0; d <= divisions; d++) {\n\t\t\t\tpoints.push(this.getPointAt(d / divisions));\n\t\t\t}\n\n\t\t\treturn points;\n\t\t} // Get total curve arc length\n\n\n\t\tgetLength() {\n\t\t\tconst lengths = this.getLengths();\n\t\t\treturn lengths[lengths.length - 1];\n\t\t} // Get list of cumulative segment lengths\n\n\n\t\tgetLengths(divisions = this.arcLengthDivisions) {\n\t\t\tif (this.cacheArcLengths && this.cacheArcLengths.length === divisions + 1 && !this.needsUpdate) {\n\t\t\t\treturn this.cacheArcLengths;\n\t\t\t}\n\n\t\t\tthis.needsUpdate = false;\n\t\t\tconst cache = [];\n\t\t\tlet current,\n\t\t\t\t\tlast = this.getPoint(0);\n\t\t\tlet sum = 0;\n\t\t\tcache.push(0);\n\n\t\t\tfor (let p = 1; p <= divisions; p++) {\n\t\t\t\tcurrent = this.getPoint(p / divisions);\n\t\t\t\tsum += current.distanceTo(last);\n\t\t\t\tcache.push(sum);\n\t\t\t\tlast = current;\n\t\t\t}\n\n\t\t\tthis.cacheArcLengths = cache;\n\t\t\treturn cache; // { sums: cache, sum: sum }; Sum is in the last element.\n\t\t}\n\n\t\tupdateArcLengths() {\n\t\t\tthis.needsUpdate = true;\n\t\t\tthis.getLengths();\n\t\t} // Given u ( 0 .. 1 ), get a t to find p. This gives you points which are equidistant\n\n\n\t\tgetUtoTmapping(u, distance) {\n\t\t\tconst arcLengths = this.getLengths();\n\t\t\tlet i = 0;\n\t\t\tconst il = arcLengths.length;\n\t\t\tlet targetArcLength; // The targeted u distance value to get\n\n\t\t\tif (distance) {\n\t\t\t\ttargetArcLength = distance;\n\t\t\t} else {\n\t\t\t\ttargetArcLength = u * arcLengths[il - 1];\n\t\t\t} // binary search for the index with largest value smaller than target u distance\n\n\n\t\t\tlet low = 0,\n\t\t\t\t\thigh = il - 1,\n\t\t\t\t\tcomparison;\n\n\t\t\twhile (low <= high) {\n\t\t\t\ti = Math.floor(low + (high - low) / 2); // less likely to overflow, though probably not issue here, JS doesn't really have integers, all numbers are floats\n\n\t\t\t\tcomparison = arcLengths[i] - targetArcLength;\n\n\t\t\t\tif (comparison < 0) {\n\t\t\t\t\tlow = i + 1;\n\t\t\t\t} else if (comparison > 0) {\n\t\t\t\t\thigh = i - 1;\n\t\t\t\t} else {\n\t\t\t\t\thigh = i;\n\t\t\t\t\tbreak; // DONE\n\t\t\t\t}\n\t\t\t}\n\n\t\t\ti = high;\n\n\t\t\tif (arcLengths[i] === targetArcLength) {\n\t\t\t\treturn i / (il - 1);\n\t\t\t} // we could get finer grain at lengths, or use simple interpolation between two points\n\n\n\t\t\tconst lengthBefore = arcLengths[i];\n\t\t\tconst lengthAfter = arcLengths[i + 1];\n\t\t\tconst segmentLength = lengthAfter - lengthBefore; // determine where we are between the 'before' and 'after' points\n\n\t\t\tconst segmentFraction = (targetArcLength - lengthBefore) / segmentLength; // add that fractional amount to t\n\n\t\t\tconst t = (i + segmentFraction) / (il - 1);\n\t\t\treturn t;\n\t\t} // Returns a unit vector tangent at t\n\t\t// In case any sub curve does not implement its tangent derivation,\n\t\t// 2 points a small delta apart will be used to find its gradient\n\t\t// which seems to give a reasonable approximation\n\n\n\t\tgetTangent(t, optionalTarget) {\n\t\t\tconst delta = 0.0001;\n\t\t\tlet t1 = t - delta;\n\t\t\tlet t2 = t + delta; // Capping in case of danger\n\n\t\t\tif (t1 < 0) t1 = 0;\n\t\t\tif (t2 > 1) t2 = 1;\n\t\t\tconst pt1 = this.getPoint(t1);\n\t\t\tconst pt2 = this.getPoint(t2);\n\t\t\tconst tangent = optionalTarget || (pt1.isVector2 ? new Vector2() : new Vector3());\n\t\t\ttangent.copy(pt2).sub(pt1).normalize();\n\t\t\treturn tangent;\n\t\t}\n\n\t\tgetTangentAt(u, optionalTarget) {\n\t\t\tconst t = this.getUtoTmapping(u);\n\t\t\treturn this.getTangent(t, optionalTarget);\n\t\t}\n\n\t\tcomputeFrenetFrames(segments, closed) {\n\t\t\t// see http://www.cs.indiana.edu/pub/techreports/TR425.pdf\n\t\t\tconst normal = new Vector3();\n\t\t\tconst tangents = [];\n\t\t\tconst normals = [];\n\t\t\tconst binormals = [];\n\t\t\tconst vec = new Vector3();\n\t\t\tconst mat = new Matrix4(); // compute the tangent vectors for each segment on the curve\n\n\t\t\tfor (let i = 0; i <= segments; i++) {\n\t\t\t\tconst u = i / segments;\n\t\t\t\ttangents[i] = this.getTangentAt(u, new Vector3());\n\t\t\t} // select an initial normal vector perpendicular to the first tangent vector,\n\t\t\t// and in the direction of the minimum tangent xyz component\n\n\n\t\t\tnormals[0] = new Vector3();\n\t\t\tbinormals[0] = new Vector3();\n\t\t\tlet min = Number.MAX_VALUE;\n\t\t\tconst tx = Math.abs(tangents[0].x);\n\t\t\tconst ty = Math.abs(tangents[0].y);\n\t\t\tconst tz = Math.abs(tangents[0].z);\n\n\t\t\tif (tx <= min) {\n\t\t\t\tmin = tx;\n\t\t\t\tnormal.set(1, 0, 0);\n\t\t\t}\n\n\t\t\tif (ty <= min) {\n\t\t\t\tmin = ty;\n\t\t\t\tnormal.set(0, 1, 0);\n\t\t\t}\n\n\t\t\tif (tz <= min) {\n\t\t\t\tnormal.set(0, 0, 1);\n\t\t\t}\n\n\t\t\tvec.crossVectors(tangents[0], normal).normalize();\n\t\t\tnormals[0].crossVectors(tangents[0], vec);\n\t\t\tbinormals[0].crossVectors(tangents[0], normals[0]); // compute the slowly-varying normal and binormal vectors for each segment on the curve\n\n\t\t\tfor (let i = 1; i <= segments; i++) {\n\t\t\t\tnormals[i] = normals[i - 1].clone();\n\t\t\t\tbinormals[i] = binormals[i - 1].clone();\n\t\t\t\tvec.crossVectors(tangents[i - 1], tangents[i]);\n\n\t\t\t\tif (vec.length() > Number.EPSILON) {\n\t\t\t\t\tvec.normalize();\n\t\t\t\t\tconst theta = Math.acos(clamp(tangents[i - 1].dot(tangents[i]), -1, 1)); // clamp for floating pt errors\n\n\t\t\t\t\tnormals[i].applyMatrix4(mat.makeRotationAxis(vec, theta));\n\t\t\t\t}\n\n\t\t\t\tbinormals[i].crossVectors(tangents[i], normals[i]);\n\t\t\t} // if the curve is closed, postprocess the vectors so the first and last normal vectors are the same\n\n\n\t\t\tif (closed === true) {\n\t\t\t\tlet theta = Math.acos(clamp(normals[0].dot(normals[segments]), -1, 1));\n\t\t\t\ttheta /= segments;\n\n\t\t\t\tif (tangents[0].dot(vec.crossVectors(normals[0], normals[segments])) > 0) {\n\t\t\t\t\ttheta = -theta;\n\t\t\t\t}\n\n\t\t\t\tfor (let i = 1; i <= segments; i++) {\n\t\t\t\t\t// twist a little...\n\t\t\t\t\tnormals[i].applyMatrix4(mat.makeRotationAxis(tangents[i], theta * i));\n\t\t\t\t\tbinormals[i].crossVectors(tangents[i], normals[i]);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\ttangents: tangents,\n\t\t\t\tnormals: normals,\n\t\t\t\tbinormals: binormals\n\t\t\t};\n\t\t}\n\n\t\tclone() {\n\t\t\treturn new this.constructor().copy(this);\n\t\t}\n\n\t\tcopy(source) {\n\t\t\tthis.arcLengthDivisions = source.arcLengthDivisions;\n\t\t\treturn this;\n\t\t}\n\n\t\ttoJSON() {\n\t\t\tconst data = {\n\t\t\t\tmetadata: {\n\t\t\t\t\tversion: 4.5,\n\t\t\t\t\ttype: 'Curve',\n\t\t\t\t\tgenerator: 'Curve.toJSON'\n\t\t\t\t}\n\t\t\t};\n\t\t\tdata.arcLengthDivisions = this.arcLengthDivisions;\n\t\t\tdata.type = this.type;\n\t\t\treturn data;\n\t\t}\n\n\t\tfromJSON(json) {\n\t\t\tthis.arcLengthDivisions = json.arcLengthDivisions;\n\t\t\treturn this;\n\t\t}\n\n\t}\n\n\tclass EllipseCurve extends Curve {\n\t\tconstructor(aX = 0, aY = 0, xRadius = 1, yRadius = 1, aStartAngle = 0, aEndAngle = Math.PI * 2, aClockwise = false, aRotation = 0) {\n\t\t\tsuper();\n\t\t\tthis.type = 'EllipseCurve';\n\t\t\tthis.aX = aX;\n\t\t\tthis.aY = aY;\n\t\t\tthis.xRadius = xRadius;\n\t\t\tthis.yRadius = yRadius;\n\t\t\tthis.aStartAngle = aStartAngle;\n\t\t\tthis.aEndAngle = aEndAngle;\n\t\t\tthis.aClockwise = aClockwise;\n\t\t\tthis.aRotation = aRotation;\n\t\t}\n\n\t\tgetPoint(t, optionalTarget) {\n\t\t\tconst point = optionalTarget || new Vector2();\n\t\t\tconst twoPi = Math.PI * 2;\n\t\t\tlet deltaAngle = this.aEndAngle - this.aStartAngle;\n\t\t\tconst samePoints = Math.abs(deltaAngle) < Number.EPSILON; // ensures that deltaAngle is 0 .. 2 PI\n\n\t\t\twhile (deltaAngle < 0) deltaAngle += twoPi;\n\n\t\t\twhile (deltaAngle > twoPi) deltaAngle -= twoPi;\n\n\t\t\tif (deltaAngle < Number.EPSILON) {\n\t\t\t\tif (samePoints) {\n\t\t\t\t\tdeltaAngle = 0;\n\t\t\t\t} else {\n\t\t\t\t\tdeltaAngle = twoPi;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (this.aClockwise === true && !samePoints) {\n\t\t\t\tif (deltaAngle === twoPi) {\n\t\t\t\t\tdeltaAngle = -twoPi;\n\t\t\t\t} else {\n\t\t\t\t\tdeltaAngle = deltaAngle - twoPi;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst angle = this.aStartAngle + t * deltaAngle;\n\t\t\tlet x = this.aX + this.xRadius * Math.cos(angle);\n\t\t\tlet y = this.aY + this.yRadius * Math.sin(angle);\n\n\t\t\tif (this.aRotation !== 0) {\n\t\t\t\tconst cos = Math.cos(this.aRotation);\n\t\t\t\tconst sin = Math.sin(this.aRotation);\n\t\t\t\tconst tx = x - this.aX;\n\t\t\t\tconst ty = y - this.aY; // Rotate the point about the center of the ellipse.\n\n\t\t\t\tx = tx * cos - ty * sin + this.aX;\n\t\t\t\ty = tx * sin + ty * cos + this.aY;\n\t\t\t}\n\n\t\t\treturn point.set(x, y);\n\t\t}\n\n\t\tcopy(source) {\n\t\t\tsuper.copy(source);\n\t\t\tthis.aX = source.aX;\n\t\t\tthis.aY = source.aY;\n\t\t\tthis.xRadius = source.xRadius;\n\t\t\tthis.yRadius = source.yRadius;\n\t\t\tthis.aStartAngle = source.aStartAngle;\n\t\t\tthis.aEndAngle = source.aEndAngle;\n\t\t\tthis.aClockwise = source.aClockwise;\n\t\t\tthis.aRotation = source.aRotation;\n\t\t\treturn this;\n\t\t}\n\n\t\ttoJSON() {\n\t\t\tconst data = super.toJSON();\n\t\t\tdata.aX = this.aX;\n\t\t\tdata.aY = this.aY;\n\t\t\tdata.xRadius = this.xRadius;\n\t\t\tdata.yRadius = this.yRadius;\n\t\t\tdata.aStartAngle = this.aStartAngle;\n\t\t\tdata.aEndAngle = this.aEndAngle;\n\t\t\tdata.aClockwise = this.aClockwise;\n\t\t\tdata.aRotation = this.aRotation;\n\t\t\treturn data;\n\t\t}\n\n\t\tfromJSON(json) {\n\t\t\tsuper.fromJSON(json);\n\t\t\tthis.aX = json.aX;\n\t\t\tthis.aY = json.aY;\n\t\t\tthis.xRadius = json.xRadius;\n\t\t\tthis.yRadius = json.yRadius;\n\t\t\tthis.aStartAngle = json.aStartAngle;\n\t\t\tthis.aEndAngle = json.aEndAngle;\n\t\t\tthis.aClockwise = json.aClockwise;\n\t\t\tthis.aRotation = json.aRotation;\n\t\t\treturn this;\n\t\t}\n\n\t}\n\n\tEllipseCurve.prototype.isEllipseCurve = true;\n\n\tclass ArcCurve extends EllipseCurve {\n\t\tconstructor(aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise) {\n\t\t\tsuper(aX, aY, aRadius, aRadius, aStartAngle, aEndAngle, aClockwise);\n\t\t\tthis.type = 'ArcCurve';\n\t\t}\n\n\t}\n\n\tArcCurve.prototype.isArcCurve = true;\n\n\t/**\n\t * Centripetal CatmullRom Curve - which is useful for avoiding\n\t * cusps and self-intersections in non-uniform catmull rom curves.\n\t * http://www.cemyuksel.com/research/catmullrom_param/catmullrom.pdf\n\t *\n\t * curve.type accepts centripetal(default), chordal and catmullrom\n\t * curve.tension is used for catmullrom which defaults to 0.5\n\t */\n\n\t/*\n\tBased on an optimized c++ solution in\n\t - http://stackoverflow.com/questions/9489736/catmull-rom-curve-with-no-cusps-and-no-self-intersections/\n\t - http://ideone.com/NoEbVM\n\n\tThis CubicPoly class could be used for reusing some variables and calculations,\n\tbut for three.js curve use, it could be possible inlined and flatten into a single function call\n\twhich can be placed in CurveUtils.\n\t*/\n\n\tfunction CubicPoly() {\n\t\tlet c0 = 0,\n\t\t\t\tc1 = 0,\n\t\t\t\tc2 = 0,\n\t\t\t\tc3 = 0;\n\t\t/*\n\t\t * Compute coefficients for a cubic polynomial\n\t\t *\t p(s) = c0 + c1*s + c2*s^2 + c3*s^3\n\t\t * such that\n\t\t *\t p(0) = x0, p(1) = x1\n\t\t *\tand\n\t\t *\t p'(0) = t0, p'(1) = t1.\n\t\t */\n\n\t\tfunction init(x0, x1, t0, t1) {\n\t\t\tc0 = x0;\n\t\t\tc1 = t0;\n\t\t\tc2 = -3 * x0 + 3 * x1 - 2 * t0 - t1;\n\t\t\tc3 = 2 * x0 - 2 * x1 + t0 + t1;\n\t\t}\n\n\t\treturn {\n\t\t\tinitCatmullRom: function (x0, x1, x2, x3, tension) {\n\t\t\t\tinit(x1, x2, tension * (x2 - x0), tension * (x3 - x1));\n\t\t\t},\n\t\t\tinitNonuniformCatmullRom: function (x0, x1, x2, x3, dt0, dt1, dt2) {\n\t\t\t\t// compute tangents when parameterized in [t1,t2]\n\t\t\t\tlet t1 = (x1 - x0) / dt0 - (x2 - x0) / (dt0 + dt1) + (x2 - x1) / dt1;\n\t\t\t\tlet t2 = (x2 - x1) / dt1 - (x3 - x1) / (dt1 + dt2) + (x3 - x2) / dt2; // rescale tangents for parametrization in [0,1]\n\n\t\t\t\tt1 *= dt1;\n\t\t\t\tt2 *= dt1;\n\t\t\t\tinit(x1, x2, t1, t2);\n\t\t\t},\n\t\t\tcalc: function (t) {\n\t\t\t\tconst t2 = t * t;\n\t\t\t\tconst t3 = t2 * t;\n\t\t\t\treturn c0 + c1 * t + c2 * t2 + c3 * t3;\n\t\t\t}\n\t\t};\n\t} //\n\n\n\tconst tmp = new Vector3();\n\tconst px = new CubicPoly(),\n\t\t\t\tpy = new CubicPoly(),\n\t\t\t\tpz = new CubicPoly();\n\n\tclass CatmullRomCurve3 extends Curve {\n\t\tconstructor(points = [], closed = false, curveType = 'centripetal', tension = 0.5) {\n\t\t\tsuper();\n\t\t\tthis.type = 'CatmullRomCurve3';\n\t\t\tthis.points = points;\n\t\t\tthis.closed = closed;\n\t\t\tthis.curveType = curveType;\n\t\t\tthis.tension = tension;\n\t\t}\n\n\t\tgetPoint(t, optionalTarget = new Vector3()) {\n\t\t\tconst point = optionalTarget;\n\t\t\tconst points = this.points;\n\t\t\tconst l = points.length;\n\t\t\tconst p = (l - (this.closed ? 0 : 1)) * t;\n\t\t\tlet intPoint = Math.floor(p);\n\t\t\tlet weight = p - intPoint;\n\n\t\t\tif (this.closed) {\n\t\t\t\tintPoint += intPoint > 0 ? 0 : (Math.floor(Math.abs(intPoint) / l) + 1) * l;\n\t\t\t} else if (weight === 0 && intPoint === l - 1) {\n\t\t\t\tintPoint = l - 2;\n\t\t\t\tweight = 1;\n\t\t\t}\n\n\t\t\tlet p0, p3; // 4 points (p1 & p2 defined below)\n\n\t\t\tif (this.closed || intPoint > 0) {\n\t\t\t\tp0 = points[(intPoint - 1) % l];\n\t\t\t} else {\n\t\t\t\t// extrapolate first point\n\t\t\t\ttmp.subVectors(points[0], points[1]).add(points[0]);\n\t\t\t\tp0 = tmp;\n\t\t\t}\n\n\t\t\tconst p1 = points[intPoint % l];\n\t\t\tconst p2 = points[(intPoint + 1) % l];\n\n\t\t\tif (this.closed || intPoint + 2 < l) {\n\t\t\t\tp3 = points[(intPoint + 2) % l];\n\t\t\t} else {\n\t\t\t\t// extrapolate last point\n\t\t\t\ttmp.subVectors(points[l - 1], points[l - 2]).add(points[l - 1]);\n\t\t\t\tp3 = tmp;\n\t\t\t}\n\n\t\t\tif (this.curveType === 'centripetal' || this.curveType === 'chordal') {\n\t\t\t\t// init Centripetal / Chordal Catmull-Rom\n\t\t\t\tconst pow = this.curveType === 'chordal' ? 0.5 : 0.25;\n\t\t\t\tlet dt0 = Math.pow(p0.distanceToSquared(p1), pow);\n\t\t\t\tlet dt1 = Math.pow(p1.distanceToSquared(p2), pow);\n\t\t\t\tlet dt2 = Math.pow(p2.distanceToSquared(p3), pow); // safety check for repeated points\n\n\t\t\t\tif (dt1 < 1e-4) dt1 = 1.0;\n\t\t\t\tif (dt0 < 1e-4) dt0 = dt1;\n\t\t\t\tif (dt2 < 1e-4) dt2 = dt1;\n\t\t\t\tpx.initNonuniformCatmullRom(p0.x, p1.x, p2.x, p3.x, dt0, dt1, dt2);\n\t\t\t\tpy.initNonuniformCatmullRom(p0.y, p1.y, p2.y, p3.y, dt0, dt1, dt2);\n\t\t\t\tpz.initNonuniformCatmullRom(p0.z, p1.z, p2.z, p3.z, dt0, dt1, dt2);\n\t\t\t} else if (this.curveType === 'catmullrom') {\n\t\t\t\tpx.initCatmullRom(p0.x, p1.x, p2.x, p3.x, this.tension);\n\t\t\t\tpy.initCatmullRom(p0.y, p1.y, p2.y, p3.y, this.tension);\n\t\t\t\tpz.initCatmullRom(p0.z, p1.z, p2.z, p3.z, this.tension);\n\t\t\t}\n\n\t\t\tpoint.set(px.calc(weight), py.calc(weight), pz.calc(weight));\n\t\t\treturn point;\n\t\t}\n\n\t\tcopy(source) {\n\t\t\tsuper.copy(source);\n\t\t\tthis.points = [];\n\n\t\t\tfor (let i = 0, l = source.points.length; i < l; i++) {\n\t\t\t\tconst point = source.points[i];\n\t\t\t\tthis.points.push(point.clone());\n\t\t\t}\n\n\t\t\tthis.closed = source.closed;\n\t\t\tthis.curveType = source.curveType;\n\t\t\tthis.tension = source.tension;\n\t\t\treturn this;\n\t\t}\n\n\t\ttoJSON() {\n\t\t\tconst data = super.toJSON();\n\t\t\tdata.points = [];\n\n\t\t\tfor (let i = 0, l = this.points.length; i < l; i++) {\n\t\t\t\tconst point = this.points[i];\n\t\t\t\tdata.points.push(point.toArray());\n\t\t\t}\n\n\t\t\tdata.closed = this.closed;\n\t\t\tdata.curveType = this.curveType;\n\t\t\tdata.tension = this.tension;\n\t\t\treturn data;\n\t\t}\n\n\t\tfromJSON(json) {\n\t\t\tsuper.fromJSON(json);\n\t\t\tthis.points = [];\n\n\t\t\tfor (let i = 0, l = json.points.length; i < l; i++) {\n\t\t\t\tconst point = json.points[i];\n\t\t\t\tthis.points.push(new Vector3().fromArray(point));\n\t\t\t}\n\n\t\t\tthis.closed = json.closed;\n\t\t\tthis.curveType = json.curveType;\n\t\t\tthis.tension = json.tension;\n\t\t\treturn this;\n\t\t}\n\n\t}\n\n\tCatmullRomCurve3.prototype.isCatmullRomCurve3 = true;\n\n\t/**\n\t * Bezier Curves formulas obtained from\n\t * http://en.wikipedia.org/wiki/Bézier_curve\n\t */\n\tfunction CatmullRom(t, p0, p1, p2, p3) {\n\t\tconst v0 = (p2 - p0) * 0.5;\n\t\tconst v1 = (p3 - p1) * 0.5;\n\t\tconst t2 = t * t;\n\t\tconst t3 = t * t2;\n\t\treturn (2 * p1 - 2 * p2 + v0 + v1) * t3 + (-3 * p1 + 3 * p2 - 2 * v0 - v1) * t2 + v0 * t + p1;\n\t} //\n\n\n\tfunction QuadraticBezierP0(t, p) {\n\t\tconst k = 1 - t;\n\t\treturn k * k * p;\n\t}\n\n\tfunction QuadraticBezierP1(t, p) {\n\t\treturn 2 * (1 - t) * t * p;\n\t}\n\n\tfunction QuadraticBezierP2(t, p) {\n\t\treturn t * t * p;\n\t}\n\n\tfunction QuadraticBezier(t, p0, p1, p2) {\n\t\treturn QuadraticBezierP0(t, p0) + QuadraticBezierP1(t, p1) + QuadraticBezierP2(t, p2);\n\t} //\n\n\n\tfunction CubicBezierP0(t, p) {\n\t\tconst k = 1 - t;\n\t\treturn k * k * k * p;\n\t}\n\n\tfunction CubicBezierP1(t, p) {\n\t\tconst k = 1 - t;\n\t\treturn 3 * k * k * t * p;\n\t}\n\n\tfunction CubicBezierP2(t, p) {\n\t\treturn 3 * (1 - t) * t * t * p;\n\t}\n\n\tfunction CubicBezierP3(t, p) {\n\t\treturn t * t * t * p;\n\t}\n\n\tfunction CubicBezier(t, p0, p1, p2, p3) {\n\t\treturn CubicBezierP0(t, p0) + CubicBezierP1(t, p1) + CubicBezierP2(t, p2) + CubicBezierP3(t, p3);\n\t}\n\n\tclass CubicBezierCurve extends Curve {\n\t\tconstructor(v0 = new Vector2(), v1 = new Vector2(), v2 = new Vector2(), v3 = new Vector2()) {\n\t\t\tsuper();\n\t\t\tthis.type = 'CubicBezierCurve';\n\t\t\tthis.v0 = v0;\n\t\t\tthis.v1 = v1;\n\t\t\tthis.v2 = v2;\n\t\t\tthis.v3 = v3;\n\t\t}\n\n\t\tgetPoint(t, optionalTarget = new Vector2()) {\n\t\t\tconst point = optionalTarget;\n\t\t\tconst v0 = this.v0,\n\t\t\t\t\t\tv1 = this.v1,\n\t\t\t\t\t\tv2 = this.v2,\n\t\t\t\t\t\tv3 = this.v3;\n\t\t\tpoint.set(CubicBezier(t, v0.x, v1.x, v2.x, v3.x), CubicBezier(t, v0.y, v1.y, v2.y, v3.y));\n\t\t\treturn point;\n\t\t}\n\n\t\tcopy(source) {\n\t\t\tsuper.copy(source);\n\t\t\tthis.v0.copy(source.v0);\n\t\t\tthis.v1.copy(source.v1);\n\t\t\tthis.v2.copy(source.v2);\n\t\t\tthis.v3.copy(source.v3);\n\t\t\treturn this;\n\t\t}\n\n\t\ttoJSON() {\n\t\t\tconst data = super.toJSON();\n\t\t\tdata.v0 = this.v0.toArray();\n\t\t\tdata.v1 = this.v1.toArray();\n\t\t\tdata.v2 = this.v2.toArray();\n\t\t\tdata.v3 = this.v3.toArray();\n\t\t\treturn data;\n\t\t}\n\n\t\tfromJSON(json) {\n\t\t\tsuper.fromJSON(json);\n\t\t\tthis.v0.fromArray(json.v0);\n\t\t\tthis.v1.fromArray(json.v1);\n\t\t\tthis.v2.fromArray(json.v2);\n\t\t\tthis.v3.fromArray(json.v3);\n\t\t\treturn this;\n\t\t}\n\n\t}\n\n\tCubicBezierCurve.prototype.isCubicBezierCurve = true;\n\n\tclass CubicBezierCurve3 extends Curve {\n\t\tconstructor(v0 = new Vector3(), v1 = new Vector3(), v2 = new Vector3(), v3 = new Vector3()) {\n\t\t\tsuper();\n\t\t\tthis.type = 'CubicBezierCurve3';\n\t\t\tthis.v0 = v0;\n\t\t\tthis.v1 = v1;\n\t\t\tthis.v2 = v2;\n\t\t\tthis.v3 = v3;\n\t\t}\n\n\t\tgetPoint(t, optionalTarget = new Vector3()) {\n\t\t\tconst point = optionalTarget;\n\t\t\tconst v0 = this.v0,\n\t\t\t\t\t\tv1 = this.v1,\n\t\t\t\t\t\tv2 = this.v2,\n\t\t\t\t\t\tv3 = this.v3;\n\t\t\tpoint.set(CubicBezier(t, v0.x, v1.x, v2.x, v3.x), CubicBezier(t, v0.y, v1.y, v2.y, v3.y), CubicBezier(t, v0.z, v1.z, v2.z, v3.z));\n\t\t\treturn point;\n\t\t}\n\n\t\tcopy(source) {\n\t\t\tsuper.copy(source);\n\t\t\tthis.v0.copy(source.v0);\n\t\t\tthis.v1.copy(source.v1);\n\t\t\tthis.v2.copy(source.v2);\n\t\t\tthis.v3.copy(source.v3);\n\t\t\treturn this;\n\t\t}\n\n\t\ttoJSON() {\n\t\t\tconst data = super.toJSON();\n\t\t\tdata.v0 = this.v0.toArray();\n\t\t\tdata.v1 = this.v1.toArray();\n\t\t\tdata.v2 = this.v2.toArray();\n\t\t\tdata.v3 = this.v3.toArray();\n\t\t\treturn data;\n\t\t}\n\n\t\tfromJSON(json) {\n\t\t\tsuper.fromJSON(json);\n\t\t\tthis.v0.fromArray(json.v0);\n\t\t\tthis.v1.fromArray(json.v1);\n\t\t\tthis.v2.fromArray(json.v2);\n\t\t\tthis.v3.fromArray(json.v3);\n\t\t\treturn this;\n\t\t}\n\n\t}\n\n\tCubicBezierCurve3.prototype.isCubicBezierCurve3 = true;\n\n\tclass LineCurve extends Curve {\n\t\tconstructor(v1 = new Vector2(), v2 = new Vector2()) {\n\t\t\tsuper();\n\t\t\tthis.type = 'LineCurve';\n\t\t\tthis.v1 = v1;\n\t\t\tthis.v2 = v2;\n\t\t}\n\n\t\tgetPoint(t, optionalTarget = new Vector2()) {\n\t\t\tconst point = optionalTarget;\n\n\t\t\tif (t === 1) {\n\t\t\t\tpoint.copy(this.v2);\n\t\t\t} else {\n\t\t\t\tpoint.copy(this.v2).sub(this.v1);\n\t\t\t\tpoint.multiplyScalar(t).add(this.v1);\n\t\t\t}\n\n\t\t\treturn point;\n\t\t} // Line curve is linear, so we can overwrite default getPointAt\n\n\n\t\tgetPointAt(u, optionalTarget) {\n\t\t\treturn this.getPoint(u, optionalTarget);\n\t\t}\n\n\t\tgetTangent(t, optionalTarget) {\n\t\t\tconst tangent = optionalTarget || new Vector2();\n\t\t\ttangent.copy(this.v2).sub(this.v1).normalize();\n\t\t\treturn tangent;\n\t\t}\n\n\t\tcopy(source) {\n\t\t\tsuper.copy(source);\n\t\t\tthis.v1.copy(source.v1);\n\t\t\tthis.v2.copy(source.v2);\n\t\t\treturn this;\n\t\t}\n\n\t\ttoJSON() {\n\t\t\tconst data = super.toJSON();\n\t\t\tdata.v1 = this.v1.toArray();\n\t\t\tdata.v2 = this.v2.toArray();\n\t\t\treturn data;\n\t\t}\n\n\t\tfromJSON(json) {\n\t\t\tsuper.fromJSON(json);\n\t\t\tthis.v1.fromArray(json.v1);\n\t\t\tthis.v2.fromArray(json.v2);\n\t\t\treturn this;\n\t\t}\n\n\t}\n\n\tLineCurve.prototype.isLineCurve = true;\n\n\tclass LineCurve3 extends Curve {\n\t\tconstructor(v1 = new Vector3(), v2 = new Vector3()) {\n\t\t\tsuper();\n\t\t\tthis.type = 'LineCurve3';\n\t\t\tthis.isLineCurve3 = true;\n\t\t\tthis.v1 = v1;\n\t\t\tthis.v2 = v2;\n\t\t}\n\n\t\tgetPoint(t, optionalTarget = new Vector3()) {\n\t\t\tconst point = optionalTarget;\n\n\t\t\tif (t === 1) {\n\t\t\t\tpoint.copy(this.v2);\n\t\t\t} else {\n\t\t\t\tpoint.copy(this.v2).sub(this.v1);\n\t\t\t\tpoint.multiplyScalar(t).add(this.v1);\n\t\t\t}\n\n\t\t\treturn point;\n\t\t} // Line curve is linear, so we can overwrite default getPointAt\n\n\n\t\tgetPointAt(u, optionalTarget) {\n\t\t\treturn this.getPoint(u, optionalTarget);\n\t\t}\n\n\t\tcopy(source) {\n\t\t\tsuper.copy(source);\n\t\t\tthis.v1.copy(source.v1);\n\t\t\tthis.v2.copy(source.v2);\n\t\t\treturn this;\n\t\t}\n\n\t\ttoJSON() {\n\t\t\tconst data = super.toJSON();\n\t\t\tdata.v1 = this.v1.toArray();\n\t\t\tdata.v2 = this.v2.toArray();\n\t\t\treturn data;\n\t\t}\n\n\t\tfromJSON(json) {\n\t\t\tsuper.fromJSON(json);\n\t\t\tthis.v1.fromArray(json.v1);\n\t\t\tthis.v2.fromArray(json.v2);\n\t\t\treturn this;\n\t\t}\n\n\t}\n\n\tclass QuadraticBezierCurve extends Curve {\n\t\tconstructor(v0 = new Vector2(), v1 = new Vector2(), v2 = new Vector2()) {\n\t\t\tsuper();\n\t\t\tthis.type = 'QuadraticBezierCurve';\n\t\t\tthis.v0 = v0;\n\t\t\tthis.v1 = v1;\n\t\t\tthis.v2 = v2;\n\t\t}\n\n\t\tgetPoint(t, optionalTarget = new Vector2()) {\n\t\t\tconst point = optionalTarget;\n\t\t\tconst v0 = this.v0,\n\t\t\t\t\t\tv1 = this.v1,\n\t\t\t\t\t\tv2 = this.v2;\n\t\t\tpoint.set(QuadraticBezier(t, v0.x, v1.x, v2.x), QuadraticBezier(t, v0.y, v1.y, v2.y));\n\t\t\treturn point;\n\t\t}\n\n\t\tcopy(source) {\n\t\t\tsuper.copy(source);\n\t\t\tthis.v0.copy(source.v0);\n\t\t\tthis.v1.copy(source.v1);\n\t\t\tthis.v2.copy(source.v2);\n\t\t\treturn this;\n\t\t}\n\n\t\ttoJSON() {\n\t\t\tconst data = super.toJSON();\n\t\t\tdata.v0 = this.v0.toArray();\n\t\t\tdata.v1 = this.v1.toArray();\n\t\t\tdata.v2 = this.v2.toArray();\n\t\t\treturn data;\n\t\t}\n\n\t\tfromJSON(json) {\n\t\t\tsuper.fromJSON(json);\n\t\t\tthis.v0.fromArray(json.v0);\n\t\t\tthis.v1.fromArray(json.v1);\n\t\t\tthis.v2.fromArray(json.v2);\n\t\t\treturn this;\n\t\t}\n\n\t}\n\n\tQuadraticBezierCurve.prototype.isQuadraticBezierCurve = true;\n\n\tclass QuadraticBezierCurve3 extends Curve {\n\t\tconstructor(v0 = new Vector3(), v1 = new Vector3(), v2 = new Vector3()) {\n\t\t\tsuper();\n\t\t\tthis.type = 'QuadraticBezierCurve3';\n\t\t\tthis.v0 = v0;\n\t\t\tthis.v1 = v1;\n\t\t\tthis.v2 = v2;\n\t\t}\n\n\t\tgetPoint(t, optionalTarget = new Vector3()) {\n\t\t\tconst point = optionalTarget;\n\t\t\tconst v0 = this.v0,\n\t\t\t\t\t\tv1 = this.v1,\n\t\t\t\t\t\tv2 = this.v2;\n\t\t\tpoint.set(QuadraticBezier(t, v0.x, v1.x, v2.x), QuadraticBezier(t, v0.y, v1.y, v2.y), QuadraticBezier(t, v0.z, v1.z, v2.z));\n\t\t\treturn point;\n\t\t}\n\n\t\tcopy(source) {\n\t\t\tsuper.copy(source);\n\t\t\tthis.v0.copy(source.v0);\n\t\t\tthis.v1.copy(source.v1);\n\t\t\tthis.v2.copy(source.v2);\n\t\t\treturn this;\n\t\t}\n\n\t\ttoJSON() {\n\t\t\tconst data = super.toJSON();\n\t\t\tdata.v0 = this.v0.toArray();\n\t\t\tdata.v1 = this.v1.toArray();\n\t\t\tdata.v2 = this.v2.toArray();\n\t\t\treturn data;\n\t\t}\n\n\t\tfromJSON(json) {\n\t\t\tsuper.fromJSON(json);\n\t\t\tthis.v0.fromArray(json.v0);\n\t\t\tthis.v1.fromArray(json.v1);\n\t\t\tthis.v2.fromArray(json.v2);\n\t\t\treturn this;\n\t\t}\n\n\t}\n\n\tQuadraticBezierCurve3.prototype.isQuadraticBezierCurve3 = true;\n\n\tclass SplineCurve extends Curve {\n\t\tconstructor(points = []) {\n\t\t\tsuper();\n\t\t\tthis.type = 'SplineCurve';\n\t\t\tthis.points = points;\n\t\t}\n\n\t\tgetPoint(t, optionalTarget = new Vector2()) {\n\t\t\tconst point = optionalTarget;\n\t\t\tconst points = this.points;\n\t\t\tconst p = (points.length - 1) * t;\n\t\t\tconst intPoint = Math.floor(p);\n\t\t\tconst weight = p - intPoint;\n\t\t\tconst p0 = points[intPoint === 0 ? intPoint : intPoint - 1];\n\t\t\tconst p1 = points[intPoint];\n\t\t\tconst p2 = points[intPoint > points.length - 2 ? points.length - 1 : intPoint + 1];\n\t\t\tconst p3 = points[intPoint > points.length - 3 ? points.length - 1 : intPoint + 2];\n\t\t\tpoint.set(CatmullRom(weight, p0.x, p1.x, p2.x, p3.x), CatmullRom(weight, p0.y, p1.y, p2.y, p3.y));\n\t\t\treturn point;\n\t\t}\n\n\t\tcopy(source) {\n\t\t\tsuper.copy(source);\n\t\t\tthis.points = [];\n\n\t\t\tfor (let i = 0, l = source.points.length; i < l; i++) {\n\t\t\t\tconst point = source.points[i];\n\t\t\t\tthis.points.push(point.clone());\n\t\t\t}\n\n\t\t\treturn this;\n\t\t}\n\n\t\ttoJSON() {\n\t\t\tconst data = super.toJSON();\n\t\t\tdata.points = [];\n\n\t\t\tfor (let i = 0, l = this.points.length; i < l; i++) {\n\t\t\t\tconst point = this.points[i];\n\t\t\t\tdata.points.push(point.toArray());\n\t\t\t}\n\n\t\t\treturn data;\n\t\t}\n\n\t\tfromJSON(json) {\n\t\t\tsuper.fromJSON(json);\n\t\t\tthis.points = [];\n\n\t\t\tfor (let i = 0, l = json.points.length; i < l; i++) {\n\t\t\t\tconst point = json.points[i];\n\t\t\t\tthis.points.push(new Vector2().fromArray(point));\n\t\t\t}\n\n\t\t\treturn this;\n\t\t}\n\n\t}\n\n\tSplineCurve.prototype.isSplineCurve = true;\n\n\tvar Curves = /*#__PURE__*/Object.freeze({\n\t\t__proto__: null,\n\t\tArcCurve: ArcCurve,\n\t\tCatmullRomCurve3: CatmullRomCurve3,\n\t\tCubicBezierCurve: CubicBezierCurve,\n\t\tCubicBezierCurve3: CubicBezierCurve3,\n\t\tEllipseCurve: EllipseCurve,\n\t\tLineCurve: LineCurve,\n\t\tLineCurve3: LineCurve3,\n\t\tQuadraticBezierCurve: QuadraticBezierCurve,\n\t\tQuadraticBezierCurve3: QuadraticBezierCurve3,\n\t\tSplineCurve: SplineCurve\n\t});\n\n\t/**************************************************************\n\t *\tCurved Path - a curve path is simply a array of connected\n\t *\tcurves, but retains the api of a curve\n\t **************************************************************/\n\n\tclass CurvePath extends Curve {\n\t\tconstructor() {\n\t\t\tsuper();\n\t\t\tthis.type = 'CurvePath';\n\t\t\tthis.curves = [];\n\t\t\tthis.autoClose = false; // Automatically closes the path\n\t\t}\n\n\t\tadd(curve) {\n\t\t\tthis.curves.push(curve);\n\t\t}\n\n\t\tclosePath() {\n\t\t\t// Add a line curve if start and end of lines are not connected\n\t\t\tconst startPoint = this.curves[0].getPoint(0);\n\t\t\tconst endPoint = this.curves[this.curves.length - 1].getPoint(1);\n\n\t\t\tif (!startPoint.equals(endPoint)) {\n\t\t\t\tthis.curves.push(new LineCurve(endPoint, startPoint));\n\t\t\t}\n\t\t} // To get accurate point with reference to\n\t\t// entire path distance at time t,\n\t\t// following has to be done:\n\t\t// 1. Length of each sub path have to be known\n\t\t// 2. Locate and identify type of curve\n\t\t// 3. Get t for the curve\n\t\t// 4. Return curve.getPointAt(t')\n\n\n\t\tgetPoint(t, optionalTarget) {\n\t\t\tconst d = t * this.getLength();\n\t\t\tconst curveLengths = this.getCurveLengths();\n\t\t\tlet i = 0; // To think about boundaries points.\n\n\t\t\twhile (i < curveLengths.length) {\n\t\t\t\tif (curveLengths[i] >= d) {\n\t\t\t\t\tconst diff = curveLengths[i] - d;\n\t\t\t\t\tconst curve = this.curves[i];\n\t\t\t\t\tconst segmentLength = curve.getLength();\n\t\t\t\t\tconst u = segmentLength === 0 ? 0 : 1 - diff / segmentLength;\n\t\t\t\t\treturn curve.getPointAt(u, optionalTarget);\n\t\t\t\t}\n\n\t\t\t\ti++;\n\t\t\t}\n\n\t\t\treturn null; // loop where sum != 0, sum > d , sum+1 <d\n\t\t} // We cannot use the default THREE.Curve getPoint() with getLength() because in\n\t\t// THREE.Curve, getLength() depends on getPoint() but in THREE.CurvePath\n\t\t// getPoint() depends on getLength\n\n\n\t\tgetLength() {\n\t\t\tconst lens = this.getCurveLengths();\n\t\t\treturn lens[lens.length - 1];\n\t\t} // cacheLengths must be recalculated.\n\n\n\t\tupdateArcLengths() {\n\t\t\tthis.needsUpdate = true;\n\t\t\tthis.cacheLengths = null;\n\t\t\tthis.getCurveLengths();\n\t\t} // Compute lengths and cache them\n\t\t// We cannot overwrite getLengths() because UtoT mapping uses it.\n\n\n\t\tgetCurveLengths() {\n\t\t\t// We use cache values if curves and cache array are same length\n\t\t\tif (this.cacheLengths && this.cacheLengths.length === this.curves.length) {\n\t\t\t\treturn this.cacheLengths;\n\t\t\t} // Get length of sub-curve\n\t\t\t// Push sums into cached array\n\n\n\t\t\tconst lengths = [];\n\t\t\tlet sums = 0;\n\n\t\t\tfor (let i = 0, l = this.curves.length; i < l; i++) {\n\t\t\t\tsums += this.curves[i].getLength();\n\t\t\t\tlengths.push(sums);\n\t\t\t}\n\n\t\t\tthis.cacheLengths = lengths;\n\t\t\treturn lengths;\n\t\t}\n\n\t\tgetSpacedPoints(divisions = 40) {\n\t\t\tconst points = [];\n\n\t\t\tfor (let i = 0; i <= divisions; i++) {\n\t\t\t\tpoints.push(this.getPoint(i / divisions));\n\t\t\t}\n\n\t\t\tif (this.autoClose) {\n\t\t\t\tpoints.push(points[0]);\n\t\t\t}\n\n\t\t\treturn points;\n\t\t}\n\n\t\tgetPoints(divisions = 12) {\n\t\t\tconst points = [];\n\t\t\tlet last;\n\n\t\t\tfor (let i = 0, curves = this.curves; i < curves.length; i++) {\n\t\t\t\tconst curve = curves[i];\n\t\t\t\tconst resolution = curve && curve.isEllipseCurve ? divisions * 2 : curve && (curve.isLineCurve || curve.isLineCurve3) ? 1 : curve && curve.isSplineCurve ? divisions * curve.points.length : divisions;\n\t\t\t\tconst pts = curve.getPoints(resolution);\n\n\t\t\t\tfor (let j = 0; j < pts.length; j++) {\n\t\t\t\t\tconst point = pts[j];\n\t\t\t\t\tif (last && last.equals(point)) continue; // ensures no consecutive points are duplicates\n\n\t\t\t\t\tpoints.push(point);\n\t\t\t\t\tlast = point;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (this.autoClose && points.length > 1 && !points[points.length - 1].equals(points[0])) {\n\t\t\t\tpoints.push(points[0]);\n\t\t\t}\n\n\t\t\treturn points;\n\t\t}\n\n\t\tcopy(source) {\n\t\t\tsuper.copy(source);\n\t\t\tthis.curves = [];\n\n\t\t\tfor (let i = 0, l = source.curves.length; i < l; i++) {\n\t\t\t\tconst curve = source.curves[i];\n\t\t\t\tthis.curves.push(curve.clone());\n\t\t\t}\n\n\t\t\tthis.autoClose = source.autoClose;\n\t\t\treturn this;\n\t\t}\n\n\t\ttoJSON() {\n\t\t\tconst data = super.toJSON();\n\t\t\tdata.autoClose = this.autoClose;\n\t\t\tdata.curves = [];\n\n\t\t\tfor (let i = 0, l = this.curves.length; i < l; i++) {\n\t\t\t\tconst curve = this.curves[i];\n\t\t\t\tdata.curves.push(curve.toJSON());\n\t\t\t}\n\n\t\t\treturn data;\n\t\t}\n\n\t\tfromJSON(json) {\n\t\t\tsuper.fromJSON(json);\n\t\t\tthis.autoClose = json.autoClose;\n\t\t\tthis.curves = [];\n\n\t\t\tfor (let i = 0, l = json.curves.length; i < l; i++) {\n\t\t\t\tconst curve = json.curves[i];\n\t\t\t\tthis.curves.push(new Curves[curve.type]().fromJSON(curve));\n\t\t\t}\n\n\t\t\treturn this;\n\t\t}\n\n\t}\n\n\tclass Path extends CurvePath {\n\t\tconstructor(points) {\n\t\t\tsuper();\n\t\t\tthis.type = 'Path';\n\t\t\tthis.currentPoint = new Vector2();\n\n\t\t\tif (points) {\n\t\t\t\tthis.setFromPoints(points);\n\t\t\t}\n\t\t}\n\n\t\tsetFromPoints(points) {\n\t\t\tthis.moveTo(points[0].x, points[0].y);\n\n\t\t\tfor (let i = 1, l = points.length; i < l; i++) {\n\t\t\t\tthis.lineTo(points[i].x, points[i].y);\n\t\t\t}\n\n\t\t\treturn this;\n\t\t}\n\n\t\tmoveTo(x, y) {\n\t\t\tthis.currentPoint.set(x, y); // TODO consider referencing vectors instead of copying?\n\n\t\t\treturn this;\n\t\t}\n\n\t\tlineTo(x, y) {\n\t\t\tconst curve = new LineCurve(this.currentPoint.clone(), new Vector2(x, y));\n\t\t\tthis.curves.push(curve);\n\t\t\tthis.currentPoint.set(x, y);\n\t\t\treturn this;\n\t\t}\n\n\t\tquadraticCurveTo(aCPx, aCPy, aX, aY) {\n\t\t\tconst curve = new QuadraticBezierCurve(this.currentPoint.clone(), new Vector2(aCPx, aCPy), new Vector2(aX, aY));\n\t\t\tthis.curves.push(curve);\n\t\t\tthis.currentPoint.set(aX, aY);\n\t\t\treturn this;\n\t\t}\n\n\t\tbezierCurveTo(aCP1x, aCP1y, aCP2x, aCP2y, aX, aY) {\n\t\t\tconst curve = new CubicBezierCurve(this.currentPoint.clone(), new Vector2(aCP1x, aCP1y), new Vector2(aCP2x, aCP2y), new Vector2(aX, aY));\n\t\t\tthis.curves.push(curve);\n\t\t\tthis.currentPoint.set(aX, aY);\n\t\t\treturn this;\n\t\t}\n\n\t\tsplineThru(pts\n\t\t/*Array of Vector*/\n\t\t) {\n\t\t\tconst npts = [this.currentPoint.clone()].concat(pts);\n\t\t\tconst curve = new SplineCurve(npts);\n\t\t\tthis.curves.push(curve);\n\t\t\tthis.currentPoint.copy(pts[pts.length - 1]);\n\t\t\treturn this;\n\t\t}\n\n\t\tarc(aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise) {\n\t\t\tconst x0 = this.currentPoint.x;\n\t\t\tconst y0 = this.currentPoint.y;\n\t\t\tthis.absarc(aX + x0, aY + y0, aRadius, aStartAngle, aEndAngle, aClockwise);\n\t\t\treturn this;\n\t\t}\n\n\t\tabsarc(aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise) {\n\t\t\tthis.absellipse(aX, aY, aRadius, aRadius, aStartAngle, aEndAngle, aClockwise);\n\t\t\treturn this;\n\t\t}\n\n\t\tellipse(aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation) {\n\t\t\tconst x0 = this.currentPoint.x;\n\t\t\tconst y0 = this.currentPoint.y;\n\t\t\tthis.absellipse(aX + x0, aY + y0, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation);\n\t\t\treturn this;\n\t\t}\n\n\t\tabsellipse(aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation) {\n\t\t\tconst curve = new EllipseCurve(aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation);\n\n\t\t\tif (this.curves.length > 0) {\n\t\t\t\t// if a previous curve is present, attempt to join\n\t\t\t\tconst firstPoint = curve.getPoint(0);\n\n\t\t\t\tif (!firstPoint.equals(this.currentPoint)) {\n\t\t\t\t\tthis.lineTo(firstPoint.x, firstPoint.y);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.curves.push(curve);\n\t\t\tconst lastPoint = curve.getPoint(1);\n\t\t\tthis.currentPoint.copy(lastPoint);\n\t\t\treturn this;\n\t\t}\n\n\t\tcopy(source) {\n\t\t\tsuper.copy(source);\n\t\t\tthis.currentPoint.copy(source.currentPoint);\n\t\t\treturn this;\n\t\t}\n\n\t\ttoJSON() {\n\t\t\tconst data = super.toJSON();\n\t\t\tdata.currentPoint = this.currentPoint.toArray();\n\t\t\treturn data;\n\t\t}\n\n\t\tfromJSON(json) {\n\t\t\tsuper.fromJSON(json);\n\t\t\tthis.currentPoint.fromArray(json.currentPoint);\n\t\t\treturn this;\n\t\t}\n\n\t}\n\n\tclass Shape extends Path {\n\t\tconstructor(points) {\n\t\t\tsuper(points);\n\t\t\tthis.uuid = generateUUID();\n\t\t\tthis.type = 'Shape';\n\t\t\tthis.holes = [];\n\t\t}\n\n\t\tgetPointsHoles(divisions) {\n\t\t\tconst holesPts = [];\n\n\t\t\tfor (let i = 0, l = this.holes.length; i < l; i++) {\n\t\t\t\tholesPts[i] = this.holes[i].getPoints(divisions);\n\t\t\t}\n\n\t\t\treturn holesPts;\n\t\t} // get points of shape and holes (keypoints based on segments parameter)\n\n\n\t\textractPoints(divisions) {\n\t\t\treturn {\n\t\t\t\tshape: this.getPoints(divisions),\n\t\t\t\tholes: this.getPointsHoles(divisions)\n\t\t\t};\n\t\t}\n\n\t\tcopy(source) {\n\t\t\tsuper.copy(source);\n\t\t\tthis.holes = [];\n\n\t\t\tfor (let i = 0, l = source.holes.length; i < l; i++) {\n\t\t\t\tconst hole = source.holes[i];\n\t\t\t\tthis.holes.push(hole.clone());\n\t\t\t}\n\n\t\t\treturn this;\n\t\t}\n\n\t\ttoJSON() {\n\t\t\tconst data = super.toJSON();\n\t\t\tdata.uuid = this.uuid;\n\t\t\tdata.holes = [];\n\n\t\t\tfor (let i = 0, l = this.holes.length; i < l; i++) {\n\t\t\t\tconst hole = this.holes[i];\n\t\t\t\tdata.holes.push(hole.toJSON());\n\t\t\t}\n\n\t\t\treturn data;\n\t\t}\n\n\t\tfromJSON(json) {\n\t\t\tsuper.fromJSON(json);\n\t\t\tthis.uuid = json.uuid;\n\t\t\tthis.holes = [];\n\n\t\t\tfor (let i = 0, l = json.holes.length; i < l; i++) {\n\t\t\t\tconst hole = json.holes[i];\n\t\t\t\tthis.holes.push(new Path().fromJSON(hole));\n\t\t\t}\n\n\t\t\treturn this;\n\t\t}\n\n\t}\n\n\t/**\n\t * Port from https://github.com/mapbox/earcut (v2.2.2)\n\t */\n\tconst Earcut = {\n\t\ttriangulate: function (data, holeIndices, dim = 2) {\n\t\t\tconst hasHoles = holeIndices && holeIndices.length;\n\t\t\tconst outerLen = hasHoles ? holeIndices[0] * dim : data.length;\n\t\t\tlet outerNode = linkedList(data, 0, outerLen, dim, true);\n\t\t\tconst triangles = [];\n\t\t\tif (!outerNode || outerNode.next === outerNode.prev) return triangles;\n\t\t\tlet minX, minY, maxX, maxY, x, y, invSize;\n\t\t\tif (hasHoles) outerNode = eliminateHoles(data, holeIndices, outerNode, dim); // if the shape is not too simple, we'll use z-order curve hash later; calculate polygon bbox\n\n\t\t\tif (data.length > 80 * dim) {\n\t\t\t\tminX = maxX = data[0];\n\t\t\t\tminY = maxY = data[1];\n\n\t\t\t\tfor (let i = dim; i < outerLen; i += dim) {\n\t\t\t\t\tx = data[i];\n\t\t\t\t\ty = data[i + 1];\n\t\t\t\t\tif (x < minX) minX = x;\n\t\t\t\t\tif (y < minY) minY = y;\n\t\t\t\t\tif (x > maxX) maxX = x;\n\t\t\t\t\tif (y > maxY) maxY = y;\n\t\t\t\t} // minX, minY and invSize are later used to transform coords into integers for z-order calculation\n\n\n\t\t\t\tinvSize = Math.max(maxX - minX, maxY - minY);\n\t\t\t\tinvSize = invSize !== 0 ? 1 / invSize : 0;\n\t\t\t}\n\n\t\t\tearcutLinked(outerNode, triangles, dim, minX, minY, invSize);\n\t\t\treturn triangles;\n\t\t}\n\t}; // create a circular doubly linked list from polygon points in the specified winding order\n\n\tfunction linkedList(data, start, end, dim, clockwise) {\n\t\tlet i, last;\n\n\t\tif (clockwise === signedArea(data, start, end, dim) > 0) {\n\t\t\tfor (i = start; i < end; i += dim) last = insertNode(i, data[i], data[i + 1], last);\n\t\t} else {\n\t\t\tfor (i = end - dim; i >= start; i -= dim) last = insertNode(i, data[i], data[i + 1], last);\n\t\t}\n\n\t\tif (last && equals(last, last.next)) {\n\t\t\tremoveNode(last);\n\t\t\tlast = last.next;\n\t\t}\n\n\t\treturn last;\n\t} // eliminate colinear or duplicate points\n\n\n\tfunction filterPoints(start, end) {\n\t\tif (!start) return start;\n\t\tif (!end) end = start;\n\t\tlet p = start,\n\t\t\t\tagain;\n\n\t\tdo {\n\t\t\tagain = false;\n\n\t\t\tif (!p.steiner && (equals(p, p.next) || area(p.prev, p, p.next) === 0)) {\n\t\t\t\tremoveNode(p);\n\t\t\t\tp = end = p.prev;\n\t\t\t\tif (p === p.next) break;\n\t\t\t\tagain = true;\n\t\t\t} else {\n\t\t\t\tp = p.next;\n\t\t\t}\n\t\t} while (again || p !== end);\n\n\t\treturn end;\n\t} // main ear slicing loop which triangulates a polygon (given as a linked list)\n\n\n\tfunction earcutLinked(ear, triangles, dim, minX, minY, invSize, pass) {\n\t\tif (!ear) return; // interlink polygon nodes in z-order\n\n\t\tif (!pass && invSize) indexCurve(ear, minX, minY, invSize);\n\t\tlet stop = ear,\n\t\t\t\tprev,\n\t\t\t\tnext; // iterate through ears, slicing them one by one\n\n\t\twhile (ear.prev !== ear.next) {\n\t\t\tprev = ear.prev;\n\t\t\tnext = ear.next;\n\n\t\t\tif (invSize ? isEarHashed(ear, minX, minY, invSize) : isEar(ear)) {\n\t\t\t\t// cut off the triangle\n\t\t\t\ttriangles.push(prev.i / dim);\n\t\t\t\ttriangles.push(ear.i / dim);\n\t\t\t\ttriangles.push(next.i / dim);\n\t\t\t\tremoveNode(ear); // skipping the next vertex leads to less sliver triangles\n\n\t\t\t\tear = next.next;\n\t\t\t\tstop = next.next;\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tear = next; // if we looped through the whole remaining polygon and can't find any more ears\n\n\t\t\tif (ear === stop) {\n\t\t\t\t// try filtering points and slicing again\n\t\t\t\tif (!pass) {\n\t\t\t\t\tearcutLinked(filterPoints(ear), triangles, dim, minX, minY, invSize, 1); // if this didn't work, try curing all small self-intersections locally\n\t\t\t\t} else if (pass === 1) {\n\t\t\t\t\tear = cureLocalIntersections(filterPoints(ear), triangles, dim);\n\t\t\t\t\tearcutLinked(ear, triangles, dim, minX, minY, invSize, 2); // as a last resort, try splitting the remaining polygon into two\n\t\t\t\t} else if (pass === 2) {\n\t\t\t\t\tsplitEarcut(ear, triangles, dim, minX, minY, invSize);\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t} // check whether a polygon node forms a valid ear with adjacent nodes\n\n\n\tfunction isEar(ear) {\n\t\tconst a = ear.prev,\n\t\t\t\t\tb = ear,\n\t\t\t\t\tc = ear.next;\n\t\tif (area(a, b, c) >= 0) return false; // reflex, can't be an ear\n\t\t// now make sure we don't have other points inside the potential ear\n\n\t\tlet p = ear.next.next;\n\n\t\twhile (p !== ear.prev) {\n\t\t\tif (pointInTriangle(a.x, a.y, b.x, b.y, c.x, c.y, p.x, p.y) && area(p.prev, p, p.next) >= 0) return false;\n\t\t\tp = p.next;\n\t\t}\n\n\t\treturn true;\n\t}\n\n\tfunction isEarHashed(ear, minX, minY, invSize) {\n\t\tconst a = ear.prev,\n\t\t\t\t\tb = ear,\n\t\t\t\t\tc = ear.next;\n\t\tif (area(a, b, c) >= 0) return false; // reflex, can't be an ear\n\t\t// triangle bbox; min & max are calculated like this for speed\n\n\t\tconst minTX = a.x < b.x ? a.x < c.x ? a.x : c.x : b.x < c.x ? b.x : c.x,\n\t\t\t\t\tminTY = a.y < b.y ? a.y < c.y ? a.y : c.y : b.y < c.y ? b.y : c.y,\n\t\t\t\t\tmaxTX = a.x > b.x ? a.x > c.x ? a.x : c.x : b.x > c.x ? b.x : c.x,\n\t\t\t\t\tmaxTY = a.y > b.y ? a.y > c.y ? a.y : c.y : b.y > c.y ? b.y : c.y; // z-order range for the current triangle bbox;\n\n\t\tconst minZ = zOrder(minTX, minTY, minX, minY, invSize),\n\t\t\t\t\tmaxZ = zOrder(maxTX, maxTY, minX, minY, invSize);\n\t\tlet p = ear.prevZ,\n\t\t\t\tn = ear.nextZ; // look for points inside the triangle in both directions\n\n\t\twhile (p && p.z >= minZ && n && n.z <= maxZ) {\n\t\t\tif (p !== ear.prev && p !== ear.next && pointInTriangle(a.x, a.y, b.x, b.y, c.x, c.y, p.x, p.y) && area(p.prev, p, p.next) >= 0) return false;\n\t\t\tp = p.prevZ;\n\t\t\tif (n !== ear.prev && n !== ear.next && pointInTriangle(a.x, a.y, b.x, b.y, c.x, c.y, n.x, n.y) && area(n.prev, n, n.next) >= 0) return false;\n\t\t\tn = n.nextZ;\n\t\t} // look for remaining points in decreasing z-order\n\n\n\t\twhile (p && p.z >= minZ) {\n\t\t\tif (p !== ear.prev && p !== ear.next && pointInTriangle(a.x, a.y, b.x, b.y, c.x, c.y, p.x, p.y) && area(p.prev, p, p.next) >= 0) return false;\n\t\t\tp = p.prevZ;\n\t\t} // look for remaining points in increasing z-order\n\n\n\t\twhile (n && n.z <= maxZ) {\n\t\t\tif (n !== ear.prev && n !== ear.next && pointInTriangle(a.x, a.y, b.x, b.y, c.x, c.y, n.x, n.y) && area(n.prev, n, n.next) >= 0) return false;\n\t\t\tn = n.nextZ;\n\t\t}\n\n\t\treturn true;\n\t} // go through all polygon nodes and cure small local self-intersections\n\n\n\tfunction cureLocalIntersections(start, triangles, dim) {\n\t\tlet p = start;\n\n\t\tdo {\n\t\t\tconst a = p.prev,\n\t\t\t\t\t\tb = p.next.next;\n\n\t\t\tif (!equals(a, b) && intersects(a, p, p.next, b) && locallyInside(a, b) && locallyInside(b, a)) {\n\t\t\t\ttriangles.push(a.i / dim);\n\t\t\t\ttriangles.push(p.i / dim);\n\t\t\t\ttriangles.push(b.i / dim); // remove two nodes involved\n\n\t\t\t\tremoveNode(p);\n\t\t\t\tremoveNode(p.next);\n\t\t\t\tp = start = b;\n\t\t\t}\n\n\t\t\tp = p.next;\n\t\t} while (p !== start);\n\n\t\treturn filterPoints(p);\n\t} // try splitting polygon into two and triangulate them independently\n\n\n\tfunction splitEarcut(start, triangles, dim, minX, minY, invSize) {\n\t\t// look for a valid diagonal that divides the polygon into two\n\t\tlet a = start;\n\n\t\tdo {\n\t\t\tlet b = a.next.next;\n\n\t\t\twhile (b !== a.prev) {\n\t\t\t\tif (a.i !== b.i && isValidDiagonal(a, b)) {\n\t\t\t\t\t// split the polygon in two by the diagonal\n\t\t\t\t\tlet c = splitPolygon(a, b); // filter colinear points around the cuts\n\n\t\t\t\t\ta = filterPoints(a, a.next);\n\t\t\t\t\tc = filterPoints(c, c.next); // run earcut on each half\n\n\t\t\t\t\tearcutLinked(a, triangles, dim, minX, minY, invSize);\n\t\t\t\t\tearcutLinked(c, triangles, dim, minX, minY, invSize);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tb = b.next;\n\t\t\t}\n\n\t\t\ta = a.next;\n\t\t} while (a !== start);\n\t} // link every hole into the outer loop, producing a single-ring polygon without holes\n\n\n\tfunction eliminateHoles(data, holeIndices, outerNode, dim) {\n\t\tconst queue = [];\n\t\tlet i, len, start, end, list;\n\n\t\tfor (i = 0, len = holeIndices.length; i < len; i++) {\n\t\t\tstart = holeIndices[i] * dim;\n\t\t\tend = i < len - 1 ? holeIndices[i + 1] * dim : data.length;\n\t\t\tlist = linkedList(data, start, end, dim, false);\n\t\t\tif (list === list.next) list.steiner = true;\n\t\t\tqueue.push(getLeftmost(list));\n\t\t}\n\n\t\tqueue.sort(compareX); // process holes from left to right\n\n\t\tfor (i = 0; i < queue.length; i++) {\n\t\t\teliminateHole(queue[i], outerNode);\n\t\t\touterNode = filterPoints(outerNode, outerNode.next);\n\t\t}\n\n\t\treturn outerNode;\n\t}\n\n\tfunction compareX(a, b) {\n\t\treturn a.x - b.x;\n\t} // find a bridge between vertices that connects hole with an outer ring and and link it\n\n\n\tfunction eliminateHole(hole, outerNode) {\n\t\touterNode = findHoleBridge(hole, outerNode);\n\n\t\tif (outerNode) {\n\t\t\tconst b = splitPolygon(outerNode, hole); // filter collinear points around the cuts\n\n\t\t\tfilterPoints(outerNode, outerNode.next);\n\t\t\tfilterPoints(b, b.next);\n\t\t}\n\t} // David Eberly's algorithm for finding a bridge between hole and outer polygon\n\n\n\tfunction findHoleBridge(hole, outerNode) {\n\t\tlet p = outerNode;\n\t\tconst hx = hole.x;\n\t\tconst hy = hole.y;\n\t\tlet qx = -Infinity,\n\t\t\t\tm; // find a segment intersected by a ray from the hole's leftmost point to the left;\n\t\t// segment's endpoint with lesser x will be potential connection point\n\n\t\tdo {\n\t\t\tif (hy <= p.y && hy >= p.next.y && p.next.y !== p.y) {\n\t\t\t\tconst x = p.x + (hy - p.y) * (p.next.x - p.x) / (p.next.y - p.y);\n\n\t\t\t\tif (x <= hx && x > qx) {\n\t\t\t\t\tqx = x;\n\n\t\t\t\t\tif (x === hx) {\n\t\t\t\t\t\tif (hy === p.y) return p;\n\t\t\t\t\t\tif (hy === p.next.y) return p.next;\n\t\t\t\t\t}\n\n\t\t\t\t\tm = p.x < p.next.x ? p : p.next;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tp = p.next;\n\t\t} while (p !== outerNode);\n\n\t\tif (!m) return null;\n\t\tif (hx === qx) return m; // hole touches outer segment; pick leftmost endpoint\n\t\t// look for points inside the triangle of hole point, segment intersection and endpoint;\n\t\t// if there are no points found, we have a valid connection;\n\t\t// otherwise choose the point of the minimum angle with the ray as connection point\n\n\t\tconst stop = m,\n\t\t\t\t\tmx = m.x,\n\t\t\t\t\tmy = m.y;\n\t\tlet tanMin = Infinity,\n\t\t\t\ttan;\n\t\tp = m;\n\n\t\tdo {\n\t\t\tif (hx >= p.x && p.x >= mx && hx !== p.x && pointInTriangle(hy < my ? hx : qx, hy, mx, my, hy < my ? qx : hx, hy, p.x, p.y)) {\n\t\t\t\ttan = Math.abs(hy - p.y) / (hx - p.x); // tangential\n\n\t\t\t\tif (locallyInside(p, hole) && (tan < tanMin || tan === tanMin && (p.x > m.x || p.x === m.x && sectorContainsSector(m, p)))) {\n\t\t\t\t\tm = p;\n\t\t\t\t\ttanMin = tan;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tp = p.next;\n\t\t} while (p !== stop);\n\n\t\treturn m;\n\t} // whether sector in vertex m contains sector in vertex p in the same coordinates\n\n\n\tfunction sectorContainsSector(m, p) {\n\t\treturn area(m.prev, m, p.prev) < 0 && area(p.next, m, m.next) < 0;\n\t} // interlink polygon nodes in z-order\n\n\n\tfunction indexCurve(start, minX, minY, invSize) {\n\t\tlet p = start;\n\n\t\tdo {\n\t\t\tif (p.z === null) p.z = zOrder(p.x, p.y, minX, minY, invSize);\n\t\t\tp.prevZ = p.prev;\n\t\t\tp.nextZ = p.next;\n\t\t\tp = p.next;\n\t\t} while (p !== start);\n\n\t\tp.prevZ.nextZ = null;\n\t\tp.prevZ = null;\n\t\tsortLinked(p);\n\t} // Simon Tatham's linked list merge sort algorithm\n\t// http://www.chiark.greenend.org.uk/~sgtatham/algorithms/listsort.html\n\n\n\tfunction sortLinked(list) {\n\t\tlet i,\n\t\t\t\tp,\n\t\t\t\tq,\n\t\t\t\te,\n\t\t\t\ttail,\n\t\t\t\tnumMerges,\n\t\t\t\tpSize,\n\t\t\t\tqSize,\n\t\t\t\tinSize = 1;\n\n\t\tdo {\n\t\t\tp = list;\n\t\t\tlist = null;\n\t\t\ttail = null;\n\t\t\tnumMerges = 0;\n\n\t\t\twhile (p) {\n\t\t\t\tnumMerges++;\n\t\t\t\tq = p;\n\t\t\t\tpSize = 0;\n\n\t\t\t\tfor (i = 0; i < inSize; i++) {\n\t\t\t\t\tpSize++;\n\t\t\t\t\tq = q.nextZ;\n\t\t\t\t\tif (!q) break;\n\t\t\t\t}\n\n\t\t\t\tqSize = inSize;\n\n\t\t\t\twhile (pSize > 0 || qSize > 0 && q) {\n\t\t\t\t\tif (pSize !== 0 && (qSize === 0 || !q || p.z <= q.z)) {\n\t\t\t\t\t\te = p;\n\t\t\t\t\t\tp = p.nextZ;\n\t\t\t\t\t\tpSize--;\n\t\t\t\t\t} else {\n\t\t\t\t\t\te = q;\n\t\t\t\t\t\tq = q.nextZ;\n\t\t\t\t\t\tqSize--;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (tail) tail.nextZ = e;else list = e;\n\t\t\t\t\te.prevZ = tail;\n\t\t\t\t\ttail = e;\n\t\t\t\t}\n\n\t\t\t\tp = q;\n\t\t\t}\n\n\t\t\ttail.nextZ = null;\n\t\t\tinSize *= 2;\n\t\t} while (numMerges > 1);\n\n\t\treturn list;\n\t} // z-order of a point given coords and inverse of the longer side of data bbox\n\n\n\tfunction zOrder(x, y, minX, minY, invSize) {\n\t\t// coords are transformed into non-negative 15-bit integer range\n\t\tx = 32767 * (x - minX) * invSize;\n\t\ty = 32767 * (y - minY) * invSize;\n\t\tx = (x | x << 8) & 0x00FF00FF;\n\t\tx = (x | x << 4) & 0x0F0F0F0F;\n\t\tx = (x | x << 2) & 0x33333333;\n\t\tx = (x | x << 1) & 0x55555555;\n\t\ty = (y | y << 8) & 0x00FF00FF;\n\t\ty = (y | y << 4) & 0x0F0F0F0F;\n\t\ty = (y | y << 2) & 0x33333333;\n\t\ty = (y | y << 1) & 0x55555555;\n\t\treturn x | y << 1;\n\t} // find the leftmost node of a polygon ring\n\n\n\tfunction getLeftmost(start) {\n\t\tlet p = start,\n\t\t\t\tleftmost = start;\n\n\t\tdo {\n\t\t\tif (p.x < leftmost.x || p.x === leftmost.x && p.y < leftmost.y) leftmost = p;\n\t\t\tp = p.next;\n\t\t} while (p !== start);\n\n\t\treturn leftmost;\n\t} // check if a point lies within a convex triangle\n\n\n\tfunction pointInTriangle(ax, ay, bx, by, cx, cy, px, py) {\n\t\treturn (cx - px) * (ay - py) - (ax - px) * (cy - py) >= 0 && (ax - px) * (by - py) - (bx - px) * (ay - py) >= 0 && (bx - px) * (cy - py) - (cx - px) * (by - py) >= 0;\n\t} // check if a diagonal between two polygon nodes is valid (lies in polygon interior)\n\n\n\tfunction isValidDiagonal(a, b) {\n\t\treturn a.next.i !== b.i && a.prev.i !== b.i && !intersectsPolygon(a, b) && ( // dones't intersect other edges\n\t\tlocallyInside(a, b) && locallyInside(b, a) && middleInside(a, b) && ( // locally visible\n\t\tarea(a.prev, a, b.prev) || area(a, b.prev, b)) || // does not create opposite-facing sectors\n\t\tequals(a, b) && area(a.prev, a, a.next) > 0 && area(b.prev, b, b.next) > 0); // special zero-length case\n\t} // signed area of a triangle\n\n\n\tfunction area(p, q, r) {\n\t\treturn (q.y - p.y) * (r.x - q.x) - (q.x - p.x) * (r.y - q.y);\n\t} // check if two points are equal\n\n\n\tfunction equals(p1, p2) {\n\t\treturn p1.x === p2.x && p1.y === p2.y;\n\t} // check if two segments intersect\n\n\n\tfunction intersects(p1, q1, p2, q2) {\n\t\tconst o1 = sign(area(p1, q1, p2));\n\t\tconst o2 = sign(area(p1, q1, q2));\n\t\tconst o3 = sign(area(p2, q2, p1));\n\t\tconst o4 = sign(area(p2, q2, q1));\n\t\tif (o1 !== o2 && o3 !== o4) return true; // general case\n\n\t\tif (o1 === 0 && onSegment(p1, p2, q1)) return true; // p1, q1 and p2 are collinear and p2 lies on p1q1\n\n\t\tif (o2 === 0 && onSegment(p1, q2, q1)) return true; // p1, q1 and q2 are collinear and q2 lies on p1q1\n\n\t\tif (o3 === 0 && onSegment(p2, p1, q2)) return true; // p2, q2 and p1 are collinear and p1 lies on p2q2\n\n\t\tif (o4 === 0 && onSegment(p2, q1, q2)) return true; // p2, q2 and q1 are collinear and q1 lies on p2q2\n\n\t\treturn false;\n\t} // for collinear points p, q, r, check if point q lies on segment pr\n\n\n\tfunction onSegment(p, q, r) {\n\t\treturn q.x <= Math.max(p.x, r.x) && q.x >= Math.min(p.x, r.x) && q.y <= Math.max(p.y, r.y) && q.y >= Math.min(p.y, r.y);\n\t}\n\n\tfunction sign(num) {\n\t\treturn num > 0 ? 1 : num < 0 ? -1 : 0;\n\t} // check if a polygon diagonal intersects any polygon segments\n\n\n\tfunction intersectsPolygon(a, b) {\n\t\tlet p = a;\n\n\t\tdo {\n\t\t\tif (p.i !== a.i && p.next.i !== a.i && p.i !== b.i && p.next.i !== b.i && intersects(p, p.next, a, b)) return true;\n\t\t\tp = p.next;\n\t\t} while (p !== a);\n\n\t\treturn false;\n\t} // check if a polygon diagonal is locally inside the polygon\n\n\n\tfunction locallyInside(a, b) {\n\t\treturn area(a.prev, a, a.next) < 0 ? area(a, b, a.next) >= 0 && area(a, a.prev, b) >= 0 : area(a, b, a.prev) < 0 || area(a, a.next, b) < 0;\n\t} // check if the middle point of a polygon diagonal is inside the polygon\n\n\n\tfunction middleInside(a, b) {\n\t\tlet p = a,\n\t\t\t\tinside = false;\n\t\tconst px = (a.x + b.x) / 2,\n\t\t\t\t\tpy = (a.y + b.y) / 2;\n\n\t\tdo {\n\t\t\tif (p.y > py !== p.next.y > py && p.next.y !== p.y && px < (p.next.x - p.x) * (py - p.y) / (p.next.y - p.y) + p.x) inside = !inside;\n\t\t\tp = p.next;\n\t\t} while (p !== a);\n\n\t\treturn inside;\n\t} // link two polygon vertices with a bridge; if the vertices belong to the same ring, it splits polygon into two;\n\t// if one belongs to the outer ring and another to a hole, it merges it into a single ring\n\n\n\tfunction splitPolygon(a, b) {\n\t\tconst a2 = new Node(a.i, a.x, a.y),\n\t\t\t\t\tb2 = new Node(b.i, b.x, b.y),\n\t\t\t\t\tan = a.next,\n\t\t\t\t\tbp = b.prev;\n\t\ta.next = b;\n\t\tb.prev = a;\n\t\ta2.next = an;\n\t\tan.prev = a2;\n\t\tb2.next = a2;\n\t\ta2.prev = b2;\n\t\tbp.next = b2;\n\t\tb2.prev = bp;\n\t\treturn b2;\n\t} // create a node and optionally link it with previous one (in a circular doubly linked list)\n\n\n\tfunction insertNode(i, x, y, last) {\n\t\tconst p = new Node(i, x, y);\n\n\t\tif (!last) {\n\t\t\tp.prev = p;\n\t\t\tp.next = p;\n\t\t} else {\n\t\t\tp.next = last.next;\n\t\t\tp.prev = last;\n\t\t\tlast.next.prev = p;\n\t\t\tlast.next = p;\n\t\t}\n\n\t\treturn p;\n\t}\n\n\tfunction removeNode(p) {\n\t\tp.next.prev = p.prev;\n\t\tp.prev.next = p.next;\n\t\tif (p.prevZ) p.prevZ.nextZ = p.nextZ;\n\t\tif (p.nextZ) p.nextZ.prevZ = p.prevZ;\n\t}\n\n\tfunction Node(i, x, y) {\n\t\t// vertex index in coordinates array\n\t\tthis.i = i; // vertex coordinates\n\n\t\tthis.x = x;\n\t\tthis.y = y; // previous and next vertex nodes in a polygon ring\n\n\t\tthis.prev = null;\n\t\tthis.next = null; // z-order curve value\n\n\t\tthis.z = null; // previous and next nodes in z-order\n\n\t\tthis.prevZ = null;\n\t\tthis.nextZ = null; // indicates whether this is a steiner point\n\n\t\tthis.steiner = false;\n\t}\n\n\tfunction signedArea(data, start, end, dim) {\n\t\tlet sum = 0;\n\n\t\tfor (let i = start, j = end - dim; i < end; i += dim) {\n\t\t\tsum += (data[j] - data[i]) * (data[i + 1] + data[j + 1]);\n\t\t\tj = i;\n\t\t}\n\n\t\treturn sum;\n\t}\n\n\tclass ShapeUtils {\n\t\t// calculate area of the contour polygon\n\t\tstatic area(contour) {\n\t\t\tconst n = contour.length;\n\t\t\tlet a = 0.0;\n\n\t\t\tfor (let p = n - 1, q = 0; q < n; p = q++) {\n\t\t\t\ta += contour[p].x * contour[q].y - contour[q].x * contour[p].y;\n\t\t\t}\n\n\t\t\treturn a * 0.5;\n\t\t}\n\n\t\tstatic isClockWise(pts) {\n\t\t\treturn ShapeUtils.area(pts) < 0;\n\t\t}\n\n\t\tstatic triangulateShape(contour, holes) {\n\t\t\tconst vertices = []; // flat array of vertices like [ x0,y0, x1,y1, x2,y2, ... ]\n\n\t\t\tconst holeIndices = []; // array of hole indices\n\n\t\t\tconst faces = []; // final array of vertex indices like [ [ a,b,d ], [ b,c,d ] ]\n\n\t\t\tremoveDupEndPts(contour);\n\t\t\taddContour(vertices, contour); //\n\n\t\t\tlet holeIndex = contour.length;\n\t\t\tholes.forEach(removeDupEndPts);\n\n\t\t\tfor (let i = 0; i < holes.length; i++) {\n\t\t\t\tholeIndices.push(holeIndex);\n\t\t\t\tholeIndex += holes[i].length;\n\t\t\t\taddContour(vertices, holes[i]);\n\t\t\t} //\n\n\n\t\t\tconst triangles = Earcut.triangulate(vertices, holeIndices); //\n\n\t\t\tfor (let i = 0; i < triangles.length; i += 3) {\n\t\t\t\tfaces.push(triangles.slice(i, i + 3));\n\t\t\t}\n\n\t\t\treturn faces;\n\t\t}\n\n\t}\n\n\tfunction removeDupEndPts(points) {\n\t\tconst l = points.length;\n\n\t\tif (l > 2 && points[l - 1].equals(points[0])) {\n\t\t\tpoints.pop();\n\t\t}\n\t}\n\n\tfunction addContour(vertices, contour) {\n\t\tfor (let i = 0; i < contour.length; i++) {\n\t\t\tvertices.push(contour[i].x);\n\t\t\tvertices.push(contour[i].y);\n\t\t}\n\t}\n\n\t/**\n\t * Creates extruded geometry from a path shape.\n\t *\n\t * parameters = {\n\t *\n\t *\tcurveSegments: <int>, // number of points on the curves\n\t *\tsteps: <int>, // number of points for z-side extrusions / used for subdividing segments of extrude spline too\n\t *\tdepth: <float>, // Depth to extrude the shape\n\t *\n\t *\tbevelEnabled: <bool>, // turn on bevel\n\t *\tbevelThickness: <float>, // how deep into the original shape bevel goes\n\t *\tbevelSize: <float>, // how far from shape outline (including bevelOffset) is bevel\n\t *\tbevelOffset: <float>, // how far from shape outline does bevel start\n\t *\tbevelSegments: <int>, // number of bevel layers\n\t *\n\t *\textrudePath: <THREE.Curve> // curve to extrude shape along\n\t *\n\t *\tUVGenerator: <Object> // object that provides UV generator functions\n\t *\n\t * }\n\t */\n\n\tclass ExtrudeGeometry extends BufferGeometry {\n\t\tconstructor(shapes = new Shape([new Vector2(0.5, 0.5), new Vector2(-0.5, 0.5), new Vector2(-0.5, -0.5), new Vector2(0.5, -0.5)]), options = {}) {\n\t\t\tsuper();\n\t\t\tthis.type = 'ExtrudeGeometry';\n\t\t\tthis.parameters = {\n\t\t\t\tshapes: shapes,\n\t\t\t\toptions: options\n\t\t\t};\n\t\t\tshapes = Array.isArray(shapes) ? shapes : [shapes];\n\t\t\tconst scope = this;\n\t\t\tconst verticesArray = [];\n\t\t\tconst uvArray = [];\n\n\t\t\tfor (let i = 0, l = shapes.length; i < l; i++) {\n\t\t\t\tconst shape = shapes[i];\n\t\t\t\taddShape(shape);\n\t\t\t} // build geometry\n\n\n\t\t\tthis.setAttribute('position', new Float32BufferAttribute(verticesArray, 3));\n\t\t\tthis.setAttribute('uv', new Float32BufferAttribute(uvArray, 2));\n\t\t\tthis.computeVertexNormals(); // functions\n\n\t\t\tfunction addShape(shape) {\n\t\t\t\tconst placeholder = []; // options\n\n\t\t\t\tconst curveSegments = options.curveSegments !== undefined ? options.curveSegments : 12;\n\t\t\t\tconst steps = options.steps !== undefined ? options.steps : 1;\n\t\t\t\tlet depth = options.depth !== undefined ? options.depth : 1;\n\t\t\t\tlet bevelEnabled = options.bevelEnabled !== undefined ? options.bevelEnabled : true;\n\t\t\t\tlet bevelThickness = options.bevelThickness !== undefined ? options.bevelThickness : 0.2;\n\t\t\t\tlet bevelSize = options.bevelSize !== undefined ? options.bevelSize : bevelThickness - 0.1;\n\t\t\t\tlet bevelOffset = options.bevelOffset !== undefined ? options.bevelOffset : 0;\n\t\t\t\tlet bevelSegments = options.bevelSegments !== undefined ? options.bevelSegments : 3;\n\t\t\t\tconst extrudePath = options.extrudePath;\n\t\t\t\tconst uvgen = options.UVGenerator !== undefined ? options.UVGenerator : WorldUVGenerator; // deprecated options\n\n\t\t\t\tif (options.amount !== undefined) {\n\t\t\t\t\tconsole.warn('THREE.ExtrudeBufferGeometry: amount has been renamed to depth.');\n\t\t\t\t\tdepth = options.amount;\n\t\t\t\t} //\n\n\n\t\t\t\tlet extrudePts,\n\t\t\t\t\t\textrudeByPath = false;\n\t\t\t\tlet splineTube, binormal, normal, position2;\n\n\t\t\t\tif (extrudePath) {\n\t\t\t\t\textrudePts = extrudePath.getSpacedPoints(steps);\n\t\t\t\t\textrudeByPath = true;\n\t\t\t\t\tbevelEnabled = false; // bevels not supported for path extrusion\n\t\t\t\t\t// SETUP TNB variables\n\t\t\t\t\t// TODO1 - have a .isClosed in spline?\n\n\t\t\t\t\tsplineTube = extrudePath.computeFrenetFrames(steps, false); // console.log(splineTube, 'splineTube', splineTube.normals.length, 'steps', steps, 'extrudePts', extrudePts.length);\n\n\t\t\t\t\tbinormal = new Vector3();\n\t\t\t\t\tnormal = new Vector3();\n\t\t\t\t\tposition2 = new Vector3();\n\t\t\t\t} // Safeguards if bevels are not enabled\n\n\n\t\t\t\tif (!bevelEnabled) {\n\t\t\t\t\tbevelSegments = 0;\n\t\t\t\t\tbevelThickness = 0;\n\t\t\t\t\tbevelSize = 0;\n\t\t\t\t\tbevelOffset = 0;\n\t\t\t\t} // Variables initialization\n\n\n\t\t\t\tconst shapePoints = shape.extractPoints(curveSegments);\n\t\t\t\tlet vertices = shapePoints.shape;\n\t\t\t\tconst holes = shapePoints.holes;\n\t\t\t\tconst reverse = !ShapeUtils.isClockWise(vertices);\n\n\t\t\t\tif (reverse) {\n\t\t\t\t\tvertices = vertices.reverse(); // Maybe we should also check if holes are in the opposite direction, just to be safe ...\n\n\t\t\t\t\tfor (let h = 0, hl = holes.length; h < hl; h++) {\n\t\t\t\t\t\tconst ahole = holes[h];\n\n\t\t\t\t\t\tif (ShapeUtils.isClockWise(ahole)) {\n\t\t\t\t\t\t\tholes[h] = ahole.reverse();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tconst faces = ShapeUtils.triangulateShape(vertices, holes);\n\t\t\t\t/* Vertices */\n\n\t\t\t\tconst contour = vertices; // vertices has all points but contour has only points of circumference\n\n\t\t\t\tfor (let h = 0, hl = holes.length; h < hl; h++) {\n\t\t\t\t\tconst ahole = holes[h];\n\t\t\t\t\tvertices = vertices.concat(ahole);\n\t\t\t\t}\n\n\t\t\t\tfunction scalePt2(pt, vec, size) {\n\t\t\t\t\tif (!vec) console.error('THREE.ExtrudeGeometry: vec does not exist');\n\t\t\t\t\treturn vec.clone().multiplyScalar(size).add(pt);\n\t\t\t\t}\n\n\t\t\t\tconst vlen = vertices.length,\n\t\t\t\t\t\t\tflen = faces.length; // Find directions for point movement\n\n\t\t\t\tfunction getBevelVec(inPt, inPrev, inNext) {\n\t\t\t\t\t// computes for inPt the corresponding point inPt' on a new contour\n\t\t\t\t\t//\t shifted by 1 unit (length of normalized vector) to the left\n\t\t\t\t\t// if we walk along contour clockwise, this new contour is outside the old one\n\t\t\t\t\t//\n\t\t\t\t\t// inPt' is the intersection of the two lines parallel to the two\n\t\t\t\t\t//\tadjacent edges of inPt at a distance of 1 unit on the left side.\n\t\t\t\t\tlet v_trans_x, v_trans_y, shrink_by; // resulting translation vector for inPt\n\t\t\t\t\t// good reading for geometry algorithms (here: line-line intersection)\n\t\t\t\t\t// http://geomalgorithms.com/a05-_intersect-1.html\n\n\t\t\t\t\tconst v_prev_x = inPt.x - inPrev.x,\n\t\t\t\t\t\t\t\tv_prev_y = inPt.y - inPrev.y;\n\t\t\t\t\tconst v_next_x = inNext.x - inPt.x,\n\t\t\t\t\t\t\t\tv_next_y = inNext.y - inPt.y;\n\t\t\t\t\tconst v_prev_lensq = v_prev_x * v_prev_x + v_prev_y * v_prev_y; // check for collinear edges\n\n\t\t\t\t\tconst collinear0 = v_prev_x * v_next_y - v_prev_y * v_next_x;\n\n\t\t\t\t\tif (Math.abs(collinear0) > Number.EPSILON) {\n\t\t\t\t\t\t// not collinear\n\t\t\t\t\t\t// length of vectors for normalizing\n\t\t\t\t\t\tconst v_prev_len = Math.sqrt(v_prev_lensq);\n\t\t\t\t\t\tconst v_next_len = Math.sqrt(v_next_x * v_next_x + v_next_y * v_next_y); // shift adjacent points by unit vectors to the left\n\n\t\t\t\t\t\tconst ptPrevShift_x = inPrev.x - v_prev_y / v_prev_len;\n\t\t\t\t\t\tconst ptPrevShift_y = inPrev.y + v_prev_x / v_prev_len;\n\t\t\t\t\t\tconst ptNextShift_x = inNext.x - v_next_y / v_next_len;\n\t\t\t\t\t\tconst ptNextShift_y = inNext.y + v_next_x / v_next_len; // scaling factor for v_prev to intersection point\n\n\t\t\t\t\t\tconst sf = ((ptNextShift_x - ptPrevShift_x) * v_next_y - (ptNextShift_y - ptPrevShift_y) * v_next_x) / (v_prev_x * v_next_y - v_prev_y * v_next_x); // vector from inPt to intersection point\n\n\t\t\t\t\t\tv_trans_x = ptPrevShift_x + v_prev_x * sf - inPt.x;\n\t\t\t\t\t\tv_trans_y = ptPrevShift_y + v_prev_y * sf - inPt.y; // Don't normalize!, otherwise sharp corners become ugly\n\t\t\t\t\t\t//\tbut prevent crazy spikes\n\n\t\t\t\t\t\tconst v_trans_lensq = v_trans_x * v_trans_x + v_trans_y * v_trans_y;\n\n\t\t\t\t\t\tif (v_trans_lensq <= 2) {\n\t\t\t\t\t\t\treturn new Vector2(v_trans_x, v_trans_y);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tshrink_by = Math.sqrt(v_trans_lensq / 2);\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// handle special case of collinear edges\n\t\t\t\t\t\tlet direction_eq = false; // assumes: opposite\n\n\t\t\t\t\t\tif (v_prev_x > Number.EPSILON) {\n\t\t\t\t\t\t\tif (v_next_x > Number.EPSILON) {\n\t\t\t\t\t\t\t\tdirection_eq = true;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tif (v_prev_x < -Number.EPSILON) {\n\t\t\t\t\t\t\t\tif (v_next_x < -Number.EPSILON) {\n\t\t\t\t\t\t\t\t\tdirection_eq = true;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tif (Math.sign(v_prev_y) === Math.sign(v_next_y)) {\n\t\t\t\t\t\t\t\t\tdirection_eq = true;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (direction_eq) {\n\t\t\t\t\t\t\t// console.log(\"Warning: lines are a straight sequence\");\n\t\t\t\t\t\t\tv_trans_x = -v_prev_y;\n\t\t\t\t\t\t\tv_trans_y = v_prev_x;\n\t\t\t\t\t\t\tshrink_by = Math.sqrt(v_prev_lensq);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// console.log(\"Warning: lines are a straight spike\");\n\t\t\t\t\t\t\tv_trans_x = v_prev_x;\n\t\t\t\t\t\t\tv_trans_y = v_prev_y;\n\t\t\t\t\t\t\tshrink_by = Math.sqrt(v_prev_lensq / 2);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\treturn new Vector2(v_trans_x / shrink_by, v_trans_y / shrink_by);\n\t\t\t\t}\n\n\t\t\t\tconst contourMovements = [];\n\n\t\t\t\tfor (let i = 0, il = contour.length, j = il - 1, k = i + 1; i < il; i++, j++, k++) {\n\t\t\t\t\tif (j === il) j = 0;\n\t\t\t\t\tif (k === il) k = 0; //\t(j)---(i)---(k)\n\t\t\t\t\t// console.log('i,j,k', i, j , k)\n\n\t\t\t\t\tcontourMovements[i] = getBevelVec(contour[i], contour[j], contour[k]);\n\t\t\t\t}\n\n\t\t\t\tconst holesMovements = [];\n\t\t\t\tlet oneHoleMovements,\n\t\t\t\t\t\tverticesMovements = contourMovements.concat();\n\n\t\t\t\tfor (let h = 0, hl = holes.length; h < hl; h++) {\n\t\t\t\t\tconst ahole = holes[h];\n\t\t\t\t\toneHoleMovements = [];\n\n\t\t\t\t\tfor (let i = 0, il = ahole.length, j = il - 1, k = i + 1; i < il; i++, j++, k++) {\n\t\t\t\t\t\tif (j === il) j = 0;\n\t\t\t\t\t\tif (k === il) k = 0; //\t(j)---(i)---(k)\n\n\t\t\t\t\t\toneHoleMovements[i] = getBevelVec(ahole[i], ahole[j], ahole[k]);\n\t\t\t\t\t}\n\n\t\t\t\t\tholesMovements.push(oneHoleMovements);\n\t\t\t\t\tverticesMovements = verticesMovements.concat(oneHoleMovements);\n\t\t\t\t} // Loop bevelSegments, 1 for the front, 1 for the back\n\n\n\t\t\t\tfor (let b = 0; b < bevelSegments; b++) {\n\t\t\t\t\t//for ( b = bevelSegments; b > 0; b -- ) {\n\t\t\t\t\tconst t = b / bevelSegments;\n\t\t\t\t\tconst z = bevelThickness * Math.cos(t * Math.PI / 2);\n\t\t\t\t\tconst bs = bevelSize * Math.sin(t * Math.PI / 2) + bevelOffset; // contract shape\n\n\t\t\t\t\tfor (let i = 0, il = contour.length; i < il; i++) {\n\t\t\t\t\t\tconst vert = scalePt2(contour[i], contourMovements[i], bs);\n\t\t\t\t\t\tv(vert.x, vert.y, -z);\n\t\t\t\t\t} // expand holes\n\n\n\t\t\t\t\tfor (let h = 0, hl = holes.length; h < hl; h++) {\n\t\t\t\t\t\tconst ahole = holes[h];\n\t\t\t\t\t\toneHoleMovements = holesMovements[h];\n\n\t\t\t\t\t\tfor (let i = 0, il = ahole.length; i < il; i++) {\n\t\t\t\t\t\t\tconst vert = scalePt2(ahole[i], oneHoleMovements[i], bs);\n\t\t\t\t\t\t\tv(vert.x, vert.y, -z);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tconst bs = bevelSize + bevelOffset; // Back facing vertices\n\n\t\t\t\tfor (let i = 0; i < vlen; i++) {\n\t\t\t\t\tconst vert = bevelEnabled ? scalePt2(vertices[i], verticesMovements[i], bs) : vertices[i];\n\n\t\t\t\t\tif (!extrudeByPath) {\n\t\t\t\t\t\tv(vert.x, vert.y, 0);\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// v( vert.x, vert.y + extrudePts[ 0 ].y, extrudePts[ 0 ].x );\n\t\t\t\t\t\tnormal.copy(splineTube.normals[0]).multiplyScalar(vert.x);\n\t\t\t\t\t\tbinormal.copy(splineTube.binormals[0]).multiplyScalar(vert.y);\n\t\t\t\t\t\tposition2.copy(extrudePts[0]).add(normal).add(binormal);\n\t\t\t\t\t\tv(position2.x, position2.y, position2.z);\n\t\t\t\t\t}\n\t\t\t\t} // Add stepped vertices...\n\t\t\t\t// Including front facing vertices\n\n\n\t\t\t\tfor (let s = 1; s <= steps; s++) {\n\t\t\t\t\tfor (let i = 0; i < vlen; i++) {\n\t\t\t\t\t\tconst vert = bevelEnabled ? scalePt2(vertices[i], verticesMovements[i], bs) : vertices[i];\n\n\t\t\t\t\t\tif (!extrudeByPath) {\n\t\t\t\t\t\t\tv(vert.x, vert.y, depth / steps * s);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// v( vert.x, vert.y + extrudePts[ s - 1 ].y, extrudePts[ s - 1 ].x );\n\t\t\t\t\t\t\tnormal.copy(splineTube.normals[s]).multiplyScalar(vert.x);\n\t\t\t\t\t\t\tbinormal.copy(splineTube.binormals[s]).multiplyScalar(vert.y);\n\t\t\t\t\t\t\tposition2.copy(extrudePts[s]).add(normal).add(binormal);\n\t\t\t\t\t\t\tv(position2.x, position2.y, position2.z);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} // Add bevel segments planes\n\t\t\t\t//for ( b = 1; b <= bevelSegments; b ++ ) {\n\n\n\t\t\t\tfor (let b = bevelSegments - 1; b >= 0; b--) {\n\t\t\t\t\tconst t = b / bevelSegments;\n\t\t\t\t\tconst z = bevelThickness * Math.cos(t * Math.PI / 2);\n\t\t\t\t\tconst bs = bevelSize * Math.sin(t * Math.PI / 2) + bevelOffset; // contract shape\n\n\t\t\t\t\tfor (let i = 0, il = contour.length; i < il; i++) {\n\t\t\t\t\t\tconst vert = scalePt2(contour[i], contourMovements[i], bs);\n\t\t\t\t\t\tv(vert.x, vert.y, depth + z);\n\t\t\t\t\t} // expand holes\n\n\n\t\t\t\t\tfor (let h = 0, hl = holes.length; h < hl; h++) {\n\t\t\t\t\t\tconst ahole = holes[h];\n\t\t\t\t\t\toneHoleMovements = holesMovements[h];\n\n\t\t\t\t\t\tfor (let i = 0, il = ahole.length; i < il; i++) {\n\t\t\t\t\t\t\tconst vert = scalePt2(ahole[i], oneHoleMovements[i], bs);\n\n\t\t\t\t\t\t\tif (!extrudeByPath) {\n\t\t\t\t\t\t\t\tv(vert.x, vert.y, depth + z);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tv(vert.x, vert.y + extrudePts[steps - 1].y, extrudePts[steps - 1].x + z);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t/* Faces */\n\t\t\t\t// Top and bottom faces\n\n\n\t\t\t\tbuildLidFaces(); // Sides faces\n\n\t\t\t\tbuildSideFaces(); /////\tInternal functions\n\n\t\t\t\tfunction buildLidFaces() {\n\t\t\t\t\tconst start = verticesArray.length / 3;\n\n\t\t\t\t\tif (bevelEnabled) {\n\t\t\t\t\t\tlet layer = 0; // steps + 1\n\n\t\t\t\t\t\tlet offset = vlen * layer; // Bottom faces\n\n\t\t\t\t\t\tfor (let i = 0; i < flen; i++) {\n\t\t\t\t\t\t\tconst face = faces[i];\n\t\t\t\t\t\t\tf3(face[2] + offset, face[1] + offset, face[0] + offset);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tlayer = steps + bevelSegments * 2;\n\t\t\t\t\t\toffset = vlen * layer; // Top faces\n\n\t\t\t\t\t\tfor (let i = 0; i < flen; i++) {\n\t\t\t\t\t\t\tconst face = faces[i];\n\t\t\t\t\t\t\tf3(face[0] + offset, face[1] + offset, face[2] + offset);\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// Bottom faces\n\t\t\t\t\t\tfor (let i = 0; i < flen; i++) {\n\t\t\t\t\t\t\tconst face = faces[i];\n\t\t\t\t\t\t\tf3(face[2], face[1], face[0]);\n\t\t\t\t\t\t} // Top faces\n\n\n\t\t\t\t\t\tfor (let i = 0; i < flen; i++) {\n\t\t\t\t\t\t\tconst face = faces[i];\n\t\t\t\t\t\t\tf3(face[0] + vlen * steps, face[1] + vlen * steps, face[2] + vlen * steps);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tscope.addGroup(start, verticesArray.length / 3 - start, 0);\n\t\t\t\t} // Create faces for the z-sides of the shape\n\n\n\t\t\t\tfunction buildSideFaces() {\n\t\t\t\t\tconst start = verticesArray.length / 3;\n\t\t\t\t\tlet layeroffset = 0;\n\t\t\t\t\tsidewalls(contour, layeroffset);\n\t\t\t\t\tlayeroffset += contour.length;\n\n\t\t\t\t\tfor (let h = 0, hl = holes.length; h < hl; h++) {\n\t\t\t\t\t\tconst ahole = holes[h];\n\t\t\t\t\t\tsidewalls(ahole, layeroffset); //, true\n\n\t\t\t\t\t\tlayeroffset += ahole.length;\n\t\t\t\t\t}\n\n\t\t\t\t\tscope.addGroup(start, verticesArray.length / 3 - start, 1);\n\t\t\t\t}\n\n\t\t\t\tfunction sidewalls(contour, layeroffset) {\n\t\t\t\t\tlet i = contour.length;\n\n\t\t\t\t\twhile (--i >= 0) {\n\t\t\t\t\t\tconst j = i;\n\t\t\t\t\t\tlet k = i - 1;\n\t\t\t\t\t\tif (k < 0) k = contour.length - 1; //console.log('b', i,j, i-1, k,vertices.length);\n\n\t\t\t\t\t\tfor (let s = 0, sl = steps + bevelSegments * 2; s < sl; s++) {\n\t\t\t\t\t\t\tconst slen1 = vlen * s;\n\t\t\t\t\t\t\tconst slen2 = vlen * (s + 1);\n\t\t\t\t\t\t\tconst a = layeroffset + j + slen1,\n\t\t\t\t\t\t\t\t\t\tb = layeroffset + k + slen1,\n\t\t\t\t\t\t\t\t\t\tc = layeroffset + k + slen2,\n\t\t\t\t\t\t\t\t\t\td = layeroffset + j + slen2;\n\t\t\t\t\t\t\tf4(a, b, c, d);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tfunction v(x, y, z) {\n\t\t\t\t\tplaceholder.push(x);\n\t\t\t\t\tplaceholder.push(y);\n\t\t\t\t\tplaceholder.push(z);\n\t\t\t\t}\n\n\t\t\t\tfunction f3(a, b, c) {\n\t\t\t\t\taddVertex(a);\n\t\t\t\t\taddVertex(b);\n\t\t\t\t\taddVertex(c);\n\t\t\t\t\tconst nextIndex = verticesArray.length / 3;\n\t\t\t\t\tconst uvs = uvgen.generateTopUV(scope, verticesArray, nextIndex - 3, nextIndex - 2, nextIndex - 1);\n\t\t\t\t\taddUV(uvs[0]);\n\t\t\t\t\taddUV(uvs[1]);\n\t\t\t\t\taddUV(uvs[2]);\n\t\t\t\t}\n\n\t\t\t\tfunction f4(a, b, c, d) {\n\t\t\t\t\taddVertex(a);\n\t\t\t\t\taddVertex(b);\n\t\t\t\t\taddVertex(d);\n\t\t\t\t\taddVertex(b);\n\t\t\t\t\taddVertex(c);\n\t\t\t\t\taddVertex(d);\n\t\t\t\t\tconst nextIndex = verticesArray.length / 3;\n\t\t\t\t\tconst uvs = uvgen.generateSideWallUV(scope, verticesArray, nextIndex - 6, nextIndex - 3, nextIndex - 2, nextIndex - 1);\n\t\t\t\t\taddUV(uvs[0]);\n\t\t\t\t\taddUV(uvs[1]);\n\t\t\t\t\taddUV(uvs[3]);\n\t\t\t\t\taddUV(uvs[1]);\n\t\t\t\t\taddUV(uvs[2]);\n\t\t\t\t\taddUV(uvs[3]);\n\t\t\t\t}\n\n\t\t\t\tfunction addVertex(index) {\n\t\t\t\t\tverticesArray.push(placeholder[index * 3 + 0]);\n\t\t\t\t\tverticesArray.push(placeholder[index * 3 + 1]);\n\t\t\t\t\tverticesArray.push(placeholder[index * 3 + 2]);\n\t\t\t\t}\n\n\t\t\t\tfunction addUV(vector2) {\n\t\t\t\t\tuvArray.push(vector2.x);\n\t\t\t\t\tuvArray.push(vector2.y);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\ttoJSON() {\n\t\t\tconst data = super.toJSON();\n\t\t\tconst shapes = this.parameters.shapes;\n\t\t\tconst options = this.parameters.options;\n\t\t\treturn toJSON$1(shapes, options, data);\n\t\t}\n\n\t\tstatic fromJSON(data, shapes) {\n\t\t\tconst geometryShapes = [];\n\n\t\t\tfor (let j = 0, jl = data.shapes.length; j < jl; j++) {\n\t\t\t\tconst shape = shapes[data.shapes[j]];\n\t\t\t\tgeometryShapes.push(shape);\n\t\t\t}\n\n\t\t\tconst extrudePath = data.options.extrudePath;\n\n\t\t\tif (extrudePath !== undefined) {\n\t\t\t\tdata.options.extrudePath = new Curves[extrudePath.type]().fromJSON(extrudePath);\n\t\t\t}\n\n\t\t\treturn new ExtrudeGeometry(geometryShapes, data.options);\n\t\t}\n\n\t}\n\n\tconst WorldUVGenerator = {\n\t\tgenerateTopUV: function (geometry, vertices, indexA, indexB, indexC) {\n\t\t\tconst a_x = vertices[indexA * 3];\n\t\t\tconst a_y = vertices[indexA * 3 + 1];\n\t\t\tconst b_x = vertices[indexB * 3];\n\t\t\tconst b_y = vertices[indexB * 3 + 1];\n\t\t\tconst c_x = vertices[indexC * 3];\n\t\t\tconst c_y = vertices[indexC * 3 + 1];\n\t\t\treturn [new Vector2(a_x, a_y), new Vector2(b_x, b_y), new Vector2(c_x, c_y)];\n\t\t},\n\t\tgenerateSideWallUV: function (geometry, vertices, indexA, indexB, indexC, indexD) {\n\t\t\tconst a_x = vertices[indexA * 3];\n\t\t\tconst a_y = vertices[indexA * 3 + 1];\n\t\t\tconst a_z = vertices[indexA * 3 + 2];\n\t\t\tconst b_x = vertices[indexB * 3];\n\t\t\tconst b_y = vertices[indexB * 3 + 1];\n\t\t\tconst b_z = vertices[indexB * 3 + 2];\n\t\t\tconst c_x = vertices[indexC * 3];\n\t\t\tconst c_y = vertices[indexC * 3 + 1];\n\t\t\tconst c_z = vertices[indexC * 3 + 2];\n\t\t\tconst d_x = vertices[indexD * 3];\n\t\t\tconst d_y = vertices[indexD * 3 + 1];\n\t\t\tconst d_z = vertices[indexD * 3 + 2];\n\n\t\t\tif (Math.abs(a_y - b_y) < Math.abs(a_x - b_x)) {\n\t\t\t\treturn [new Vector2(a_x, 1 - a_z), new Vector2(b_x, 1 - b_z), new Vector2(c_x, 1 - c_z), new Vector2(d_x, 1 - d_z)];\n\t\t\t} else {\n\t\t\t\treturn [new Vector2(a_y, 1 - a_z), new Vector2(b_y, 1 - b_z), new Vector2(c_y, 1 - c_z), new Vector2(d_y, 1 - d_z)];\n\t\t\t}\n\t\t}\n\t};\n\n\tfunction toJSON$1(shapes, options, data) {\n\t\tdata.shapes = [];\n\n\t\tif (Array.isArray(shapes)) {\n\t\t\tfor (let i = 0, l = shapes.length; i < l; i++) {\n\t\t\t\tconst shape = shapes[i];\n\t\t\t\tdata.shapes.push(shape.uuid);\n\t\t\t}\n\t\t} else {\n\t\t\tdata.shapes.push(shapes.uuid);\n\t\t}\n\n\t\tif (options.extrudePath !== undefined) data.options.extrudePath = options.extrudePath.toJSON();\n\t\treturn data;\n\t}\n\n\tclass IcosahedronGeometry extends PolyhedronGeometry {\n\t\tconstructor(radius = 1, detail = 0) {\n\t\t\tconst t = (1 + Math.sqrt(5)) / 2;\n\t\t\tconst vertices = [-1, t, 0, 1, t, 0, -1, -t, 0, 1, -t, 0, 0, -1, t, 0, 1, t, 0, -1, -t, 0, 1, -t, t, 0, -1, t, 0, 1, -t, 0, -1, -t, 0, 1];\n\t\t\tconst indices = [0, 11, 5, 0, 5, 1, 0, 1, 7, 0, 7, 10, 0, 10, 11, 1, 5, 9, 5, 11, 4, 11, 10, 2, 10, 7, 6, 7, 1, 8, 3, 9, 4, 3, 4, 2, 3, 2, 6, 3, 6, 8, 3, 8, 9, 4, 9, 5, 2, 4, 11, 6, 2, 10, 8, 6, 7, 9, 8, 1];\n\t\t\tsuper(vertices, indices, radius, detail);\n\t\t\tthis.type = 'IcosahedronGeometry';\n\t\t\tthis.parameters = {\n\t\t\t\tradius: radius,\n\t\t\t\tdetail: detail\n\t\t\t};\n\t\t}\n\n\t\tstatic fromJSON(data) {\n\t\t\treturn new IcosahedronGeometry(data.radius, data.detail);\n\t\t}\n\n\t}\n\n\tclass LatheGeometry extends BufferGeometry {\n\t\tconstructor(points = [new Vector2(0, 0.5), new Vector2(0.5, 0), new Vector2(0, -0.5)], segments = 12, phiStart = 0, phiLength = Math.PI * 2) {\n\t\t\tsuper();\n\t\t\tthis.type = 'LatheGeometry';\n\t\t\tthis.parameters = {\n\t\t\t\tpoints: points,\n\t\t\t\tsegments: segments,\n\t\t\t\tphiStart: phiStart,\n\t\t\t\tphiLength: phiLength\n\t\t\t};\n\t\t\tsegments = Math.floor(segments); // clamp phiLength so it's in range of [ 0, 2PI ]\n\n\t\t\tphiLength = clamp(phiLength, 0, Math.PI * 2); // buffers\n\n\t\t\tconst indices = [];\n\t\t\tconst vertices = [];\n\t\t\tconst uvs = []; // helper variables\n\n\t\t\tconst inverseSegments = 1.0 / segments;\n\t\t\tconst vertex = new Vector3();\n\t\t\tconst uv = new Vector2(); // generate vertices and uvs\n\n\t\t\tfor (let i = 0; i <= segments; i++) {\n\t\t\t\tconst phi = phiStart + i * inverseSegments * phiLength;\n\t\t\t\tconst sin = Math.sin(phi);\n\t\t\t\tconst cos = Math.cos(phi);\n\n\t\t\t\tfor (let j = 0; j <= points.length - 1; j++) {\n\t\t\t\t\t// vertex\n\t\t\t\t\tvertex.x = points[j].x * sin;\n\t\t\t\t\tvertex.y = points[j].y;\n\t\t\t\t\tvertex.z = points[j].x * cos;\n\t\t\t\t\tvertices.push(vertex.x, vertex.y, vertex.z); // uv\n\n\t\t\t\t\tuv.x = i / segments;\n\t\t\t\t\tuv.y = j / (points.length - 1);\n\t\t\t\t\tuvs.push(uv.x, uv.y);\n\t\t\t\t}\n\t\t\t} // indices\n\n\n\t\t\tfor (let i = 0; i < segments; i++) {\n\t\t\t\tfor (let j = 0; j < points.length - 1; j++) {\n\t\t\t\t\tconst base = j + i * points.length;\n\t\t\t\t\tconst a = base;\n\t\t\t\t\tconst b = base + points.length;\n\t\t\t\t\tconst c = base + points.length + 1;\n\t\t\t\t\tconst d = base + 1; // faces\n\n\t\t\t\t\tindices.push(a, b, d);\n\t\t\t\t\tindices.push(b, c, d);\n\t\t\t\t}\n\t\t\t} // build geometry\n\n\n\t\t\tthis.setIndex(indices);\n\t\t\tthis.setAttribute('position', new Float32BufferAttribute(vertices, 3));\n\t\t\tthis.setAttribute('uv', new Float32BufferAttribute(uvs, 2)); // generate normals\n\n\t\t\tthis.computeVertexNormals(); // if the geometry is closed, we need to average the normals along the seam.\n\t\t\t// because the corresponding vertices are identical (but still have different UVs).\n\n\t\t\tif (phiLength === Math.PI * 2) {\n\t\t\t\tconst normals = this.attributes.normal.array;\n\t\t\t\tconst n1 = new Vector3();\n\t\t\t\tconst n2 = new Vector3();\n\t\t\t\tconst n = new Vector3(); // this is the buffer offset for the last line of vertices\n\n\t\t\t\tconst base = segments * points.length * 3;\n\n\t\t\t\tfor (let i = 0, j = 0; i < points.length; i++, j += 3) {\n\t\t\t\t\t// select the normal of the vertex in the first line\n\t\t\t\t\tn1.x = normals[j + 0];\n\t\t\t\t\tn1.y = normals[j + 1];\n\t\t\t\t\tn1.z = normals[j + 2]; // select the normal of the vertex in the last line\n\n\t\t\t\t\tn2.x = normals[base + j + 0];\n\t\t\t\t\tn2.y = normals[base + j + 1];\n\t\t\t\t\tn2.z = normals[base + j + 2]; // average normals\n\n\t\t\t\t\tn.addVectors(n1, n2).normalize(); // assign the new values to both normals\n\n\t\t\t\t\tnormals[j + 0] = normals[base + j + 0] = n.x;\n\t\t\t\t\tnormals[j + 1] = normals[base + j + 1] = n.y;\n\t\t\t\t\tnormals[j + 2] = normals[base + j + 2] = n.z;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tstatic fromJSON(data) {\n\t\t\treturn new LatheGeometry(data.points, data.segments, data.phiStart, data.phiLength);\n\t\t}\n\n\t}\n\n\tclass OctahedronGeometry extends PolyhedronGeometry {\n\t\tconstructor(radius = 1, detail = 0) {\n\t\t\tconst vertices = [1, 0, 0, -1, 0, 0, 0, 1, 0, 0, -1, 0, 0, 0, 1, 0, 0, -1];\n\t\t\tconst indices = [0, 2, 4, 0, 4, 3, 0, 3, 5, 0, 5, 2, 1, 2, 5, 1, 5, 3, 1, 3, 4, 1, 4, 2];\n\t\t\tsuper(vertices, indices, radius, detail);\n\t\t\tthis.type = 'OctahedronGeometry';\n\t\t\tthis.parameters = {\n\t\t\t\tradius: radius,\n\t\t\t\tdetail: detail\n\t\t\t};\n\t\t}\n\n\t\tstatic fromJSON(data) {\n\t\t\treturn new OctahedronGeometry(data.radius, data.detail);\n\t\t}\n\n\t}\n\n\tclass RingGeometry extends BufferGeometry {\n\t\tconstructor(innerRadius = 0.5, outerRadius = 1, thetaSegments = 8, phiSegments = 1, thetaStart = 0, thetaLength = Math.PI * 2) {\n\t\t\tsuper();\n\t\t\tthis.type = 'RingGeometry';\n\t\t\tthis.parameters = {\n\t\t\t\tinnerRadius: innerRadius,\n\t\t\t\touterRadius: outerRadius,\n\t\t\t\tthetaSegments: thetaSegments,\n\t\t\t\tphiSegments: phiSegments,\n\t\t\t\tthetaStart: thetaStart,\n\t\t\t\tthetaLength: thetaLength\n\t\t\t};\n\t\t\tthetaSegments = Math.max(3, thetaSegments);\n\t\t\tphiSegments = Math.max(1, phiSegments); // buffers\n\n\t\t\tconst indices = [];\n\t\t\tconst vertices = [];\n\t\t\tconst normals = [];\n\t\t\tconst uvs = []; // some helper variables\n\n\t\t\tlet radius = innerRadius;\n\t\t\tconst radiusStep = (outerRadius - innerRadius) / phiSegments;\n\t\t\tconst vertex = new Vector3();\n\t\t\tconst uv = new Vector2(); // generate vertices, normals and uvs\n\n\t\t\tfor (let j = 0; j <= phiSegments; j++) {\n\t\t\t\tfor (let i = 0; i <= thetaSegments; i++) {\n\t\t\t\t\t// values are generate from the inside of the ring to the outside\n\t\t\t\t\tconst segment = thetaStart + i / thetaSegments * thetaLength; // vertex\n\n\t\t\t\t\tvertex.x = radius * Math.cos(segment);\n\t\t\t\t\tvertex.y = radius * Math.sin(segment);\n\t\t\t\t\tvertices.push(vertex.x, vertex.y, vertex.z); // normal\n\n\t\t\t\t\tnormals.push(0, 0, 1); // uv\n\n\t\t\t\t\tuv.x = (vertex.x / outerRadius + 1) / 2;\n\t\t\t\t\tuv.y = (vertex.y / outerRadius + 1) / 2;\n\t\t\t\t\tuvs.push(uv.x, uv.y);\n\t\t\t\t} // increase the radius for next row of vertices\n\n\n\t\t\t\tradius += radiusStep;\n\t\t\t} // indices\n\n\n\t\t\tfor (let j = 0; j < phiSegments; j++) {\n\t\t\t\tconst thetaSegmentLevel = j * (thetaSegments + 1);\n\n\t\t\t\tfor (let i = 0; i < thetaSegments; i++) {\n\t\t\t\t\tconst segment = i + thetaSegmentLevel;\n\t\t\t\t\tconst a = segment;\n\t\t\t\t\tconst b = segment + thetaSegments + 1;\n\t\t\t\t\tconst c = segment + thetaSegments + 2;\n\t\t\t\t\tconst d = segment + 1; // faces\n\n\t\t\t\t\tindices.push(a, b, d);\n\t\t\t\t\tindices.push(b, c, d);\n\t\t\t\t}\n\t\t\t} // build geometry\n\n\n\t\t\tthis.setIndex(indices);\n\t\t\tthis.setAttribute('position', new Float32BufferAttribute(vertices, 3));\n\t\t\tthis.setAttribute('normal', new Float32BufferAttribute(normals, 3));\n\t\t\tthis.setAttribute('uv', new Float32BufferAttribute(uvs, 2));\n\t\t}\n\n\t\tstatic fromJSON(data) {\n\t\t\treturn new RingGeometry(data.innerRadius, data.outerRadius, data.thetaSegments, data.phiSegments, data.thetaStart, data.thetaLength);\n\t\t}\n\n\t}\n\n\tclass ShapeGeometry extends BufferGeometry {\n\t\tconstructor(shapes = new Shape([new Vector2(0, 0.5), new Vector2(-0.5, -0.5), new Vector2(0.5, -0.5)]), curveSegments = 12) {\n\t\t\tsuper();\n\t\t\tthis.type = 'ShapeGeometry';\n\t\t\tthis.parameters = {\n\t\t\t\tshapes: shapes,\n\t\t\t\tcurveSegments: curveSegments\n\t\t\t}; // buffers\n\n\t\t\tconst indices = [];\n\t\t\tconst vertices = [];\n\t\t\tconst normals = [];\n\t\t\tconst uvs = []; // helper variables\n\n\t\t\tlet groupStart = 0;\n\t\t\tlet groupCount = 0; // allow single and array values for \"shapes\" parameter\n\n\t\t\tif (Array.isArray(shapes) === false) {\n\t\t\t\taddShape(shapes);\n\t\t\t} else {\n\t\t\t\tfor (let i = 0; i < shapes.length; i++) {\n\t\t\t\t\taddShape(shapes[i]);\n\t\t\t\t\tthis.addGroup(groupStart, groupCount, i); // enables MultiMaterial support\n\n\t\t\t\t\tgroupStart += groupCount;\n\t\t\t\t\tgroupCount = 0;\n\t\t\t\t}\n\t\t\t} // build geometry\n\n\n\t\t\tthis.setIndex(indices);\n\t\t\tthis.setAttribute('position', new Float32BufferAttribute(vertices, 3));\n\t\t\tthis.setAttribute('normal', new Float32BufferAttribute(normals, 3));\n\t\t\tthis.setAttribute('uv', new Float32BufferAttribute(uvs, 2)); // helper functions\n\n\t\t\tfunction addShape(shape) {\n\t\t\t\tconst indexOffset = vertices.length / 3;\n\t\t\t\tconst points = shape.extractPoints(curveSegments);\n\t\t\t\tlet shapeVertices = points.shape;\n\t\t\t\tconst shapeHoles = points.holes; // check direction of vertices\n\n\t\t\t\tif (ShapeUtils.isClockWise(shapeVertices) === false) {\n\t\t\t\t\tshapeVertices = shapeVertices.reverse();\n\t\t\t\t}\n\n\t\t\t\tfor (let i = 0, l = shapeHoles.length; i < l; i++) {\n\t\t\t\t\tconst shapeHole = shapeHoles[i];\n\n\t\t\t\t\tif (ShapeUtils.isClockWise(shapeHole) === true) {\n\t\t\t\t\t\tshapeHoles[i] = shapeHole.reverse();\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tconst faces = ShapeUtils.triangulateShape(shapeVertices, shapeHoles); // join vertices of inner and outer paths to a single array\n\n\t\t\t\tfor (let i = 0, l = shapeHoles.length; i < l; i++) {\n\t\t\t\t\tconst shapeHole = shapeHoles[i];\n\t\t\t\t\tshapeVertices = shapeVertices.concat(shapeHole);\n\t\t\t\t} // vertices, normals, uvs\n\n\n\t\t\t\tfor (let i = 0, l = shapeVertices.length; i < l; i++) {\n\t\t\t\t\tconst vertex = shapeVertices[i];\n\t\t\t\t\tvertices.push(vertex.x, vertex.y, 0);\n\t\t\t\t\tnormals.push(0, 0, 1);\n\t\t\t\t\tuvs.push(vertex.x, vertex.y); // world uvs\n\t\t\t\t} // incides\n\n\n\t\t\t\tfor (let i = 0, l = faces.length; i < l; i++) {\n\t\t\t\t\tconst face = faces[i];\n\t\t\t\t\tconst a = face[0] + indexOffset;\n\t\t\t\t\tconst b = face[1] + indexOffset;\n\t\t\t\t\tconst c = face[2] + indexOffset;\n\t\t\t\t\tindices.push(a, b, c);\n\t\t\t\t\tgroupCount += 3;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\ttoJSON() {\n\t\t\tconst data = super.toJSON();\n\t\t\tconst shapes = this.parameters.shapes;\n\t\t\treturn toJSON(shapes, data);\n\t\t}\n\n\t\tstatic fromJSON(data, shapes) {\n\t\t\tconst geometryShapes = [];\n\n\t\t\tfor (let j = 0, jl = data.shapes.length; j < jl; j++) {\n\t\t\t\tconst shape = shapes[data.shapes[j]];\n\t\t\t\tgeometryShapes.push(shape);\n\t\t\t}\n\n\t\t\treturn new ShapeGeometry(geometryShapes, data.curveSegments);\n\t\t}\n\n\t}\n\n\tfunction toJSON(shapes, data) {\n\t\tdata.shapes = [];\n\n\t\tif (Array.isArray(shapes)) {\n\t\t\tfor (let i = 0, l = shapes.length; i < l; i++) {\n\t\t\t\tconst shape = shapes[i];\n\t\t\t\tdata.shapes.push(shape.uuid);\n\t\t\t}\n\t\t} else {\n\t\t\tdata.shapes.push(shapes.uuid);\n\t\t}\n\n\t\treturn data;\n\t}\n\n\tclass SphereGeometry extends BufferGeometry {\n\t\tconstructor(radius = 1, widthSegments = 32, heightSegments = 16, phiStart = 0, phiLength = Math.PI * 2, thetaStart = 0, thetaLength = Math.PI) {\n\t\t\tsuper();\n\t\t\tthis.type = 'SphereGeometry';\n\t\t\tthis.parameters = {\n\t\t\t\tradius: radius,\n\t\t\t\twidthSegments: widthSegments,\n\t\t\t\theightSegments: heightSegments,\n\t\t\t\tphiStart: phiStart,\n\t\t\t\tphiLength: phiLength,\n\t\t\t\tthetaStart: thetaStart,\n\t\t\t\tthetaLength: thetaLength\n\t\t\t};\n\t\t\twidthSegments = Math.max(3, Math.floor(widthSegments));\n\t\t\theightSegments = Math.max(2, Math.floor(heightSegments));\n\t\t\tconst thetaEnd = Math.min(thetaStart + thetaLength, Math.PI);\n\t\t\tlet index = 0;\n\t\t\tconst grid = [];\n\t\t\tconst vertex = new Vector3();\n\t\t\tconst normal = new Vector3(); // buffers\n\n\t\t\tconst indices = [];\n\t\t\tconst vertices = [];\n\t\t\tconst normals = [];\n\t\t\tconst uvs = []; // generate vertices, normals and uvs\n\n\t\t\tfor (let iy = 0; iy <= heightSegments; iy++) {\n\t\t\t\tconst verticesRow = [];\n\t\t\t\tconst v = iy / heightSegments; // special case for the poles\n\n\t\t\t\tlet uOffset = 0;\n\n\t\t\t\tif (iy == 0 && thetaStart == 0) {\n\t\t\t\t\tuOffset = 0.5 / widthSegments;\n\t\t\t\t} else if (iy == heightSegments && thetaEnd == Math.PI) {\n\t\t\t\t\tuOffset = -0.5 / widthSegments;\n\t\t\t\t}\n\n\t\t\t\tfor (let ix = 0; ix <= widthSegments; ix++) {\n\t\t\t\t\tconst u = ix / widthSegments; // vertex\n\n\t\t\t\t\tvertex.x = -radius * Math.cos(phiStart + u * phiLength) * Math.sin(thetaStart + v * thetaLength);\n\t\t\t\t\tvertex.y = radius * Math.cos(thetaStart + v * thetaLength);\n\t\t\t\t\tvertex.z = radius * Math.sin(phiStart + u * phiLength) * Math.sin(thetaStart + v * thetaLength);\n\t\t\t\t\tvertices.push(vertex.x, vertex.y, vertex.z); // normal\n\n\t\t\t\t\tnormal.copy(vertex).normalize();\n\t\t\t\t\tnormals.push(normal.x, normal.y, normal.z); // uv\n\n\t\t\t\t\tuvs.push(u + uOffset, 1 - v);\n\t\t\t\t\tverticesRow.push(index++);\n\t\t\t\t}\n\n\t\t\t\tgrid.push(verticesRow);\n\t\t\t} // indices\n\n\n\t\t\tfor (let iy = 0; iy < heightSegments; iy++) {\n\t\t\t\tfor (let ix = 0; ix < widthSegments; ix++) {\n\t\t\t\t\tconst a = grid[iy][ix + 1];\n\t\t\t\t\tconst b = grid[iy][ix];\n\t\t\t\t\tconst c = grid[iy + 1][ix];\n\t\t\t\t\tconst d = grid[iy + 1][ix + 1];\n\t\t\t\t\tif (iy !== 0 || thetaStart > 0) indices.push(a, b, d);\n\t\t\t\t\tif (iy !== heightSegments - 1 || thetaEnd < Math.PI) indices.push(b, c, d);\n\t\t\t\t}\n\t\t\t} // build geometry\n\n\n\t\t\tthis.setIndex(indices);\n\t\t\tthis.setAttribute('position', new Float32BufferAttribute(vertices, 3));\n\t\t\tthis.setAttribute('normal', new Float32BufferAttribute(normals, 3));\n\t\t\tthis.setAttribute('uv', new Float32BufferAttribute(uvs, 2));\n\t\t}\n\n\t\tstatic fromJSON(data) {\n\t\t\treturn new SphereGeometry(data.radius, data.widthSegments, data.heightSegments, data.phiStart, data.phiLength, data.thetaStart, data.thetaLength);\n\t\t}\n\n\t}\n\n\tclass TetrahedronGeometry extends PolyhedronGeometry {\n\t\tconstructor(radius = 1, detail = 0) {\n\t\t\tconst vertices = [1, 1, 1, -1, -1, 1, -1, 1, -1, 1, -1, -1];\n\t\t\tconst indices = [2, 1, 0, 0, 3, 2, 1, 3, 0, 2, 3, 1];\n\t\t\tsuper(vertices, indices, radius, detail);\n\t\t\tthis.type = 'TetrahedronGeometry';\n\t\t\tthis.parameters = {\n\t\t\t\tradius: radius,\n\t\t\t\tdetail: detail\n\t\t\t};\n\t\t}\n\n\t\tstatic fromJSON(data) {\n\t\t\treturn new TetrahedronGeometry(data.radius, data.detail);\n\t\t}\n\n\t}\n\n\tclass TorusGeometry extends BufferGeometry {\n\t\tconstructor(radius = 1, tube = 0.4, radialSegments = 8, tubularSegments = 6, arc = Math.PI * 2) {\n\t\t\tsuper();\n\t\t\tthis.type = 'TorusGeometry';\n\t\t\tthis.parameters = {\n\t\t\t\tradius: radius,\n\t\t\t\ttube: tube,\n\t\t\t\tradialSegments: radialSegments,\n\t\t\t\ttubularSegments: tubularSegments,\n\t\t\t\tarc: arc\n\t\t\t};\n\t\t\tradialSegments = Math.floor(radialSegments);\n\t\t\ttubularSegments = Math.floor(tubularSegments); // buffers\n\n\t\t\tconst indices = [];\n\t\t\tconst vertices = [];\n\t\t\tconst normals = [];\n\t\t\tconst uvs = []; // helper variables\n\n\t\t\tconst center = new Vector3();\n\t\t\tconst vertex = new Vector3();\n\t\t\tconst normal = new Vector3(); // generate vertices, normals and uvs\n\n\t\t\tfor (let j = 0; j <= radialSegments; j++) {\n\t\t\t\tfor (let i = 0; i <= tubularSegments; i++) {\n\t\t\t\t\tconst u = i / tubularSegments * arc;\n\t\t\t\t\tconst v = j / radialSegments * Math.PI * 2; // vertex\n\n\t\t\t\t\tvertex.x = (radius + tube * Math.cos(v)) * Math.cos(u);\n\t\t\t\t\tvertex.y = (radius + tube * Math.cos(v)) * Math.sin(u);\n\t\t\t\t\tvertex.z = tube * Math.sin(v);\n\t\t\t\t\tvertices.push(vertex.x, vertex.y, vertex.z); // normal\n\n\t\t\t\t\tcenter.x = radius * Math.cos(u);\n\t\t\t\t\tcenter.y = radius * Math.sin(u);\n\t\t\t\t\tnormal.subVectors(vertex, center).normalize();\n\t\t\t\t\tnormals.push(normal.x, normal.y, normal.z); // uv\n\n\t\t\t\t\tuvs.push(i / tubularSegments);\n\t\t\t\t\tuvs.push(j / radialSegments);\n\t\t\t\t}\n\t\t\t} // generate indices\n\n\n\t\t\tfor (let j = 1; j <= radialSegments; j++) {\n\t\t\t\tfor (let i = 1; i <= tubularSegments; i++) {\n\t\t\t\t\t// indices\n\t\t\t\t\tconst a = (tubularSegments + 1) * j + i - 1;\n\t\t\t\t\tconst b = (tubularSegments + 1) * (j - 1) + i - 1;\n\t\t\t\t\tconst c = (tubularSegments + 1) * (j - 1) + i;\n\t\t\t\t\tconst d = (tubularSegments + 1) * j + i; // faces\n\n\t\t\t\t\tindices.push(a, b, d);\n\t\t\t\t\tindices.push(b, c, d);\n\t\t\t\t}\n\t\t\t} // build geometry\n\n\n\t\t\tthis.setIndex(indices);\n\t\t\tthis.setAttribute('position', new Float32BufferAttribute(vertices, 3));\n\t\t\tthis.setAttribute('normal', new Float32BufferAttribute(normals, 3));\n\t\t\tthis.setAttribute('uv', new Float32BufferAttribute(uvs, 2));\n\t\t}\n\n\t\tstatic fromJSON(data) {\n\t\t\treturn new TorusGeometry(data.radius, data.tube, data.radialSegments, data.tubularSegments, data.arc);\n\t\t}\n\n\t}\n\n\tclass TorusKnotGeometry extends BufferGeometry {\n\t\tconstructor(radius = 1, tube = 0.4, tubularSegments = 64, radialSegments = 8, p = 2, q = 3) {\n\t\t\tsuper();\n\t\t\tthis.type = 'TorusKnotGeometry';\n\t\t\tthis.parameters = {\n\t\t\t\tradius: radius,\n\t\t\t\ttube: tube,\n\t\t\t\ttubularSegments: tubularSegments,\n\t\t\t\tradialSegments: radialSegments,\n\t\t\t\tp: p,\n\t\t\t\tq: q\n\t\t\t};\n\t\t\ttubularSegments = Math.floor(tubularSegments);\n\t\t\tradialSegments = Math.floor(radialSegments); // buffers\n\n\t\t\tconst indices = [];\n\t\t\tconst vertices = [];\n\t\t\tconst normals = [];\n\t\t\tconst uvs = []; // helper variables\n\n\t\t\tconst vertex = new Vector3();\n\t\t\tconst normal = new Vector3();\n\t\t\tconst P1 = new Vector3();\n\t\t\tconst P2 = new Vector3();\n\t\t\tconst B = new Vector3();\n\t\t\tconst T = new Vector3();\n\t\t\tconst N = new Vector3(); // generate vertices, normals and uvs\n\n\t\t\tfor (let i = 0; i <= tubularSegments; ++i) {\n\t\t\t\t// the radian \"u\" is used to calculate the position on the torus curve of the current tubular segement\n\t\t\t\tconst u = i / tubularSegments * p * Math.PI * 2; // now we calculate two points. P1 is our current position on the curve, P2 is a little farther ahead.\n\t\t\t\t// these points are used to create a special \"coordinate space\", which is necessary to calculate the correct vertex positions\n\n\t\t\t\tcalculatePositionOnCurve(u, p, q, radius, P1);\n\t\t\t\tcalculatePositionOnCurve(u + 0.01, p, q, radius, P2); // calculate orthonormal basis\n\n\t\t\t\tT.subVectors(P2, P1);\n\t\t\t\tN.addVectors(P2, P1);\n\t\t\t\tB.crossVectors(T, N);\n\t\t\t\tN.crossVectors(B, T); // normalize B, N. T can be ignored, we don't use it\n\n\t\t\t\tB.normalize();\n\t\t\t\tN.normalize();\n\n\t\t\t\tfor (let j = 0; j <= radialSegments; ++j) {\n\t\t\t\t\t// now calculate the vertices. they are nothing more than an extrusion of the torus curve.\n\t\t\t\t\t// because we extrude a shape in the xy-plane, there is no need to calculate a z-value.\n\t\t\t\t\tconst v = j / radialSegments * Math.PI * 2;\n\t\t\t\t\tconst cx = -tube * Math.cos(v);\n\t\t\t\t\tconst cy = tube * Math.sin(v); // now calculate the final vertex position.\n\t\t\t\t\t// first we orient the extrusion with our basis vectos, then we add it to the current position on the curve\n\n\t\t\t\t\tvertex.x = P1.x + (cx * N.x + cy * B.x);\n\t\t\t\t\tvertex.y = P1.y + (cx * N.y + cy * B.y);\n\t\t\t\t\tvertex.z = P1.z + (cx * N.z + cy * B.z);\n\t\t\t\t\tvertices.push(vertex.x, vertex.y, vertex.z); // normal (P1 is always the center/origin of the extrusion, thus we can use it to calculate the normal)\n\n\t\t\t\t\tnormal.subVectors(vertex, P1).normalize();\n\t\t\t\t\tnormals.push(normal.x, normal.y, normal.z); // uv\n\n\t\t\t\t\tuvs.push(i / tubularSegments);\n\t\t\t\t\tuvs.push(j / radialSegments);\n\t\t\t\t}\n\t\t\t} // generate indices\n\n\n\t\t\tfor (let j = 1; j <= tubularSegments; j++) {\n\t\t\t\tfor (let i = 1; i <= radialSegments; i++) {\n\t\t\t\t\t// indices\n\t\t\t\t\tconst a = (radialSegments + 1) * (j - 1) + (i - 1);\n\t\t\t\t\tconst b = (radialSegments + 1) * j + (i - 1);\n\t\t\t\t\tconst c = (radialSegments + 1) * j + i;\n\t\t\t\t\tconst d = (radialSegments + 1) * (j - 1) + i; // faces\n\n\t\t\t\t\tindices.push(a, b, d);\n\t\t\t\t\tindices.push(b, c, d);\n\t\t\t\t}\n\t\t\t} // build geometry\n\n\n\t\t\tthis.setIndex(indices);\n\t\t\tthis.setAttribute('position', new Float32BufferAttribute(vertices, 3));\n\t\t\tthis.setAttribute('normal', new Float32BufferAttribute(normals, 3));\n\t\t\tthis.setAttribute('uv', new Float32BufferAttribute(uvs, 2)); // this function calculates the current position on the torus curve\n\n\t\t\tfunction calculatePositionOnCurve(u, p, q, radius, position) {\n\t\t\t\tconst cu = Math.cos(u);\n\t\t\t\tconst su = Math.sin(u);\n\t\t\t\tconst quOverP = q / p * u;\n\t\t\t\tconst cs = Math.cos(quOverP);\n\t\t\t\tposition.x = radius * (2 + cs) * 0.5 * cu;\n\t\t\t\tposition.y = radius * (2 + cs) * su * 0.5;\n\t\t\t\tposition.z = radius * Math.sin(quOverP) * 0.5;\n\t\t\t}\n\t\t}\n\n\t\tstatic fromJSON(data) {\n\t\t\treturn new TorusKnotGeometry(data.radius, data.tube, data.tubularSegments, data.radialSegments, data.p, data.q);\n\t\t}\n\n\t}\n\n\tclass TubeGeometry extends BufferGeometry {\n\t\tconstructor(path = new QuadraticBezierCurve3(new Vector3(-1, -1, 0), new Vector3(-1, 1, 0), new Vector3(1, 1, 0)), tubularSegments = 64, radius = 1, radialSegments = 8, closed = false) {\n\t\t\tsuper();\n\t\t\tthis.type = 'TubeGeometry';\n\t\t\tthis.parameters = {\n\t\t\t\tpath: path,\n\t\t\t\ttubularSegments: tubularSegments,\n\t\t\t\tradius: radius,\n\t\t\t\tradialSegments: radialSegments,\n\t\t\t\tclosed: closed\n\t\t\t};\n\t\t\tconst frames = path.computeFrenetFrames(tubularSegments, closed); // expose internals\n\n\t\t\tthis.tangents = frames.tangents;\n\t\t\tthis.normals = frames.normals;\n\t\t\tthis.binormals = frames.binormals; // helper variables\n\n\t\t\tconst vertex = new Vector3();\n\t\t\tconst normal = new Vector3();\n\t\t\tconst uv = new Vector2();\n\t\t\tlet P = new Vector3(); // buffer\n\n\t\t\tconst vertices = [];\n\t\t\tconst normals = [];\n\t\t\tconst uvs = [];\n\t\t\tconst indices = []; // create buffer data\n\n\t\t\tgenerateBufferData(); // build geometry\n\n\t\t\tthis.setIndex(indices);\n\t\t\tthis.setAttribute('position', new Float32BufferAttribute(vertices, 3));\n\t\t\tthis.setAttribute('normal', new Float32BufferAttribute(normals, 3));\n\t\t\tthis.setAttribute('uv', new Float32BufferAttribute(uvs, 2)); // functions\n\n\t\t\tfunction generateBufferData() {\n\t\t\t\tfor (let i = 0; i < tubularSegments; i++) {\n\t\t\t\t\tgenerateSegment(i);\n\t\t\t\t} // if the geometry is not closed, generate the last row of vertices and normals\n\t\t\t\t// at the regular position on the given path\n\t\t\t\t//\n\t\t\t\t// if the geometry is closed, duplicate the first row of vertices and normals (uvs will differ)\n\n\n\t\t\t\tgenerateSegment(closed === false ? tubularSegments : 0); // uvs are generated in a separate function.\n\t\t\t\t// this makes it easy compute correct values for closed geometries\n\n\t\t\t\tgenerateUVs(); // finally create faces\n\n\t\t\t\tgenerateIndices();\n\t\t\t}\n\n\t\t\tfunction generateSegment(i) {\n\t\t\t\t// we use getPointAt to sample evenly distributed points from the given path\n\t\t\t\tP = path.getPointAt(i / tubularSegments, P); // retrieve corresponding normal and binormal\n\n\t\t\t\tconst N = frames.normals[i];\n\t\t\t\tconst B = frames.binormals[i]; // generate normals and vertices for the current segment\n\n\t\t\t\tfor (let j = 0; j <= radialSegments; j++) {\n\t\t\t\t\tconst v = j / radialSegments * Math.PI * 2;\n\t\t\t\t\tconst sin = Math.sin(v);\n\t\t\t\t\tconst cos = -Math.cos(v); // normal\n\n\t\t\t\t\tnormal.x = cos * N.x + sin * B.x;\n\t\t\t\t\tnormal.y = cos * N.y + sin * B.y;\n\t\t\t\t\tnormal.z = cos * N.z + sin * B.z;\n\t\t\t\t\tnormal.normalize();\n\t\t\t\t\tnormals.push(normal.x, normal.y, normal.z); // vertex\n\n\t\t\t\t\tvertex.x = P.x + radius * normal.x;\n\t\t\t\t\tvertex.y = P.y + radius * normal.y;\n\t\t\t\t\tvertex.z = P.z + radius * normal.z;\n\t\t\t\t\tvertices.push(vertex.x, vertex.y, vertex.z);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfunction generateIndices() {\n\t\t\t\tfor (let j = 1; j <= tubularSegments; j++) {\n\t\t\t\t\tfor (let i = 1; i <= radialSegments; i++) {\n\t\t\t\t\t\tconst a = (radialSegments + 1) * (j - 1) + (i - 1);\n\t\t\t\t\t\tconst b = (radialSegments + 1) * j + (i - 1);\n\t\t\t\t\t\tconst c = (radialSegments + 1) * j + i;\n\t\t\t\t\t\tconst d = (radialSegments + 1) * (j - 1) + i; // faces\n\n\t\t\t\t\t\tindices.push(a, b, d);\n\t\t\t\t\t\tindices.push(b, c, d);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfunction generateUVs() {\n\t\t\t\tfor (let i = 0; i <= tubularSegments; i++) {\n\t\t\t\t\tfor (let j = 0; j <= radialSegments; j++) {\n\t\t\t\t\t\tuv.x = i / tubularSegments;\n\t\t\t\t\t\tuv.y = j / radialSegments;\n\t\t\t\t\t\tuvs.push(uv.x, uv.y);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\ttoJSON() {\n\t\t\tconst data = super.toJSON();\n\t\t\tdata.path = this.parameters.path.toJSON();\n\t\t\treturn data;\n\t\t}\n\n\t\tstatic fromJSON(data) {\n\t\t\t// This only works for built-in curves (e.g. CatmullRomCurve3).\n\t\t\t// User defined curves or instances of CurvePath will not be deserialized.\n\t\t\treturn new TubeGeometry(new Curves[data.path.type]().fromJSON(data.path), data.tubularSegments, data.radius, data.radialSegments, data.closed);\n\t\t}\n\n\t}\n\n\tclass WireframeGeometry extends BufferGeometry {\n\t\tconstructor(geometry = null) {\n\t\t\tsuper();\n\t\t\tthis.type = 'WireframeGeometry';\n\t\t\tthis.parameters = {\n\t\t\t\tgeometry: geometry\n\t\t\t};\n\n\t\t\tif (geometry !== null) {\n\t\t\t\t// buffer\n\t\t\t\tconst vertices = [];\n\t\t\t\tconst edges = new Set(); // helper variables\n\n\t\t\t\tconst start = new Vector3();\n\t\t\t\tconst end = new Vector3();\n\n\t\t\t\tif (geometry.index !== null) {\n\t\t\t\t\t// indexed BufferGeometry\n\t\t\t\t\tconst position = geometry.attributes.position;\n\t\t\t\t\tconst indices = geometry.index;\n\t\t\t\t\tlet groups = geometry.groups;\n\n\t\t\t\t\tif (groups.length === 0) {\n\t\t\t\t\t\tgroups = [{\n\t\t\t\t\t\t\tstart: 0,\n\t\t\t\t\t\t\tcount: indices.count,\n\t\t\t\t\t\t\tmaterialIndex: 0\n\t\t\t\t\t\t}];\n\t\t\t\t\t} // create a data structure that contains all eges without duplicates\n\n\n\t\t\t\t\tfor (let o = 0, ol = groups.length; o < ol; ++o) {\n\t\t\t\t\t\tconst group = groups[o];\n\t\t\t\t\t\tconst groupStart = group.start;\n\t\t\t\t\t\tconst groupCount = group.count;\n\n\t\t\t\t\t\tfor (let i = groupStart, l = groupStart + groupCount; i < l; i += 3) {\n\t\t\t\t\t\t\tfor (let j = 0; j < 3; j++) {\n\t\t\t\t\t\t\t\tconst index1 = indices.getX(i + j);\n\t\t\t\t\t\t\t\tconst index2 = indices.getX(i + (j + 1) % 3);\n\t\t\t\t\t\t\t\tstart.fromBufferAttribute(position, index1);\n\t\t\t\t\t\t\t\tend.fromBufferAttribute(position, index2);\n\n\t\t\t\t\t\t\t\tif (isUniqueEdge(start, end, edges) === true) {\n\t\t\t\t\t\t\t\t\tvertices.push(start.x, start.y, start.z);\n\t\t\t\t\t\t\t\t\tvertices.push(end.x, end.y, end.z);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\t// non-indexed BufferGeometry\n\t\t\t\t\tconst position = geometry.attributes.position;\n\n\t\t\t\t\tfor (let i = 0, l = position.count / 3; i < l; i++) {\n\t\t\t\t\t\tfor (let j = 0; j < 3; j++) {\n\t\t\t\t\t\t\t// three edges per triangle, an edge is represented as (index1, index2)\n\t\t\t\t\t\t\t// e.g. the first triangle has the following edges: (0,1),(1,2),(2,0)\n\t\t\t\t\t\t\tconst index1 = 3 * i + j;\n\t\t\t\t\t\t\tconst index2 = 3 * i + (j + 1) % 3;\n\t\t\t\t\t\t\tstart.fromBufferAttribute(position, index1);\n\t\t\t\t\t\t\tend.fromBufferAttribute(position, index2);\n\n\t\t\t\t\t\t\tif (isUniqueEdge(start, end, edges) === true) {\n\t\t\t\t\t\t\t\tvertices.push(start.x, start.y, start.z);\n\t\t\t\t\t\t\t\tvertices.push(end.x, end.y, end.z);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} // build geometry\n\n\n\t\t\t\tthis.setAttribute('position', new Float32BufferAttribute(vertices, 3));\n\t\t\t}\n\t\t}\n\n\t}\n\n\tfunction isUniqueEdge(start, end, edges) {\n\t\tconst hash1 = `${start.x},${start.y},${start.z}-${end.x},${end.y},${end.z}`;\n\t\tconst hash2 = `${end.x},${end.y},${end.z}-${start.x},${start.y},${start.z}`; // coincident edge\n\n\t\tif (edges.has(hash1) === true || edges.has(hash2) === true) {\n\t\t\treturn false;\n\t\t} else {\n\t\t\tedges.add(hash1, hash2);\n\t\t\treturn true;\n\t\t}\n\t}\n\n\tvar Geometries = /*#__PURE__*/Object.freeze({\n\t\t__proto__: null,\n\t\tBoxGeometry: BoxGeometry,\n\t\tBoxBufferGeometry: BoxGeometry,\n\t\tCircleGeometry: CircleGeometry,\n\t\tCircleBufferGeometry: CircleGeometry,\n\t\tConeGeometry: ConeGeometry,\n\t\tConeBufferGeometry: ConeGeometry,\n\t\tCylinderGeometry: CylinderGeometry,\n\t\tCylinderBufferGeometry: CylinderGeometry,\n\t\tDodecahedronGeometry: DodecahedronGeometry,\n\t\tDodecahedronBufferGeometry: DodecahedronGeometry,\n\t\tEdgesGeometry: EdgesGeometry,\n\t\tExtrudeGeometry: ExtrudeGeometry,\n\t\tExtrudeBufferGeometry: ExtrudeGeometry,\n\t\tIcosahedronGeometry: IcosahedronGeometry,\n\t\tIcosahedronBufferGeometry: IcosahedronGeometry,\n\t\tLatheGeometry: LatheGeometry,\n\t\tLatheBufferGeometry: LatheGeometry,\n\t\tOctahedronGeometry: OctahedronGeometry,\n\t\tOctahedronBufferGeometry: OctahedronGeometry,\n\t\tPlaneGeometry: PlaneGeometry,\n\t\tPlaneBufferGeometry: PlaneGeometry,\n\t\tPolyhedronGeometry: PolyhedronGeometry,\n\t\tPolyhedronBufferGeometry: PolyhedronGeometry,\n\t\tRingGeometry: RingGeometry,\n\t\tRingBufferGeometry: RingGeometry,\n\t\tShapeGeometry: ShapeGeometry,\n\t\tShapeBufferGeometry: ShapeGeometry,\n\t\tSphereGeometry: SphereGeometry,\n\t\tSphereBufferGeometry: SphereGeometry,\n\t\tTetrahedronGeometry: TetrahedronGeometry,\n\t\tTetrahedronBufferGeometry: TetrahedronGeometry,\n\t\tTorusGeometry: TorusGeometry,\n\t\tTorusBufferGeometry: TorusGeometry,\n\t\tTorusKnotGeometry: TorusKnotGeometry,\n\t\tTorusKnotBufferGeometry: TorusKnotGeometry,\n\t\tTubeGeometry: TubeGeometry,\n\t\tTubeBufferGeometry: TubeGeometry,\n\t\tWireframeGeometry: WireframeGeometry\n\t});\n\n\t/**\n\t * parameters = {\n\t *\tcolor: <THREE.Color>\n\t * }\n\t */\n\n\tclass ShadowMaterial extends Material {\n\t\tconstructor(parameters) {\n\t\t\tsuper();\n\t\t\tthis.type = 'ShadowMaterial';\n\t\t\tthis.color = new Color(0x000000);\n\t\t\tthis.transparent = true;\n\t\t\tthis.setValues(parameters);\n\t\t}\n\n\t\tcopy(source) {\n\t\t\tsuper.copy(source);\n\t\t\tthis.color.copy(source.color);\n\t\t\treturn this;\n\t\t}\n\n\t}\n\n\tShadowMaterial.prototype.isShadowMaterial = true;\n\n\t/**\n\t * parameters = {\n\t *\tcolor: <hex>,\n\t *\troughness: <float>,\n\t *\tmetalness: <float>,\n\t *\topacity: <float>,\n\t *\n\t *\tmap: new THREE.Texture( <Image> ),\n\t *\n\t *\tlightMap: new THREE.Texture( <Image> ),\n\t *\tlightMapIntensity: <float>\n\t *\n\t *\taoMap: new THREE.Texture( <Image> ),\n\t *\taoMapIntensity: <float>\n\t *\n\t *\temissive: <hex>,\n\t *\temissiveIntensity: <float>\n\t *\temissiveMap: new THREE.Texture( <Image> ),\n\t *\n\t *\tbumpMap: new THREE.Texture( <Image> ),\n\t *\tbumpScale: <float>,\n\t *\n\t *\tnormalMap: new THREE.Texture( <Image> ),\n\t *\tnormalMapType: THREE.TangentSpaceNormalMap,\n\t *\tnormalScale: <Vector2>,\n\t *\n\t *\tdisplacementMap: new THREE.Texture( <Image> ),\n\t *\tdisplacementScale: <float>,\n\t *\tdisplacementBias: <float>,\n\t *\n\t *\troughnessMap: new THREE.Texture( <Image> ),\n\t *\n\t *\tmetalnessMap: new THREE.Texture( <Image> ),\n\t *\n\t *\talphaMap: new THREE.Texture( <Image> ),\n\t *\n\t *\tenvMap: new THREE.CubeTexture( [posx, negx, posy, negy, posz, negz] ),\n\t *\tenvMapIntensity: <float>\n\t *\n\t *\trefractionRatio: <float>,\n\t *\n\t *\twireframe: <boolean>,\n\t *\twireframeLinewidth: <float>,\n\t *\n\t *\tflatShading: <bool>\n\t * }\n\t */\n\n\tclass MeshStandardMaterial extends Material {\n\t\tconstructor(parameters) {\n\t\t\tsuper();\n\t\t\tthis.defines = {\n\t\t\t\t'STANDARD': ''\n\t\t\t};\n\t\t\tthis.type = 'MeshStandardMaterial';\n\t\t\tthis.color = new Color(0xffffff); // diffuse\n\n\t\t\tthis.roughness = 1.0;\n\t\t\tthis.metalness = 0.0;\n\t\t\tthis.map = null;\n\t\t\tthis.lightMap = null;\n\t\t\tthis.lightMapIntensity = 1.0;\n\t\t\tthis.aoMap = null;\n\t\t\tthis.aoMapIntensity = 1.0;\n\t\t\tthis.emissive = new Color(0x000000);\n\t\t\tthis.emissiveIntensity = 1.0;\n\t\t\tthis.emissiveMap = null;\n\t\t\tthis.bumpMap = null;\n\t\t\tthis.bumpScale = 1;\n\t\t\tthis.normalMap = null;\n\t\t\tthis.normalMapType = TangentSpaceNormalMap;\n\t\t\tthis.normalScale = new Vector2(1, 1);\n\t\t\tthis.displacementMap = null;\n\t\t\tthis.displacementScale = 1;\n\t\t\tthis.displacementBias = 0;\n\t\t\tthis.roughnessMap = null;\n\t\t\tthis.metalnessMap = null;\n\t\t\tthis.alphaMap = null;\n\t\t\tthis.envMap = null;\n\t\t\tthis.envMapIntensity = 1.0;\n\t\t\tthis.refractionRatio = 0.98;\n\t\t\tthis.wireframe = false;\n\t\t\tthis.wireframeLinewidth = 1;\n\t\t\tthis.wireframeLinecap = 'round';\n\t\t\tthis.wireframeLinejoin = 'round';\n\t\t\tthis.flatShading = false;\n\t\t\tthis.setValues(parameters);\n\t\t}\n\n\t\tcopy(source) {\n\t\t\tsuper.copy(source);\n\t\t\tthis.defines = {\n\t\t\t\t'STANDARD': ''\n\t\t\t};\n\t\t\tthis.color.copy(source.color);\n\t\t\tthis.roughness = source.roughness;\n\t\t\tthis.metalness = source.metalness;\n\t\t\tthis.map = source.map;\n\t\t\tthis.lightMap = source.lightMap;\n\t\t\tthis.lightMapIntensity = source.lightMapIntensity;\n\t\t\tthis.aoMap = source.aoMap;\n\t\t\tthis.aoMapIntensity = source.aoMapIntensity;\n\t\t\tthis.emissive.copy(source.emissive);\n\t\t\tthis.emissiveMap = source.emissiveMap;\n\t\t\tthis.emissiveIntensity = source.emissiveIntensity;\n\t\t\tthis.bumpMap = source.bumpMap;\n\t\t\tthis.bumpScale = source.bumpScale;\n\t\t\tthis.normalMap = source.normalMap;\n\t\t\tthis.normalMapType = source.normalMapType;\n\t\t\tthis.normalScale.copy(source.normalScale);\n\t\t\tthis.displacementMap = source.displacementMap;\n\t\t\tthis.displacementScale = source.displacementScale;\n\t\t\tthis.displacementBias = source.displacementBias;\n\t\t\tthis.roughnessMap = source.roughnessMap;\n\t\t\tthis.metalnessMap = source.metalnessMap;\n\t\t\tthis.alphaMap = source.alphaMap;\n\t\t\tthis.envMap = source.envMap;\n\t\t\tthis.envMapIntensity = source.envMapIntensity;\n\t\t\tthis.refractionRatio = source.refractionRatio;\n\t\t\tthis.wireframe = source.wireframe;\n\t\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\t\t\tthis.wireframeLinecap = source.wireframeLinecap;\n\t\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\t\t\tthis.flatShading = source.flatShading;\n\t\t\treturn this;\n\t\t}\n\n\t}\n\n\tMeshStandardMaterial.prototype.isMeshStandardMaterial = true;\n\n\t/**\n\t * parameters = {\n\t *\tclearcoat: <float>,\n\t *\tclearcoatMap: new THREE.Texture( <Image> ),\n\t *\tclearcoatRoughness: <float>,\n\t *\tclearcoatRoughnessMap: new THREE.Texture( <Image> ),\n\t *\tclearcoatNormalScale: <Vector2>,\n\t *\tclearcoatNormalMap: new THREE.Texture( <Image> ),\n\t *\n\t *\tior: <float>,\n\t *\treflectivity: <float>,\n\t *\n\t *\tsheen: <float>,\n\t *\tsheenColor: <Color>,\n\t *\tsheenColorMap: new THREE.Texture( <Image> ),\n\t *\tsheenRoughness: <float>,\n\t *\tsheenRoughnessMap: new THREE.Texture( <Image> ),\n\t *\n\t *\ttransmission: <float>,\n\t *\ttransmissionMap: new THREE.Texture( <Image> ),\n\t *\n\t *\tthickness: <float>,\n\t *\tthicknessMap: new THREE.Texture( <Image> ),\n\t *\tattenuationDistance: <float>,\n\t *\tattenuationColor: <Color>,\n\t *\n\t *\tspecularIntensity: <float>,\n\t *\tspecularIntensityMap: new THREE.Texture( <Image> ),\n\t *\tspecularColor: <Color>,\n\t *\tspecularColorMap: new THREE.Texture( <Image> )\n\t * }\n\t */\n\n\tclass MeshPhysicalMaterial extends MeshStandardMaterial {\n\t\tconstructor(parameters) {\n\t\t\tsuper();\n\t\t\tthis.defines = {\n\t\t\t\t'STANDARD': '',\n\t\t\t\t'PHYSICAL': ''\n\t\t\t};\n\t\t\tthis.type = 'MeshPhysicalMaterial';\n\t\t\tthis.clearcoatMap = null;\n\t\t\tthis.clearcoatRoughness = 0.0;\n\t\t\tthis.clearcoatRoughnessMap = null;\n\t\t\tthis.clearcoatNormalScale = new Vector2(1, 1);\n\t\t\tthis.clearcoatNormalMap = null;\n\t\t\tthis.ior = 1.5;\n\t\t\tObject.defineProperty(this, 'reflectivity', {\n\t\t\t\tget: function () {\n\t\t\t\t\treturn clamp(2.5 * (this.ior - 1) / (this.ior + 1), 0, 1);\n\t\t\t\t},\n\t\t\t\tset: function (reflectivity) {\n\t\t\t\t\tthis.ior = (1 + 0.4 * reflectivity) / (1 - 0.4 * reflectivity);\n\t\t\t\t}\n\t\t\t});\n\t\t\tthis.sheenColor = new Color(0x000000);\n\t\t\tthis.sheenColorMap = null;\n\t\t\tthis.sheenRoughness = 1.0;\n\t\t\tthis.sheenRoughnessMap = null;\n\t\t\tthis.transmissionMap = null;\n\t\t\tthis.thickness = 0.01;\n\t\t\tthis.thicknessMap = null;\n\t\t\tthis.attenuationDistance = 0.0;\n\t\t\tthis.attenuationColor = new Color(1, 1, 1);\n\t\t\tthis.specularIntensity = 1.0;\n\t\t\tthis.specularIntensityMap = null;\n\t\t\tthis.specularColor = new Color(1, 1, 1);\n\t\t\tthis.specularColorMap = null;\n\t\t\tthis._sheen = 0.0;\n\t\t\tthis._clearcoat = 0;\n\t\t\tthis._transmission = 0;\n\t\t\tthis.setValues(parameters);\n\t\t}\n\n\t\tget sheen() {\n\t\t\treturn this._sheen;\n\t\t}\n\n\t\tset sheen(value) {\n\t\t\tif (this._sheen > 0 !== value > 0) {\n\t\t\t\tthis.version++;\n\t\t\t}\n\n\t\t\tthis._sheen = value;\n\t\t}\n\n\t\tget clearcoat() {\n\t\t\treturn this._clearcoat;\n\t\t}\n\n\t\tset clearcoat(value) {\n\t\t\tif (this._clearcoat > 0 !== value > 0) {\n\t\t\t\tthis.version++;\n\t\t\t}\n\n\t\t\tthis._clearcoat = value;\n\t\t}\n\n\t\tget transmission() {\n\t\t\treturn this._transmission;\n\t\t}\n\n\t\tset transmission(value) {\n\t\t\tif (this._transmission > 0 !== value > 0) {\n\t\t\t\tthis.version++;\n\t\t\t}\n\n\t\t\tthis._transmission = value;\n\t\t}\n\n\t\tcopy(source) {\n\t\t\tsuper.copy(source);\n\t\t\tthis.defines = {\n\t\t\t\t'STANDARD': '',\n\t\t\t\t'PHYSICAL': ''\n\t\t\t};\n\t\t\tthis.clearcoat = source.clearcoat;\n\t\t\tthis.clearcoatMap = source.clearcoatMap;\n\t\t\tthis.clearcoatRoughness = source.clearcoatRoughness;\n\t\t\tthis.clearcoatRoughnessMap = source.clearcoatRoughnessMap;\n\t\t\tthis.clearcoatNormalMap = source.clearcoatNormalMap;\n\t\t\tthis.clearcoatNormalScale.copy(source.clearcoatNormalScale);\n\t\t\tthis.ior = source.ior;\n\t\t\tthis.sheen = source.sheen;\n\t\t\tthis.sheenColor.copy(source.sheenColor);\n\t\t\tthis.sheenColorMap = source.sheenColorMap;\n\t\t\tthis.sheenRoughness = source.sheenRoughness;\n\t\t\tthis.sheenRoughnessMap = source.sheenRoughnessMap;\n\t\t\tthis.transmission = source.transmission;\n\t\t\tthis.transmissionMap = source.transmissionMap;\n\t\t\tthis.thickness = source.thickness;\n\t\t\tthis.thicknessMap = source.thicknessMap;\n\t\t\tthis.attenuationDistance = source.attenuationDistance;\n\t\t\tthis.attenuationColor.copy(source.attenuationColor);\n\t\t\tthis.specularIntensity = source.specularIntensity;\n\t\t\tthis.specularIntensityMap = source.specularIntensityMap;\n\t\t\tthis.specularColor.copy(source.specularColor);\n\t\t\tthis.specularColorMap = source.specularColorMap;\n\t\t\treturn this;\n\t\t}\n\n\t}\n\n\tMeshPhysicalMaterial.prototype.isMeshPhysicalMaterial = true;\n\n\t/**\n\t * parameters = {\n\t *\tcolor: <hex>,\n\t *\tspecular: <hex>,\n\t *\tshininess: <float>,\n\t *\topacity: <float>,\n\t *\n\t *\tmap: new THREE.Texture( <Image> ),\n\t *\n\t *\tlightMap: new THREE.Texture( <Image> ),\n\t *\tlightMapIntensity: <float>\n\t *\n\t *\taoMap: new THREE.Texture( <Image> ),\n\t *\taoMapIntensity: <float>\n\t *\n\t *\temissive: <hex>,\n\t *\temissiveIntensity: <float>\n\t *\temissiveMap: new THREE.Texture( <Image> ),\n\t *\n\t *\tbumpMap: new THREE.Texture( <Image> ),\n\t *\tbumpScale: <float>,\n\t *\n\t *\tnormalMap: new THREE.Texture( <Image> ),\n\t *\tnormalMapType: THREE.TangentSpaceNormalMap,\n\t *\tnormalScale: <Vector2>,\n\t *\n\t *\tdisplacementMap: new THREE.Texture( <Image> ),\n\t *\tdisplacementScale: <float>,\n\t *\tdisplacementBias: <float>,\n\t *\n\t *\tspecularMap: new THREE.Texture( <Image> ),\n\t *\n\t *\talphaMap: new THREE.Texture( <Image> ),\n\t *\n\t *\tenvMap: new THREE.CubeTexture( [posx, negx, posy, negy, posz, negz] ),\n\t *\tcombine: THREE.MultiplyOperation,\n\t *\treflectivity: <float>,\n\t *\trefractionRatio: <float>,\n\t *\n\t *\twireframe: <boolean>,\n\t *\twireframeLinewidth: <float>,\n\t *\n\t *\tflatShading: <bool>\n\t * }\n\t */\n\n\tclass MeshPhongMaterial extends Material {\n\t\tconstructor(parameters) {\n\t\t\tsuper();\n\t\t\tthis.type = 'MeshPhongMaterial';\n\t\t\tthis.color = new Color(0xffffff); // diffuse\n\n\t\t\tthis.specular = new Color(0x111111);\n\t\t\tthis.shininess = 30;\n\t\t\tthis.map = null;\n\t\t\tthis.lightMap = null;\n\t\t\tthis.lightMapIntensity = 1.0;\n\t\t\tthis.aoMap = null;\n\t\t\tthis.aoMapIntensity = 1.0;\n\t\t\tthis.emissive = new Color(0x000000);\n\t\t\tthis.emissiveIntensity = 1.0;\n\t\t\tthis.emissiveMap = null;\n\t\t\tthis.bumpMap = null;\n\t\t\tthis.bumpScale = 1;\n\t\t\tthis.normalMap = null;\n\t\t\tthis.normalMapType = TangentSpaceNormalMap;\n\t\t\tthis.normalScale = new Vector2(1, 1);\n\t\t\tthis.displacementMap = null;\n\t\t\tthis.displacementScale = 1;\n\t\t\tthis.displacementBias = 0;\n\t\t\tthis.specularMap = null;\n\t\t\tthis.alphaMap = null;\n\t\t\tthis.envMap = null;\n\t\t\tthis.combine = MultiplyOperation;\n\t\t\tthis.reflectivity = 1;\n\t\t\tthis.refractionRatio = 0.98;\n\t\t\tthis.wireframe = false;\n\t\t\tthis.wireframeLinewidth = 1;\n\t\t\tthis.wireframeLinecap = 'round';\n\t\t\tthis.wireframeLinejoin = 'round';\n\t\t\tthis.flatShading = false;\n\t\t\tthis.setValues(parameters);\n\t\t}\n\n\t\tcopy(source) {\n\t\t\tsuper.copy(source);\n\t\t\tthis.color.copy(source.color);\n\t\t\tthis.specular.copy(source.specular);\n\t\t\tthis.shininess = source.shininess;\n\t\t\tthis.map = source.map;\n\t\t\tthis.lightMap = source.lightMap;\n\t\t\tthis.lightMapIntensity = source.lightMapIntensity;\n\t\t\tthis.aoMap = source.aoMap;\n\t\t\tthis.aoMapIntensity = source.aoMapIntensity;\n\t\t\tthis.emissive.copy(source.emissive);\n\t\t\tthis.emissiveMap = source.emissiveMap;\n\t\t\tthis.emissiveIntensity = source.emissiveIntensity;\n\t\t\tthis.bumpMap = source.bumpMap;\n\t\t\tthis.bumpScale = source.bumpScale;\n\t\t\tthis.normalMap = source.normalMap;\n\t\t\tthis.normalMapType = source.normalMapType;\n\t\t\tthis.normalScale.copy(source.normalScale);\n\t\t\tthis.displacementMap = source.displacementMap;\n\t\t\tthis.displacementScale = source.displacementScale;\n\t\t\tthis.displacementBias = source.displacementBias;\n\t\t\tthis.specularMap = source.specularMap;\n\t\t\tthis.alphaMap = source.alphaMap;\n\t\t\tthis.envMap = source.envMap;\n\t\t\tthis.combine = source.combine;\n\t\t\tthis.reflectivity = source.reflectivity;\n\t\t\tthis.refractionRatio = source.refractionRatio;\n\t\t\tthis.wireframe = source.wireframe;\n\t\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\t\t\tthis.wireframeLinecap = source.wireframeLinecap;\n\t\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\t\t\tthis.flatShading = source.flatShading;\n\t\t\treturn this;\n\t\t}\n\n\t}\n\n\tMeshPhongMaterial.prototype.isMeshPhongMaterial = true;\n\n\t/**\n\t * parameters = {\n\t *\tcolor: <hex>,\n\t *\n\t *\tmap: new THREE.Texture( <Image> ),\n\t *\tgradientMap: new THREE.Texture( <Image> ),\n\t *\n\t *\tlightMap: new THREE.Texture( <Image> ),\n\t *\tlightMapIntensity: <float>\n\t *\n\t *\taoMap: new THREE.Texture( <Image> ),\n\t *\taoMapIntensity: <float>\n\t *\n\t *\temissive: <hex>,\n\t *\temissiveIntensity: <float>\n\t *\temissiveMap: new THREE.Texture( <Image> ),\n\t *\n\t *\tbumpMap: new THREE.Texture( <Image> ),\n\t *\tbumpScale: <float>,\n\t *\n\t *\tnormalMap: new THREE.Texture( <Image> ),\n\t *\tnormalMapType: THREE.TangentSpaceNormalMap,\n\t *\tnormalScale: <Vector2>,\n\t *\n\t *\tdisplacementMap: new THREE.Texture( <Image> ),\n\t *\tdisplacementScale: <float>,\n\t *\tdisplacementBias: <float>,\n\t *\n\t *\talphaMap: new THREE.Texture( <Image> ),\n\t *\n\t *\twireframe: <boolean>,\n\t *\twireframeLinewidth: <float>,\n\t *\n\t * }\n\t */\n\n\tclass MeshToonMaterial extends Material {\n\t\tconstructor(parameters) {\n\t\t\tsuper();\n\t\t\tthis.defines = {\n\t\t\t\t'TOON': ''\n\t\t\t};\n\t\t\tthis.type = 'MeshToonMaterial';\n\t\t\tthis.color = new Color(0xffffff);\n\t\t\tthis.map = null;\n\t\t\tthis.gradientMap = null;\n\t\t\tthis.lightMap = null;\n\t\t\tthis.lightMapIntensity = 1.0;\n\t\t\tthis.aoMap = null;\n\t\t\tthis.aoMapIntensity = 1.0;\n\t\t\tthis.emissive = new Color(0x000000);\n\t\t\tthis.emissiveIntensity = 1.0;\n\t\t\tthis.emissiveMap = null;\n\t\t\tthis.bumpMap = null;\n\t\t\tthis.bumpScale = 1;\n\t\t\tthis.normalMap = null;\n\t\t\tthis.normalMapType = TangentSpaceNormalMap;\n\t\t\tthis.normalScale = new Vector2(1, 1);\n\t\t\tthis.displacementMap = null;\n\t\t\tthis.displacementScale = 1;\n\t\t\tthis.displacementBias = 0;\n\t\t\tthis.alphaMap = null;\n\t\t\tthis.wireframe = false;\n\t\t\tthis.wireframeLinewidth = 1;\n\t\t\tthis.wireframeLinecap = 'round';\n\t\t\tthis.wireframeLinejoin = 'round';\n\t\t\tthis.setValues(parameters);\n\t\t}\n\n\t\tcopy(source) {\n\t\t\tsuper.copy(source);\n\t\t\tthis.color.copy(source.color);\n\t\t\tthis.map = source.map;\n\t\t\tthis.gradientMap = source.gradientMap;\n\t\t\tthis.lightMap = source.lightMap;\n\t\t\tthis.lightMapIntensity = source.lightMapIntensity;\n\t\t\tthis.aoMap = source.aoMap;\n\t\t\tthis.aoMapIntensity = source.aoMapIntensity;\n\t\t\tthis.emissive.copy(source.emissive);\n\t\t\tthis.emissiveMap = source.emissiveMap;\n\t\t\tthis.emissiveIntensity = source.emissiveIntensity;\n\t\t\tthis.bumpMap = source.bumpMap;\n\t\t\tthis.bumpScale = source.bumpScale;\n\t\t\tthis.normalMap = source.normalMap;\n\t\t\tthis.normalMapType = source.normalMapType;\n\t\t\tthis.normalScale.copy(source.normalScale);\n\t\t\tthis.displacementMap = source.displacementMap;\n\t\t\tthis.displacementScale = source.displacementScale;\n\t\t\tthis.displacementBias = source.displacementBias;\n\t\t\tthis.alphaMap = source.alphaMap;\n\t\t\tthis.wireframe = source.wireframe;\n\t\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\t\t\tthis.wireframeLinecap = source.wireframeLinecap;\n\t\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\t\t\treturn this;\n\t\t}\n\n\t}\n\n\tMeshToonMaterial.prototype.isMeshToonMaterial = true;\n\n\t/**\n\t * parameters = {\n\t *\topacity: <float>,\n\t *\n\t *\tbumpMap: new THREE.Texture( <Image> ),\n\t *\tbumpScale: <float>,\n\t *\n\t *\tnormalMap: new THREE.Texture( <Image> ),\n\t *\tnormalMapType: THREE.TangentSpaceNormalMap,\n\t *\tnormalScale: <Vector2>,\n\t *\n\t *\tdisplacementMap: new THREE.Texture( <Image> ),\n\t *\tdisplacementScale: <float>,\n\t *\tdisplacementBias: <float>,\n\t *\n\t *\twireframe: <boolean>,\n\t *\twireframeLinewidth: <float>\n\t *\n\t *\tflatShading: <bool>\n\t * }\n\t */\n\n\tclass MeshNormalMaterial extends Material {\n\t\tconstructor(parameters) {\n\t\t\tsuper();\n\t\t\tthis.type = 'MeshNormalMaterial';\n\t\t\tthis.bumpMap = null;\n\t\t\tthis.bumpScale = 1;\n\t\t\tthis.normalMap = null;\n\t\t\tthis.normalMapType = TangentSpaceNormalMap;\n\t\t\tthis.normalScale = new Vector2(1, 1);\n\t\t\tthis.displacementMap = null;\n\t\t\tthis.displacementScale = 1;\n\t\t\tthis.displacementBias = 0;\n\t\t\tthis.wireframe = false;\n\t\t\tthis.wireframeLinewidth = 1;\n\t\t\tthis.fog = false;\n\t\t\tthis.flatShading = false;\n\t\t\tthis.setValues(parameters);\n\t\t}\n\n\t\tcopy(source) {\n\t\t\tsuper.copy(source);\n\t\t\tthis.bumpMap = source.bumpMap;\n\t\t\tthis.bumpScale = source.bumpScale;\n\t\t\tthis.normalMap = source.normalMap;\n\t\t\tthis.normalMapType = source.normalMapType;\n\t\t\tthis.normalScale.copy(source.normalScale);\n\t\t\tthis.displacementMap = source.displacementMap;\n\t\t\tthis.displacementScale = source.displacementScale;\n\t\t\tthis.displacementBias = source.displacementBias;\n\t\t\tthis.wireframe = source.wireframe;\n\t\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\t\t\tthis.flatShading = source.flatShading;\n\t\t\treturn this;\n\t\t}\n\n\t}\n\n\tMeshNormalMaterial.prototype.isMeshNormalMaterial = true;\n\n\t/**\n\t * parameters = {\n\t *\tcolor: <hex>,\n\t *\topacity: <float>,\n\t *\n\t *\tmap: new THREE.Texture( <Image> ),\n\t *\n\t *\tlightMap: new THREE.Texture( <Image> ),\n\t *\tlightMapIntensity: <float>\n\t *\n\t *\taoMap: new THREE.Texture( <Image> ),\n\t *\taoMapIntensity: <float>\n\t *\n\t *\temissive: <hex>,\n\t *\temissiveIntensity: <float>\n\t *\temissiveMap: new THREE.Texture( <Image> ),\n\t *\n\t *\tspecularMap: new THREE.Texture( <Image> ),\n\t *\n\t *\talphaMap: new THREE.Texture( <Image> ),\n\t *\n\t *\tenvMap: new THREE.CubeTexture( [posx, negx, posy, negy, posz, negz] ),\n\t *\tcombine: THREE.Multiply,\n\t *\treflectivity: <float>,\n\t *\trefractionRatio: <float>,\n\t *\n\t *\twireframe: <boolean>,\n\t *\twireframeLinewidth: <float>,\n\t *\n\t * }\n\t */\n\n\tclass MeshLambertMaterial extends Material {\n\t\tconstructor(parameters) {\n\t\t\tsuper();\n\t\t\tthis.type = 'MeshLambertMaterial';\n\t\t\tthis.color = new Color(0xffffff); // diffuse\n\n\t\t\tthis.map = null;\n\t\t\tthis.lightMap = null;\n\t\t\tthis.lightMapIntensity = 1.0;\n\t\t\tthis.aoMap = null;\n\t\t\tthis.aoMapIntensity = 1.0;\n\t\t\tthis.emissive = new Color(0x000000);\n\t\t\tthis.emissiveIntensity = 1.0;\n\t\t\tthis.emissiveMap = null;\n\t\t\tthis.specularMap = null;\n\t\t\tthis.alphaMap = null;\n\t\t\tthis.envMap = null;\n\t\t\tthis.combine = MultiplyOperation;\n\t\t\tthis.reflectivity = 1;\n\t\t\tthis.refractionRatio = 0.98;\n\t\t\tthis.wireframe = false;\n\t\t\tthis.wireframeLinewidth = 1;\n\t\t\tthis.wireframeLinecap = 'round';\n\t\t\tthis.wireframeLinejoin = 'round';\n\t\t\tthis.setValues(parameters);\n\t\t}\n\n\t\tcopy(source) {\n\t\t\tsuper.copy(source);\n\t\t\tthis.color.copy(source.color);\n\t\t\tthis.map = source.map;\n\t\t\tthis.lightMap = source.lightMap;\n\t\t\tthis.lightMapIntensity = source.lightMapIntensity;\n\t\t\tthis.aoMap = source.aoMap;\n\t\t\tthis.aoMapIntensity = source.aoMapIntensity;\n\t\t\tthis.emissive.copy(source.emissive);\n\t\t\tthis.emissiveMap = source.emissiveMap;\n\t\t\tthis.emissiveIntensity = source.emissiveIntensity;\n\t\t\tthis.specularMap = source.specularMap;\n\t\t\tthis.alphaMap = source.alphaMap;\n\t\t\tthis.envMap = source.envMap;\n\t\t\tthis.combine = source.combine;\n\t\t\tthis.reflectivity = source.reflectivity;\n\t\t\tthis.refractionRatio = source.refractionRatio;\n\t\t\tthis.wireframe = source.wireframe;\n\t\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\t\t\tthis.wireframeLinecap = source.wireframeLinecap;\n\t\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\t\t\treturn this;\n\t\t}\n\n\t}\n\n\tMeshLambertMaterial.prototype.isMeshLambertMaterial = true;\n\n\t/**\n\t * parameters = {\n\t *\tcolor: <hex>,\n\t *\topacity: <float>,\n\t *\n\t *\tmatcap: new THREE.Texture( <Image> ),\n\t *\n\t *\tmap: new THREE.Texture( <Image> ),\n\t *\n\t *\tbumpMap: new THREE.Texture( <Image> ),\n\t *\tbumpScale: <float>,\n\t *\n\t *\tnormalMap: new THREE.Texture( <Image> ),\n\t *\tnormalMapType: THREE.TangentSpaceNormalMap,\n\t *\tnormalScale: <Vector2>,\n\t *\n\t *\tdisplacementMap: new THREE.Texture( <Image> ),\n\t *\tdisplacementScale: <float>,\n\t *\tdisplacementBias: <float>,\n\t *\n\t *\talphaMap: new THREE.Texture( <Image> ),\n\t *\n\t *\tflatShading: <bool>\n\t * }\n\t */\n\n\tclass MeshMatcapMaterial extends Material {\n\t\tconstructor(parameters) {\n\t\t\tsuper();\n\t\t\tthis.defines = {\n\t\t\t\t'MATCAP': ''\n\t\t\t};\n\t\t\tthis.type = 'MeshMatcapMaterial';\n\t\t\tthis.color = new Color(0xffffff); // diffuse\n\n\t\t\tthis.matcap = null;\n\t\t\tthis.map = null;\n\t\t\tthis.bumpMap = null;\n\t\t\tthis.bumpScale = 1;\n\t\t\tthis.normalMap = null;\n\t\t\tthis.normalMapType = TangentSpaceNormalMap;\n\t\t\tthis.normalScale = new Vector2(1, 1);\n\t\t\tthis.displacementMap = null;\n\t\t\tthis.displacementScale = 1;\n\t\t\tthis.displacementBias = 0;\n\t\t\tthis.alphaMap = null;\n\t\t\tthis.flatShading = false;\n\t\t\tthis.setValues(parameters);\n\t\t}\n\n\t\tcopy(source) {\n\t\t\tsuper.copy(source);\n\t\t\tthis.defines = {\n\t\t\t\t'MATCAP': ''\n\t\t\t};\n\t\t\tthis.color.copy(source.color);\n\t\t\tthis.matcap = source.matcap;\n\t\t\tthis.map = source.map;\n\t\t\tthis.bumpMap = source.bumpMap;\n\t\t\tthis.bumpScale = source.bumpScale;\n\t\t\tthis.normalMap = source.normalMap;\n\t\t\tthis.normalMapType = source.normalMapType;\n\t\t\tthis.normalScale.copy(source.normalScale);\n\t\t\tthis.displacementMap = source.displacementMap;\n\t\t\tthis.displacementScale = source.displacementScale;\n\t\t\tthis.displacementBias = source.displacementBias;\n\t\t\tthis.alphaMap = source.alphaMap;\n\t\t\tthis.flatShading = source.flatShading;\n\t\t\treturn this;\n\t\t}\n\n\t}\n\n\tMeshMatcapMaterial.prototype.isMeshMatcapMaterial = true;\n\n\t/**\n\t * parameters = {\n\t *\tcolor: <hex>,\n\t *\topacity: <float>,\n\t *\n\t *\tlinewidth: <float>,\n\t *\n\t *\tscale: <float>,\n\t *\tdashSize: <float>,\n\t *\tgapSize: <float>\n\t * }\n\t */\n\n\tclass LineDashedMaterial extends LineBasicMaterial {\n\t\tconstructor(parameters) {\n\t\t\tsuper();\n\t\t\tthis.type = 'LineDashedMaterial';\n\t\t\tthis.scale = 1;\n\t\t\tthis.dashSize = 3;\n\t\t\tthis.gapSize = 1;\n\t\t\tthis.setValues(parameters);\n\t\t}\n\n\t\tcopy(source) {\n\t\t\tsuper.copy(source);\n\t\t\tthis.scale = source.scale;\n\t\t\tthis.dashSize = source.dashSize;\n\t\t\tthis.gapSize = source.gapSize;\n\t\t\treturn this;\n\t\t}\n\n\t}\n\n\tLineDashedMaterial.prototype.isLineDashedMaterial = true;\n\n\tvar Materials = /*#__PURE__*/Object.freeze({\n\t\t__proto__: null,\n\t\tShadowMaterial: ShadowMaterial,\n\t\tSpriteMaterial: SpriteMaterial,\n\t\tRawShaderMaterial: RawShaderMaterial,\n\t\tShaderMaterial: ShaderMaterial,\n\t\tPointsMaterial: PointsMaterial,\n\t\tMeshPhysicalMaterial: MeshPhysicalMaterial,\n\t\tMeshStandardMaterial: MeshStandardMaterial,\n\t\tMeshPhongMaterial: MeshPhongMaterial,\n\t\tMeshToonMaterial: MeshToonMaterial,\n\t\tMeshNormalMaterial: MeshNormalMaterial,\n\t\tMeshLambertMaterial: MeshLambertMaterial,\n\t\tMeshDepthMaterial: MeshDepthMaterial,\n\t\tMeshDistanceMaterial: MeshDistanceMaterial,\n\t\tMeshBasicMaterial: MeshBasicMaterial,\n\t\tMeshMatcapMaterial: MeshMatcapMaterial,\n\t\tLineDashedMaterial: LineDashedMaterial,\n\t\tLineBasicMaterial: LineBasicMaterial,\n\t\tMaterial: Material\n\t});\n\n\tconst AnimationUtils = {\n\t\t// same as Array.prototype.slice, but also works on typed arrays\n\t\tarraySlice: function (array, from, to) {\n\t\t\tif (AnimationUtils.isTypedArray(array)) {\n\t\t\t\t// in ios9 array.subarray(from, undefined) will return empty array\n\t\t\t\t// but array.subarray(from) or array.subarray(from, len) is correct\n\t\t\t\treturn new array.constructor(array.subarray(from, to !== undefined ? to : array.length));\n\t\t\t}\n\n\t\t\treturn array.slice(from, to);\n\t\t},\n\t\t// converts an array to a specific type\n\t\tconvertArray: function (array, type, forceClone) {\n\t\t\tif (!array || // let 'undefined' and 'null' pass\n\t\t\t!forceClone && array.constructor === type) return array;\n\n\t\t\tif (typeof type.BYTES_PER_ELEMENT === 'number') {\n\t\t\t\treturn new type(array); // create typed array\n\t\t\t}\n\n\t\t\treturn Array.prototype.slice.call(array); // create Array\n\t\t},\n\t\tisTypedArray: function (object) {\n\t\t\treturn ArrayBuffer.isView(object) && !(object instanceof DataView);\n\t\t},\n\t\t// returns an array by which times and values can be sorted\n\t\tgetKeyframeOrder: function (times) {\n\t\t\tfunction compareTime(i, j) {\n\t\t\t\treturn times[i] - times[j];\n\t\t\t}\n\n\t\t\tconst n = times.length;\n\t\t\tconst result = new Array(n);\n\n\t\t\tfor (let i = 0; i !== n; ++i) result[i] = i;\n\n\t\t\tresult.sort(compareTime);\n\t\t\treturn result;\n\t\t},\n\t\t// uses the array previously returned by 'getKeyframeOrder' to sort data\n\t\tsortedArray: function (values, stride, order) {\n\t\t\tconst nValues = values.length;\n\t\t\tconst result = new values.constructor(nValues);\n\n\t\t\tfor (let i = 0, dstOffset = 0; dstOffset !== nValues; ++i) {\n\t\t\t\tconst srcOffset = order[i] * stride;\n\n\t\t\t\tfor (let j = 0; j !== stride; ++j) {\n\t\t\t\t\tresult[dstOffset++] = values[srcOffset + j];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn result;\n\t\t},\n\t\t// function for parsing AOS keyframe formats\n\t\tflattenJSON: function (jsonKeys, times, values, valuePropertyName) {\n\t\t\tlet i = 1,\n\t\t\t\t\tkey = jsonKeys[0];\n\n\t\t\twhile (key !== undefined && key[valuePropertyName] === undefined) {\n\t\t\t\tkey = jsonKeys[i++];\n\t\t\t}\n\n\t\t\tif (key === undefined) return; // no data\n\n\t\t\tlet value = key[valuePropertyName];\n\t\t\tif (value === undefined) return; // no data\n\n\t\t\tif (Array.isArray(value)) {\n\t\t\t\tdo {\n\t\t\t\t\tvalue = key[valuePropertyName];\n\n\t\t\t\t\tif (value !== undefined) {\n\t\t\t\t\t\ttimes.push(key.time);\n\t\t\t\t\t\tvalues.push.apply(values, value); // push all elements\n\t\t\t\t\t}\n\n\t\t\t\t\tkey = jsonKeys[i++];\n\t\t\t\t} while (key !== undefined);\n\t\t\t} else if (value.toArray !== undefined) {\n\t\t\t\t// ...assume THREE.Math-ish\n\t\t\t\tdo {\n\t\t\t\t\tvalue = key[valuePropertyName];\n\n\t\t\t\t\tif (value !== undefined) {\n\t\t\t\t\t\ttimes.push(key.time);\n\t\t\t\t\t\tvalue.toArray(values, values.length);\n\t\t\t\t\t}\n\n\t\t\t\t\tkey = jsonKeys[i++];\n\t\t\t\t} while (key !== undefined);\n\t\t\t} else {\n\t\t\t\t// otherwise push as-is\n\t\t\t\tdo {\n\t\t\t\t\tvalue = key[valuePropertyName];\n\n\t\t\t\t\tif (value !== undefined) {\n\t\t\t\t\t\ttimes.push(key.time);\n\t\t\t\t\t\tvalues.push(value);\n\t\t\t\t\t}\n\n\t\t\t\t\tkey = jsonKeys[i++];\n\t\t\t\t} while (key !== undefined);\n\t\t\t}\n\t\t},\n\t\tsubclip: function (sourceClip, name, startFrame, endFrame, fps = 30) {\n\t\t\tconst clip = sourceClip.clone();\n\t\t\tclip.name = name;\n\t\t\tconst tracks = [];\n\n\t\t\tfor (let i = 0; i < clip.tracks.length; ++i) {\n\t\t\t\tconst track = clip.tracks[i];\n\t\t\t\tconst valueSize = track.getValueSize();\n\t\t\t\tconst times = [];\n\t\t\t\tconst values = [];\n\n\t\t\t\tfor (let j = 0; j < track.times.length; ++j) {\n\t\t\t\t\tconst frame = track.times[j] * fps;\n\t\t\t\t\tif (frame < startFrame || frame >= endFrame) continue;\n\t\t\t\t\ttimes.push(track.times[j]);\n\n\t\t\t\t\tfor (let k = 0; k < valueSize; ++k) {\n\t\t\t\t\t\tvalues.push(track.values[j * valueSize + k]);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (times.length === 0) continue;\n\t\t\t\ttrack.times = AnimationUtils.convertArray(times, track.times.constructor);\n\t\t\t\ttrack.values = AnimationUtils.convertArray(values, track.values.constructor);\n\t\t\t\ttracks.push(track);\n\t\t\t}\n\n\t\t\tclip.tracks = tracks; // find minimum .times value across all tracks in the trimmed clip\n\n\t\t\tlet minStartTime = Infinity;\n\n\t\t\tfor (let i = 0; i < clip.tracks.length; ++i) {\n\t\t\t\tif (minStartTime > clip.tracks[i].times[0]) {\n\t\t\t\t\tminStartTime = clip.tracks[i].times[0];\n\t\t\t\t}\n\t\t\t} // shift all tracks such that clip begins at t=0\n\n\n\t\t\tfor (let i = 0; i < clip.tracks.length; ++i) {\n\t\t\t\tclip.tracks[i].shift(-1 * minStartTime);\n\t\t\t}\n\n\t\t\tclip.resetDuration();\n\t\t\treturn clip;\n\t\t},\n\t\tmakeClipAdditive: function (targetClip, referenceFrame = 0, referenceClip = targetClip, fps = 30) {\n\t\t\tif (fps <= 0) fps = 30;\n\t\t\tconst numTracks = referenceClip.tracks.length;\n\t\t\tconst referenceTime = referenceFrame / fps; // Make each track's values relative to the values at the reference frame\n\n\t\t\tfor (let i = 0; i < numTracks; ++i) {\n\t\t\t\tconst referenceTrack = referenceClip.tracks[i];\n\t\t\t\tconst referenceTrackType = referenceTrack.ValueTypeName; // Skip this track if it's non-numeric\n\n\t\t\t\tif (referenceTrackType === 'bool' || referenceTrackType === 'string') continue; // Find the track in the target clip whose name and type matches the reference track\n\n\t\t\t\tconst targetTrack = targetClip.tracks.find(function (track) {\n\t\t\t\t\treturn track.name === referenceTrack.name && track.ValueTypeName === referenceTrackType;\n\t\t\t\t});\n\t\t\t\tif (targetTrack === undefined) continue;\n\t\t\t\tlet referenceOffset = 0;\n\t\t\t\tconst referenceValueSize = referenceTrack.getValueSize();\n\n\t\t\t\tif (referenceTrack.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline) {\n\t\t\t\t\treferenceOffset = referenceValueSize / 3;\n\t\t\t\t}\n\n\t\t\t\tlet targetOffset = 0;\n\t\t\t\tconst targetValueSize = targetTrack.getValueSize();\n\n\t\t\t\tif (targetTrack.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline) {\n\t\t\t\t\ttargetOffset = targetValueSize / 3;\n\t\t\t\t}\n\n\t\t\t\tconst lastIndex = referenceTrack.times.length - 1;\n\t\t\t\tlet referenceValue; // Find the value to subtract out of the track\n\n\t\t\t\tif (referenceTime <= referenceTrack.times[0]) {\n\t\t\t\t\t// Reference frame is earlier than the first keyframe, so just use the first keyframe\n\t\t\t\t\tconst startIndex = referenceOffset;\n\t\t\t\t\tconst endIndex = referenceValueSize - referenceOffset;\n\t\t\t\t\treferenceValue = AnimationUtils.arraySlice(referenceTrack.values, startIndex, endIndex);\n\t\t\t\t} else if (referenceTime >= referenceTrack.times[lastIndex]) {\n\t\t\t\t\t// Reference frame is after the last keyframe, so just use the last keyframe\n\t\t\t\t\tconst startIndex = lastIndex * referenceValueSize + referenceOffset;\n\t\t\t\t\tconst endIndex = startIndex + referenceValueSize - referenceOffset;\n\t\t\t\t\treferenceValue = AnimationUtils.arraySlice(referenceTrack.values, startIndex, endIndex);\n\t\t\t\t} else {\n\t\t\t\t\t// Interpolate to the reference value\n\t\t\t\t\tconst interpolant = referenceTrack.createInterpolant();\n\t\t\t\t\tconst startIndex = referenceOffset;\n\t\t\t\t\tconst endIndex = referenceValueSize - referenceOffset;\n\t\t\t\t\tinterpolant.evaluate(referenceTime);\n\t\t\t\t\treferenceValue = AnimationUtils.arraySlice(interpolant.resultBuffer, startIndex, endIndex);\n\t\t\t\t} // Conjugate the quaternion\n\n\n\t\t\t\tif (referenceTrackType === 'quaternion') {\n\t\t\t\t\tconst referenceQuat = new Quaternion().fromArray(referenceValue).normalize().conjugate();\n\t\t\t\t\treferenceQuat.toArray(referenceValue);\n\t\t\t\t} // Subtract the reference value from all of the track values\n\n\n\t\t\t\tconst numTimes = targetTrack.times.length;\n\n\t\t\t\tfor (let j = 0; j < numTimes; ++j) {\n\t\t\t\t\tconst valueStart = j * targetValueSize + targetOffset;\n\n\t\t\t\t\tif (referenceTrackType === 'quaternion') {\n\t\t\t\t\t\t// Multiply the conjugate for quaternion track types\n\t\t\t\t\t\tQuaternion.multiplyQuaternionsFlat(targetTrack.values, valueStart, referenceValue, 0, targetTrack.values, valueStart);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tconst valueEnd = targetValueSize - targetOffset * 2; // Subtract each value for all other numeric track types\n\n\t\t\t\t\t\tfor (let k = 0; k < valueEnd; ++k) {\n\t\t\t\t\t\t\ttargetTrack.values[valueStart + k] -= referenceValue[k];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\ttargetClip.blendMode = AdditiveAnimationBlendMode;\n\t\t\treturn targetClip;\n\t\t}\n\t};\n\n\t/**\n\t * Abstract base class of interpolants over parametric samples.\n\t *\n\t * The parameter domain is one dimensional, typically the time or a path\n\t * along a curve defined by the data.\n\t *\n\t * The sample values can have any dimensionality and derived classes may\n\t * apply special interpretations to the data.\n\t *\n\t * This class provides the interval seek in a Template Method, deferring\n\t * the actual interpolation to derived classes.\n\t *\n\t * Time complexity is O(1) for linear access crossing at most two points\n\t * and O(log N) for random access, where N is the number of positions.\n\t *\n\t * References:\n\t *\n\t * \t\thttp://www.oodesign.com/template-method-pattern.html\n\t *\n\t */\n\tclass Interpolant {\n\t\tconstructor(parameterPositions, sampleValues, sampleSize, resultBuffer) {\n\t\t\tthis.parameterPositions = parameterPositions;\n\t\t\tthis._cachedIndex = 0;\n\t\t\tthis.resultBuffer = resultBuffer !== undefined ? resultBuffer : new sampleValues.constructor(sampleSize);\n\t\t\tthis.sampleValues = sampleValues;\n\t\t\tthis.valueSize = sampleSize;\n\t\t\tthis.settings = null;\n\t\t\tthis.DefaultSettings_ = {};\n\t\t}\n\n\t\tevaluate(t) {\n\t\t\tconst pp = this.parameterPositions;\n\t\t\tlet i1 = this._cachedIndex,\n\t\t\t\t\tt1 = pp[i1],\n\t\t\t\t\tt0 = pp[i1 - 1];\n\n\t\t\tvalidate_interval: {\n\t\t\t\tseek: {\n\t\t\t\t\tlet right;\n\n\t\t\t\t\tlinear_scan: {\n\t\t\t\t\t\t//- See http://jsperf.com/comparison-to-undefined/3\n\t\t\t\t\t\t//- slower code:\n\t\t\t\t\t\t//-\n\t\t\t\t\t\t//- \t\t\t\tif ( t >= t1 || t1 === undefined ) {\n\t\t\t\t\t\tforward_scan: if (!(t < t1)) {\n\t\t\t\t\t\t\tfor (let giveUpAt = i1 + 2;;) {\n\t\t\t\t\t\t\t\tif (t1 === undefined) {\n\t\t\t\t\t\t\t\t\tif (t < t0) break forward_scan; // after end\n\n\t\t\t\t\t\t\t\t\ti1 = pp.length;\n\t\t\t\t\t\t\t\t\tthis._cachedIndex = i1;\n\t\t\t\t\t\t\t\t\treturn this.afterEnd_(i1 - 1, t, t0);\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tif (i1 === giveUpAt) break; // this loop\n\n\t\t\t\t\t\t\t\tt0 = t1;\n\t\t\t\t\t\t\t\tt1 = pp[++i1];\n\n\t\t\t\t\t\t\t\tif (t < t1) {\n\t\t\t\t\t\t\t\t\t// we have arrived at the sought interval\n\t\t\t\t\t\t\t\t\tbreak seek;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} // prepare binary search on the right side of the index\n\n\n\t\t\t\t\t\t\tright = pp.length;\n\t\t\t\t\t\t\tbreak linear_scan;\n\t\t\t\t\t\t} //- slower code:\n\t\t\t\t\t\t//-\t\t\t\t\tif ( t < t0 || t0 === undefined ) {\n\n\n\t\t\t\t\t\tif (!(t >= t0)) {\n\t\t\t\t\t\t\t// looping?\n\t\t\t\t\t\t\tconst t1global = pp[1];\n\n\t\t\t\t\t\t\tif (t < t1global) {\n\t\t\t\t\t\t\t\ti1 = 2; // + 1, using the scan for the details\n\n\t\t\t\t\t\t\t\tt0 = t1global;\n\t\t\t\t\t\t\t} // linear reverse scan\n\n\n\t\t\t\t\t\t\tfor (let giveUpAt = i1 - 2;;) {\n\t\t\t\t\t\t\t\tif (t0 === undefined) {\n\t\t\t\t\t\t\t\t\t// before start\n\t\t\t\t\t\t\t\t\tthis._cachedIndex = 0;\n\t\t\t\t\t\t\t\t\treturn this.beforeStart_(0, t, t1);\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tif (i1 === giveUpAt) break; // this loop\n\n\t\t\t\t\t\t\t\tt1 = t0;\n\t\t\t\t\t\t\t\tt0 = pp[--i1 - 1];\n\n\t\t\t\t\t\t\t\tif (t >= t0) {\n\t\t\t\t\t\t\t\t\t// we have arrived at the sought interval\n\t\t\t\t\t\t\t\t\tbreak seek;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} // prepare binary search on the left side of the index\n\n\n\t\t\t\t\t\t\tright = i1;\n\t\t\t\t\t\t\ti1 = 0;\n\t\t\t\t\t\t\tbreak linear_scan;\n\t\t\t\t\t\t} // the interval is valid\n\n\n\t\t\t\t\t\tbreak validate_interval;\n\t\t\t\t\t} // linear scan\n\t\t\t\t\t// binary search\n\n\n\t\t\t\t\twhile (i1 < right) {\n\t\t\t\t\t\tconst mid = i1 + right >>> 1;\n\n\t\t\t\t\t\tif (t < pp[mid]) {\n\t\t\t\t\t\t\tright = mid;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\ti1 = mid + 1;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tt1 = pp[i1];\n\t\t\t\t\tt0 = pp[i1 - 1]; // check boundary cases, again\n\n\t\t\t\t\tif (t0 === undefined) {\n\t\t\t\t\t\tthis._cachedIndex = 0;\n\t\t\t\t\t\treturn this.beforeStart_(0, t, t1);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (t1 === undefined) {\n\t\t\t\t\t\ti1 = pp.length;\n\t\t\t\t\t\tthis._cachedIndex = i1;\n\t\t\t\t\t\treturn this.afterEnd_(i1 - 1, t0, t);\n\t\t\t\t\t}\n\t\t\t\t} // seek\n\n\n\t\t\t\tthis._cachedIndex = i1;\n\t\t\t\tthis.intervalChanged_(i1, t0, t1);\n\t\t\t} // validate_interval\n\n\n\t\t\treturn this.interpolate_(i1, t0, t, t1);\n\t\t}\n\n\t\tgetSettings_() {\n\t\t\treturn this.settings || this.DefaultSettings_;\n\t\t}\n\n\t\tcopySampleValue_(index) {\n\t\t\t// copies a sample value to the result buffer\n\t\t\tconst result = this.resultBuffer,\n\t\t\t\t\t\tvalues = this.sampleValues,\n\t\t\t\t\t\tstride = this.valueSize,\n\t\t\t\t\t\toffset = index * stride;\n\n\t\t\tfor (let i = 0; i !== stride; ++i) {\n\t\t\t\tresult[i] = values[offset + i];\n\t\t\t}\n\n\t\t\treturn result;\n\t\t} // Template methods for derived classes:\n\n\n\t\tinterpolate_() {\n\t\t\tthrow new Error('call to abstract method'); // implementations shall return this.resultBuffer\n\t\t}\n\n\t\tintervalChanged_() {// empty\n\t\t}\n\n\t} // ALIAS DEFINITIONS\n\n\n\tInterpolant.prototype.beforeStart_ = Interpolant.prototype.copySampleValue_;\n\tInterpolant.prototype.afterEnd_ = Interpolant.prototype.copySampleValue_;\n\n\t/**\n\t * Fast and simple cubic spline interpolant.\n\t *\n\t * It was derived from a Hermitian construction setting the first derivative\n\t * at each sample position to the linear slope between neighboring positions\n\t * over their parameter interval.\n\t */\n\n\tclass CubicInterpolant extends Interpolant {\n\t\tconstructor(parameterPositions, sampleValues, sampleSize, resultBuffer) {\n\t\t\tsuper(parameterPositions, sampleValues, sampleSize, resultBuffer);\n\t\t\tthis._weightPrev = -0;\n\t\t\tthis._offsetPrev = -0;\n\t\t\tthis._weightNext = -0;\n\t\t\tthis._offsetNext = -0;\n\t\t\tthis.DefaultSettings_ = {\n\t\t\t\tendingStart: ZeroCurvatureEnding,\n\t\t\t\tendingEnd: ZeroCurvatureEnding\n\t\t\t};\n\t\t}\n\n\t\tintervalChanged_(i1, t0, t1) {\n\t\t\tconst pp = this.parameterPositions;\n\t\t\tlet iPrev = i1 - 2,\n\t\t\t\t\tiNext = i1 + 1,\n\t\t\t\t\ttPrev = pp[iPrev],\n\t\t\t\t\ttNext = pp[iNext];\n\n\t\t\tif (tPrev === undefined) {\n\t\t\t\tswitch (this.getSettings_().endingStart) {\n\t\t\t\t\tcase ZeroSlopeEnding:\n\t\t\t\t\t\t// f'(t0) = 0\n\t\t\t\t\t\tiPrev = i1;\n\t\t\t\t\t\ttPrev = 2 * t0 - t1;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase WrapAroundEnding:\n\t\t\t\t\t\t// use the other end of the curve\n\t\t\t\t\t\tiPrev = pp.length - 2;\n\t\t\t\t\t\ttPrev = t0 + pp[iPrev] - pp[iPrev + 1];\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\t// ZeroCurvatureEnding\n\t\t\t\t\t\t// f''(t0) = 0 a.k.a. Natural Spline\n\t\t\t\t\t\tiPrev = i1;\n\t\t\t\t\t\ttPrev = t1;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (tNext === undefined) {\n\t\t\t\tswitch (this.getSettings_().endingEnd) {\n\t\t\t\t\tcase ZeroSlopeEnding:\n\t\t\t\t\t\t// f'(tN) = 0\n\t\t\t\t\t\tiNext = i1;\n\t\t\t\t\t\ttNext = 2 * t1 - t0;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase WrapAroundEnding:\n\t\t\t\t\t\t// use the other end of the curve\n\t\t\t\t\t\tiNext = 1;\n\t\t\t\t\t\ttNext = t1 + pp[1] - pp[0];\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\t// ZeroCurvatureEnding\n\t\t\t\t\t\t// f''(tN) = 0, a.k.a. Natural Spline\n\t\t\t\t\t\tiNext = i1 - 1;\n\t\t\t\t\t\ttNext = t0;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst halfDt = (t1 - t0) * 0.5,\n\t\t\t\t\t\tstride = this.valueSize;\n\t\t\tthis._weightPrev = halfDt / (t0 - tPrev);\n\t\t\tthis._weightNext = halfDt / (tNext - t1);\n\t\t\tthis._offsetPrev = iPrev * stride;\n\t\t\tthis._offsetNext = iNext * stride;\n\t\t}\n\n\t\tinterpolate_(i1, t0, t, t1) {\n\t\t\tconst result = this.resultBuffer,\n\t\t\t\t\t\tvalues = this.sampleValues,\n\t\t\t\t\t\tstride = this.valueSize,\n\t\t\t\t\t\to1 = i1 * stride,\n\t\t\t\t\t\to0 = o1 - stride,\n\t\t\t\t\t\toP = this._offsetPrev,\n\t\t\t\t\t\toN = this._offsetNext,\n\t\t\t\t\t\twP = this._weightPrev,\n\t\t\t\t\t\twN = this._weightNext,\n\t\t\t\t\t\tp = (t - t0) / (t1 - t0),\n\t\t\t\t\t\tpp = p * p,\n\t\t\t\t\t\tppp = pp * p; // evaluate polynomials\n\n\t\t\tconst sP = -wP * ppp + 2 * wP * pp - wP * p;\n\t\t\tconst s0 = (1 + wP) * ppp + (-1.5 - 2 * wP) * pp + (-0.5 + wP) * p + 1;\n\t\t\tconst s1 = (-1 - wN) * ppp + (1.5 + wN) * pp + 0.5 * p;\n\t\t\tconst sN = wN * ppp - wN * pp; // combine data linearly\n\n\t\t\tfor (let i = 0; i !== stride; ++i) {\n\t\t\t\tresult[i] = sP * values[oP + i] + s0 * values[o0 + i] + s1 * values[o1 + i] + sN * values[oN + i];\n\t\t\t}\n\n\t\t\treturn result;\n\t\t}\n\n\t}\n\n\tclass LinearInterpolant extends Interpolant {\n\t\tconstructor(parameterPositions, sampleValues, sampleSize, resultBuffer) {\n\t\t\tsuper(parameterPositions, sampleValues, sampleSize, resultBuffer);\n\t\t}\n\n\t\tinterpolate_(i1, t0, t, t1) {\n\t\t\tconst result = this.resultBuffer,\n\t\t\t\t\t\tvalues = this.sampleValues,\n\t\t\t\t\t\tstride = this.valueSize,\n\t\t\t\t\t\toffset1 = i1 * stride,\n\t\t\t\t\t\toffset0 = offset1 - stride,\n\t\t\t\t\t\tweight1 = (t - t0) / (t1 - t0),\n\t\t\t\t\t\tweight0 = 1 - weight1;\n\n\t\t\tfor (let i = 0; i !== stride; ++i) {\n\t\t\t\tresult[i] = values[offset0 + i] * weight0 + values[offset1 + i] * weight1;\n\t\t\t}\n\n\t\t\treturn result;\n\t\t}\n\n\t}\n\n\t/**\n\t *\n\t * Interpolant that evaluates to the sample value at the position preceeding\n\t * the parameter.\n\t */\n\n\tclass DiscreteInterpolant extends Interpolant {\n\t\tconstructor(parameterPositions, sampleValues, sampleSize, resultBuffer) {\n\t\t\tsuper(parameterPositions, sampleValues, sampleSize, resultBuffer);\n\t\t}\n\n\t\tinterpolate_(i1\n\t\t/*, t0, t, t1 */\n\t\t) {\n\t\t\treturn this.copySampleValue_(i1 - 1);\n\t\t}\n\n\t}\n\n\tclass KeyframeTrack {\n\t\tconstructor(name, times, values, interpolation) {\n\t\t\tif (name === undefined) throw new Error('THREE.KeyframeTrack: track name is undefined');\n\t\t\tif (times === undefined || times.length === 0) throw new Error('THREE.KeyframeTrack: no keyframes in track named ' + name);\n\t\t\tthis.name = name;\n\t\t\tthis.times = AnimationUtils.convertArray(times, this.TimeBufferType);\n\t\t\tthis.values = AnimationUtils.convertArray(values, this.ValueBufferType);\n\t\t\tthis.setInterpolation(interpolation || this.DefaultInterpolation);\n\t\t} // Serialization (in static context, because of constructor invocation\n\t\t// and automatic invocation of .toJSON):\n\n\n\t\tstatic toJSON(track) {\n\t\t\tconst trackType = track.constructor;\n\t\t\tlet json; // derived classes can define a static toJSON method\n\n\t\t\tif (trackType.toJSON !== this.toJSON) {\n\t\t\t\tjson = trackType.toJSON(track);\n\t\t\t} else {\n\t\t\t\t// by default, we assume the data can be serialized as-is\n\t\t\t\tjson = {\n\t\t\t\t\t'name': track.name,\n\t\t\t\t\t'times': AnimationUtils.convertArray(track.times, Array),\n\t\t\t\t\t'values': AnimationUtils.convertArray(track.values, Array)\n\t\t\t\t};\n\t\t\t\tconst interpolation = track.getInterpolation();\n\n\t\t\t\tif (interpolation !== track.DefaultInterpolation) {\n\t\t\t\t\tjson.interpolation = interpolation;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tjson.type = track.ValueTypeName; // mandatory\n\n\t\t\treturn json;\n\t\t}\n\n\t\tInterpolantFactoryMethodDiscrete(result) {\n\t\t\treturn new DiscreteInterpolant(this.times, this.values, this.getValueSize(), result);\n\t\t}\n\n\t\tInterpolantFactoryMethodLinear(result) {\n\t\t\treturn new LinearInterpolant(this.times, this.values, this.getValueSize(), result);\n\t\t}\n\n\t\tInterpolantFactoryMethodSmooth(result) {\n\t\t\treturn new CubicInterpolant(this.times, this.values, this.getValueSize(), result);\n\t\t}\n\n\t\tsetInterpolation(interpolation) {\n\t\t\tlet factoryMethod;\n\n\t\t\tswitch (interpolation) {\n\t\t\t\tcase InterpolateDiscrete:\n\t\t\t\t\tfactoryMethod = this.InterpolantFactoryMethodDiscrete;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase InterpolateLinear:\n\t\t\t\t\tfactoryMethod = this.InterpolantFactoryMethodLinear;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase InterpolateSmooth:\n\t\t\t\t\tfactoryMethod = this.InterpolantFactoryMethodSmooth;\n\t\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tif (factoryMethod === undefined) {\n\t\t\t\tconst message = 'unsupported interpolation for ' + this.ValueTypeName + ' keyframe track named ' + this.name;\n\n\t\t\t\tif (this.createInterpolant === undefined) {\n\t\t\t\t\t// fall back to default, unless the default itself is messed up\n\t\t\t\t\tif (interpolation !== this.DefaultInterpolation) {\n\t\t\t\t\t\tthis.setInterpolation(this.DefaultInterpolation);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthrow new Error(message); // fatal, in this case\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tconsole.warn('THREE.KeyframeTrack:', message);\n\t\t\t\treturn this;\n\t\t\t}\n\n\t\t\tthis.createInterpolant = factoryMethod;\n\t\t\treturn this;\n\t\t}\n\n\t\tgetInterpolation() {\n\t\t\tswitch (this.createInterpolant) {\n\t\t\t\tcase this.InterpolantFactoryMethodDiscrete:\n\t\t\t\t\treturn InterpolateDiscrete;\n\n\t\t\t\tcase this.InterpolantFactoryMethodLinear:\n\t\t\t\t\treturn InterpolateLinear;\n\n\t\t\t\tcase this.InterpolantFactoryMethodSmooth:\n\t\t\t\t\treturn InterpolateSmooth;\n\t\t\t}\n\t\t}\n\n\t\tgetValueSize() {\n\t\t\treturn this.values.length / this.times.length;\n\t\t} // move all keyframes either forwards or backwards in time\n\n\n\t\tshift(timeOffset) {\n\t\t\tif (timeOffset !== 0.0) {\n\t\t\t\tconst times = this.times;\n\n\t\t\t\tfor (let i = 0, n = times.length; i !== n; ++i) {\n\t\t\t\t\ttimes[i] += timeOffset;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn this;\n\t\t} // scale all keyframe times by a factor (useful for frame <-> seconds conversions)\n\n\n\t\tscale(timeScale) {\n\t\t\tif (timeScale !== 1.0) {\n\t\t\t\tconst times = this.times;\n\n\t\t\t\tfor (let i = 0, n = times.length; i !== n; ++i) {\n\t\t\t\t\ttimes[i] *= timeScale;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn this;\n\t\t} // removes keyframes before and after animation without changing any values within the range [startTime, endTime].\n\t\t// IMPORTANT: We do not shift around keys to the start of the track time, because for interpolated keys this will change their values\n\n\n\t\ttrim(startTime, endTime) {\n\t\t\tconst times = this.times,\n\t\t\t\t\t\tnKeys = times.length;\n\t\t\tlet from = 0,\n\t\t\t\t\tto = nKeys - 1;\n\n\t\t\twhile (from !== nKeys && times[from] < startTime) {\n\t\t\t\t++from;\n\t\t\t}\n\n\t\t\twhile (to !== -1 && times[to] > endTime) {\n\t\t\t\t--to;\n\t\t\t}\n\n\t\t\t++to; // inclusive -> exclusive bound\n\n\t\t\tif (from !== 0 || to !== nKeys) {\n\t\t\t\t// empty tracks are forbidden, so keep at least one keyframe\n\t\t\t\tif (from >= to) {\n\t\t\t\t\tto = Math.max(to, 1);\n\t\t\t\t\tfrom = to - 1;\n\t\t\t\t}\n\n\t\t\t\tconst stride = this.getValueSize();\n\t\t\t\tthis.times = AnimationUtils.arraySlice(times, from, to);\n\t\t\t\tthis.values = AnimationUtils.arraySlice(this.values, from * stride, to * stride);\n\t\t\t}\n\n\t\t\treturn this;\n\t\t} // ensure we do not get a GarbageInGarbageOut situation, make sure tracks are at least minimally viable\n\n\n\t\tvalidate() {\n\t\t\tlet valid = true;\n\t\t\tconst valueSize = this.getValueSize();\n\n\t\t\tif (valueSize - Math.floor(valueSize) !== 0) {\n\t\t\t\tconsole.error('THREE.KeyframeTrack: Invalid value size in track.', this);\n\t\t\t\tvalid = false;\n\t\t\t}\n\n\t\t\tconst times = this.times,\n\t\t\t\t\t\tvalues = this.values,\n\t\t\t\t\t\tnKeys = times.length;\n\n\t\t\tif (nKeys === 0) {\n\t\t\t\tconsole.error('THREE.KeyframeTrack: Track is empty.', this);\n\t\t\t\tvalid = false;\n\t\t\t}\n\n\t\t\tlet prevTime = null;\n\n\t\t\tfor (let i = 0; i !== nKeys; i++) {\n\t\t\t\tconst currTime = times[i];\n\n\t\t\t\tif (typeof currTime === 'number' && isNaN(currTime)) {\n\t\t\t\t\tconsole.error('THREE.KeyframeTrack: Time is not a valid number.', this, i, currTime);\n\t\t\t\t\tvalid = false;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tif (prevTime !== null && prevTime > currTime) {\n\t\t\t\t\tconsole.error('THREE.KeyframeTrack: Out of order keys.', this, i, currTime, prevTime);\n\t\t\t\t\tvalid = false;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tprevTime = currTime;\n\t\t\t}\n\n\t\t\tif (values !== undefined) {\n\t\t\t\tif (AnimationUtils.isTypedArray(values)) {\n\t\t\t\t\tfor (let i = 0, n = values.length; i !== n; ++i) {\n\t\t\t\t\t\tconst value = values[i];\n\n\t\t\t\t\t\tif (isNaN(value)) {\n\t\t\t\t\t\t\tconsole.error('THREE.KeyframeTrack: Value is not a valid number.', this, i, value);\n\t\t\t\t\t\t\tvalid = false;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn valid;\n\t\t} // removes equivalent sequential keys as common in morph target sequences\n\t\t// (0,0,0,0,1,1,1,0,0,0,0,0,0,0) --> (0,0,1,1,0,0)\n\n\n\t\toptimize() {\n\t\t\t// times or values may be shared with other tracks, so overwriting is unsafe\n\t\t\tconst times = AnimationUtils.arraySlice(this.times),\n\t\t\t\t\t\tvalues = AnimationUtils.arraySlice(this.values),\n\t\t\t\t\t\tstride = this.getValueSize(),\n\t\t\t\t\t\tsmoothInterpolation = this.getInterpolation() === InterpolateSmooth,\n\t\t\t\t\t\tlastIndex = times.length - 1;\n\t\t\tlet writeIndex = 1;\n\n\t\t\tfor (let i = 1; i < lastIndex; ++i) {\n\t\t\t\tlet keep = false;\n\t\t\t\tconst time = times[i];\n\t\t\t\tconst timeNext = times[i + 1]; // remove adjacent keyframes scheduled at the same time\n\n\t\t\t\tif (time !== timeNext && (i !== 1 || time !== times[0])) {\n\t\t\t\t\tif (!smoothInterpolation) {\n\t\t\t\t\t\t// remove unnecessary keyframes same as their neighbors\n\t\t\t\t\t\tconst offset = i * stride,\n\t\t\t\t\t\t\t\t\toffsetP = offset - stride,\n\t\t\t\t\t\t\t\t\toffsetN = offset + stride;\n\n\t\t\t\t\t\tfor (let j = 0; j !== stride; ++j) {\n\t\t\t\t\t\t\tconst value = values[offset + j];\n\n\t\t\t\t\t\t\tif (value !== values[offsetP + j] || value !== values[offsetN + j]) {\n\t\t\t\t\t\t\t\tkeep = true;\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tkeep = true;\n\t\t\t\t\t}\n\t\t\t\t} // in-place compaction\n\n\n\t\t\t\tif (keep) {\n\t\t\t\t\tif (i !== writeIndex) {\n\t\t\t\t\t\ttimes[writeIndex] = times[i];\n\t\t\t\t\t\tconst readOffset = i * stride,\n\t\t\t\t\t\t\t\t\twriteOffset = writeIndex * stride;\n\n\t\t\t\t\t\tfor (let j = 0; j !== stride; ++j) {\n\t\t\t\t\t\t\tvalues[writeOffset + j] = values[readOffset + j];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t++writeIndex;\n\t\t\t\t}\n\t\t\t} // flush last keyframe (compaction looks ahead)\n\n\n\t\t\tif (lastIndex > 0) {\n\t\t\t\ttimes[writeIndex] = times[lastIndex];\n\n\t\t\t\tfor (let readOffset = lastIndex * stride, writeOffset = writeIndex * stride, j = 0; j !== stride; ++j) {\n\t\t\t\t\tvalues[writeOffset + j] = values[readOffset + j];\n\t\t\t\t}\n\n\t\t\t\t++writeIndex;\n\t\t\t}\n\n\t\t\tif (writeIndex !== times.length) {\n\t\t\t\tthis.times = AnimationUtils.arraySlice(times, 0, writeIndex);\n\t\t\t\tthis.values = AnimationUtils.arraySlice(values, 0, writeIndex * stride);\n\t\t\t} else {\n\t\t\t\tthis.times = times;\n\t\t\t\tthis.values = values;\n\t\t\t}\n\n\t\t\treturn this;\n\t\t}\n\n\t\tclone() {\n\t\t\tconst times = AnimationUtils.arraySlice(this.times, 0);\n\t\t\tconst values = AnimationUtils.arraySlice(this.values, 0);\n\t\t\tconst TypedKeyframeTrack = this.constructor;\n\t\t\tconst track = new TypedKeyframeTrack(this.name, times, values); // Interpolant argument to constructor is not saved, so copy the factory method directly.\n\n\t\t\ttrack.createInterpolant = this.createInterpolant;\n\t\t\treturn track;\n\t\t}\n\n\t}\n\n\tKeyframeTrack.prototype.TimeBufferType = Float32Array;\n\tKeyframeTrack.prototype.ValueBufferType = Float32Array;\n\tKeyframeTrack.prototype.DefaultInterpolation = InterpolateLinear;\n\n\t/**\n\t * A Track of Boolean keyframe values.\n\t */\n\n\tclass BooleanKeyframeTrack extends KeyframeTrack {}\n\n\tBooleanKeyframeTrack.prototype.ValueTypeName = 'bool';\n\tBooleanKeyframeTrack.prototype.ValueBufferType = Array;\n\tBooleanKeyframeTrack.prototype.DefaultInterpolation = InterpolateDiscrete;\n\tBooleanKeyframeTrack.prototype.InterpolantFactoryMethodLinear = undefined;\n\tBooleanKeyframeTrack.prototype.InterpolantFactoryMethodSmooth = undefined; // Note: Actually this track could have a optimized / compressed\n\n\t/**\n\t * A Track of keyframe values that represent color.\n\t */\n\n\tclass ColorKeyframeTrack extends KeyframeTrack {}\n\n\tColorKeyframeTrack.prototype.ValueTypeName = 'color'; // ValueBufferType is inherited\n\n\t/**\n\t * A Track of numeric keyframe values.\n\t */\n\n\tclass NumberKeyframeTrack extends KeyframeTrack {}\n\n\tNumberKeyframeTrack.prototype.ValueTypeName = 'number'; // ValueBufferType is inherited\n\n\t/**\n\t * Spherical linear unit quaternion interpolant.\n\t */\n\n\tclass QuaternionLinearInterpolant extends Interpolant {\n\t\tconstructor(parameterPositions, sampleValues, sampleSize, resultBuffer) {\n\t\t\tsuper(parameterPositions, sampleValues, sampleSize, resultBuffer);\n\t\t}\n\n\t\tinterpolate_(i1, t0, t, t1) {\n\t\t\tconst result = this.resultBuffer,\n\t\t\t\t\t\tvalues = this.sampleValues,\n\t\t\t\t\t\tstride = this.valueSize,\n\t\t\t\t\t\talpha = (t - t0) / (t1 - t0);\n\t\t\tlet offset = i1 * stride;\n\n\t\t\tfor (let end = offset + stride; offset !== end; offset += 4) {\n\t\t\t\tQuaternion.slerpFlat(result, 0, values, offset - stride, values, offset, alpha);\n\t\t\t}\n\n\t\t\treturn result;\n\t\t}\n\n\t}\n\n\t/**\n\t * A Track of quaternion keyframe values.\n\t */\n\n\tclass QuaternionKeyframeTrack extends KeyframeTrack {\n\t\tInterpolantFactoryMethodLinear(result) {\n\t\t\treturn new QuaternionLinearInterpolant(this.times, this.values, this.getValueSize(), result);\n\t\t}\n\n\t}\n\n\tQuaternionKeyframeTrack.prototype.ValueTypeName = 'quaternion'; // ValueBufferType is inherited\n\n\tQuaternionKeyframeTrack.prototype.DefaultInterpolation = InterpolateLinear;\n\tQuaternionKeyframeTrack.prototype.InterpolantFactoryMethodSmooth = undefined;\n\n\t/**\n\t * A Track that interpolates Strings\n\t */\n\n\tclass StringKeyframeTrack extends KeyframeTrack {}\n\n\tStringKeyframeTrack.prototype.ValueTypeName = 'string';\n\tStringKeyframeTrack.prototype.ValueBufferType = Array;\n\tStringKeyframeTrack.prototype.DefaultInterpolation = InterpolateDiscrete;\n\tStringKeyframeTrack.prototype.InterpolantFactoryMethodLinear = undefined;\n\tStringKeyframeTrack.prototype.InterpolantFactoryMethodSmooth = undefined;\n\n\t/**\n\t * A Track of vectored keyframe values.\n\t */\n\n\tclass VectorKeyframeTrack extends KeyframeTrack {}\n\n\tVectorKeyframeTrack.prototype.ValueTypeName = 'vector'; // ValueBufferType is inherited\n\n\tclass AnimationClip {\n\t\tconstructor(name, duration = -1, tracks, blendMode = NormalAnimationBlendMode) {\n\t\t\tthis.name = name;\n\t\t\tthis.tracks = tracks;\n\t\t\tthis.duration = duration;\n\t\t\tthis.blendMode = blendMode;\n\t\t\tthis.uuid = generateUUID(); // this means it should figure out its duration by scanning the tracks\n\n\t\t\tif (this.duration < 0) {\n\t\t\t\tthis.resetDuration();\n\t\t\t}\n\t\t}\n\n\t\tstatic parse(json) {\n\t\t\tconst tracks = [],\n\t\t\t\t\t\tjsonTracks = json.tracks,\n\t\t\t\t\t\tframeTime = 1.0 / (json.fps || 1.0);\n\n\t\t\tfor (let i = 0, n = jsonTracks.length; i !== n; ++i) {\n\t\t\t\ttracks.push(parseKeyframeTrack(jsonTracks[i]).scale(frameTime));\n\t\t\t}\n\n\t\t\tconst clip = new this(json.name, json.duration, tracks, json.blendMode);\n\t\t\tclip.uuid = json.uuid;\n\t\t\treturn clip;\n\t\t}\n\n\t\tstatic toJSON(clip) {\n\t\t\tconst tracks = [],\n\t\t\t\t\t\tclipTracks = clip.tracks;\n\t\t\tconst json = {\n\t\t\t\t'name': clip.name,\n\t\t\t\t'duration': clip.duration,\n\t\t\t\t'tracks': tracks,\n\t\t\t\t'uuid': clip.uuid,\n\t\t\t\t'blendMode': clip.blendMode\n\t\t\t};\n\n\t\t\tfor (let i = 0, n = clipTracks.length; i !== n; ++i) {\n\t\t\t\ttracks.push(KeyframeTrack.toJSON(clipTracks[i]));\n\t\t\t}\n\n\t\t\treturn json;\n\t\t}\n\n\t\tstatic CreateFromMorphTargetSequence(name, morphTargetSequence, fps, noLoop) {\n\t\t\tconst numMorphTargets = morphTargetSequence.length;\n\t\t\tconst tracks = [];\n\n\t\t\tfor (let i = 0; i < numMorphTargets; i++) {\n\t\t\t\tlet times = [];\n\t\t\t\tlet values = [];\n\t\t\t\ttimes.push((i + numMorphTargets - 1) % numMorphTargets, i, (i + 1) % numMorphTargets);\n\t\t\t\tvalues.push(0, 1, 0);\n\t\t\t\tconst order = AnimationUtils.getKeyframeOrder(times);\n\t\t\t\ttimes = AnimationUtils.sortedArray(times, 1, order);\n\t\t\t\tvalues = AnimationUtils.sortedArray(values, 1, order); // if there is a key at the first frame, duplicate it as the\n\t\t\t\t// last frame as well for perfect loop.\n\n\t\t\t\tif (!noLoop && times[0] === 0) {\n\t\t\t\t\ttimes.push(numMorphTargets);\n\t\t\t\t\tvalues.push(values[0]);\n\t\t\t\t}\n\n\t\t\t\ttracks.push(new NumberKeyframeTrack('.morphTargetInfluences[' + morphTargetSequence[i].name + ']', times, values).scale(1.0 / fps));\n\t\t\t}\n\n\t\t\treturn new this(name, -1, tracks);\n\t\t}\n\n\t\tstatic findByName(objectOrClipArray, name) {\n\t\t\tlet clipArray = objectOrClipArray;\n\n\t\t\tif (!Array.isArray(objectOrClipArray)) {\n\t\t\t\tconst o = objectOrClipArray;\n\t\t\t\tclipArray = o.geometry && o.geometry.animations || o.animations;\n\t\t\t}\n\n\t\t\tfor (let i = 0; i < clipArray.length; i++) {\n\t\t\t\tif (clipArray[i].name === name) {\n\t\t\t\t\treturn clipArray[i];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn null;\n\t\t}\n\n\t\tstatic CreateClipsFromMorphTargetSequences(morphTargets, fps, noLoop) {\n\t\t\tconst animationToMorphTargets = {}; // tested with https://regex101.com/ on trick sequences\n\t\t\t// such flamingo_flyA_003, flamingo_run1_003, crdeath0059\n\n\t\t\tconst pattern = /^([\\w-]*?)([\\d]+)$/; // sort morph target names into animation groups based\n\t\t\t// patterns like Walk_001, Walk_002, Run_001, Run_002\n\n\t\t\tfor (let i = 0, il = morphTargets.length; i < il; i++) {\n\t\t\t\tconst morphTarget = morphTargets[i];\n\t\t\t\tconst parts = morphTarget.name.match(pattern);\n\n\t\t\t\tif (parts && parts.length > 1) {\n\t\t\t\t\tconst name = parts[1];\n\t\t\t\t\tlet animationMorphTargets = animationToMorphTargets[name];\n\n\t\t\t\t\tif (!animationMorphTargets) {\n\t\t\t\t\t\tanimationToMorphTargets[name] = animationMorphTargets = [];\n\t\t\t\t\t}\n\n\t\t\t\t\tanimationMorphTargets.push(morphTarget);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst clips = [];\n\n\t\t\tfor (const name in animationToMorphTargets) {\n\t\t\t\tclips.push(this.CreateFromMorphTargetSequence(name, animationToMorphTargets[name], fps, noLoop));\n\t\t\t}\n\n\t\t\treturn clips;\n\t\t} // parse the animation.hierarchy format\n\n\n\t\tstatic parseAnimation(animation, bones) {\n\t\t\tif (!animation) {\n\t\t\t\tconsole.error('THREE.AnimationClip: No animation in JSONLoader data.');\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tconst addNonemptyTrack = function (trackType, trackName, animationKeys, propertyName, destTracks) {\n\t\t\t\t// only return track if there are actually keys.\n\t\t\t\tif (animationKeys.length !== 0) {\n\t\t\t\t\tconst times = [];\n\t\t\t\t\tconst values = [];\n\t\t\t\t\tAnimationUtils.flattenJSON(animationKeys, times, values, propertyName); // empty keys are filtered out, so check again\n\n\t\t\t\t\tif (times.length !== 0) {\n\t\t\t\t\t\tdestTracks.push(new trackType(trackName, times, values));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tconst tracks = [];\n\t\t\tconst clipName = animation.name || 'default';\n\t\t\tconst fps = animation.fps || 30;\n\t\t\tconst blendMode = animation.blendMode; // automatic length determination in AnimationClip.\n\n\t\t\tlet duration = animation.length || -1;\n\t\t\tconst hierarchyTracks = animation.hierarchy || [];\n\n\t\t\tfor (let h = 0; h < hierarchyTracks.length; h++) {\n\t\t\t\tconst animationKeys = hierarchyTracks[h].keys; // skip empty tracks\n\n\t\t\t\tif (!animationKeys || animationKeys.length === 0) continue; // process morph targets\n\n\t\t\t\tif (animationKeys[0].morphTargets) {\n\t\t\t\t\t// figure out all morph targets used in this track\n\t\t\t\t\tconst morphTargetNames = {};\n\t\t\t\t\tlet k;\n\n\t\t\t\t\tfor (k = 0; k < animationKeys.length; k++) {\n\t\t\t\t\t\tif (animationKeys[k].morphTargets) {\n\t\t\t\t\t\t\tfor (let m = 0; m < animationKeys[k].morphTargets.length; m++) {\n\t\t\t\t\t\t\t\tmorphTargetNames[animationKeys[k].morphTargets[m]] = -1;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t} // create a track for each morph target with all zero\n\t\t\t\t\t// morphTargetInfluences except for the keys in which\n\t\t\t\t\t// the morphTarget is named.\n\n\n\t\t\t\t\tfor (const morphTargetName in morphTargetNames) {\n\t\t\t\t\t\tconst times = [];\n\t\t\t\t\t\tconst values = [];\n\n\t\t\t\t\t\tfor (let m = 0; m !== animationKeys[k].morphTargets.length; ++m) {\n\t\t\t\t\t\t\tconst animationKey = animationKeys[k];\n\t\t\t\t\t\t\ttimes.push(animationKey.time);\n\t\t\t\t\t\t\tvalues.push(animationKey.morphTarget === morphTargetName ? 1 : 0);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\ttracks.push(new NumberKeyframeTrack('.morphTargetInfluence[' + morphTargetName + ']', times, values));\n\t\t\t\t\t}\n\n\t\t\t\t\tduration = morphTargetNames.length * (fps || 1.0);\n\t\t\t\t} else {\n\t\t\t\t\t// ...assume skeletal animation\n\t\t\t\t\tconst boneName = '.bones[' + bones[h].name + ']';\n\t\t\t\t\taddNonemptyTrack(VectorKeyframeTrack, boneName + '.position', animationKeys, 'pos', tracks);\n\t\t\t\t\taddNonemptyTrack(QuaternionKeyframeTrack, boneName + '.quaternion', animationKeys, 'rot', tracks);\n\t\t\t\t\taddNonemptyTrack(VectorKeyframeTrack, boneName + '.scale', animationKeys, 'scl', tracks);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (tracks.length === 0) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tconst clip = new this(clipName, duration, tracks, blendMode);\n\t\t\treturn clip;\n\t\t}\n\n\t\tresetDuration() {\n\t\t\tconst tracks = this.tracks;\n\t\t\tlet duration = 0;\n\n\t\t\tfor (let i = 0, n = tracks.length; i !== n; ++i) {\n\t\t\t\tconst track = this.tracks[i];\n\t\t\t\tduration = Math.max(duration, track.times[track.times.length - 1]);\n\t\t\t}\n\n\t\t\tthis.duration = duration;\n\t\t\treturn this;\n\t\t}\n\n\t\ttrim() {\n\t\t\tfor (let i = 0; i < this.tracks.length; i++) {\n\t\t\t\tthis.tracks[i].trim(0, this.duration);\n\t\t\t}\n\n\t\t\treturn this;\n\t\t}\n\n\t\tvalidate() {\n\t\t\tlet valid = true;\n\n\t\t\tfor (let i = 0; i < this.tracks.length; i++) {\n\t\t\t\tvalid = valid && this.tracks[i].validate();\n\t\t\t}\n\n\t\t\treturn valid;\n\t\t}\n\n\t\toptimize() {\n\t\t\tfor (let i = 0; i < this.tracks.length; i++) {\n\t\t\t\tthis.tracks[i].optimize();\n\t\t\t}\n\n\t\t\treturn this;\n\t\t}\n\n\t\tclone() {\n\t\t\tconst tracks = [];\n\n\t\t\tfor (let i = 0; i < this.tracks.length; i++) {\n\t\t\t\ttracks.push(this.tracks[i].clone());\n\t\t\t}\n\n\t\t\treturn new this.constructor(this.name, this.duration, tracks, this.blendMode);\n\t\t}\n\n\t\ttoJSON() {\n\t\t\treturn this.constructor.toJSON(this);\n\t\t}\n\n\t}\n\n\tfunction getTrackTypeForValueTypeName(typeName) {\n\t\tswitch (typeName.toLowerCase()) {\n\t\t\tcase 'scalar':\n\t\t\tcase 'double':\n\t\t\tcase 'float':\n\t\t\tcase 'number':\n\t\t\tcase 'integer':\n\t\t\t\treturn NumberKeyframeTrack;\n\n\t\t\tcase 'vector':\n\t\t\tcase 'vector2':\n\t\t\tcase 'vector3':\n\t\t\tcase 'vector4':\n\t\t\t\treturn VectorKeyframeTrack;\n\n\t\t\tcase 'color':\n\t\t\t\treturn ColorKeyframeTrack;\n\n\t\t\tcase 'quaternion':\n\t\t\t\treturn QuaternionKeyframeTrack;\n\n\t\t\tcase 'bool':\n\t\t\tcase 'boolean':\n\t\t\t\treturn BooleanKeyframeTrack;\n\n\t\t\tcase 'string':\n\t\t\t\treturn StringKeyframeTrack;\n\t\t}\n\n\t\tthrow new Error('THREE.KeyframeTrack: Unsupported typeName: ' + typeName);\n\t}\n\n\tfunction parseKeyframeTrack(json) {\n\t\tif (json.type === undefined) {\n\t\t\tthrow new Error('THREE.KeyframeTrack: track type undefined, can not parse');\n\t\t}\n\n\t\tconst trackType = getTrackTypeForValueTypeName(json.type);\n\n\t\tif (json.times === undefined) {\n\t\t\tconst times = [],\n\t\t\t\t\t\tvalues = [];\n\t\t\tAnimationUtils.flattenJSON(json.keys, times, values, 'value');\n\t\t\tjson.times = times;\n\t\t\tjson.values = values;\n\t\t} // derived classes can define a static parse method\n\n\n\t\tif (trackType.parse !== undefined) {\n\t\t\treturn trackType.parse(json);\n\t\t} else {\n\t\t\t// by default, we assume a constructor compatible with the base\n\t\t\treturn new trackType(json.name, json.times, json.values, json.interpolation);\n\t\t}\n\t}\n\n\tconst Cache = {\n\t\tenabled: false,\n\t\tfiles: {},\n\t\tadd: function (key, file) {\n\t\t\tif (this.enabled === false) return; // console.log( 'THREE.Cache', 'Adding key:', key );\n\n\t\t\tthis.files[key] = file;\n\t\t},\n\t\tget: function (key) {\n\t\t\tif (this.enabled === false) return; // console.log( 'THREE.Cache', 'Checking key:', key );\n\n\t\t\treturn this.files[key];\n\t\t},\n\t\tremove: function (key) {\n\t\t\tdelete this.files[key];\n\t\t},\n\t\tclear: function () {\n\t\t\tthis.files = {};\n\t\t}\n\t};\n\n\tclass LoadingManager {\n\t\tconstructor(onLoad, onProgress, onError) {\n\t\t\tconst scope = this;\n\t\t\tlet isLoading = false;\n\t\t\tlet itemsLoaded = 0;\n\t\t\tlet itemsTotal = 0;\n\t\t\tlet urlModifier = undefined;\n\t\t\tconst handlers = []; // Refer to #5689 for the reason why we don't set .onStart\n\t\t\t// in the constructor\n\n\t\t\tthis.onStart = undefined;\n\t\t\tthis.onLoad = onLoad;\n\t\t\tthis.onProgress = onProgress;\n\t\t\tthis.onError = onError;\n\n\t\t\tthis.itemStart = function (url) {\n\t\t\t\titemsTotal++;\n\n\t\t\t\tif (isLoading === false) {\n\t\t\t\t\tif (scope.onStart !== undefined) {\n\t\t\t\t\t\tscope.onStart(url, itemsLoaded, itemsTotal);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tisLoading = true;\n\t\t\t};\n\n\t\t\tthis.itemEnd = function (url) {\n\t\t\t\titemsLoaded++;\n\n\t\t\t\tif (scope.onProgress !== undefined) {\n\t\t\t\t\tscope.onProgress(url, itemsLoaded, itemsTotal);\n\t\t\t\t}\n\n\t\t\t\tif (itemsLoaded === itemsTotal) {\n\t\t\t\t\tisLoading = false;\n\n\t\t\t\t\tif (scope.onLoad !== undefined) {\n\t\t\t\t\t\tscope.onLoad();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tthis.itemError = function (url) {\n\t\t\t\tif (scope.onError !== undefined) {\n\t\t\t\t\tscope.onError(url);\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tthis.resolveURL = function (url) {\n\t\t\t\tif (urlModifier) {\n\t\t\t\t\treturn urlModifier(url);\n\t\t\t\t}\n\n\t\t\t\treturn url;\n\t\t\t};\n\n\t\t\tthis.setURLModifier = function (transform) {\n\t\t\t\turlModifier = transform;\n\t\t\t\treturn this;\n\t\t\t};\n\n\t\t\tthis.addHandler = function (regex, loader) {\n\t\t\t\thandlers.push(regex, loader);\n\t\t\t\treturn this;\n\t\t\t};\n\n\t\t\tthis.removeHandler = function (regex) {\n\t\t\t\tconst index = handlers.indexOf(regex);\n\n\t\t\t\tif (index !== -1) {\n\t\t\t\t\thandlers.splice(index, 2);\n\t\t\t\t}\n\n\t\t\t\treturn this;\n\t\t\t};\n\n\t\t\tthis.getHandler = function (file) {\n\t\t\t\tfor (let i = 0, l = handlers.length; i < l; i += 2) {\n\t\t\t\t\tconst regex = handlers[i];\n\t\t\t\t\tconst loader = handlers[i + 1];\n\t\t\t\t\tif (regex.global) regex.lastIndex = 0; // see #17920\n\n\t\t\t\t\tif (regex.test(file)) {\n\t\t\t\t\t\treturn loader;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn null;\n\t\t\t};\n\t\t}\n\n\t}\n\n\tconst DefaultLoadingManager = new LoadingManager();\n\n\tclass Loader {\n\t\tconstructor(manager) {\n\t\t\tthis.manager = manager !== undefined ? manager : DefaultLoadingManager;\n\t\t\tthis.crossOrigin = 'anonymous';\n\t\t\tthis.withCredentials = false;\n\t\t\tthis.path = '';\n\t\t\tthis.resourcePath = '';\n\t\t\tthis.requestHeader = {};\n\t\t}\n\n\t\tload() {}\n\n\t\tloadAsync(url, onProgress) {\n\t\t\tconst scope = this;\n\t\t\treturn new Promise(function (resolve, reject) {\n\t\t\t\tscope.load(url, resolve, onProgress, reject);\n\t\t\t});\n\t\t}\n\n\t\tparse() {}\n\n\t\tsetCrossOrigin(crossOrigin) {\n\t\t\tthis.crossOrigin = crossOrigin;\n\t\t\treturn this;\n\t\t}\n\n\t\tsetWithCredentials(value) {\n\t\t\tthis.withCredentials = value;\n\t\t\treturn this;\n\t\t}\n\n\t\tsetPath(path) {\n\t\t\tthis.path = path;\n\t\t\treturn this;\n\t\t}\n\n\t\tsetResourcePath(resourcePath) {\n\t\t\tthis.resourcePath = resourcePath;\n\t\t\treturn this;\n\t\t}\n\n\t\tsetRequestHeader(requestHeader) {\n\t\t\tthis.requestHeader = requestHeader;\n\t\t\treturn this;\n\t\t}\n\n\t}\n\n\tconst loading = {};\n\n\tclass FileLoader extends Loader {\n\t\tconstructor(manager) {\n\t\t\tsuper(manager);\n\t\t}\n\n\t\tload(url, onLoad, onProgress, onError) {\n\t\t\tif (url === undefined) url = '';\n\t\t\tif (this.path !== undefined) url = this.path + url;\n\t\t\turl = this.manager.resolveURL(url);\n\t\t\tconst cached = Cache.get(url);\n\n\t\t\tif (cached !== undefined) {\n\t\t\t\tthis.manager.itemStart(url);\n\t\t\t\tsetTimeout(() => {\n\t\t\t\t\tif (onLoad) onLoad(cached);\n\t\t\t\t\tthis.manager.itemEnd(url);\n\t\t\t\t}, 0);\n\t\t\t\treturn cached;\n\t\t\t} // Check if request is duplicate\n\n\n\t\t\tif (loading[url] !== undefined) {\n\t\t\t\tloading[url].push({\n\t\t\t\t\tonLoad: onLoad,\n\t\t\t\t\tonProgress: onProgress,\n\t\t\t\t\tonError: onError\n\t\t\t\t});\n\t\t\t\treturn;\n\t\t\t} // Initialise array for duplicate requests\n\n\n\t\t\tloading[url] = [];\n\t\t\tloading[url].push({\n\t\t\t\tonLoad: onLoad,\n\t\t\t\tonProgress: onProgress,\n\t\t\t\tonError: onError\n\t\t\t}); // create request\n\n\t\t\tconst req = new Request(url, {\n\t\t\t\theaders: new Headers(this.requestHeader),\n\t\t\t\tcredentials: this.withCredentials ? 'include' : 'same-origin' // An abort controller could be added within a future PR\n\n\t\t\t}); // start the fetch\n\n\t\t\tfetch(req).then(response => {\n\t\t\t\tif (response.status === 200 || response.status === 0) {\n\t\t\t\t\t// Some browsers return HTTP Status 0 when using non-http protocol\n\t\t\t\t\t// e.g. 'file://' or 'data://'. Handle as success.\n\t\t\t\t\tif (response.status === 0) {\n\t\t\t\t\t\tconsole.warn('THREE.FileLoader: HTTP Status 0 received.');\n\t\t\t\t\t}\n\n\t\t\t\t\tconst callbacks = loading[url];\n\t\t\t\t\tconst reader = response.body.getReader();\n\t\t\t\t\tconst contentLength = response.headers.get('Content-Length');\n\t\t\t\t\tconst total = contentLength ? parseInt(contentLength) : 0;\n\t\t\t\t\tconst lengthComputable = total !== 0;\n\t\t\t\t\tlet loaded = 0; // periodically read data into the new stream tracking while download progress\n\n\t\t\t\t\treturn new ReadableStream({\n\t\t\t\t\t\tstart(controller) {\n\t\t\t\t\t\t\treadData();\n\n\t\t\t\t\t\t\tfunction readData() {\n\t\t\t\t\t\t\t\treader.read().then(({\n\t\t\t\t\t\t\t\t\tdone,\n\t\t\t\t\t\t\t\t\tvalue\n\t\t\t\t\t\t\t\t}) => {\n\t\t\t\t\t\t\t\t\tif (done) {\n\t\t\t\t\t\t\t\t\t\tcontroller.close();\n\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\tloaded += value.byteLength;\n\t\t\t\t\t\t\t\t\t\tconst event = new ProgressEvent('progress', {\n\t\t\t\t\t\t\t\t\t\t\tlengthComputable,\n\t\t\t\t\t\t\t\t\t\t\tloaded,\n\t\t\t\t\t\t\t\t\t\t\ttotal\n\t\t\t\t\t\t\t\t\t\t});\n\n\t\t\t\t\t\t\t\t\t\tfor (let i = 0, il = callbacks.length; i < il; i++) {\n\t\t\t\t\t\t\t\t\t\t\tconst callback = callbacks[i];\n\t\t\t\t\t\t\t\t\t\t\tif (callback.onProgress) callback.onProgress(event);\n\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\tcontroller.enqueue(value);\n\t\t\t\t\t\t\t\t\t\treadData();\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\tthrow Error(`fetch for \"${response.url}\" responded with ${response.status}: ${response.statusText}`);\n\t\t\t\t}\n\t\t\t}).then(stream => {\n\t\t\t\tconst response = new Response(stream);\n\n\t\t\t\tswitch (this.responseType) {\n\t\t\t\t\tcase 'arraybuffer':\n\t\t\t\t\t\treturn response.arrayBuffer();\n\n\t\t\t\t\tcase 'blob':\n\t\t\t\t\t\treturn response.blob();\n\n\t\t\t\t\tcase 'document':\n\t\t\t\t\t\treturn response.text().then(text => {\n\t\t\t\t\t\t\tconst parser = new DOMParser();\n\t\t\t\t\t\t\treturn parser.parseFromString(text, this.mimeType);\n\t\t\t\t\t\t});\n\n\t\t\t\t\tcase 'json':\n\t\t\t\t\t\treturn response.json();\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\treturn response.text();\n\t\t\t\t}\n\t\t\t}).then(data => {\n\t\t\t\t// Add to cache only on HTTP success, so that we do not cache\n\t\t\t\t// error response bodies as proper responses to requests.\n\t\t\t\tCache.add(url, data);\n\t\t\t\tconst callbacks = loading[url];\n\t\t\t\tdelete loading[url];\n\n\t\t\t\tfor (let i = 0, il = callbacks.length; i < il; i++) {\n\t\t\t\t\tconst callback = callbacks[i];\n\t\t\t\t\tif (callback.onLoad) callback.onLoad(data);\n\t\t\t\t}\n\n\t\t\t\tthis.manager.itemEnd(url);\n\t\t\t}).catch(err => {\n\t\t\t\t// Abort errors and other errors are handled the same\n\t\t\t\tconst callbacks = loading[url];\n\t\t\t\tdelete loading[url];\n\n\t\t\t\tfor (let i = 0, il = callbacks.length; i < il; i++) {\n\t\t\t\t\tconst callback = callbacks[i];\n\t\t\t\t\tif (callback.onError) callback.onError(err);\n\t\t\t\t}\n\n\t\t\t\tthis.manager.itemError(url);\n\t\t\t\tthis.manager.itemEnd(url);\n\t\t\t});\n\t\t\tthis.manager.itemStart(url);\n\t\t}\n\n\t\tsetResponseType(value) {\n\t\t\tthis.responseType = value;\n\t\t\treturn this;\n\t\t}\n\n\t\tsetMimeType(value) {\n\t\t\tthis.mimeType = value;\n\t\t\treturn this;\n\t\t}\n\n\t}\n\n\tclass AnimationLoader extends Loader {\n\t\tconstructor(manager) {\n\t\t\tsuper(manager);\n\t\t}\n\n\t\tload(url, onLoad, onProgress, onError) {\n\t\t\tconst scope = this;\n\t\t\tconst loader = new FileLoader(this.manager);\n\t\t\tloader.setPath(this.path);\n\t\t\tloader.setRequestHeader(this.requestHeader);\n\t\t\tloader.setWithCredentials(this.withCredentials);\n\t\t\tloader.load(url, function (text) {\n\t\t\t\ttry {\n\t\t\t\t\tonLoad(scope.parse(JSON.parse(text)));\n\t\t\t\t} catch (e) {\n\t\t\t\t\tif (onError) {\n\t\t\t\t\t\tonError(e);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tconsole.error(e);\n\t\t\t\t\t}\n\n\t\t\t\t\tscope.manager.itemError(url);\n\t\t\t\t}\n\t\t\t}, onProgress, onError);\n\t\t}\n\n\t\tparse(json) {\n\t\t\tconst animations = [];\n\n\t\t\tfor (let i = 0; i < json.length; i++) {\n\t\t\t\tconst clip = AnimationClip.parse(json[i]);\n\t\t\t\tanimations.push(clip);\n\t\t\t}\n\n\t\t\treturn animations;\n\t\t}\n\n\t}\n\n\t/**\n\t * Abstract Base class to block based textures loader (dds, pvr, ...)\n\t *\n\t * Sub classes have to implement the parse() method which will be used in load().\n\t */\n\n\tclass CompressedTextureLoader extends Loader {\n\t\tconstructor(manager) {\n\t\t\tsuper(manager);\n\t\t}\n\n\t\tload(url, onLoad, onProgress, onError) {\n\t\t\tconst scope = this;\n\t\t\tconst images = [];\n\t\t\tconst texture = new CompressedTexture();\n\t\t\tconst loader = new FileLoader(this.manager);\n\t\t\tloader.setPath(this.path);\n\t\t\tloader.setResponseType('arraybuffer');\n\t\t\tloader.setRequestHeader(this.requestHeader);\n\t\t\tloader.setWithCredentials(scope.withCredentials);\n\t\t\tlet loaded = 0;\n\n\t\t\tfunction loadTexture(i) {\n\t\t\t\tloader.load(url[i], function (buffer) {\n\t\t\t\t\tconst texDatas = scope.parse(buffer, true);\n\t\t\t\t\timages[i] = {\n\t\t\t\t\t\twidth: texDatas.width,\n\t\t\t\t\t\theight: texDatas.height,\n\t\t\t\t\t\tformat: texDatas.format,\n\t\t\t\t\t\tmipmaps: texDatas.mipmaps\n\t\t\t\t\t};\n\t\t\t\t\tloaded += 1;\n\n\t\t\t\t\tif (loaded === 6) {\n\t\t\t\t\t\tif (texDatas.mipmapCount === 1) texture.minFilter = LinearFilter;\n\t\t\t\t\t\ttexture.image = images;\n\t\t\t\t\t\ttexture.format = texDatas.format;\n\t\t\t\t\t\ttexture.needsUpdate = true;\n\t\t\t\t\t\tif (onLoad) onLoad(texture);\n\t\t\t\t\t}\n\t\t\t\t}, onProgress, onError);\n\t\t\t}\n\n\t\t\tif (Array.isArray(url)) {\n\t\t\t\tfor (let i = 0, il = url.length; i < il; ++i) {\n\t\t\t\t\tloadTexture(i);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// compressed cubemap texture stored in a single DDS file\n\t\t\t\tloader.load(url, function (buffer) {\n\t\t\t\t\tconst texDatas = scope.parse(buffer, true);\n\n\t\t\t\t\tif (texDatas.isCubemap) {\n\t\t\t\t\t\tconst faces = texDatas.mipmaps.length / texDatas.mipmapCount;\n\n\t\t\t\t\t\tfor (let f = 0; f < faces; f++) {\n\t\t\t\t\t\t\timages[f] = {\n\t\t\t\t\t\t\t\tmipmaps: []\n\t\t\t\t\t\t\t};\n\n\t\t\t\t\t\t\tfor (let i = 0; i < texDatas.mipmapCount; i++) {\n\t\t\t\t\t\t\t\timages[f].mipmaps.push(texDatas.mipmaps[f * texDatas.mipmapCount + i]);\n\t\t\t\t\t\t\t\timages[f].format = texDatas.format;\n\t\t\t\t\t\t\t\timages[f].width = texDatas.width;\n\t\t\t\t\t\t\t\timages[f].height = texDatas.height;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\ttexture.image = images;\n\t\t\t\t\t} else {\n\t\t\t\t\t\ttexture.image.width = texDatas.width;\n\t\t\t\t\t\ttexture.image.height = texDatas.height;\n\t\t\t\t\t\ttexture.mipmaps = texDatas.mipmaps;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (texDatas.mipmapCount === 1) {\n\t\t\t\t\t\ttexture.minFilter = LinearFilter;\n\t\t\t\t\t}\n\n\t\t\t\t\ttexture.format = texDatas.format;\n\t\t\t\t\ttexture.needsUpdate = true;\n\t\t\t\t\tif (onLoad) onLoad(texture);\n\t\t\t\t}, onProgress, onError);\n\t\t\t}\n\n\t\t\treturn texture;\n\t\t}\n\n\t}\n\n\tclass ImageLoader extends Loader {\n\t\tconstructor(manager) {\n\t\t\tsuper(manager);\n\t\t}\n\n\t\tload(url, onLoad, onProgress, onError) {\n\t\t\tif (this.path !== undefined) url = this.path + url;\n\t\t\turl = this.manager.resolveURL(url);\n\t\t\tconst scope = this;\n\t\t\tconst cached = Cache.get(url);\n\n\t\t\tif (cached !== undefined) {\n\t\t\t\tscope.manager.itemStart(url);\n\t\t\t\tsetTimeout(function () {\n\t\t\t\t\tif (onLoad) onLoad(cached);\n\t\t\t\t\tscope.manager.itemEnd(url);\n\t\t\t\t}, 0);\n\t\t\t\treturn cached;\n\t\t\t}\n\n\t\t\tconst image = createElementNS('img');\n\n\t\t\tfunction onImageLoad() {\n\t\t\t\tremoveEventListeners();\n\t\t\t\tCache.add(url, this);\n\t\t\t\tif (onLoad) onLoad(this);\n\t\t\t\tscope.manager.itemEnd(url);\n\t\t\t}\n\n\t\t\tfunction onImageError(event) {\n\t\t\t\tremoveEventListeners();\n\t\t\t\tif (onError) onError(event);\n\t\t\t\tscope.manager.itemError(url);\n\t\t\t\tscope.manager.itemEnd(url);\n\t\t\t}\n\n\t\t\tfunction removeEventListeners() {\n\t\t\t\timage.removeEventListener('load', onImageLoad, false);\n\t\t\t\timage.removeEventListener('error', onImageError, false);\n\t\t\t}\n\n\t\t\timage.addEventListener('load', onImageLoad, false);\n\t\t\timage.addEventListener('error', onImageError, false);\n\n\t\t\tif (url.substr(0, 5) !== 'data:') {\n\t\t\t\tif (this.crossOrigin !== undefined) image.crossOrigin = this.crossOrigin;\n\t\t\t}\n\n\t\t\tscope.manager.itemStart(url);\n\t\t\timage.src = url;\n\t\t\treturn image;\n\t\t}\n\n\t}\n\n\tclass CubeTextureLoader extends Loader {\n\t\tconstructor(manager) {\n\t\t\tsuper(manager);\n\t\t}\n\n\t\tload(urls, onLoad, onProgress, onError) {\n\t\t\tconst texture = new CubeTexture();\n\t\t\tconst loader = new ImageLoader(this.manager);\n\t\t\tloader.setCrossOrigin(this.crossOrigin);\n\t\t\tloader.setPath(this.path);\n\t\t\tlet loaded = 0;\n\n\t\t\tfunction loadTexture(i) {\n\t\t\t\tloader.load(urls[i], function (image) {\n\t\t\t\t\ttexture.images[i] = image;\n\t\t\t\t\tloaded++;\n\n\t\t\t\t\tif (loaded === 6) {\n\t\t\t\t\t\ttexture.needsUpdate = true;\n\t\t\t\t\t\tif (onLoad) onLoad(texture);\n\t\t\t\t\t}\n\t\t\t\t}, undefined, onError);\n\t\t\t}\n\n\t\t\tfor (let i = 0; i < urls.length; ++i) {\n\t\t\t\tloadTexture(i);\n\t\t\t}\n\n\t\t\treturn texture;\n\t\t}\n\n\t}\n\n\t/**\n\t * Abstract Base class to load generic binary textures formats (rgbe, hdr, ...)\n\t *\n\t * Sub classes have to implement the parse() method which will be used in load().\n\t */\n\n\tclass DataTextureLoader extends Loader {\n\t\tconstructor(manager) {\n\t\t\tsuper(manager);\n\t\t}\n\n\t\tload(url, onLoad, onProgress, onError) {\n\t\t\tconst scope = this;\n\t\t\tconst texture = new DataTexture();\n\t\t\tconst loader = new FileLoader(this.manager);\n\t\t\tloader.setResponseType('arraybuffer');\n\t\t\tloader.setRequestHeader(this.requestHeader);\n\t\t\tloader.setPath(this.path);\n\t\t\tloader.setWithCredentials(scope.withCredentials);\n\t\t\tloader.load(url, function (buffer) {\n\t\t\t\tconst texData = scope.parse(buffer);\n\t\t\t\tif (!texData) return;\n\n\t\t\t\tif (texData.image !== undefined) {\n\t\t\t\t\ttexture.image = texData.image;\n\t\t\t\t} else if (texData.data !== undefined) {\n\t\t\t\t\ttexture.image.width = texData.width;\n\t\t\t\t\ttexture.image.height = texData.height;\n\t\t\t\t\ttexture.image.data = texData.data;\n\t\t\t\t}\n\n\t\t\t\ttexture.wrapS = texData.wrapS !== undefined ? texData.wrapS : ClampToEdgeWrapping;\n\t\t\t\ttexture.wrapT = texData.wrapT !== undefined ? texData.wrapT : ClampToEdgeWrapping;\n\t\t\t\ttexture.magFilter = texData.magFilter !== undefined ? texData.magFilter : LinearFilter;\n\t\t\t\ttexture.minFilter = texData.minFilter !== undefined ? texData.minFilter : LinearFilter;\n\t\t\t\ttexture.anisotropy = texData.anisotropy !== undefined ? texData.anisotropy : 1;\n\n\t\t\t\tif (texData.encoding !== undefined) {\n\t\t\t\t\ttexture.encoding = texData.encoding;\n\t\t\t\t}\n\n\t\t\t\tif (texData.flipY !== undefined) {\n\t\t\t\t\ttexture.flipY = texData.flipY;\n\t\t\t\t}\n\n\t\t\t\tif (texData.format !== undefined) {\n\t\t\t\t\ttexture.format = texData.format;\n\t\t\t\t}\n\n\t\t\t\tif (texData.type !== undefined) {\n\t\t\t\t\ttexture.type = texData.type;\n\t\t\t\t}\n\n\t\t\t\tif (texData.mipmaps !== undefined) {\n\t\t\t\t\ttexture.mipmaps = texData.mipmaps;\n\t\t\t\t\ttexture.minFilter = LinearMipmapLinearFilter; // presumably...\n\t\t\t\t}\n\n\t\t\t\tif (texData.mipmapCount === 1) {\n\t\t\t\t\ttexture.minFilter = LinearFilter;\n\t\t\t\t}\n\n\t\t\t\tif (texData.generateMipmaps !== undefined) {\n\t\t\t\t\ttexture.generateMipmaps = texData.generateMipmaps;\n\t\t\t\t}\n\n\t\t\t\ttexture.needsUpdate = true;\n\t\t\t\tif (onLoad) onLoad(texture, texData);\n\t\t\t}, onProgress, onError);\n\t\t\treturn texture;\n\t\t}\n\n\t}\n\n\tclass TextureLoader extends Loader {\n\t\tconstructor(manager) {\n\t\t\tsuper(manager);\n\t\t}\n\n\t\tload(url, onLoad, onProgress, onError) {\n\t\t\tconst texture = new Texture();\n\t\t\tconst loader = new ImageLoader(this.manager);\n\t\t\tloader.setCrossOrigin(this.crossOrigin);\n\t\t\tloader.setPath(this.path);\n\t\t\tloader.load(url, function (image) {\n\t\t\t\ttexture.image = image;\n\t\t\t\ttexture.needsUpdate = true;\n\n\t\t\t\tif (onLoad !== undefined) {\n\t\t\t\t\tonLoad(texture);\n\t\t\t\t}\n\t\t\t}, onProgress, onError);\n\t\t\treturn texture;\n\t\t}\n\n\t}\n\n\tclass Light extends Object3D {\n\t\tconstructor(color, intensity = 1) {\n\t\t\tsuper();\n\t\t\tthis.type = 'Light';\n\t\t\tthis.color = new Color(color);\n\t\t\tthis.intensity = intensity;\n\t\t}\n\n\t\tdispose() {// Empty here in base class; some subclasses override.\n\t\t}\n\n\t\tcopy(source) {\n\t\t\tsuper.copy(source);\n\t\t\tthis.color.copy(source.color);\n\t\t\tthis.intensity = source.intensity;\n\t\t\treturn this;\n\t\t}\n\n\t\ttoJSON(meta) {\n\t\t\tconst data = super.toJSON(meta);\n\t\t\tdata.object.color = this.color.getHex();\n\t\t\tdata.object.intensity = this.intensity;\n\t\t\tif (this.groundColor !== undefined) data.object.groundColor = this.groundColor.getHex();\n\t\t\tif (this.distance !== undefined) data.object.distance = this.distance;\n\t\t\tif (this.angle !== undefined) data.object.angle = this.angle;\n\t\t\tif (this.decay !== undefined) data.object.decay = this.decay;\n\t\t\tif (this.penumbra !== undefined) data.object.penumbra = this.penumbra;\n\t\t\tif (this.shadow !== undefined) data.object.shadow = this.shadow.toJSON();\n\t\t\treturn data;\n\t\t}\n\n\t}\n\n\tLight.prototype.isLight = true;\n\n\tclass HemisphereLight extends Light {\n\t\tconstructor(skyColor, groundColor, intensity) {\n\t\t\tsuper(skyColor, intensity);\n\t\t\tthis.type = 'HemisphereLight';\n\t\t\tthis.position.copy(Object3D.DefaultUp);\n\t\t\tthis.updateMatrix();\n\t\t\tthis.groundColor = new Color(groundColor);\n\t\t}\n\n\t\tcopy(source) {\n\t\t\tLight.prototype.copy.call(this, source);\n\t\t\tthis.groundColor.copy(source.groundColor);\n\t\t\treturn this;\n\t\t}\n\n\t}\n\n\tHemisphereLight.prototype.isHemisphereLight = true;\n\n\tconst _projScreenMatrix$1 = /*@__PURE__*/new Matrix4();\n\n\tconst _lightPositionWorld$1 = /*@__PURE__*/new Vector3();\n\n\tconst _lookTarget$1 = /*@__PURE__*/new Vector3();\n\n\tclass LightShadow {\n\t\tconstructor(camera) {\n\t\t\tthis.camera = camera;\n\t\t\tthis.bias = 0;\n\t\t\tthis.normalBias = 0;\n\t\t\tthis.radius = 1;\n\t\t\tthis.blurSamples = 8;\n\t\t\tthis.mapSize = new Vector2(512, 512);\n\t\t\tthis.map = null;\n\t\t\tthis.mapPass = null;\n\t\t\tthis.matrix = new Matrix4();\n\t\t\tthis.autoUpdate = true;\n\t\t\tthis.needsUpdate = false;\n\t\t\tthis._frustum = new Frustum();\n\t\t\tthis._frameExtents = new Vector2(1, 1);\n\t\t\tthis._viewportCount = 1;\n\t\t\tthis._viewports = [new Vector4(0, 0, 1, 1)];\n\t\t}\n\n\t\tgetViewportCount() {\n\t\t\treturn this._viewportCount;\n\t\t}\n\n\t\tgetFrustum() {\n\t\t\treturn this._frustum;\n\t\t}\n\n\t\tupdateMatrices(light) {\n\t\t\tconst shadowCamera = this.camera;\n\t\t\tconst shadowMatrix = this.matrix;\n\n\t\t\t_lightPositionWorld$1.setFromMatrixPosition(light.matrixWorld);\n\n\t\t\tshadowCamera.position.copy(_lightPositionWorld$1);\n\n\t\t\t_lookTarget$1.setFromMatrixPosition(light.target.matrixWorld);\n\n\t\t\tshadowCamera.lookAt(_lookTarget$1);\n\t\t\tshadowCamera.updateMatrixWorld();\n\n\t\t\t_projScreenMatrix$1.multiplyMatrices(shadowCamera.projectionMatrix, shadowCamera.matrixWorldInverse);\n\n\t\t\tthis._frustum.setFromProjectionMatrix(_projScreenMatrix$1);\n\n\t\t\tshadowMatrix.set(0.5, 0.0, 0.0, 0.5, 0.0, 0.5, 0.0, 0.5, 0.0, 0.0, 0.5, 0.5, 0.0, 0.0, 0.0, 1.0);\n\t\t\tshadowMatrix.multiply(shadowCamera.projectionMatrix);\n\t\t\tshadowMatrix.multiply(shadowCamera.matrixWorldInverse);\n\t\t}\n\n\t\tgetViewport(viewportIndex) {\n\t\t\treturn this._viewports[viewportIndex];\n\t\t}\n\n\t\tgetFrameExtents() {\n\t\t\treturn this._frameExtents;\n\t\t}\n\n\t\tdispose() {\n\t\t\tif (this.map) {\n\t\t\t\tthis.map.dispose();\n\t\t\t}\n\n\t\t\tif (this.mapPass) {\n\t\t\t\tthis.mapPass.dispose();\n\t\t\t}\n\t\t}\n\n\t\tcopy(source) {\n\t\t\tthis.camera = source.camera.clone();\n\t\t\tthis.bias = source.bias;\n\t\t\tthis.radius = source.radius;\n\t\t\tthis.mapSize.copy(source.mapSize);\n\t\t\treturn this;\n\t\t}\n\n\t\tclone() {\n\t\t\treturn new this.constructor().copy(this);\n\t\t}\n\n\t\ttoJSON() {\n\t\t\tconst object = {};\n\t\t\tif (this.bias !== 0) object.bias = this.bias;\n\t\t\tif (this.normalBias !== 0) object.normalBias = this.normalBias;\n\t\t\tif (this.radius !== 1) object.radius = this.radius;\n\t\t\tif (this.mapSize.x !== 512 || this.mapSize.y !== 512) object.mapSize = this.mapSize.toArray();\n\t\t\tobject.camera = this.camera.toJSON(false).object;\n\t\t\tdelete object.camera.matrix;\n\t\t\treturn object;\n\t\t}\n\n\t}\n\n\tclass SpotLightShadow extends LightShadow {\n\t\tconstructor() {\n\t\t\tsuper(new PerspectiveCamera(50, 1, 0.5, 500));\n\t\t\tthis.focus = 1;\n\t\t}\n\n\t\tupdateMatrices(light) {\n\t\t\tconst camera = this.camera;\n\t\t\tconst fov = RAD2DEG * 2 * light.angle * this.focus;\n\t\t\tconst aspect = this.mapSize.width / this.mapSize.height;\n\t\t\tconst far = light.distance || camera.far;\n\n\t\t\tif (fov !== camera.fov || aspect !== camera.aspect || far !== camera.far) {\n\t\t\t\tcamera.fov = fov;\n\t\t\t\tcamera.aspect = aspect;\n\t\t\t\tcamera.far = far;\n\t\t\t\tcamera.updateProjectionMatrix();\n\t\t\t}\n\n\t\t\tsuper.updateMatrices(light);\n\t\t}\n\n\t\tcopy(source) {\n\t\t\tsuper.copy(source);\n\t\t\tthis.focus = source.focus;\n\t\t\treturn this;\n\t\t}\n\n\t}\n\n\tSpotLightShadow.prototype.isSpotLightShadow = true;\n\n\tclass SpotLight extends Light {\n\t\tconstructor(color, intensity, distance = 0, angle = Math.PI / 3, penumbra = 0, decay = 1) {\n\t\t\tsuper(color, intensity);\n\t\t\tthis.type = 'SpotLight';\n\t\t\tthis.position.copy(Object3D.DefaultUp);\n\t\t\tthis.updateMatrix();\n\t\t\tthis.target = new Object3D();\n\t\t\tthis.distance = distance;\n\t\t\tthis.angle = angle;\n\t\t\tthis.penumbra = penumbra;\n\t\t\tthis.decay = decay; // for physically correct lights, should be 2.\n\n\t\t\tthis.shadow = new SpotLightShadow();\n\t\t}\n\n\t\tget power() {\n\t\t\t// compute the light's luminous power (in lumens) from its intensity (in candela)\n\t\t\t// by convention for a spotlight, luminous power (lm) = π * luminous intensity (cd)\n\t\t\treturn this.intensity * Math.PI;\n\t\t}\n\n\t\tset power(power) {\n\t\t\t// set the light's intensity (in candela) from the desired luminous power (in lumens)\n\t\t\tthis.intensity = power / Math.PI;\n\t\t}\n\n\t\tdispose() {\n\t\t\tthis.shadow.dispose();\n\t\t}\n\n\t\tcopy(source) {\n\t\t\tsuper.copy(source);\n\t\t\tthis.distance = source.distance;\n\t\t\tthis.angle = source.angle;\n\t\t\tthis.penumbra = source.penumbra;\n\t\t\tthis.decay = source.decay;\n\t\t\tthis.target = source.target.clone();\n\t\t\tthis.shadow = source.shadow.clone();\n\t\t\treturn this;\n\t\t}\n\n\t}\n\n\tSpotLight.prototype.isSpotLight = true;\n\n\tconst _projScreenMatrix = /*@__PURE__*/new Matrix4();\n\n\tconst _lightPositionWorld = /*@__PURE__*/new Vector3();\n\n\tconst _lookTarget = /*@__PURE__*/new Vector3();\n\n\tclass PointLightShadow extends LightShadow {\n\t\tconstructor() {\n\t\t\tsuper(new PerspectiveCamera(90, 1, 0.5, 500));\n\t\t\tthis._frameExtents = new Vector2(4, 2);\n\t\t\tthis._viewportCount = 6;\n\t\t\tthis._viewports = [// These viewports map a cube-map onto a 2D texture with the\n\t\t\t// following orientation:\n\t\t\t//\n\t\t\t//\txzXZ\n\t\t\t//\t y Y\n\t\t\t//\n\t\t\t// X - Positive x direction\n\t\t\t// x - Negative x direction\n\t\t\t// Y - Positive y direction\n\t\t\t// y - Negative y direction\n\t\t\t// Z - Positive z direction\n\t\t\t// z - Negative z direction\n\t\t\t// positive X\n\t\t\tnew Vector4(2, 1, 1, 1), // negative X\n\t\t\tnew Vector4(0, 1, 1, 1), // positive Z\n\t\t\tnew Vector4(3, 1, 1, 1), // negative Z\n\t\t\tnew Vector4(1, 1, 1, 1), // positive Y\n\t\t\tnew Vector4(3, 0, 1, 1), // negative Y\n\t\t\tnew Vector4(1, 0, 1, 1)];\n\t\t\tthis._cubeDirections = [new Vector3(1, 0, 0), new Vector3(-1, 0, 0), new Vector3(0, 0, 1), new Vector3(0, 0, -1), new Vector3(0, 1, 0), new Vector3(0, -1, 0)];\n\t\t\tthis._cubeUps = [new Vector3(0, 1, 0), new Vector3(0, 1, 0), new Vector3(0, 1, 0), new Vector3(0, 1, 0), new Vector3(0, 0, 1), new Vector3(0, 0, -1)];\n\t\t}\n\n\t\tupdateMatrices(light, viewportIndex = 0) {\n\t\t\tconst camera = this.camera;\n\t\t\tconst shadowMatrix = this.matrix;\n\t\t\tconst far = light.distance || camera.far;\n\n\t\t\tif (far !== camera.far) {\n\t\t\t\tcamera.far = far;\n\t\t\t\tcamera.updateProjectionMatrix();\n\t\t\t}\n\n\t\t\t_lightPositionWorld.setFromMatrixPosition(light.matrixWorld);\n\n\t\t\tcamera.position.copy(_lightPositionWorld);\n\n\t\t\t_lookTarget.copy(camera.position);\n\n\t\t\t_lookTarget.add(this._cubeDirections[viewportIndex]);\n\n\t\t\tcamera.up.copy(this._cubeUps[viewportIndex]);\n\t\t\tcamera.lookAt(_lookTarget);\n\t\t\tcamera.updateMatrixWorld();\n\t\t\tshadowMatrix.makeTranslation(-_lightPositionWorld.x, -_lightPositionWorld.y, -_lightPositionWorld.z);\n\n\t\t\t_projScreenMatrix.multiplyMatrices(camera.projectionMatrix, camera.matrixWorldInverse);\n\n\t\t\tthis._frustum.setFromProjectionMatrix(_projScreenMatrix);\n\t\t}\n\n\t}\n\n\tPointLightShadow.prototype.isPointLightShadow = true;\n\n\tclass PointLight extends Light {\n\t\tconstructor(color, intensity, distance = 0, decay = 1) {\n\t\t\tsuper(color, intensity);\n\t\t\tthis.type = 'PointLight';\n\t\t\tthis.distance = distance;\n\t\t\tthis.decay = decay; // for physically correct lights, should be 2.\n\n\t\t\tthis.shadow = new PointLightShadow();\n\t\t}\n\n\t\tget power() {\n\t\t\t// compute the light's luminous power (in lumens) from its intensity (in candela)\n\t\t\t// for an isotropic light source, luminous power (lm) = 4 π luminous intensity (cd)\n\t\t\treturn this.intensity * 4 * Math.PI;\n\t\t}\n\n\t\tset power(power) {\n\t\t\t// set the light's intensity (in candela) from the desired luminous power (in lumens)\n\t\t\tthis.intensity = power / (4 * Math.PI);\n\t\t}\n\n\t\tdispose() {\n\t\t\tthis.shadow.dispose();\n\t\t}\n\n\t\tcopy(source) {\n\t\t\tsuper.copy(source);\n\t\t\tthis.distance = source.distance;\n\t\t\tthis.decay = source.decay;\n\t\t\tthis.shadow = source.shadow.clone();\n\t\t\treturn this;\n\t\t}\n\n\t}\n\n\tPointLight.prototype.isPointLight = true;\n\n\tclass DirectionalLightShadow extends LightShadow {\n\t\tconstructor() {\n\t\t\tsuper(new OrthographicCamera(-5, 5, 5, -5, 0.5, 500));\n\t\t}\n\n\t}\n\n\tDirectionalLightShadow.prototype.isDirectionalLightShadow = true;\n\n\tclass DirectionalLight extends Light {\n\t\tconstructor(color, intensity) {\n\t\t\tsuper(color, intensity);\n\t\t\tthis.type = 'DirectionalLight';\n\t\t\tthis.position.copy(Object3D.DefaultUp);\n\t\t\tthis.updateMatrix();\n\t\t\tthis.target = new Object3D();\n\t\t\tthis.shadow = new DirectionalLightShadow();\n\t\t}\n\n\t\tdispose() {\n\t\t\tthis.shadow.dispose();\n\t\t}\n\n\t\tcopy(source) {\n\t\t\tsuper.copy(source);\n\t\t\tthis.target = source.target.clone();\n\t\t\tthis.shadow = source.shadow.clone();\n\t\t\treturn this;\n\t\t}\n\n\t}\n\n\tDirectionalLight.prototype.isDirectionalLight = true;\n\n\tclass AmbientLight extends Light {\n\t\tconstructor(color, intensity) {\n\t\t\tsuper(color, intensity);\n\t\t\tthis.type = 'AmbientLight';\n\t\t}\n\n\t}\n\n\tAmbientLight.prototype.isAmbientLight = true;\n\n\tclass RectAreaLight extends Light {\n\t\tconstructor(color, intensity, width = 10, height = 10) {\n\t\t\tsuper(color, intensity);\n\t\t\tthis.type = 'RectAreaLight';\n\t\t\tthis.width = width;\n\t\t\tthis.height = height;\n\t\t}\n\n\t\tget power() {\n\t\t\t// compute the light's luminous power (in lumens) from its intensity (in nits)\n\t\t\treturn this.intensity * this.width * this.height * Math.PI;\n\t\t}\n\n\t\tset power(power) {\n\t\t\t// set the light's intensity (in nits) from the desired luminous power (in lumens)\n\t\t\tthis.intensity = power / (this.width * this.height * Math.PI);\n\t\t}\n\n\t\tcopy(source) {\n\t\t\tsuper.copy(source);\n\t\t\tthis.width = source.width;\n\t\t\tthis.height = source.height;\n\t\t\treturn this;\n\t\t}\n\n\t\ttoJSON(meta) {\n\t\t\tconst data = super.toJSON(meta);\n\t\t\tdata.object.width = this.width;\n\t\t\tdata.object.height = this.height;\n\t\t\treturn data;\n\t\t}\n\n\t}\n\n\tRectAreaLight.prototype.isRectAreaLight = true;\n\n\t/**\n\t * Primary reference:\n\t *\t https://graphics.stanford.edu/papers/envmap/envmap.pdf\n\t *\n\t * Secondary reference:\n\t *\t https://www.ppsloan.org/publications/StupidSH36.pdf\n\t */\n\t// 3-band SH defined by 9 coefficients\n\n\tclass SphericalHarmonics3 {\n\t\tconstructor() {\n\t\t\tthis.coefficients = [];\n\n\t\t\tfor (let i = 0; i < 9; i++) {\n\t\t\t\tthis.coefficients.push(new Vector3());\n\t\t\t}\n\t\t}\n\n\t\tset(coefficients) {\n\t\t\tfor (let i = 0; i < 9; i++) {\n\t\t\t\tthis.coefficients[i].copy(coefficients[i]);\n\t\t\t}\n\n\t\t\treturn this;\n\t\t}\n\n\t\tzero() {\n\t\t\tfor (let i = 0; i < 9; i++) {\n\t\t\t\tthis.coefficients[i].set(0, 0, 0);\n\t\t\t}\n\n\t\t\treturn this;\n\t\t} // get the radiance in the direction of the normal\n\t\t// target is a Vector3\n\n\n\t\tgetAt(normal, target) {\n\t\t\t// normal is assumed to be unit length\n\t\t\tconst x = normal.x,\n\t\t\t\t\t\ty = normal.y,\n\t\t\t\t\t\tz = normal.z;\n\t\t\tconst coeff = this.coefficients; // band 0\n\n\t\t\ttarget.copy(coeff[0]).multiplyScalar(0.282095); // band 1\n\n\t\t\ttarget.addScaledVector(coeff[1], 0.488603 * y);\n\t\t\ttarget.addScaledVector(coeff[2], 0.488603 * z);\n\t\t\ttarget.addScaledVector(coeff[3], 0.488603 * x); // band 2\n\n\t\t\ttarget.addScaledVector(coeff[4], 1.092548 * (x * y));\n\t\t\ttarget.addScaledVector(coeff[5], 1.092548 * (y * z));\n\t\t\ttarget.addScaledVector(coeff[6], 0.315392 * (3.0 * z * z - 1.0));\n\t\t\ttarget.addScaledVector(coeff[7], 1.092548 * (x * z));\n\t\t\ttarget.addScaledVector(coeff[8], 0.546274 * (x * x - y * y));\n\t\t\treturn target;\n\t\t} // get the irradiance (radiance convolved with cosine lobe) in the direction of the normal\n\t\t// target is a Vector3\n\t\t// https://graphics.stanford.edu/papers/envmap/envmap.pdf\n\n\n\t\tgetIrradianceAt(normal, target) {\n\t\t\t// normal is assumed to be unit length\n\t\t\tconst x = normal.x,\n\t\t\t\t\t\ty = normal.y,\n\t\t\t\t\t\tz = normal.z;\n\t\t\tconst coeff = this.coefficients; // band 0\n\n\t\t\ttarget.copy(coeff[0]).multiplyScalar(0.886227); // π * 0.282095\n\t\t\t// band 1\n\n\t\t\ttarget.addScaledVector(coeff[1], 2.0 * 0.511664 * y); // ( 2 * π / 3 ) * 0.488603\n\n\t\t\ttarget.addScaledVector(coeff[2], 2.0 * 0.511664 * z);\n\t\t\ttarget.addScaledVector(coeff[3], 2.0 * 0.511664 * x); // band 2\n\n\t\t\ttarget.addScaledVector(coeff[4], 2.0 * 0.429043 * x * y); // ( π / 4 ) * 1.092548\n\n\t\t\ttarget.addScaledVector(coeff[5], 2.0 * 0.429043 * y * z);\n\t\t\ttarget.addScaledVector(coeff[6], 0.743125 * z * z - 0.247708); // ( π / 4 ) * 0.315392 * 3\n\n\t\t\ttarget.addScaledVector(coeff[7], 2.0 * 0.429043 * x * z);\n\t\t\ttarget.addScaledVector(coeff[8], 0.429043 * (x * x - y * y)); // ( π / 4 ) * 0.546274\n\n\t\t\treturn target;\n\t\t}\n\n\t\tadd(sh) {\n\t\t\tfor (let i = 0; i < 9; i++) {\n\t\t\t\tthis.coefficients[i].add(sh.coefficients[i]);\n\t\t\t}\n\n\t\t\treturn this;\n\t\t}\n\n\t\taddScaledSH(sh, s) {\n\t\t\tfor (let i = 0; i < 9; i++) {\n\t\t\t\tthis.coefficients[i].addScaledVector(sh.coefficients[i], s);\n\t\t\t}\n\n\t\t\treturn this;\n\t\t}\n\n\t\tscale(s) {\n\t\t\tfor (let i = 0; i < 9; i++) {\n\t\t\t\tthis.coefficients[i].multiplyScalar(s);\n\t\t\t}\n\n\t\t\treturn this;\n\t\t}\n\n\t\tlerp(sh, alpha) {\n\t\t\tfor (let i = 0; i < 9; i++) {\n\t\t\t\tthis.coefficients[i].lerp(sh.coefficients[i], alpha);\n\t\t\t}\n\n\t\t\treturn this;\n\t\t}\n\n\t\tequals(sh) {\n\t\t\tfor (let i = 0; i < 9; i++) {\n\t\t\t\tif (!this.coefficients[i].equals(sh.coefficients[i])) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn true;\n\t\t}\n\n\t\tcopy(sh) {\n\t\t\treturn this.set(sh.coefficients);\n\t\t}\n\n\t\tclone() {\n\t\t\treturn new this.constructor().copy(this);\n\t\t}\n\n\t\tfromArray(array, offset = 0) {\n\t\t\tconst coefficients = this.coefficients;\n\n\t\t\tfor (let i = 0; i < 9; i++) {\n\t\t\t\tcoefficients[i].fromArray(array, offset + i * 3);\n\t\t\t}\n\n\t\t\treturn this;\n\t\t}\n\n\t\ttoArray(array = [], offset = 0) {\n\t\t\tconst coefficients = this.coefficients;\n\n\t\t\tfor (let i = 0; i < 9; i++) {\n\t\t\t\tcoefficients[i].toArray(array, offset + i * 3);\n\t\t\t}\n\n\t\t\treturn array;\n\t\t} // evaluate the basis functions\n\t\t// shBasis is an Array[ 9 ]\n\n\n\t\tstatic getBasisAt(normal, shBasis) {\n\t\t\t// normal is assumed to be unit length\n\t\t\tconst x = normal.x,\n\t\t\t\t\t\ty = normal.y,\n\t\t\t\t\t\tz = normal.z; // band 0\n\n\t\t\tshBasis[0] = 0.282095; // band 1\n\n\t\t\tshBasis[1] = 0.488603 * y;\n\t\t\tshBasis[2] = 0.488603 * z;\n\t\t\tshBasis[3] = 0.488603 * x; // band 2\n\n\t\t\tshBasis[4] = 1.092548 * x * y;\n\t\t\tshBasis[5] = 1.092548 * y * z;\n\t\t\tshBasis[6] = 0.315392 * (3 * z * z - 1);\n\t\t\tshBasis[7] = 1.092548 * x * z;\n\t\t\tshBasis[8] = 0.546274 * (x * x - y * y);\n\t\t}\n\n\t}\n\n\tSphericalHarmonics3.prototype.isSphericalHarmonics3 = true;\n\n\tclass LightProbe extends Light {\n\t\tconstructor(sh = new SphericalHarmonics3(), intensity = 1) {\n\t\t\tsuper(undefined, intensity);\n\t\t\tthis.sh = sh;\n\t\t}\n\n\t\tcopy(source) {\n\t\t\tsuper.copy(source);\n\t\t\tthis.sh.copy(source.sh);\n\t\t\treturn this;\n\t\t}\n\n\t\tfromJSON(json) {\n\t\t\tthis.intensity = json.intensity; // TODO: Move this bit to Light.fromJSON();\n\n\t\t\tthis.sh.fromArray(json.sh);\n\t\t\treturn this;\n\t\t}\n\n\t\ttoJSON(meta) {\n\t\t\tconst data = super.toJSON(meta);\n\t\t\tdata.object.sh = this.sh.toArray();\n\t\t\treturn data;\n\t\t}\n\n\t}\n\n\tLightProbe.prototype.isLightProbe = true;\n\n\tclass MaterialLoader extends Loader {\n\t\tconstructor(manager) {\n\t\t\tsuper(manager);\n\t\t\tthis.textures = {};\n\t\t}\n\n\t\tload(url, onLoad, onProgress, onError) {\n\t\t\tconst scope = this;\n\t\t\tconst loader = new FileLoader(scope.manager);\n\t\t\tloader.setPath(scope.path);\n\t\t\tloader.setRequestHeader(scope.requestHeader);\n\t\t\tloader.setWithCredentials(scope.withCredentials);\n\t\t\tloader.load(url, function (text) {\n\t\t\t\ttry {\n\t\t\t\t\tonLoad(scope.parse(JSON.parse(text)));\n\t\t\t\t} catch (e) {\n\t\t\t\t\tif (onError) {\n\t\t\t\t\t\tonError(e);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tconsole.error(e);\n\t\t\t\t\t}\n\n\t\t\t\t\tscope.manager.itemError(url);\n\t\t\t\t}\n\t\t\t}, onProgress, onError);\n\t\t}\n\n\t\tparse(json) {\n\t\t\tconst textures = this.textures;\n\n\t\t\tfunction getTexture(name) {\n\t\t\t\tif (textures[name] === undefined) {\n\t\t\t\t\tconsole.warn('THREE.MaterialLoader: Undefined texture', name);\n\t\t\t\t}\n\n\t\t\t\treturn textures[name];\n\t\t\t}\n\n\t\t\tconst material = new Materials[json.type]();\n\t\t\tif (json.uuid !== undefined) material.uuid = json.uuid;\n\t\t\tif (json.name !== undefined) material.name = json.name;\n\t\t\tif (json.color !== undefined && material.color !== undefined) material.color.setHex(json.color);\n\t\t\tif (json.roughness !== undefined) material.roughness = json.roughness;\n\t\t\tif (json.metalness !== undefined) material.metalness = json.metalness;\n\t\t\tif (json.sheen !== undefined) material.sheen = json.sheen;\n\t\t\tif (json.sheenColor !== undefined) material.sheenColor = new Color().setHex(json.sheenColor);\n\t\t\tif (json.sheenRoughness !== undefined) material.sheenRoughness = json.sheenRoughness;\n\t\t\tif (json.emissive !== undefined && material.emissive !== undefined) material.emissive.setHex(json.emissive);\n\t\t\tif (json.specular !== undefined && material.specular !== undefined) material.specular.setHex(json.specular);\n\t\t\tif (json.specularIntensity !== undefined) material.specularIntensity = json.specularIntensity;\n\t\t\tif (json.specularColor !== undefined && material.specularColor !== undefined) material.specularColor.setHex(json.specularColor);\n\t\t\tif (json.shininess !== undefined) material.shininess = json.shininess;\n\t\t\tif (json.clearcoat !== undefined) material.clearcoat = json.clearcoat;\n\t\t\tif (json.clearcoatRoughness !== undefined) material.clearcoatRoughness = json.clearcoatRoughness;\n\t\t\tif (json.transmission !== undefined) material.transmission = json.transmission;\n\t\t\tif (json.thickness !== undefined) material.thickness = json.thickness;\n\t\t\tif (json.attenuationDistance !== undefined) material.attenuationDistance = json.attenuationDistance;\n\t\t\tif (json.attenuationColor !== undefined && material.attenuationColor !== undefined) material.attenuationColor.setHex(json.attenuationColor);\n\t\t\tif (json.fog !== undefined) material.fog = json.fog;\n\t\t\tif (json.flatShading !== undefined) material.flatShading = json.flatShading;\n\t\t\tif (json.blending !== undefined) material.blending = json.blending;\n\t\t\tif (json.combine !== undefined) material.combine = json.combine;\n\t\t\tif (json.side !== undefined) material.side = json.side;\n\t\t\tif (json.shadowSide !== undefined) material.shadowSide = json.shadowSide;\n\t\t\tif (json.opacity !== undefined) material.opacity = json.opacity;\n\t\t\tif (json.format !== undefined) material.format = json.format;\n\t\t\tif (json.transparent !== undefined) material.transparent = json.transparent;\n\t\t\tif (json.alphaTest !== undefined) material.alphaTest = json.alphaTest;\n\t\t\tif (json.depthTest !== undefined) material.depthTest = json.depthTest;\n\t\t\tif (json.depthWrite !== undefined) material.depthWrite = json.depthWrite;\n\t\t\tif (json.colorWrite !== undefined) material.colorWrite = json.colorWrite;\n\t\t\tif (json.stencilWrite !== undefined) material.stencilWrite = json.stencilWrite;\n\t\t\tif (json.stencilWriteMask !== undefined) material.stencilWriteMask = json.stencilWriteMask;\n\t\t\tif (json.stencilFunc !== undefined) material.stencilFunc = json.stencilFunc;\n\t\t\tif (json.stencilRef !== undefined) material.stencilRef = json.stencilRef;\n\t\t\tif (json.stencilFuncMask !== undefined) material.stencilFuncMask = json.stencilFuncMask;\n\t\t\tif (json.stencilFail !== undefined) material.stencilFail = json.stencilFail;\n\t\t\tif (json.stencilZFail !== undefined) material.stencilZFail = json.stencilZFail;\n\t\t\tif (json.stencilZPass !== undefined) material.stencilZPass = json.stencilZPass;\n\t\t\tif (json.wireframe !== undefined) material.wireframe = json.wireframe;\n\t\t\tif (json.wireframeLinewidth !== undefined) material.wireframeLinewidth = json.wireframeLinewidth;\n\t\t\tif (json.wireframeLinecap !== undefined) material.wireframeLinecap = json.wireframeLinecap;\n\t\t\tif (json.wireframeLinejoin !== undefined) material.wireframeLinejoin = json.wireframeLinejoin;\n\t\t\tif (json.rotation !== undefined) material.rotation = json.rotation;\n\t\t\tif (json.linewidth !== 1) material.linewidth = json.linewidth;\n\t\t\tif (json.dashSize !== undefined) material.dashSize = json.dashSize;\n\t\t\tif (json.gapSize !== undefined) material.gapSize = json.gapSize;\n\t\t\tif (json.scale !== undefined) material.scale = json.scale;\n\t\t\tif (json.polygonOffset !== undefined) material.polygonOffset = json.polygonOffset;\n\t\t\tif (json.polygonOffsetFactor !== undefined) material.polygonOffsetFactor = json.polygonOffsetFactor;\n\t\t\tif (json.polygonOffsetUnits !== undefined) material.polygonOffsetUnits = json.polygonOffsetUnits;\n\t\t\tif (json.dithering !== undefined) material.dithering = json.dithering;\n\t\t\tif (json.alphaToCoverage !== undefined) material.alphaToCoverage = json.alphaToCoverage;\n\t\t\tif (json.premultipliedAlpha !== undefined) material.premultipliedAlpha = json.premultipliedAlpha;\n\t\t\tif (json.visible !== undefined) material.visible = json.visible;\n\t\t\tif (json.toneMapped !== undefined) material.toneMapped = json.toneMapped;\n\t\t\tif (json.userData !== undefined) material.userData = json.userData;\n\n\t\t\tif (json.vertexColors !== undefined) {\n\t\t\t\tif (typeof json.vertexColors === 'number') {\n\t\t\t\t\tmaterial.vertexColors = json.vertexColors > 0 ? true : false;\n\t\t\t\t} else {\n\t\t\t\t\tmaterial.vertexColors = json.vertexColors;\n\t\t\t\t}\n\t\t\t} // Shader Material\n\n\n\t\t\tif (json.uniforms !== undefined) {\n\t\t\t\tfor (const name in json.uniforms) {\n\t\t\t\t\tconst uniform = json.uniforms[name];\n\t\t\t\t\tmaterial.uniforms[name] = {};\n\n\t\t\t\t\tswitch (uniform.type) {\n\t\t\t\t\t\tcase 't':\n\t\t\t\t\t\t\tmaterial.uniforms[name].value = getTexture(uniform.value);\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'c':\n\t\t\t\t\t\t\tmaterial.uniforms[name].value = new Color().setHex(uniform.value);\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'v2':\n\t\t\t\t\t\t\tmaterial.uniforms[name].value = new Vector2().fromArray(uniform.value);\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'v3':\n\t\t\t\t\t\t\tmaterial.uniforms[name].value = new Vector3().fromArray(uniform.value);\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'v4':\n\t\t\t\t\t\t\tmaterial.uniforms[name].value = new Vector4().fromArray(uniform.value);\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'm3':\n\t\t\t\t\t\t\tmaterial.uniforms[name].value = new Matrix3().fromArray(uniform.value);\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'm4':\n\t\t\t\t\t\t\tmaterial.uniforms[name].value = new Matrix4().fromArray(uniform.value);\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tmaterial.uniforms[name].value = uniform.value;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (json.defines !== undefined) material.defines = json.defines;\n\t\t\tif (json.vertexShader !== undefined) material.vertexShader = json.vertexShader;\n\t\t\tif (json.fragmentShader !== undefined) material.fragmentShader = json.fragmentShader;\n\n\t\t\tif (json.extensions !== undefined) {\n\t\t\t\tfor (const key in json.extensions) {\n\t\t\t\t\tmaterial.extensions[key] = json.extensions[key];\n\t\t\t\t}\n\t\t\t} // Deprecated\n\n\n\t\t\tif (json.shading !== undefined) material.flatShading = json.shading === 1; // THREE.FlatShading\n\t\t\t// for PointsMaterial\n\n\t\t\tif (json.size !== undefined) material.size = json.size;\n\t\t\tif (json.sizeAttenuation !== undefined) material.sizeAttenuation = json.sizeAttenuation; // maps\n\n\t\t\tif (json.map !== undefined) material.map = getTexture(json.map);\n\t\t\tif (json.matcap !== undefined) material.matcap = getTexture(json.matcap);\n\t\t\tif (json.alphaMap !== undefined) material.alphaMap = getTexture(json.alphaMap);\n\t\t\tif (json.bumpMap !== undefined) material.bumpMap = getTexture(json.bumpMap);\n\t\t\tif (json.bumpScale !== undefined) material.bumpScale = json.bumpScale;\n\t\t\tif (json.normalMap !== undefined) material.normalMap = getTexture(json.normalMap);\n\t\t\tif (json.normalMapType !== undefined) material.normalMapType = json.normalMapType;\n\n\t\t\tif (json.normalScale !== undefined) {\n\t\t\t\tlet normalScale = json.normalScale;\n\n\t\t\t\tif (Array.isArray(normalScale) === false) {\n\t\t\t\t\t// Blender exporter used to export a scalar. See #7459\n\t\t\t\t\tnormalScale = [normalScale, normalScale];\n\t\t\t\t}\n\n\t\t\t\tmaterial.normalScale = new Vector2().fromArray(normalScale);\n\t\t\t}\n\n\t\t\tif (json.displacementMap !== undefined) material.displacementMap = getTexture(json.displacementMap);\n\t\t\tif (json.displacementScale !== undefined) material.displacementScale = json.displacementScale;\n\t\t\tif (json.displacementBias !== undefined) material.displacementBias = json.displacementBias;\n\t\t\tif (json.roughnessMap !== undefined) material.roughnessMap = getTexture(json.roughnessMap);\n\t\t\tif (json.metalnessMap !== undefined) material.metalnessMap = getTexture(json.metalnessMap);\n\t\t\tif (json.emissiveMap !== undefined) material.emissiveMap = getTexture(json.emissiveMap);\n\t\t\tif (json.emissiveIntensity !== undefined) material.emissiveIntensity = json.emissiveIntensity;\n\t\t\tif (json.specularMap !== undefined) material.specularMap = getTexture(json.specularMap);\n\t\t\tif (json.specularIntensityMap !== undefined) material.specularIntensityMap = getTexture(json.specularIntensityMap);\n\t\t\tif (json.specularColorMap !== undefined) material.specularColorMap = getTexture(json.specularColorMap);\n\t\t\tif (json.envMap !== undefined) material.envMap = getTexture(json.envMap);\n\t\t\tif (json.envMapIntensity !== undefined) material.envMapIntensity = json.envMapIntensity;\n\t\t\tif (json.reflectivity !== undefined) material.reflectivity = json.reflectivity;\n\t\t\tif (json.refractionRatio !== undefined) material.refractionRatio = json.refractionRatio;\n\t\t\tif (json.lightMap !== undefined) material.lightMap = getTexture(json.lightMap);\n\t\t\tif (json.lightMapIntensity !== undefined) material.lightMapIntensity = json.lightMapIntensity;\n\t\t\tif (json.aoMap !== undefined) material.aoMap = getTexture(json.aoMap);\n\t\t\tif (json.aoMapIntensity !== undefined) material.aoMapIntensity = json.aoMapIntensity;\n\t\t\tif (json.gradientMap !== undefined) material.gradientMap = getTexture(json.gradientMap);\n\t\t\tif (json.clearcoatMap !== undefined) material.clearcoatMap = getTexture(json.clearcoatMap);\n\t\t\tif (json.clearcoatRoughnessMap !== undefined) material.clearcoatRoughnessMap = getTexture(json.clearcoatRoughnessMap);\n\t\t\tif (json.clearcoatNormalMap !== undefined) material.clearcoatNormalMap = getTexture(json.clearcoatNormalMap);\n\t\t\tif (json.clearcoatNormalScale !== undefined) material.clearcoatNormalScale = new Vector2().fromArray(json.clearcoatNormalScale);\n\t\t\tif (json.transmissionMap !== undefined) material.transmissionMap = getTexture(json.transmissionMap);\n\t\t\tif (json.thicknessMap !== undefined) material.thicknessMap = getTexture(json.thicknessMap);\n\t\t\tif (json.sheenColorMap !== undefined) material.sheenColorMap = getTexture(json.sheenColorMap);\n\t\t\tif (json.sheenRoughnessMap !== undefined) material.sheenRoughnessMap = getTexture(json.sheenRoughnessMap);\n\t\t\treturn material;\n\t\t}\n\n\t\tsetTextures(value) {\n\t\t\tthis.textures = value;\n\t\t\treturn this;\n\t\t}\n\n\t}\n\n\tclass LoaderUtils {\n\t\tstatic decodeText(array) {\n\t\t\tif (typeof TextDecoder !== 'undefined') {\n\t\t\t\treturn new TextDecoder().decode(array);\n\t\t\t} // Avoid the String.fromCharCode.apply(null, array) shortcut, which\n\t\t\t// throws a \"maximum call stack size exceeded\" error for large arrays.\n\n\n\t\t\tlet s = '';\n\n\t\t\tfor (let i = 0, il = array.length; i < il; i++) {\n\t\t\t\t// Implicitly assumes little-endian.\n\t\t\t\ts += String.fromCharCode(array[i]);\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\t// merges multi-byte utf-8 characters.\n\t\t\t\treturn decodeURIComponent(escape(s));\n\t\t\t} catch (e) {\n\t\t\t\t// see #16358\n\t\t\t\treturn s;\n\t\t\t}\n\t\t}\n\n\t\tstatic extractUrlBase(url) {\n\t\t\tconst index = url.lastIndexOf('/');\n\t\t\tif (index === -1) return './';\n\t\t\treturn url.substr(0, index + 1);\n\t\t}\n\n\t\tstatic resolveURL(url, path) {\n\t\t\t// Invalid URL\n\t\t\tif (typeof url !== 'string' || url === '') return ''; // Host Relative URL\n\n\t\t\tif (/^https?:\\/\\//i.test(path) && /^\\//.test(url)) {\n\t\t\t\tpath = path.replace(/(^https?:\\/\\/[^\\/]+).*/i, '$1');\n\t\t\t} // Absolute URL http://,https://,//\n\n\n\t\t\tif (/^(https?:)?\\/\\//i.test(url)) return url; // Data URI\n\n\t\t\tif (/^data:.*,.*$/i.test(url)) return url; // Blob URL\n\n\t\t\tif (/^blob:.*$/i.test(url)) return url; // Relative URL\n\n\t\t\treturn path + url;\n\t\t}\n\n\t}\n\n\tclass InstancedBufferGeometry extends BufferGeometry {\n\t\tconstructor() {\n\t\t\tsuper();\n\t\t\tthis.type = 'InstancedBufferGeometry';\n\t\t\tthis.instanceCount = Infinity;\n\t\t}\n\n\t\tcopy(source) {\n\t\t\tsuper.copy(source);\n\t\t\tthis.instanceCount = source.instanceCount;\n\t\t\treturn this;\n\t\t}\n\n\t\tclone() {\n\t\t\treturn new this.constructor().copy(this);\n\t\t}\n\n\t\ttoJSON() {\n\t\t\tconst data = super.toJSON(this);\n\t\t\tdata.instanceCount = this.instanceCount;\n\t\t\tdata.isInstancedBufferGeometry = true;\n\t\t\treturn data;\n\t\t}\n\n\t}\n\n\tInstancedBufferGeometry.prototype.isInstancedBufferGeometry = true;\n\n\tclass BufferGeometryLoader extends Loader {\n\t\tconstructor(manager) {\n\t\t\tsuper(manager);\n\t\t}\n\n\t\tload(url, onLoad, onProgress, onError) {\n\t\t\tconst scope = this;\n\t\t\tconst loader = new FileLoader(scope.manager);\n\t\t\tloader.setPath(scope.path);\n\t\t\tloader.setRequestHeader(scope.requestHeader);\n\t\t\tloader.setWithCredentials(scope.withCredentials);\n\t\t\tloader.load(url, function (text) {\n\t\t\t\ttry {\n\t\t\t\t\tonLoad(scope.parse(JSON.parse(text)));\n\t\t\t\t} catch (e) {\n\t\t\t\t\tif (onError) {\n\t\t\t\t\t\tonError(e);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tconsole.error(e);\n\t\t\t\t\t}\n\n\t\t\t\t\tscope.manager.itemError(url);\n\t\t\t\t}\n\t\t\t}, onProgress, onError);\n\t\t}\n\n\t\tparse(json) {\n\t\t\tconst interleavedBufferMap = {};\n\t\t\tconst arrayBufferMap = {};\n\n\t\t\tfunction getInterleavedBuffer(json, uuid) {\n\t\t\t\tif (interleavedBufferMap[uuid] !== undefined) return interleavedBufferMap[uuid];\n\t\t\t\tconst interleavedBuffers = json.interleavedBuffers;\n\t\t\t\tconst interleavedBuffer = interleavedBuffers[uuid];\n\t\t\t\tconst buffer = getArrayBuffer(json, interleavedBuffer.buffer);\n\t\t\t\tconst array = getTypedArray(interleavedBuffer.type, buffer);\n\t\t\t\tconst ib = new InterleavedBuffer(array, interleavedBuffer.stride);\n\t\t\t\tib.uuid = interleavedBuffer.uuid;\n\t\t\t\tinterleavedBufferMap[uuid] = ib;\n\t\t\t\treturn ib;\n\t\t\t}\n\n\t\t\tfunction getArrayBuffer(json, uuid) {\n\t\t\t\tif (arrayBufferMap[uuid] !== undefined) return arrayBufferMap[uuid];\n\t\t\t\tconst arrayBuffers = json.arrayBuffers;\n\t\t\t\tconst arrayBuffer = arrayBuffers[uuid];\n\t\t\t\tconst ab = new Uint32Array(arrayBuffer).buffer;\n\t\t\t\tarrayBufferMap[uuid] = ab;\n\t\t\t\treturn ab;\n\t\t\t}\n\n\t\t\tconst geometry = json.isInstancedBufferGeometry ? new InstancedBufferGeometry() : new BufferGeometry();\n\t\t\tconst index = json.data.index;\n\n\t\t\tif (index !== undefined) {\n\t\t\t\tconst typedArray = getTypedArray(index.type, index.array);\n\t\t\t\tgeometry.setIndex(new BufferAttribute(typedArray, 1));\n\t\t\t}\n\n\t\t\tconst attributes = json.data.attributes;\n\n\t\t\tfor (const key in attributes) {\n\t\t\t\tconst attribute = attributes[key];\n\t\t\t\tlet bufferAttribute;\n\n\t\t\t\tif (attribute.isInterleavedBufferAttribute) {\n\t\t\t\t\tconst interleavedBuffer = getInterleavedBuffer(json.data, attribute.data);\n\t\t\t\t\tbufferAttribute = new InterleavedBufferAttribute(interleavedBuffer, attribute.itemSize, attribute.offset, attribute.normalized);\n\t\t\t\t} else {\n\t\t\t\t\tconst typedArray = getTypedArray(attribute.type, attribute.array);\n\t\t\t\t\tconst bufferAttributeConstr = attribute.isInstancedBufferAttribute ? InstancedBufferAttribute : BufferAttribute;\n\t\t\t\t\tbufferAttribute = new bufferAttributeConstr(typedArray, attribute.itemSize, attribute.normalized);\n\t\t\t\t}\n\n\t\t\t\tif (attribute.name !== undefined) bufferAttribute.name = attribute.name;\n\t\t\t\tif (attribute.usage !== undefined) bufferAttribute.setUsage(attribute.usage);\n\n\t\t\t\tif (attribute.updateRange !== undefined) {\n\t\t\t\t\tbufferAttribute.updateRange.offset = attribute.updateRange.offset;\n\t\t\t\t\tbufferAttribute.updateRange.count = attribute.updateRange.count;\n\t\t\t\t}\n\n\t\t\t\tgeometry.setAttribute(key, bufferAttribute);\n\t\t\t}\n\n\t\t\tconst morphAttributes = json.data.morphAttributes;\n\n\t\t\tif (morphAttributes) {\n\t\t\t\tfor (const key in morphAttributes) {\n\t\t\t\t\tconst attributeArray = morphAttributes[key];\n\t\t\t\t\tconst array = [];\n\n\t\t\t\t\tfor (let i = 0, il = attributeArray.length; i < il; i++) {\n\t\t\t\t\t\tconst attribute = attributeArray[i];\n\t\t\t\t\t\tlet bufferAttribute;\n\n\t\t\t\t\t\tif (attribute.isInterleavedBufferAttribute) {\n\t\t\t\t\t\t\tconst interleavedBuffer = getInterleavedBuffer(json.data, attribute.data);\n\t\t\t\t\t\t\tbufferAttribute = new InterleavedBufferAttribute(interleavedBuffer, attribute.itemSize, attribute.offset, attribute.normalized);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tconst typedArray = getTypedArray(attribute.type, attribute.array);\n\t\t\t\t\t\t\tbufferAttribute = new BufferAttribute(typedArray, attribute.itemSize, attribute.normalized);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (attribute.name !== undefined) bufferAttribute.name = attribute.name;\n\t\t\t\t\t\tarray.push(bufferAttribute);\n\t\t\t\t\t}\n\n\t\t\t\t\tgeometry.morphAttributes[key] = array;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst morphTargetsRelative = json.data.morphTargetsRelative;\n\n\t\t\tif (morphTargetsRelative) {\n\t\t\t\tgeometry.morphTargetsRelative = true;\n\t\t\t}\n\n\t\t\tconst groups = json.data.groups || json.data.drawcalls || json.data.offsets;\n\n\t\t\tif (groups !== undefined) {\n\t\t\t\tfor (let i = 0, n = groups.length; i !== n; ++i) {\n\t\t\t\t\tconst group = groups[i];\n\t\t\t\t\tgeometry.addGroup(group.start, group.count, group.materialIndex);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst boundingSphere = json.data.boundingSphere;\n\n\t\t\tif (boundingSphere !== undefined) {\n\t\t\t\tconst center = new Vector3();\n\n\t\t\t\tif (boundingSphere.center !== undefined) {\n\t\t\t\t\tcenter.fromArray(boundingSphere.center);\n\t\t\t\t}\n\n\t\t\t\tgeometry.boundingSphere = new Sphere(center, boundingSphere.radius);\n\t\t\t}\n\n\t\t\tif (json.name) geometry.name = json.name;\n\t\t\tif (json.userData) geometry.userData = json.userData;\n\t\t\treturn geometry;\n\t\t}\n\n\t}\n\n\tclass ObjectLoader extends Loader {\n\t\tconstructor(manager) {\n\t\t\tsuper(manager);\n\t\t}\n\n\t\tload(url, onLoad, onProgress, onError) {\n\t\t\tconst scope = this;\n\t\t\tconst path = this.path === '' ? LoaderUtils.extractUrlBase(url) : this.path;\n\t\t\tthis.resourcePath = this.resourcePath || path;\n\t\t\tconst loader = new FileLoader(this.manager);\n\t\t\tloader.setPath(this.path);\n\t\t\tloader.setRequestHeader(this.requestHeader);\n\t\t\tloader.setWithCredentials(this.withCredentials);\n\t\t\tloader.load(url, function (text) {\n\t\t\t\tlet json = null;\n\n\t\t\t\ttry {\n\t\t\t\t\tjson = JSON.parse(text);\n\t\t\t\t} catch (error) {\n\t\t\t\t\tif (onError !== undefined) onError(error);\n\t\t\t\t\tconsole.error('THREE:ObjectLoader: Can\\'t parse ' + url + '.', error.message);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tconst metadata = json.metadata;\n\n\t\t\t\tif (metadata === undefined || metadata.type === undefined || metadata.type.toLowerCase() === 'geometry') {\n\t\t\t\t\tconsole.error('THREE.ObjectLoader: Can\\'t load ' + url);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tscope.parse(json, onLoad);\n\t\t\t}, onProgress, onError);\n\t\t}\n\n\t\tasync loadAsync(url, onProgress) {\n\t\t\tconst scope = this;\n\t\t\tconst path = this.path === '' ? LoaderUtils.extractUrlBase(url) : this.path;\n\t\t\tthis.resourcePath = this.resourcePath || path;\n\t\t\tconst loader = new FileLoader(this.manager);\n\t\t\tloader.setPath(this.path);\n\t\t\tloader.setRequestHeader(this.requestHeader);\n\t\t\tloader.setWithCredentials(this.withCredentials);\n\t\t\tconst text = await loader.loadAsync(url, onProgress);\n\t\t\tconst json = JSON.parse(text);\n\t\t\tconst metadata = json.metadata;\n\n\t\t\tif (metadata === undefined || metadata.type === undefined || metadata.type.toLowerCase() === 'geometry') {\n\t\t\t\tthrow new Error('THREE.ObjectLoader: Can\\'t load ' + url);\n\t\t\t}\n\n\t\t\treturn await scope.parseAsync(json);\n\t\t}\n\n\t\tparse(json, onLoad) {\n\t\t\tconst animations = this.parseAnimations(json.animations);\n\t\t\tconst shapes = this.parseShapes(json.shapes);\n\t\t\tconst geometries = this.parseGeometries(json.geometries, shapes);\n\t\t\tconst images = this.parseImages(json.images, function () {\n\t\t\t\tif (onLoad !== undefined) onLoad(object);\n\t\t\t});\n\t\t\tconst textures = this.parseTextures(json.textures, images);\n\t\t\tconst materials = this.parseMaterials(json.materials, textures);\n\t\t\tconst object = this.parseObject(json.object, geometries, materials, textures, animations);\n\t\t\tconst skeletons = this.parseSkeletons(json.skeletons, object);\n\t\t\tthis.bindSkeletons(object, skeletons); //\n\n\t\t\tif (onLoad !== undefined) {\n\t\t\t\tlet hasImages = false;\n\n\t\t\t\tfor (const uuid in images) {\n\t\t\t\t\tif (images[uuid] instanceof HTMLImageElement) {\n\t\t\t\t\t\thasImages = true;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (hasImages === false) onLoad(object);\n\t\t\t}\n\n\t\t\treturn object;\n\t\t}\n\n\t\tasync parseAsync(json) {\n\t\t\tconst animations = this.parseAnimations(json.animations);\n\t\t\tconst shapes = this.parseShapes(json.shapes);\n\t\t\tconst geometries = this.parseGeometries(json.geometries, shapes);\n\t\t\tconst images = await this.parseImagesAsync(json.images);\n\t\t\tconst textures = this.parseTextures(json.textures, images);\n\t\t\tconst materials = this.parseMaterials(json.materials, textures);\n\t\t\tconst object = this.parseObject(json.object, geometries, materials, textures, animations);\n\t\t\tconst skeletons = this.parseSkeletons(json.skeletons, object);\n\t\t\tthis.bindSkeletons(object, skeletons);\n\t\t\treturn object;\n\t\t}\n\n\t\tparseShapes(json) {\n\t\t\tconst shapes = {};\n\n\t\t\tif (json !== undefined) {\n\t\t\t\tfor (let i = 0, l = json.length; i < l; i++) {\n\t\t\t\t\tconst shape = new Shape().fromJSON(json[i]);\n\t\t\t\t\tshapes[shape.uuid] = shape;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn shapes;\n\t\t}\n\n\t\tparseSkeletons(json, object) {\n\t\t\tconst skeletons = {};\n\t\t\tconst bones = {}; // generate bone lookup table\n\n\t\t\tobject.traverse(function (child) {\n\t\t\t\tif (child.isBone) bones[child.uuid] = child;\n\t\t\t}); // create skeletons\n\n\t\t\tif (json !== undefined) {\n\t\t\t\tfor (let i = 0, l = json.length; i < l; i++) {\n\t\t\t\t\tconst skeleton = new Skeleton().fromJSON(json[i], bones);\n\t\t\t\t\tskeletons[skeleton.uuid] = skeleton;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn skeletons;\n\t\t}\n\n\t\tparseGeometries(json, shapes) {\n\t\t\tconst geometries = {};\n\n\t\t\tif (json !== undefined) {\n\t\t\t\tconst bufferGeometryLoader = new BufferGeometryLoader();\n\n\t\t\t\tfor (let i = 0, l = json.length; i < l; i++) {\n\t\t\t\t\tlet geometry;\n\t\t\t\t\tconst data = json[i];\n\n\t\t\t\t\tswitch (data.type) {\n\t\t\t\t\t\tcase 'BufferGeometry':\n\t\t\t\t\t\tcase 'InstancedBufferGeometry':\n\t\t\t\t\t\t\tgeometry = bufferGeometryLoader.parse(data);\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'Geometry':\n\t\t\t\t\t\t\tconsole.error('THREE.ObjectLoader: The legacy Geometry type is no longer supported.');\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tif (data.type in Geometries) {\n\t\t\t\t\t\t\t\tgeometry = Geometries[data.type].fromJSON(data, shapes);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tconsole.warn(`THREE.ObjectLoader: Unsupported geometry type \"${data.type}\"`);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tgeometry.uuid = data.uuid;\n\t\t\t\t\tif (data.name !== undefined) geometry.name = data.name;\n\t\t\t\t\tif (geometry.isBufferGeometry === true && data.userData !== undefined) geometry.userData = data.userData;\n\t\t\t\t\tgeometries[data.uuid] = geometry;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn geometries;\n\t\t}\n\n\t\tparseMaterials(json, textures) {\n\t\t\tconst cache = {}; // MultiMaterial\n\n\t\t\tconst materials = {};\n\n\t\t\tif (json !== undefined) {\n\t\t\t\tconst loader = new MaterialLoader();\n\t\t\t\tloader.setTextures(textures);\n\n\t\t\t\tfor (let i = 0, l = json.length; i < l; i++) {\n\t\t\t\t\tconst data = json[i];\n\n\t\t\t\t\tif (data.type === 'MultiMaterial') {\n\t\t\t\t\t\t// Deprecated\n\t\t\t\t\t\tconst array = [];\n\n\t\t\t\t\t\tfor (let j = 0; j < data.materials.length; j++) {\n\t\t\t\t\t\t\tconst material = data.materials[j];\n\n\t\t\t\t\t\t\tif (cache[material.uuid] === undefined) {\n\t\t\t\t\t\t\t\tcache[material.uuid] = loader.parse(material);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tarray.push(cache[material.uuid]);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tmaterials[data.uuid] = array;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (cache[data.uuid] === undefined) {\n\t\t\t\t\t\t\tcache[data.uuid] = loader.parse(data);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tmaterials[data.uuid] = cache[data.uuid];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn materials;\n\t\t}\n\n\t\tparseAnimations(json) {\n\t\t\tconst animations = {};\n\n\t\t\tif (json !== undefined) {\n\t\t\t\tfor (let i = 0; i < json.length; i++) {\n\t\t\t\t\tconst data = json[i];\n\t\t\t\t\tconst clip = AnimationClip.parse(data);\n\t\t\t\t\tanimations[clip.uuid] = clip;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn animations;\n\t\t}\n\n\t\tparseImages(json, onLoad) {\n\t\t\tconst scope = this;\n\t\t\tconst images = {};\n\t\t\tlet loader;\n\n\t\t\tfunction loadImage(url) {\n\t\t\t\tscope.manager.itemStart(url);\n\t\t\t\treturn loader.load(url, function () {\n\t\t\t\t\tscope.manager.itemEnd(url);\n\t\t\t\t}, undefined, function () {\n\t\t\t\t\tscope.manager.itemError(url);\n\t\t\t\t\tscope.manager.itemEnd(url);\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tfunction deserializeImage(image) {\n\t\t\t\tif (typeof image === 'string') {\n\t\t\t\t\tconst url = image;\n\t\t\t\t\tconst path = /^(\\/\\/)|([a-z]+:(\\/\\/)?)/i.test(url) ? url : scope.resourcePath + url;\n\t\t\t\t\treturn loadImage(path);\n\t\t\t\t} else {\n\t\t\t\t\tif (image.data) {\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\tdata: getTypedArray(image.type, image.data),\n\t\t\t\t\t\t\twidth: image.width,\n\t\t\t\t\t\t\theight: image.height\n\t\t\t\t\t\t};\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn null;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (json !== undefined && json.length > 0) {\n\t\t\t\tconst manager = new LoadingManager(onLoad);\n\t\t\t\tloader = new ImageLoader(manager);\n\t\t\t\tloader.setCrossOrigin(this.crossOrigin);\n\n\t\t\t\tfor (let i = 0, il = json.length; i < il; i++) {\n\t\t\t\t\tconst image = json[i];\n\t\t\t\t\tconst url = image.url;\n\n\t\t\t\t\tif (Array.isArray(url)) {\n\t\t\t\t\t\t// load array of images e.g CubeTexture\n\t\t\t\t\t\timages[image.uuid] = [];\n\n\t\t\t\t\t\tfor (let j = 0, jl = url.length; j < jl; j++) {\n\t\t\t\t\t\t\tconst currentUrl = url[j];\n\t\t\t\t\t\t\tconst deserializedImage = deserializeImage(currentUrl);\n\n\t\t\t\t\t\t\tif (deserializedImage !== null) {\n\t\t\t\t\t\t\t\tif (deserializedImage instanceof HTMLImageElement) {\n\t\t\t\t\t\t\t\t\timages[image.uuid].push(deserializedImage);\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t// special case: handle array of data textures for cube textures\n\t\t\t\t\t\t\t\t\timages[image.uuid].push(new DataTexture(deserializedImage.data, deserializedImage.width, deserializedImage.height));\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// load single image\n\t\t\t\t\t\tconst deserializedImage = deserializeImage(image.url);\n\n\t\t\t\t\t\tif (deserializedImage !== null) {\n\t\t\t\t\t\t\timages[image.uuid] = deserializedImage;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn images;\n\t\t}\n\n\t\tasync parseImagesAsync(json) {\n\t\t\tconst scope = this;\n\t\t\tconst images = {};\n\t\t\tlet loader;\n\n\t\t\tasync function deserializeImage(image) {\n\t\t\t\tif (typeof image === 'string') {\n\t\t\t\t\tconst url = image;\n\t\t\t\t\tconst path = /^(\\/\\/)|([a-z]+:(\\/\\/)?)/i.test(url) ? url : scope.resourcePath + url;\n\t\t\t\t\treturn await loader.loadAsync(path);\n\t\t\t\t} else {\n\t\t\t\t\tif (image.data) {\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\tdata: getTypedArray(image.type, image.data),\n\t\t\t\t\t\t\twidth: image.width,\n\t\t\t\t\t\t\theight: image.height\n\t\t\t\t\t\t};\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn null;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (json !== undefined && json.length > 0) {\n\t\t\t\tloader = new ImageLoader(this.manager);\n\t\t\t\tloader.setCrossOrigin(this.crossOrigin);\n\n\t\t\t\tfor (let i = 0, il = json.length; i < il; i++) {\n\t\t\t\t\tconst image = json[i];\n\t\t\t\t\tconst url = image.url;\n\n\t\t\t\t\tif (Array.isArray(url)) {\n\t\t\t\t\t\t// load array of images e.g CubeTexture\n\t\t\t\t\t\timages[image.uuid] = [];\n\n\t\t\t\t\t\tfor (let j = 0, jl = url.length; j < jl; j++) {\n\t\t\t\t\t\t\tconst currentUrl = url[j];\n\t\t\t\t\t\t\tconst deserializedImage = await deserializeImage(currentUrl);\n\n\t\t\t\t\t\t\tif (deserializedImage !== null) {\n\t\t\t\t\t\t\t\tif (deserializedImage instanceof HTMLImageElement) {\n\t\t\t\t\t\t\t\t\timages[image.uuid].push(deserializedImage);\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t// special case: handle array of data textures for cube textures\n\t\t\t\t\t\t\t\t\timages[image.uuid].push(new DataTexture(deserializedImage.data, deserializedImage.width, deserializedImage.height));\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// load single image\n\t\t\t\t\t\tconst deserializedImage = await deserializeImage(image.url);\n\n\t\t\t\t\t\tif (deserializedImage !== null) {\n\t\t\t\t\t\t\timages[image.uuid] = deserializedImage;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn images;\n\t\t}\n\n\t\tparseTextures(json, images) {\n\t\t\tfunction parseConstant(value, type) {\n\t\t\t\tif (typeof value === 'number') return value;\n\t\t\t\tconsole.warn('THREE.ObjectLoader.parseTexture: Constant should be in numeric form.', value);\n\t\t\t\treturn type[value];\n\t\t\t}\n\n\t\t\tconst textures = {};\n\n\t\t\tif (json !== undefined) {\n\t\t\t\tfor (let i = 0, l = json.length; i < l; i++) {\n\t\t\t\t\tconst data = json[i];\n\n\t\t\t\t\tif (data.image === undefined) {\n\t\t\t\t\t\tconsole.warn('THREE.ObjectLoader: No \"image\" specified for', data.uuid);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (images[data.image] === undefined) {\n\t\t\t\t\t\tconsole.warn('THREE.ObjectLoader: Undefined image', data.image);\n\t\t\t\t\t}\n\n\t\t\t\t\tlet texture;\n\t\t\t\t\tconst image = images[data.image];\n\n\t\t\t\t\tif (Array.isArray(image)) {\n\t\t\t\t\t\ttexture = new CubeTexture(image);\n\t\t\t\t\t\tif (image.length === 6) texture.needsUpdate = true;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (image && image.data) {\n\t\t\t\t\t\t\ttexture = new DataTexture(image.data, image.width, image.height);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\ttexture = new Texture(image);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (image) texture.needsUpdate = true; // textures can have undefined image data\n\t\t\t\t\t}\n\n\t\t\t\t\ttexture.uuid = data.uuid;\n\t\t\t\t\tif (data.name !== undefined) texture.name = data.name;\n\t\t\t\t\tif (data.mapping !== undefined) texture.mapping = parseConstant(data.mapping, TEXTURE_MAPPING);\n\t\t\t\t\tif (data.offset !== undefined) texture.offset.fromArray(data.offset);\n\t\t\t\t\tif (data.repeat !== undefined) texture.repeat.fromArray(data.repeat);\n\t\t\t\t\tif (data.center !== undefined) texture.center.fromArray(data.center);\n\t\t\t\t\tif (data.rotation !== undefined) texture.rotation = data.rotation;\n\n\t\t\t\t\tif (data.wrap !== undefined) {\n\t\t\t\t\t\ttexture.wrapS = parseConstant(data.wrap[0], TEXTURE_WRAPPING);\n\t\t\t\t\t\ttexture.wrapT = parseConstant(data.wrap[1], TEXTURE_WRAPPING);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (data.format !== undefined) texture.format = data.format;\n\t\t\t\t\tif (data.type !== undefined) texture.type = data.type;\n\t\t\t\t\tif (data.encoding !== undefined) texture.encoding = data.encoding;\n\t\t\t\t\tif (data.minFilter !== undefined) texture.minFilter = parseConstant(data.minFilter, TEXTURE_FILTER);\n\t\t\t\t\tif (data.magFilter !== undefined) texture.magFilter = parseConstant(data.magFilter, TEXTURE_FILTER);\n\t\t\t\t\tif (data.anisotropy !== undefined) texture.anisotropy = data.anisotropy;\n\t\t\t\t\tif (data.flipY !== undefined) texture.flipY = data.flipY;\n\t\t\t\t\tif (data.premultiplyAlpha !== undefined) texture.premultiplyAlpha = data.premultiplyAlpha;\n\t\t\t\t\tif (data.unpackAlignment !== undefined) texture.unpackAlignment = data.unpackAlignment;\n\t\t\t\t\tif (data.userData !== undefined) texture.userData = data.userData;\n\t\t\t\t\ttextures[data.uuid] = texture;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn textures;\n\t\t}\n\n\t\tparseObject(data, geometries, materials, textures, animations) {\n\t\t\tlet object;\n\n\t\t\tfunction getGeometry(name) {\n\t\t\t\tif (geometries[name] === undefined) {\n\t\t\t\t\tconsole.warn('THREE.ObjectLoader: Undefined geometry', name);\n\t\t\t\t}\n\n\t\t\t\treturn geometries[name];\n\t\t\t}\n\n\t\t\tfunction getMaterial(name) {\n\t\t\t\tif (name === undefined) return undefined;\n\n\t\t\t\tif (Array.isArray(name)) {\n\t\t\t\t\tconst array = [];\n\n\t\t\t\t\tfor (let i = 0, l = name.length; i < l; i++) {\n\t\t\t\t\t\tconst uuid = name[i];\n\n\t\t\t\t\t\tif (materials[uuid] === undefined) {\n\t\t\t\t\t\t\tconsole.warn('THREE.ObjectLoader: Undefined material', uuid);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tarray.push(materials[uuid]);\n\t\t\t\t\t}\n\n\t\t\t\t\treturn array;\n\t\t\t\t}\n\n\t\t\t\tif (materials[name] === undefined) {\n\t\t\t\t\tconsole.warn('THREE.ObjectLoader: Undefined material', name);\n\t\t\t\t}\n\n\t\t\t\treturn materials[name];\n\t\t\t}\n\n\t\t\tfunction getTexture(uuid) {\n\t\t\t\tif (textures[uuid] === undefined) {\n\t\t\t\t\tconsole.warn('THREE.ObjectLoader: Undefined texture', uuid);\n\t\t\t\t}\n\n\t\t\t\treturn textures[uuid];\n\t\t\t}\n\n\t\t\tlet geometry, material;\n\n\t\t\tswitch (data.type) {\n\t\t\t\tcase 'Scene':\n\t\t\t\t\tobject = new Scene();\n\n\t\t\t\t\tif (data.background !== undefined) {\n\t\t\t\t\t\tif (Number.isInteger(data.background)) {\n\t\t\t\t\t\t\tobject.background = new Color(data.background);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tobject.background = getTexture(data.background);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif (data.environment !== undefined) {\n\t\t\t\t\t\tobject.environment = getTexture(data.environment);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (data.fog !== undefined) {\n\t\t\t\t\t\tif (data.fog.type === 'Fog') {\n\t\t\t\t\t\t\tobject.fog = new Fog(data.fog.color, data.fog.near, data.fog.far);\n\t\t\t\t\t\t} else if (data.fog.type === 'FogExp2') {\n\t\t\t\t\t\t\tobject.fog = new FogExp2(data.fog.color, data.fog.density);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'PerspectiveCamera':\n\t\t\t\t\tobject = new PerspectiveCamera(data.fov, data.aspect, data.near, data.far);\n\t\t\t\t\tif (data.focus !== undefined) object.focus = data.focus;\n\t\t\t\t\tif (data.zoom !== undefined) object.zoom = data.zoom;\n\t\t\t\t\tif (data.filmGauge !== undefined) object.filmGauge = data.filmGauge;\n\t\t\t\t\tif (data.filmOffset !== undefined) object.filmOffset = data.filmOffset;\n\t\t\t\t\tif (data.view !== undefined) object.view = Object.assign({}, data.view);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'OrthographicCamera':\n\t\t\t\t\tobject = new OrthographicCamera(data.left, data.right, data.top, data.bottom, data.near, data.far);\n\t\t\t\t\tif (data.zoom !== undefined) object.zoom = data.zoom;\n\t\t\t\t\tif (data.view !== undefined) object.view = Object.assign({}, data.view);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'AmbientLight':\n\t\t\t\t\tobject = new AmbientLight(data.color, data.intensity);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'DirectionalLight':\n\t\t\t\t\tobject = new DirectionalLight(data.color, data.intensity);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'PointLight':\n\t\t\t\t\tobject = new PointLight(data.color, data.intensity, data.distance, data.decay);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'RectAreaLight':\n\t\t\t\t\tobject = new RectAreaLight(data.color, data.intensity, data.width, data.height);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'SpotLight':\n\t\t\t\t\tobject = new SpotLight(data.color, data.intensity, data.distance, data.angle, data.penumbra, data.decay);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'HemisphereLight':\n\t\t\t\t\tobject = new HemisphereLight(data.color, data.groundColor, data.intensity);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'LightProbe':\n\t\t\t\t\tobject = new LightProbe().fromJSON(data);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'SkinnedMesh':\n\t\t\t\t\tgeometry = getGeometry(data.geometry);\n\t\t\t\t\tmaterial = getMaterial(data.material);\n\t\t\t\t\tobject = new SkinnedMesh(geometry, material);\n\t\t\t\t\tif (data.bindMode !== undefined) object.bindMode = data.bindMode;\n\t\t\t\t\tif (data.bindMatrix !== undefined) object.bindMatrix.fromArray(data.bindMatrix);\n\t\t\t\t\tif (data.skeleton !== undefined) object.skeleton = data.skeleton;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'Mesh':\n\t\t\t\t\tgeometry = getGeometry(data.geometry);\n\t\t\t\t\tmaterial = getMaterial(data.material);\n\t\t\t\t\tobject = new Mesh(geometry, material);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'InstancedMesh':\n\t\t\t\t\tgeometry = getGeometry(data.geometry);\n\t\t\t\t\tmaterial = getMaterial(data.material);\n\t\t\t\t\tconst count = data.count;\n\t\t\t\t\tconst instanceMatrix = data.instanceMatrix;\n\t\t\t\t\tconst instanceColor = data.instanceColor;\n\t\t\t\t\tobject = new InstancedMesh(geometry, material, count);\n\t\t\t\t\tobject.instanceMatrix = new InstancedBufferAttribute(new Float32Array(instanceMatrix.array), 16);\n\t\t\t\t\tif (instanceColor !== undefined) object.instanceColor = new InstancedBufferAttribute(new Float32Array(instanceColor.array), instanceColor.itemSize);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'LOD':\n\t\t\t\t\tobject = new LOD();\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'Line':\n\t\t\t\t\tobject = new Line(getGeometry(data.geometry), getMaterial(data.material));\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'LineLoop':\n\t\t\t\t\tobject = new LineLoop(getGeometry(data.geometry), getMaterial(data.material));\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'LineSegments':\n\t\t\t\t\tobject = new LineSegments(getGeometry(data.geometry), getMaterial(data.material));\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'PointCloud':\n\t\t\t\tcase 'Points':\n\t\t\t\t\tobject = new Points(getGeometry(data.geometry), getMaterial(data.material));\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'Sprite':\n\t\t\t\t\tobject = new Sprite(getMaterial(data.material));\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'Group':\n\t\t\t\t\tobject = new Group();\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'Bone':\n\t\t\t\t\tobject = new Bone();\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\t\t\t\t\tobject = new Object3D();\n\t\t\t}\n\n\t\t\tobject.uuid = data.uuid;\n\t\t\tif (data.name !== undefined) object.name = data.name;\n\n\t\t\tif (data.matrix !== undefined) {\n\t\t\t\tobject.matrix.fromArray(data.matrix);\n\t\t\t\tif (data.matrixAutoUpdate !== undefined) object.matrixAutoUpdate = data.matrixAutoUpdate;\n\t\t\t\tif (object.matrixAutoUpdate) object.matrix.decompose(object.position, object.quaternion, object.scale);\n\t\t\t} else {\n\t\t\t\tif (data.position !== undefined) object.position.fromArray(data.position);\n\t\t\t\tif (data.rotation !== undefined) object.rotation.fromArray(data.rotation);\n\t\t\t\tif (data.quaternion !== undefined) object.quaternion.fromArray(data.quaternion);\n\t\t\t\tif (data.scale !== undefined) object.scale.fromArray(data.scale);\n\t\t\t}\n\n\t\t\tif (data.castShadow !== undefined) object.castShadow = data.castShadow;\n\t\t\tif (data.receiveShadow !== undefined) object.receiveShadow = data.receiveShadow;\n\n\t\t\tif (data.shadow) {\n\t\t\t\tif (data.shadow.bias !== undefined) object.shadow.bias = data.shadow.bias;\n\t\t\t\tif (data.shadow.normalBias !== undefined) object.shadow.normalBias = data.shadow.normalBias;\n\t\t\t\tif (data.shadow.radius !== undefined) object.shadow.radius = data.shadow.radius;\n\t\t\t\tif (data.shadow.mapSize !== undefined) object.shadow.mapSize.fromArray(data.shadow.mapSize);\n\t\t\t\tif (data.shadow.camera !== undefined) object.shadow.camera = this.parseObject(data.shadow.camera);\n\t\t\t}\n\n\t\t\tif (data.visible !== undefined) object.visible = data.visible;\n\t\t\tif (data.frustumCulled !== undefined) object.frustumCulled = data.frustumCulled;\n\t\t\tif (data.renderOrder !== undefined) object.renderOrder = data.renderOrder;\n\t\t\tif (data.userData !== undefined) object.userData = data.userData;\n\t\t\tif (data.layers !== undefined) object.layers.mask = data.layers;\n\n\t\t\tif (data.children !== undefined) {\n\t\t\t\tconst children = data.children;\n\n\t\t\t\tfor (let i = 0; i < children.length; i++) {\n\t\t\t\t\tobject.add(this.parseObject(children[i], geometries, materials, textures, animations));\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (data.animations !== undefined) {\n\t\t\t\tconst objectAnimations = data.animations;\n\n\t\t\t\tfor (let i = 0; i < objectAnimations.length; i++) {\n\t\t\t\t\tconst uuid = objectAnimations[i];\n\t\t\t\t\tobject.animations.push(animations[uuid]);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (data.type === 'LOD') {\n\t\t\t\tif (data.autoUpdate !== undefined) object.autoUpdate = data.autoUpdate;\n\t\t\t\tconst levels = data.levels;\n\n\t\t\t\tfor (let l = 0; l < levels.length; l++) {\n\t\t\t\t\tconst level = levels[l];\n\t\t\t\t\tconst child = object.getObjectByProperty('uuid', level.object);\n\n\t\t\t\t\tif (child !== undefined) {\n\t\t\t\t\t\tobject.addLevel(child, level.distance);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn object;\n\t\t}\n\n\t\tbindSkeletons(object, skeletons) {\n\t\t\tif (Object.keys(skeletons).length === 0) return;\n\t\t\tobject.traverse(function (child) {\n\t\t\t\tif (child.isSkinnedMesh === true && child.skeleton !== undefined) {\n\t\t\t\t\tconst skeleton = skeletons[child.skeleton];\n\n\t\t\t\t\tif (skeleton === undefined) {\n\t\t\t\t\t\tconsole.warn('THREE.ObjectLoader: No skeleton found with UUID:', child.skeleton);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tchild.bind(skeleton, child.bindMatrix);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t\t/* DEPRECATED */\n\n\n\t\tsetTexturePath(value) {\n\t\t\tconsole.warn('THREE.ObjectLoader: .setTexturePath() has been renamed to .setResourcePath().');\n\t\t\treturn this.setResourcePath(value);\n\t\t}\n\n\t}\n\n\tconst TEXTURE_MAPPING = {\n\t\tUVMapping: UVMapping,\n\t\tCubeReflectionMapping: CubeReflectionMapping,\n\t\tCubeRefractionMapping: CubeRefractionMapping,\n\t\tEquirectangularReflectionMapping: EquirectangularReflectionMapping,\n\t\tEquirectangularRefractionMapping: EquirectangularRefractionMapping,\n\t\tCubeUVReflectionMapping: CubeUVReflectionMapping,\n\t\tCubeUVRefractionMapping: CubeUVRefractionMapping\n\t};\n\tconst TEXTURE_WRAPPING = {\n\t\tRepeatWrapping: RepeatWrapping,\n\t\tClampToEdgeWrapping: ClampToEdgeWrapping,\n\t\tMirroredRepeatWrapping: MirroredRepeatWrapping\n\t};\n\tconst TEXTURE_FILTER = {\n\t\tNearestFilter: NearestFilter,\n\t\tNearestMipmapNearestFilter: NearestMipmapNearestFilter,\n\t\tNearestMipmapLinearFilter: NearestMipmapLinearFilter,\n\t\tLinearFilter: LinearFilter,\n\t\tLinearMipmapNearestFilter: LinearMipmapNearestFilter,\n\t\tLinearMipmapLinearFilter: LinearMipmapLinearFilter\n\t};\n\n\tclass ImageBitmapLoader extends Loader {\n\t\tconstructor(manager) {\n\t\t\tsuper(manager);\n\n\t\t\tif (typeof createImageBitmap === 'undefined') {\n\t\t\t\tconsole.warn('THREE.ImageBitmapLoader: createImageBitmap() not supported.');\n\t\t\t}\n\n\t\t\tif (typeof fetch === 'undefined') {\n\t\t\t\tconsole.warn('THREE.ImageBitmapLoader: fetch() not supported.');\n\t\t\t}\n\n\t\t\tthis.options = {\n\t\t\t\tpremultiplyAlpha: 'none'\n\t\t\t};\n\t\t}\n\n\t\tsetOptions(options) {\n\t\t\tthis.options = options;\n\t\t\treturn this;\n\t\t}\n\n\t\tload(url, onLoad, onProgress, onError) {\n\t\t\tif (url === undefined) url = '';\n\t\t\tif (this.path !== undefined) url = this.path + url;\n\t\t\turl = this.manager.resolveURL(url);\n\t\t\tconst scope = this;\n\t\t\tconst cached = Cache.get(url);\n\n\t\t\tif (cached !== undefined) {\n\t\t\t\tscope.manager.itemStart(url);\n\t\t\t\tsetTimeout(function () {\n\t\t\t\t\tif (onLoad) onLoad(cached);\n\t\t\t\t\tscope.manager.itemEnd(url);\n\t\t\t\t}, 0);\n\t\t\t\treturn cached;\n\t\t\t}\n\n\t\t\tconst fetchOptions = {};\n\t\t\tfetchOptions.credentials = this.crossOrigin === 'anonymous' ? 'same-origin' : 'include';\n\t\t\tfetchOptions.headers = this.requestHeader;\n\t\t\tfetch(url, fetchOptions).then(function (res) {\n\t\t\t\treturn res.blob();\n\t\t\t}).then(function (blob) {\n\t\t\t\treturn createImageBitmap(blob, Object.assign(scope.options, {\n\t\t\t\t\tcolorSpaceConversion: 'none'\n\t\t\t\t}));\n\t\t\t}).then(function (imageBitmap) {\n\t\t\t\tCache.add(url, imageBitmap);\n\t\t\t\tif (onLoad) onLoad(imageBitmap);\n\t\t\t\tscope.manager.itemEnd(url);\n\t\t\t}).catch(function (e) {\n\t\t\t\tif (onError) onError(e);\n\t\t\t\tscope.manager.itemError(url);\n\t\t\t\tscope.manager.itemEnd(url);\n\t\t\t});\n\t\t\tscope.manager.itemStart(url);\n\t\t}\n\n\t}\n\n\tImageBitmapLoader.prototype.isImageBitmapLoader = true;\n\n\tlet _context;\n\n\tconst AudioContext = {\n\t\tgetContext: function () {\n\t\t\tif (_context === undefined) {\n\t\t\t\t_context = new (window.AudioContext || window.webkitAudioContext)();\n\t\t\t}\n\n\t\t\treturn _context;\n\t\t},\n\t\tsetContext: function (value) {\n\t\t\t_context = value;\n\t\t}\n\t};\n\n\tclass AudioLoader extends Loader {\n\t\tconstructor(manager) {\n\t\t\tsuper(manager);\n\t\t}\n\n\t\tload(url, onLoad, onProgress, onError) {\n\t\t\tconst scope = this;\n\t\t\tconst loader = new FileLoader(this.manager);\n\t\t\tloader.setResponseType('arraybuffer');\n\t\t\tloader.setPath(this.path);\n\t\t\tloader.setRequestHeader(this.requestHeader);\n\t\t\tloader.setWithCredentials(this.withCredentials);\n\t\t\tloader.load(url, function (buffer) {\n\t\t\t\ttry {\n\t\t\t\t\t// Create a copy of the buffer. The `decodeAudioData` method\n\t\t\t\t\t// detaches the buffer when complete, preventing reuse.\n\t\t\t\t\tconst bufferCopy = buffer.slice(0);\n\t\t\t\t\tconst context = AudioContext.getContext();\n\t\t\t\t\tcontext.decodeAudioData(bufferCopy, function (audioBuffer) {\n\t\t\t\t\t\tonLoad(audioBuffer);\n\t\t\t\t\t});\n\t\t\t\t} catch (e) {\n\t\t\t\t\tif (onError) {\n\t\t\t\t\t\tonError(e);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tconsole.error(e);\n\t\t\t\t\t}\n\n\t\t\t\t\tscope.manager.itemError(url);\n\t\t\t\t}\n\t\t\t}, onProgress, onError);\n\t\t}\n\n\t}\n\n\tclass HemisphereLightProbe extends LightProbe {\n\t\tconstructor(skyColor, groundColor, intensity = 1) {\n\t\t\tsuper(undefined, intensity);\n\t\t\tconst color1 = new Color().set(skyColor);\n\t\t\tconst color2 = new Color().set(groundColor);\n\t\t\tconst sky = new Vector3(color1.r, color1.g, color1.b);\n\t\t\tconst ground = new Vector3(color2.r, color2.g, color2.b); // without extra factor of PI in the shader, should = 1 / Math.sqrt( Math.PI );\n\n\t\t\tconst c0 = Math.sqrt(Math.PI);\n\t\t\tconst c1 = c0 * Math.sqrt(0.75);\n\t\t\tthis.sh.coefficients[0].copy(sky).add(ground).multiplyScalar(c0);\n\t\t\tthis.sh.coefficients[1].copy(sky).sub(ground).multiplyScalar(c1);\n\t\t}\n\n\t}\n\n\tHemisphereLightProbe.prototype.isHemisphereLightProbe = true;\n\n\tclass AmbientLightProbe extends LightProbe {\n\t\tconstructor(color, intensity = 1) {\n\t\t\tsuper(undefined, intensity);\n\t\t\tconst color1 = new Color().set(color); // without extra factor of PI in the shader, would be 2 / Math.sqrt( Math.PI );\n\n\t\t\tthis.sh.coefficients[0].set(color1.r, color1.g, color1.b).multiplyScalar(2 * Math.sqrt(Math.PI));\n\t\t}\n\n\t}\n\n\tAmbientLightProbe.prototype.isAmbientLightProbe = true;\n\n\tconst _eyeRight = /*@__PURE__*/new Matrix4();\n\n\tconst _eyeLeft = /*@__PURE__*/new Matrix4();\n\n\tclass StereoCamera {\n\t\tconstructor() {\n\t\t\tthis.type = 'StereoCamera';\n\t\t\tthis.aspect = 1;\n\t\t\tthis.eyeSep = 0.064;\n\t\t\tthis.cameraL = new PerspectiveCamera();\n\t\t\tthis.cameraL.layers.enable(1);\n\t\t\tthis.cameraL.matrixAutoUpdate = false;\n\t\t\tthis.cameraR = new PerspectiveCamera();\n\t\t\tthis.cameraR.layers.enable(2);\n\t\t\tthis.cameraR.matrixAutoUpdate = false;\n\t\t\tthis._cache = {\n\t\t\t\tfocus: null,\n\t\t\t\tfov: null,\n\t\t\t\taspect: null,\n\t\t\t\tnear: null,\n\t\t\t\tfar: null,\n\t\t\t\tzoom: null,\n\t\t\t\teyeSep: null\n\t\t\t};\n\t\t}\n\n\t\tupdate(camera) {\n\t\t\tconst cache = this._cache;\n\t\t\tconst needsUpdate = cache.focus !== camera.focus || cache.fov !== camera.fov || cache.aspect !== camera.aspect * this.aspect || cache.near !== camera.near || cache.far !== camera.far || cache.zoom !== camera.zoom || cache.eyeSep !== this.eyeSep;\n\n\t\t\tif (needsUpdate) {\n\t\t\t\tcache.focus = camera.focus;\n\t\t\t\tcache.fov = camera.fov;\n\t\t\t\tcache.aspect = camera.aspect * this.aspect;\n\t\t\t\tcache.near = camera.near;\n\t\t\t\tcache.far = camera.far;\n\t\t\t\tcache.zoom = camera.zoom;\n\t\t\t\tcache.eyeSep = this.eyeSep; // Off-axis stereoscopic effect based on\n\t\t\t\t// http://paulbourke.net/stereographics/stereorender/\n\n\t\t\t\tconst projectionMatrix = camera.projectionMatrix.clone();\n\t\t\t\tconst eyeSepHalf = cache.eyeSep / 2;\n\t\t\t\tconst eyeSepOnProjection = eyeSepHalf * cache.near / cache.focus;\n\t\t\t\tconst ymax = cache.near * Math.tan(DEG2RAD * cache.fov * 0.5) / cache.zoom;\n\t\t\t\tlet xmin, xmax; // translate xOffset\n\n\t\t\t\t_eyeLeft.elements[12] = -eyeSepHalf;\n\t\t\t\t_eyeRight.elements[12] = eyeSepHalf; // for left eye\n\n\t\t\t\txmin = -ymax * cache.aspect + eyeSepOnProjection;\n\t\t\t\txmax = ymax * cache.aspect + eyeSepOnProjection;\n\t\t\t\tprojectionMatrix.elements[0] = 2 * cache.near / (xmax - xmin);\n\t\t\t\tprojectionMatrix.elements[8] = (xmax + xmin) / (xmax - xmin);\n\t\t\t\tthis.cameraL.projectionMatrix.copy(projectionMatrix); // for right eye\n\n\t\t\t\txmin = -ymax * cache.aspect - eyeSepOnProjection;\n\t\t\t\txmax = ymax * cache.aspect - eyeSepOnProjection;\n\t\t\t\tprojectionMatrix.elements[0] = 2 * cache.near / (xmax - xmin);\n\t\t\t\tprojectionMatrix.elements[8] = (xmax + xmin) / (xmax - xmin);\n\t\t\t\tthis.cameraR.projectionMatrix.copy(projectionMatrix);\n\t\t\t}\n\n\t\t\tthis.cameraL.matrixWorld.copy(camera.matrixWorld).multiply(_eyeLeft);\n\t\t\tthis.cameraR.matrixWorld.copy(camera.matrixWorld).multiply(_eyeRight);\n\t\t}\n\n\t}\n\n\tclass Clock {\n\t\tconstructor(autoStart = true) {\n\t\t\tthis.autoStart = autoStart;\n\t\t\tthis.startTime = 0;\n\t\t\tthis.oldTime = 0;\n\t\t\tthis.elapsedTime = 0;\n\t\t\tthis.running = false;\n\t\t}\n\n\t\tstart() {\n\t\t\tthis.startTime = now();\n\t\t\tthis.oldTime = this.startTime;\n\t\t\tthis.elapsedTime = 0;\n\t\t\tthis.running = true;\n\t\t}\n\n\t\tstop() {\n\t\t\tthis.getElapsedTime();\n\t\t\tthis.running = false;\n\t\t\tthis.autoStart = false;\n\t\t}\n\n\t\tgetElapsedTime() {\n\t\t\tthis.getDelta();\n\t\t\treturn this.elapsedTime;\n\t\t}\n\n\t\tgetDelta() {\n\t\t\tlet diff = 0;\n\n\t\t\tif (this.autoStart && !this.running) {\n\t\t\t\tthis.start();\n\t\t\t\treturn 0;\n\t\t\t}\n\n\t\t\tif (this.running) {\n\t\t\t\tconst newTime = now();\n\t\t\t\tdiff = (newTime - this.oldTime) / 1000;\n\t\t\t\tthis.oldTime = newTime;\n\t\t\t\tthis.elapsedTime += diff;\n\t\t\t}\n\n\t\t\treturn diff;\n\t\t}\n\n\t}\n\n\tfunction now() {\n\t\treturn (typeof performance === 'undefined' ? Date : performance).now(); // see #10732\n\t}\n\n\tconst _position$1 = /*@__PURE__*/new Vector3();\n\n\tconst _quaternion$1 = /*@__PURE__*/new Quaternion();\n\n\tconst _scale$1 = /*@__PURE__*/new Vector3();\n\n\tconst _orientation$1 = /*@__PURE__*/new Vector3();\n\n\tclass AudioListener extends Object3D {\n\t\tconstructor() {\n\t\t\tsuper();\n\t\t\tthis.type = 'AudioListener';\n\t\t\tthis.context = AudioContext.getContext();\n\t\t\tthis.gain = this.context.createGain();\n\t\t\tthis.gain.connect(this.context.destination);\n\t\t\tthis.filter = null;\n\t\t\tthis.timeDelta = 0; // private\n\n\t\t\tthis._clock = new Clock();\n\t\t}\n\n\t\tgetInput() {\n\t\t\treturn this.gain;\n\t\t}\n\n\t\tremoveFilter() {\n\t\t\tif (this.filter !== null) {\n\t\t\t\tthis.gain.disconnect(this.filter);\n\t\t\t\tthis.filter.disconnect(this.context.destination);\n\t\t\t\tthis.gain.connect(this.context.destination);\n\t\t\t\tthis.filter = null;\n\t\t\t}\n\n\t\t\treturn this;\n\t\t}\n\n\t\tgetFilter() {\n\t\t\treturn this.filter;\n\t\t}\n\n\t\tsetFilter(value) {\n\t\t\tif (this.filter !== null) {\n\t\t\t\tthis.gain.disconnect(this.filter);\n\t\t\t\tthis.filter.disconnect(this.context.destination);\n\t\t\t} else {\n\t\t\t\tthis.gain.disconnect(this.context.destination);\n\t\t\t}\n\n\t\t\tthis.filter = value;\n\t\t\tthis.gain.connect(this.filter);\n\t\t\tthis.filter.connect(this.context.destination);\n\t\t\treturn this;\n\t\t}\n\n\t\tgetMasterVolume() {\n\t\t\treturn this.gain.gain.value;\n\t\t}\n\n\t\tsetMasterVolume(value) {\n\t\t\tthis.gain.gain.setTargetAtTime(value, this.context.currentTime, 0.01);\n\t\t\treturn this;\n\t\t}\n\n\t\tupdateMatrixWorld(force) {\n\t\t\tsuper.updateMatrixWorld(force);\n\t\t\tconst listener = this.context.listener;\n\t\t\tconst up = this.up;\n\t\t\tthis.timeDelta = this._clock.getDelta();\n\t\t\tthis.matrixWorld.decompose(_position$1, _quaternion$1, _scale$1);\n\n\t\t\t_orientation$1.set(0, 0, -1).applyQuaternion(_quaternion$1);\n\n\t\t\tif (listener.positionX) {\n\t\t\t\t// code path for Chrome (see #14393)\n\t\t\t\tconst endTime = this.context.currentTime + this.timeDelta;\n\t\t\t\tlistener.positionX.linearRampToValueAtTime(_position$1.x, endTime);\n\t\t\t\tlistener.positionY.linearRampToValueAtTime(_position$1.y, endTime);\n\t\t\t\tlistener.positionZ.linearRampToValueAtTime(_position$1.z, endTime);\n\t\t\t\tlistener.forwardX.linearRampToValueAtTime(_orientation$1.x, endTime);\n\t\t\t\tlistener.forwardY.linearRampToValueAtTime(_orientation$1.y, endTime);\n\t\t\t\tlistener.forwardZ.linearRampToValueAtTime(_orientation$1.z, endTime);\n\t\t\t\tlistener.upX.linearRampToValueAtTime(up.x, endTime);\n\t\t\t\tlistener.upY.linearRampToValueAtTime(up.y, endTime);\n\t\t\t\tlistener.upZ.linearRampToValueAtTime(up.z, endTime);\n\t\t\t} else {\n\t\t\t\tlistener.setPosition(_position$1.x, _position$1.y, _position$1.z);\n\t\t\t\tlistener.setOrientation(_orientation$1.x, _orientation$1.y, _orientation$1.z, up.x, up.y, up.z);\n\t\t\t}\n\t\t}\n\n\t}\n\n\tclass Audio extends Object3D {\n\t\tconstructor(listener) {\n\t\t\tsuper();\n\t\t\tthis.type = 'Audio';\n\t\t\tthis.listener = listener;\n\t\t\tthis.context = listener.context;\n\t\t\tthis.gain = this.context.createGain();\n\t\t\tthis.gain.connect(listener.getInput());\n\t\t\tthis.autoplay = false;\n\t\t\tthis.buffer = null;\n\t\t\tthis.detune = 0;\n\t\t\tthis.loop = false;\n\t\t\tthis.loopStart = 0;\n\t\t\tthis.loopEnd = 0;\n\t\t\tthis.offset = 0;\n\t\t\tthis.duration = undefined;\n\t\t\tthis.playbackRate = 1;\n\t\t\tthis.isPlaying = false;\n\t\t\tthis.hasPlaybackControl = true;\n\t\t\tthis.source = null;\n\t\t\tthis.sourceType = 'empty';\n\t\t\tthis._startedAt = 0;\n\t\t\tthis._progress = 0;\n\t\t\tthis._connected = false;\n\t\t\tthis.filters = [];\n\t\t}\n\n\t\tgetOutput() {\n\t\t\treturn this.gain;\n\t\t}\n\n\t\tsetNodeSource(audioNode) {\n\t\t\tthis.hasPlaybackControl = false;\n\t\t\tthis.sourceType = 'audioNode';\n\t\t\tthis.source = audioNode;\n\t\t\tthis.connect();\n\t\t\treturn this;\n\t\t}\n\n\t\tsetMediaElementSource(mediaElement) {\n\t\t\tthis.hasPlaybackControl = false;\n\t\t\tthis.sourceType = 'mediaNode';\n\t\t\tthis.source = this.context.createMediaElementSource(mediaElement);\n\t\t\tthis.connect();\n\t\t\treturn this;\n\t\t}\n\n\t\tsetMediaStreamSource(mediaStream) {\n\t\t\tthis.hasPlaybackControl = false;\n\t\t\tthis.sourceType = 'mediaStreamNode';\n\t\t\tthis.source = this.context.createMediaStreamSource(mediaStream);\n\t\t\tthis.connect();\n\t\t\treturn this;\n\t\t}\n\n\t\tsetBuffer(audioBuffer) {\n\t\t\tthis.buffer = audioBuffer;\n\t\t\tthis.sourceType = 'buffer';\n\t\t\tif (this.autoplay) this.play();\n\t\t\treturn this;\n\t\t}\n\n\t\tplay(delay = 0) {\n\t\t\tif (this.isPlaying === true) {\n\t\t\t\tconsole.warn('THREE.Audio: Audio is already playing.');\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (this.hasPlaybackControl === false) {\n\t\t\t\tconsole.warn('THREE.Audio: this Audio has no playback control.');\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis._startedAt = this.context.currentTime + delay;\n\t\t\tconst source = this.context.createBufferSource();\n\t\t\tsource.buffer = this.buffer;\n\t\t\tsource.loop = this.loop;\n\t\t\tsource.loopStart = this.loopStart;\n\t\t\tsource.loopEnd = this.loopEnd;\n\t\t\tsource.onended = this.onEnded.bind(this);\n\t\t\tsource.start(this._startedAt, this._progress + this.offset, this.duration);\n\t\t\tthis.isPlaying = true;\n\t\t\tthis.source = source;\n\t\t\tthis.setDetune(this.detune);\n\t\t\tthis.setPlaybackRate(this.playbackRate);\n\t\t\treturn this.connect();\n\t\t}\n\n\t\tpause() {\n\t\t\tif (this.hasPlaybackControl === false) {\n\t\t\t\tconsole.warn('THREE.Audio: this Audio has no playback control.');\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (this.isPlaying === true) {\n\t\t\t\t// update current progress\n\t\t\t\tthis._progress += Math.max(this.context.currentTime - this._startedAt, 0) * this.playbackRate;\n\n\t\t\t\tif (this.loop === true) {\n\t\t\t\t\t// ensure _progress does not exceed duration with looped audios\n\t\t\t\t\tthis._progress = this._progress % (this.duration || this.buffer.duration);\n\t\t\t\t}\n\n\t\t\t\tthis.source.stop();\n\t\t\t\tthis.source.onended = null;\n\t\t\t\tthis.isPlaying = false;\n\t\t\t}\n\n\t\t\treturn this;\n\t\t}\n\n\t\tstop() {\n\t\t\tif (this.hasPlaybackControl === false) {\n\t\t\t\tconsole.warn('THREE.Audio: this Audio has no playback control.');\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis._progress = 0;\n\t\t\tthis.source.stop();\n\t\t\tthis.source.onended = null;\n\t\t\tthis.isPlaying = false;\n\t\t\treturn this;\n\t\t}\n\n\t\tconnect() {\n\t\t\tif (this.filters.length > 0) {\n\t\t\t\tthis.source.connect(this.filters[0]);\n\n\t\t\t\tfor (let i = 1, l = this.filters.length; i < l; i++) {\n\t\t\t\t\tthis.filters[i - 1].connect(this.filters[i]);\n\t\t\t\t}\n\n\t\t\t\tthis.filters[this.filters.length - 1].connect(this.getOutput());\n\t\t\t} else {\n\t\t\t\tthis.source.connect(this.getOutput());\n\t\t\t}\n\n\t\t\tthis._connected = true;\n\t\t\treturn this;\n\t\t}\n\n\t\tdisconnect() {\n\t\t\tif (this.filters.length > 0) {\n\t\t\t\tthis.source.disconnect(this.filters[0]);\n\n\t\t\t\tfor (let i = 1, l = this.filters.length; i < l; i++) {\n\t\t\t\t\tthis.filters[i - 1].disconnect(this.filters[i]);\n\t\t\t\t}\n\n\t\t\t\tthis.filters[this.filters.length - 1].disconnect(this.getOutput());\n\t\t\t} else {\n\t\t\t\tthis.source.disconnect(this.getOutput());\n\t\t\t}\n\n\t\t\tthis._connected = false;\n\t\t\treturn this;\n\t\t}\n\n\t\tgetFilters() {\n\t\t\treturn this.filters;\n\t\t}\n\n\t\tsetFilters(value) {\n\t\t\tif (!value) value = [];\n\n\t\t\tif (this._connected === true) {\n\t\t\t\tthis.disconnect();\n\t\t\t\tthis.filters = value.slice();\n\t\t\t\tthis.connect();\n\t\t\t} else {\n\t\t\t\tthis.filters = value.slice();\n\t\t\t}\n\n\t\t\treturn this;\n\t\t}\n\n\t\tsetDetune(value) {\n\t\t\tthis.detune = value;\n\t\t\tif (this.source.detune === undefined) return; // only set detune when available\n\n\t\t\tif (this.isPlaying === true) {\n\t\t\t\tthis.source.detune.setTargetAtTime(this.detune, this.context.currentTime, 0.01);\n\t\t\t}\n\n\t\t\treturn this;\n\t\t}\n\n\t\tgetDetune() {\n\t\t\treturn this.detune;\n\t\t}\n\n\t\tgetFilter() {\n\t\t\treturn this.getFilters()[0];\n\t\t}\n\n\t\tsetFilter(filter) {\n\t\t\treturn this.setFilters(filter ? [filter] : []);\n\t\t}\n\n\t\tsetPlaybackRate(value) {\n\t\t\tif (this.hasPlaybackControl === false) {\n\t\t\t\tconsole.warn('THREE.Audio: this Audio has no playback control.');\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis.playbackRate = value;\n\n\t\t\tif (this.isPlaying === true) {\n\t\t\t\tthis.source.playbackRate.setTargetAtTime(this.playbackRate, this.context.currentTime, 0.01);\n\t\t\t}\n\n\t\t\treturn this;\n\t\t}\n\n\t\tgetPlaybackRate() {\n\t\t\treturn this.playbackRate;\n\t\t}\n\n\t\tonEnded() {\n\t\t\tthis.isPlaying = false;\n\t\t}\n\n\t\tgetLoop() {\n\t\t\tif (this.hasPlaybackControl === false) {\n\t\t\t\tconsole.warn('THREE.Audio: this Audio has no playback control.');\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\treturn this.loop;\n\t\t}\n\n\t\tsetLoop(value) {\n\t\t\tif (this.hasPlaybackControl === false) {\n\t\t\t\tconsole.warn('THREE.Audio: this Audio has no playback control.');\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis.loop = value;\n\n\t\t\tif (this.isPlaying === true) {\n\t\t\t\tthis.source.loop = this.loop;\n\t\t\t}\n\n\t\t\treturn this;\n\t\t}\n\n\t\tsetLoopStart(value) {\n\t\t\tthis.loopStart = value;\n\t\t\treturn this;\n\t\t}\n\n\t\tsetLoopEnd(value) {\n\t\t\tthis.loopEnd = value;\n\t\t\treturn this;\n\t\t}\n\n\t\tgetVolume() {\n\t\t\treturn this.gain.gain.value;\n\t\t}\n\n\t\tsetVolume(value) {\n\t\t\tthis.gain.gain.setTargetAtTime(value, this.context.currentTime, 0.01);\n\t\t\treturn this;\n\t\t}\n\n\t}\n\n\tconst _position = /*@__PURE__*/new Vector3();\n\n\tconst _quaternion = /*@__PURE__*/new Quaternion();\n\n\tconst _scale = /*@__PURE__*/new Vector3();\n\n\tconst _orientation = /*@__PURE__*/new Vector3();\n\n\tclass PositionalAudio extends Audio {\n\t\tconstructor(listener) {\n\t\t\tsuper(listener);\n\t\t\tthis.panner = this.context.createPanner();\n\t\t\tthis.panner.panningModel = 'HRTF';\n\t\t\tthis.panner.connect(this.gain);\n\t\t}\n\n\t\tgetOutput() {\n\t\t\treturn this.panner;\n\t\t}\n\n\t\tgetRefDistance() {\n\t\t\treturn this.panner.refDistance;\n\t\t}\n\n\t\tsetRefDistance(value) {\n\t\t\tthis.panner.refDistance = value;\n\t\t\treturn this;\n\t\t}\n\n\t\tgetRolloffFactor() {\n\t\t\treturn this.panner.rolloffFactor;\n\t\t}\n\n\t\tsetRolloffFactor(value) {\n\t\t\tthis.panner.rolloffFactor = value;\n\t\t\treturn this;\n\t\t}\n\n\t\tgetDistanceModel() {\n\t\t\treturn this.panner.distanceModel;\n\t\t}\n\n\t\tsetDistanceModel(value) {\n\t\t\tthis.panner.distanceModel = value;\n\t\t\treturn this;\n\t\t}\n\n\t\tgetMaxDistance() {\n\t\t\treturn this.panner.maxDistance;\n\t\t}\n\n\t\tsetMaxDistance(value) {\n\t\t\tthis.panner.maxDistance = value;\n\t\t\treturn this;\n\t\t}\n\n\t\tsetDirectionalCone(coneInnerAngle, coneOuterAngle, coneOuterGain) {\n\t\t\tthis.panner.coneInnerAngle = coneInnerAngle;\n\t\t\tthis.panner.coneOuterAngle = coneOuterAngle;\n\t\t\tthis.panner.coneOuterGain = coneOuterGain;\n\t\t\treturn this;\n\t\t}\n\n\t\tupdateMatrixWorld(force) {\n\t\t\tsuper.updateMatrixWorld(force);\n\t\t\tif (this.hasPlaybackControl === true && this.isPlaying === false) return;\n\t\t\tthis.matrixWorld.decompose(_position, _quaternion, _scale);\n\n\t\t\t_orientation.set(0, 0, 1).applyQuaternion(_quaternion);\n\n\t\t\tconst panner = this.panner;\n\n\t\t\tif (panner.positionX) {\n\t\t\t\t// code path for Chrome and Firefox (see #14393)\n\t\t\t\tconst endTime = this.context.currentTime + this.listener.timeDelta;\n\t\t\t\tpanner.positionX.linearRampToValueAtTime(_position.x, endTime);\n\t\t\t\tpanner.positionY.linearRampToValueAtTime(_position.y, endTime);\n\t\t\t\tpanner.positionZ.linearRampToValueAtTime(_position.z, endTime);\n\t\t\t\tpanner.orientationX.linearRampToValueAtTime(_orientation.x, endTime);\n\t\t\t\tpanner.orientationY.linearRampToValueAtTime(_orientation.y, endTime);\n\t\t\t\tpanner.orientationZ.linearRampToValueAtTime(_orientation.z, endTime);\n\t\t\t} else {\n\t\t\t\tpanner.setPosition(_position.x, _position.y, _position.z);\n\t\t\t\tpanner.setOrientation(_orientation.x, _orientation.y, _orientation.z);\n\t\t\t}\n\t\t}\n\n\t}\n\n\tclass AudioAnalyser {\n\t\tconstructor(audio, fftSize = 2048) {\n\t\t\tthis.analyser = audio.context.createAnalyser();\n\t\t\tthis.analyser.fftSize = fftSize;\n\t\t\tthis.data = new Uint8Array(this.analyser.frequencyBinCount);\n\t\t\taudio.getOutput().connect(this.analyser);\n\t\t}\n\n\t\tgetFrequencyData() {\n\t\t\tthis.analyser.getByteFrequencyData(this.data);\n\t\t\treturn this.data;\n\t\t}\n\n\t\tgetAverageFrequency() {\n\t\t\tlet value = 0;\n\t\t\tconst data = this.getFrequencyData();\n\n\t\t\tfor (let i = 0; i < data.length; i++) {\n\t\t\t\tvalue += data[i];\n\t\t\t}\n\n\t\t\treturn value / data.length;\n\t\t}\n\n\t}\n\n\tclass PropertyMixer {\n\t\tconstructor(binding, typeName, valueSize) {\n\t\t\tthis.binding = binding;\n\t\t\tthis.valueSize = valueSize;\n\t\t\tlet mixFunction, mixFunctionAdditive, setIdentity; // buffer layout: [ incoming | accu0 | accu1 | orig | addAccu | (optional work) ]\n\t\t\t//\n\t\t\t// interpolators can use .buffer as their .result\n\t\t\t// the data then goes to 'incoming'\n\t\t\t//\n\t\t\t// 'accu0' and 'accu1' are used frame-interleaved for\n\t\t\t// the cumulative result and are compared to detect\n\t\t\t// changes\n\t\t\t//\n\t\t\t// 'orig' stores the original state of the property\n\t\t\t//\n\t\t\t// 'add' is used for additive cumulative results\n\t\t\t//\n\t\t\t// 'work' is optional and is only present for quaternion types. It is used\n\t\t\t// to store intermediate quaternion multiplication results\n\n\t\t\tswitch (typeName) {\n\t\t\t\tcase 'quaternion':\n\t\t\t\t\tmixFunction = this._slerp;\n\t\t\t\t\tmixFunctionAdditive = this._slerpAdditive;\n\t\t\t\t\tsetIdentity = this._setAdditiveIdentityQuaternion;\n\t\t\t\t\tthis.buffer = new Float64Array(valueSize * 6);\n\t\t\t\t\tthis._workIndex = 5;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'string':\n\t\t\t\tcase 'bool':\n\t\t\t\t\tmixFunction = this._select; // Use the regular mix function and for additive on these types,\n\t\t\t\t\t// additive is not relevant for non-numeric types\n\n\t\t\t\t\tmixFunctionAdditive = this._select;\n\t\t\t\t\tsetIdentity = this._setAdditiveIdentityOther;\n\t\t\t\t\tthis.buffer = new Array(valueSize * 5);\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\t\t\t\t\tmixFunction = this._lerp;\n\t\t\t\t\tmixFunctionAdditive = this._lerpAdditive;\n\t\t\t\t\tsetIdentity = this._setAdditiveIdentityNumeric;\n\t\t\t\t\tthis.buffer = new Float64Array(valueSize * 5);\n\t\t\t}\n\n\t\t\tthis._mixBufferRegion = mixFunction;\n\t\t\tthis._mixBufferRegionAdditive = mixFunctionAdditive;\n\t\t\tthis._setIdentity = setIdentity;\n\t\t\tthis._origIndex = 3;\n\t\t\tthis._addIndex = 4;\n\t\t\tthis.cumulativeWeight = 0;\n\t\t\tthis.cumulativeWeightAdditive = 0;\n\t\t\tthis.useCount = 0;\n\t\t\tthis.referenceCount = 0;\n\t\t} // accumulate data in the 'incoming' region into 'accu<i>'\n\n\n\t\taccumulate(accuIndex, weight) {\n\t\t\t// note: happily accumulating nothing when weight = 0, the caller knows\n\t\t\t// the weight and shouldn't have made the call in the first place\n\t\t\tconst buffer = this.buffer,\n\t\t\t\t\t\tstride = this.valueSize,\n\t\t\t\t\t\toffset = accuIndex * stride + stride;\n\t\t\tlet currentWeight = this.cumulativeWeight;\n\n\t\t\tif (currentWeight === 0) {\n\t\t\t\t// accuN := incoming * weight\n\t\t\t\tfor (let i = 0; i !== stride; ++i) {\n\t\t\t\t\tbuffer[offset + i] = buffer[i];\n\t\t\t\t}\n\n\t\t\t\tcurrentWeight = weight;\n\t\t\t} else {\n\t\t\t\t// accuN := accuN + incoming * weight\n\t\t\t\tcurrentWeight += weight;\n\t\t\t\tconst mix = weight / currentWeight;\n\n\t\t\t\tthis._mixBufferRegion(buffer, offset, 0, mix, stride);\n\t\t\t}\n\n\t\t\tthis.cumulativeWeight = currentWeight;\n\t\t} // accumulate data in the 'incoming' region into 'add'\n\n\n\t\taccumulateAdditive(weight) {\n\t\t\tconst buffer = this.buffer,\n\t\t\t\t\t\tstride = this.valueSize,\n\t\t\t\t\t\toffset = stride * this._addIndex;\n\n\t\t\tif (this.cumulativeWeightAdditive === 0) {\n\t\t\t\t// add = identity\n\t\t\t\tthis._setIdentity();\n\t\t\t} // add := add + incoming * weight\n\n\n\t\t\tthis._mixBufferRegionAdditive(buffer, offset, 0, weight, stride);\n\n\t\t\tthis.cumulativeWeightAdditive += weight;\n\t\t} // apply the state of 'accu<i>' to the binding when accus differ\n\n\n\t\tapply(accuIndex) {\n\t\t\tconst stride = this.valueSize,\n\t\t\t\t\t\tbuffer = this.buffer,\n\t\t\t\t\t\toffset = accuIndex * stride + stride,\n\t\t\t\t\t\tweight = this.cumulativeWeight,\n\t\t\t\t\t\tweightAdditive = this.cumulativeWeightAdditive,\n\t\t\t\t\t\tbinding = this.binding;\n\t\t\tthis.cumulativeWeight = 0;\n\t\t\tthis.cumulativeWeightAdditive = 0;\n\n\t\t\tif (weight < 1) {\n\t\t\t\t// accuN := accuN + original * ( 1 - cumulativeWeight )\n\t\t\t\tconst originalValueOffset = stride * this._origIndex;\n\n\t\t\t\tthis._mixBufferRegion(buffer, offset, originalValueOffset, 1 - weight, stride);\n\t\t\t}\n\n\t\t\tif (weightAdditive > 0) {\n\t\t\t\t// accuN := accuN + additive accuN\n\t\t\t\tthis._mixBufferRegionAdditive(buffer, offset, this._addIndex * stride, 1, stride);\n\t\t\t}\n\n\t\t\tfor (let i = stride, e = stride + stride; i !== e; ++i) {\n\t\t\t\tif (buffer[i] !== buffer[i + stride]) {\n\t\t\t\t\t// value has changed -> update scene graph\n\t\t\t\t\tbinding.setValue(buffer, offset);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t} // remember the state of the bound property and copy it to both accus\n\n\n\t\tsaveOriginalState() {\n\t\t\tconst binding = this.binding;\n\t\t\tconst buffer = this.buffer,\n\t\t\t\t\t\tstride = this.valueSize,\n\t\t\t\t\t\toriginalValueOffset = stride * this._origIndex;\n\t\t\tbinding.getValue(buffer, originalValueOffset); // accu[0..1] := orig -- initially detect changes against the original\n\n\t\t\tfor (let i = stride, e = originalValueOffset; i !== e; ++i) {\n\t\t\t\tbuffer[i] = buffer[originalValueOffset + i % stride];\n\t\t\t} // Add to identity for additive\n\n\n\t\t\tthis._setIdentity();\n\n\t\t\tthis.cumulativeWeight = 0;\n\t\t\tthis.cumulativeWeightAdditive = 0;\n\t\t} // apply the state previously taken via 'saveOriginalState' to the binding\n\n\n\t\trestoreOriginalState() {\n\t\t\tconst originalValueOffset = this.valueSize * 3;\n\t\t\tthis.binding.setValue(this.buffer, originalValueOffset);\n\t\t}\n\n\t\t_setAdditiveIdentityNumeric() {\n\t\t\tconst startIndex = this._addIndex * this.valueSize;\n\t\t\tconst endIndex = startIndex + this.valueSize;\n\n\t\t\tfor (let i = startIndex; i < endIndex; i++) {\n\t\t\t\tthis.buffer[i] = 0;\n\t\t\t}\n\t\t}\n\n\t\t_setAdditiveIdentityQuaternion() {\n\t\t\tthis._setAdditiveIdentityNumeric();\n\n\t\t\tthis.buffer[this._addIndex * this.valueSize + 3] = 1;\n\t\t}\n\n\t\t_setAdditiveIdentityOther() {\n\t\t\tconst startIndex = this._origIndex * this.valueSize;\n\t\t\tconst targetIndex = this._addIndex * this.valueSize;\n\n\t\t\tfor (let i = 0; i < this.valueSize; i++) {\n\t\t\t\tthis.buffer[targetIndex + i] = this.buffer[startIndex + i];\n\t\t\t}\n\t\t} // mix functions\n\n\n\t\t_select(buffer, dstOffset, srcOffset, t, stride) {\n\t\t\tif (t >= 0.5) {\n\t\t\t\tfor (let i = 0; i !== stride; ++i) {\n\t\t\t\t\tbuffer[dstOffset + i] = buffer[srcOffset + i];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t_slerp(buffer, dstOffset, srcOffset, t) {\n\t\t\tQuaternion.slerpFlat(buffer, dstOffset, buffer, dstOffset, buffer, srcOffset, t);\n\t\t}\n\n\t\t_slerpAdditive(buffer, dstOffset, srcOffset, t, stride) {\n\t\t\tconst workOffset = this._workIndex * stride; // Store result in intermediate buffer offset\n\n\t\t\tQuaternion.multiplyQuaternionsFlat(buffer, workOffset, buffer, dstOffset, buffer, srcOffset); // Slerp to the intermediate result\n\n\t\t\tQuaternion.slerpFlat(buffer, dstOffset, buffer, dstOffset, buffer, workOffset, t);\n\t\t}\n\n\t\t_lerp(buffer, dstOffset, srcOffset, t, stride) {\n\t\t\tconst s = 1 - t;\n\n\t\t\tfor (let i = 0; i !== stride; ++i) {\n\t\t\t\tconst j = dstOffset + i;\n\t\t\t\tbuffer[j] = buffer[j] * s + buffer[srcOffset + i] * t;\n\t\t\t}\n\t\t}\n\n\t\t_lerpAdditive(buffer, dstOffset, srcOffset, t, stride) {\n\t\t\tfor (let i = 0; i !== stride; ++i) {\n\t\t\t\tconst j = dstOffset + i;\n\t\t\t\tbuffer[j] = buffer[j] + buffer[srcOffset + i] * t;\n\t\t\t}\n\t\t}\n\n\t}\n\n\t// Characters [].:/ are reserved for track binding syntax.\n\tconst _RESERVED_CHARS_RE = '\\\\[\\\\]\\\\.:\\\\/';\n\n\tconst _reservedRe = new RegExp('[' + _RESERVED_CHARS_RE + ']', 'g'); // Attempts to allow node names from any language. ES5's `\\w` regexp matches\n\t// only latin characters, and the unicode \\p{L} is not yet supported. So\n\t// instead, we exclude reserved characters and match everything else.\n\n\n\tconst _wordChar = '[^' + _RESERVED_CHARS_RE + ']';\n\n\tconst _wordCharOrDot = '[^' + _RESERVED_CHARS_RE.replace('\\\\.', '') + ']'; // Parent directories, delimited by '/' or ':'. Currently unused, but must\n\t// be matched to parse the rest of the track name.\n\n\n\tconst _directoryRe = /((?:WC+[\\/:])*)/.source.replace('WC', _wordChar); // Target node. May contain word characters (a-zA-Z0-9_) and '.' or '-'.\n\n\n\tconst _nodeRe = /(WCOD+)?/.source.replace('WCOD', _wordCharOrDot); // Object on target node, and accessor. May not contain reserved\n\t// characters. Accessor may contain any character except closing bracket.\n\n\n\tconst _objectRe = /(?:\\.(WC+)(?:\\[(.+)\\])?)?/.source.replace('WC', _wordChar); // Property and accessor. May not contain reserved characters. Accessor may\n\t// contain any non-bracket characters.\n\n\n\tconst _propertyRe = /\\.(WC+)(?:\\[(.+)\\])?/.source.replace('WC', _wordChar);\n\n\tconst _trackRe = new RegExp('' + '^' + _directoryRe + _nodeRe + _objectRe + _propertyRe + '$');\n\n\tconst _supportedObjectNames = ['material', 'materials', 'bones'];\n\n\tclass Composite {\n\t\tconstructor(targetGroup, path, optionalParsedPath) {\n\t\t\tconst parsedPath = optionalParsedPath || PropertyBinding.parseTrackName(path);\n\t\t\tthis._targetGroup = targetGroup;\n\t\t\tthis._bindings = targetGroup.subscribe_(path, parsedPath);\n\t\t}\n\n\t\tgetValue(array, offset) {\n\t\t\tthis.bind(); // bind all binding\n\n\t\t\tconst firstValidIndex = this._targetGroup.nCachedObjects_,\n\t\t\t\t\t\tbinding = this._bindings[firstValidIndex]; // and only call .getValue on the first\n\n\t\t\tif (binding !== undefined) binding.getValue(array, offset);\n\t\t}\n\n\t\tsetValue(array, offset) {\n\t\t\tconst bindings = this._bindings;\n\n\t\t\tfor (let i = this._targetGroup.nCachedObjects_, n = bindings.length; i !== n; ++i) {\n\t\t\t\tbindings[i].setValue(array, offset);\n\t\t\t}\n\t\t}\n\n\t\tbind() {\n\t\t\tconst bindings = this._bindings;\n\n\t\t\tfor (let i = this._targetGroup.nCachedObjects_, n = bindings.length; i !== n; ++i) {\n\t\t\t\tbindings[i].bind();\n\t\t\t}\n\t\t}\n\n\t\tunbind() {\n\t\t\tconst bindings = this._bindings;\n\n\t\t\tfor (let i = this._targetGroup.nCachedObjects_, n = bindings.length; i !== n; ++i) {\n\t\t\t\tbindings[i].unbind();\n\t\t\t}\n\t\t}\n\n\t} // Note: This class uses a State pattern on a per-method basis:\n\t// 'bind' sets 'this.getValue' / 'setValue' and shadows the\n\t// prototype version of these methods with one that represents\n\t// the bound state. When the property is not found, the methods\n\t// become no-ops.\n\n\n\tclass PropertyBinding {\n\t\tconstructor(rootNode, path, parsedPath) {\n\t\t\tthis.path = path;\n\t\t\tthis.parsedPath = parsedPath || PropertyBinding.parseTrackName(path);\n\t\t\tthis.node = PropertyBinding.findNode(rootNode, this.parsedPath.nodeName) || rootNode;\n\t\t\tthis.rootNode = rootNode; // initial state of these methods that calls 'bind'\n\n\t\t\tthis.getValue = this._getValue_unbound;\n\t\t\tthis.setValue = this._setValue_unbound;\n\t\t}\n\n\t\tstatic create(root, path, parsedPath) {\n\t\t\tif (!(root && root.isAnimationObjectGroup)) {\n\t\t\t\treturn new PropertyBinding(root, path, parsedPath);\n\t\t\t} else {\n\t\t\t\treturn new PropertyBinding.Composite(root, path, parsedPath);\n\t\t\t}\n\t\t}\n\t\t/**\n\t\t * Replaces spaces with underscores and removes unsupported characters from\n\t\t * node names, to ensure compatibility with parseTrackName().\n\t\t *\n\t\t * @param {string} name Node name to be sanitized.\n\t\t * @return {string}\n\t\t */\n\n\n\t\tstatic sanitizeNodeName(name) {\n\t\t\treturn name.replace(/\\s/g, '_').replace(_reservedRe, '');\n\t\t}\n\n\t\tstatic parseTrackName(trackName) {\n\t\t\tconst matches = _trackRe.exec(trackName);\n\n\t\t\tif (!matches) {\n\t\t\t\tthrow new Error('PropertyBinding: Cannot parse trackName: ' + trackName);\n\t\t\t}\n\n\t\t\tconst results = {\n\t\t\t\t// directoryName: matches[ 1 ], // (tschw) currently unused\n\t\t\t\tnodeName: matches[2],\n\t\t\t\tobjectName: matches[3],\n\t\t\t\tobjectIndex: matches[4],\n\t\t\t\tpropertyName: matches[5],\n\t\t\t\t// required\n\t\t\t\tpropertyIndex: matches[6]\n\t\t\t};\n\t\t\tconst lastDot = results.nodeName && results.nodeName.lastIndexOf('.');\n\n\t\t\tif (lastDot !== undefined && lastDot !== -1) {\n\t\t\t\tconst objectName = results.nodeName.substring(lastDot + 1); // Object names must be checked against an allowlist. Otherwise, there\n\t\t\t\t// is no way to parse 'foo.bar.baz': 'baz' must be a property, but\n\t\t\t\t// 'bar' could be the objectName, or part of a nodeName (which can\n\t\t\t\t// include '.' characters).\n\n\t\t\t\tif (_supportedObjectNames.indexOf(objectName) !== -1) {\n\t\t\t\t\tresults.nodeName = results.nodeName.substring(0, lastDot);\n\t\t\t\t\tresults.objectName = objectName;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (results.propertyName === null || results.propertyName.length === 0) {\n\t\t\t\tthrow new Error('PropertyBinding: can not parse propertyName from trackName: ' + trackName);\n\t\t\t}\n\n\t\t\treturn results;\n\t\t}\n\n\t\tstatic findNode(root, nodeName) {\n\t\t\tif (!nodeName || nodeName === '' || nodeName === '.' || nodeName === -1 || nodeName === root.name || nodeName === root.uuid) {\n\t\t\t\treturn root;\n\t\t\t} // search into skeleton bones.\n\n\n\t\t\tif (root.skeleton) {\n\t\t\t\tconst bone = root.skeleton.getBoneByName(nodeName);\n\n\t\t\t\tif (bone !== undefined) {\n\t\t\t\t\treturn bone;\n\t\t\t\t}\n\t\t\t} // search into node subtree.\n\n\n\t\t\tif (root.children) {\n\t\t\t\tconst searchNodeSubtree = function (children) {\n\t\t\t\t\tfor (let i = 0; i < children.length; i++) {\n\t\t\t\t\t\tconst childNode = children[i];\n\n\t\t\t\t\t\tif (childNode.name === nodeName || childNode.uuid === nodeName) {\n\t\t\t\t\t\t\treturn childNode;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tconst result = searchNodeSubtree(childNode.children);\n\t\t\t\t\t\tif (result) return result;\n\t\t\t\t\t}\n\n\t\t\t\t\treturn null;\n\t\t\t\t};\n\n\t\t\t\tconst subTreeNode = searchNodeSubtree(root.children);\n\n\t\t\t\tif (subTreeNode) {\n\t\t\t\t\treturn subTreeNode;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn null;\n\t\t} // these are used to \"bind\" a nonexistent property\n\n\n\t\t_getValue_unavailable() {}\n\n\t\t_setValue_unavailable() {} // Getters\n\n\n\t\t_getValue_direct(buffer, offset) {\n\t\t\tbuffer[offset] = this.targetObject[this.propertyName];\n\t\t}\n\n\t\t_getValue_array(buffer, offset) {\n\t\t\tconst source = this.resolvedProperty;\n\n\t\t\tfor (let i = 0, n = source.length; i !== n; ++i) {\n\t\t\t\tbuffer[offset++] = source[i];\n\t\t\t}\n\t\t}\n\n\t\t_getValue_arrayElement(buffer, offset) {\n\t\t\tbuffer[offset] = this.resolvedProperty[this.propertyIndex];\n\t\t}\n\n\t\t_getValue_toArray(buffer, offset) {\n\t\t\tthis.resolvedProperty.toArray(buffer, offset);\n\t\t} // Direct\n\n\n\t\t_setValue_direct(buffer, offset) {\n\t\t\tthis.targetObject[this.propertyName] = buffer[offset];\n\t\t}\n\n\t\t_setValue_direct_setNeedsUpdate(buffer, offset) {\n\t\t\tthis.targetObject[this.propertyName] = buffer[offset];\n\t\t\tthis.targetObject.needsUpdate = true;\n\t\t}\n\n\t\t_setValue_direct_setMatrixWorldNeedsUpdate(buffer, offset) {\n\t\t\tthis.targetObject[this.propertyName] = buffer[offset];\n\t\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\n\t\t} // EntireArray\n\n\n\t\t_setValue_array(buffer, offset) {\n\t\t\tconst dest = this.resolvedProperty;\n\n\t\t\tfor (let i = 0, n = dest.length; i !== n; ++i) {\n\t\t\t\tdest[i] = buffer[offset++];\n\t\t\t}\n\t\t}\n\n\t\t_setValue_array_setNeedsUpdate(buffer, offset) {\n\t\t\tconst dest = this.resolvedProperty;\n\n\t\t\tfor (let i = 0, n = dest.length; i !== n; ++i) {\n\t\t\t\tdest[i] = buffer[offset++];\n\t\t\t}\n\n\t\t\tthis.targetObject.needsUpdate = true;\n\t\t}\n\n\t\t_setValue_array_setMatrixWorldNeedsUpdate(buffer, offset) {\n\t\t\tconst dest = this.resolvedProperty;\n\n\t\t\tfor (let i = 0, n = dest.length; i !== n; ++i) {\n\t\t\t\tdest[i] = buffer[offset++];\n\t\t\t}\n\n\t\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\n\t\t} // ArrayElement\n\n\n\t\t_setValue_arrayElement(buffer, offset) {\n\t\t\tthis.resolvedProperty[this.propertyIndex] = buffer[offset];\n\t\t}\n\n\t\t_setValue_arrayElement_setNeedsUpdate(buffer, offset) {\n\t\t\tthis.resolvedProperty[this.propertyIndex] = buffer[offset];\n\t\t\tthis.targetObject.needsUpdate = true;\n\t\t}\n\n\t\t_setValue_arrayElement_setMatrixWorldNeedsUpdate(buffer, offset) {\n\t\t\tthis.resolvedProperty[this.propertyIndex] = buffer[offset];\n\t\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\n\t\t} // HasToFromArray\n\n\n\t\t_setValue_fromArray(buffer, offset) {\n\t\t\tthis.resolvedProperty.fromArray(buffer, offset);\n\t\t}\n\n\t\t_setValue_fromArray_setNeedsUpdate(buffer, offset) {\n\t\t\tthis.resolvedProperty.fromArray(buffer, offset);\n\t\t\tthis.targetObject.needsUpdate = true;\n\t\t}\n\n\t\t_setValue_fromArray_setMatrixWorldNeedsUpdate(buffer, offset) {\n\t\t\tthis.resolvedProperty.fromArray(buffer, offset);\n\t\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\n\t\t}\n\n\t\t_getValue_unbound(targetArray, offset) {\n\t\t\tthis.bind();\n\t\t\tthis.getValue(targetArray, offset);\n\t\t}\n\n\t\t_setValue_unbound(sourceArray, offset) {\n\t\t\tthis.bind();\n\t\t\tthis.setValue(sourceArray, offset);\n\t\t} // create getter / setter pair for a property in the scene graph\n\n\n\t\tbind() {\n\t\t\tlet targetObject = this.node;\n\t\t\tconst parsedPath = this.parsedPath;\n\t\t\tconst objectName = parsedPath.objectName;\n\t\t\tconst propertyName = parsedPath.propertyName;\n\t\t\tlet propertyIndex = parsedPath.propertyIndex;\n\n\t\t\tif (!targetObject) {\n\t\t\t\ttargetObject = PropertyBinding.findNode(this.rootNode, parsedPath.nodeName) || this.rootNode;\n\t\t\t\tthis.node = targetObject;\n\t\t\t} // set fail state so we can just 'return' on error\n\n\n\t\t\tthis.getValue = this._getValue_unavailable;\n\t\t\tthis.setValue = this._setValue_unavailable; // ensure there is a value node\n\n\t\t\tif (!targetObject) {\n\t\t\t\tconsole.error('THREE.PropertyBinding: Trying to update node for track: ' + this.path + ' but it wasn\\'t found.');\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (objectName) {\n\t\t\t\tlet objectIndex = parsedPath.objectIndex; // special cases were we need to reach deeper into the hierarchy to get the face materials....\n\n\t\t\t\tswitch (objectName) {\n\t\t\t\t\tcase 'materials':\n\t\t\t\t\t\tif (!targetObject.material) {\n\t\t\t\t\t\t\tconsole.error('THREE.PropertyBinding: Can not bind to material as node does not have a material.', this);\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (!targetObject.material.materials) {\n\t\t\t\t\t\t\tconsole.error('THREE.PropertyBinding: Can not bind to material.materials as node.material does not have a materials array.', this);\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\ttargetObject = targetObject.material.materials;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'bones':\n\t\t\t\t\t\tif (!targetObject.skeleton) {\n\t\t\t\t\t\t\tconsole.error('THREE.PropertyBinding: Can not bind to bones as node does not have a skeleton.', this);\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t} // potential future optimization: skip this if propertyIndex is already an integer\n\t\t\t\t\t\t// and convert the integer string to a true integer.\n\n\n\t\t\t\t\t\ttargetObject = targetObject.skeleton.bones; // support resolving morphTarget names into indices.\n\n\t\t\t\t\t\tfor (let i = 0; i < targetObject.length; i++) {\n\t\t\t\t\t\t\tif (targetObject[i].name === objectIndex) {\n\t\t\t\t\t\t\t\tobjectIndex = i;\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tif (targetObject[objectName] === undefined) {\n\t\t\t\t\t\t\tconsole.error('THREE.PropertyBinding: Can not bind to objectName of node undefined.', this);\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\ttargetObject = targetObject[objectName];\n\t\t\t\t}\n\n\t\t\t\tif (objectIndex !== undefined) {\n\t\t\t\t\tif (targetObject[objectIndex] === undefined) {\n\t\t\t\t\t\tconsole.error('THREE.PropertyBinding: Trying to bind to objectIndex of objectName, but is undefined.', this, targetObject);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\ttargetObject = targetObject[objectIndex];\n\t\t\t\t}\n\t\t\t} // resolve property\n\n\n\t\t\tconst nodeProperty = targetObject[propertyName];\n\n\t\t\tif (nodeProperty === undefined) {\n\t\t\t\tconst nodeName = parsedPath.nodeName;\n\t\t\t\tconsole.error('THREE.PropertyBinding: Trying to update property for track: ' + nodeName + '.' + propertyName + ' but it wasn\\'t found.', targetObject);\n\t\t\t\treturn;\n\t\t\t} // determine versioning scheme\n\n\n\t\t\tlet versioning = this.Versioning.None;\n\t\t\tthis.targetObject = targetObject;\n\n\t\t\tif (targetObject.needsUpdate !== undefined) {\n\t\t\t\t// material\n\t\t\t\tversioning = this.Versioning.NeedsUpdate;\n\t\t\t} else if (targetObject.matrixWorldNeedsUpdate !== undefined) {\n\t\t\t\t// node transform\n\t\t\t\tversioning = this.Versioning.MatrixWorldNeedsUpdate;\n\t\t\t} // determine how the property gets bound\n\n\n\t\t\tlet bindingType = this.BindingType.Direct;\n\n\t\t\tif (propertyIndex !== undefined) {\n\t\t\t\t// access a sub element of the property array (only primitives are supported right now)\n\t\t\t\tif (propertyName === 'morphTargetInfluences') {\n\t\t\t\t\t// potential optimization, skip this if propertyIndex is already an integer, and convert the integer string to a true integer.\n\t\t\t\t\t// support resolving morphTarget names into indices.\n\t\t\t\t\tif (!targetObject.geometry) {\n\t\t\t\t\t\tconsole.error('THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.', this);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (targetObject.geometry.isBufferGeometry) {\n\t\t\t\t\t\tif (!targetObject.geometry.morphAttributes) {\n\t\t\t\t\t\t\tconsole.error('THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphAttributes.', this);\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (targetObject.morphTargetDictionary[propertyIndex] !== undefined) {\n\t\t\t\t\t\t\tpropertyIndex = targetObject.morphTargetDictionary[propertyIndex];\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tconsole.error('THREE.PropertyBinding: Can not bind to morphTargetInfluences on THREE.Geometry. Use THREE.BufferGeometry instead.', this);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tbindingType = this.BindingType.ArrayElement;\n\t\t\t\tthis.resolvedProperty = nodeProperty;\n\t\t\t\tthis.propertyIndex = propertyIndex;\n\t\t\t} else if (nodeProperty.fromArray !== undefined && nodeProperty.toArray !== undefined) {\n\t\t\t\t// must use copy for Object3D.Euler/Quaternion\n\t\t\t\tbindingType = this.BindingType.HasFromToArray;\n\t\t\t\tthis.resolvedProperty = nodeProperty;\n\t\t\t} else if (Array.isArray(nodeProperty)) {\n\t\t\t\tbindingType = this.BindingType.EntireArray;\n\t\t\t\tthis.resolvedProperty = nodeProperty;\n\t\t\t} else {\n\t\t\t\tthis.propertyName = propertyName;\n\t\t\t} // select getter / setter\n\n\n\t\t\tthis.getValue = this.GetterByBindingType[bindingType];\n\t\t\tthis.setValue = this.SetterByBindingTypeAndVersioning[bindingType][versioning];\n\t\t}\n\n\t\tunbind() {\n\t\t\tthis.node = null; // back to the prototype version of getValue / setValue\n\t\t\t// note: avoiding to mutate the shape of 'this' via 'delete'\n\n\t\t\tthis.getValue = this._getValue_unbound;\n\t\t\tthis.setValue = this._setValue_unbound;\n\t\t}\n\n\t}\n\n\tPropertyBinding.Composite = Composite;\n\tPropertyBinding.prototype.BindingType = {\n\t\tDirect: 0,\n\t\tEntireArray: 1,\n\t\tArrayElement: 2,\n\t\tHasFromToArray: 3\n\t};\n\tPropertyBinding.prototype.Versioning = {\n\t\tNone: 0,\n\t\tNeedsUpdate: 1,\n\t\tMatrixWorldNeedsUpdate: 2\n\t};\n\tPropertyBinding.prototype.GetterByBindingType = [PropertyBinding.prototype._getValue_direct, PropertyBinding.prototype._getValue_array, PropertyBinding.prototype._getValue_arrayElement, PropertyBinding.prototype._getValue_toArray];\n\tPropertyBinding.prototype.SetterByBindingTypeAndVersioning = [[// Direct\n\tPropertyBinding.prototype._setValue_direct, PropertyBinding.prototype._setValue_direct_setNeedsUpdate, PropertyBinding.prototype._setValue_direct_setMatrixWorldNeedsUpdate], [// EntireArray\n\tPropertyBinding.prototype._setValue_array, PropertyBinding.prototype._setValue_array_setNeedsUpdate, PropertyBinding.prototype._setValue_array_setMatrixWorldNeedsUpdate], [// ArrayElement\n\tPropertyBinding.prototype._setValue_arrayElement, PropertyBinding.prototype._setValue_arrayElement_setNeedsUpdate, PropertyBinding.prototype._setValue_arrayElement_setMatrixWorldNeedsUpdate], [// HasToFromArray\n\tPropertyBinding.prototype._setValue_fromArray, PropertyBinding.prototype._setValue_fromArray_setNeedsUpdate, PropertyBinding.prototype._setValue_fromArray_setMatrixWorldNeedsUpdate]];\n\n\t/**\n\t *\n\t * A group of objects that receives a shared animation state.\n\t *\n\t * Usage:\n\t *\n\t *\t- Add objects you would otherwise pass as 'root' to the\n\t *\t\tconstructor or the .clipAction method of AnimationMixer.\n\t *\n\t *\t- Instead pass this object as 'root'.\n\t *\n\t *\t- You can also add and remove objects later when the mixer\n\t *\t\tis running.\n\t *\n\t * Note:\n\t *\n\t *\t\tObjects of this class appear as one object to the mixer,\n\t *\t\tso cache control of the individual objects must be done\n\t *\t\ton the group.\n\t *\n\t * Limitation:\n\t *\n\t *\t- The animated properties must be compatible among the\n\t *\t\tall objects in the group.\n\t *\n\t *\t- A single property can either be controlled through a\n\t *\t\ttarget group or directly, but not both.\n\t */\n\n\tclass AnimationObjectGroup {\n\t\tconstructor() {\n\t\t\tthis.uuid = generateUUID(); // cached objects followed by the active ones\n\n\t\t\tthis._objects = Array.prototype.slice.call(arguments);\n\t\t\tthis.nCachedObjects_ = 0; // threshold\n\t\t\t// note: read by PropertyBinding.Composite\n\n\t\t\tconst indices = {};\n\t\t\tthis._indicesByUUID = indices; // for bookkeeping\n\n\t\t\tfor (let i = 0, n = arguments.length; i !== n; ++i) {\n\t\t\t\tindices[arguments[i].uuid] = i;\n\t\t\t}\n\n\t\t\tthis._paths = []; // inside: string\n\n\t\t\tthis._parsedPaths = []; // inside: { we don't care, here }\n\n\t\t\tthis._bindings = []; // inside: Array< PropertyBinding >\n\n\t\t\tthis._bindingsIndicesByPath = {}; // inside: indices in these arrays\n\n\t\t\tconst scope = this;\n\t\t\tthis.stats = {\n\t\t\t\tobjects: {\n\t\t\t\t\tget total() {\n\t\t\t\t\t\treturn scope._objects.length;\n\t\t\t\t\t},\n\n\t\t\t\t\tget inUse() {\n\t\t\t\t\t\treturn this.total - scope.nCachedObjects_;\n\t\t\t\t\t}\n\n\t\t\t\t},\n\n\t\t\t\tget bindingsPerObject() {\n\t\t\t\t\treturn scope._bindings.length;\n\t\t\t\t}\n\n\t\t\t};\n\t\t}\n\n\t\tadd() {\n\t\t\tconst objects = this._objects,\n\t\t\t\t\t\tindicesByUUID = this._indicesByUUID,\n\t\t\t\t\t\tpaths = this._paths,\n\t\t\t\t\t\tparsedPaths = this._parsedPaths,\n\t\t\t\t\t\tbindings = this._bindings,\n\t\t\t\t\t\tnBindings = bindings.length;\n\t\t\tlet knownObject = undefined,\n\t\t\t\t\tnObjects = objects.length,\n\t\t\t\t\tnCachedObjects = this.nCachedObjects_;\n\n\t\t\tfor (let i = 0, n = arguments.length; i !== n; ++i) {\n\t\t\t\tconst object = arguments[i],\n\t\t\t\t\t\t\tuuid = object.uuid;\n\t\t\t\tlet index = indicesByUUID[uuid];\n\n\t\t\t\tif (index === undefined) {\n\t\t\t\t\t// unknown object -> add it to the ACTIVE region\n\t\t\t\t\tindex = nObjects++;\n\t\t\t\t\tindicesByUUID[uuid] = index;\n\t\t\t\t\tobjects.push(object); // accounting is done, now do the same for all bindings\n\n\t\t\t\t\tfor (let j = 0, m = nBindings; j !== m; ++j) {\n\t\t\t\t\t\tbindings[j].push(new PropertyBinding(object, paths[j], parsedPaths[j]));\n\t\t\t\t\t}\n\t\t\t\t} else if (index < nCachedObjects) {\n\t\t\t\t\tknownObject = objects[index]; // move existing object to the ACTIVE region\n\n\t\t\t\t\tconst firstActiveIndex = --nCachedObjects,\n\t\t\t\t\t\t\t\tlastCachedObject = objects[firstActiveIndex];\n\t\t\t\t\tindicesByUUID[lastCachedObject.uuid] = index;\n\t\t\t\t\tobjects[index] = lastCachedObject;\n\t\t\t\t\tindicesByUUID[uuid] = firstActiveIndex;\n\t\t\t\t\tobjects[firstActiveIndex] = object; // accounting is done, now do the same for all bindings\n\n\t\t\t\t\tfor (let j = 0, m = nBindings; j !== m; ++j) {\n\t\t\t\t\t\tconst bindingsForPath = bindings[j],\n\t\t\t\t\t\t\t\t\tlastCached = bindingsForPath[firstActiveIndex];\n\t\t\t\t\t\tlet binding = bindingsForPath[index];\n\t\t\t\t\t\tbindingsForPath[index] = lastCached;\n\n\t\t\t\t\t\tif (binding === undefined) {\n\t\t\t\t\t\t\t// since we do not bother to create new bindings\n\t\t\t\t\t\t\t// for objects that are cached, the binding may\n\t\t\t\t\t\t\t// or may not exist\n\t\t\t\t\t\t\tbinding = new PropertyBinding(object, paths[j], parsedPaths[j]);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tbindingsForPath[firstActiveIndex] = binding;\n\t\t\t\t\t}\n\t\t\t\t} else if (objects[index] !== knownObject) {\n\t\t\t\t\tconsole.error('THREE.AnimationObjectGroup: Different objects with the same UUID ' + 'detected. Clean the caches or recreate your infrastructure when reloading scenes.');\n\t\t\t\t} // else the object is already where we want it to be\n\n\t\t\t} // for arguments\n\n\n\t\t\tthis.nCachedObjects_ = nCachedObjects;\n\t\t}\n\n\t\tremove() {\n\t\t\tconst objects = this._objects,\n\t\t\t\t\t\tindicesByUUID = this._indicesByUUID,\n\t\t\t\t\t\tbindings = this._bindings,\n\t\t\t\t\t\tnBindings = bindings.length;\n\t\t\tlet nCachedObjects = this.nCachedObjects_;\n\n\t\t\tfor (let i = 0, n = arguments.length; i !== n; ++i) {\n\t\t\t\tconst object = arguments[i],\n\t\t\t\t\t\t\tuuid = object.uuid,\n\t\t\t\t\t\t\tindex = indicesByUUID[uuid];\n\n\t\t\t\tif (index !== undefined && index >= nCachedObjects) {\n\t\t\t\t\t// move existing object into the CACHED region\n\t\t\t\t\tconst lastCachedIndex = nCachedObjects++,\n\t\t\t\t\t\t\t\tfirstActiveObject = objects[lastCachedIndex];\n\t\t\t\t\tindicesByUUID[firstActiveObject.uuid] = index;\n\t\t\t\t\tobjects[index] = firstActiveObject;\n\t\t\t\t\tindicesByUUID[uuid] = lastCachedIndex;\n\t\t\t\t\tobjects[lastCachedIndex] = object; // accounting is done, now do the same for all bindings\n\n\t\t\t\t\tfor (let j = 0, m = nBindings; j !== m; ++j) {\n\t\t\t\t\t\tconst bindingsForPath = bindings[j],\n\t\t\t\t\t\t\t\t\tfirstActive = bindingsForPath[lastCachedIndex],\n\t\t\t\t\t\t\t\t\tbinding = bindingsForPath[index];\n\t\t\t\t\t\tbindingsForPath[index] = firstActive;\n\t\t\t\t\t\tbindingsForPath[lastCachedIndex] = binding;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} // for arguments\n\n\n\t\t\tthis.nCachedObjects_ = nCachedObjects;\n\t\t} // remove & forget\n\n\n\t\tuncache() {\n\t\t\tconst objects = this._objects,\n\t\t\t\t\t\tindicesByUUID = this._indicesByUUID,\n\t\t\t\t\t\tbindings = this._bindings,\n\t\t\t\t\t\tnBindings = bindings.length;\n\t\t\tlet nCachedObjects = this.nCachedObjects_,\n\t\t\t\t\tnObjects = objects.length;\n\n\t\t\tfor (let i = 0, n = arguments.length; i !== n; ++i) {\n\t\t\t\tconst object = arguments[i],\n\t\t\t\t\t\t\tuuid = object.uuid,\n\t\t\t\t\t\t\tindex = indicesByUUID[uuid];\n\n\t\t\t\tif (index !== undefined) {\n\t\t\t\t\tdelete indicesByUUID[uuid];\n\n\t\t\t\t\tif (index < nCachedObjects) {\n\t\t\t\t\t\t// object is cached, shrink the CACHED region\n\t\t\t\t\t\tconst firstActiveIndex = --nCachedObjects,\n\t\t\t\t\t\t\t\t\tlastCachedObject = objects[firstActiveIndex],\n\t\t\t\t\t\t\t\t\tlastIndex = --nObjects,\n\t\t\t\t\t\t\t\t\tlastObject = objects[lastIndex]; // last cached object takes this object's place\n\n\t\t\t\t\t\tindicesByUUID[lastCachedObject.uuid] = index;\n\t\t\t\t\t\tobjects[index] = lastCachedObject; // last object goes to the activated slot and pop\n\n\t\t\t\t\t\tindicesByUUID[lastObject.uuid] = firstActiveIndex;\n\t\t\t\t\t\tobjects[firstActiveIndex] = lastObject;\n\t\t\t\t\t\tobjects.pop(); // accounting is done, now do the same for all bindings\n\n\t\t\t\t\t\tfor (let j = 0, m = nBindings; j !== m; ++j) {\n\t\t\t\t\t\t\tconst bindingsForPath = bindings[j],\n\t\t\t\t\t\t\t\t\t\tlastCached = bindingsForPath[firstActiveIndex],\n\t\t\t\t\t\t\t\t\t\tlast = bindingsForPath[lastIndex];\n\t\t\t\t\t\t\tbindingsForPath[index] = lastCached;\n\t\t\t\t\t\t\tbindingsForPath[firstActiveIndex] = last;\n\t\t\t\t\t\t\tbindingsForPath.pop();\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// object is active, just swap with the last and pop\n\t\t\t\t\t\tconst lastIndex = --nObjects,\n\t\t\t\t\t\t\t\t\tlastObject = objects[lastIndex];\n\n\t\t\t\t\t\tif (lastIndex > 0) {\n\t\t\t\t\t\t\tindicesByUUID[lastObject.uuid] = index;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tobjects[index] = lastObject;\n\t\t\t\t\t\tobjects.pop(); // accounting is done, now do the same for all bindings\n\n\t\t\t\t\t\tfor (let j = 0, m = nBindings; j !== m; ++j) {\n\t\t\t\t\t\t\tconst bindingsForPath = bindings[j];\n\t\t\t\t\t\t\tbindingsForPath[index] = bindingsForPath[lastIndex];\n\t\t\t\t\t\t\tbindingsForPath.pop();\n\t\t\t\t\t\t}\n\t\t\t\t\t} // cached or active\n\n\t\t\t\t} // if object is known\n\n\t\t\t} // for arguments\n\n\n\t\t\tthis.nCachedObjects_ = nCachedObjects;\n\t\t} // Internal interface used by befriended PropertyBinding.Composite:\n\n\n\t\tsubscribe_(path, parsedPath) {\n\t\t\t// returns an array of bindings for the given path that is changed\n\t\t\t// according to the contained objects in the group\n\t\t\tconst indicesByPath = this._bindingsIndicesByPath;\n\t\t\tlet index = indicesByPath[path];\n\t\t\tconst bindings = this._bindings;\n\t\t\tif (index !== undefined) return bindings[index];\n\t\t\tconst paths = this._paths,\n\t\t\t\t\t\tparsedPaths = this._parsedPaths,\n\t\t\t\t\t\tobjects = this._objects,\n\t\t\t\t\t\tnObjects = objects.length,\n\t\t\t\t\t\tnCachedObjects = this.nCachedObjects_,\n\t\t\t\t\t\tbindingsForPath = new Array(nObjects);\n\t\t\tindex = bindings.length;\n\t\t\tindicesByPath[path] = index;\n\t\t\tpaths.push(path);\n\t\t\tparsedPaths.push(parsedPath);\n\t\t\tbindings.push(bindingsForPath);\n\n\t\t\tfor (let i = nCachedObjects, n = objects.length; i !== n; ++i) {\n\t\t\t\tconst object = objects[i];\n\t\t\t\tbindingsForPath[i] = new PropertyBinding(object, path, parsedPath);\n\t\t\t}\n\n\t\t\treturn bindingsForPath;\n\t\t}\n\n\t\tunsubscribe_(path) {\n\t\t\t// tells the group to forget about a property path and no longer\n\t\t\t// update the array previously obtained with 'subscribe_'\n\t\t\tconst indicesByPath = this._bindingsIndicesByPath,\n\t\t\t\t\t\tindex = indicesByPath[path];\n\n\t\t\tif (index !== undefined) {\n\t\t\t\tconst paths = this._paths,\n\t\t\t\t\t\t\tparsedPaths = this._parsedPaths,\n\t\t\t\t\t\t\tbindings = this._bindings,\n\t\t\t\t\t\t\tlastBindingsIndex = bindings.length - 1,\n\t\t\t\t\t\t\tlastBindings = bindings[lastBindingsIndex],\n\t\t\t\t\t\t\tlastBindingsPath = path[lastBindingsIndex];\n\t\t\t\tindicesByPath[lastBindingsPath] = index;\n\t\t\t\tbindings[index] = lastBindings;\n\t\t\t\tbindings.pop();\n\t\t\t\tparsedPaths[index] = parsedPaths[lastBindingsIndex];\n\t\t\t\tparsedPaths.pop();\n\t\t\t\tpaths[index] = paths[lastBindingsIndex];\n\t\t\t\tpaths.pop();\n\t\t\t}\n\t\t}\n\n\t}\n\n\tAnimationObjectGroup.prototype.isAnimationObjectGroup = true;\n\n\tclass AnimationAction {\n\t\tconstructor(mixer, clip, localRoot = null, blendMode = clip.blendMode) {\n\t\t\tthis._mixer = mixer;\n\t\t\tthis._clip = clip;\n\t\t\tthis._localRoot = localRoot;\n\t\t\tthis.blendMode = blendMode;\n\t\t\tconst tracks = clip.tracks,\n\t\t\t\t\t\tnTracks = tracks.length,\n\t\t\t\t\t\tinterpolants = new Array(nTracks);\n\t\t\tconst interpolantSettings = {\n\t\t\t\tendingStart: ZeroCurvatureEnding,\n\t\t\t\tendingEnd: ZeroCurvatureEnding\n\t\t\t};\n\n\t\t\tfor (let i = 0; i !== nTracks; ++i) {\n\t\t\t\tconst interpolant = tracks[i].createInterpolant(null);\n\t\t\t\tinterpolants[i] = interpolant;\n\t\t\t\tinterpolant.settings = interpolantSettings;\n\t\t\t}\n\n\t\t\tthis._interpolantSettings = interpolantSettings;\n\t\t\tthis._interpolants = interpolants; // bound by the mixer\n\t\t\t// inside: PropertyMixer (managed by the mixer)\n\n\t\t\tthis._propertyBindings = new Array(nTracks);\n\t\t\tthis._cacheIndex = null; // for the memory manager\n\n\t\t\tthis._byClipCacheIndex = null; // for the memory manager\n\n\t\t\tthis._timeScaleInterpolant = null;\n\t\t\tthis._weightInterpolant = null;\n\t\t\tthis.loop = LoopRepeat;\n\t\t\tthis._loopCount = -1; // global mixer time when the action is to be started\n\t\t\t// it's set back to 'null' upon start of the action\n\n\t\t\tthis._startTime = null; // scaled local time of the action\n\t\t\t// gets clamped or wrapped to 0..clip.duration according to loop\n\n\t\t\tthis.time = 0;\n\t\t\tthis.timeScale = 1;\n\t\t\tthis._effectiveTimeScale = 1;\n\t\t\tthis.weight = 1;\n\t\t\tthis._effectiveWeight = 1;\n\t\t\tthis.repetitions = Infinity; // no. of repetitions when looping\n\n\t\t\tthis.paused = false; // true -> zero effective time scale\n\n\t\t\tthis.enabled = true; // false -> zero effective weight\n\n\t\t\tthis.clampWhenFinished = false; // keep feeding the last frame?\n\n\t\t\tthis.zeroSlopeAtStart = true; // for smooth interpolation w/o separate\n\n\t\t\tthis.zeroSlopeAtEnd = true; // clips for start, loop and end\n\t\t} // State & Scheduling\n\n\n\t\tplay() {\n\t\t\tthis._mixer._activateAction(this);\n\n\t\t\treturn this;\n\t\t}\n\n\t\tstop() {\n\t\t\tthis._mixer._deactivateAction(this);\n\n\t\t\treturn this.reset();\n\t\t}\n\n\t\treset() {\n\t\t\tthis.paused = false;\n\t\t\tthis.enabled = true;\n\t\t\tthis.time = 0; // restart clip\n\n\t\t\tthis._loopCount = -1; // forget previous loops\n\n\t\t\tthis._startTime = null; // forget scheduling\n\n\t\t\treturn this.stopFading().stopWarping();\n\t\t}\n\n\t\tisRunning() {\n\t\t\treturn this.enabled && !this.paused && this.timeScale !== 0 && this._startTime === null && this._mixer._isActiveAction(this);\n\t\t} // return true when play has been called\n\n\n\t\tisScheduled() {\n\t\t\treturn this._mixer._isActiveAction(this);\n\t\t}\n\n\t\tstartAt(time) {\n\t\t\tthis._startTime = time;\n\t\t\treturn this;\n\t\t}\n\n\t\tsetLoop(mode, repetitions) {\n\t\t\tthis.loop = mode;\n\t\t\tthis.repetitions = repetitions;\n\t\t\treturn this;\n\t\t} // Weight\n\t\t// set the weight stopping any scheduled fading\n\t\t// although .enabled = false yields an effective weight of zero, this\n\t\t// method does *not* change .enabled, because it would be confusing\n\n\n\t\tsetEffectiveWeight(weight) {\n\t\t\tthis.weight = weight; // note: same logic as when updated at runtime\n\n\t\t\tthis._effectiveWeight = this.enabled ? weight : 0;\n\t\t\treturn this.stopFading();\n\t\t} // return the weight considering fading and .enabled\n\n\n\t\tgetEffectiveWeight() {\n\t\t\treturn this._effectiveWeight;\n\t\t}\n\n\t\tfadeIn(duration) {\n\t\t\treturn this._scheduleFading(duration, 0, 1);\n\t\t}\n\n\t\tfadeOut(duration) {\n\t\t\treturn this._scheduleFading(duration, 1, 0);\n\t\t}\n\n\t\tcrossFadeFrom(fadeOutAction, duration, warp) {\n\t\t\tfadeOutAction.fadeOut(duration);\n\t\t\tthis.fadeIn(duration);\n\n\t\t\tif (warp) {\n\t\t\t\tconst fadeInDuration = this._clip.duration,\n\t\t\t\t\t\t\tfadeOutDuration = fadeOutAction._clip.duration,\n\t\t\t\t\t\t\tstartEndRatio = fadeOutDuration / fadeInDuration,\n\t\t\t\t\t\t\tendStartRatio = fadeInDuration / fadeOutDuration;\n\t\t\t\tfadeOutAction.warp(1.0, startEndRatio, duration);\n\t\t\t\tthis.warp(endStartRatio, 1.0, duration);\n\t\t\t}\n\n\t\t\treturn this;\n\t\t}\n\n\t\tcrossFadeTo(fadeInAction, duration, warp) {\n\t\t\treturn fadeInAction.crossFadeFrom(this, duration, warp);\n\t\t}\n\n\t\tstopFading() {\n\t\t\tconst weightInterpolant = this._weightInterpolant;\n\n\t\t\tif (weightInterpolant !== null) {\n\t\t\t\tthis._weightInterpolant = null;\n\n\t\t\t\tthis._mixer._takeBackControlInterpolant(weightInterpolant);\n\t\t\t}\n\n\t\t\treturn this;\n\t\t} // Time Scale Control\n\t\t// set the time scale stopping any scheduled warping\n\t\t// although .paused = true yields an effective time scale of zero, this\n\t\t// method does *not* change .paused, because it would be confusing\n\n\n\t\tsetEffectiveTimeScale(timeScale) {\n\t\t\tthis.timeScale = timeScale;\n\t\t\tthis._effectiveTimeScale = this.paused ? 0 : timeScale;\n\t\t\treturn this.stopWarping();\n\t\t} // return the time scale considering warping and .paused\n\n\n\t\tgetEffectiveTimeScale() {\n\t\t\treturn this._effectiveTimeScale;\n\t\t}\n\n\t\tsetDuration(duration) {\n\t\t\tthis.timeScale = this._clip.duration / duration;\n\t\t\treturn this.stopWarping();\n\t\t}\n\n\t\tsyncWith(action) {\n\t\t\tthis.time = action.time;\n\t\t\tthis.timeScale = action.timeScale;\n\t\t\treturn this.stopWarping();\n\t\t}\n\n\t\thalt(duration) {\n\t\t\treturn this.warp(this._effectiveTimeScale, 0, duration);\n\t\t}\n\n\t\twarp(startTimeScale, endTimeScale, duration) {\n\t\t\tconst mixer = this._mixer,\n\t\t\t\t\t\tnow = mixer.time,\n\t\t\t\t\t\ttimeScale = this.timeScale;\n\t\t\tlet interpolant = this._timeScaleInterpolant;\n\n\t\t\tif (interpolant === null) {\n\t\t\t\tinterpolant = mixer._lendControlInterpolant();\n\t\t\t\tthis._timeScaleInterpolant = interpolant;\n\t\t\t}\n\n\t\t\tconst times = interpolant.parameterPositions,\n\t\t\t\t\t\tvalues = interpolant.sampleValues;\n\t\t\ttimes[0] = now;\n\t\t\ttimes[1] = now + duration;\n\t\t\tvalues[0] = startTimeScale / timeScale;\n\t\t\tvalues[1] = endTimeScale / timeScale;\n\t\t\treturn this;\n\t\t}\n\n\t\tstopWarping() {\n\t\t\tconst timeScaleInterpolant = this._timeScaleInterpolant;\n\n\t\t\tif (timeScaleInterpolant !== null) {\n\t\t\t\tthis._timeScaleInterpolant = null;\n\n\t\t\t\tthis._mixer._takeBackControlInterpolant(timeScaleInterpolant);\n\t\t\t}\n\n\t\t\treturn this;\n\t\t} // Object Accessors\n\n\n\t\tgetMixer() {\n\t\t\treturn this._mixer;\n\t\t}\n\n\t\tgetClip() {\n\t\t\treturn this._clip;\n\t\t}\n\n\t\tgetRoot() {\n\t\t\treturn this._localRoot || this._mixer._root;\n\t\t} // Interna\n\n\n\t\t_update(time, deltaTime, timeDirection, accuIndex) {\n\t\t\t// called by the mixer\n\t\t\tif (!this.enabled) {\n\t\t\t\t// call ._updateWeight() to update ._effectiveWeight\n\t\t\t\tthis._updateWeight(time);\n\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst startTime = this._startTime;\n\n\t\t\tif (startTime !== null) {\n\t\t\t\t// check for scheduled start of action\n\t\t\t\tconst timeRunning = (time - startTime) * timeDirection;\n\n\t\t\t\tif (timeRunning < 0 || timeDirection === 0) {\n\t\t\t\t\treturn; // yet to come / don't decide when delta = 0\n\t\t\t\t} // start\n\n\n\t\t\t\tthis._startTime = null; // unschedule\n\n\t\t\t\tdeltaTime = timeDirection * timeRunning;\n\t\t\t} // apply time scale and advance time\n\n\n\t\t\tdeltaTime *= this._updateTimeScale(time);\n\n\t\t\tconst clipTime = this._updateTime(deltaTime); // note: _updateTime may disable the action resulting in\n\t\t\t// an effective weight of 0\n\n\n\t\t\tconst weight = this._updateWeight(time);\n\n\t\t\tif (weight > 0) {\n\t\t\t\tconst interpolants = this._interpolants;\n\t\t\t\tconst propertyMixers = this._propertyBindings;\n\n\t\t\t\tswitch (this.blendMode) {\n\t\t\t\t\tcase AdditiveAnimationBlendMode:\n\t\t\t\t\t\tfor (let j = 0, m = interpolants.length; j !== m; ++j) {\n\t\t\t\t\t\t\tinterpolants[j].evaluate(clipTime);\n\t\t\t\t\t\t\tpropertyMixers[j].accumulateAdditive(weight);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase NormalAnimationBlendMode:\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tfor (let j = 0, m = interpolants.length; j !== m; ++j) {\n\t\t\t\t\t\t\tinterpolants[j].evaluate(clipTime);\n\t\t\t\t\t\t\tpropertyMixers[j].accumulate(accuIndex, weight);\n\t\t\t\t\t\t}\n\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t_updateWeight(time) {\n\t\t\tlet weight = 0;\n\n\t\t\tif (this.enabled) {\n\t\t\t\tweight = this.weight;\n\t\t\t\tconst interpolant = this._weightInterpolant;\n\n\t\t\t\tif (interpolant !== null) {\n\t\t\t\t\tconst interpolantValue = interpolant.evaluate(time)[0];\n\t\t\t\t\tweight *= interpolantValue;\n\n\t\t\t\t\tif (time > interpolant.parameterPositions[1]) {\n\t\t\t\t\t\tthis.stopFading();\n\n\t\t\t\t\t\tif (interpolantValue === 0) {\n\t\t\t\t\t\t\t// faded out, disable\n\t\t\t\t\t\t\tthis.enabled = false;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis._effectiveWeight = weight;\n\t\t\treturn weight;\n\t\t}\n\n\t\t_updateTimeScale(time) {\n\t\t\tlet timeScale = 0;\n\n\t\t\tif (!this.paused) {\n\t\t\t\ttimeScale = this.timeScale;\n\t\t\t\tconst interpolant = this._timeScaleInterpolant;\n\n\t\t\t\tif (interpolant !== null) {\n\t\t\t\t\tconst interpolantValue = interpolant.evaluate(time)[0];\n\t\t\t\t\ttimeScale *= interpolantValue;\n\n\t\t\t\t\tif (time > interpolant.parameterPositions[1]) {\n\t\t\t\t\t\tthis.stopWarping();\n\n\t\t\t\t\t\tif (timeScale === 0) {\n\t\t\t\t\t\t\t// motion has halted, pause\n\t\t\t\t\t\t\tthis.paused = true;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// warp done - apply final time scale\n\t\t\t\t\t\t\tthis.timeScale = timeScale;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis._effectiveTimeScale = timeScale;\n\t\t\treturn timeScale;\n\t\t}\n\n\t\t_updateTime(deltaTime) {\n\t\t\tconst duration = this._clip.duration;\n\t\t\tconst loop = this.loop;\n\t\t\tlet time = this.time + deltaTime;\n\t\t\tlet loopCount = this._loopCount;\n\t\t\tconst pingPong = loop === LoopPingPong;\n\n\t\t\tif (deltaTime === 0) {\n\t\t\t\tif (loopCount === -1) return time;\n\t\t\t\treturn pingPong && (loopCount & 1) === 1 ? duration - time : time;\n\t\t\t}\n\n\t\t\tif (loop === LoopOnce) {\n\t\t\t\tif (loopCount === -1) {\n\t\t\t\t\t// just started\n\t\t\t\t\tthis._loopCount = 0;\n\n\t\t\t\t\tthis._setEndings(true, true, false);\n\t\t\t\t}\n\n\t\t\t\thandle_stop: {\n\t\t\t\t\tif (time >= duration) {\n\t\t\t\t\t\ttime = duration;\n\t\t\t\t\t} else if (time < 0) {\n\t\t\t\t\t\ttime = 0;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.time = time;\n\t\t\t\t\t\tbreak handle_stop;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (this.clampWhenFinished) this.paused = true;else this.enabled = false;\n\t\t\t\t\tthis.time = time;\n\n\t\t\t\t\tthis._mixer.dispatchEvent({\n\t\t\t\t\t\ttype: 'finished',\n\t\t\t\t\t\taction: this,\n\t\t\t\t\t\tdirection: deltaTime < 0 ? -1 : 1\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// repetitive Repeat or PingPong\n\t\t\t\tif (loopCount === -1) {\n\t\t\t\t\t// just started\n\t\t\t\t\tif (deltaTime >= 0) {\n\t\t\t\t\t\tloopCount = 0;\n\n\t\t\t\t\t\tthis._setEndings(true, this.repetitions === 0, pingPong);\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// when looping in reverse direction, the initial\n\t\t\t\t\t\t// transition through zero counts as a repetition,\n\t\t\t\t\t\t// so leave loopCount at -1\n\t\t\t\t\t\tthis._setEndings(this.repetitions === 0, true, pingPong);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (time >= duration || time < 0) {\n\t\t\t\t\t// wrap around\n\t\t\t\t\tconst loopDelta = Math.floor(time / duration); // signed\n\n\t\t\t\t\ttime -= duration * loopDelta;\n\t\t\t\t\tloopCount += Math.abs(loopDelta);\n\t\t\t\t\tconst pending = this.repetitions - loopCount;\n\n\t\t\t\t\tif (pending <= 0) {\n\t\t\t\t\t\t// have to stop (switch state, clamp time, fire event)\n\t\t\t\t\t\tif (this.clampWhenFinished) this.paused = true;else this.enabled = false;\n\t\t\t\t\t\ttime = deltaTime > 0 ? duration : 0;\n\t\t\t\t\t\tthis.time = time;\n\n\t\t\t\t\t\tthis._mixer.dispatchEvent({\n\t\t\t\t\t\t\ttype: 'finished',\n\t\t\t\t\t\t\taction: this,\n\t\t\t\t\t\t\tdirection: deltaTime > 0 ? 1 : -1\n\t\t\t\t\t\t});\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// keep running\n\t\t\t\t\t\tif (pending === 1) {\n\t\t\t\t\t\t\t// entering the last round\n\t\t\t\t\t\t\tconst atStart = deltaTime < 0;\n\n\t\t\t\t\t\t\tthis._setEndings(atStart, !atStart, pingPong);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tthis._setEndings(false, false, pingPong);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tthis._loopCount = loopCount;\n\t\t\t\t\t\tthis.time = time;\n\n\t\t\t\t\t\tthis._mixer.dispatchEvent({\n\t\t\t\t\t\t\ttype: 'loop',\n\t\t\t\t\t\t\taction: this,\n\t\t\t\t\t\t\tloopDelta: loopDelta\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tthis.time = time;\n\t\t\t\t}\n\n\t\t\t\tif (pingPong && (loopCount & 1) === 1) {\n\t\t\t\t\t// invert time for the \"pong round\"\n\t\t\t\t\treturn duration - time;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn time;\n\t\t}\n\n\t\t_setEndings(atStart, atEnd, pingPong) {\n\t\t\tconst settings = this._interpolantSettings;\n\n\t\t\tif (pingPong) {\n\t\t\t\tsettings.endingStart = ZeroSlopeEnding;\n\t\t\t\tsettings.endingEnd = ZeroSlopeEnding;\n\t\t\t} else {\n\t\t\t\t// assuming for LoopOnce atStart == atEnd == true\n\t\t\t\tif (atStart) {\n\t\t\t\t\tsettings.endingStart = this.zeroSlopeAtStart ? ZeroSlopeEnding : ZeroCurvatureEnding;\n\t\t\t\t} else {\n\t\t\t\t\tsettings.endingStart = WrapAroundEnding;\n\t\t\t\t}\n\n\t\t\t\tif (atEnd) {\n\t\t\t\t\tsettings.endingEnd = this.zeroSlopeAtEnd ? ZeroSlopeEnding : ZeroCurvatureEnding;\n\t\t\t\t} else {\n\t\t\t\t\tsettings.endingEnd = WrapAroundEnding;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t_scheduleFading(duration, weightNow, weightThen) {\n\t\t\tconst mixer = this._mixer,\n\t\t\t\t\t\tnow = mixer.time;\n\t\t\tlet interpolant = this._weightInterpolant;\n\n\t\t\tif (interpolant === null) {\n\t\t\t\tinterpolant = mixer._lendControlInterpolant();\n\t\t\t\tthis._weightInterpolant = interpolant;\n\t\t\t}\n\n\t\t\tconst times = interpolant.parameterPositions,\n\t\t\t\t\t\tvalues = interpolant.sampleValues;\n\t\t\ttimes[0] = now;\n\t\t\tvalues[0] = weightNow;\n\t\t\ttimes[1] = now + duration;\n\t\t\tvalues[1] = weightThen;\n\t\t\treturn this;\n\t\t}\n\n\t}\n\n\tclass AnimationMixer extends EventDispatcher {\n\t\tconstructor(root) {\n\t\t\tsuper();\n\t\t\tthis._root = root;\n\n\t\t\tthis._initMemoryManager();\n\n\t\t\tthis._accuIndex = 0;\n\t\t\tthis.time = 0;\n\t\t\tthis.timeScale = 1.0;\n\t\t}\n\n\t\t_bindAction(action, prototypeAction) {\n\t\t\tconst root = action._localRoot || this._root,\n\t\t\t\t\t\ttracks = action._clip.tracks,\n\t\t\t\t\t\tnTracks = tracks.length,\n\t\t\t\t\t\tbindings = action._propertyBindings,\n\t\t\t\t\t\tinterpolants = action._interpolants,\n\t\t\t\t\t\trootUuid = root.uuid,\n\t\t\t\t\t\tbindingsByRoot = this._bindingsByRootAndName;\n\t\t\tlet bindingsByName = bindingsByRoot[rootUuid];\n\n\t\t\tif (bindingsByName === undefined) {\n\t\t\t\tbindingsByName = {};\n\t\t\t\tbindingsByRoot[rootUuid] = bindingsByName;\n\t\t\t}\n\n\t\t\tfor (let i = 0; i !== nTracks; ++i) {\n\t\t\t\tconst track = tracks[i],\n\t\t\t\t\t\t\ttrackName = track.name;\n\t\t\t\tlet binding = bindingsByName[trackName];\n\n\t\t\t\tif (binding !== undefined) {\n\t\t\t\t\tbindings[i] = binding;\n\t\t\t\t} else {\n\t\t\t\t\tbinding = bindings[i];\n\n\t\t\t\t\tif (binding !== undefined) {\n\t\t\t\t\t\t// existing binding, make sure the cache knows\n\t\t\t\t\t\tif (binding._cacheIndex === null) {\n\t\t\t\t\t\t\t++binding.referenceCount;\n\n\t\t\t\t\t\t\tthis._addInactiveBinding(binding, rootUuid, trackName);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\n\t\t\t\t\tconst path = prototypeAction && prototypeAction._propertyBindings[i].binding.parsedPath;\n\t\t\t\t\tbinding = new PropertyMixer(PropertyBinding.create(root, trackName, path), track.ValueTypeName, track.getValueSize());\n\t\t\t\t\t++binding.referenceCount;\n\n\t\t\t\t\tthis._addInactiveBinding(binding, rootUuid, trackName);\n\n\t\t\t\t\tbindings[i] = binding;\n\t\t\t\t}\n\n\t\t\t\tinterpolants[i].resultBuffer = binding.buffer;\n\t\t\t}\n\t\t}\n\n\t\t_activateAction(action) {\n\t\t\tif (!this._isActiveAction(action)) {\n\t\t\t\tif (action._cacheIndex === null) {\n\t\t\t\t\t// this action has been forgotten by the cache, but the user\n\t\t\t\t\t// appears to be still using it -> rebind\n\t\t\t\t\tconst rootUuid = (action._localRoot || this._root).uuid,\n\t\t\t\t\t\t\t\tclipUuid = action._clip.uuid,\n\t\t\t\t\t\t\t\tactionsForClip = this._actionsByClip[clipUuid];\n\n\t\t\t\t\tthis._bindAction(action, actionsForClip && actionsForClip.knownActions[0]);\n\n\t\t\t\t\tthis._addInactiveAction(action, clipUuid, rootUuid);\n\t\t\t\t}\n\n\t\t\t\tconst bindings = action._propertyBindings; // increment reference counts / sort out state\n\n\t\t\t\tfor (let i = 0, n = bindings.length; i !== n; ++i) {\n\t\t\t\t\tconst binding = bindings[i];\n\n\t\t\t\t\tif (binding.useCount++ === 0) {\n\t\t\t\t\t\tthis._lendBinding(binding);\n\n\t\t\t\t\t\tbinding.saveOriginalState();\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tthis._lendAction(action);\n\t\t\t}\n\t\t}\n\n\t\t_deactivateAction(action) {\n\t\t\tif (this._isActiveAction(action)) {\n\t\t\t\tconst bindings = action._propertyBindings; // decrement reference counts / sort out state\n\n\t\t\t\tfor (let i = 0, n = bindings.length; i !== n; ++i) {\n\t\t\t\t\tconst binding = bindings[i];\n\n\t\t\t\t\tif (--binding.useCount === 0) {\n\t\t\t\t\t\tbinding.restoreOriginalState();\n\n\t\t\t\t\t\tthis._takeBackBinding(binding);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tthis._takeBackAction(action);\n\t\t\t}\n\t\t} // Memory manager\n\n\n\t\t_initMemoryManager() {\n\t\t\tthis._actions = []; // 'nActiveActions' followed by inactive ones\n\n\t\t\tthis._nActiveActions = 0;\n\t\t\tthis._actionsByClip = {}; // inside:\n\t\t\t// {\n\t\t\t// \tknownActions: Array< AnimationAction > - used as prototypes\n\t\t\t// \tactionByRoot: AnimationAction - lookup\n\t\t\t// }\n\n\t\t\tthis._bindings = []; // 'nActiveBindings' followed by inactive ones\n\n\t\t\tthis._nActiveBindings = 0;\n\t\t\tthis._bindingsByRootAndName = {}; // inside: Map< name, PropertyMixer >\n\n\t\t\tthis._controlInterpolants = []; // same game as above\n\n\t\t\tthis._nActiveControlInterpolants = 0;\n\t\t\tconst scope = this;\n\t\t\tthis.stats = {\n\t\t\t\tactions: {\n\t\t\t\t\tget total() {\n\t\t\t\t\t\treturn scope._actions.length;\n\t\t\t\t\t},\n\n\t\t\t\t\tget inUse() {\n\t\t\t\t\t\treturn scope._nActiveActions;\n\t\t\t\t\t}\n\n\t\t\t\t},\n\t\t\t\tbindings: {\n\t\t\t\t\tget total() {\n\t\t\t\t\t\treturn scope._bindings.length;\n\t\t\t\t\t},\n\n\t\t\t\t\tget inUse() {\n\t\t\t\t\t\treturn scope._nActiveBindings;\n\t\t\t\t\t}\n\n\t\t\t\t},\n\t\t\t\tcontrolInterpolants: {\n\t\t\t\t\tget total() {\n\t\t\t\t\t\treturn scope._controlInterpolants.length;\n\t\t\t\t\t},\n\n\t\t\t\t\tget inUse() {\n\t\t\t\t\t\treturn scope._nActiveControlInterpolants;\n\t\t\t\t\t}\n\n\t\t\t\t}\n\t\t\t};\n\t\t} // Memory management for AnimationAction objects\n\n\n\t\t_isActiveAction(action) {\n\t\t\tconst index = action._cacheIndex;\n\t\t\treturn index !== null && index < this._nActiveActions;\n\t\t}\n\n\t\t_addInactiveAction(action, clipUuid, rootUuid) {\n\t\t\tconst actions = this._actions,\n\t\t\t\t\t\tactionsByClip = this._actionsByClip;\n\t\t\tlet actionsForClip = actionsByClip[clipUuid];\n\n\t\t\tif (actionsForClip === undefined) {\n\t\t\t\tactionsForClip = {\n\t\t\t\t\tknownActions: [action],\n\t\t\t\t\tactionByRoot: {}\n\t\t\t\t};\n\t\t\t\taction._byClipCacheIndex = 0;\n\t\t\t\tactionsByClip[clipUuid] = actionsForClip;\n\t\t\t} else {\n\t\t\t\tconst knownActions = actionsForClip.knownActions;\n\t\t\t\taction._byClipCacheIndex = knownActions.length;\n\t\t\t\tknownActions.push(action);\n\t\t\t}\n\n\t\t\taction._cacheIndex = actions.length;\n\t\t\tactions.push(action);\n\t\t\tactionsForClip.actionByRoot[rootUuid] = action;\n\t\t}\n\n\t\t_removeInactiveAction(action) {\n\t\t\tconst actions = this._actions,\n\t\t\t\t\t\tlastInactiveAction = actions[actions.length - 1],\n\t\t\t\t\t\tcacheIndex = action._cacheIndex;\n\t\t\tlastInactiveAction._cacheIndex = cacheIndex;\n\t\t\tactions[cacheIndex] = lastInactiveAction;\n\t\t\tactions.pop();\n\t\t\taction._cacheIndex = null;\n\t\t\tconst clipUuid = action._clip.uuid,\n\t\t\t\t\t\tactionsByClip = this._actionsByClip,\n\t\t\t\t\t\tactionsForClip = actionsByClip[clipUuid],\n\t\t\t\t\t\tknownActionsForClip = actionsForClip.knownActions,\n\t\t\t\t\t\tlastKnownAction = knownActionsForClip[knownActionsForClip.length - 1],\n\t\t\t\t\t\tbyClipCacheIndex = action._byClipCacheIndex;\n\t\t\tlastKnownAction._byClipCacheIndex = byClipCacheIndex;\n\t\t\tknownActionsForClip[byClipCacheIndex] = lastKnownAction;\n\t\t\tknownActionsForClip.pop();\n\t\t\taction._byClipCacheIndex = null;\n\t\t\tconst actionByRoot = actionsForClip.actionByRoot,\n\t\t\t\t\t\trootUuid = (action._localRoot || this._root).uuid;\n\t\t\tdelete actionByRoot[rootUuid];\n\n\t\t\tif (knownActionsForClip.length === 0) {\n\t\t\t\tdelete actionsByClip[clipUuid];\n\t\t\t}\n\n\t\t\tthis._removeInactiveBindingsForAction(action);\n\t\t}\n\n\t\t_removeInactiveBindingsForAction(action) {\n\t\t\tconst bindings = action._propertyBindings;\n\n\t\t\tfor (let i = 0, n = bindings.length; i !== n; ++i) {\n\t\t\t\tconst binding = bindings[i];\n\n\t\t\t\tif (--binding.referenceCount === 0) {\n\t\t\t\t\tthis._removeInactiveBinding(binding);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t_lendAction(action) {\n\t\t\t// [ active actions |\tinactive actions\t]\n\t\t\t// [\tactive actions >| inactive actions ]\n\t\t\t//\t\t\t\t\t\t\t\t s\t\t\t\ta\n\t\t\t//\t\t\t\t\t\t\t\t\t<-swap->\n\t\t\t//\t\t\t\t\t\t\t\t a\t\t\t\ts\n\t\t\tconst actions = this._actions,\n\t\t\t\t\t\tprevIndex = action._cacheIndex,\n\t\t\t\t\t\tlastActiveIndex = this._nActiveActions++,\n\t\t\t\t\t\tfirstInactiveAction = actions[lastActiveIndex];\n\t\t\taction._cacheIndex = lastActiveIndex;\n\t\t\tactions[lastActiveIndex] = action;\n\t\t\tfirstInactiveAction._cacheIndex = prevIndex;\n\t\t\tactions[prevIndex] = firstInactiveAction;\n\t\t}\n\n\t\t_takeBackAction(action) {\n\t\t\t// [\tactive actions\t| inactive actions ]\n\t\t\t// [ active actions |< inactive actions\t]\n\t\t\t//\t\t\t\ta\t\t\t\ts\n\t\t\t//\t\t\t\t <-swap->\n\t\t\t//\t\t\t\ts\t\t\t\ta\n\t\t\tconst actions = this._actions,\n\t\t\t\t\t\tprevIndex = action._cacheIndex,\n\t\t\t\t\t\tfirstInactiveIndex = --this._nActiveActions,\n\t\t\t\t\t\tlastActiveAction = actions[firstInactiveIndex];\n\t\t\taction._cacheIndex = firstInactiveIndex;\n\t\t\tactions[firstInactiveIndex] = action;\n\t\t\tlastActiveAction._cacheIndex = prevIndex;\n\t\t\tactions[prevIndex] = lastActiveAction;\n\t\t} // Memory management for PropertyMixer objects\n\n\n\t\t_addInactiveBinding(binding, rootUuid, trackName) {\n\t\t\tconst bindingsByRoot = this._bindingsByRootAndName,\n\t\t\t\t\t\tbindings = this._bindings;\n\t\t\tlet bindingByName = bindingsByRoot[rootUuid];\n\n\t\t\tif (bindingByName === undefined) {\n\t\t\t\tbindingByName = {};\n\t\t\t\tbindingsByRoot[rootUuid] = bindingByName;\n\t\t\t}\n\n\t\t\tbindingByName[trackName] = binding;\n\t\t\tbinding._cacheIndex = bindings.length;\n\t\t\tbindings.push(binding);\n\t\t}\n\n\t\t_removeInactiveBinding(binding) {\n\t\t\tconst bindings = this._bindings,\n\t\t\t\t\t\tpropBinding = binding.binding,\n\t\t\t\t\t\trootUuid = propBinding.rootNode.uuid,\n\t\t\t\t\t\ttrackName = propBinding.path,\n\t\t\t\t\t\tbindingsByRoot = this._bindingsByRootAndName,\n\t\t\t\t\t\tbindingByName = bindingsByRoot[rootUuid],\n\t\t\t\t\t\tlastInactiveBinding = bindings[bindings.length - 1],\n\t\t\t\t\t\tcacheIndex = binding._cacheIndex;\n\t\t\tlastInactiveBinding._cacheIndex = cacheIndex;\n\t\t\tbindings[cacheIndex] = lastInactiveBinding;\n\t\t\tbindings.pop();\n\t\t\tdelete bindingByName[trackName];\n\n\t\t\tif (Object.keys(bindingByName).length === 0) {\n\t\t\t\tdelete bindingsByRoot[rootUuid];\n\t\t\t}\n\t\t}\n\n\t\t_lendBinding(binding) {\n\t\t\tconst bindings = this._bindings,\n\t\t\t\t\t\tprevIndex = binding._cacheIndex,\n\t\t\t\t\t\tlastActiveIndex = this._nActiveBindings++,\n\t\t\t\t\t\tfirstInactiveBinding = bindings[lastActiveIndex];\n\t\t\tbinding._cacheIndex = lastActiveIndex;\n\t\t\tbindings[lastActiveIndex] = binding;\n\t\t\tfirstInactiveBinding._cacheIndex = prevIndex;\n\t\t\tbindings[prevIndex] = firstInactiveBinding;\n\t\t}\n\n\t\t_takeBackBinding(binding) {\n\t\t\tconst bindings = this._bindings,\n\t\t\t\t\t\tprevIndex = binding._cacheIndex,\n\t\t\t\t\t\tfirstInactiveIndex = --this._nActiveBindings,\n\t\t\t\t\t\tlastActiveBinding = bindings[firstInactiveIndex];\n\t\t\tbinding._cacheIndex = firstInactiveIndex;\n\t\t\tbindings[firstInactiveIndex] = binding;\n\t\t\tlastActiveBinding._cacheIndex = prevIndex;\n\t\t\tbindings[prevIndex] = lastActiveBinding;\n\t\t} // Memory management of Interpolants for weight and time scale\n\n\n\t\t_lendControlInterpolant() {\n\t\t\tconst interpolants = this._controlInterpolants,\n\t\t\t\t\t\tlastActiveIndex = this._nActiveControlInterpolants++;\n\t\t\tlet interpolant = interpolants[lastActiveIndex];\n\n\t\t\tif (interpolant === undefined) {\n\t\t\t\tinterpolant = new LinearInterpolant(new Float32Array(2), new Float32Array(2), 1, this._controlInterpolantsResultBuffer);\n\t\t\t\tinterpolant.__cacheIndex = lastActiveIndex;\n\t\t\t\tinterpolants[lastActiveIndex] = interpolant;\n\t\t\t}\n\n\t\t\treturn interpolant;\n\t\t}\n\n\t\t_takeBackControlInterpolant(interpolant) {\n\t\t\tconst interpolants = this._controlInterpolants,\n\t\t\t\t\t\tprevIndex = interpolant.__cacheIndex,\n\t\t\t\t\t\tfirstInactiveIndex = --this._nActiveControlInterpolants,\n\t\t\t\t\t\tlastActiveInterpolant = interpolants[firstInactiveIndex];\n\t\t\tinterpolant.__cacheIndex = firstInactiveIndex;\n\t\t\tinterpolants[firstInactiveIndex] = interpolant;\n\t\t\tlastActiveInterpolant.__cacheIndex = prevIndex;\n\t\t\tinterpolants[prevIndex] = lastActiveInterpolant;\n\t\t} // return an action for a clip optionally using a custom root target\n\t\t// object (this method allocates a lot of dynamic memory in case a\n\t\t// previously unknown clip/root combination is specified)\n\n\n\t\tclipAction(clip, optionalRoot, blendMode) {\n\t\t\tconst root = optionalRoot || this._root,\n\t\t\t\t\t\trootUuid = root.uuid;\n\t\t\tlet clipObject = typeof clip === 'string' ? AnimationClip.findByName(root, clip) : clip;\n\t\t\tconst clipUuid = clipObject !== null ? clipObject.uuid : clip;\n\t\t\tconst actionsForClip = this._actionsByClip[clipUuid];\n\t\t\tlet prototypeAction = null;\n\n\t\t\tif (blendMode === undefined) {\n\t\t\t\tif (clipObject !== null) {\n\t\t\t\t\tblendMode = clipObject.blendMode;\n\t\t\t\t} else {\n\t\t\t\t\tblendMode = NormalAnimationBlendMode;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (actionsForClip !== undefined) {\n\t\t\t\tconst existingAction = actionsForClip.actionByRoot[rootUuid];\n\n\t\t\t\tif (existingAction !== undefined && existingAction.blendMode === blendMode) {\n\t\t\t\t\treturn existingAction;\n\t\t\t\t} // we know the clip, so we don't have to parse all\n\t\t\t\t// the bindings again but can just copy\n\n\n\t\t\t\tprototypeAction = actionsForClip.knownActions[0]; // also, take the clip from the prototype action\n\n\t\t\t\tif (clipObject === null) clipObject = prototypeAction._clip;\n\t\t\t} // clip must be known when specified via string\n\n\n\t\t\tif (clipObject === null) return null; // allocate all resources required to run it\n\n\t\t\tconst newAction = new AnimationAction(this, clipObject, optionalRoot, blendMode);\n\n\t\t\tthis._bindAction(newAction, prototypeAction); // and make the action known to the memory manager\n\n\n\t\t\tthis._addInactiveAction(newAction, clipUuid, rootUuid);\n\n\t\t\treturn newAction;\n\t\t} // get an existing action\n\n\n\t\texistingAction(clip, optionalRoot) {\n\t\t\tconst root = optionalRoot || this._root,\n\t\t\t\t\t\trootUuid = root.uuid,\n\t\t\t\t\t\tclipObject = typeof clip === 'string' ? AnimationClip.findByName(root, clip) : clip,\n\t\t\t\t\t\tclipUuid = clipObject ? clipObject.uuid : clip,\n\t\t\t\t\t\tactionsForClip = this._actionsByClip[clipUuid];\n\n\t\t\tif (actionsForClip !== undefined) {\n\t\t\t\treturn actionsForClip.actionByRoot[rootUuid] || null;\n\t\t\t}\n\n\t\t\treturn null;\n\t\t} // deactivates all previously scheduled actions\n\n\n\t\tstopAllAction() {\n\t\t\tconst actions = this._actions,\n\t\t\t\t\t\tnActions = this._nActiveActions;\n\n\t\t\tfor (let i = nActions - 1; i >= 0; --i) {\n\t\t\t\tactions[i].stop();\n\t\t\t}\n\n\t\t\treturn this;\n\t\t} // advance the time and update apply the animation\n\n\n\t\tupdate(deltaTime) {\n\t\t\tdeltaTime *= this.timeScale;\n\t\t\tconst actions = this._actions,\n\t\t\t\t\t\tnActions = this._nActiveActions,\n\t\t\t\t\t\ttime = this.time += deltaTime,\n\t\t\t\t\t\ttimeDirection = Math.sign(deltaTime),\n\t\t\t\t\t\taccuIndex = this._accuIndex ^= 1; // run active actions\n\n\t\t\tfor (let i = 0; i !== nActions; ++i) {\n\t\t\t\tconst action = actions[i];\n\n\t\t\t\taction._update(time, deltaTime, timeDirection, accuIndex);\n\t\t\t} // update scene graph\n\n\n\t\t\tconst bindings = this._bindings,\n\t\t\t\t\t\tnBindings = this._nActiveBindings;\n\n\t\t\tfor (let i = 0; i !== nBindings; ++i) {\n\t\t\t\tbindings[i].apply(accuIndex);\n\t\t\t}\n\n\t\t\treturn this;\n\t\t} // Allows you to seek to a specific time in an animation.\n\n\n\t\tsetTime(timeInSeconds) {\n\t\t\tthis.time = 0; // Zero out time attribute for AnimationMixer object;\n\n\t\t\tfor (let i = 0; i < this._actions.length; i++) {\n\t\t\t\tthis._actions[i].time = 0; // Zero out time attribute for all associated AnimationAction objects.\n\t\t\t}\n\n\t\t\treturn this.update(timeInSeconds); // Update used to set exact time. Returns \"this\" AnimationMixer object.\n\t\t} // return this mixer's root target object\n\n\n\t\tgetRoot() {\n\t\t\treturn this._root;\n\t\t} // free all resources specific to a particular clip\n\n\n\t\tuncacheClip(clip) {\n\t\t\tconst actions = this._actions,\n\t\t\t\t\t\tclipUuid = clip.uuid,\n\t\t\t\t\t\tactionsByClip = this._actionsByClip,\n\t\t\t\t\t\tactionsForClip = actionsByClip[clipUuid];\n\n\t\t\tif (actionsForClip !== undefined) {\n\t\t\t\t// note: just calling _removeInactiveAction would mess up the\n\t\t\t\t// iteration state and also require updating the state we can\n\t\t\t\t// just throw away\n\t\t\t\tconst actionsToRemove = actionsForClip.knownActions;\n\n\t\t\t\tfor (let i = 0, n = actionsToRemove.length; i !== n; ++i) {\n\t\t\t\t\tconst action = actionsToRemove[i];\n\n\t\t\t\t\tthis._deactivateAction(action);\n\n\t\t\t\t\tconst cacheIndex = action._cacheIndex,\n\t\t\t\t\t\t\t\tlastInactiveAction = actions[actions.length - 1];\n\t\t\t\t\taction._cacheIndex = null;\n\t\t\t\t\taction._byClipCacheIndex = null;\n\t\t\t\t\tlastInactiveAction._cacheIndex = cacheIndex;\n\t\t\t\t\tactions[cacheIndex] = lastInactiveAction;\n\t\t\t\t\tactions.pop();\n\n\t\t\t\t\tthis._removeInactiveBindingsForAction(action);\n\t\t\t\t}\n\n\t\t\t\tdelete actionsByClip[clipUuid];\n\t\t\t}\n\t\t} // free all resources specific to a particular root target object\n\n\n\t\tuncacheRoot(root) {\n\t\t\tconst rootUuid = root.uuid,\n\t\t\t\t\t\tactionsByClip = this._actionsByClip;\n\n\t\t\tfor (const clipUuid in actionsByClip) {\n\t\t\t\tconst actionByRoot = actionsByClip[clipUuid].actionByRoot,\n\t\t\t\t\t\t\taction = actionByRoot[rootUuid];\n\n\t\t\t\tif (action !== undefined) {\n\t\t\t\t\tthis._deactivateAction(action);\n\n\t\t\t\t\tthis._removeInactiveAction(action);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst bindingsByRoot = this._bindingsByRootAndName,\n\t\t\t\t\t\tbindingByName = bindingsByRoot[rootUuid];\n\n\t\t\tif (bindingByName !== undefined) {\n\t\t\t\tfor (const trackName in bindingByName) {\n\t\t\t\t\tconst binding = bindingByName[trackName];\n\t\t\t\t\tbinding.restoreOriginalState();\n\n\t\t\t\t\tthis._removeInactiveBinding(binding);\n\t\t\t\t}\n\t\t\t}\n\t\t} // remove a targeted clip from the cache\n\n\n\t\tuncacheAction(clip, optionalRoot) {\n\t\t\tconst action = this.existingAction(clip, optionalRoot);\n\n\t\t\tif (action !== null) {\n\t\t\t\tthis._deactivateAction(action);\n\n\t\t\t\tthis._removeInactiveAction(action);\n\t\t\t}\n\t\t}\n\n\t}\n\n\tAnimationMixer.prototype._controlInterpolantsResultBuffer = new Float32Array(1);\n\n\tclass Uniform {\n\t\tconstructor(value) {\n\t\t\tif (typeof value === 'string') {\n\t\t\t\tconsole.warn('THREE.Uniform: Type parameter is no longer needed.');\n\t\t\t\tvalue = arguments[1];\n\t\t\t}\n\n\t\t\tthis.value = value;\n\t\t}\n\n\t\tclone() {\n\t\t\treturn new Uniform(this.value.clone === undefined ? this.value : this.value.clone());\n\t\t}\n\n\t}\n\n\tclass InstancedInterleavedBuffer extends InterleavedBuffer {\n\t\tconstructor(array, stride, meshPerAttribute = 1) {\n\t\t\tsuper(array, stride);\n\t\t\tthis.meshPerAttribute = meshPerAttribute;\n\t\t}\n\n\t\tcopy(source) {\n\t\t\tsuper.copy(source);\n\t\t\tthis.meshPerAttribute = source.meshPerAttribute;\n\t\t\treturn this;\n\t\t}\n\n\t\tclone(data) {\n\t\t\tconst ib = super.clone(data);\n\t\t\tib.meshPerAttribute = this.meshPerAttribute;\n\t\t\treturn ib;\n\t\t}\n\n\t\ttoJSON(data) {\n\t\t\tconst json = super.toJSON(data);\n\t\t\tjson.isInstancedInterleavedBuffer = true;\n\t\t\tjson.meshPerAttribute = this.meshPerAttribute;\n\t\t\treturn json;\n\t\t}\n\n\t}\n\n\tInstancedInterleavedBuffer.prototype.isInstancedInterleavedBuffer = true;\n\n\tclass GLBufferAttribute {\n\t\tconstructor(buffer, type, itemSize, elementSize, count) {\n\t\t\tthis.buffer = buffer;\n\t\t\tthis.type = type;\n\t\t\tthis.itemSize = itemSize;\n\t\t\tthis.elementSize = elementSize;\n\t\t\tthis.count = count;\n\t\t\tthis.version = 0;\n\t\t}\n\n\t\tset needsUpdate(value) {\n\t\t\tif (value === true) this.version++;\n\t\t}\n\n\t\tsetBuffer(buffer) {\n\t\t\tthis.buffer = buffer;\n\t\t\treturn this;\n\t\t}\n\n\t\tsetType(type, elementSize) {\n\t\t\tthis.type = type;\n\t\t\tthis.elementSize = elementSize;\n\t\t\treturn this;\n\t\t}\n\n\t\tsetItemSize(itemSize) {\n\t\t\tthis.itemSize = itemSize;\n\t\t\treturn this;\n\t\t}\n\n\t\tsetCount(count) {\n\t\t\tthis.count = count;\n\t\t\treturn this;\n\t\t}\n\n\t}\n\n\tGLBufferAttribute.prototype.isGLBufferAttribute = true;\n\n\tclass Raycaster {\n\t\tconstructor(origin, direction, near = 0, far = Infinity) {\n\t\t\tthis.ray = new Ray(origin, direction); // direction is assumed to be normalized (for accurate distance calculations)\n\n\t\t\tthis.near = near;\n\t\t\tthis.far = far;\n\t\t\tthis.camera = null;\n\t\t\tthis.layers = new Layers();\n\t\t\tthis.params = {\n\t\t\t\tMesh: {},\n\t\t\t\tLine: {\n\t\t\t\t\tthreshold: 1\n\t\t\t\t},\n\t\t\t\tLOD: {},\n\t\t\t\tPoints: {\n\t\t\t\t\tthreshold: 1\n\t\t\t\t},\n\t\t\t\tSprite: {}\n\t\t\t};\n\t\t}\n\n\t\tset(origin, direction) {\n\t\t\t// direction is assumed to be normalized (for accurate distance calculations)\n\t\t\tthis.ray.set(origin, direction);\n\t\t}\n\n\t\tsetFromCamera(coords, camera) {\n\t\t\tif (camera && camera.isPerspectiveCamera) {\n\t\t\t\tthis.ray.origin.setFromMatrixPosition(camera.matrixWorld);\n\t\t\t\tthis.ray.direction.set(coords.x, coords.y, 0.5).unproject(camera).sub(this.ray.origin).normalize();\n\t\t\t\tthis.camera = camera;\n\t\t\t} else if (camera && camera.isOrthographicCamera) {\n\t\t\t\tthis.ray.origin.set(coords.x, coords.y, (camera.near + camera.far) / (camera.near - camera.far)).unproject(camera); // set origin in plane of camera\n\n\t\t\t\tthis.ray.direction.set(0, 0, -1).transformDirection(camera.matrixWorld);\n\t\t\t\tthis.camera = camera;\n\t\t\t} else {\n\t\t\t\tconsole.error('THREE.Raycaster: Unsupported camera type: ' + camera.type);\n\t\t\t}\n\t\t}\n\n\t\tintersectObject(object, recursive = true, intersects = []) {\n\t\t\tintersectObject(object, this, intersects, recursive);\n\t\t\tintersects.sort(ascSort);\n\t\t\treturn intersects;\n\t\t}\n\n\t\tintersectObjects(objects, recursive = true, intersects = []) {\n\t\t\tfor (let i = 0, l = objects.length; i < l; i++) {\n\t\t\t\tintersectObject(objects[i], this, intersects, recursive);\n\t\t\t}\n\n\t\t\tintersects.sort(ascSort);\n\t\t\treturn intersects;\n\t\t}\n\n\t}\n\n\tfunction ascSort(a, b) {\n\t\treturn a.distance - b.distance;\n\t}\n\n\tfunction intersectObject(object, raycaster, intersects, recursive) {\n\t\tif (object.layers.test(raycaster.layers)) {\n\t\t\tobject.raycast(raycaster, intersects);\n\t\t}\n\n\t\tif (recursive === true) {\n\t\t\tconst children = object.children;\n\n\t\t\tfor (let i = 0, l = children.length; i < l; i++) {\n\t\t\t\tintersectObject(children[i], raycaster, intersects, true);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Ref: https://en.wikipedia.org/wiki/Spherical_coordinate_system\n\t *\n\t * The polar angle (phi) is measured from the positive y-axis. The positive y-axis is up.\n\t * The azimuthal angle (theta) is measured from the positive z-axis.\n\t */\n\n\tclass Spherical {\n\t\tconstructor(radius = 1, phi = 0, theta = 0) {\n\t\t\tthis.radius = radius;\n\t\t\tthis.phi = phi; // polar angle\n\n\t\t\tthis.theta = theta; // azimuthal angle\n\n\t\t\treturn this;\n\t\t}\n\n\t\tset(radius, phi, theta) {\n\t\t\tthis.radius = radius;\n\t\t\tthis.phi = phi;\n\t\t\tthis.theta = theta;\n\t\t\treturn this;\n\t\t}\n\n\t\tcopy(other) {\n\t\t\tthis.radius = other.radius;\n\t\t\tthis.phi = other.phi;\n\t\t\tthis.theta = other.theta;\n\t\t\treturn this;\n\t\t} // restrict phi to be betwee EPS and PI-EPS\n\n\n\t\tmakeSafe() {\n\t\t\tconst EPS = 0.000001;\n\t\t\tthis.phi = Math.max(EPS, Math.min(Math.PI - EPS, this.phi));\n\t\t\treturn this;\n\t\t}\n\n\t\tsetFromVector3(v) {\n\t\t\treturn this.setFromCartesianCoords(v.x, v.y, v.z);\n\t\t}\n\n\t\tsetFromCartesianCoords(x, y, z) {\n\t\t\tthis.radius = Math.sqrt(x * x + y * y + z * z);\n\n\t\t\tif (this.radius === 0) {\n\t\t\t\tthis.theta = 0;\n\t\t\t\tthis.phi = 0;\n\t\t\t} else {\n\t\t\t\tthis.theta = Math.atan2(x, z);\n\t\t\t\tthis.phi = Math.acos(clamp(y / this.radius, -1, 1));\n\t\t\t}\n\n\t\t\treturn this;\n\t\t}\n\n\t\tclone() {\n\t\t\treturn new this.constructor().copy(this);\n\t\t}\n\n\t}\n\n\t/**\n\t * Ref: https://en.wikipedia.org/wiki/Cylindrical_coordinate_system\n\t */\n\tclass Cylindrical {\n\t\tconstructor(radius = 1, theta = 0, y = 0) {\n\t\t\tthis.radius = radius; // distance from the origin to a point in the x-z plane\n\n\t\t\tthis.theta = theta; // counterclockwise angle in the x-z plane measured in radians from the positive z-axis\n\n\t\t\tthis.y = y; // height above the x-z plane\n\n\t\t\treturn this;\n\t\t}\n\n\t\tset(radius, theta, y) {\n\t\t\tthis.radius = radius;\n\t\t\tthis.theta = theta;\n\t\t\tthis.y = y;\n\t\t\treturn this;\n\t\t}\n\n\t\tcopy(other) {\n\t\t\tthis.radius = other.radius;\n\t\t\tthis.theta = other.theta;\n\t\t\tthis.y = other.y;\n\t\t\treturn this;\n\t\t}\n\n\t\tsetFromVector3(v) {\n\t\t\treturn this.setFromCartesianCoords(v.x, v.y, v.z);\n\t\t}\n\n\t\tsetFromCartesianCoords(x, y, z) {\n\t\t\tthis.radius = Math.sqrt(x * x + z * z);\n\t\t\tthis.theta = Math.atan2(x, z);\n\t\t\tthis.y = y;\n\t\t\treturn this;\n\t\t}\n\n\t\tclone() {\n\t\t\treturn new this.constructor().copy(this);\n\t\t}\n\n\t}\n\n\tconst _vector$4 = /*@__PURE__*/new Vector2();\n\n\tclass Box2 {\n\t\tconstructor(min = new Vector2(+Infinity, +Infinity), max = new Vector2(-Infinity, -Infinity)) {\n\t\t\tthis.min = min;\n\t\t\tthis.max = max;\n\t\t}\n\n\t\tset(min, max) {\n\t\t\tthis.min.copy(min);\n\t\t\tthis.max.copy(max);\n\t\t\treturn this;\n\t\t}\n\n\t\tsetFromPoints(points) {\n\t\t\tthis.makeEmpty();\n\n\t\t\tfor (let i = 0, il = points.length; i < il; i++) {\n\t\t\t\tthis.expandByPoint(points[i]);\n\t\t\t}\n\n\t\t\treturn this;\n\t\t}\n\n\t\tsetFromCenterAndSize(center, size) {\n\t\t\tconst halfSize = _vector$4.copy(size).multiplyScalar(0.5);\n\n\t\t\tthis.min.copy(center).sub(halfSize);\n\t\t\tthis.max.copy(center).add(halfSize);\n\t\t\treturn this;\n\t\t}\n\n\t\tclone() {\n\t\t\treturn new this.constructor().copy(this);\n\t\t}\n\n\t\tcopy(box) {\n\t\t\tthis.min.copy(box.min);\n\t\t\tthis.max.copy(box.max);\n\t\t\treturn this;\n\t\t}\n\n\t\tmakeEmpty() {\n\t\t\tthis.min.x = this.min.y = +Infinity;\n\t\t\tthis.max.x = this.max.y = -Infinity;\n\t\t\treturn this;\n\t\t}\n\n\t\tisEmpty() {\n\t\t\t// this is a more robust check for empty than ( volume <= 0 ) because volume can get positive with two negative axes\n\t\t\treturn this.max.x < this.min.x || this.max.y < this.min.y;\n\t\t}\n\n\t\tgetCenter(target) {\n\t\t\treturn this.isEmpty() ? target.set(0, 0) : target.addVectors(this.min, this.max).multiplyScalar(0.5);\n\t\t}\n\n\t\tgetSize(target) {\n\t\t\treturn this.isEmpty() ? target.set(0, 0) : target.subVectors(this.max, this.min);\n\t\t}\n\n\t\texpandByPoint(point) {\n\t\t\tthis.min.min(point);\n\t\t\tthis.max.max(point);\n\t\t\treturn this;\n\t\t}\n\n\t\texpandByVector(vector) {\n\t\t\tthis.min.sub(vector);\n\t\t\tthis.max.add(vector);\n\t\t\treturn this;\n\t\t}\n\n\t\texpandByScalar(scalar) {\n\t\t\tthis.min.addScalar(-scalar);\n\t\t\tthis.max.addScalar(scalar);\n\t\t\treturn this;\n\t\t}\n\n\t\tcontainsPoint(point) {\n\t\t\treturn point.x < this.min.x || point.x > this.max.x || point.y < this.min.y || point.y > this.max.y ? false : true;\n\t\t}\n\n\t\tcontainsBox(box) {\n\t\t\treturn this.min.x <= box.min.x && box.max.x <= this.max.x && this.min.y <= box.min.y && box.max.y <= this.max.y;\n\t\t}\n\n\t\tgetParameter(point, target) {\n\t\t\t// This can potentially have a divide by zero if the box\n\t\t\t// has a size dimension of 0.\n\t\t\treturn target.set((point.x - this.min.x) / (this.max.x - this.min.x), (point.y - this.min.y) / (this.max.y - this.min.y));\n\t\t}\n\n\t\tintersectsBox(box) {\n\t\t\t// using 4 splitting planes to rule out intersections\n\t\t\treturn box.max.x < this.min.x || box.min.x > this.max.x || box.max.y < this.min.y || box.min.y > this.max.y ? false : true;\n\t\t}\n\n\t\tclampPoint(point, target) {\n\t\t\treturn target.copy(point).clamp(this.min, this.max);\n\t\t}\n\n\t\tdistanceToPoint(point) {\n\t\t\tconst clampedPoint = _vector$4.copy(point).clamp(this.min, this.max);\n\n\t\t\treturn clampedPoint.sub(point).length();\n\t\t}\n\n\t\tintersect(box) {\n\t\t\tthis.min.max(box.min);\n\t\t\tthis.max.min(box.max);\n\t\t\treturn this;\n\t\t}\n\n\t\tunion(box) {\n\t\t\tthis.min.min(box.min);\n\t\t\tthis.max.max(box.max);\n\t\t\treturn this;\n\t\t}\n\n\t\ttranslate(offset) {\n\t\t\tthis.min.add(offset);\n\t\t\tthis.max.add(offset);\n\t\t\treturn this;\n\t\t}\n\n\t\tequals(box) {\n\t\t\treturn box.min.equals(this.min) && box.max.equals(this.max);\n\t\t}\n\n\t}\n\n\tBox2.prototype.isBox2 = true;\n\n\tconst _startP = /*@__PURE__*/new Vector3();\n\n\tconst _startEnd = /*@__PURE__*/new Vector3();\n\n\tclass Line3 {\n\t\tconstructor(start = new Vector3(), end = new Vector3()) {\n\t\t\tthis.start = start;\n\t\t\tthis.end = end;\n\t\t}\n\n\t\tset(start, end) {\n\t\t\tthis.start.copy(start);\n\t\t\tthis.end.copy(end);\n\t\t\treturn this;\n\t\t}\n\n\t\tcopy(line) {\n\t\t\tthis.start.copy(line.start);\n\t\t\tthis.end.copy(line.end);\n\t\t\treturn this;\n\t\t}\n\n\t\tgetCenter(target) {\n\t\t\treturn target.addVectors(this.start, this.end).multiplyScalar(0.5);\n\t\t}\n\n\t\tdelta(target) {\n\t\t\treturn target.subVectors(this.end, this.start);\n\t\t}\n\n\t\tdistanceSq() {\n\t\t\treturn this.start.distanceToSquared(this.end);\n\t\t}\n\n\t\tdistance() {\n\t\t\treturn this.start.distanceTo(this.end);\n\t\t}\n\n\t\tat(t, target) {\n\t\t\treturn this.delta(target).multiplyScalar(t).add(this.start);\n\t\t}\n\n\t\tclosestPointToPointParameter(point, clampToLine) {\n\t\t\t_startP.subVectors(point, this.start);\n\n\t\t\t_startEnd.subVectors(this.end, this.start);\n\n\t\t\tconst startEnd2 = _startEnd.dot(_startEnd);\n\n\t\t\tconst startEnd_startP = _startEnd.dot(_startP);\n\n\t\t\tlet t = startEnd_startP / startEnd2;\n\n\t\t\tif (clampToLine) {\n\t\t\t\tt = clamp(t, 0, 1);\n\t\t\t}\n\n\t\t\treturn t;\n\t\t}\n\n\t\tclosestPointToPoint(point, clampToLine, target) {\n\t\t\tconst t = this.closestPointToPointParameter(point, clampToLine);\n\t\t\treturn this.delta(target).multiplyScalar(t).add(this.start);\n\t\t}\n\n\t\tapplyMatrix4(matrix) {\n\t\t\tthis.start.applyMatrix4(matrix);\n\t\t\tthis.end.applyMatrix4(matrix);\n\t\t\treturn this;\n\t\t}\n\n\t\tequals(line) {\n\t\t\treturn line.start.equals(this.start) && line.end.equals(this.end);\n\t\t}\n\n\t\tclone() {\n\t\t\treturn new this.constructor().copy(this);\n\t\t}\n\n\t}\n\n\tconst _vector$3 = /*@__PURE__*/new Vector3();\n\n\tclass SpotLightHelper extends Object3D {\n\t\tconstructor(light, color) {\n\t\t\tsuper();\n\t\t\tthis.light = light;\n\t\t\tthis.light.updateMatrixWorld();\n\t\t\tthis.matrix = light.matrixWorld;\n\t\t\tthis.matrixAutoUpdate = false;\n\t\t\tthis.color = color;\n\t\t\tconst geometry = new BufferGeometry();\n\t\t\tconst positions = [0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, -1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, -1, 1];\n\n\t\t\tfor (let i = 0, j = 1, l = 32; i < l; i++, j++) {\n\t\t\t\tconst p1 = i / l * Math.PI * 2;\n\t\t\t\tconst p2 = j / l * Math.PI * 2;\n\t\t\t\tpositions.push(Math.cos(p1), Math.sin(p1), 1, Math.cos(p2), Math.sin(p2), 1);\n\t\t\t}\n\n\t\t\tgeometry.setAttribute('position', new Float32BufferAttribute(positions, 3));\n\t\t\tconst material = new LineBasicMaterial({\n\t\t\t\tfog: false,\n\t\t\t\ttoneMapped: false\n\t\t\t});\n\t\t\tthis.cone = new LineSegments(geometry, material);\n\t\t\tthis.add(this.cone);\n\t\t\tthis.update();\n\t\t}\n\n\t\tdispose() {\n\t\t\tthis.cone.geometry.dispose();\n\t\t\tthis.cone.material.dispose();\n\t\t}\n\n\t\tupdate() {\n\t\t\tthis.light.updateMatrixWorld();\n\t\t\tconst coneLength = this.light.distance ? this.light.distance : 1000;\n\t\t\tconst coneWidth = coneLength * Math.tan(this.light.angle);\n\t\t\tthis.cone.scale.set(coneWidth, coneWidth, coneLength);\n\n\t\t\t_vector$3.setFromMatrixPosition(this.light.target.matrixWorld);\n\n\t\t\tthis.cone.lookAt(_vector$3);\n\n\t\t\tif (this.color !== undefined) {\n\t\t\t\tthis.cone.material.color.set(this.color);\n\t\t\t} else {\n\t\t\t\tthis.cone.material.color.copy(this.light.color);\n\t\t\t}\n\t\t}\n\n\t}\n\n\tconst _vector$2 = /*@__PURE__*/new Vector3();\n\n\tconst _boneMatrix = /*@__PURE__*/new Matrix4();\n\n\tconst _matrixWorldInv = /*@__PURE__*/new Matrix4();\n\n\tclass SkeletonHelper extends LineSegments {\n\t\tconstructor(object) {\n\t\t\tconst bones = getBoneList(object);\n\t\t\tconst geometry = new BufferGeometry();\n\t\t\tconst vertices = [];\n\t\t\tconst colors = [];\n\t\t\tconst color1 = new Color(0, 0, 1);\n\t\t\tconst color2 = new Color(0, 1, 0);\n\n\t\t\tfor (let i = 0; i < bones.length; i++) {\n\t\t\t\tconst bone = bones[i];\n\n\t\t\t\tif (bone.parent && bone.parent.isBone) {\n\t\t\t\t\tvertices.push(0, 0, 0);\n\t\t\t\t\tvertices.push(0, 0, 0);\n\t\t\t\t\tcolors.push(color1.r, color1.g, color1.b);\n\t\t\t\t\tcolors.push(color2.r, color2.g, color2.b);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tgeometry.setAttribute('position', new Float32BufferAttribute(vertices, 3));\n\t\t\tgeometry.setAttribute('color', new Float32BufferAttribute(colors, 3));\n\t\t\tconst material = new LineBasicMaterial({\n\t\t\t\tvertexColors: true,\n\t\t\t\tdepthTest: false,\n\t\t\t\tdepthWrite: false,\n\t\t\t\ttoneMapped: false,\n\t\t\t\ttransparent: true\n\t\t\t});\n\t\t\tsuper(geometry, material);\n\t\t\tthis.type = 'SkeletonHelper';\n\t\t\tthis.isSkeletonHelper = true;\n\t\t\tthis.root = object;\n\t\t\tthis.bones = bones;\n\t\t\tthis.matrix = object.matrixWorld;\n\t\t\tthis.matrixAutoUpdate = false;\n\t\t}\n\n\t\tupdateMatrixWorld(force) {\n\t\t\tconst bones = this.bones;\n\t\t\tconst geometry = this.geometry;\n\t\t\tconst position = geometry.getAttribute('position');\n\n\t\t\t_matrixWorldInv.copy(this.root.matrixWorld).invert();\n\n\t\t\tfor (let i = 0, j = 0; i < bones.length; i++) {\n\t\t\t\tconst bone = bones[i];\n\n\t\t\t\tif (bone.parent && bone.parent.isBone) {\n\t\t\t\t\t_boneMatrix.multiplyMatrices(_matrixWorldInv, bone.matrixWorld);\n\n\t\t\t\t\t_vector$2.setFromMatrixPosition(_boneMatrix);\n\n\t\t\t\t\tposition.setXYZ(j, _vector$2.x, _vector$2.y, _vector$2.z);\n\n\t\t\t\t\t_boneMatrix.multiplyMatrices(_matrixWorldInv, bone.parent.matrixWorld);\n\n\t\t\t\t\t_vector$2.setFromMatrixPosition(_boneMatrix);\n\n\t\t\t\t\tposition.setXYZ(j + 1, _vector$2.x, _vector$2.y, _vector$2.z);\n\t\t\t\t\tj += 2;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tgeometry.getAttribute('position').needsUpdate = true;\n\t\t\tsuper.updateMatrixWorld(force);\n\t\t}\n\n\t}\n\n\tfunction getBoneList(object) {\n\t\tconst boneList = [];\n\n\t\tif (object && object.isBone) {\n\t\t\tboneList.push(object);\n\t\t}\n\n\t\tfor (let i = 0; i < object.children.length; i++) {\n\t\t\tboneList.push.apply(boneList, getBoneList(object.children[i]));\n\t\t}\n\n\t\treturn boneList;\n\t}\n\n\tclass PointLightHelper extends Mesh {\n\t\tconstructor(light, sphereSize, color) {\n\t\t\tconst geometry = new SphereGeometry(sphereSize, 4, 2);\n\t\t\tconst material = new MeshBasicMaterial({\n\t\t\t\twireframe: true,\n\t\t\t\tfog: false,\n\t\t\t\ttoneMapped: false\n\t\t\t});\n\t\t\tsuper(geometry, material);\n\t\t\tthis.light = light;\n\t\t\tthis.light.updateMatrixWorld();\n\t\t\tthis.color = color;\n\t\t\tthis.type = 'PointLightHelper';\n\t\t\tthis.matrix = this.light.matrixWorld;\n\t\t\tthis.matrixAutoUpdate = false;\n\t\t\tthis.update();\n\t\t\t/*\n\t\t\t// TODO: delete this comment?\n\t\t\tconst distanceGeometry = new THREE.IcosahedronBufferGeometry( 1, 2 );\n\t\t\tconst distanceMaterial = new THREE.MeshBasicMaterial( { color: hexColor, fog: false, wireframe: true, opacity: 0.1, transparent: true } );\n\t\t\tthis.lightSphere = new THREE.Mesh( bulbGeometry, bulbMaterial );\n\t\t\tthis.lightDistance = new THREE.Mesh( distanceGeometry, distanceMaterial );\n\t\t\tconst d = light.distance;\n\t\t\tif ( d === 0.0 ) {\n\t\t\t\tthis.lightDistance.visible = false;\n\t\t\t} else {\n\t\t\t\tthis.lightDistance.scale.set( d, d, d );\n\t\t\t}\n\t\t\tthis.add( this.lightDistance );\n\t\t\t*/\n\t\t}\n\n\t\tdispose() {\n\t\t\tthis.geometry.dispose();\n\t\t\tthis.material.dispose();\n\t\t}\n\n\t\tupdate() {\n\t\t\tif (this.color !== undefined) {\n\t\t\t\tthis.material.color.set(this.color);\n\t\t\t} else {\n\t\t\t\tthis.material.color.copy(this.light.color);\n\t\t\t}\n\t\t\t/*\n\t\t\tconst d = this.light.distance;\n\t\t\t\tif ( d === 0.0 ) {\n\t\t\t\t\tthis.lightDistance.visible = false;\n\t\t\t\t} else {\n\t\t\t\t\tthis.lightDistance.visible = true;\n\t\t\t\tthis.lightDistance.scale.set( d, d, d );\n\t\t\t\t}\n\t\t\t*/\n\n\t\t}\n\n\t}\n\n\tconst _vector$1 = /*@__PURE__*/new Vector3();\n\n\tconst _color1 = /*@__PURE__*/new Color();\n\n\tconst _color2 = /*@__PURE__*/new Color();\n\n\tclass HemisphereLightHelper extends Object3D {\n\t\tconstructor(light, size, color) {\n\t\t\tsuper();\n\t\t\tthis.light = light;\n\t\t\tthis.light.updateMatrixWorld();\n\t\t\tthis.matrix = light.matrixWorld;\n\t\t\tthis.matrixAutoUpdate = false;\n\t\t\tthis.color = color;\n\t\t\tconst geometry = new OctahedronGeometry(size);\n\t\t\tgeometry.rotateY(Math.PI * 0.5);\n\t\t\tthis.material = new MeshBasicMaterial({\n\t\t\t\twireframe: true,\n\t\t\t\tfog: false,\n\t\t\t\ttoneMapped: false\n\t\t\t});\n\t\t\tif (this.color === undefined) this.material.vertexColors = true;\n\t\t\tconst position = geometry.getAttribute('position');\n\t\t\tconst colors = new Float32Array(position.count * 3);\n\t\t\tgeometry.setAttribute('color', new BufferAttribute(colors, 3));\n\t\t\tthis.add(new Mesh(geometry, this.material));\n\t\t\tthis.update();\n\t\t}\n\n\t\tdispose() {\n\t\t\tthis.children[0].geometry.dispose();\n\t\t\tthis.children[0].material.dispose();\n\t\t}\n\n\t\tupdate() {\n\t\t\tconst mesh = this.children[0];\n\n\t\t\tif (this.color !== undefined) {\n\t\t\t\tthis.material.color.set(this.color);\n\t\t\t} else {\n\t\t\t\tconst colors = mesh.geometry.getAttribute('color');\n\n\t\t\t\t_color1.copy(this.light.color);\n\n\t\t\t\t_color2.copy(this.light.groundColor);\n\n\t\t\t\tfor (let i = 0, l = colors.count; i < l; i++) {\n\t\t\t\t\tconst color = i < l / 2 ? _color1 : _color2;\n\t\t\t\t\tcolors.setXYZ(i, color.r, color.g, color.b);\n\t\t\t\t}\n\n\t\t\t\tcolors.needsUpdate = true;\n\t\t\t}\n\n\t\t\tmesh.lookAt(_vector$1.setFromMatrixPosition(this.light.matrixWorld).negate());\n\t\t}\n\n\t}\n\n\tclass GridHelper extends LineSegments {\n\t\tconstructor(size = 10, divisions = 10, color1 = 0x444444, color2 = 0x888888) {\n\t\t\tcolor1 = new Color(color1);\n\t\t\tcolor2 = new Color(color2);\n\t\t\tconst center = divisions / 2;\n\t\t\tconst step = size / divisions;\n\t\t\tconst halfSize = size / 2;\n\t\t\tconst vertices = [],\n\t\t\t\t\t\tcolors = [];\n\n\t\t\tfor (let i = 0, j = 0, k = -halfSize; i <= divisions; i++, k += step) {\n\t\t\t\tvertices.push(-halfSize, 0, k, halfSize, 0, k);\n\t\t\t\tvertices.push(k, 0, -halfSize, k, 0, halfSize);\n\t\t\t\tconst color = i === center ? color1 : color2;\n\t\t\t\tcolor.toArray(colors, j);\n\t\t\t\tj += 3;\n\t\t\t\tcolor.toArray(colors, j);\n\t\t\t\tj += 3;\n\t\t\t\tcolor.toArray(colors, j);\n\t\t\t\tj += 3;\n\t\t\t\tcolor.toArray(colors, j);\n\t\t\t\tj += 3;\n\t\t\t}\n\n\t\t\tconst geometry = new BufferGeometry();\n\t\t\tgeometry.setAttribute('position', new Float32BufferAttribute(vertices, 3));\n\t\t\tgeometry.setAttribute('color', new Float32BufferAttribute(colors, 3));\n\t\t\tconst material = new LineBasicMaterial({\n\t\t\t\tvertexColors: true,\n\t\t\t\ttoneMapped: false\n\t\t\t});\n\t\t\tsuper(geometry, material);\n\t\t\tthis.type = 'GridHelper';\n\t\t}\n\n\t}\n\n\tclass PolarGridHelper extends LineSegments {\n\t\tconstructor(radius = 10, radials = 16, circles = 8, divisions = 64, color1 = 0x444444, color2 = 0x888888) {\n\t\t\tcolor1 = new Color(color1);\n\t\t\tcolor2 = new Color(color2);\n\t\t\tconst vertices = [];\n\t\t\tconst colors = []; // create the radials\n\n\t\t\tfor (let i = 0; i <= radials; i++) {\n\t\t\t\tconst v = i / radials * (Math.PI * 2);\n\t\t\t\tconst x = Math.sin(v) * radius;\n\t\t\t\tconst z = Math.cos(v) * radius;\n\t\t\t\tvertices.push(0, 0, 0);\n\t\t\t\tvertices.push(x, 0, z);\n\t\t\t\tconst color = i & 1 ? color1 : color2;\n\t\t\t\tcolors.push(color.r, color.g, color.b);\n\t\t\t\tcolors.push(color.r, color.g, color.b);\n\t\t\t} // create the circles\n\n\n\t\t\tfor (let i = 0; i <= circles; i++) {\n\t\t\t\tconst color = i & 1 ? color1 : color2;\n\t\t\t\tconst r = radius - radius / circles * i;\n\n\t\t\t\tfor (let j = 0; j < divisions; j++) {\n\t\t\t\t\t// first vertex\n\t\t\t\t\tlet v = j / divisions * (Math.PI * 2);\n\t\t\t\t\tlet x = Math.sin(v) * r;\n\t\t\t\t\tlet z = Math.cos(v) * r;\n\t\t\t\t\tvertices.push(x, 0, z);\n\t\t\t\t\tcolors.push(color.r, color.g, color.b); // second vertex\n\n\t\t\t\t\tv = (j + 1) / divisions * (Math.PI * 2);\n\t\t\t\t\tx = Math.sin(v) * r;\n\t\t\t\t\tz = Math.cos(v) * r;\n\t\t\t\t\tvertices.push(x, 0, z);\n\t\t\t\t\tcolors.push(color.r, color.g, color.b);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst geometry = new BufferGeometry();\n\t\t\tgeometry.setAttribute('position', new Float32BufferAttribute(vertices, 3));\n\t\t\tgeometry.setAttribute('color', new Float32BufferAttribute(colors, 3));\n\t\t\tconst material = new LineBasicMaterial({\n\t\t\t\tvertexColors: true,\n\t\t\t\ttoneMapped: false\n\t\t\t});\n\t\t\tsuper(geometry, material);\n\t\t\tthis.type = 'PolarGridHelper';\n\t\t}\n\n\t}\n\n\tconst _v1 = /*@__PURE__*/new Vector3();\n\n\tconst _v2 = /*@__PURE__*/new Vector3();\n\n\tconst _v3 = /*@__PURE__*/new Vector3();\n\n\tclass DirectionalLightHelper extends Object3D {\n\t\tconstructor(light, size, color) {\n\t\t\tsuper();\n\t\t\tthis.light = light;\n\t\t\tthis.light.updateMatrixWorld();\n\t\t\tthis.matrix = light.matrixWorld;\n\t\t\tthis.matrixAutoUpdate = false;\n\t\t\tthis.color = color;\n\t\t\tif (size === undefined) size = 1;\n\t\t\tlet geometry = new BufferGeometry();\n\t\t\tgeometry.setAttribute('position', new Float32BufferAttribute([-size, size, 0, size, size, 0, size, -size, 0, -size, -size, 0, -size, size, 0], 3));\n\t\t\tconst material = new LineBasicMaterial({\n\t\t\t\tfog: false,\n\t\t\t\ttoneMapped: false\n\t\t\t});\n\t\t\tthis.lightPlane = new Line(geometry, material);\n\t\t\tthis.add(this.lightPlane);\n\t\t\tgeometry = new BufferGeometry();\n\t\t\tgeometry.setAttribute('position', new Float32BufferAttribute([0, 0, 0, 0, 0, 1], 3));\n\t\t\tthis.targetLine = new Line(geometry, material);\n\t\t\tthis.add(this.targetLine);\n\t\t\tthis.update();\n\t\t}\n\n\t\tdispose() {\n\t\t\tthis.lightPlane.geometry.dispose();\n\t\t\tthis.lightPlane.material.dispose();\n\t\t\tthis.targetLine.geometry.dispose();\n\t\t\tthis.targetLine.material.dispose();\n\t\t}\n\n\t\tupdate() {\n\t\t\t_v1.setFromMatrixPosition(this.light.matrixWorld);\n\n\t\t\t_v2.setFromMatrixPosition(this.light.target.matrixWorld);\n\n\t\t\t_v3.subVectors(_v2, _v1);\n\n\t\t\tthis.lightPlane.lookAt(_v2);\n\n\t\t\tif (this.color !== undefined) {\n\t\t\t\tthis.lightPlane.material.color.set(this.color);\n\t\t\t\tthis.targetLine.material.color.set(this.color);\n\t\t\t} else {\n\t\t\t\tthis.lightPlane.material.color.copy(this.light.color);\n\t\t\t\tthis.targetLine.material.color.copy(this.light.color);\n\t\t\t}\n\n\t\t\tthis.targetLine.lookAt(_v2);\n\t\t\tthis.targetLine.scale.z = _v3.length();\n\t\t}\n\n\t}\n\n\tconst _vector = /*@__PURE__*/new Vector3();\n\n\tconst _camera = /*@__PURE__*/new Camera();\n\t/**\n\t *\t- shows frustum, line of sight and up of the camera\n\t *\t- suitable for fast updates\n\t * \t- based on frustum visualization in lightgl.js shadowmap example\n\t *\t\thttp://evanw.github.com/lightgl.js/tests/shadowmap.html\n\t */\n\n\n\tclass CameraHelper extends LineSegments {\n\t\tconstructor(camera) {\n\t\t\tconst geometry = new BufferGeometry();\n\t\t\tconst material = new LineBasicMaterial({\n\t\t\t\tcolor: 0xffffff,\n\t\t\t\tvertexColors: true,\n\t\t\t\ttoneMapped: false\n\t\t\t});\n\t\t\tconst vertices = [];\n\t\t\tconst colors = [];\n\t\t\tconst pointMap = {}; // colors\n\n\t\t\tconst colorFrustum = new Color(0xffaa00);\n\t\t\tconst colorCone = new Color(0xff0000);\n\t\t\tconst colorUp = new Color(0x00aaff);\n\t\t\tconst colorTarget = new Color(0xffffff);\n\t\t\tconst colorCross = new Color(0x333333); // near\n\n\t\t\taddLine('n1', 'n2', colorFrustum);\n\t\t\taddLine('n2', 'n4', colorFrustum);\n\t\t\taddLine('n4', 'n3', colorFrustum);\n\t\t\taddLine('n3', 'n1', colorFrustum); // far\n\n\t\t\taddLine('f1', 'f2', colorFrustum);\n\t\t\taddLine('f2', 'f4', colorFrustum);\n\t\t\taddLine('f4', 'f3', colorFrustum);\n\t\t\taddLine('f3', 'f1', colorFrustum); // sides\n\n\t\t\taddLine('n1', 'f1', colorFrustum);\n\t\t\taddLine('n2', 'f2', colorFrustum);\n\t\t\taddLine('n3', 'f3', colorFrustum);\n\t\t\taddLine('n4', 'f4', colorFrustum); // cone\n\n\t\t\taddLine('p', 'n1', colorCone);\n\t\t\taddLine('p', 'n2', colorCone);\n\t\t\taddLine('p', 'n3', colorCone);\n\t\t\taddLine('p', 'n4', colorCone); // up\n\n\t\t\taddLine('u1', 'u2', colorUp);\n\t\t\taddLine('u2', 'u3', colorUp);\n\t\t\taddLine('u3', 'u1', colorUp); // target\n\n\t\t\taddLine('c', 't', colorTarget);\n\t\t\taddLine('p', 'c', colorCross); // cross\n\n\t\t\taddLine('cn1', 'cn2', colorCross);\n\t\t\taddLine('cn3', 'cn4', colorCross);\n\t\t\taddLine('cf1', 'cf2', colorCross);\n\t\t\taddLine('cf3', 'cf4', colorCross);\n\n\t\t\tfunction addLine(a, b, color) {\n\t\t\t\taddPoint(a, color);\n\t\t\t\taddPoint(b, color);\n\t\t\t}\n\n\t\t\tfunction addPoint(id, color) {\n\t\t\t\tvertices.push(0, 0, 0);\n\t\t\t\tcolors.push(color.r, color.g, color.b);\n\n\t\t\t\tif (pointMap[id] === undefined) {\n\t\t\t\t\tpointMap[id] = [];\n\t\t\t\t}\n\n\t\t\t\tpointMap[id].push(vertices.length / 3 - 1);\n\t\t\t}\n\n\t\t\tgeometry.setAttribute('position', new Float32BufferAttribute(vertices, 3));\n\t\t\tgeometry.setAttribute('color', new Float32BufferAttribute(colors, 3));\n\t\t\tsuper(geometry, material);\n\t\t\tthis.type = 'CameraHelper';\n\t\t\tthis.camera = camera;\n\t\t\tif (this.camera.updateProjectionMatrix) this.camera.updateProjectionMatrix();\n\t\t\tthis.matrix = camera.matrixWorld;\n\t\t\tthis.matrixAutoUpdate = false;\n\t\t\tthis.pointMap = pointMap;\n\t\t\tthis.update();\n\t\t}\n\n\t\tupdate() {\n\t\t\tconst geometry = this.geometry;\n\t\t\tconst pointMap = this.pointMap;\n\t\t\tconst w = 1,\n\t\t\t\t\t\th = 1; // we need just camera projection matrix inverse\n\t\t\t// world matrix must be identity\n\n\t\t\t_camera.projectionMatrixInverse.copy(this.camera.projectionMatrixInverse); // center / target\n\n\n\t\t\tsetPoint('c', pointMap, geometry, _camera, 0, 0, -1);\n\t\t\tsetPoint('t', pointMap, geometry, _camera, 0, 0, 1); // near\n\n\t\t\tsetPoint('n1', pointMap, geometry, _camera, -w, -h, -1);\n\t\t\tsetPoint('n2', pointMap, geometry, _camera, w, -h, -1);\n\t\t\tsetPoint('n3', pointMap, geometry, _camera, -w, h, -1);\n\t\t\tsetPoint('n4', pointMap, geometry, _camera, w, h, -1); // far\n\n\t\t\tsetPoint('f1', pointMap, geometry, _camera, -w, -h, 1);\n\t\t\tsetPoint('f2', pointMap, geometry, _camera, w, -h, 1);\n\t\t\tsetPoint('f3', pointMap, geometry, _camera, -w, h, 1);\n\t\t\tsetPoint('f4', pointMap, geometry, _camera, w, h, 1); // up\n\n\t\t\tsetPoint('u1', pointMap, geometry, _camera, w * 0.7, h * 1.1, -1);\n\t\t\tsetPoint('u2', pointMap, geometry, _camera, -w * 0.7, h * 1.1, -1);\n\t\t\tsetPoint('u3', pointMap, geometry, _camera, 0, h * 2, -1); // cross\n\n\t\t\tsetPoint('cf1', pointMap, geometry, _camera, -w, 0, 1);\n\t\t\tsetPoint('cf2', pointMap, geometry, _camera, w, 0, 1);\n\t\t\tsetPoint('cf3', pointMap, geometry, _camera, 0, -h, 1);\n\t\t\tsetPoint('cf4', pointMap, geometry, _camera, 0, h, 1);\n\t\t\tsetPoint('cn1', pointMap, geometry, _camera, -w, 0, -1);\n\t\t\tsetPoint('cn2', pointMap, geometry, _camera, w, 0, -1);\n\t\t\tsetPoint('cn3', pointMap, geometry, _camera, 0, -h, -1);\n\t\t\tsetPoint('cn4', pointMap, geometry, _camera, 0, h, -1);\n\t\t\tgeometry.getAttribute('position').needsUpdate = true;\n\t\t}\n\n\t\tdispose() {\n\t\t\tthis.geometry.dispose();\n\t\t\tthis.material.dispose();\n\t\t}\n\n\t}\n\n\tfunction setPoint(point, pointMap, geometry, camera, x, y, z) {\n\t\t_vector.set(x, y, z).unproject(camera);\n\n\t\tconst points = pointMap[point];\n\n\t\tif (points !== undefined) {\n\t\t\tconst position = geometry.getAttribute('position');\n\n\t\t\tfor (let i = 0, l = points.length; i < l; i++) {\n\t\t\t\tposition.setXYZ(points[i], _vector.x, _vector.y, _vector.z);\n\t\t\t}\n\t\t}\n\t}\n\n\tconst _box = /*@__PURE__*/new Box3();\n\n\tclass BoxHelper extends LineSegments {\n\t\tconstructor(object, color = 0xffff00) {\n\t\t\tconst indices = new Uint16Array([0, 1, 1, 2, 2, 3, 3, 0, 4, 5, 5, 6, 6, 7, 7, 4, 0, 4, 1, 5, 2, 6, 3, 7]);\n\t\t\tconst positions = new Float32Array(8 * 3);\n\t\t\tconst geometry = new BufferGeometry();\n\t\t\tgeometry.setIndex(new BufferAttribute(indices, 1));\n\t\t\tgeometry.setAttribute('position', new BufferAttribute(positions, 3));\n\t\t\tsuper(geometry, new LineBasicMaterial({\n\t\t\t\tcolor: color,\n\t\t\t\ttoneMapped: false\n\t\t\t}));\n\t\t\tthis.object = object;\n\t\t\tthis.type = 'BoxHelper';\n\t\t\tthis.matrixAutoUpdate = false;\n\t\t\tthis.update();\n\t\t}\n\n\t\tupdate(object) {\n\t\t\tif (object !== undefined) {\n\t\t\t\tconsole.warn('THREE.BoxHelper: .update() has no longer arguments.');\n\t\t\t}\n\n\t\t\tif (this.object !== undefined) {\n\t\t\t\t_box.setFromObject(this.object);\n\t\t\t}\n\n\t\t\tif (_box.isEmpty()) return;\n\t\t\tconst min = _box.min;\n\t\t\tconst max = _box.max;\n\t\t\t/*\n\t\t\t\t5____4\n\t\t\t1/___0/|\n\t\t\t| 6__|_7\n\t\t\t2/___3/\n\t\t\t\t0: max.x, max.y, max.z\n\t\t\t1: min.x, max.y, max.z\n\t\t\t2: min.x, min.y, max.z\n\t\t\t3: max.x, min.y, max.z\n\t\t\t4: max.x, max.y, min.z\n\t\t\t5: min.x, max.y, min.z\n\t\t\t6: min.x, min.y, min.z\n\t\t\t7: max.x, min.y, min.z\n\t\t\t*/\n\n\t\t\tconst position = this.geometry.attributes.position;\n\t\t\tconst array = position.array;\n\t\t\tarray[0] = max.x;\n\t\t\tarray[1] = max.y;\n\t\t\tarray[2] = max.z;\n\t\t\tarray[3] = min.x;\n\t\t\tarray[4] = max.y;\n\t\t\tarray[5] = max.z;\n\t\t\tarray[6] = min.x;\n\t\t\tarray[7] = min.y;\n\t\t\tarray[8] = max.z;\n\t\t\tarray[9] = max.x;\n\t\t\tarray[10] = min.y;\n\t\t\tarray[11] = max.z;\n\t\t\tarray[12] = max.x;\n\t\t\tarray[13] = max.y;\n\t\t\tarray[14] = min.z;\n\t\t\tarray[15] = min.x;\n\t\t\tarray[16] = max.y;\n\t\t\tarray[17] = min.z;\n\t\t\tarray[18] = min.x;\n\t\t\tarray[19] = min.y;\n\t\t\tarray[20] = min.z;\n\t\t\tarray[21] = max.x;\n\t\t\tarray[22] = min.y;\n\t\t\tarray[23] = min.z;\n\t\t\tposition.needsUpdate = true;\n\t\t\tthis.geometry.computeBoundingSphere();\n\t\t}\n\n\t\tsetFromObject(object) {\n\t\t\tthis.object = object;\n\t\t\tthis.update();\n\t\t\treturn this;\n\t\t}\n\n\t\tcopy(source) {\n\t\t\tLineSegments.prototype.copy.call(this, source);\n\t\t\tthis.object = source.object;\n\t\t\treturn this;\n\t\t}\n\n\t}\n\n\tclass Box3Helper extends LineSegments {\n\t\tconstructor(box, color = 0xffff00) {\n\t\t\tconst indices = new Uint16Array([0, 1, 1, 2, 2, 3, 3, 0, 4, 5, 5, 6, 6, 7, 7, 4, 0, 4, 1, 5, 2, 6, 3, 7]);\n\t\t\tconst positions = [1, 1, 1, -1, 1, 1, -1, -1, 1, 1, -1, 1, 1, 1, -1, -1, 1, -1, -1, -1, -1, 1, -1, -1];\n\t\t\tconst geometry = new BufferGeometry();\n\t\t\tgeometry.setIndex(new BufferAttribute(indices, 1));\n\t\t\tgeometry.setAttribute('position', new Float32BufferAttribute(positions, 3));\n\t\t\tsuper(geometry, new LineBasicMaterial({\n\t\t\t\tcolor: color,\n\t\t\t\ttoneMapped: false\n\t\t\t}));\n\t\t\tthis.box = box;\n\t\t\tthis.type = 'Box3Helper';\n\t\t\tthis.geometry.computeBoundingSphere();\n\t\t}\n\n\t\tupdateMatrixWorld(force) {\n\t\t\tconst box = this.box;\n\t\t\tif (box.isEmpty()) return;\n\t\t\tbox.getCenter(this.position);\n\t\t\tbox.getSize(this.scale);\n\t\t\tthis.scale.multiplyScalar(0.5);\n\t\t\tsuper.updateMatrixWorld(force);\n\t\t}\n\n\t}\n\n\tclass PlaneHelper extends Line {\n\t\tconstructor(plane, size = 1, hex = 0xffff00) {\n\t\t\tconst color = hex;\n\t\t\tconst positions = [1, -1, 1, -1, 1, 1, -1, -1, 1, 1, 1, 1, -1, 1, 1, -1, -1, 1, 1, -1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0];\n\t\t\tconst geometry = new BufferGeometry();\n\t\t\tgeometry.setAttribute('position', new Float32BufferAttribute(positions, 3));\n\t\t\tgeometry.computeBoundingSphere();\n\t\t\tsuper(geometry, new LineBasicMaterial({\n\t\t\t\tcolor: color,\n\t\t\t\ttoneMapped: false\n\t\t\t}));\n\t\t\tthis.type = 'PlaneHelper';\n\t\t\tthis.plane = plane;\n\t\t\tthis.size = size;\n\t\t\tconst positions2 = [1, 1, 1, -1, 1, 1, -1, -1, 1, 1, 1, 1, -1, -1, 1, 1, -1, 1];\n\t\t\tconst geometry2 = new BufferGeometry();\n\t\t\tgeometry2.setAttribute('position', new Float32BufferAttribute(positions2, 3));\n\t\t\tgeometry2.computeBoundingSphere();\n\t\t\tthis.add(new Mesh(geometry2, new MeshBasicMaterial({\n\t\t\t\tcolor: color,\n\t\t\t\topacity: 0.2,\n\t\t\t\ttransparent: true,\n\t\t\t\tdepthWrite: false,\n\t\t\t\ttoneMapped: false\n\t\t\t})));\n\t\t}\n\n\t\tupdateMatrixWorld(force) {\n\t\t\tlet scale = -this.plane.constant;\n\t\t\tif (Math.abs(scale) < 1e-8) scale = 1e-8; // sign does not matter\n\n\t\t\tthis.scale.set(0.5 * this.size, 0.5 * this.size, scale);\n\t\t\tthis.children[0].material.side = scale < 0 ? BackSide : FrontSide; // renderer flips side when determinant < 0; flipping not wanted here\n\n\t\t\tthis.lookAt(this.plane.normal);\n\t\t\tsuper.updateMatrixWorld(force);\n\t\t}\n\n\t}\n\n\tconst _axis = /*@__PURE__*/new Vector3();\n\n\tlet _lineGeometry, _coneGeometry;\n\n\tclass ArrowHelper extends Object3D {\n\t\t// dir is assumed to be normalized\n\t\tconstructor(dir = new Vector3(0, 0, 1), origin = new Vector3(0, 0, 0), length = 1, color = 0xffff00, headLength = length * 0.2, headWidth = headLength * 0.2) {\n\t\t\tsuper();\n\t\t\tthis.type = 'ArrowHelper';\n\n\t\t\tif (_lineGeometry === undefined) {\n\t\t\t\t_lineGeometry = new BufferGeometry();\n\n\t\t\t\t_lineGeometry.setAttribute('position', new Float32BufferAttribute([0, 0, 0, 0, 1, 0], 3));\n\n\t\t\t\t_coneGeometry = new CylinderGeometry(0, 0.5, 1, 5, 1);\n\n\t\t\t\t_coneGeometry.translate(0, -0.5, 0);\n\t\t\t}\n\n\t\t\tthis.position.copy(origin);\n\t\t\tthis.line = new Line(_lineGeometry, new LineBasicMaterial({\n\t\t\t\tcolor: color,\n\t\t\t\ttoneMapped: false\n\t\t\t}));\n\t\t\tthis.line.matrixAutoUpdate = false;\n\t\t\tthis.add(this.line);\n\t\t\tthis.cone = new Mesh(_coneGeometry, new MeshBasicMaterial({\n\t\t\t\tcolor: color,\n\t\t\t\ttoneMapped: false\n\t\t\t}));\n\t\t\tthis.cone.matrixAutoUpdate = false;\n\t\t\tthis.add(this.cone);\n\t\t\tthis.setDirection(dir);\n\t\t\tthis.setLength(length, headLength, headWidth);\n\t\t}\n\n\t\tsetDirection(dir) {\n\t\t\t// dir is assumed to be normalized\n\t\t\tif (dir.y > 0.99999) {\n\t\t\t\tthis.quaternion.set(0, 0, 0, 1);\n\t\t\t} else if (dir.y < -0.99999) {\n\t\t\t\tthis.quaternion.set(1, 0, 0, 0);\n\t\t\t} else {\n\t\t\t\t_axis.set(dir.z, 0, -dir.x).normalize();\n\n\t\t\t\tconst radians = Math.acos(dir.y);\n\t\t\t\tthis.quaternion.setFromAxisAngle(_axis, radians);\n\t\t\t}\n\t\t}\n\n\t\tsetLength(length, headLength = length * 0.2, headWidth = headLength * 0.2) {\n\t\t\tthis.line.scale.set(1, Math.max(0.0001, length - headLength), 1); // see #17458\n\n\t\t\tthis.line.updateMatrix();\n\t\t\tthis.cone.scale.set(headWidth, headLength, headWidth);\n\t\t\tthis.cone.position.y = length;\n\t\t\tthis.cone.updateMatrix();\n\t\t}\n\n\t\tsetColor(color) {\n\t\t\tthis.line.material.color.set(color);\n\t\t\tthis.cone.material.color.set(color);\n\t\t}\n\n\t\tcopy(source) {\n\t\t\tsuper.copy(source, false);\n\t\t\tthis.line.copy(source.line);\n\t\t\tthis.cone.copy(source.cone);\n\t\t\treturn this;\n\t\t}\n\n\t}\n\n\tclass AxesHelper extends LineSegments {\n\t\tconstructor(size = 1) {\n\t\t\tconst vertices = [0, 0, 0, size, 0, 0, 0, 0, 0, 0, size, 0, 0, 0, 0, 0, 0, size];\n\t\t\tconst colors = [1, 0, 0, 1, 0.6, 0, 0, 1, 0, 0.6, 1, 0, 0, 0, 1, 0, 0.6, 1];\n\t\t\tconst geometry = new BufferGeometry();\n\t\t\tgeometry.setAttribute('position', new Float32BufferAttribute(vertices, 3));\n\t\t\tgeometry.setAttribute('color', new Float32BufferAttribute(colors, 3));\n\t\t\tconst material = new LineBasicMaterial({\n\t\t\t\tvertexColors: true,\n\t\t\t\ttoneMapped: false\n\t\t\t});\n\t\t\tsuper(geometry, material);\n\t\t\tthis.type = 'AxesHelper';\n\t\t}\n\n\t\tsetColors(xAxisColor, yAxisColor, zAxisColor) {\n\t\t\tconst color = new Color();\n\t\t\tconst array = this.geometry.attributes.color.array;\n\t\t\tcolor.set(xAxisColor);\n\t\t\tcolor.toArray(array, 0);\n\t\t\tcolor.toArray(array, 3);\n\t\t\tcolor.set(yAxisColor);\n\t\t\tcolor.toArray(array, 6);\n\t\t\tcolor.toArray(array, 9);\n\t\t\tcolor.set(zAxisColor);\n\t\t\tcolor.toArray(array, 12);\n\t\t\tcolor.toArray(array, 15);\n\t\t\tthis.geometry.attributes.color.needsUpdate = true;\n\t\t\treturn this;\n\t\t}\n\n\t\tdispose() {\n\t\t\tthis.geometry.dispose();\n\t\t\tthis.material.dispose();\n\t\t}\n\n\t}\n\n\tclass ShapePath {\n\t\tconstructor() {\n\t\t\tthis.type = 'ShapePath';\n\t\t\tthis.color = new Color();\n\t\t\tthis.subPaths = [];\n\t\t\tthis.currentPath = null;\n\t\t}\n\n\t\tmoveTo(x, y) {\n\t\t\tthis.currentPath = new Path();\n\t\t\tthis.subPaths.push(this.currentPath);\n\t\t\tthis.currentPath.moveTo(x, y);\n\t\t\treturn this;\n\t\t}\n\n\t\tlineTo(x, y) {\n\t\t\tthis.currentPath.lineTo(x, y);\n\t\t\treturn this;\n\t\t}\n\n\t\tquadraticCurveTo(aCPx, aCPy, aX, aY) {\n\t\t\tthis.currentPath.quadraticCurveTo(aCPx, aCPy, aX, aY);\n\t\t\treturn this;\n\t\t}\n\n\t\tbezierCurveTo(aCP1x, aCP1y, aCP2x, aCP2y, aX, aY) {\n\t\t\tthis.currentPath.bezierCurveTo(aCP1x, aCP1y, aCP2x, aCP2y, aX, aY);\n\t\t\treturn this;\n\t\t}\n\n\t\tsplineThru(pts) {\n\t\t\tthis.currentPath.splineThru(pts);\n\t\t\treturn this;\n\t\t}\n\n\t\ttoShapes(isCCW, noHoles) {\n\t\t\tfunction toShapesNoHoles(inSubpaths) {\n\t\t\t\tconst shapes = [];\n\n\t\t\t\tfor (let i = 0, l = inSubpaths.length; i < l; i++) {\n\t\t\t\t\tconst tmpPath = inSubpaths[i];\n\t\t\t\t\tconst tmpShape = new Shape();\n\t\t\t\t\ttmpShape.curves = tmpPath.curves;\n\t\t\t\t\tshapes.push(tmpShape);\n\t\t\t\t}\n\n\t\t\t\treturn shapes;\n\t\t\t}\n\n\t\t\tfunction isPointInsidePolygon(inPt, inPolygon) {\n\t\t\t\tconst polyLen = inPolygon.length; // inPt on polygon contour => immediate success\t\tor\n\t\t\t\t// toggling of inside/outside at every single! intersection point of an edge\n\t\t\t\t//\twith the horizontal line through inPt, left of inPt\n\t\t\t\t//\tnot counting lowerY endpoints of edges and whole edges on that line\n\n\t\t\t\tlet inside = false;\n\n\t\t\t\tfor (let p = polyLen - 1, q = 0; q < polyLen; p = q++) {\n\t\t\t\t\tlet edgeLowPt = inPolygon[p];\n\t\t\t\t\tlet edgeHighPt = inPolygon[q];\n\t\t\t\t\tlet edgeDx = edgeHighPt.x - edgeLowPt.x;\n\t\t\t\t\tlet edgeDy = edgeHighPt.y - edgeLowPt.y;\n\n\t\t\t\t\tif (Math.abs(edgeDy) > Number.EPSILON) {\n\t\t\t\t\t\t// not parallel\n\t\t\t\t\t\tif (edgeDy < 0) {\n\t\t\t\t\t\t\tedgeLowPt = inPolygon[q];\n\t\t\t\t\t\t\tedgeDx = -edgeDx;\n\t\t\t\t\t\t\tedgeHighPt = inPolygon[p];\n\t\t\t\t\t\t\tedgeDy = -edgeDy;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (inPt.y < edgeLowPt.y || inPt.y > edgeHighPt.y) continue;\n\n\t\t\t\t\t\tif (inPt.y === edgeLowPt.y) {\n\t\t\t\t\t\t\tif (inPt.x === edgeLowPt.x) return true; // inPt is on contour ?\n\t\t\t\t\t\t\t// continue;\t\t\t\t// no intersection or edgeLowPt => doesn't count !!!\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tconst perpEdge = edgeDy * (inPt.x - edgeLowPt.x) - edgeDx * (inPt.y - edgeLowPt.y);\n\t\t\t\t\t\t\tif (perpEdge === 0) return true; // inPt is on contour ?\n\n\t\t\t\t\t\t\tif (perpEdge < 0) continue;\n\t\t\t\t\t\t\tinside = !inside; // true intersection left of inPt\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// parallel or collinear\n\t\t\t\t\t\tif (inPt.y !== edgeLowPt.y) continue; // parallel\n\t\t\t\t\t\t// edge lies on the same horizontal line as inPt\n\n\t\t\t\t\t\tif (edgeHighPt.x <= inPt.x && inPt.x <= edgeLowPt.x || edgeLowPt.x <= inPt.x && inPt.x <= edgeHighPt.x) return true; // inPt: Point on contour !\n\t\t\t\t\t\t// continue;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn inside;\n\t\t\t}\n\n\t\t\tconst isClockWise = ShapeUtils.isClockWise;\n\t\t\tconst subPaths = this.subPaths;\n\t\t\tif (subPaths.length === 0) return [];\n\t\t\tif (noHoles === true) return toShapesNoHoles(subPaths);\n\t\t\tlet solid, tmpPath, tmpShape;\n\t\t\tconst shapes = [];\n\n\t\t\tif (subPaths.length === 1) {\n\t\t\t\ttmpPath = subPaths[0];\n\t\t\t\ttmpShape = new Shape();\n\t\t\t\ttmpShape.curves = tmpPath.curves;\n\t\t\t\tshapes.push(tmpShape);\n\t\t\t\treturn shapes;\n\t\t\t}\n\n\t\t\tlet holesFirst = !isClockWise(subPaths[0].getPoints());\n\t\t\tholesFirst = isCCW ? !holesFirst : holesFirst; // console.log(\"Holes first\", holesFirst);\n\n\t\t\tconst betterShapeHoles = [];\n\t\t\tconst newShapes = [];\n\t\t\tlet newShapeHoles = [];\n\t\t\tlet mainIdx = 0;\n\t\t\tlet tmpPoints;\n\t\t\tnewShapes[mainIdx] = undefined;\n\t\t\tnewShapeHoles[mainIdx] = [];\n\n\t\t\tfor (let i = 0, l = subPaths.length; i < l; i++) {\n\t\t\t\ttmpPath = subPaths[i];\n\t\t\t\ttmpPoints = tmpPath.getPoints();\n\t\t\t\tsolid = isClockWise(tmpPoints);\n\t\t\t\tsolid = isCCW ? !solid : solid;\n\n\t\t\t\tif (solid) {\n\t\t\t\t\tif (!holesFirst && newShapes[mainIdx]) mainIdx++;\n\t\t\t\t\tnewShapes[mainIdx] = {\n\t\t\t\t\t\ts: new Shape(),\n\t\t\t\t\t\tp: tmpPoints\n\t\t\t\t\t};\n\t\t\t\t\tnewShapes[mainIdx].s.curves = tmpPath.curves;\n\t\t\t\t\tif (holesFirst) mainIdx++;\n\t\t\t\t\tnewShapeHoles[mainIdx] = []; //console.log('cw', i);\n\t\t\t\t} else {\n\t\t\t\t\tnewShapeHoles[mainIdx].push({\n\t\t\t\t\t\th: tmpPath,\n\t\t\t\t\t\tp: tmpPoints[0]\n\t\t\t\t\t}); //console.log('ccw', i);\n\t\t\t\t}\n\t\t\t} // only Holes? -> probably all Shapes with wrong orientation\n\n\n\t\t\tif (!newShapes[0]) return toShapesNoHoles(subPaths);\n\n\t\t\tif (newShapes.length > 1) {\n\t\t\t\tlet ambiguous = false;\n\t\t\t\tconst toChange = [];\n\n\t\t\t\tfor (let sIdx = 0, sLen = newShapes.length; sIdx < sLen; sIdx++) {\n\t\t\t\t\tbetterShapeHoles[sIdx] = [];\n\t\t\t\t}\n\n\t\t\t\tfor (let sIdx = 0, sLen = newShapes.length; sIdx < sLen; sIdx++) {\n\t\t\t\t\tconst sho = newShapeHoles[sIdx];\n\n\t\t\t\t\tfor (let hIdx = 0; hIdx < sho.length; hIdx++) {\n\t\t\t\t\t\tconst ho = sho[hIdx];\n\t\t\t\t\t\tlet hole_unassigned = true;\n\n\t\t\t\t\t\tfor (let s2Idx = 0; s2Idx < newShapes.length; s2Idx++) {\n\t\t\t\t\t\t\tif (isPointInsidePolygon(ho.p, newShapes[s2Idx].p)) {\n\t\t\t\t\t\t\t\tif (sIdx !== s2Idx) toChange.push({\n\t\t\t\t\t\t\t\t\tfroms: sIdx,\n\t\t\t\t\t\t\t\t\ttos: s2Idx,\n\t\t\t\t\t\t\t\t\thole: hIdx\n\t\t\t\t\t\t\t\t});\n\n\t\t\t\t\t\t\t\tif (hole_unassigned) {\n\t\t\t\t\t\t\t\t\thole_unassigned = false;\n\t\t\t\t\t\t\t\t\tbetterShapeHoles[s2Idx].push(ho);\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tambiguous = true;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (hole_unassigned) {\n\t\t\t\t\t\t\tbetterShapeHoles[sIdx].push(ho);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} // console.log(\"ambiguous: \", ambiguous);\n\n\n\t\t\t\tif (toChange.length > 0) {\n\t\t\t\t\t// console.log(\"to change: \", toChange);\n\t\t\t\t\tif (!ambiguous) newShapeHoles = betterShapeHoles;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlet tmpHoles;\n\n\t\t\tfor (let i = 0, il = newShapes.length; i < il; i++) {\n\t\t\t\ttmpShape = newShapes[i].s;\n\t\t\t\tshapes.push(tmpShape);\n\t\t\t\ttmpHoles = newShapeHoles[i];\n\n\t\t\t\tfor (let j = 0, jl = tmpHoles.length; j < jl; j++) {\n\t\t\t\t\ttmpShape.holes.push(tmpHoles[j].h);\n\t\t\t\t}\n\t\t\t} //console.log(\"shape\", shapes);\n\n\n\t\t\treturn shapes;\n\t\t}\n\n\t}\n\n\tconst _floatView = new Float32Array(1);\n\n\tconst _int32View = new Int32Array(_floatView.buffer);\n\n\tclass DataUtils {\n\t\t// Converts float32 to float16 (stored as uint16 value).\n\t\tstatic toHalfFloat(val) {\n\t\t\tif (val > 65504) {\n\t\t\t\tconsole.warn('THREE.DataUtils.toHalfFloat(): value exceeds 65504.');\n\t\t\t\tval = 65504; // maximum representable value in float16\n\t\t\t} // Source: http://gamedev.stackexchange.com/questions/17326/conversion-of-a-number-from-single-precision-floating-point-representation-to-a/17410#17410\n\n\t\t\t/* This method is faster than the OpenEXR implementation (very often\n\t\t\t* used, eg. in Ogre), with the additional benefit of rounding, inspired\n\t\t\t* by James Tursa?s half-precision code. */\n\n\n\t\t\t_floatView[0] = val;\n\t\t\tconst x = _int32View[0];\n\t\t\tlet bits = x >> 16 & 0x8000;\n\t\t\t/* Get the sign */\n\n\t\t\tlet m = x >> 12 & 0x07ff;\n\t\t\t/* Keep one extra bit for rounding */\n\n\t\t\tconst e = x >> 23 & 0xff;\n\t\t\t/* Using int is faster here */\n\n\t\t\t/* If zero, or denormal, or exponent underflows too much for a denormal\n\t\t\t\t* half, return signed zero. */\n\n\t\t\tif (e < 103) return bits;\n\t\t\t/* If NaN, return NaN. If Inf or exponent overflow, return Inf. */\n\n\t\t\tif (e > 142) {\n\t\t\t\tbits |= 0x7c00;\n\t\t\t\t/* If exponent was 0xff and one mantissa bit was set, it means NaN,\n\t\t\t\t\t\t\t* not Inf, so make sure we set one mantissa bit too. */\n\n\t\t\t\tbits |= (e == 255 ? 0 : 1) && x & 0x007fffff;\n\t\t\t\treturn bits;\n\t\t\t}\n\t\t\t/* If exponent underflows but not too much, return a denormal */\n\n\n\t\t\tif (e < 113) {\n\t\t\t\tm |= 0x0800;\n\t\t\t\t/* Extra rounding may overflow and set mantissa to 0 and exponent\n\t\t\t\t\t* to 1, which is OK. */\n\n\t\t\t\tbits |= (m >> 114 - e) + (m >> 113 - e & 1);\n\t\t\t\treturn bits;\n\t\t\t}\n\n\t\t\tbits |= e - 112 << 10 | m >> 1;\n\t\t\t/* Extra rounding. An overflow will set mantissa to 0 and increment\n\t\t\t\t* the exponent, which is OK. */\n\n\t\t\tbits += m & 1;\n\t\t\treturn bits;\n\t\t}\n\n\t}\n\n\tconst LineStrip = 0;\n\tconst LinePieces = 1;\n\tconst NoColors = 0;\n\tconst FaceColors = 1;\n\tconst VertexColors = 2;\n\tfunction MeshFaceMaterial(materials) {\n\t\tconsole.warn('THREE.MeshFaceMaterial has been removed. Use an Array instead.');\n\t\treturn materials;\n\t}\n\tfunction MultiMaterial(materials = []) {\n\t\tconsole.warn('THREE.MultiMaterial has been removed. Use an Array instead.');\n\t\tmaterials.isMultiMaterial = true;\n\t\tmaterials.materials = materials;\n\n\t\tmaterials.clone = function () {\n\t\t\treturn materials.slice();\n\t\t};\n\n\t\treturn materials;\n\t}\n\tfunction PointCloud(geometry, material) {\n\t\tconsole.warn('THREE.PointCloud has been renamed to THREE.Points.');\n\t\treturn new Points(geometry, material);\n\t}\n\tfunction Particle(material) {\n\t\tconsole.warn('THREE.Particle has been renamed to THREE.Sprite.');\n\t\treturn new Sprite(material);\n\t}\n\tfunction ParticleSystem(geometry, material) {\n\t\tconsole.warn('THREE.ParticleSystem has been renamed to THREE.Points.');\n\t\treturn new Points(geometry, material);\n\t}\n\tfunction PointCloudMaterial(parameters) {\n\t\tconsole.warn('THREE.PointCloudMaterial has been renamed to THREE.PointsMaterial.');\n\t\treturn new PointsMaterial(parameters);\n\t}\n\tfunction ParticleBasicMaterial(parameters) {\n\t\tconsole.warn('THREE.ParticleBasicMaterial has been renamed to THREE.PointsMaterial.');\n\t\treturn new PointsMaterial(parameters);\n\t}\n\tfunction ParticleSystemMaterial(parameters) {\n\t\tconsole.warn('THREE.ParticleSystemMaterial has been renamed to THREE.PointsMaterial.');\n\t\treturn new PointsMaterial(parameters);\n\t}\n\tfunction Vertex(x, y, z) {\n\t\tconsole.warn('THREE.Vertex has been removed. Use THREE.Vector3 instead.');\n\t\treturn new Vector3(x, y, z);\n\t} //\n\n\tfunction DynamicBufferAttribute(array, itemSize) {\n\t\tconsole.warn('THREE.DynamicBufferAttribute has been removed. Use new THREE.BufferAttribute().setUsage( THREE.DynamicDrawUsage ) instead.');\n\t\treturn new BufferAttribute(array, itemSize).setUsage(DynamicDrawUsage);\n\t}\n\tfunction Int8Attribute(array, itemSize) {\n\t\tconsole.warn('THREE.Int8Attribute has been removed. Use new THREE.Int8BufferAttribute() instead.');\n\t\treturn new Int8BufferAttribute(array, itemSize);\n\t}\n\tfunction Uint8Attribute(array, itemSize) {\n\t\tconsole.warn('THREE.Uint8Attribute has been removed. Use new THREE.Uint8BufferAttribute() instead.');\n\t\treturn new Uint8BufferAttribute(array, itemSize);\n\t}\n\tfunction Uint8ClampedAttribute(array, itemSize) {\n\t\tconsole.warn('THREE.Uint8ClampedAttribute has been removed. Use new THREE.Uint8ClampedBufferAttribute() instead.');\n\t\treturn new Uint8ClampedBufferAttribute(array, itemSize);\n\t}\n\tfunction Int16Attribute(array, itemSize) {\n\t\tconsole.warn('THREE.Int16Attribute has been removed. Use new THREE.Int16BufferAttribute() instead.');\n\t\treturn new Int16BufferAttribute(array, itemSize);\n\t}\n\tfunction Uint16Attribute(array, itemSize) {\n\t\tconsole.warn('THREE.Uint16Attribute has been removed. Use new THREE.Uint16BufferAttribute() instead.');\n\t\treturn new Uint16BufferAttribute(array, itemSize);\n\t}\n\tfunction Int32Attribute(array, itemSize) {\n\t\tconsole.warn('THREE.Int32Attribute has been removed. Use new THREE.Int32BufferAttribute() instead.');\n\t\treturn new Int32BufferAttribute(array, itemSize);\n\t}\n\tfunction Uint32Attribute(array, itemSize) {\n\t\tconsole.warn('THREE.Uint32Attribute has been removed. Use new THREE.Uint32BufferAttribute() instead.');\n\t\treturn new Uint32BufferAttribute(array, itemSize);\n\t}\n\tfunction Float32Attribute(array, itemSize) {\n\t\tconsole.warn('THREE.Float32Attribute has been removed. Use new THREE.Float32BufferAttribute() instead.');\n\t\treturn new Float32BufferAttribute(array, itemSize);\n\t}\n\tfunction Float64Attribute(array, itemSize) {\n\t\tconsole.warn('THREE.Float64Attribute has been removed. Use new THREE.Float64BufferAttribute() instead.');\n\t\treturn new Float64BufferAttribute(array, itemSize);\n\t} //\n\n\tCurve.create = function (construct, getPoint) {\n\t\tconsole.log('THREE.Curve.create() has been deprecated');\n\t\tconstruct.prototype = Object.create(Curve.prototype);\n\t\tconstruct.prototype.constructor = construct;\n\t\tconstruct.prototype.getPoint = getPoint;\n\t\treturn construct;\n\t}; //\n\n\n\tPath.prototype.fromPoints = function (points) {\n\t\tconsole.warn('THREE.Path: .fromPoints() has been renamed to .setFromPoints().');\n\t\treturn this.setFromPoints(points);\n\t}; //\n\n\n\tfunction AxisHelper(size) {\n\t\tconsole.warn('THREE.AxisHelper has been renamed to THREE.AxesHelper.');\n\t\treturn new AxesHelper(size);\n\t}\n\tfunction BoundingBoxHelper(object, color) {\n\t\tconsole.warn('THREE.BoundingBoxHelper has been deprecated. Creating a THREE.BoxHelper instead.');\n\t\treturn new BoxHelper(object, color);\n\t}\n\tfunction EdgesHelper(object, hex) {\n\t\tconsole.warn('THREE.EdgesHelper has been removed. Use THREE.EdgesGeometry instead.');\n\t\treturn new LineSegments(new EdgesGeometry(object.geometry), new LineBasicMaterial({\n\t\t\tcolor: hex !== undefined ? hex : 0xffffff\n\t\t}));\n\t}\n\n\tGridHelper.prototype.setColors = function () {\n\t\tconsole.error('THREE.GridHelper: setColors() has been deprecated, pass them in the constructor instead.');\n\t};\n\n\tSkeletonHelper.prototype.update = function () {\n\t\tconsole.error('THREE.SkeletonHelper: update() no longer needs to be called.');\n\t};\n\n\tfunction WireframeHelper(object, hex) {\n\t\tconsole.warn('THREE.WireframeHelper has been removed. Use THREE.WireframeGeometry instead.');\n\t\treturn new LineSegments(new WireframeGeometry(object.geometry), new LineBasicMaterial({\n\t\t\tcolor: hex !== undefined ? hex : 0xffffff\n\t\t}));\n\t} //\n\n\tLoader.prototype.extractUrlBase = function (url) {\n\t\tconsole.warn('THREE.Loader: .extractUrlBase() has been deprecated. Use THREE.LoaderUtils.extractUrlBase() instead.');\n\t\treturn LoaderUtils.extractUrlBase(url);\n\t};\n\n\tLoader.Handlers = {\n\t\tadd: function () {\n\t\t\tconsole.error('THREE.Loader: Handlers.add() has been removed. Use LoadingManager.addHandler() instead.');\n\t\t},\n\t\tget: function () {\n\t\t\tconsole.error('THREE.Loader: Handlers.get() has been removed. Use LoadingManager.getHandler() instead.');\n\t\t}\n\t};\n\tfunction XHRLoader(manager) {\n\t\tconsole.warn('THREE.XHRLoader has been renamed to THREE.FileLoader.');\n\t\treturn new FileLoader(manager);\n\t}\n\tfunction BinaryTextureLoader(manager) {\n\t\tconsole.warn('THREE.BinaryTextureLoader has been renamed to THREE.DataTextureLoader.');\n\t\treturn new DataTextureLoader(manager);\n\t} //\n\n\tBox2.prototype.center = function (optionalTarget) {\n\t\tconsole.warn('THREE.Box2: .center() has been renamed to .getCenter().');\n\t\treturn this.getCenter(optionalTarget);\n\t};\n\n\tBox2.prototype.empty = function () {\n\t\tconsole.warn('THREE.Box2: .empty() has been renamed to .isEmpty().');\n\t\treturn this.isEmpty();\n\t};\n\n\tBox2.prototype.isIntersectionBox = function (box) {\n\t\tconsole.warn('THREE.Box2: .isIntersectionBox() has been renamed to .intersectsBox().');\n\t\treturn this.intersectsBox(box);\n\t};\n\n\tBox2.prototype.size = function (optionalTarget) {\n\t\tconsole.warn('THREE.Box2: .size() has been renamed to .getSize().');\n\t\treturn this.getSize(optionalTarget);\n\t}; //\n\n\n\tBox3.prototype.center = function (optionalTarget) {\n\t\tconsole.warn('THREE.Box3: .center() has been renamed to .getCenter().');\n\t\treturn this.getCenter(optionalTarget);\n\t};\n\n\tBox3.prototype.empty = function () {\n\t\tconsole.warn('THREE.Box3: .empty() has been renamed to .isEmpty().');\n\t\treturn this.isEmpty();\n\t};\n\n\tBox3.prototype.isIntersectionBox = function (box) {\n\t\tconsole.warn('THREE.Box3: .isIntersectionBox() has been renamed to .intersectsBox().');\n\t\treturn this.intersectsBox(box);\n\t};\n\n\tBox3.prototype.isIntersectionSphere = function (sphere) {\n\t\tconsole.warn('THREE.Box3: .isIntersectionSphere() has been renamed to .intersectsSphere().');\n\t\treturn this.intersectsSphere(sphere);\n\t};\n\n\tBox3.prototype.size = function (optionalTarget) {\n\t\tconsole.warn('THREE.Box3: .size() has been renamed to .getSize().');\n\t\treturn this.getSize(optionalTarget);\n\t}; //\n\n\n\tSphere.prototype.empty = function () {\n\t\tconsole.warn('THREE.Sphere: .empty() has been renamed to .isEmpty().');\n\t\treturn this.isEmpty();\n\t}; //\n\n\n\tFrustum.prototype.setFromMatrix = function (m) {\n\t\tconsole.warn('THREE.Frustum: .setFromMatrix() has been renamed to .setFromProjectionMatrix().');\n\t\treturn this.setFromProjectionMatrix(m);\n\t}; //\n\n\n\tLine3.prototype.center = function (optionalTarget) {\n\t\tconsole.warn('THREE.Line3: .center() has been renamed to .getCenter().');\n\t\treturn this.getCenter(optionalTarget);\n\t}; //\n\n\n\tMatrix3.prototype.flattenToArrayOffset = function (array, offset) {\n\t\tconsole.warn('THREE.Matrix3: .flattenToArrayOffset() has been deprecated. Use .toArray() instead.');\n\t\treturn this.toArray(array, offset);\n\t};\n\n\tMatrix3.prototype.multiplyVector3 = function (vector) {\n\t\tconsole.warn('THREE.Matrix3: .multiplyVector3() has been removed. Use vector.applyMatrix3( matrix ) instead.');\n\t\treturn vector.applyMatrix3(this);\n\t};\n\n\tMatrix3.prototype.multiplyVector3Array = function () {\n\t\tconsole.error('THREE.Matrix3: .multiplyVector3Array() has been removed.');\n\t};\n\n\tMatrix3.prototype.applyToBufferAttribute = function (attribute) {\n\t\tconsole.warn('THREE.Matrix3: .applyToBufferAttribute() has been removed. Use attribute.applyMatrix3( matrix ) instead.');\n\t\treturn attribute.applyMatrix3(this);\n\t};\n\n\tMatrix3.prototype.applyToVector3Array = function () {\n\t\tconsole.error('THREE.Matrix3: .applyToVector3Array() has been removed.');\n\t};\n\n\tMatrix3.prototype.getInverse = function (matrix) {\n\t\tconsole.warn('THREE.Matrix3: .getInverse() has been removed. Use matrixInv.copy( matrix ).invert(); instead.');\n\t\treturn this.copy(matrix).invert();\n\t}; //\n\n\n\tMatrix4.prototype.extractPosition = function (m) {\n\t\tconsole.warn('THREE.Matrix4: .extractPosition() has been renamed to .copyPosition().');\n\t\treturn this.copyPosition(m);\n\t};\n\n\tMatrix4.prototype.flattenToArrayOffset = function (array, offset) {\n\t\tconsole.warn('THREE.Matrix4: .flattenToArrayOffset() has been deprecated. Use .toArray() instead.');\n\t\treturn this.toArray(array, offset);\n\t};\n\n\tMatrix4.prototype.getPosition = function () {\n\t\tconsole.warn('THREE.Matrix4: .getPosition() has been removed. Use Vector3.setFromMatrixPosition( matrix ) instead.');\n\t\treturn new Vector3().setFromMatrixColumn(this, 3);\n\t};\n\n\tMatrix4.prototype.setRotationFromQuaternion = function (q) {\n\t\tconsole.warn('THREE.Matrix4: .setRotationFromQuaternion() has been renamed to .makeRotationFromQuaternion().');\n\t\treturn this.makeRotationFromQuaternion(q);\n\t};\n\n\tMatrix4.prototype.multiplyToArray = function () {\n\t\tconsole.warn('THREE.Matrix4: .multiplyToArray() has been removed.');\n\t};\n\n\tMatrix4.prototype.multiplyVector3 = function (vector) {\n\t\tconsole.warn('THREE.Matrix4: .multiplyVector3() has been removed. Use vector.applyMatrix4( matrix ) instead.');\n\t\treturn vector.applyMatrix4(this);\n\t};\n\n\tMatrix4.prototype.multiplyVector4 = function (vector) {\n\t\tconsole.warn('THREE.Matrix4: .multiplyVector4() has been removed. Use vector.applyMatrix4( matrix ) instead.');\n\t\treturn vector.applyMatrix4(this);\n\t};\n\n\tMatrix4.prototype.multiplyVector3Array = function () {\n\t\tconsole.error('THREE.Matrix4: .multiplyVector3Array() has been removed.');\n\t};\n\n\tMatrix4.prototype.rotateAxis = function (v) {\n\t\tconsole.warn('THREE.Matrix4: .rotateAxis() has been removed. Use Vector3.transformDirection( matrix ) instead.');\n\t\tv.transformDirection(this);\n\t};\n\n\tMatrix4.prototype.crossVector = function (vector) {\n\t\tconsole.warn('THREE.Matrix4: .crossVector() has been removed. Use vector.applyMatrix4( matrix ) instead.');\n\t\treturn vector.applyMatrix4(this);\n\t};\n\n\tMatrix4.prototype.translate = function () {\n\t\tconsole.error('THREE.Matrix4: .translate() has been removed.');\n\t};\n\n\tMatrix4.prototype.rotateX = function () {\n\t\tconsole.error('THREE.Matrix4: .rotateX() has been removed.');\n\t};\n\n\tMatrix4.prototype.rotateY = function () {\n\t\tconsole.error('THREE.Matrix4: .rotateY() has been removed.');\n\t};\n\n\tMatrix4.prototype.rotateZ = function () {\n\t\tconsole.error('THREE.Matrix4: .rotateZ() has been removed.');\n\t};\n\n\tMatrix4.prototype.rotateByAxis = function () {\n\t\tconsole.error('THREE.Matrix4: .rotateByAxis() has been removed.');\n\t};\n\n\tMatrix4.prototype.applyToBufferAttribute = function (attribute) {\n\t\tconsole.warn('THREE.Matrix4: .applyToBufferAttribute() has been removed. Use attribute.applyMatrix4( matrix ) instead.');\n\t\treturn attribute.applyMatrix4(this);\n\t};\n\n\tMatrix4.prototype.applyToVector3Array = function () {\n\t\tconsole.error('THREE.Matrix4: .applyToVector3Array() has been removed.');\n\t};\n\n\tMatrix4.prototype.makeFrustum = function (left, right, bottom, top, near, far) {\n\t\tconsole.warn('THREE.Matrix4: .makeFrustum() has been removed. Use .makePerspective( left, right, top, bottom, near, far ) instead.');\n\t\treturn this.makePerspective(left, right, top, bottom, near, far);\n\t};\n\n\tMatrix4.prototype.getInverse = function (matrix) {\n\t\tconsole.warn('THREE.Matrix4: .getInverse() has been removed. Use matrixInv.copy( matrix ).invert(); instead.');\n\t\treturn this.copy(matrix).invert();\n\t}; //\n\n\n\tPlane.prototype.isIntersectionLine = function (line) {\n\t\tconsole.warn('THREE.Plane: .isIntersectionLine() has been renamed to .intersectsLine().');\n\t\treturn this.intersectsLine(line);\n\t}; //\n\n\n\tQuaternion.prototype.multiplyVector3 = function (vector) {\n\t\tconsole.warn('THREE.Quaternion: .multiplyVector3() has been removed. Use is now vector.applyQuaternion( quaternion ) instead.');\n\t\treturn vector.applyQuaternion(this);\n\t};\n\n\tQuaternion.prototype.inverse = function () {\n\t\tconsole.warn('THREE.Quaternion: .inverse() has been renamed to invert().');\n\t\treturn this.invert();\n\t}; //\n\n\n\tRay.prototype.isIntersectionBox = function (box) {\n\t\tconsole.warn('THREE.Ray: .isIntersectionBox() has been renamed to .intersectsBox().');\n\t\treturn this.intersectsBox(box);\n\t};\n\n\tRay.prototype.isIntersectionPlane = function (plane) {\n\t\tconsole.warn('THREE.Ray: .isIntersectionPlane() has been renamed to .intersectsPlane().');\n\t\treturn this.intersectsPlane(plane);\n\t};\n\n\tRay.prototype.isIntersectionSphere = function (sphere) {\n\t\tconsole.warn('THREE.Ray: .isIntersectionSphere() has been renamed to .intersectsSphere().');\n\t\treturn this.intersectsSphere(sphere);\n\t}; //\n\n\n\tTriangle.prototype.area = function () {\n\t\tconsole.warn('THREE.Triangle: .area() has been renamed to .getArea().');\n\t\treturn this.getArea();\n\t};\n\n\tTriangle.prototype.barycoordFromPoint = function (point, target) {\n\t\tconsole.warn('THREE.Triangle: .barycoordFromPoint() has been renamed to .getBarycoord().');\n\t\treturn this.getBarycoord(point, target);\n\t};\n\n\tTriangle.prototype.midpoint = function (target) {\n\t\tconsole.warn('THREE.Triangle: .midpoint() has been renamed to .getMidpoint().');\n\t\treturn this.getMidpoint(target);\n\t};\n\n\tTriangle.prototypenormal = function (target) {\n\t\tconsole.warn('THREE.Triangle: .normal() has been renamed to .getNormal().');\n\t\treturn this.getNormal(target);\n\t};\n\n\tTriangle.prototype.plane = function (target) {\n\t\tconsole.warn('THREE.Triangle: .plane() has been renamed to .getPlane().');\n\t\treturn this.getPlane(target);\n\t};\n\n\tTriangle.barycoordFromPoint = function (point, a, b, c, target) {\n\t\tconsole.warn('THREE.Triangle: .barycoordFromPoint() has been renamed to .getBarycoord().');\n\t\treturn Triangle.getBarycoord(point, a, b, c, target);\n\t};\n\n\tTriangle.normal = function (a, b, c, target) {\n\t\tconsole.warn('THREE.Triangle: .normal() has been renamed to .getNormal().');\n\t\treturn Triangle.getNormal(a, b, c, target);\n\t}; //\n\n\n\tShape.prototype.extractAllPoints = function (divisions) {\n\t\tconsole.warn('THREE.Shape: .extractAllPoints() has been removed. Use .extractPoints() instead.');\n\t\treturn this.extractPoints(divisions);\n\t};\n\n\tShape.prototype.extrude = function (options) {\n\t\tconsole.warn('THREE.Shape: .extrude() has been removed. Use ExtrudeGeometry() instead.');\n\t\treturn new ExtrudeGeometry(this, options);\n\t};\n\n\tShape.prototype.makeGeometry = function (options) {\n\t\tconsole.warn('THREE.Shape: .makeGeometry() has been removed. Use ShapeGeometry() instead.');\n\t\treturn new ShapeGeometry(this, options);\n\t}; //\n\n\n\tVector2.prototype.fromAttribute = function (attribute, index, offset) {\n\t\tconsole.warn('THREE.Vector2: .fromAttribute() has been renamed to .fromBufferAttribute().');\n\t\treturn this.fromBufferAttribute(attribute, index, offset);\n\t};\n\n\tVector2.prototype.distanceToManhattan = function (v) {\n\t\tconsole.warn('THREE.Vector2: .distanceToManhattan() has been renamed to .manhattanDistanceTo().');\n\t\treturn this.manhattanDistanceTo(v);\n\t};\n\n\tVector2.prototype.lengthManhattan = function () {\n\t\tconsole.warn('THREE.Vector2: .lengthManhattan() has been renamed to .manhattanLength().');\n\t\treturn this.manhattanLength();\n\t}; //\n\n\n\tVector3.prototype.setEulerFromRotationMatrix = function () {\n\t\tconsole.error('THREE.Vector3: .setEulerFromRotationMatrix() has been removed. Use Euler.setFromRotationMatrix() instead.');\n\t};\n\n\tVector3.prototype.setEulerFromQuaternion = function () {\n\t\tconsole.error('THREE.Vector3: .setEulerFromQuaternion() has been removed. Use Euler.setFromQuaternion() instead.');\n\t};\n\n\tVector3.prototype.getPositionFromMatrix = function (m) {\n\t\tconsole.warn('THREE.Vector3: .getPositionFromMatrix() has been renamed to .setFromMatrixPosition().');\n\t\treturn this.setFromMatrixPosition(m);\n\t};\n\n\tVector3.prototype.getScaleFromMatrix = function (m) {\n\t\tconsole.warn('THREE.Vector3: .getScaleFromMatrix() has been renamed to .setFromMatrixScale().');\n\t\treturn this.setFromMatrixScale(m);\n\t};\n\n\tVector3.prototype.getColumnFromMatrix = function (index, matrix) {\n\t\tconsole.warn('THREE.Vector3: .getColumnFromMatrix() has been renamed to .setFromMatrixColumn().');\n\t\treturn this.setFromMatrixColumn(matrix, index);\n\t};\n\n\tVector3.prototype.applyProjection = function (m) {\n\t\tconsole.warn('THREE.Vector3: .applyProjection() has been removed. Use .applyMatrix4( m ) instead.');\n\t\treturn this.applyMatrix4(m);\n\t};\n\n\tVector3.prototype.fromAttribute = function (attribute, index, offset) {\n\t\tconsole.warn('THREE.Vector3: .fromAttribute() has been renamed to .fromBufferAttribute().');\n\t\treturn this.fromBufferAttribute(attribute, index, offset);\n\t};\n\n\tVector3.prototype.distanceToManhattan = function (v) {\n\t\tconsole.warn('THREE.Vector3: .distanceToManhattan() has been renamed to .manhattanDistanceTo().');\n\t\treturn this.manhattanDistanceTo(v);\n\t};\n\n\tVector3.prototype.lengthManhattan = function () {\n\t\tconsole.warn('THREE.Vector3: .lengthManhattan() has been renamed to .manhattanLength().');\n\t\treturn this.manhattanLength();\n\t}; //\n\n\n\tVector4.prototype.fromAttribute = function (attribute, index, offset) {\n\t\tconsole.warn('THREE.Vector4: .fromAttribute() has been renamed to .fromBufferAttribute().');\n\t\treturn this.fromBufferAttribute(attribute, index, offset);\n\t};\n\n\tVector4.prototype.lengthManhattan = function () {\n\t\tconsole.warn('THREE.Vector4: .lengthManhattan() has been renamed to .manhattanLength().');\n\t\treturn this.manhattanLength();\n\t}; //\n\n\n\tObject3D.prototype.getChildByName = function (name) {\n\t\tconsole.warn('THREE.Object3D: .getChildByName() has been renamed to .getObjectByName().');\n\t\treturn this.getObjectByName(name);\n\t};\n\n\tObject3D.prototype.renderDepth = function () {\n\t\tconsole.warn('THREE.Object3D: .renderDepth has been removed. Use .renderOrder, instead.');\n\t};\n\n\tObject3D.prototype.translate = function (distance, axis) {\n\t\tconsole.warn('THREE.Object3D: .translate() has been removed. Use .translateOnAxis( axis, distance ) instead.');\n\t\treturn this.translateOnAxis(axis, distance);\n\t};\n\n\tObject3D.prototype.getWorldRotation = function () {\n\t\tconsole.error('THREE.Object3D: .getWorldRotation() has been removed. Use THREE.Object3D.getWorldQuaternion( target ) instead.');\n\t};\n\n\tObject3D.prototype.applyMatrix = function (matrix) {\n\t\tconsole.warn('THREE.Object3D: .applyMatrix() has been renamed to .applyMatrix4().');\n\t\treturn this.applyMatrix4(matrix);\n\t};\n\n\tObject.defineProperties(Object3D.prototype, {\n\t\teulerOrder: {\n\t\t\tget: function () {\n\t\t\t\tconsole.warn('THREE.Object3D: .eulerOrder is now .rotation.order.');\n\t\t\t\treturn this.rotation.order;\n\t\t\t},\n\t\t\tset: function (value) {\n\t\t\t\tconsole.warn('THREE.Object3D: .eulerOrder is now .rotation.order.');\n\t\t\t\tthis.rotation.order = value;\n\t\t\t}\n\t\t},\n\t\tuseQuaternion: {\n\t\t\tget: function () {\n\t\t\t\tconsole.warn('THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.');\n\t\t\t},\n\t\t\tset: function () {\n\t\t\t\tconsole.warn('THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.');\n\t\t\t}\n\t\t}\n\t});\n\n\tMesh.prototype.setDrawMode = function () {\n\t\tconsole.error('THREE.Mesh: .setDrawMode() has been removed. The renderer now always assumes THREE.TrianglesDrawMode. Transform your geometry via BufferGeometryUtils.toTrianglesDrawMode() if necessary.');\n\t};\n\n\tObject.defineProperties(Mesh.prototype, {\n\t\tdrawMode: {\n\t\t\tget: function () {\n\t\t\t\tconsole.error('THREE.Mesh: .drawMode has been removed. The renderer now always assumes THREE.TrianglesDrawMode.');\n\t\t\t\treturn TrianglesDrawMode;\n\t\t\t},\n\t\t\tset: function () {\n\t\t\t\tconsole.error('THREE.Mesh: .drawMode has been removed. The renderer now always assumes THREE.TrianglesDrawMode. Transform your geometry via BufferGeometryUtils.toTrianglesDrawMode() if necessary.');\n\t\t\t}\n\t\t}\n\t});\n\n\tSkinnedMesh.prototype.initBones = function () {\n\t\tconsole.error('THREE.SkinnedMesh: initBones() has been removed.');\n\t}; //\n\n\n\tPerspectiveCamera.prototype.setLens = function (focalLength, filmGauge) {\n\t\tconsole.warn('THREE.PerspectiveCamera.setLens is deprecated. ' + 'Use .setFocalLength and .filmGauge for a photographic setup.');\n\t\tif (filmGauge !== undefined) this.filmGauge = filmGauge;\n\t\tthis.setFocalLength(focalLength);\n\t}; //\n\n\n\tObject.defineProperties(Light.prototype, {\n\t\tonlyShadow: {\n\t\t\tset: function () {\n\t\t\t\tconsole.warn('THREE.Light: .onlyShadow has been removed.');\n\t\t\t}\n\t\t},\n\t\tshadowCameraFov: {\n\t\t\tset: function (value) {\n\t\t\t\tconsole.warn('THREE.Light: .shadowCameraFov is now .shadow.camera.fov.');\n\t\t\t\tthis.shadow.camera.fov = value;\n\t\t\t}\n\t\t},\n\t\tshadowCameraLeft: {\n\t\t\tset: function (value) {\n\t\t\t\tconsole.warn('THREE.Light: .shadowCameraLeft is now .shadow.camera.left.');\n\t\t\t\tthis.shadow.camera.left = value;\n\t\t\t}\n\t\t},\n\t\tshadowCameraRight: {\n\t\t\tset: function (value) {\n\t\t\t\tconsole.warn('THREE.Light: .shadowCameraRight is now .shadow.camera.right.');\n\t\t\t\tthis.shadow.camera.right = value;\n\t\t\t}\n\t\t},\n\t\tshadowCameraTop: {\n\t\t\tset: function (value) {\n\t\t\t\tconsole.warn('THREE.Light: .shadowCameraTop is now .shadow.camera.top.');\n\t\t\t\tthis.shadow.camera.top = value;\n\t\t\t}\n\t\t},\n\t\tshadowCameraBottom: {\n\t\t\tset: function (value) {\n\t\t\t\tconsole.warn('THREE.Light: .shadowCameraBottom is now .shadow.camera.bottom.');\n\t\t\t\tthis.shadow.camera.bottom = value;\n\t\t\t}\n\t\t},\n\t\tshadowCameraNear: {\n\t\t\tset: function (value) {\n\t\t\t\tconsole.warn('THREE.Light: .shadowCameraNear is now .shadow.camera.near.');\n\t\t\t\tthis.shadow.camera.near = value;\n\t\t\t}\n\t\t},\n\t\tshadowCameraFar: {\n\t\t\tset: function (value) {\n\t\t\t\tconsole.warn('THREE.Light: .shadowCameraFar is now .shadow.camera.far.');\n\t\t\t\tthis.shadow.camera.far = value;\n\t\t\t}\n\t\t},\n\t\tshadowCameraVisible: {\n\t\t\tset: function () {\n\t\t\t\tconsole.warn('THREE.Light: .shadowCameraVisible has been removed. Use new THREE.CameraHelper( light.shadow.camera ) instead.');\n\t\t\t}\n\t\t},\n\t\tshadowBias: {\n\t\t\tset: function (value) {\n\t\t\t\tconsole.warn('THREE.Light: .shadowBias is now .shadow.bias.');\n\t\t\t\tthis.shadow.bias = value;\n\t\t\t}\n\t\t},\n\t\tshadowDarkness: {\n\t\t\tset: function () {\n\t\t\t\tconsole.warn('THREE.Light: .shadowDarkness has been removed.');\n\t\t\t}\n\t\t},\n\t\tshadowMapWidth: {\n\t\t\tset: function (value) {\n\t\t\t\tconsole.warn('THREE.Light: .shadowMapWidth is now .shadow.mapSize.width.');\n\t\t\t\tthis.shadow.mapSize.width = value;\n\t\t\t}\n\t\t},\n\t\tshadowMapHeight: {\n\t\t\tset: function (value) {\n\t\t\t\tconsole.warn('THREE.Light: .shadowMapHeight is now .shadow.mapSize.height.');\n\t\t\t\tthis.shadow.mapSize.height = value;\n\t\t\t}\n\t\t}\n\t}); //\n\n\tObject.defineProperties(BufferAttribute.prototype, {\n\t\tlength: {\n\t\t\tget: function () {\n\t\t\t\tconsole.warn('THREE.BufferAttribute: .length has been deprecated. Use .count instead.');\n\t\t\t\treturn this.array.length;\n\t\t\t}\n\t\t},\n\t\tdynamic: {\n\t\t\tget: function () {\n\t\t\t\tconsole.warn('THREE.BufferAttribute: .dynamic has been deprecated. Use .usage instead.');\n\t\t\t\treturn this.usage === DynamicDrawUsage;\n\t\t\t},\n\t\t\tset: function () {\n\t\t\t\tconsole.warn('THREE.BufferAttribute: .dynamic has been deprecated. Use .usage instead.');\n\t\t\t\tthis.setUsage(DynamicDrawUsage);\n\t\t\t}\n\t\t}\n\t});\n\n\tBufferAttribute.prototype.setDynamic = function (value) {\n\t\tconsole.warn('THREE.BufferAttribute: .setDynamic() has been deprecated. Use .setUsage() instead.');\n\t\tthis.setUsage(value === true ? DynamicDrawUsage : StaticDrawUsage);\n\t\treturn this;\n\t};\n\n\tBufferAttribute.prototype.copyIndicesArray = function () {\n\t\tconsole.error('THREE.BufferAttribute: .copyIndicesArray() has been removed.');\n\t}, BufferAttribute.prototype.setArray = function () {\n\t\tconsole.error('THREE.BufferAttribute: .setArray has been removed. Use BufferGeometry .setAttribute to replace/resize attribute buffers');\n\t}; //\n\n\tBufferGeometry.prototype.addIndex = function (index) {\n\t\tconsole.warn('THREE.BufferGeometry: .addIndex() has been renamed to .setIndex().');\n\t\tthis.setIndex(index);\n\t};\n\n\tBufferGeometry.prototype.addAttribute = function (name, attribute) {\n\t\tconsole.warn('THREE.BufferGeometry: .addAttribute() has been renamed to .setAttribute().');\n\n\t\tif (!(attribute && attribute.isBufferAttribute) && !(attribute && attribute.isInterleavedBufferAttribute)) {\n\t\t\tconsole.warn('THREE.BufferGeometry: .addAttribute() now expects ( name, attribute ).');\n\t\t\treturn this.setAttribute(name, new BufferAttribute(arguments[1], arguments[2]));\n\t\t}\n\n\t\tif (name === 'index') {\n\t\t\tconsole.warn('THREE.BufferGeometry.addAttribute: Use .setIndex() for index attribute.');\n\t\t\tthis.setIndex(attribute);\n\t\t\treturn this;\n\t\t}\n\n\t\treturn this.setAttribute(name, attribute);\n\t};\n\n\tBufferGeometry.prototype.addDrawCall = function (start, count, indexOffset) {\n\t\tif (indexOffset !== undefined) {\n\t\t\tconsole.warn('THREE.BufferGeometry: .addDrawCall() no longer supports indexOffset.');\n\t\t}\n\n\t\tconsole.warn('THREE.BufferGeometry: .addDrawCall() is now .addGroup().');\n\t\tthis.addGroup(start, count);\n\t};\n\n\tBufferGeometry.prototype.clearDrawCalls = function () {\n\t\tconsole.warn('THREE.BufferGeometry: .clearDrawCalls() is now .clearGroups().');\n\t\tthis.clearGroups();\n\t};\n\n\tBufferGeometry.prototype.computeOffsets = function () {\n\t\tconsole.warn('THREE.BufferGeometry: .computeOffsets() has been removed.');\n\t};\n\n\tBufferGeometry.prototype.removeAttribute = function (name) {\n\t\tconsole.warn('THREE.BufferGeometry: .removeAttribute() has been renamed to .deleteAttribute().');\n\t\treturn this.deleteAttribute(name);\n\t};\n\n\tBufferGeometry.prototype.applyMatrix = function (matrix) {\n\t\tconsole.warn('THREE.BufferGeometry: .applyMatrix() has been renamed to .applyMatrix4().');\n\t\treturn this.applyMatrix4(matrix);\n\t};\n\n\tObject.defineProperties(BufferGeometry.prototype, {\n\t\tdrawcalls: {\n\t\t\tget: function () {\n\t\t\t\tconsole.error('THREE.BufferGeometry: .drawcalls has been renamed to .groups.');\n\t\t\t\treturn this.groups;\n\t\t\t}\n\t\t},\n\t\toffsets: {\n\t\t\tget: function () {\n\t\t\t\tconsole.warn('THREE.BufferGeometry: .offsets has been renamed to .groups.');\n\t\t\t\treturn this.groups;\n\t\t\t}\n\t\t}\n\t});\n\n\tInterleavedBuffer.prototype.setDynamic = function (value) {\n\t\tconsole.warn('THREE.InterleavedBuffer: .setDynamic() has been deprecated. Use .setUsage() instead.');\n\t\tthis.setUsage(value === true ? DynamicDrawUsage : StaticDrawUsage);\n\t\treturn this;\n\t};\n\n\tInterleavedBuffer.prototype.setArray = function () {\n\t\tconsole.error('THREE.InterleavedBuffer: .setArray has been removed. Use BufferGeometry .setAttribute to replace/resize attribute buffers');\n\t}; //\n\n\n\tExtrudeGeometry.prototype.getArrays = function () {\n\t\tconsole.error('THREE.ExtrudeGeometry: .getArrays() has been removed.');\n\t};\n\n\tExtrudeGeometry.prototype.addShapeList = function () {\n\t\tconsole.error('THREE.ExtrudeGeometry: .addShapeList() has been removed.');\n\t};\n\n\tExtrudeGeometry.prototype.addShape = function () {\n\t\tconsole.error('THREE.ExtrudeGeometry: .addShape() has been removed.');\n\t}; //\n\n\n\tScene.prototype.dispose = function () {\n\t\tconsole.error('THREE.Scene: .dispose() has been removed.');\n\t}; //\n\n\n\tUniform.prototype.onUpdate = function () {\n\t\tconsole.warn('THREE.Uniform: .onUpdate() has been removed. Use object.onBeforeRender() instead.');\n\t\treturn this;\n\t}; //\n\n\n\tObject.defineProperties(Material.prototype, {\n\t\twrapAround: {\n\t\t\tget: function () {\n\t\t\t\tconsole.warn('THREE.Material: .wrapAround has been removed.');\n\t\t\t},\n\t\t\tset: function () {\n\t\t\t\tconsole.warn('THREE.Material: .wrapAround has been removed.');\n\t\t\t}\n\t\t},\n\t\toverdraw: {\n\t\t\tget: function () {\n\t\t\t\tconsole.warn('THREE.Material: .overdraw has been removed.');\n\t\t\t},\n\t\t\tset: function () {\n\t\t\t\tconsole.warn('THREE.Material: .overdraw has been removed.');\n\t\t\t}\n\t\t},\n\t\twrapRGB: {\n\t\t\tget: function () {\n\t\t\t\tconsole.warn('THREE.Material: .wrapRGB has been removed.');\n\t\t\t\treturn new Color();\n\t\t\t}\n\t\t},\n\t\tshading: {\n\t\t\tget: function () {\n\t\t\t\tconsole.error('THREE.' + this.type + ': .shading has been removed. Use the boolean .flatShading instead.');\n\t\t\t},\n\t\t\tset: function (value) {\n\t\t\t\tconsole.warn('THREE.' + this.type + ': .shading has been removed. Use the boolean .flatShading instead.');\n\t\t\t\tthis.flatShading = value === FlatShading;\n\t\t\t}\n\t\t},\n\t\tstencilMask: {\n\t\t\tget: function () {\n\t\t\t\tconsole.warn('THREE.' + this.type + ': .stencilMask has been removed. Use .stencilFuncMask instead.');\n\t\t\t\treturn this.stencilFuncMask;\n\t\t\t},\n\t\t\tset: function (value) {\n\t\t\t\tconsole.warn('THREE.' + this.type + ': .stencilMask has been removed. Use .stencilFuncMask instead.');\n\t\t\t\tthis.stencilFuncMask = value;\n\t\t\t}\n\t\t},\n\t\tvertexTangents: {\n\t\t\tget: function () {\n\t\t\t\tconsole.warn('THREE.' + this.type + ': .vertexTangents has been removed.');\n\t\t\t},\n\t\t\tset: function () {\n\t\t\t\tconsole.warn('THREE.' + this.type + ': .vertexTangents has been removed.');\n\t\t\t}\n\t\t}\n\t});\n\tObject.defineProperties(ShaderMaterial.prototype, {\n\t\tderivatives: {\n\t\t\tget: function () {\n\t\t\t\tconsole.warn('THREE.ShaderMaterial: .derivatives has been moved to .extensions.derivatives.');\n\t\t\t\treturn this.extensions.derivatives;\n\t\t\t},\n\t\t\tset: function (value) {\n\t\t\t\tconsole.warn('THREE. ShaderMaterial: .derivatives has been moved to .extensions.derivatives.');\n\t\t\t\tthis.extensions.derivatives = value;\n\t\t\t}\n\t\t}\n\t}); //\n\n\tWebGLRenderer.prototype.clearTarget = function (renderTarget, color, depth, stencil) {\n\t\tconsole.warn('THREE.WebGLRenderer: .clearTarget() has been deprecated. Use .setRenderTarget() and .clear() instead.');\n\t\tthis.setRenderTarget(renderTarget);\n\t\tthis.clear(color, depth, stencil);\n\t};\n\n\tWebGLRenderer.prototype.animate = function (callback) {\n\t\tconsole.warn('THREE.WebGLRenderer: .animate() is now .setAnimationLoop().');\n\t\tthis.setAnimationLoop(callback);\n\t};\n\n\tWebGLRenderer.prototype.getCurrentRenderTarget = function () {\n\t\tconsole.warn('THREE.WebGLRenderer: .getCurrentRenderTarget() is now .getRenderTarget().');\n\t\treturn this.getRenderTarget();\n\t};\n\n\tWebGLRenderer.prototype.getMaxAnisotropy = function () {\n\t\tconsole.warn('THREE.WebGLRenderer: .getMaxAnisotropy() is now .capabilities.getMaxAnisotropy().');\n\t\treturn this.capabilities.getMaxAnisotropy();\n\t};\n\n\tWebGLRenderer.prototype.getPrecision = function () {\n\t\tconsole.warn('THREE.WebGLRenderer: .getPrecision() is now .capabilities.precision.');\n\t\treturn this.capabilities.precision;\n\t};\n\n\tWebGLRenderer.prototype.resetGLState = function () {\n\t\tconsole.warn('THREE.WebGLRenderer: .resetGLState() is now .state.reset().');\n\t\treturn this.state.reset();\n\t};\n\n\tWebGLRenderer.prototype.supportsFloatTextures = function () {\n\t\tconsole.warn('THREE.WebGLRenderer: .supportsFloatTextures() is now .extensions.get( \\'OES_texture_float\\' ).');\n\t\treturn this.extensions.get('OES_texture_float');\n\t};\n\n\tWebGLRenderer.prototype.supportsHalfFloatTextures = function () {\n\t\tconsole.warn('THREE.WebGLRenderer: .supportsHalfFloatTextures() is now .extensions.get( \\'OES_texture_half_float\\' ).');\n\t\treturn this.extensions.get('OES_texture_half_float');\n\t};\n\n\tWebGLRenderer.prototype.supportsStandardDerivatives = function () {\n\t\tconsole.warn('THREE.WebGLRenderer: .supportsStandardDerivatives() is now .extensions.get( \\'OES_standard_derivatives\\' ).');\n\t\treturn this.extensions.get('OES_standard_derivatives');\n\t};\n\n\tWebGLRenderer.prototype.supportsCompressedTextureS3TC = function () {\n\t\tconsole.warn('THREE.WebGLRenderer: .supportsCompressedTextureS3TC() is now .extensions.get( \\'WEBGL_compressed_texture_s3tc\\' ).');\n\t\treturn this.extensions.get('WEBGL_compressed_texture_s3tc');\n\t};\n\n\tWebGLRenderer.prototype.supportsCompressedTexturePVRTC = function () {\n\t\tconsole.warn('THREE.WebGLRenderer: .supportsCompressedTexturePVRTC() is now .extensions.get( \\'WEBGL_compressed_texture_pvrtc\\' ).');\n\t\treturn this.extensions.get('WEBGL_compressed_texture_pvrtc');\n\t};\n\n\tWebGLRenderer.prototype.supportsBlendMinMax = function () {\n\t\tconsole.warn('THREE.WebGLRenderer: .supportsBlendMinMax() is now .extensions.get( \\'EXT_blend_minmax\\' ).');\n\t\treturn this.extensions.get('EXT_blend_minmax');\n\t};\n\n\tWebGLRenderer.prototype.supportsVertexTextures = function () {\n\t\tconsole.warn('THREE.WebGLRenderer: .supportsVertexTextures() is now .capabilities.vertexTextures.');\n\t\treturn this.capabilities.vertexTextures;\n\t};\n\n\tWebGLRenderer.prototype.supportsInstancedArrays = function () {\n\t\tconsole.warn('THREE.WebGLRenderer: .supportsInstancedArrays() is now .extensions.get( \\'ANGLE_instanced_arrays\\' ).');\n\t\treturn this.extensions.get('ANGLE_instanced_arrays');\n\t};\n\n\tWebGLRenderer.prototype.enableScissorTest = function (boolean) {\n\t\tconsole.warn('THREE.WebGLRenderer: .enableScissorTest() is now .setScissorTest().');\n\t\tthis.setScissorTest(boolean);\n\t};\n\n\tWebGLRenderer.prototype.initMaterial = function () {\n\t\tconsole.warn('THREE.WebGLRenderer: .initMaterial() has been removed.');\n\t};\n\n\tWebGLRenderer.prototype.addPrePlugin = function () {\n\t\tconsole.warn('THREE.WebGLRenderer: .addPrePlugin() has been removed.');\n\t};\n\n\tWebGLRenderer.prototype.addPostPlugin = function () {\n\t\tconsole.warn('THREE.WebGLRenderer: .addPostPlugin() has been removed.');\n\t};\n\n\tWebGLRenderer.prototype.updateShadowMap = function () {\n\t\tconsole.warn('THREE.WebGLRenderer: .updateShadowMap() has been removed.');\n\t};\n\n\tWebGLRenderer.prototype.setFaceCulling = function () {\n\t\tconsole.warn('THREE.WebGLRenderer: .setFaceCulling() has been removed.');\n\t};\n\n\tWebGLRenderer.prototype.allocTextureUnit = function () {\n\t\tconsole.warn('THREE.WebGLRenderer: .allocTextureUnit() has been removed.');\n\t};\n\n\tWebGLRenderer.prototype.setTexture = function () {\n\t\tconsole.warn('THREE.WebGLRenderer: .setTexture() has been removed.');\n\t};\n\n\tWebGLRenderer.prototype.setTexture2D = function () {\n\t\tconsole.warn('THREE.WebGLRenderer: .setTexture2D() has been removed.');\n\t};\n\n\tWebGLRenderer.prototype.setTextureCube = function () {\n\t\tconsole.warn('THREE.WebGLRenderer: .setTextureCube() has been removed.');\n\t};\n\n\tWebGLRenderer.prototype.getActiveMipMapLevel = function () {\n\t\tconsole.warn('THREE.WebGLRenderer: .getActiveMipMapLevel() is now .getActiveMipmapLevel().');\n\t\treturn this.getActiveMipmapLevel();\n\t};\n\n\tObject.defineProperties(WebGLRenderer.prototype, {\n\t\tshadowMapEnabled: {\n\t\t\tget: function () {\n\t\t\t\treturn this.shadowMap.enabled;\n\t\t\t},\n\t\t\tset: function (value) {\n\t\t\t\tconsole.warn('THREE.WebGLRenderer: .shadowMapEnabled is now .shadowMap.enabled.');\n\t\t\t\tthis.shadowMap.enabled = value;\n\t\t\t}\n\t\t},\n\t\tshadowMapType: {\n\t\t\tget: function () {\n\t\t\t\treturn this.shadowMap.type;\n\t\t\t},\n\t\t\tset: function (value) {\n\t\t\t\tconsole.warn('THREE.WebGLRenderer: .shadowMapType is now .shadowMap.type.');\n\t\t\t\tthis.shadowMap.type = value;\n\t\t\t}\n\t\t},\n\t\tshadowMapCullFace: {\n\t\t\tget: function () {\n\t\t\t\tconsole.warn('THREE.WebGLRenderer: .shadowMapCullFace has been removed. Set Material.shadowSide instead.');\n\t\t\t\treturn undefined;\n\t\t\t},\n\t\t\tset: function () {\n\t\t\t\tconsole.warn('THREE.WebGLRenderer: .shadowMapCullFace has been removed. Set Material.shadowSide instead.');\n\t\t\t}\n\t\t},\n\t\tcontext: {\n\t\t\tget: function () {\n\t\t\t\tconsole.warn('THREE.WebGLRenderer: .context has been removed. Use .getContext() instead.');\n\t\t\t\treturn this.getContext();\n\t\t\t}\n\t\t},\n\t\tvr: {\n\t\t\tget: function () {\n\t\t\t\tconsole.warn('THREE.WebGLRenderer: .vr has been renamed to .xr');\n\t\t\t\treturn this.xr;\n\t\t\t}\n\t\t},\n\t\tgammaInput: {\n\t\t\tget: function () {\n\t\t\t\tconsole.warn('THREE.WebGLRenderer: .gammaInput has been removed. Set the encoding for textures via Texture.encoding instead.');\n\t\t\t\treturn false;\n\t\t\t},\n\t\t\tset: function () {\n\t\t\t\tconsole.warn('THREE.WebGLRenderer: .gammaInput has been removed. Set the encoding for textures via Texture.encoding instead.');\n\t\t\t}\n\t\t},\n\t\tgammaOutput: {\n\t\t\tget: function () {\n\t\t\t\tconsole.warn('THREE.WebGLRenderer: .gammaOutput has been removed. Set WebGLRenderer.outputEncoding instead.');\n\t\t\t\treturn false;\n\t\t\t},\n\t\t\tset: function (value) {\n\t\t\t\tconsole.warn('THREE.WebGLRenderer: .gammaOutput has been removed. Set WebGLRenderer.outputEncoding instead.');\n\t\t\t\tthis.outputEncoding = value === true ? sRGBEncoding : LinearEncoding;\n\t\t\t}\n\t\t},\n\t\ttoneMappingWhitePoint: {\n\t\t\tget: function () {\n\t\t\t\tconsole.warn('THREE.WebGLRenderer: .toneMappingWhitePoint has been removed.');\n\t\t\t\treturn 1.0;\n\t\t\t},\n\t\t\tset: function () {\n\t\t\t\tconsole.warn('THREE.WebGLRenderer: .toneMappingWhitePoint has been removed.');\n\t\t\t}\n\t\t}\n\t});\n\tObject.defineProperties(WebGLShadowMap.prototype, {\n\t\tcullFace: {\n\t\t\tget: function () {\n\t\t\t\tconsole.warn('THREE.WebGLRenderer: .shadowMap.cullFace has been removed. Set Material.shadowSide instead.');\n\t\t\t\treturn undefined;\n\t\t\t},\n\t\t\tset: function () {\n\t\t\t\tconsole.warn('THREE.WebGLRenderer: .shadowMap.cullFace has been removed. Set Material.shadowSide instead.');\n\t\t\t}\n\t\t},\n\t\trenderReverseSided: {\n\t\t\tget: function () {\n\t\t\t\tconsole.warn('THREE.WebGLRenderer: .shadowMap.renderReverseSided has been removed. Set Material.shadowSide instead.');\n\t\t\t\treturn undefined;\n\t\t\t},\n\t\t\tset: function () {\n\t\t\t\tconsole.warn('THREE.WebGLRenderer: .shadowMap.renderReverseSided has been removed. Set Material.shadowSide instead.');\n\t\t\t}\n\t\t},\n\t\trenderSingleSided: {\n\t\t\tget: function () {\n\t\t\t\tconsole.warn('THREE.WebGLRenderer: .shadowMap.renderSingleSided has been removed. Set Material.shadowSide instead.');\n\t\t\t\treturn undefined;\n\t\t\t},\n\t\t\tset: function () {\n\t\t\t\tconsole.warn('THREE.WebGLRenderer: .shadowMap.renderSingleSided has been removed. Set Material.shadowSide instead.');\n\t\t\t}\n\t\t}\n\t});\n\tfunction WebGLRenderTargetCube(width, height, options) {\n\t\tconsole.warn('THREE.WebGLRenderTargetCube( width, height, options ) is now WebGLCubeRenderTarget( size, options ).');\n\t\treturn new WebGLCubeRenderTarget(width, options);\n\t} //\n\n\tObject.defineProperties(WebGLRenderTarget.prototype, {\n\t\twrapS: {\n\t\t\tget: function () {\n\t\t\t\tconsole.warn('THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS.');\n\t\t\t\treturn this.texture.wrapS;\n\t\t\t},\n\t\t\tset: function (value) {\n\t\t\t\tconsole.warn('THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS.');\n\t\t\t\tthis.texture.wrapS = value;\n\t\t\t}\n\t\t},\n\t\twrapT: {\n\t\t\tget: function () {\n\t\t\t\tconsole.warn('THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT.');\n\t\t\t\treturn this.texture.wrapT;\n\t\t\t},\n\t\t\tset: function (value) {\n\t\t\t\tconsole.warn('THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT.');\n\t\t\t\tthis.texture.wrapT = value;\n\t\t\t}\n\t\t},\n\t\tmagFilter: {\n\t\t\tget: function () {\n\t\t\t\tconsole.warn('THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter.');\n\t\t\t\treturn this.texture.magFilter;\n\t\t\t},\n\t\t\tset: function (value) {\n\t\t\t\tconsole.warn('THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter.');\n\t\t\t\tthis.texture.magFilter = value;\n\t\t\t}\n\t\t},\n\t\tminFilter: {\n\t\t\tget: function () {\n\t\t\t\tconsole.warn('THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter.');\n\t\t\t\treturn this.texture.minFilter;\n\t\t\t},\n\t\t\tset: function (value) {\n\t\t\t\tconsole.warn('THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter.');\n\t\t\t\tthis.texture.minFilter = value;\n\t\t\t}\n\t\t},\n\t\tanisotropy: {\n\t\t\tget: function () {\n\t\t\t\tconsole.warn('THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy.');\n\t\t\t\treturn this.texture.anisotropy;\n\t\t\t},\n\t\t\tset: function (value) {\n\t\t\t\tconsole.warn('THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy.');\n\t\t\t\tthis.texture.anisotropy = value;\n\t\t\t}\n\t\t},\n\t\toffset: {\n\t\t\tget: function () {\n\t\t\t\tconsole.warn('THREE.WebGLRenderTarget: .offset is now .texture.offset.');\n\t\t\t\treturn this.texture.offset;\n\t\t\t},\n\t\t\tset: function (value) {\n\t\t\t\tconsole.warn('THREE.WebGLRenderTarget: .offset is now .texture.offset.');\n\t\t\t\tthis.texture.offset = value;\n\t\t\t}\n\t\t},\n\t\trepeat: {\n\t\t\tget: function () {\n\t\t\t\tconsole.warn('THREE.WebGLRenderTarget: .repeat is now .texture.repeat.');\n\t\t\t\treturn this.texture.repeat;\n\t\t\t},\n\t\t\tset: function (value) {\n\t\t\t\tconsole.warn('THREE.WebGLRenderTarget: .repeat is now .texture.repeat.');\n\t\t\t\tthis.texture.repeat = value;\n\t\t\t}\n\t\t},\n\t\tformat: {\n\t\t\tget: function () {\n\t\t\t\tconsole.warn('THREE.WebGLRenderTarget: .format is now .texture.format.');\n\t\t\t\treturn this.texture.format;\n\t\t\t},\n\t\t\tset: function (value) {\n\t\t\t\tconsole.warn('THREE.WebGLRenderTarget: .format is now .texture.format.');\n\t\t\t\tthis.texture.format = value;\n\t\t\t}\n\t\t},\n\t\ttype: {\n\t\t\tget: function () {\n\t\t\t\tconsole.warn('THREE.WebGLRenderTarget: .type is now .texture.type.');\n\t\t\t\treturn this.texture.type;\n\t\t\t},\n\t\t\tset: function (value) {\n\t\t\t\tconsole.warn('THREE.WebGLRenderTarget: .type is now .texture.type.');\n\t\t\t\tthis.texture.type = value;\n\t\t\t}\n\t\t},\n\t\tgenerateMipmaps: {\n\t\t\tget: function () {\n\t\t\t\tconsole.warn('THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps.');\n\t\t\t\treturn this.texture.generateMipmaps;\n\t\t\t},\n\t\t\tset: function (value) {\n\t\t\t\tconsole.warn('THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps.');\n\t\t\t\tthis.texture.generateMipmaps = value;\n\t\t\t}\n\t\t}\n\t}); //\n\n\tAudio.prototype.load = function (file) {\n\t\tconsole.warn('THREE.Audio: .load has been deprecated. Use THREE.AudioLoader instead.');\n\t\tconst scope = this;\n\t\tconst audioLoader = new AudioLoader();\n\t\taudioLoader.load(file, function (buffer) {\n\t\t\tscope.setBuffer(buffer);\n\t\t});\n\t\treturn this;\n\t};\n\n\tAudioAnalyser.prototype.getData = function () {\n\t\tconsole.warn('THREE.AudioAnalyser: .getData() is now .getFrequencyData().');\n\t\treturn this.getFrequencyData();\n\t}; //\n\n\n\tCubeCamera.prototype.updateCubeMap = function (renderer, scene) {\n\t\tconsole.warn('THREE.CubeCamera: .updateCubeMap() is now .update().');\n\t\treturn this.update(renderer, scene);\n\t};\n\n\tCubeCamera.prototype.clear = function (renderer, color, depth, stencil) {\n\t\tconsole.warn('THREE.CubeCamera: .clear() is now .renderTarget.clear().');\n\t\treturn this.renderTarget.clear(renderer, color, depth, stencil);\n\t};\n\n\tImageUtils.crossOrigin = undefined;\n\n\tImageUtils.loadTexture = function (url, mapping, onLoad, onError) {\n\t\tconsole.warn('THREE.ImageUtils.loadTexture has been deprecated. Use THREE.TextureLoader() instead.');\n\t\tconst loader = new TextureLoader();\n\t\tloader.setCrossOrigin(this.crossOrigin);\n\t\tconst texture = loader.load(url, onLoad, undefined, onError);\n\t\tif (mapping) texture.mapping = mapping;\n\t\treturn texture;\n\t};\n\n\tImageUtils.loadTextureCube = function (urls, mapping, onLoad, onError) {\n\t\tconsole.warn('THREE.ImageUtils.loadTextureCube has been deprecated. Use THREE.CubeTextureLoader() instead.');\n\t\tconst loader = new CubeTextureLoader();\n\t\tloader.setCrossOrigin(this.crossOrigin);\n\t\tconst texture = loader.load(urls, onLoad, undefined, onError);\n\t\tif (mapping) texture.mapping = mapping;\n\t\treturn texture;\n\t};\n\n\tImageUtils.loadCompressedTexture = function () {\n\t\tconsole.error('THREE.ImageUtils.loadCompressedTexture has been removed. Use THREE.DDSLoader instead.');\n\t};\n\n\tImageUtils.loadCompressedTextureCube = function () {\n\t\tconsole.error('THREE.ImageUtils.loadCompressedTextureCube has been removed. Use THREE.DDSLoader instead.');\n\t}; //\n\n\n\tfunction CanvasRenderer() {\n\t\tconsole.error('THREE.CanvasRenderer has been removed');\n\t} //\n\n\tfunction JSONLoader() {\n\t\tconsole.error('THREE.JSONLoader has been removed.');\n\t} //\n\n\tconst SceneUtils = {\n\t\tcreateMultiMaterialObject: function () {\n\t\t\tconsole.error('THREE.SceneUtils has been moved to /examples/jsm/utils/SceneUtils.js');\n\t\t},\n\t\tdetach: function () {\n\t\t\tconsole.error('THREE.SceneUtils has been moved to /examples/jsm/utils/SceneUtils.js');\n\t\t},\n\t\tattach: function () {\n\t\t\tconsole.error('THREE.SceneUtils has been moved to /examples/jsm/utils/SceneUtils.js');\n\t\t}\n\t}; //\n\n\tfunction LensFlare() {\n\t\tconsole.error('THREE.LensFlare has been moved to /examples/jsm/objects/Lensflare.js');\n\t} //\n\n\tfunction ParametricGeometry() {\n\t\tconsole.error('THREE.ParametricGeometry has been moved to /examples/jsm/geometries/ParametricGeometry.js');\n\t\treturn new BufferGeometry();\n\t}\n\tfunction TextGeometry() {\n\t\tconsole.error('THREE.TextGeometry has been moved to /examples/jsm/geometries/TextGeometry.js');\n\t\treturn new BufferGeometry();\n\t}\n\tfunction FontLoader() {\n\t\tconsole.error('THREE.FontLoader has been moved to /examples/jsm/loaders/FontLoader.js');\n\t}\n\tfunction Font() {\n\t\tconsole.error('THREE.Font has been moved to /examples/jsm/loaders/FontLoader.js');\n\t}\n\tfunction ImmediateRenderObject() {\n\t\tconsole.error('THREE.ImmediateRenderObject has been removed.');\n\t}\n\n\tif (typeof __THREE_DEVTOOLS__ !== 'undefined') {\n\t\t/* eslint-disable no-undef */\n\t\t__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent('register', {\n\t\t\tdetail: {\n\t\t\t\trevision: REVISION\n\t\t\t}\n\t\t}));\n\t\t/* eslint-enable no-undef */\n\n\t}\n\n\tif (typeof window !== 'undefined') {\n\t\tif (window.__THREE__) {\n\t\t\tconsole.warn('WARNING: Multiple instances of Three.js being imported.');\n\t\t} else {\n\t\t\twindow.__THREE__ = REVISION;\n\t\t}\n\t}\n\n\texports.ACESFilmicToneMapping = ACESFilmicToneMapping;\n\texports.AddEquation = AddEquation;\n\texports.AddOperation = AddOperation;\n\texports.AdditiveAnimationBlendMode = AdditiveAnimationBlendMode;\n\texports.AdditiveBlending = AdditiveBlending;\n\texports.AlphaFormat = AlphaFormat;\n\texports.AlwaysDepth = AlwaysDepth;\n\texports.AlwaysStencilFunc = AlwaysStencilFunc;\n\texports.AmbientLight = AmbientLight;\n\texports.AmbientLightProbe = AmbientLightProbe;\n\texports.AnimationClip = AnimationClip;\n\texports.AnimationLoader = AnimationLoader;\n\texports.AnimationMixer = AnimationMixer;\n\texports.AnimationObjectGroup = AnimationObjectGroup;\n\texports.AnimationUtils = AnimationUtils;\n\texports.ArcCurve = ArcCurve;\n\texports.ArrayCamera = ArrayCamera;\n\texports.ArrowHelper = ArrowHelper;\n\texports.Audio = Audio;\n\texports.AudioAnalyser = AudioAnalyser;\n\texports.AudioContext = AudioContext;\n\texports.AudioListener = AudioListener;\n\texports.AudioLoader = AudioLoader;\n\texports.AxesHelper = AxesHelper;\n\texports.AxisHelper = AxisHelper;\n\texports.BackSide = BackSide;\n\texports.BasicDepthPacking = BasicDepthPacking;\n\texports.BasicShadowMap = BasicShadowMap;\n\texports.BinaryTextureLoader = BinaryTextureLoader;\n\texports.Bone = Bone;\n\texports.BooleanKeyframeTrack = BooleanKeyframeTrack;\n\texports.BoundingBoxHelper = BoundingBoxHelper;\n\texports.Box2 = Box2;\n\texports.Box3 = Box3;\n\texports.Box3Helper = Box3Helper;\n\texports.BoxBufferGeometry = BoxGeometry;\n\texports.BoxGeometry = BoxGeometry;\n\texports.BoxHelper = BoxHelper;\n\texports.BufferAttribute = BufferAttribute;\n\texports.BufferGeometry = BufferGeometry;\n\texports.BufferGeometryLoader = BufferGeometryLoader;\n\texports.ByteType = ByteType;\n\texports.Cache = Cache;\n\texports.Camera = Camera;\n\texports.CameraHelper = CameraHelper;\n\texports.CanvasRenderer = CanvasRenderer;\n\texports.CanvasTexture = CanvasTexture;\n\texports.CatmullRomCurve3 = CatmullRomCurve3;\n\texports.CineonToneMapping = CineonToneMapping;\n\texports.CircleBufferGeometry = CircleGeometry;\n\texports.CircleGeometry = CircleGeometry;\n\texports.ClampToEdgeWrapping = ClampToEdgeWrapping;\n\texports.Clock = Clock;\n\texports.Color = Color;\n\texports.ColorKeyframeTrack = ColorKeyframeTrack;\n\texports.CompressedTexture = CompressedTexture;\n\texports.CompressedTextureLoader = CompressedTextureLoader;\n\texports.ConeBufferGeometry = ConeGeometry;\n\texports.ConeGeometry = ConeGeometry;\n\texports.CubeCamera = CubeCamera;\n\texports.CubeReflectionMapping = CubeReflectionMapping;\n\texports.CubeRefractionMapping = CubeRefractionMapping;\n\texports.CubeTexture = CubeTexture;\n\texports.CubeTextureLoader = CubeTextureLoader;\n\texports.CubeUVReflectionMapping = CubeUVReflectionMapping;\n\texports.CubeUVRefractionMapping = CubeUVRefractionMapping;\n\texports.CubicBezierCurve = CubicBezierCurve;\n\texports.CubicBezierCurve3 = CubicBezierCurve3;\n\texports.CubicInterpolant = CubicInterpolant;\n\texports.CullFaceBack = CullFaceBack;\n\texports.CullFaceFront = CullFaceFront;\n\texports.CullFaceFrontBack = CullFaceFrontBack;\n\texports.CullFaceNone = CullFaceNone;\n\texports.Curve = Curve;\n\texports.CurvePath = CurvePath;\n\texports.CustomBlending = CustomBlending;\n\texports.CustomToneMapping = CustomToneMapping;\n\texports.CylinderBufferGeometry = CylinderGeometry;\n\texports.CylinderGeometry = CylinderGeometry;\n\texports.Cylindrical = Cylindrical;\n\texports.DataTexture = DataTexture;\n\texports.DataTexture2DArray = DataTexture2DArray;\n\texports.DataTexture3D = DataTexture3D;\n\texports.DataTextureLoader = DataTextureLoader;\n\texports.DataUtils = DataUtils;\n\texports.DecrementStencilOp = DecrementStencilOp;\n\texports.DecrementWrapStencilOp = DecrementWrapStencilOp;\n\texports.DefaultLoadingManager = DefaultLoadingManager;\n\texports.DepthFormat = DepthFormat;\n\texports.DepthStencilFormat = DepthStencilFormat;\n\texports.DepthTexture = DepthTexture;\n\texports.DirectionalLight = DirectionalLight;\n\texports.DirectionalLightHelper = DirectionalLightHelper;\n\texports.DiscreteInterpolant = DiscreteInterpolant;\n\texports.DodecahedronBufferGeometry = DodecahedronGeometry;\n\texports.DodecahedronGeometry = DodecahedronGeometry;\n\texports.DoubleSide = DoubleSide;\n\texports.DstAlphaFactor = DstAlphaFactor;\n\texports.DstColorFactor = DstColorFactor;\n\texports.DynamicBufferAttribute = DynamicBufferAttribute;\n\texports.DynamicCopyUsage = DynamicCopyUsage;\n\texports.DynamicDrawUsage = DynamicDrawUsage;\n\texports.DynamicReadUsage = DynamicReadUsage;\n\texports.EdgesGeometry = EdgesGeometry;\n\texports.EdgesHelper = EdgesHelper;\n\texports.EllipseCurve = EllipseCurve;\n\texports.EqualDepth = EqualDepth;\n\texports.EqualStencilFunc = EqualStencilFunc;\n\texports.EquirectangularReflectionMapping = EquirectangularReflectionMapping;\n\texports.EquirectangularRefractionMapping = EquirectangularRefractionMapping;\n\texports.Euler = Euler;\n\texports.EventDispatcher = EventDispatcher;\n\texports.ExtrudeBufferGeometry = ExtrudeGeometry;\n\texports.ExtrudeGeometry = ExtrudeGeometry;\n\texports.FaceColors = FaceColors;\n\texports.FileLoader = FileLoader;\n\texports.FlatShading = FlatShading;\n\texports.Float16BufferAttribute = Float16BufferAttribute;\n\texports.Float32Attribute = Float32Attribute;\n\texports.Float32BufferAttribute = Float32BufferAttribute;\n\texports.Float64Attribute = Float64Attribute;\n\texports.Float64BufferAttribute = Float64BufferAttribute;\n\texports.FloatType = FloatType;\n\texports.Fog = Fog;\n\texports.FogExp2 = FogExp2;\n\texports.Font = Font;\n\texports.FontLoader = FontLoader;\n\texports.FrontSide = FrontSide;\n\texports.Frustum = Frustum;\n\texports.GLBufferAttribute = GLBufferAttribute;\n\texports.GLSL1 = GLSL1;\n\texports.GLSL3 = GLSL3;\n\texports.GammaEncoding = GammaEncoding;\n\texports.GreaterDepth = GreaterDepth;\n\texports.GreaterEqualDepth = GreaterEqualDepth;\n\texports.GreaterEqualStencilFunc = GreaterEqualStencilFunc;\n\texports.GreaterStencilFunc = GreaterStencilFunc;\n\texports.GridHelper = GridHelper;\n\texports.Group = Group;\n\texports.HalfFloatType = HalfFloatType;\n\texports.HemisphereLight = HemisphereLight;\n\texports.HemisphereLightHelper = HemisphereLightHelper;\n\texports.HemisphereLightProbe = HemisphereLightProbe;\n\texports.IcosahedronBufferGeometry = IcosahedronGeometry;\n\texports.IcosahedronGeometry = IcosahedronGeometry;\n\texports.ImageBitmapLoader = ImageBitmapLoader;\n\texports.ImageLoader = ImageLoader;\n\texports.ImageUtils = ImageUtils;\n\texports.ImmediateRenderObject = ImmediateRenderObject;\n\texports.IncrementStencilOp = IncrementStencilOp;\n\texports.IncrementWrapStencilOp = IncrementWrapStencilOp;\n\texports.InstancedBufferAttribute = InstancedBufferAttribute;\n\texports.InstancedBufferGeometry = InstancedBufferGeometry;\n\texports.InstancedInterleavedBuffer = InstancedInterleavedBuffer;\n\texports.InstancedMesh = InstancedMesh;\n\texports.Int16Attribute = Int16Attribute;\n\texports.Int16BufferAttribute = Int16BufferAttribute;\n\texports.Int32Attribute = Int32Attribute;\n\texports.Int32BufferAttribute = Int32BufferAttribute;\n\texports.Int8Attribute = Int8Attribute;\n\texports.Int8BufferAttribute = Int8BufferAttribute;\n\texports.IntType = IntType;\n\texports.InterleavedBuffer = InterleavedBuffer;\n\texports.InterleavedBufferAttribute = InterleavedBufferAttribute;\n\texports.Interpolant = Interpolant;\n\texports.InterpolateDiscrete = InterpolateDiscrete;\n\texports.InterpolateLinear = InterpolateLinear;\n\texports.InterpolateSmooth = InterpolateSmooth;\n\texports.InvertStencilOp = InvertStencilOp;\n\texports.JSONLoader = JSONLoader;\n\texports.KeepStencilOp = KeepStencilOp;\n\texports.KeyframeTrack = KeyframeTrack;\n\texports.LOD = LOD;\n\texports.LatheBufferGeometry = LatheGeometry;\n\texports.LatheGeometry = LatheGeometry;\n\texports.Layers = Layers;\n\texports.LensFlare = LensFlare;\n\texports.LessDepth = LessDepth;\n\texports.LessEqualDepth = LessEqualDepth;\n\texports.LessEqualStencilFunc = LessEqualStencilFunc;\n\texports.LessStencilFunc = LessStencilFunc;\n\texports.Light = Light;\n\texports.LightProbe = LightProbe;\n\texports.Line = Line;\n\texports.Line3 = Line3;\n\texports.LineBasicMaterial = LineBasicMaterial;\n\texports.LineCurve = LineCurve;\n\texports.LineCurve3 = LineCurve3;\n\texports.LineDashedMaterial = LineDashedMaterial;\n\texports.LineLoop = LineLoop;\n\texports.LinePieces = LinePieces;\n\texports.LineSegments = LineSegments;\n\texports.LineStrip = LineStrip;\n\texports.LinearEncoding = LinearEncoding;\n\texports.LinearFilter = LinearFilter;\n\texports.LinearInterpolant = LinearInterpolant;\n\texports.LinearMipMapLinearFilter = LinearMipMapLinearFilter;\n\texports.LinearMipMapNearestFilter = LinearMipMapNearestFilter;\n\texports.LinearMipmapLinearFilter = LinearMipmapLinearFilter;\n\texports.LinearMipmapNearestFilter = LinearMipmapNearestFilter;\n\texports.LinearToneMapping = LinearToneMapping;\n\texports.Loader = Loader;\n\texports.LoaderUtils = LoaderUtils;\n\texports.LoadingManager = LoadingManager;\n\texports.LogLuvEncoding = LogLuvEncoding;\n\texports.LoopOnce = LoopOnce;\n\texports.LoopPingPong = LoopPingPong;\n\texports.LoopRepeat = LoopRepeat;\n\texports.LuminanceAlphaFormat = LuminanceAlphaFormat;\n\texports.LuminanceFormat = LuminanceFormat;\n\texports.MOUSE = MOUSE;\n\texports.Material = Material;\n\texports.MaterialLoader = MaterialLoader;\n\texports.Math = MathUtils;\n\texports.MathUtils = MathUtils;\n\texports.Matrix3 = Matrix3;\n\texports.Matrix4 = Matrix4;\n\texports.MaxEquation = MaxEquation;\n\texports.Mesh = Mesh;\n\texports.MeshBasicMaterial = MeshBasicMaterial;\n\texports.MeshDepthMaterial = MeshDepthMaterial;\n\texports.MeshDistanceMaterial = MeshDistanceMaterial;\n\texports.MeshFaceMaterial = MeshFaceMaterial;\n\texports.MeshLambertMaterial = MeshLambertMaterial;\n\texports.MeshMatcapMaterial = MeshMatcapMaterial;\n\texports.MeshNormalMaterial = MeshNormalMaterial;\n\texports.MeshPhongMaterial = MeshPhongMaterial;\n\texports.MeshPhysicalMaterial = MeshPhysicalMaterial;\n\texports.MeshStandardMaterial = MeshStandardMaterial;\n\texports.MeshToonMaterial = MeshToonMaterial;\n\texports.MinEquation = MinEquation;\n\texports.MirroredRepeatWrapping = MirroredRepeatWrapping;\n\texports.MixOperation = MixOperation;\n\texports.MultiMaterial = MultiMaterial;\n\texports.MultiplyBlending = MultiplyBlending;\n\texports.MultiplyOperation = MultiplyOperation;\n\texports.NearestFilter = NearestFilter;\n\texports.NearestMipMapLinearFilter = NearestMipMapLinearFilter;\n\texports.NearestMipMapNearestFilter = NearestMipMapNearestFilter;\n\texports.NearestMipmapLinearFilter = NearestMipmapLinearFilter;\n\texports.NearestMipmapNearestFilter = NearestMipmapNearestFilter;\n\texports.NeverDepth = NeverDepth;\n\texports.NeverStencilFunc = NeverStencilFunc;\n\texports.NoBlending = NoBlending;\n\texports.NoColors = NoColors;\n\texports.NoToneMapping = NoToneMapping;\n\texports.NormalAnimationBlendMode = NormalAnimationBlendMode;\n\texports.NormalBlending = NormalBlending;\n\texports.NotEqualDepth = NotEqualDepth;\n\texports.NotEqualStencilFunc = NotEqualStencilFunc;\n\texports.NumberKeyframeTrack = NumberKeyframeTrack;\n\texports.Object3D = Object3D;\n\texports.ObjectLoader = ObjectLoader;\n\texports.ObjectSpaceNormalMap = ObjectSpaceNormalMap;\n\texports.OctahedronBufferGeometry = OctahedronGeometry;\n\texports.OctahedronGeometry = OctahedronGeometry;\n\texports.OneFactor = OneFactor;\n\texports.OneMinusDstAlphaFactor = OneMinusDstAlphaFactor;\n\texports.OneMinusDstColorFactor = OneMinusDstColorFactor;\n\texports.OneMinusSrcAlphaFactor = OneMinusSrcAlphaFactor;\n\texports.OneMinusSrcColorFactor = OneMinusSrcColorFactor;\n\texports.OrthographicCamera = OrthographicCamera;\n\texports.PCFShadowMap = PCFShadowMap;\n\texports.PCFSoftShadowMap = PCFSoftShadowMap;\n\texports.PMREMGenerator = PMREMGenerator;\n\texports.ParametricGeometry = ParametricGeometry;\n\texports.Particle = Particle;\n\texports.ParticleBasicMaterial = ParticleBasicMaterial;\n\texports.ParticleSystem = ParticleSystem;\n\texports.ParticleSystemMaterial = ParticleSystemMaterial;\n\texports.Path = Path;\n\texports.PerspectiveCamera = PerspectiveCamera;\n\texports.Plane = Plane;\n\texports.PlaneBufferGeometry = PlaneGeometry;\n\texports.PlaneGeometry = PlaneGeometry;\n\texports.PlaneHelper = PlaneHelper;\n\texports.PointCloud = PointCloud;\n\texports.PointCloudMaterial = PointCloudMaterial;\n\texports.PointLight = PointLight;\n\texports.PointLightHelper = PointLightHelper;\n\texports.Points = Points;\n\texports.PointsMaterial = PointsMaterial;\n\texports.PolarGridHelper = PolarGridHelper;\n\texports.PolyhedronBufferGeometry = PolyhedronGeometry;\n\texports.PolyhedronGeometry = PolyhedronGeometry;\n\texports.PositionalAudio = PositionalAudio;\n\texports.PropertyBinding = PropertyBinding;\n\texports.PropertyMixer = PropertyMixer;\n\texports.QuadraticBezierCurve = QuadraticBezierCurve;\n\texports.QuadraticBezierCurve3 = QuadraticBezierCurve3;\n\texports.Quaternion = Quaternion;\n\texports.QuaternionKeyframeTrack = QuaternionKeyframeTrack;\n\texports.QuaternionLinearInterpolant = QuaternionLinearInterpolant;\n\texports.REVISION = REVISION;\n\texports.RGBADepthPacking = RGBADepthPacking;\n\texports.RGBAFormat = RGBAFormat;\n\texports.RGBAIntegerFormat = RGBAIntegerFormat;\n\texports.RGBA_ASTC_10x10_Format = RGBA_ASTC_10x10_Format;\n\texports.RGBA_ASTC_10x5_Format = RGBA_ASTC_10x5_Format;\n\texports.RGBA_ASTC_10x6_Format = RGBA_ASTC_10x6_Format;\n\texports.RGBA_ASTC_10x8_Format = RGBA_ASTC_10x8_Format;\n\texports.RGBA_ASTC_12x10_Format = RGBA_ASTC_12x10_Format;\n\texports.RGBA_ASTC_12x12_Format = RGBA_ASTC_12x12_Format;\n\texports.RGBA_ASTC_4x4_Format = RGBA_ASTC_4x4_Format;\n\texports.RGBA_ASTC_5x4_Format = RGBA_ASTC_5x4_Format;\n\texports.RGBA_ASTC_5x5_Format = RGBA_ASTC_5x5_Format;\n\texports.RGBA_ASTC_6x5_Format = RGBA_ASTC_6x5_Format;\n\texports.RGBA_ASTC_6x6_Format = RGBA_ASTC_6x6_Format;\n\texports.RGBA_ASTC_8x5_Format = RGBA_ASTC_8x5_Format;\n\texports.RGBA_ASTC_8x6_Format = RGBA_ASTC_8x6_Format;\n\texports.RGBA_ASTC_8x8_Format = RGBA_ASTC_8x8_Format;\n\texports.RGBA_BPTC_Format = RGBA_BPTC_Format;\n\texports.RGBA_ETC2_EAC_Format = RGBA_ETC2_EAC_Format;\n\texports.RGBA_PVRTC_2BPPV1_Format = RGBA_PVRTC_2BPPV1_Format;\n\texports.RGBA_PVRTC_4BPPV1_Format = RGBA_PVRTC_4BPPV1_Format;\n\texports.RGBA_S3TC_DXT1_Format = RGBA_S3TC_DXT1_Format;\n\texports.RGBA_S3TC_DXT3_Format = RGBA_S3TC_DXT3_Format;\n\texports.RGBA_S3TC_DXT5_Format = RGBA_S3TC_DXT5_Format;\n\texports.RGBDEncoding = RGBDEncoding;\n\texports.RGBEEncoding = RGBEEncoding;\n\texports.RGBEFormat = RGBEFormat;\n\texports.RGBFormat = RGBFormat;\n\texports.RGBIntegerFormat = RGBIntegerFormat;\n\texports.RGBM16Encoding = RGBM16Encoding;\n\texports.RGBM7Encoding = RGBM7Encoding;\n\texports.RGB_ETC1_Format = RGB_ETC1_Format;\n\texports.RGB_ETC2_Format = RGB_ETC2_Format;\n\texports.RGB_PVRTC_2BPPV1_Format = RGB_PVRTC_2BPPV1_Format;\n\texports.RGB_PVRTC_4BPPV1_Format = RGB_PVRTC_4BPPV1_Format;\n\texports.RGB_S3TC_DXT1_Format = RGB_S3TC_DXT1_Format;\n\texports.RGFormat = RGFormat;\n\texports.RGIntegerFormat = RGIntegerFormat;\n\texports.RawShaderMaterial = RawShaderMaterial;\n\texports.Ray = Ray;\n\texports.Raycaster = Raycaster;\n\texports.RectAreaLight = RectAreaLight;\n\texports.RedFormat = RedFormat;\n\texports.RedIntegerFormat = RedIntegerFormat;\n\texports.ReinhardToneMapping = ReinhardToneMapping;\n\texports.RepeatWrapping = RepeatWrapping;\n\texports.ReplaceStencilOp = ReplaceStencilOp;\n\texports.ReverseSubtractEquation = ReverseSubtractEquation;\n\texports.RingBufferGeometry = RingGeometry;\n\texports.RingGeometry = RingGeometry;\n\texports.SRGB8_ALPHA8_ASTC_10x10_Format = SRGB8_ALPHA8_ASTC_10x10_Format;\n\texports.SRGB8_ALPHA8_ASTC_10x5_Format = SRGB8_ALPHA8_ASTC_10x5_Format;\n\texports.SRGB8_ALPHA8_ASTC_10x6_Format = SRGB8_ALPHA8_ASTC_10x6_Format;\n\texports.SRGB8_ALPHA8_ASTC_10x8_Format = SRGB8_ALPHA8_ASTC_10x8_Format;\n\texports.SRGB8_ALPHA8_ASTC_12x10_Format = SRGB8_ALPHA8_ASTC_12x10_Format;\n\texports.SRGB8_ALPHA8_ASTC_12x12_Format = SRGB8_ALPHA8_ASTC_12x12_Format;\n\texports.SRGB8_ALPHA8_ASTC_4x4_Format = SRGB8_ALPHA8_ASTC_4x4_Format;\n\texports.SRGB8_ALPHA8_ASTC_5x4_Format = SRGB8_ALPHA8_ASTC_5x4_Format;\n\texports.SRGB8_ALPHA8_ASTC_5x5_Format = SRGB8_ALPHA8_ASTC_5x5_Format;\n\texports.SRGB8_ALPHA8_ASTC_6x5_Format = SRGB8_ALPHA8_ASTC_6x5_Format;\n\texports.SRGB8_ALPHA8_ASTC_6x6_Format = SRGB8_ALPHA8_ASTC_6x6_Format;\n\texports.SRGB8_ALPHA8_ASTC_8x5_Format = SRGB8_ALPHA8_ASTC_8x5_Format;\n\texports.SRGB8_ALPHA8_ASTC_8x6_Format = SRGB8_ALPHA8_ASTC_8x6_Format;\n\texports.SRGB8_ALPHA8_ASTC_8x8_Format = SRGB8_ALPHA8_ASTC_8x8_Format;\n\texports.Scene = Scene;\n\texports.SceneUtils = SceneUtils;\n\texports.ShaderChunk = ShaderChunk;\n\texports.ShaderLib = ShaderLib;\n\texports.ShaderMaterial = ShaderMaterial;\n\texports.ShadowMaterial = ShadowMaterial;\n\texports.Shape = Shape;\n\texports.ShapeBufferGeometry = ShapeGeometry;\n\texports.ShapeGeometry = ShapeGeometry;\n\texports.ShapePath = ShapePath;\n\texports.ShapeUtils = ShapeUtils;\n\texports.ShortType = ShortType;\n\texports.Skeleton = Skeleton;\n\texports.SkeletonHelper = SkeletonHelper;\n\texports.SkinnedMesh = SkinnedMesh;\n\texports.SmoothShading = SmoothShading;\n\texports.Sphere = Sphere;\n\texports.SphereBufferGeometry = SphereGeometry;\n\texports.SphereGeometry = SphereGeometry;\n\texports.Spherical = Spherical;\n\texports.SphericalHarmonics3 = SphericalHarmonics3;\n\texports.SplineCurve = SplineCurve;\n\texports.SpotLight = SpotLight;\n\texports.SpotLightHelper = SpotLightHelper;\n\texports.Sprite = Sprite;\n\texports.SpriteMaterial = SpriteMaterial;\n\texports.SrcAlphaFactor = SrcAlphaFactor;\n\texports.SrcAlphaSaturateFactor = SrcAlphaSaturateFactor;\n\texports.SrcColorFactor = SrcColorFactor;\n\texports.StaticCopyUsage = StaticCopyUsage;\n\texports.StaticDrawUsage = StaticDrawUsage;\n\texports.StaticReadUsage = StaticReadUsage;\n\texports.StereoCamera = StereoCamera;\n\texports.StreamCopyUsage = StreamCopyUsage;\n\texports.StreamDrawUsage = StreamDrawUsage;\n\texports.StreamReadUsage = StreamReadUsage;\n\texports.StringKeyframeTrack = StringKeyframeTrack;\n\texports.SubtractEquation = SubtractEquation;\n\texports.SubtractiveBlending = SubtractiveBlending;\n\texports.TOUCH = TOUCH;\n\texports.TangentSpaceNormalMap = TangentSpaceNormalMap;\n\texports.TetrahedronBufferGeometry = TetrahedronGeometry;\n\texports.TetrahedronGeometry = TetrahedronGeometry;\n\texports.TextGeometry = TextGeometry;\n\texports.Texture = Texture;\n\texports.TextureLoader = TextureLoader;\n\texports.TorusBufferGeometry = TorusGeometry;\n\texports.TorusGeometry = TorusGeometry;\n\texports.TorusKnotBufferGeometry = TorusKnotGeometry;\n\texports.TorusKnotGeometry = TorusKnotGeometry;\n\texports.Triangle = Triangle;\n\texports.TriangleFanDrawMode = TriangleFanDrawMode;\n\texports.TriangleStripDrawMode = TriangleStripDrawMode;\n\texports.TrianglesDrawMode = TrianglesDrawMode;\n\texports.TubeBufferGeometry = TubeGeometry;\n\texports.TubeGeometry = TubeGeometry;\n\texports.UVMapping = UVMapping;\n\texports.Uint16Attribute = Uint16Attribute;\n\texports.Uint16BufferAttribute = Uint16BufferAttribute;\n\texports.Uint32Attribute = Uint32Attribute;\n\texports.Uint32BufferAttribute = Uint32BufferAttribute;\n\texports.Uint8Attribute = Uint8Attribute;\n\texports.Uint8BufferAttribute = Uint8BufferAttribute;\n\texports.Uint8ClampedAttribute = Uint8ClampedAttribute;\n\texports.Uint8ClampedBufferAttribute = Uint8ClampedBufferAttribute;\n\texports.Uniform = Uniform;\n\texports.UniformsLib = UniformsLib;\n\texports.UniformsUtils = UniformsUtils;\n\texports.UnsignedByteType = UnsignedByteType;\n\texports.UnsignedInt248Type = UnsignedInt248Type;\n\texports.UnsignedIntType = UnsignedIntType;\n\texports.UnsignedShort4444Type = UnsignedShort4444Type;\n\texports.UnsignedShort5551Type = UnsignedShort5551Type;\n\texports.UnsignedShort565Type = UnsignedShort565Type;\n\texports.UnsignedShortType = UnsignedShortType;\n\texports.VSMShadowMap = VSMShadowMap;\n\texports.Vector2 = Vector2;\n\texports.Vector3 = Vector3;\n\texports.Vector4 = Vector4;\n\texports.VectorKeyframeTrack = VectorKeyframeTrack;\n\texports.Vertex = Vertex;\n\texports.VertexColors = VertexColors;\n\texports.VideoTexture = VideoTexture;\n\texports.WebGL1Renderer = WebGL1Renderer;\n\texports.WebGLCubeRenderTarget = WebGLCubeRenderTarget;\n\texports.WebGLMultipleRenderTargets = WebGLMultipleRenderTargets;\n\texports.WebGLMultisampleRenderTarget = WebGLMultisampleRenderTarget;\n\texports.WebGLRenderTarget = WebGLRenderTarget;\n\texports.WebGLRenderTargetCube = WebGLRenderTargetCube;\n\texports.WebGLRenderer = WebGLRenderer;\n\texports.WebGLUtils = WebGLUtils;\n\texports.WireframeGeometry = WireframeGeometry;\n\texports.WireframeHelper = WireframeHelper;\n\texports.WrapAroundEnding = WrapAroundEnding;\n\texports.XHRLoader = XHRLoader;\n\texports.ZeroCurvatureEnding = ZeroCurvatureEnding;\n\texports.ZeroFactor = ZeroFactor;\n\texports.ZeroSlopeEnding = ZeroSlopeEnding;\n\texports.ZeroStencilOp = ZeroStencilOp;\n\texports.sRGBEncoding = sRGBEncoding;\n\n\tObject.defineProperty(exports, '__esModule', { value: true });\n\n}));\n"]},"metadata":{},"sourceType":"script"}