{"ast":null,"code":"var _jsxFileName = \"/Users/arnaudavocatgros/Documents/GitHub/AR_VR_Map_WebSite/src/GLTF.js\";\nimport * as THREE from \"../node_modules/three/build/three.module.js\";\nimport { OrbitControls } from \"../node_modules/three/examples/jsm/controls/OrbitControls.js\";\nimport { GLTF, GLTFLoader } from \"../node_modules/three/examples/jsm/loaders/GLTFLoader.js\";\nimport React, { useEffect, useRef } from \"react\";\n/*export default function GLTFView(props){\n    const ref = useRef();\n    var scene = new THREE.Scene();\n    var camera = new THREE.PerspectiveCamera(75, window.innnerWidth / window.innerHeight, 0.1, 1000);\n\n    useEffect(() => {\n        scene = new THREE.Scene();\n        camera = new THREE.PerspectiveCamera(75, window.innnerWidth / window.innerHeight, 0.1, 1000);\n    })\n        \n        \n        var renderer = new THREE.WebGLRenderer();\n        renderer.setSize(window.innerWidth, window.innerHeight);\n        ref.current.appendChild(renderer.domElement);\n\n        const loader = new GLTFLoader();\n        loader.load('https://lauriaristorage.blob.core.windows.net/objects/aa78b917-914f-4fda-bd1b-4e9ff8972e77/corridorFloor.gltf', function(gltf){\n            scene.add(gltf.scene);\n        });\n        const light = new THREE.PointLight(0xffffff, 2, 200);\n        light.position.set(4.5,10,4.5);\n        scene.add(light);\n    \n\n\n\n    return(\n        <>\n            <div ref={ref}></div>\n        </>\n    )\n}*/\n\nconst Vis = () => {\n  const {\n    useRef,\n    useEffect,\n    useState\n  } = React;\n  const mount = useRef(null);\n  const [isAnimating, setAnimating] = useState(true);\n  const controls = useRef(null);\n  useEffect(() => {\n    let width = mount.current.clientWidth;\n    let height = mount.current.clientHeight;\n    let frameId;\n    const scene = new THREE.Scene();\n    const camera = new THREE.PerspectiveCamera(75, width / height, 0.1, 1000);\n    const renderer = new THREE.WebGLRenderer({\n      antialias: true\n    });\n    const geometry = new THREE.BoxGeometry(1, 1, 1);\n    const material = new THREE.MeshBasicMaterial({\n      color: 0xff00ff\n    });\n    const cube = new THREE.Mesh(geometry, material);\n    camera.position.z = 4;\n    scene.add(cube);\n    renderer.setClearColor('#000000');\n    renderer.setSize(width, height);\n\n    const renderScene = () => {\n      renderer.render(scene, camera);\n    };\n\n    const handleResize = () => {\n      width = mount.current.clientWidth;\n      height = mount.current.clientHeight;\n      renderer.setSize(width, height);\n      camera.aspect = width / height;\n      camera.updateProjectionMatrix();\n      renderScene();\n    };\n\n    const animate = () => {\n      cube.rotation.x += 0.01;\n      cube.rotation.y += 0.01;\n      renderScene();\n      frameId = window.requestAnimationFrame(animate);\n    };\n\n    const start = () => {\n      if (!frameId) {\n        frameId = requestAnimationFrame(animate);\n      }\n    };\n\n    const stop = () => {\n      cancelAnimationFrame(frameId);\n      frameId = null;\n    }; //mount.current.apendChild(renderer.domElement)\n\n\n    window.addEventListener('resize', handleResize);\n    start();\n    controls.current = {\n      start,\n      stop\n    };\n    renderer.setSize(window.innerWidth, window.innerHeight); //mount.current.appendChild(renderer.domElement);\n\n    const loader = new GLTFLoader();\n    loader.load('https://lauriaristorage.blob.core.windows.net/objects/aa78b917-914f-4fda-bd1b-4e9ff8972e77/corridorFloor.gltf', function (gltf) {\n      scene.add(gltf.scene);\n    });\n    const light = new THREE.PointLight(0xffffff, 2, 200);\n    light.position.set(4.5, 10, 4.5);\n    scene.add(light);\n    return () => {\n      stop();\n      window.removeEventListener('resize', handleResize);\n      mount.current.removeChild(renderer.domElement);\n      scene.remove(cube);\n      geometry.dispose();\n      material.dispose();\n    };\n  }, []);\n  useEffect(() => {\n    if (isAnimating) {\n      controls.current.start();\n    } else {\n      controls.current.stop();\n    }\n  }, [isAnimating]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"vis\",\n    ref: mount,\n    onClick: () => setAnimating(!isAnimating),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 12\n    }\n  });\n};\n\nexport default Vis;","map":{"version":3,"sources":["/Users/arnaudavocatgros/Documents/GitHub/AR_VR_Map_WebSite/src/GLTF.js"],"names":["THREE","OrbitControls","GLTF","GLTFLoader","React","useEffect","useRef","Vis","useState","mount","isAnimating","setAnimating","controls","width","current","clientWidth","height","clientHeight","frameId","scene","Scene","camera","PerspectiveCamera","renderer","WebGLRenderer","antialias","geometry","BoxGeometry","material","MeshBasicMaterial","color","cube","Mesh","position","z","add","setClearColor","setSize","renderScene","render","handleResize","aspect","updateProjectionMatrix","animate","rotation","x","y","window","requestAnimationFrame","start","stop","cancelAnimationFrame","addEventListener","innerWidth","innerHeight","loader","load","gltf","light","PointLight","set","removeEventListener","removeChild","domElement","remove","dispose"],"mappings":"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","sourcesContent":["import * as THREE from \"../node_modules/three/build/three.module.js\"\nimport {OrbitControls} from \"../node_modules/three/examples/jsm/controls/OrbitControls.js\"\nimport {GLTF, GLTFLoader} from \"../node_modules/three/examples/jsm/loaders/GLTFLoader.js\"\nimport React, { useEffect,useRef} from \"react\";\n\n/*export default function GLTFView(props){\n    const ref = useRef();\n    var scene = new THREE.Scene();\n    var camera = new THREE.PerspectiveCamera(75, window.innnerWidth / window.innerHeight, 0.1, 1000);\n\n    useEffect(() => {\n        scene = new THREE.Scene();\n        camera = new THREE.PerspectiveCamera(75, window.innnerWidth / window.innerHeight, 0.1, 1000);\n    })\n        \n        \n        var renderer = new THREE.WebGLRenderer();\n        renderer.setSize(window.innerWidth, window.innerHeight);\n        ref.current.appendChild(renderer.domElement);\n\n        const loader = new GLTFLoader();\n        loader.load('https://lauriaristorage.blob.core.windows.net/objects/aa78b917-914f-4fda-bd1b-4e9ff8972e77/corridorFloor.gltf', function(gltf){\n            scene.add(gltf.scene);\n        });\n        const light = new THREE.PointLight(0xffffff, 2, 200);\n        light.position.set(4.5,10,4.5);\n        scene.add(light);\n    \n\n\n\n    return(\n        <>\n            <div ref={ref}></div>\n        </>\n    )\n}*/\n\nconst Vis = () => {\n    const { useRef, useEffect, useState } = React\n    const mount = useRef(null)\n    const [isAnimating, setAnimating] = useState(true)\n    const controls = useRef(null)\n    \n    useEffect(() => {\n      let width = mount.current.clientWidth\n      let height = mount.current.clientHeight\n      let frameId\n  \n      const scene = new THREE.Scene()\n      const camera = new THREE.PerspectiveCamera(75, width / height, 0.1, 1000)\n      const renderer = new THREE.WebGLRenderer({ antialias: true })\n      const geometry = new THREE.BoxGeometry(1, 1, 1)\n      const material = new THREE.MeshBasicMaterial({ color: 0xff00ff })\n      const cube = new THREE.Mesh(geometry, material)\n  \n      camera.position.z = 4\n      scene.add(cube)\n      renderer.setClearColor('#000000')\n      renderer.setSize(width, height)\n  \n      const renderScene = () => {\n        renderer.render(scene, camera)\n      }\n  \n      const handleResize = () => {\n        width = mount.current.clientWidth\n        height = mount.current.clientHeight\n        renderer.setSize(width, height)\n        camera.aspect = width / height\n        camera.updateProjectionMatrix()\n        renderScene()\n      }\n      \n      const animate = () => {\n        cube.rotation.x += 0.01\n        cube.rotation.y += 0.01\n  \n        renderScene()\n        frameId = window.requestAnimationFrame(animate)\n      }\n  \n      const start = () => {\n        if (!frameId) {\n          frameId = requestAnimationFrame(animate)\n        }\n      }\n  \n      const stop = () => {\n        cancelAnimationFrame(frameId)\n        frameId = null\n      }\n  \n      //mount.current.apendChild(renderer.domElement)\n      window.addEventListener('resize', handleResize)\n      start()\n  \n      controls.current = { start, stop }\n      renderer.setSize(window.innerWidth, window.innerHeight);\n      //mount.current.appendChild(renderer.domElement);\n\n      const loader = new GLTFLoader();\n      loader.load('https://lauriaristorage.blob.core.windows.net/objects/aa78b917-914f-4fda-bd1b-4e9ff8972e77/corridorFloor.gltf', function(gltf){\n          scene.add(gltf.scene);\n      });\n      const light = new THREE.PointLight(0xffffff, 2, 200);\n      light.position.set(4.5,10,4.5);\n      scene.add(light);\n      \n      return () => {\n        stop()\n        window.removeEventListener('resize', handleResize)\n        mount.current.removeChild(renderer.domElement)\n  \n        scene.remove(cube)\n        geometry.dispose()\n        material.dispose()\n      }\n    }, [])\n\n   \n    \n\n  \n    useEffect(() => {\n      if (isAnimating) {\n        controls.current.start()\n      } else {\n        controls.current.stop()\n      }\n    }, [isAnimating])\n    \n    return <div className=\"vis\" ref={mount} onClick={() => setAnimating(!isAnimating)} />\n  }\n\n  export default Vis;"]},"metadata":{},"sourceType":"module"}