{"ast":null,"code":"var _jsxFileName = \"/Users/arnaudavocatgros/Documents/GitHub/AR_VR_Map_WebSite/src/App.js\";\nimport Header from './Header';\nimport { useCookies } from \"react-cookie\";\nimport React, { useEffect, useState } from \"react\";\nimport Workspace from './Workspace';\nimport './App.css';\nexport default function App() {\n  const [cookies, setCookie, removeCookie] = useCookies([\"user\"]);\n  const [loggedInUser, setLoggedInUser] = useState('false');\n  const [test, setTest] = useState();\n  useEffect(() => {\n    if (cookies.username === undefined) {\n      setLoggedInUser('false');\n    } else {\n      setLoggedInUser('true');\n    }\n  });\n  useEffect(() => {\n    /*var updatedCookies = cookies;\n    console.log(cookies.username);\n    if(cookies.username === undefined && loggedInUser==='true'){\n        setLoggedInUser('false');\n        updatedCookies.isLogged = 'false';\n        setCookie(updatedCookies);\n    }\n    else if(cookies.username !== undefined && loggedInUser === 'false'){\n        setLoggedInUser('true');\n        updatedCookies.isLogged = 'true';\n        setCookie(updatedCookies);\n    }*/\n  }, [loggedInUser, cookies]);\n  useEffect(() => {\n    console.log(cookies.username);\n    console.log(loggedInUser); //console.log(loggedInUser);\n  }, [loggedInUser]);\n\n  function handleLogged(value) {\n    setLoggedInUser(value);\n  }\n\n  function handleCookie(set, name, value, options) {\n    console.log(\"handle cookies\");\n\n    if (set === 'true') {\n      setCookie(name, value, options);\n\n      if (name !== 'isLogged' || value !== 'false') {\n        setLoggedInUser('true');\n      } else if (name === 'isLogged' && value === 'false') {\n        setLoggedInUser('false');\n      }\n    } else {\n      removeCookie(name);\n      setLoggedInUser('false');\n    }\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Header, {\n    handleLoging: handleLogged,\n    logged: loggedInUser,\n    cookies: cookies,\n    handleCookie: handleCookie,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Workspace, {\n    cookies: cookies,\n    logged: loggedInUser,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"gltf-viewer\", {\n    interactive: true,\n    width: \"300\",\n    height: \"300\",\n    src: \"../public/corridorFloor.gltf\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"img\", {\n    src: \"../public/corridorFloor.gltf\",\n    alt: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }\n  }));\n}","map":{"version":3,"sources":["/Users/arnaudavocatgros/Documents/GitHub/AR_VR_Map_WebSite/src/App.js"],"names":["Header","useCookies","React","useEffect","useState","Workspace","App","cookies","setCookie","removeCookie","loggedInUser","setLoggedInUser","test","setTest","username","undefined","console","log","handleLogged","value","handleCookie","set","name","options"],"mappings":";AAAA,OAAOA,MAAP,MAAmB,UAAnB;AACA,SAASC,UAAT,QAA2B,cAA3B;AACA,OAAOC,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAO,WAAP;AAEA,eAAe,SAASC,GAAT,GAAc;AACzB,QAAM,CAACC,OAAD,EAAUC,SAAV,EAAqBC,YAArB,IAAqCR,UAAU,CAAC,CAAC,MAAD,CAAD,CAArD;AACA,QAAM,CAACS,YAAD,EAAeC,eAAf,IAAkCP,QAAQ,CAAC,OAAD,CAAhD;AACA,QAAM,CAACQ,IAAD,EAAOC,OAAP,IAAkBT,QAAQ,EAAhC;AAIAD,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAGI,OAAO,CAACO,QAAR,KAAqBC,SAAxB,EAAkC;AAC9BJ,MAAAA,eAAe,CAAC,OAAD,CAAf;AACH,KAFD,MAGI;AACAA,MAAAA,eAAe,CAAC,MAAD,CAAf;AACH;AACJ,GAPQ,CAAT;AASAR,EAAAA,SAAS,CAAC,MAAM;AACZ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACK,GAbQ,EAaP,CAACO,YAAD,EAAeH,OAAf,CAbO,CAAT;AAeAJ,EAAAA,SAAS,CAAC,MAAM;AACZa,IAAAA,OAAO,CAACC,GAAR,CAAYV,OAAO,CAACO,QAApB;AACAE,IAAAA,OAAO,CAACC,GAAR,CAAYP,YAAZ,EAFY,CAGZ;AACH,GAJQ,EAIN,CAACA,YAAD,CAJM,CAAT;;AAMA,WAASQ,YAAT,CAAsBC,KAAtB,EAA4B;AACxBR,IAAAA,eAAe,CAACQ,KAAD,CAAf;AACH;;AAGD,WAASC,YAAT,CAAsBC,GAAtB,EAA2BC,IAA3B,EAAiCH,KAAjC,EAAwCI,OAAxC,EAAgD;AAC5CP,IAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;;AACA,QAAGI,GAAG,KAAK,MAAX,EAAkB;AACdb,MAAAA,SAAS,CAACc,IAAD,EAAOH,KAAP,EAAcI,OAAd,CAAT;;AACA,UAAGD,IAAI,KAAG,UAAP,IAAqBH,KAAK,KAAK,OAAlC,EAA0C;AACtCR,QAAAA,eAAe,CAAC,MAAD,CAAf;AACH,OAFD,MAGK,IAAGW,IAAI,KAAK,UAAT,IAAuBH,KAAK,KAAK,OAApC,EAA4C;AAC7CR,QAAAA,eAAe,CAAC,OAAD,CAAf;AACH;AACJ,KARD,MASI;AACAF,MAAAA,YAAY,CAACa,IAAD,CAAZ;AACAX,MAAAA,eAAe,CAAC,OAAD,CAAf;AACH;AACJ;;AACD,sBACI,uDACI,oBAAC,MAAD;AAAQ,IAAA,YAAY,EAAEO,YAAtB;AAAoC,IAAA,MAAM,EAAER,YAA5C;AAA0D,IAAA,OAAO,EAAEH,OAAnE;AAA4E,IAAA,YAAY,EAAEa,YAA1F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAEI,oBAAC,SAAD;AAAW,IAAA,OAAO,EAAEb,OAApB;AAA6B,IAAA,MAAM,EAAEG,YAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,eAGI;AAAa,IAAA,WAAW,MAAxB;AAAyB,IAAA,KAAK,EAAC,KAA/B;AAAqC,IAAA,MAAM,EAAC,KAA5C;AAAkD,IAAA,GAAG,EAAC,8BAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHJ,eAII;AAAK,IAAA,GAAG,EAAC,8BAAT;AAAwC,IAAA,GAAG,EAAC,EAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJJ,CADJ;AAQH","sourcesContent":["import Header from './Header'\nimport { useCookies } from \"react-cookie\"\nimport React, {useEffect, useState} from \"react\";\nimport Workspace from './Workspace';\nimport './App.css'\n\nexport default function App(){\n    const [cookies, setCookie, removeCookie] = useCookies([\"user\"]);\n    const [loggedInUser, setLoggedInUser] = useState('false');\n    const [test, setTest] = useState();\n\n    \n\n    useEffect(() => {\n        if(cookies.username === undefined){\n            setLoggedInUser('false')\n        }\n        else{\n            setLoggedInUser('true')\n        }\n    });\n\n    useEffect(() => {\n        /*var updatedCookies = cookies;\n        console.log(cookies.username);\n        if(cookies.username === undefined && loggedInUser==='true'){\n            setLoggedInUser('false');\n            updatedCookies.isLogged = 'false';\n            setCookie(updatedCookies);\n        }\n        else if(cookies.username !== undefined && loggedInUser === 'false'){\n            setLoggedInUser('true');\n            updatedCookies.isLogged = 'true';\n            setCookie(updatedCookies);\n        }*/\n    },[loggedInUser, cookies]);\n\n    useEffect(() => {\n        console.log(cookies.username)\n        console.log(loggedInUser);\n        //console.log(loggedInUser);\n    }, [loggedInUser])\n\n    function handleLogged(value){\n        setLoggedInUser(value)\n    }\n\n\n    function handleCookie(set, name, value, options){\n        console.log(\"handle cookies\")\n        if(set === 'true'){\n            setCookie(name, value, options);\n            if(name!=='isLogged' || value !== 'false'){\n                setLoggedInUser('true');\n            }\n            else if(name === 'isLogged' && value === 'false'){\n                setLoggedInUser('false');\n            }\n        }\n        else{\n            removeCookie(name);\n            setLoggedInUser('false');\n        }\n    }\n    return(\n        <>\n            <Header handleLoging={handleLogged} logged={loggedInUser} cookies={cookies} handleCookie={handleCookie} ></Header>\n            <Workspace cookies={cookies} logged={loggedInUser} ></Workspace>\n            <gltf-viewer interactive width=\"300\" height=\"300\" src=\"../public/corridorFloor.gltf\"></gltf-viewer>\n            <img src=\"../public/corridorFloor.gltf\" alt=\"\" />\n        </>\n    )\n}"]},"metadata":{},"sourceType":"module"}